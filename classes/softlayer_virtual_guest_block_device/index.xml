<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Softlayer_virtual_guest_block_device on SoftLayer API</title>
    <link>https://softlayer.github.io/classes/softlayer_virtual_guest_block_device/</link>
    <description>Recent content in Softlayer_virtual_guest_block_device on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/classes/softlayer_virtual_guest_block_device/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CreateStandardTemplate.php</title>
      <link>https://softlayer.github.io/php/CreateStandardTemplate.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/CreateStandardTemplate.php/</guid>
      <description>&amp;lt;?php /** * Create standard image template. * * The example creates a standard image template from a CCI * which contains 3 disk. for more information see below. * * Important manual pages: * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device * http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createArchiveTransaction * http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest * * License: http://sldn.softlayer.com/article/License * Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#39;Softlayer/SoapClient.class.php&amp;#39;); $username = &amp;#39;set me&amp;#39;; $key = &amp;#39;set me&amp;#39;; $endPoint = &amp;#34;set me&amp;#34;; /** * Building a skeleton SoftLayer_Virtual_Guest_Block_Device object * containing the disk which will be in the image template * It is not necesary to specify all disks in the virtual server * only is required specify the first disk.</description>
    </item>
    
    <item>
      <title>create_image_template_standard.pl</title>
      <link>https://softlayer.github.io/perl/create_image_template_standard.pl/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/perl/create_image_template_standard.pl/</guid>
      <description># Create standard image template. # # The example creates a standard image template from a CCI # which contains 3 disk. for more information see below. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createArchiveTransaction # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; use lib &amp;#39;C:/softlayerApis/perl/softlayer-api-perl-client-master/&amp;#39;; use SoftLayer::API::SOAP; use Data::Dumper; # Your SoftLayer API username and key. my $username = &amp;#39;set me&amp;#39;; my $key = &amp;#39;set me&amp;#39;; my $end_point = &amp;#39;set me&amp;#39;; # Building a skeleton SoftLayer_Virtual_Guest_Block_Device object # containing the disk which will be in the image template # It is not neccesary to specify all disks in the virtual server # only is required specify the firts disk.</description>
    </item>
    
    <item>
      <title>create_image_template_standard.rb</title>
      <link>https://softlayer.github.io/ruby/create_image_template_standard.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_image_template_standard.rb/</guid>
      <description># Create standard image template. # # The example creates a standard image template from a CCI # which contains 3 disk. for more information see below. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createArchiveTransaction # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>create_template.py</title>
      <link>https://softlayer.github.io/python/create_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create image template. The script creates a standard image template, it makes a call to the SoftLayer_Virtual_Guest::createArchiveTransaction method sending the IDs of the disks in the request, the response will provide an ID property which is the Transaction number until itÂ´s being fully provisioned. For more information please see below. Important manual pages: https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createArchiveTransaction https://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # The virtual guest ID you want to create a template virtualGuestId = 39202937 # The name of the image template groupName = &amp;#39;fmirGroupImageTemplate&amp;#39; # An optional note for the image template note = &amp;#39;an optional fmir note&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Virtual_Guest_Block_Device object containing the disks you want to the image.</description>
    </item>
    
    <item>
      <title>get_block_devices.rb</title>
      <link>https://softlayer.github.io/ruby/get_block_devices.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_block_devices.rb/</guid>
      <description># Retrieve a computing instance&amp;#39;s block devices. Block devices link disk images to computing instances. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBlockDevices # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin virtual_guest_block_device = virtual_guest_service.object_with_id(virtual_guest_id) .getBlockDevices ap virtual_guest_block_device rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script.</description>
    </item>
    
    <item>
      <title>SoftLayer_Virtual_Guest_Block_Device</title>
      <link>https://softlayer.github.io/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device/</guid>
      <description>SoftLayer_Virtual_Guest_Block_Device Datatype   Description The block device data type presents the structure in which all block devices will be presented. A block device attaches a disk image to a guest. Internally, the structure supports various virtualization platforms with no change to external interaction.
A guest, also known as a virtual server, represents an allocation of resources on a virtual host.
   Local bootableFlag  A flag indicating if a block device can be booted from.</description>
    </item>
    
  </channel>
</rss>