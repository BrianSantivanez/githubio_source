<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Softlayer_product_package on SoftLayer API</title>
    <link>https://softlayer.github.io/classes/softlayer_product_package/</link>
    <description>Recent content in Softlayer_product_package on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/classes/softlayer_product_package/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>createTicketAttachedFile.rb</title>
      <link>https://softlayer.github.io/ruby/createTicketAttachedFile.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createTicketAttachedFile.rb/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; user = &amp;#34;&amp;#34; api_key = &amp;#34;apikey_goes_here&amp;#34; endpoint_url = &amp;#34;http://api.softlayer.com/v3/sldn/xmlrpc/&amp;#34; # Declare the API client to use the SoftLayer_Product_Package API service client = SoftLayer::Client.new(:username =&amp;gt; user,:api_key =&amp;gt; api_key, :endpoint_url =&amp;gt;endpoint_url ) ticketService = client.service_named(&amp;#34;SoftLayer_Ticket&amp;#34;) templateObject = { &amp;#39;assignedUserId&amp;#39; =&amp;gt; 104672, &amp;#39;notifyUserOnUpdateFlag&amp;#39; =&amp;gt; true, &amp;#39;subjectId&amp;#39; =&amp;gt; 1522, &amp;#39;title&amp;#39; =&amp;gt; &amp;#39;ticket example&amp;#39; } contents = &amp;#39;this the ticket contet&amp;#39; attachedFiles = [ { &amp;#39;data&amp;#39; =&amp;gt; &amp;#39;aHR0cHM6Ly88VXNlcm5hbWU+OjxBUGlLZXk+apikey_goes_hereapikey_goes_hereapikey_goes_hereapikey_goes_hereapikey_goes_hereCiAgICBdDQp9&amp;#39;, &amp;#39;filename&amp;#39; =&amp;gt; &amp;#34;test2.txt&amp;#34; } ] begin # creates the notification result = ticketService.</description>
    </item>
    
    <item>
      <title>create_virtual_guest.go</title>
      <link>https://softlayer.github.io/go/create_virtual_guest.go/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/create_virtual_guest.go/</guid>
      <description>/* Order a new Virtual Guest Build a SoftLayer_Container_Product_Order_Virtual_Guest object for a new virtual server order and pass it to the SoftLayer_Product_Order API service to order it. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key  username := &amp;#34;&amp;#34; apikey := &amp;#34;apikey_goes_here&amp;#34; // Declare the hostname, domain, location, packageId and quantity for the virtual 	// server you wish to order  quantity := 1 hostname := &amp;#34;test-template&amp;#34; domain := &amp;#34;example.</description>
    </item>
    
    <item>
      <title>filtersRuby.rb</title>
      <link>https://softlayer.github.io/ruby/filtersRuby.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/filtersRuby.rb/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. # Generate an API key at the SoftLayer Customer Portal: # https://manage.softlayer.com/Administrative/apiKeychain username = &amp;#39;&amp;#39; key = &amp;#39;apikey_goes_here&amp;#39; # The package ID you wish to see the prices list packageId = 0 # The categoryID you which to filter the returned list by SoftLayer_Product_Package::getItemPrices method categoryIDtofilter = 15 # Declare the API client client = SoftLayer::Client.new( :username =&amp;gt; username,:api_key =&amp;gt; key) productPackageService = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] # Declaring the object mask to get the item id, description and categoryId objectMask = &amp;#34;mask[id,item.</description>
    </item>
    
    <item>
      <title>monitor_get_available_configuration_values.rb</title>
      <link>https://softlayer.github.io/ruby/monitor_get_available_configuration_values.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/monitor_get_available_configuration_values.rb/</guid>
      <description># Get the available configuration for the monitor agent # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getAvailableConfigurationValues # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT_URL = &amp;#39;set me&amp;#39; # Declare the API client to use the SoftLayer_Product_Package API service client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY, endpoint_url: ENDPOINT_URL) # The monitor agent id you wish to get the actual configuration monitor_agent_id = 121_169_6 monitor_service = client.</description>
    </item>
    
    <item>
      <title>order_endurance_storage.go</title>
      <link>https://softlayer.github.io/go/order_endurance_storage.go/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_endurance_storage.go/</guid>
      <description>/* Order a block storage (endurance) The script orders a block storage (endurance) device, with 40GB storage and 0.25 IOPS, it makes a single call to SoftLayer_Product_Order::verifyOrder method which can be replaced by placeOrder(). Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Enterprise http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;&amp;#34; apikey := &amp;#34;apikey_goes_here&amp;#34; // Declare the location, packageId and quantity for the storage you wish to order 	quantity := 1 location := &amp;#34;MEXICO&amp;#34; packageId := 240 osKeyName := &amp;#34;LINUX&amp;#34; // Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>placeOrderNAS.php</title>
      <link>https://softlayer.github.io/php/placeOrderNAS.php/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/placeOrderNAS.php/</guid>
      <description>&amp;lt;?php # Order a NAS # # Build a SoftLayer_Container_Product_Order_Network_Storage_Nas # object for a new CDN account order and pass it to the SoftLayer_Product_Order # API service to order it. In this script we&amp;#39;ll order a NAS. See below for more details. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Nas # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require_once (&amp;#39;Softlayer/SoapClient.class.php&amp;#39;); // Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>Ordering Vyatta Network Gateways</title>
      <link>https://softlayer.github.io/python/orderVyatta/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderVyatta/</guid>
      <description>This example goes over how to order a Single or HA vyatta with a bunch of optional settings. More context around ordering can be found in https://softlayer.github.io/python/orderBareMetal/ and https://softlayer.github.io/python/ordering_slcli/
import SoftLayer from SoftLayer.managers import ordering import sys from pprint import pprint as pp import logging logging.debug(&amp;#34;Starting up&amp;#34;) # Requires softlayer-python 5.4.3+ class vyattaOrderer(): def __init__(self): if SoftLayer.__version__ &amp;lt; &amp;#39;v5.4.3&amp;#39;: print(&amp;#34;SoftLayer needs to be 5.4.3+, is currently %s&amp;#34; % SoftLayer.__version__) self.client = SoftLayer.</description>
    </item>
    
    <item>
      <title>SoftLayer_Product_Package</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/</guid>
      <description>SoftLayer_Product_Package Service Datatype   Description Every SoftLayer_Product_Package contains information related products and services that SoftLayer sells. The configuration of this package reveals which categories are required to place an order for this package. Every package has items, item prices, locations, regions, and a configuration. This service is the starting point for ordering servers, and other services we provide.
Methods    getAccountRestrictedActivePresets  Retrieve the preset configurations available only for the authenticated account and this package.</description>
    </item>
    
    <item>
      <title>Ordering with KeyNames</title>
      <link>https://softlayer.github.io/python/ordering_slcli/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/ordering_slcli/</guid>
      <description>Version 5.4.0 of the Softlayer-python project introducted some managers and CLI functions that greatly simplify the ordering processes via the api.
Building a package still requires a few steps however.
1. Find the package name slcli order package-list The most common packages are the following:
   Description Package KeyName Package Type     Additional Products ADDITIONAL_PRODUCTS ADDITIONAL_SERVICES   Cloud Server CLOUD_SERVER VIRTUAL_SERVER_INSTANCE   Network Gateway Appliance NETWORK_GATEWAY_APPLIANCE BARE_METAL_GATEWAY   Load Balancers LOAD_BALANCERS ADDITIONAL_SERVICES_LOAD_BALANCER   Bare Metal Server BARE_METAL_SERVER BARE_METAL_CPU_FAST_PROVISION   POWER8 TULETA IBM_POWER_8 BARE_METAL_POWER_CPU   Object Storage OBJECT_STORAGE ADDITIONAL_SERVICES_OBJECT_STORAGE   Firewall FIREWALL ADDITIONAL_SERVICES_FIREWALL   Storage As A Service (StaaS) STORAGE_AS_A_SERVICE_STAAS STORAGE_AS_A_SERVICE   Load Balancer As A Service (LBaaS) LBAAS LOAD_BALANCER_AS_A_SERVICE   Dedicated Host DEDICATED_HOST DEDICATED_HOST   Public Virtual Server PUBLIC_CLOUD_SERVER VIRTUAL_SERVER_INSTANCE    Once we have selected a package we need to find out where we can order this package.</description>
    </item>
    
    <item>
      <title>CreateServer.cs</title>
      <link>https://softlayer.github.io/csharp/CreateServer.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/CreateServer.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;CreateServer.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //-----------------------------------------------------------------------  namespace CreateServerNamespace { using System; using System.Collections.Generic; class CreateServer { /// &amp;lt;summary&amp;gt;  /// Order a new server.  /// Building a SoftLayer_Container_Product_Order object for a new  /// server order and pass it to the SoftLayer_Product_Order API service to order  /// it. In this care we&amp;#39;ll order a Xeon 3460 server with 2G RAM, 100mbit NICs,  /// 2000GB bandwidth, a 500G SATA drive, CentOS 5 32-bit, and default server  /// order options.</description>
    </item>
    
    <item>
      <title>GetRamOptions.cs</title>
      <link>https://softlayer.github.io/csharp/GetRamOptions.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/GetRamOptions.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;GetRamOptions.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; class GetRamOptions { /// &amp;lt;summary&amp;gt; /// Get Reload Options /// This script retrieves all options available for reload from a Virtual Guest. It is only necessary /// to declare the hostname from the vsi that you wish to reload operating system and the type of operating system. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.</description>
    </item>
    
    <item>
      <title>GetReloadOptions.cs</title>
      <link>https://softlayer.github.io/csharp/GetReloadOptions.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/GetReloadOptions.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;GetReloadOptions.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; class GetReloadOptions { /// &amp;lt;summary&amp;gt; /// Get Reload Options /// This script retrieves all options available for reload from a Virtual Guest. It is only necessary /// to declare the hostname from the vsi that you wish to reload operating system and the type of operating system. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.</description>
    </item>
    
    <item>
      <title>OrderConsistentPerfBlockStorage.java</title>
      <link>https://softlayer.github.io/java/OrderConsistentPerfBlockStorage.java/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/java/OrderConsistentPerfBlockStorage.java/</guid>
      <description>package api.storage; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.Location; import com.softlayer.api.service.container.product.order.network.performancestorage.Iscsi; import com.softlayer.api.service.location.Group; import com.softlayer.api.service.location.group.Pricing; import com.softlayer.api.service.network.storage.iscsi.os.Type; import com.softlayer.api.service.product.Item; import com.softlayer.api.service.product.Order; import com.softlayer.api.service.product.Package; import com.softlayer.api.service.product.item.Price; import java.math.BigDecimal; import java.util.ArrayList; import java.util.List; import java.util.function.Predicate; import java.util.stream.Collectors; /** * Order a consistent block storage (performance ISCSI). * * This example shows how to order a SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi * by sending following data: * quantity - Quantity of &amp;#34;Block Storages&amp;#34; to order * location - Location where storage will be hosted * storageSize - The size in GB of the Block Storage * iops - Number of IOPS between &amp;#34;100&amp;#34; and &amp;#34;6000&amp;#34; by intervals of 100.</description>
    </item>
    
    <item>
      <title>OrderConsistentPerfBlockStorage.php</title>
      <link>https://softlayer.github.io/php/OrderConsistentPerfBlockStorage.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/OrderConsistentPerfBlockStorage.php/</guid>
      <description>&amp;lt;?php /** * Order Consistent Performance Block Storage * * This script orders a Consistent Performance Block Storage * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi * * @license &amp;lt;http://sldn.softlayer.com/wiki/index.php/license&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once dirname(__FILE__) . &amp;#34;/SoftLayer/SoapClient.class.php&amp;#34;; /** * Your SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * Your SoftLayer API key * Generate one at: https://control.</description>
    </item>
    
    <item>
      <title>OrderConsistentPerfFileStorage.java</title>
      <link>https://softlayer.github.io/java/OrderConsistentPerfFileStorage.java/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/java/OrderConsistentPerfFileStorage.java/</guid>
      <description>package api.storage; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.Location; import com.softlayer.api.service.container.product.order.network.performancestorage.Nfs; import com.softlayer.api.service.location.Group; import com.softlayer.api.service.location.group.Pricing; import com.softlayer.api.service.product.Item; import com.softlayer.api.service.product.Order; import com.softlayer.api.service.product.Package; import com.softlayer.api.service.product.item.Price; import java.math.BigDecimal; import java.util.ArrayList; import java.util.List; import java.util.function.Predicate; import java.util.stream.Collectors; /** * Order a consistent file storage (performance NFS). * * This example shows how to order a SoftLayer_Container_Product_Order_Network_PerformanceStorage_Nfs * by sending following data: * quantity - Quantity of &amp;#34;File Storages&amp;#34; to order * location - Location where storage will be hosted * storageSize - The size in GB of the File Storage * iops - Number of IOPS between &amp;#34;100&amp;#34; and &amp;#34;6000&amp;#34; by intervals of 100.</description>
    </item>
    
    <item>
      <title>OrderConsistentPerfFileStorage.php</title>
      <link>https://softlayer.github.io/php/OrderConsistentPerfFileStorage.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/OrderConsistentPerfFileStorage.php/</guid>
      <description>&amp;lt;?php /** * Order Consistent Performance File Storage * * This script orders a Consistent Performance File Storage * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_PerformanceStorage_Nfs * * @license &amp;lt;http://sldn.softlayer.com/wiki/index.php/license&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once dirname(__FILE__) . &amp;#34;/SoftLayer/SoapClient.class.php&amp;#34;; /** * Your SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * Your SoftLayer API key * Generate one at: https://control.</description>
    </item>
    
    <item>
      <title>OrderDedicatedFirewall.cs</title>
      <link>https://softlayer.github.io/csharp/OrderDedicatedFirewall.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/OrderDedicatedFirewall.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;OrderDedicatedFirewall.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //-----------------------------------------------------------------------  namespace OrderDedicatedFirewallNamespace { using System; using System.Collections.Generic; class OrderDedicatedFirewall { /// &amp;lt;summary&amp;gt;  /// Order dedicated Firewalls.  /// &amp;lt;/summary&amp;gt;  /// &amp;lt;manualPages&amp;gt;  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price  /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder  /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder  /// &amp;lt;/manualPages&amp;gt;  static void Main(string[] args) { // Your username  string username = &amp;#34;set me&amp;#34;; // Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>OrderDedicatedHost.java</title>
      <link>https://softlayer.github.io/java/OrderDedicatedHost.java/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/java/OrderDedicatedHost.java/</guid>
      <description>package DedicatedHost; import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.Hardware; import com.softlayer.api.service.hardware.Router; import com.softlayer.api.service.network.Component; import com.softlayer.api.service.product.Order; import com.softlayer.api.service.product.item.Price; import java.util.ArrayList; import java.util.List; /** * Order Dedicated Host server. * * Important manual pages: * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price * http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; * @version 1.0 */ public class OrderDedicatedHost { public static void main(String args[]){ // Declare username and api key  String username = &amp;#34;set me&amp;#34;; String apiKey = &amp;#34;set me&amp;#34;; // Required variables to place an order  long quantity = 1; String location = &amp;#34;MEXICO&amp;#34;; long packageId = 813; // The backend router you want to use to order the dedicated host.</description>
    </item>
    
    <item>
      <title>OrderEnduranceBlockStorage.php</title>
      <link>https://softlayer.github.io/php/OrderEnduranceBlockStorage.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/OrderEnduranceBlockStorage.php/</guid>
      <description>&amp;lt;?php /** * Order Endurance Block Storage * * This script orders an Endurance Block Storage * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise * * @license &amp;lt;http://sldn.softlayer.com/wiki/index.php/license&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once dirname(__FILE__) . &amp;#34;/SoftLayer/SoapClient.class.php&amp;#34;; /** * Your SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * Your SoftLayer API key * Generate one at: https://control.softlayer.com/account/users * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the location, packageId and quantity for the Endurance that you wish to order * @var int $location * @var int $packageId * @var int $quantity */ $location = 265592; // Amsterdam 1 $packageId = 240; // the packageID for order Endurance $quantity = 1; // Create a SoftLayer API client object for &amp;#34;SoftLayer_Product_Order&amp;#34; service $client = SoftLayer_SoapClient::getClient(&amp;#39;SoftLayer_Product_Order&amp;#39;, null, $username, $apiKey); /** * Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>OrderEnduranceFileStorage.php</title>
      <link>https://softlayer.github.io/php/OrderEnduranceFileStorage.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/OrderEnduranceFileStorage.php/</guid>
      <description>&amp;lt;?php /** * Order Endurance File Storage * * This script orders an Endurance File Storage * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise * * @license &amp;lt;http://sldn.softlayer.com/wiki/index.php/license&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once dirname(__FILE__) . &amp;#34;/SoftLayer/SoapClient.class.php&amp;#34;; /** * Your SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * Your SoftLayer API key * Generate one at: https://control.softlayer.com/account/users * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the location, packageId and quantity for the Endurance that you wish to order * @var int $location * @var int $packageId * @var int $quantity */ $location = 352494; // Hong Kong 2 $packageId = 240; // the packageID for order Endurance $quantity = 1; // Create a SoftLayer API client object for &amp;#34;SoftLayer_Product_Order&amp;#34; service $client = SoftLayer_SoapClient::getClient(&amp;#39;SoftLayer_Product_Order&amp;#39;, null, $username, $apiKey); /** * Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>OrderEvault.cs</title>
      <link>https://softlayer.github.io/csharp/OrderEvault.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/OrderEvault.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;OrderEvault.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace OrderEvaultNamespace { using System; using System.Collections.Generic; class OrderEvault { /// &amp;lt;summary&amp;gt; /// Example to order a Evault /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Vault /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { // Your SoftLayer username and API username. string username = &amp;#34;set me&amp;#34;; string apiKey = &amp;#34;set me&amp;#34;; int quantity = 1; // The location for the Evault string location = &amp;#34;DALLAS06&amp;#34;; // The id of the SoftLayer_Product_Package you wish to order.</description>
    </item>
    
    <item>
      <title>OrderGlobalIPv4IPv6.php</title>
      <link>https://softlayer.github.io/php/OrderGlobalIPv4IPv6.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/OrderGlobalIPv4IPv6.php/</guid>
      <description>&amp;lt;?php /** * Order a new Global IPv4/IPv6 subnet * * Important manual pages: * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Subnet * http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet * * @license &amp;lt;http://sldn.softlayer.com/wiki/index.php/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once(dirname(__FILE__) . &amp;#39;/SoftLayer/SoapClient.class.php&amp;#39;); /** * Set your SoftLayer API username and key. */ $apiUsername = &amp;#39;set me&amp;#39;; $apiKey = &amp;#39;set me&amp;#39;; /** * Set the service to use */ $serviceName =&amp;#39;SoftLayer_Product_Order&amp;#39;; /** * The number of subnets you want to order * * @var int; */ $quantity = 1; $packageId = 0; $packageService =&amp;#39;SoftLayer_Product_Package&amp;#39;; $orderService =&amp;#39;SoftLayer_Product_Order&amp;#39;; /** * Create a client to the API services to use.</description>
    </item>
    
    <item>
      <title>OrderNAS.cs</title>
      <link>https://softlayer.github.io/csharp/OrderNAS.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/OrderNAS.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;OrderNAS.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //-----------------------------------------------------------------------  namespace OrderNASNamespace { using System; using System.Collections.Generic; class OrderNAS { /// &amp;lt;summary&amp;gt;  /// Order a NAS  /// Build a SoftLayer_Container_Product_Order_Network_Storage_Nas  /// object for a new CDN account order and pass it to the SoftLayer_Product_Order  /// API service to order it. In this script we&amp;#39;ll order a NAS. See below for more details.</description>
    </item>
    
    <item>
      <title>OrderPortalStorage.cs</title>
      <link>https://softlayer.github.io/csharp/OrderPortalStorage.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/OrderPortalStorage.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;OrderPortalStorage.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //-----------------------------------------------------------------------  namespace OrderPortalStorageNamespace { using System; using System.Collections.Generic; class OrderPortalStorage { /// &amp;lt;summary&amp;gt;  /// Example to order a portal storage.  /// &amp;lt;/summary&amp;gt;  /// &amp;lt;manualPages&amp;gt;  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Disk_Image  /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order  /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price  /// &amp;lt;/manualPages  static void Main(string[] args) { // Your SoftLayer API username.</description>
    </item>
    
    <item>
      <title>OrderVLAN.cs</title>
      <link>https://softlayer.github.io/csharp/OrderVLAN.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/OrderVLAN.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;OrderVLAN.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //-----------------------------------------------------------------------  namespace OrderVLANNamespace { using System; using System.Collections.Generic; class OrderVLAN { /// &amp;lt;summary&amp;gt;  /// Example to create a new VLAN  /// the script uses the placeOrder method to order  /// a new VLAN with 32 static IP address  /// &amp;lt;/summary&amp;gt;  /// &amp;lt;manualPages&amp;gt;  /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order  /// http://sldn.</description>
    </item>
    
    <item>
      <title>OrderVSIOnDedicatedHost.java</title>
      <link>https://softlayer.github.io/java/OrderVSIOnDedicatedHost.java/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/java/OrderVSIOnDedicatedHost.java/</guid>
      <description>package DedicatedHost; import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.product.Order; import com.softlayer.api.service.product.item.Price; import com.softlayer.api.service.virtual.Guest; import java.util.ArrayList; import java.util.List; /** * Order a new Virtual Guest on a Dedicated Host server. * * Important manual pages: * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; * @version 1.0 */ public class OrderVSIOnDedicatedHost { public static void main(String args[]){ // Declare username and api key  String username = &amp;#34;set me&amp;#34;; String apiKey = &amp;#34;set me&amp;#34;; // Required values to place an order  long quantity = 1; long packageId = 46; // The ID of dedicated host  long hostId = 48501L; // Declare hostname, domain and network components of guests you want to order, add more  // guest objects if quantity is greater than 1  List&amp;lt;Guest&amp;gt; virtualGuests = new ArrayList&amp;lt;Guest&amp;gt;(); Guest guest = new Guest(); guest.</description>
    </item>
    
    <item>
      <title>OrderViyatta.cs</title>
      <link>https://softlayer.github.io/csharp/OrderViyatta.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/OrderViyatta.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;OrderVyatta.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //-----------------------------------------------------------------------  namespace OrderVyattaNamespace { using System; using System.Collections.Generic; class OrderVyatta { /// &amp;lt;summary&amp;gt;  /// Example to order a Network Gateway Appliance (Vyatta)  /// The examples orders a (Vyatta) high availability pair.  /// &amp;lt;/summary&amp;gt;  /// &amp;lt;manualPages&amp;gt;  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price  /// http://sldn.</description>
    </item>
    
    <item>
      <title>OrderVyatta.php</title>
      <link>https://softlayer.github.io/php/OrderVyatta.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/OrderVyatta.php/</guid>
      <description>&amp;lt;?php /** * Order a Network Gateway Appliance (Vyatta) * * The script orders a (Vyatta) high availability pair * it uses the SoftLayer_Product_Order::placeOrder to make the order * For more information see below: * * Important manual pages: * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * * License: http://sldn.softlayer.com/article/License * Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#39;Softlayer/SoapClient.class.php&amp;#39;); // Your SoftLayer API username and key. $username = &amp;#39;set me&amp;#39;; $key = &amp;#39;set me&amp;#39;; /** * Build a skeleton SoftLayer_Hardware_Server object to model the hostname and * domain we want for our server.</description>
    </item>
    
    <item>
      <title>PlaceOrder.cs</title>
      <link>https://softlayer.github.io/csharp/PlaceOrder.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/PlaceOrder.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;PlaceOrder.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; using System.Collections.Generic; class PlaceOrder { /// &amp;lt;summary&amp;gt;  /// Place Order  /// This script orders a Virtual Guest using SoftLayer_Product_Order::placeOrder method  /// For more information, review the following links:  /// &amp;lt;/summary&amp;gt;  /// &amp;lt;manualPages&amp;gt;  /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest  /// http://sldn.</description>
    </item>
    
    <item>
      <title>PlaceOrderCDN.cs</title>
      <link>https://softlayer.github.io/csharp/PlaceOrderCDN.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/PlaceOrderCDN.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;PlaceOrderCDN.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace PlaceOrderCDNNamespace { using System; using System.Collections.Generic; class PlaceOrderCDN { /// &amp;lt;summary&amp;gt;  /// Order a new CDN account  /// Build a SoftLayer_Container_Product_Order_Network_ContentDelivery_Account  /// object for a new CDN account order and pass it to the SoftLayer_Product_Order  /// API service to order it. In this script we&amp;#39;ll order a pay as you go bandwidth  /// and storage CDN account.</description>
    </item>
    
    <item>
      <title>PlaceOrderCDN.php</title>
      <link>https://softlayer.github.io/php/PlaceOrderCDN.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/PlaceOrderCDN.php/</guid>
      <description>&amp;lt;?php /** * Order a new CDN account * * Build a SoftLayer_Container_Product_Order_Network_ContentDelivery_Account * object for a new CDN account order and pass it to the SoftLayer_Product_Order * API service to order it. In this script we&amp;#39;ll order a pay as you go bandwidth * and storage CDN account. See below for more details. * * Important manual pages: * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_ContentDelivery_Account * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_ContentDelivery_Account * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Order/verifyOrder * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Order/placeOrder * * License: http://sldn.</description>
    </item>
    
    <item>
      <title>PlaceOrderDedicatedFirewall.php</title>
      <link>https://softlayer.github.io/php/PlaceOrderDedicatedFirewall.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/PlaceOrderDedicatedFirewall.php/</guid>
      <description>&amp;lt;?php /** * Order dedicated Firewall * Important manual pages: * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * * License &amp;lt;http://sldn.softlayer.com/wiki/index.php/license&amp;gt; * Author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#39;Softlayer/SoapClient.class.php&amp;#39;); // Your SoftLayer API username and key. $username = &amp;#39;set me&amp;#39;; $key = &amp;#39;set me&amp;#39;; // Creating a SoftLayer API client object $softLayerProductOrder = SoftLayer_SoapClient::getClient(&amp;#39;SoftLayer_Product_Order&amp;#39;, null, $username, $key); /** * Building a skeleton SoftLayer_Product_Item_Price objects. These objects contain * much more than ids, but SoftLayer&amp;#39;s ordering system only needs the price&amp;#39;s id * to know what you want to order.</description>
    </item>
    
    <item>
      <title>PlaceOrderPortableStorage.php</title>
      <link>https://softlayer.github.io/php/PlaceOrderPortableStorage.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/PlaceOrderPortableStorage.php/</guid>
      <description>&amp;lt;?php /** * Example to order a portal storage * * Important manual pages: * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Disk_Image * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price * * License: http:&amp;#39;sldn.softlayer.com/article/License * Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#39;Softlayer/SoapClient.class.php&amp;#39;); // Your SoftLayer API username and key. $username = &amp;#39;set me&amp;#39;; $key = &amp;#39;set me&amp;#39;; /** * Every item in SoftLayer&amp;#39;s product catalog is assigned an id. Use these ids * to tell the SoftLayer API which options you want in your new server.</description>
    </item>
    
    <item>
      <title>PlaceOrderUpgrade.cs</title>
      <link>https://softlayer.github.io/csharp/PlaceOrderUpgrade.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/PlaceOrderUpgrade.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;PlaceOrderUpgrade.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; using System.Collections.Generic; class PlaceOrderUpgrade { /// &amp;lt;summary&amp;gt; /// Order an upgrade for Virtual Guest /// This script orders an upgrade for Virtual Guest, in this case we will upgrade the ram for a Virtual Guest, /// It uses SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade container and SoftLayer_Product_Order::placeOrder /// method for it. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.</description>
    </item>
    
    <item>
      <title>PlaceOrderUpgrade.php</title>
      <link>https://softlayer.github.io/php/PlaceOrderUpgrade.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/PlaceOrderUpgrade.php/</guid>
      <description>&amp;lt;?php /** * Order an upgrade for Virtual Guest * * This script orders an upgrade for Virtual Guest, in this case we will upgrade the &amp;#34;ram&amp;#34; for a Virtual Guest, It uses * SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade container and SoftLayer_Product_Order::placeOrder method for it. * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade/ * @see http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price/ * * @license &amp;lt;http://sldn.softlayer.com/wiki/index.php/license&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once &amp;#34;C:/Php/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;; /** * Your SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * Your SoftLayer API key * Generate one at: https://control.</description>
    </item>
    
    <item>
      <title>PlaceOrderVirtualGuest.php</title>
      <link>https://softlayer.github.io/php/PlaceOrderVirtualGuest.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/PlaceOrderVirtualGuest.php/</guid>
      <description>&amp;lt;?php /** * Order Virtual Guest * * This script orders a Virtual Guest using SoftLayer_Product_Order::placeOrder * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware * @see http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price/ * * @license &amp;lt;http://sldn.softlayer.com/wiki/index.php/license&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once &amp;#34;C:/Php/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;; /** * Your SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * Your SoftLayer API key * Generate one at: https://control.</description>
    </item>
    
    <item>
      <title>PlaceOrderVlan.php</title>
      <link>https://softlayer.github.io/php/PlaceOrderVlan.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/PlaceOrderVlan.php/</guid>
      <description>&amp;lt;?php /** * Example to create a new VLAN. * * The script uses the placeOrder method to order * a new VLAN with 32 static IP address * * Important manual pages: * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price * * License: http://sldn.softlayer.com/article/License * Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#39;Softlayer/SoapClient.class.php&amp;#39;); // Your SoftLayer API username and key. $username = &amp;#39;set me&amp;#39;; $key = &amp;#39;set me&amp;#39;; # Building a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>ReloadOperatingSystem.cs</title>
      <link>https://softlayer.github.io/csharp/ReloadOperatingSystem.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/ReloadOperatingSystem.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;ReloadOperatingSystem.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; using System.Collections.Generic; class ReloadOperatingSystem { /// &amp;lt;summary&amp;gt; /// Reload Operating System /// This script reloads current system configuration. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/reloadOperatingSystem /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Hardware_Server_Configuration /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; public ReloadOperatingSystem() { // You SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>ReloadOperatingSystem.php</title>
      <link>https://softlayer.github.io/php/ReloadOperatingSystem.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/ReloadOperatingSystem.php/</guid>
      <description>&amp;lt;?php /** * Reload Operating System * * This script reloads current operating system configuration. It pass &amp;#34;FORCE&amp;#34; as the token parameter, * in order to proceed with the reload without confirmation. * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/reloadOperatingSystem * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Hardware_Server_Configuration * * @license &amp;lt;http://sldn.softlayer.com/wiki/index.php/license&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once &amp;#34;C:/Php/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;; /** * Your SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * Your SoftLayer API key * Generate one at: https://control.</description>
    </item>
    
    <item>
      <title>create_bare_metal.pl</title>
      <link>https://softlayer.github.io/perl/create_bare_metal.pl/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/perl/create_bare_metal.pl/</guid>
      <description># Order a new server. # # Building a SoftLayer_Container_Product_Order object for a new # server order and pass it to the SoftLayer_Product_Order API service to order # it. In this care we&amp;#39;ll order a Xeon 3460 server with 2G RAM, 100mbit NICs, # 2000GB bandwidth, a 500G SATA drive, CentOS 5 32-bit, and default server # order options. See below for more details. # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>create_bare_metal.py</title>
      <link>https://softlayer.github.io/python/create_bare_metal.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_bare_metal.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new server. Build a SoftLayer_Container_Product_Order object for a new server order and pass it to the SoftLayer_Product_Order API service to order it. In this care we&amp;#39;ll order a Single Intel Xeon E5-2620 with 8G RAM, 100mbit NICs, 500GB bandwidth, a 500G SATA drive, no Operating system, and default server order options. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder https://sldn.softlayer.com/reference/services/SoftLayer_Account/getActivePackages License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc.</description>
    </item>
    
    <item>
      <title>create_bare_metal.rb</title>
      <link>https://softlayer.github.io/ruby/create_bare_metal.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_bare_metal.rb/</guid>
      <description># Order a Bare Metal Server. # # Build a SoftLayer_Container_Product_Order object for a new # server order and pass it to the SoftLayer_Product_Order API service to order # it. In this care we&amp;#39;ll order a Xeon 3460 server with 2G RAM, 100mbit NICs, # 2000GB bandwidth, a 500G SATA drive, CentOS 5 32-bit, and default server # order options. See below for more details. # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>create_dedicated_firewall.go</title>
      <link>https://softlayer.github.io/go/create_dedicated_firewall.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/create_dedicated_firewall.go/</guid>
      <description>/* Create a dedicated firewall This script order a dedicated firewall service for a vlan by using the method SoftLayer_Product_Order::placeOrder. First we&amp;#39;ll build a skeleton of SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated object, providing the Vlan&amp;#39;s ID. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the package id, quantity, and vlan id for the Firewall you wish to order 	quantity := 1 packageId := 0 vlanId := 1174279 // Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>create_dedicated_firewall.py</title>
      <link>https://softlayer.github.io/python/create_dedicated_firewall.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_dedicated_firewall.py/</guid>
      <description># # Create a dedicated firewall # # This script will config a dedicated firewall service on # a vlan using the SoftLayer_Product_Order::placeOrder # method it is needed to build a skeleton SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated # object and provide the ID of vlan in which # the firewall service will be configured # To get prices IDs for firewall service use # SoftLayer_Product_Package::getItemPrices method. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/placeOrder # http://sldn.</description>
    </item>
    
    <item>
      <title>create_server.go</title>
      <link>https://softlayer.github.io/go/create_server.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/create_server.go/</guid>
      <description>/* Order a new server. Build a SoftLayer_Container_Product_Order_Hardware_Server object for a new server order and pass it to the SoftLayer_Product_Order API service to order it. In this case we&amp;#39;ll order a Intel Xeon E3-1270 (4 Cores, 3.40 GHz) server with 2G RAM, 100 Mbps, 2000GB bandwidth, a 500G SATA drive, CentOS 7 32-bit, and default server order options. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.</description>
    </item>
    
    <item>
      <title>create_standard_firewall.go</title>
      <link>https://softlayer.github.io/go/create_standard_firewall.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/create_standard_firewall.go/</guid>
      <description>/* Create a standard firewall This script order a firewall service on a virtual instance using the SoftLayer_Product_Order::placeOrder method. First we&amp;#39;ll build a skeleton of a SoftLayer_Container_Product_Order_Network_Protection_Firewall object, providing the ID of virtual instance in which the firewall service will be configured. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Protection_Firewall @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the package id, quantity, and guest id for the Firewall you wish to order 	complexType := &amp;#34;SoftLayer_Container_Product_Order_Network_Protection_Firewall&amp;#34; quantity := 1 packageId := 0 guestId := 27395815 // Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>create_standard_firewall.py</title>
      <link>https://softlayer.github.io/python/create_standard_firewall.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_standard_firewall.py/</guid>
      <description># # Create a standard firewall # # This script will config a firewall service on # a virtual instance using the SoftLayer_Product_Order::placeOrder # method it is needed to build a skeleton of a virtual guest # object and provide the ID of virtual instance in which # the firewall service will be configured # To get prices IDs for firewall service use # SoftLayer_Product_Package::getCategories method. # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>create_standard_monitor.rb</title>
      <link>https://softlayer.github.io/ruby/create_standard_monitor.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_standard_monitor.rb/</guid>
      <description># Add standard monitor # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host/createObjects # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Monitor_Version1_Query_Host # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT_URL = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_Network_Monitor_Version1_Query_Host object # containing the order you wish to place. template_objects = [ { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Network_Monitor_Version1_Query_Host&amp;#39;, &amp;#39;arg1Value&amp;#39; =&amp;gt; &amp;#39;Domain&amp;#39;, # The parameter &amp;#39;guestId&amp;#39; =&amp;gt; 490_544_2, # The guest ID where you want add standard monitor &amp;#39;ipAddress&amp;#39; =&amp;gt; &amp;#39;10.</description>
    </item>
    
    <item>
      <title>create_user_notification_guest.rb</title>
      <link>https://softlayer.github.io/ruby/create_user_notification_guest.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_user_notification_guest.rb/</guid>
      <description># Add user notification to guest (standard notification) # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_Notification_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_Notification_Virtual_Guest/createObjects # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_Notification_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.&amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; template_objects = [ { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_User_Customer_Notification_Virtual_Guest&amp;#39;, &amp;#39;guestId&amp;#39; =&amp;gt; 490_544_2, &amp;#39;userId&amp;#39; =&amp;gt; 142_861 } ] # Declaring the API client to use the SoftLayer_Product_Package API service client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>create_virtual_guest_with_vlan.go</title>
      <link>https://softlayer.github.io/go/create_virtual_guest_with_vlan.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/create_virtual_guest_with_vlan.go/</guid>
      <description>/* Order a new Virtual Guest with Vlans Build a SoftLayer_Container_Product_Order_Virtual_Guest object for a new virtual server order with Vlans and pass it to the SoftLayer_Product_Order API service to order it. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the properties like complexType, hostname, domain, location, packageId and 	// quantity for the virtual guest you wish to order 	complexType := &amp;#34;SoftLayer_Container_Product_Order_Virtual_Guest&amp;#34; quantity := 1 hostname := &amp;#34;vsi-template&amp;#34; domain := &amp;#34;example.</description>
    </item>
    
    <item>
      <title>create_vsi_family.rb</title>
      <link>https://softlayer.github.io/ruby/create_vsi_family.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_vsi_family.rb/</guid>
      <description># Create a Virtual Guest - Compute flavor. # # This example shows how to create a Virtual Guest device which is part of new VSI Families. # On this case we will create a Compute VSI with the following configuration: # 2 x 2.0 GHz Cores, 2 GB RAM, and primary disk of 25 GB (SAN). # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/generateOrderTemplate # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject # # License: http://sldn.</description>
    </item>
    
    <item>
      <title>create_vsi_no_monitoring.py</title>
      <link>https://softlayer.github.io/python/create_vsi_no_monitoring.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_vsi_no_monitoring.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new VSI without advanced monitoring. The script makes a order for a VSI, it uses the SoftLayer_Product_Order::placeOrder method for more information please see below: Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>determine_required_items.py</title>
      <link>https://softlayer.github.io/python/determine_required_items.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/determine_required_items.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Determine Required items Each Package is aware of a list of ItemCategories that make sense for that Package. This list is called the Packages &amp;#34;Configuration&amp;#34;. Within the configuration, the Package may identify certain categories that are required, meaning you must include an ItemPrice from that category in any order you make against that Package Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getConfiguration http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/article/Python @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; package = 46 client = SoftLayer.</description>
    </item>
    
    <item>
      <title>determine_required_items.rb</title>
      <link>https://softlayer.github.io/ruby/determine_required_items.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/determine_required_items.rb/</guid>
      <description># Determine Required items # # Each Package is aware of a list of ItemCategories that make sense for that Package. # This list is called the Packages &amp;#34;Configuration&amp;#34;. Within the configuration, # the Package may identify certain categories that are required, meaning you must include # an ItemPrice from that category in any order you make against that Package # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getConfiguration # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # http://sldn.</description>
    </item>
    
    <item>
      <title>get_active_presets.go</title>
      <link>https://softlayer.github.io/go/get_active_presets.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/get_active_presets.go/</guid>
      <description>/* Get active presets prices This script retrieves the available preset configurations for this package, also it provides information about the prices and items from them. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Preset https://sldn.softlayer.com/article/object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of package you wish to get information 	packageId := 200 // Create SoftLayer API session 	sess := session.</description>
    </item>
    
    <item>
      <title>get_active_presets.py</title>
      <link>https://softlayer.github.io/python/get_active_presets.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_active_presets.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the active presets for a package. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Preset/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set-me&amp;#39; client = SoftLayer.create_client_from_env(username=API_USERNAME, api_key=API_KEY) packageService = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] packageId = 200 try: presets = packageService.getActivePresets(id=packageId) print(json.dumps(presets, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the presets for the package: \nfaultCode= %s, \nfaultString= %s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>get_active_presets_prices.py</title>
      <link>https://softlayer.github.io/python/get_active_presets_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_active_presets_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get active presets prices This script retrieves the available preset configurations for this package, also it provides information about the prices and items from them. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Preset @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the package id packageId = 200 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_agents.rb</title>
      <link>https://softlayer.github.io/ruby/get_agents.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_agents.rb/</guid>
      <description># Example to get the agents that are running in the virtual machine. # Also we can get the agents using the getObject method and the following mask # mask[ # monitoringRobot.robotStatus, # monitoringAgents.statusName, # monitoringServiceEligibilityFlag, # datacenter # ] # then we can use the # SoftLayer_Monitoring_Agent:getObject # SoftLayer_Monitoring_Agent:getAvailableConfigurationValues # SoftLayer_Monitoring_Agent:getConfigurationValues # # important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMonitoringAgents # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.</description>
    </item>
    
    <item>
      <title>get_available_locations.py</title>
      <link>https://softlayer.github.io/python/get_available_locations.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_available_locations.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get available locations. This script will retrieve a collection of valid locations for a given package and the server. It displays the same locations as Control Portal does. E.g: Portal Link: https://manage.softlayer.com/Sales/configureOrder/265/49565/ package = 265 server = 49565 Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getRegions http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price/getItem http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_available_package_for_image.py</title>
      <link>https://softlayer.github.io/python/get_available_package_for_image.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_available_package_for_image.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get available package for an image template This script retrieves a collection of valid locations for this package Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAvailablePackagesForImageTemplate http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the image template id imageTemplateId = 429428 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_configuration_values_agent.rb</title>
      <link>https://softlayer.github.io/ruby/get_configuration_values_agent.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_configuration_values_agent.rb/</guid>
      <description># Gets the actual monitor agent configuration # the values can be modified and change using the SoftLayer_Monitoring_Agent::applyConfigurationValues # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getConfigurationValues # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT_URL = &amp;#39;set me&amp;#39; # The monitor agent ID you which to get the actual configuration monitor_agent_id = 121_169_6 # Declaring the API client to use the SoftLayer_Product_Package API service client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_iops_standard_price.py</title>
      <link>https://softlayer.github.io/python/get_iops_standard_price.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_iops_standard_price.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get IOPS prices to order a endurance object storage. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package id to order endurance object storage. packageId = 240 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) productPackage = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] # A filter to get only the prices for IOPS. objectFilter = {&amp;#34;items&amp;#34;: {&amp;#34;prices&amp;#34;: {&amp;#34;categories&amp;#34;: {&amp;#34;categoryCode&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;storage_tier_level&amp;#34;}}, &amp;#34;locationGroupId&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;is null&amp;#34;}}}} try: items = productPackage.</description>
    </item>
    
    <item>
      <title>get_item_price_information.py</title>
      <link>https://softlayer.github.io/python/get_item_price_information.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_item_price_information.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get item prices information This script retrieves information of prices from a package. It retrieves the item description, location conflicts, pricing location group and item conflicts Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getRegions http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/article/object-masks @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer from prettytable import PrettyTable # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the image template id packageId = 265 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_item_prices.go</title>
      <link>https://softlayer.github.io/go/get_item_prices.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/get_item_prices.go/</guid>
      <description>/* Retrieve item prices from a package. This example retrieves the general information about product item prices from an specific package. See below for more information. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price https://sldn.softlayer.com/article/object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of package you wish to get its item prices 	packageId := 46 // Virtual Server Instance  // Create SoftLayer API session 	sess := session.</description>
    </item>
    
    <item>
      <title>get_item_prices.py</title>
      <link>https://softlayer.github.io/python/get_item_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_item_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get item prices This script will display the general information relating to a single SoftLayer product item price Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; # Set the ID of the package to retrieve the information package = 46 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_item_prices.rb</title>
      <link>https://softlayer.github.io/ruby/get_item_prices.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_item_prices.rb/</guid>
      <description># Get item prices # # This script will display the general information related # to a single SoftLayer product item price # # See below references for more details. # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new( username: SL_API_USERNAME, api_key: SL_API_KEY ) # Set the ID of the package to retrieve the information package_id = 46 # Text format for our prettified output header_format = &amp;#34;%s - %s:\n&amp;#34; item_format = &amp;#34; %s:\n&amp;#34; category_format = &amp;#34; %s -- %s\n&amp;#34; # Set the object mask to retrieve categories category_object_mask = &amp;#39;mask[categories]&amp;#39; # Get all itemPrices for this package prices = client[&amp;#39;SoftLayer_Product_Package&amp;#39;].</description>
    </item>
    
    <item>
      <title>get_item_prices_by_location.go</title>
      <link>https://softlayer.github.io/go/get_item_prices_by_location.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/get_item_prices_by_location.go/</guid>
      <description>/* Get item prices by location This script retrieves item prices of a package for a datacenter location. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price https://sldn.softlayer.com/article/sbject-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/filter&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of package you wish to get information 	packageId := 200 /* The location name you want to get item prices.</description>
    </item>
    
    <item>
      <title>get_items_from_image.go</title>
      <link>https://softlayer.github.io/go/get_items_from_image.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/get_items_from_image.go/</guid>
      <description>/* Get items from an image template This script returns an array of SoftLayer_Product_Item objects which are part of a SoftLayer_Virtual_Guest_Block_Device_Template_Group object Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemsFromImageTemplate http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of package you wish to get information 	packageId := 46 // Virtual Server Instance  // Declare the image template id 	imageTemplateId := 1370911 // Build a SoftLayer_VIrtual_Guest_Block_Device_Template_Group object 	imageTemplate := datatypes.</description>
    </item>
    
    <item>
      <title>get_items_from_image.py</title>
      <link>https://softlayer.github.io/python/get_items_from_image.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_items_from_image.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get items from an image template This script returns a collection of SoftLayer_Product_Item objects from a SoftLayer_Virtual_Guest_Block_Device_Template_Grouo object Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemsFromImageTemplate http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/ @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the image template id imageTemplateId = 429428 # Declare a Package Id for which you want to get its items packageId = 46 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_location_prices_for_dc.py</title>
      <link>https://softlayer.github.io/python/get_location_prices_for_dc.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_location_prices_for_dc.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get location prices for a datacenter This script retrieves location prices for a package from a specific datacenter Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/article/Object-Filters @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the package id packageId = 265 # Declare the datacenter name that you wish to retrieve the item prices datacenter = &amp;#39;London 1&amp;#39; # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_locations.go</title>
      <link>https://softlayer.github.io/go/get_locations.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/get_locations.go/</guid>
      <description>/* Get package location. This script will retrieve a collection of valid locations for a given package by calling to SoftLayer_Product_Package::getLocations method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getLocations License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of package you wish to get its item prices 	packageId := 46 // Virtual Server Instance  // Create SoftLayer API session 	sess := session.</description>
    </item>
    
    <item>
      <title>get_locations.py</title>
      <link>https://softlayer.github.io/python/get_locations.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_locations.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get package location. This script will retrieve a collection of valid locations for a given package by calling to SoftLayer_Product_Package::getLocations method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getLocations @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice output: from prettytable import PrettyTable # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; package = 46 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_locations.rb</title>
      <link>https://softlayer.github.io/ruby/get_locations.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_locations.rb/</guid>
      <description># # Get package location # # This script will retrieve a collection of valid locations for this package. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getLocations # # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) # Set the ID of the package to retrieve the information package_id = 46 locations = client[&amp;#39;SoftLayer_Product_Package&amp;#39;].</description>
    </item>
    
    <item>
      <title>get_prices_location_group.rb</title>
      <link>https://softlayer.github.io/ruby/get_prices_location_group.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_prices_location_group.rb/</guid>
      <description># Get prices for File Storage # # The script retrieves the items and prices to order a File Storage # and uses filters to get the prices for an arbitrary location group # and an arbitrary item description. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems # http://sldn.softlayer.com/article/Object-Filters # http://sldn.softlayer.com/article/Object-Masks # http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_prices_pakage_monitoring.rb</title>
      <link>https://softlayer.github.io/ruby/get_prices_pakage_monitoring.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_prices_pakage_monitoring.rb/</guid>
      <description># Get the prices for order a Monitor package # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems # https://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package Id for Monitoring package package_id = 0 client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) package_service = client.service_named(&amp;#39;SoftLayer_Product_Package&amp;#39;) # Add an object mask to retrieve our package&amp;#39;s related items such as its # prices, attributes, etc for more information see # https://sldn.</description>
    </item>
    
    <item>
      <title>get_prices_per_dc_from_presets.py</title>
      <link>https://softlayer.github.io/python/get_prices_per_dc_from_presets.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_prices_per_dc_from_presets.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get active presets and their prices per location This script retrieves the active presets with their prices for the items per datacenter. Also it displays the information for hourly recurring fee and recurring fee. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/search/site/object%20mask http://sldn.softlayer.com/article/Object-Filters @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer from prettytable import PrettyTable # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_prices_per_package_from_image.py</title>
      <link>https://softlayer.github.io/python/get_prices_per_package_from_image.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_prices_per_package_from_image.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; This script retrieves item prices per packages from an image template Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAvailablePackagesForImageTemplate http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemsFromImageTemplate http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer from prettytable import PrettyTable # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the image template id imageTemplateId = 33566 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_standard_item_prices.go</title>
      <link>https://softlayer.github.io/go/get_standard_item_prices.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/get_standard_item_prices.go/</guid>
      <description>/* Retrieve standard item prices from a package. This script retrieves standard prices from a package. All standard prices don&amp;#39;t have an specific location, taking account this last, we&amp;#39;ll retrieve all prices that have &amp;#39;locationGroupId&amp;#39; IS NULL. See below for more information. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price https://sldn.softlayer.com/article/object-Masks https://sldn.softlayer.com/article/object-filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/filter&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of package you wish to get information 	packageId := 46 // Virtual Server Instance  // Create SoftLayer API session 	sess := session.</description>
    </item>
    
    <item>
      <title>get_standard_prices.py</title>
      <link>https://softlayer.github.io/python/get_standard_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_standard_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get standard prices This script retrieves standard prices for an package Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/article/Object-Filters @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the package id packageId = 265 # Create a client instance client = SoftLayer.Client(username=API_USERNAME, api_key=API_KEY) # Declare an object filter to get standard item prices objectFilter = {&amp;#39;itemPrices&amp;#39;: {&amp;#39;locationGroupId&amp;#39;: {&amp;#39;operation&amp;#39;: &amp;#39;is null&amp;#39;}}} try: standardPrices = client[&amp;#39;SoftLayer_Product_Package&amp;#39;].</description>
    </item>
    
    <item>
      <title>get_storage_space_prices_for_location.py</title>
      <link>https://softlayer.github.io/python/get_storage_space_prices_for_location.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_storage_space_prices_for_location.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the storage space prices to order an endurance space. The script retrieves all the storage spaces prices which meet an IOPS requirement and these prices are valid to an arbitrary location. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package id to order endurance object storage. packageId = 240 # value = 200 is for 2 IOPS per GB.</description>
    </item>
    
    <item>
      <title>get_storage_space_standard_prices.py</title>
      <link>https://softlayer.github.io/python/get_storage_space_standard_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_storage_space_standard_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the storage space prices to order an endurance space. The script retrieves all the storage spaces prices which meet an IOPS requirement and these prices are standard prices (they work for any datacenter). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package id to order endurance object storage. packageId = 240 # value = 200 is for 2 IOPS per GB.</description>
    </item>
    
    <item>
      <title>get_virtual_guests_list.go</title>
      <link>https://softlayer.github.io/go/get_virtual_guests_list.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/get_virtual_guests_list.go/</guid>
      <description>/* List Virtual servers in the Account This script gets all Virtual servers of Account, on this case we&amp;#39;ll use the getVirtualGuests() method of SoftLayer_Account service. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest https://sldn.softlayer.com/article/object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Create SoftLayer API session 	sess := session.</description>
    </item>
    
    <item>
      <title>get_vlans_for_order.py</title>
      <link>https://softlayer.github.io/python/get_vlans_for_order.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_vlans_for_order.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get available VLANs for a new order The script makes a single to call to SoftLayer_Product_Order::getVlans method to call the available VLANs for the configuration of an order for more details please see below. Important manual pages: https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/getVlans License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; The id for the datacenter where you are creating your machine you can get the ids by using the &amp;#34;SoftLayer_Location_Datacenter&amp;#34; service and the method &amp;#34;getDatacenters&amp;#34; e.</description>
    </item>
    
    <item>
      <title>list_items_for_order_server.py</title>
      <link>https://softlayer.github.io/python/list_items_for_order_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_items_for_order_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List items to order device. The script displays the available data centers and items for a package. Note: The displayed prices are standard prices. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getObject http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getConfiguration http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getPresetConfigurationRequiredFlag http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package/ http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Preset/ http://sldn.softlayer.com/article/Object-Masks http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;Set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;Set-me&amp;#39; package_id = 200 # Set True to see the hourly prices.</description>
    </item>
    
    <item>
      <title>list_prices_packages_and_datacenters.py</title>
      <link>https://softlayer.github.io/python/list_prices_packages_and_datacenters.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_prices_packages_and_datacenters.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List Prices for Packages and Data centers Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getActivePackages http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAvailableLocations License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. username = &amp;#39;set me&amp;#39; key = &amp;#39;set me&amp;#39; # Declare the API client to use the SoftLayer_Product_Order API service client = SoftLayer.Client(username=username, api_key=key) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] productPackageService = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] try: # Get all active packages for your account, but this method is slow result = accountService.</description>
    </item>
    
    <item>
      <title>list_subnet_prices.py</title>
      <link>https://softlayer.github.io/python/list_subnet_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_subnet_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the options and the prices to order a subnet like the portal. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAllObjects http://sldn.softlayer.com/article/Object-Masks http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json client = SoftLayer.Client() packageService = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] # The groups listed in the portal and its category code. groups = { &amp;#34;Static Public&amp;#34;: &amp;#34;static_sec_ip_addresses&amp;#34;, &amp;#34;Portable Public&amp;#34;: &amp;#34;sov_sec_ip_addresses_pub&amp;#34;, &amp;#34;Portable Private&amp;#34;: &amp;#34;sov_sec_ip_addresses_priv&amp;#34;, &amp;#34;Global IPv4&amp;#34;: &amp;#34;global_ipv4&amp;#34;, &amp;#34;Static Public IPv6&amp;#34;: &amp;#34;static_ipv6_addresses&amp;#34;, &amp;#34;Portable Public IPv6&amp;#34;: &amp;#34;sov_ipv6_addresses&amp;#34;, &amp;#34;Global IPv6&amp;#34;: &amp;#34;global_ipv6&amp;#34; } # Declaring a filter to get the packages related to subnets objectFilter = { &amp;#34;type&amp;#34;: { &amp;#34;keyName&amp;#34;: { &amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{ &amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [ &amp;#34;ADDITIONAL_SERVICES&amp;#34;, &amp;#34;ADDITIONAL_SERVICES_PORTABLE_IP_ADDRESSES&amp;#34;, &amp;#34;ADDITIONAL_SERVICES_STATIC_IP_ADDRESSES&amp;#34; ] }] } } } # Declaring an object mask to get more information about the packages objectMask = &amp;#34;mask[items[id, description, prices[id, recurringFee, attributes], categories[categoryCode]]]&amp;#34; try: packages = packageService.</description>
    </item>
    
    <item>
      <title>orderDedicatedHost.py</title>
      <link>https://softlayer.github.io/python/orderDedicatedHost.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderDedicatedHost.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a Dedicated host. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/node/274081 http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) productOrderService = client[&amp;#39;SoftLayer_Product_Order&amp;#39;] orderData = { &amp;#34;orderContainers&amp;#34;: [ { &amp;#34;location&amp;#34;: &amp;#34;DALLAS10&amp;#34;, &amp;#34;packageId&amp;#34;: 813, # Building a skeleton SoftLayer_Hardware_Server object to model the hostname, # domain and the router that we want for our dedicated host.</description>
    </item>
    
    <item>
      <title>order_Vyatta.pl</title>
      <link>https://softlayer.github.io/perl/order_Vyatta.pl/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/perl/order_Vyatta.pl/</guid>
      <description># Order a Network Gateway Appliance (Vyatta) # # The script orders a (Vyatta) high availability pair # it uses the SoftLayer_Product_Order::placeOrder to make the order # For more information see below: # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; use lib &amp;#39;C:/softlayerApis/perl/softlayer-api-perl-client-master/&amp;#39;; use SoftLayer::API::SOAP; use Data::Dumper; # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>order_consistent_performance_storage_nfs.go</title>
      <link>https://softlayer.github.io/go/order_consistent_performance_storage_nfs.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_consistent_performance_storage_nfs.go/</guid>
      <description>/* Order Consistent Performance Storage Nfs. This script creates an order for Consistent Performance Storage Nfs (Monthly) See below references for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_PerformanceStorage_Nfs @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set-me&amp;#34; apikey := &amp;#34;set-me&amp;#34; // Declare the complexType,location, packageId and quantity for the storage 	// you wish to order 	quantity := 1 location := &amp;#34;DALLAS09&amp;#34; packageId := 222 // Performance Storage  // Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>order_dedicated_host.rb</title>
      <link>https://softlayer.github.io/ruby/order_dedicated_host.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_dedicated_host.rb/</guid>
      <description># Order Dedicated Hosts. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the location, packageId and quantity for the server you wish to order. # Take account that you can only order two dedicated host at same time.</description>
    </item>
    
    <item>
      <title>order_evault.py</title>
      <link>https://softlayer.github.io/python/order_evault.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_evault.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a Evault device. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/services/SoftLayer_Location http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Vault http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Values &amp;#34;AMS01&amp;#34;, &amp;#34;AMS03&amp;#34;, &amp;#34;CHE01&amp;#34;, &amp;#34;DAL05&amp;#34;, &amp;#34;DAL06&amp;#34; &amp;#34;FRA02&amp;#34;, &amp;#34;HKG02&amp;#34;, &amp;#34;LON02&amp;#34;, etc. location = &amp;#34;DAL05&amp;#34; # Values &amp;#34;20&amp;#34;, &amp;#34;30&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;50&amp;#34;, &amp;#34;60&amp;#34;, &amp;#34;100&amp;#34;, etc. size = &amp;#34;20&amp;#34; # The VSI or Sever IP address where the Evault will be added.</description>
    </item>
    
    <item>
      <title>order_global_ipv4_ipv6.go</title>
      <link>https://softlayer.github.io/go/order_global_ipv4_ipv6.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_global_ipv4_ipv6.go/</guid>
      <description>/* Order a new Global IPv4/IPv6 Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key  username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the complexType, packageId and quantity  complexType := &amp;#34;SoftLayer_Container_Product_Order_Network_Subnet&amp;#34; quantity := 1 packageId := 0 // Create a session.</description>
    </item>
    
    <item>
      <title>order_global_ipv4_ipv6.py</title>
      <link>https://softlayer.github.io/python/order_global_ipv4_ipv6.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_global_ipv4_ipv6.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Orders a new Global IPv4/IPv6 subnet Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Creates a new connection to the API service. client = SoftLayer.Client( username=API_USERNAME, api_key=API_KEY ) # Set the package related to subnets package_id = 0 # Filters a specific type of subnet to order e.</description>
    </item>
    
    <item>
      <title>order_performance_storage_iscsi.go</title>
      <link>https://softlayer.github.io/go/order_performance_storage_iscsi.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_performance_storage_iscsi.go/</guid>
      <description>/* Order Performance Storage iSCSI. This script creates an order for Performance Storage iSCSI, for that we&amp;#39;ll build a SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi object and pass it to SoftLayer_Product_Order::placeOrder method. See below references for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the complexType, location, packageId and quantity for the storage 	// you wish to order  quantity := 1 location := &amp;#34;DALLAS09&amp;#34; packageId := 222 osKeyName := &amp;#34;LINUX&amp;#34; // Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>order_portable_private_subnet.go</title>
      <link>https://softlayer.github.io/go/order_portable_private_subnet.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_portable_private_subnet.go/</guid>
      <description>/* Order a new portable private subnet. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the quantity, location, and packageId for the subnet you wish to order. 	quantity := 1 packageId := 0 location := &amp;#34;DALLAS05&amp;#34; // The id of a Private Network Vlan.</description>
    </item>
    
    <item>
      <title>order_portable_public_subnet.go</title>
      <link>https://softlayer.github.io/go/order_portable_public_subnet.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_portable_public_subnet.go/</guid>
      <description>/* Order a new portable public subnet. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the quantity, location, and packageId for the subnet you wish to order. 	quantity := 1 packageId := 0 location := &amp;#34;SINGAPORE01&amp;#34; // The id of a Public Network Vlan.</description>
    </item>
    
    <item>
      <title>order_portable_public_subnet_ipv6.go</title>
      <link>https://softlayer.github.io/go/order_portable_public_subnet_ipv6.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_portable_public_subnet_ipv6.go/</guid>
      <description>/* Orders a new portable Public subnet IPv6 Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the quantity, location, and packageId for the subnet you wish to order. 	quantity := 1 packageId := 0 location := &amp;#34;MEXICO&amp;#34; // The id of a Public Network Vlan.</description>
    </item>
    
    <item>
      <title>order_portable_storage.pl</title>
      <link>https://softlayer.github.io/perl/order_portable_storage.pl/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/perl/order_portable_storage.pl/</guid>
      <description># Order a portal storage # # The script orders a portal storage device, it makes a single call to # SoftLayer_Product_Order::placeOrder method. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Disk_Image # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; use lib &amp;#39;softlayer-api-perl-client-master/&amp;#39;; use SoftLayer::API::SOAP; use Data::Dumper; # Your SoftLayer API username and key. my $username = &amp;#39;set me&amp;#39;; my $key = &amp;#39;set me&amp;#39;; # Building an skeleton SoftLayer_Container_Product_Order_Virtual_Disk_Image to the order my $order_template = bless({ &amp;#39;orderContainerType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Container_Product_Order_Virtual_Disk_Image&amp;#39;, &amp;#39;location&amp;#39; =&amp;gt; &amp;#39;SANJOSE&amp;#39;, # The package for order portable storage &amp;#39;packageId&amp;#39; =&amp;gt; 198, &amp;#39;diskDescription&amp;#39; =&amp;gt; &amp;#39;test portable storage&amp;#39;, &amp;#39;prices&amp;#39; =&amp;gt; [ { # The prices for the portable storage # to see the list of prices available for the package # use the Softlayer_Product_Package::getItems method (http://sldn.</description>
    </item>
    
    <item>
      <title>order_preset_server.go</title>
      <link>https://softlayer.github.io/go/order_preset_server.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_preset_server.go/</guid>
      <description>/* Order a new server with preset configuration. The presets used to simplify ordering by eliminating the need for price ids when submitting orders. Also when the order contains a preset id, it is not possible to configure VLANs in the order. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey	:= &amp;#34;set me&amp;#34; // Declare the hostname, domain, location, packageId and quantity for the 	// storage you wish to order 	quantity := 1 location := &amp;#34;MEXICO&amp;#34; packageId := 200	// Bare Metal Servers 	presetId := 97	// Dual Xeon 2620, 64GB Ram, 2x1TB SATA disks, Non-RAID 	hostname := &amp;#34;softlayer&amp;#34; domain := &amp;#34;example.</description>
    </item>
    
    <item>
      <title>order_server_with_raid_configuration.go</title>
      <link>https://softlayer.github.io/go/order_server_with_raid_configuration.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_server_with_raid_configuration.go/</guid>
      <description>/* Order server with RAID configuration. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key  username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the complexType, location, packageId and quantity for the server 	// you wish to order  quantity := 1 hostname := &amp;#34;softlayer&amp;#34; domain := &amp;#34;example.</description>
    </item>
    
    <item>
      <title>order_static_public_subnet.go</title>
      <link>https://softlayer.github.io/go/order_static_public_subnet.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_static_public_subnet.go/</guid>
      <description>/* Order a new static public subnet Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the quantity, location, and packageId for the subnet you wish to order. 	quantity := 1 packageId := 0 location := &amp;#34;SINGAPORE01&amp;#34; // The id of a Public Ip Addresses.</description>
    </item>
    
    <item>
      <title>order_static_public_subnet_ipv6.go</title>
      <link>https://softlayer.github.io/go/order_static_public_subnet_ipv6.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_static_public_subnet_ipv6.go/</guid>
      <description>/* Order a new static public subnet ipv6 Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the quantity, location, and packageId for the subnet you wish to order. 	quantity := 1 packageId := 0 location := &amp;#34;SINGAPORE01&amp;#34; // The id of a Public Ip Addresses.</description>
    </item>
    
    <item>
      <title>order_subnet.py</title>
      <link>https://softlayer.github.io/python/order_subnet.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_subnet.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new subnet. The script order a new subnet using the same options like the portal. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet/getSubnetForIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNetworkVlans http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Subnet http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The subnet you wish to order. The available options are the # same like in the in the Softlayer Portal. # e.g. &amp;#34;1 Static Public IP Address&amp;#34;, # &amp;#34;/64 Block Static Public IPv6 Addresses&amp;#34;, etc.</description>
    </item>
    
    <item>
      <title>order_vsi_family.rb</title>
      <link>https://softlayer.github.io/ruby/order_vsi_family.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_vsi_family.rb/</guid>
      <description># Order a Virtual Guest - Compute flavor. # # This example shows how to order a Virtual Guest device which is part of new VSI Families. # On this case we will order Compute VSI with the following configuration: # 2 x 2.0 GHz Cores, 2 GB RAM, and primary disk of 25 GB (SAN). # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # http://sldn.</description>
    </item>
    
    <item>
      <title>order_vsi_friendly.py</title>
      <link>https://softlayer.github.io/python/order_vsi_friendly.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_vsi_friendly.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Account/getSshKeys http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getVlanForIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Declare variables location = &amp;#34;AMS01&amp;#34; quantity = 1 # If you want the VSI hourly pricing # set the value as True useHourlyPricing = False # The configuration of the VSI # The values and names are the same like # the ones displayed in the portal.</description>
    </item>
    
    <item>
      <title>order_vsi_on_dedicated_host.rb</title>
      <link>https://softlayer.github.io/ruby/order_vsi_on_dedicated_host.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_vsi_on_dedicated_host.rb/</guid>
      <description># Order Virtual Guest on Dedicated Host. # # This script shows how to order a vsi on an customer&amp;#39;s dedicated host. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the hostId, packageId and quantity for the virtual guest you wish to order.</description>
    </item>
    
    <item>
      <title>order_vyatta.py</title>
      <link>https://softlayer.github.io/python/order_vyatta.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_vyatta.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a Network Gateway Appliance (Vyatta) The script orders a (Vyatta) high availability pair it uses the SoftLayer_Product_Order::placeOrder to make the order For more information see below: Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Container_Product_Order object. The object contains the configuration for the Vyatta server such as the quantity, the location, etc.</description>
    </item>
    
    <item>
      <title>order_vyatta.rb</title>
      <link>https://softlayer.github.io/ruby/order_vyatta.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_vyatta.rb/</guid>
      <description># Order a Network Gateway Appliance (Vyatta) # # The example orders a (Vyatta) high availability pair, it makes # a single call to the SoftLayer_Product_Order::placeOrder method # # Important manual pages # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Create a SoftLayer API client object client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>order_vyatta_gateway.go</title>
      <link>https://softlayer.github.io/go/order_vyatta_gateway.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/order_vyatta_gateway.go/</guid>
      <description>/* Order a Network Gateway Appliance (Vyatta) The script orders a Network Gateway (Vyatta), it uses the SoftLayer_Product_Order::placeOrder to make the order. See below for more information. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the hostname, domain, location, packageId and quantity for the 	// gateway you wish to order 	quantity := 1 location := &amp;#34;AMSTERDAM&amp;#34; packageId := 174 hostname := &amp;#34;softlayer&amp;#34; domain := &amp;#34;example.</description>
    </item>
    
    <item>
      <title>os_reload_configuration_page.py</title>
      <link>https://softlayer.github.io/python/os_reload_configuration_page.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/os_reload_configuration_page.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Display the information about the server to reload like the Softlayer portal. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_SoftLayer_Product_Package http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getObject http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/reloadOperatingSystem http://sldn.softlayer.com/reference/services/SoftLayer_SoftLayer_Product_Package/getItemConflicts License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer def get_hardware(hardware_id, hardware_service): &amp;#34;&amp;#34;&amp;#34;Get the hardware object. :param int hardware_id: The id of the hardware to get. :param SoftLayer_Hardware_Server hardware_service: The SoftLayer_Hardware_Server service. :returns: A Softlayer_Hardware_Server object. &amp;#34;&amp;#34;&amp;#34; object_mask = &amp;#39;mask[account[attributes[accountAttributeType]], activeTransaction[transactionStatus], &amp;#39; \ &amp;#39;billingItem[item[totalPhysicalCoreCapacity, capacity], &amp;#39; \ &amp;#39;package[configuration[itemCategory[categoryCode, name]], &amp;#39; \ &amp;#39;items[availabilityAttributes[attributeTypeKeyName], coreRestrictedItemFlag, &amp;#39; \ &amp;#39;prices[accountRestrictions, categories[categoryCode, name], requiredCoreCount, &amp;#39; \ &amp;#39;definedSoftwareLicenseFlag], requirements, softwareDescription[averageInstallationDuration]]]],&amp;#39; \ &amp;#39;hourlyBillingFlag, managedResourceFlag, operatingSystem[averageInstallationDuration, &amp;#39; \ &amp;#39;passwords[sshKeys]], primaryIpAddress, &amp;#39; \ &amp;#39;softwareComponents[softwareLicense[softwareDescription[features[keyName],&amp;#39; \ &amp;#39;productItems[categories[categoryCode, name]]]]], networkGatewayMemberFlag]&amp;#39; try: hardware = hardware_service.</description>
    </item>
    
    <item>
      <title>place_order_cdn.go</title>
      <link>https://softlayer.github.io/go/place_order_cdn.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/place_order_cdn.go/</guid>
      <description>/* Order a new CDN account Build a SoftLayer_Container_Product_Order_Network_ContentDelivery_Account object for a new CDN account order and pass it to the SoftLayer_Product_Order service to order it. In this case we&amp;#39;ll order a pay as you go bandwidth and storage CDN account. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_ContentDelivery_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_ContentDelivery_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.</description>
    </item>
    
    <item>
      <title>place_order_monitoring.go</title>
      <link>https://softlayer.github.io/go/place_order_monitoring.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/place_order_monitoring.go/</guid>
      <description>/* Order a Monitoring Package Build a SoftLayer_Container_Product_Order_Monitoring_Package object for a new monitoring order and pass it to the SoftLayer_Product_Order service to order it. In this case we&amp;#39;ll order a Basic (Hardware and OS) package with Basic Monitoring Package - Linux configuration. For more details see below. Important manual pages: https://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Monitoring_Package http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent_Configuration_Template_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.</description>
    </item>
    
    <item>
      <title>place_order_portable_storage.go</title>
      <link>https://softlayer.github.io/go/place_order_portable_storage.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/place_order_portable_storage.go/</guid>
      <description>/* Order a portable storage The script orders a portal storage device, it makes a single call to method SoftLayer_Product_Order::placeOrder. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Disk_Image @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key  username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the location, packageId and a description for the portable storage 	// you wish to order  location := &amp;#34;SANJOSE&amp;#34; packageId := 198 // Package for order portable storage  diskDescription := &amp;#34;SoftLayer Portable Storage&amp;#34; // Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>place_order_portable_storage.py</title>
      <link>https://softlayer.github.io/python/place_order_portable_storage.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_portable_storage.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a portal storage The script orders a portal storage device, it makes a single call to SoftLayer_Product_Order::placeOrder method. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Disk_Image http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client to use the SoftLayer_Product_Order API service client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) productOrderService = client[&amp;#39;SoftLayer_Product_Order&amp;#39;] # Building an skeleton SoftLayer_Container_Product_Order_Virtual_Disk_Image to the order orderTemplate = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Virtual_Disk_Image&amp;#34;, &amp;#34;location&amp;#34;: &amp;#34;SANJOSE&amp;#34;, # The package for order portable storage &amp;#34;packageId&amp;#34;: 198, &amp;#34;diskDescription&amp;#34;: &amp;#34;test portable storage&amp;#34;, &amp;#34;prices&amp;#34;: [ { # The prices for the portable storage # to see the list of prices available for the package # use the Softlayer_Product_Package::getItems method (http://sldn.</description>
    </item>
    
    <item>
      <title>place_order_portable_storage.rb</title>
      <link>https://softlayer.github.io/ruby/place_order_portable_storage.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/place_order_portable_storage.rb/</guid>
      <description># Order a portal storage # # The script orders a portable storage, it makes a single call to the # SoftLayer_Product_Order::placeOrder method. # # Important manual pages # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Disk_Image # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Building an skeleton SoftLayer_Container_Product_Order_Virtual_Disk_Image to the order order_template = { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Container_Product_Order_Virtual_Disk_Image&amp;#39;, &amp;#39;location&amp;#39; =&amp;gt; &amp;#39;SANJOSE&amp;#39;, # The package for order portable storage &amp;#39;packageId&amp;#39; =&amp;gt; 198, &amp;#39;diskDescription&amp;#39; =&amp;gt; &amp;#39;test portable storage&amp;#39;, &amp;#39;prices&amp;#39; =&amp;gt; [ { # The prices for the portable storage # to see the list of prices available for the package # use the Softlayer_Product_Package::getItems method (http://sldn.</description>
    </item>
    
    <item>
      <title>place_order_several_vms_vlan.py</title>
      <link>https://softlayer.github.io/python/place_order_several_vms_vlan.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_several_vms_vlan.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new VSI. The script makes a order for a VSI, it uses the SoftLayer_Product_Order::placeOrder method for more information please see below: Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp &amp;#34;&amp;#34;&amp;#34; &amp;#34;&amp;#34;&amp;#34; # Your SoftLayer API username and key. API_USERNAME = &amp;#39;&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Container_Product_Order_Virtual_Guest object containing the order you wish to place.</description>
    </item>
    
    <item>
      <title>place_order_vlan.go</title>
      <link>https://softlayer.github.io/go/place_order_vlan.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/place_order_vlan.go/</guid>
      <description>/* Example to create a new VLAN. The script uses the placeOrder method to order a new VLAN with 32 static IP address Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key  username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Declare the properties like complexType, location, packageId and quantity for the 	// vlan you wish to order  quantity := 1 packageId := 0 sendQuoteEmailFlag := true location := &amp;#34;AMSTERDAM&amp;#34; name := &amp;#34;new-tested-vlan&amp;#34; routerId := 117960 // Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>place_order_vlan.pl</title>
      <link>https://softlayer.github.io/perl/place_order_vlan.pl/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/perl/place_order_vlan.pl/</guid>
      <description># Example to create a new VLAN. # # The script uses the placeOrder method to order # a new VLAN with 32 static IP address # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; use lib &amp;#39;/softlayer-api-perl-client-master/&amp;#39;; use SoftLayer::API::SOAP; use Data::Dumper; # Your SoftLayer API username and key. my $username = &amp;#39;set me&amp;#39;; my $key = &amp;#39;set me&amp;#39;; # Building a skeleton SoftLayer_Container_Product_Order_Network_Vlan object # to model the order for the new VLAN my $order_template = bless({ &amp;#39;orderContainerType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Container_Product_Order_Network_Vlan&amp;#39;, &amp;#39;location&amp;#39; =&amp;gt; &amp;#39;AMSTERDAM&amp;#39;, &amp;#39;packageId&amp;#39; =&amp;gt; 0, # Building a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>place_order_vlan.py</title>
      <link>https://softlayer.github.io/python/place_order_vlan.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_vlan.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Example to create a new VLAN. The script uses the placeOrder method to order a new VLAN with 32 static IP address Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Container_Product_Order_Network_Vlan object to model the order for the new VLAN &amp;#34;&amp;#34;&amp;#34; orderData = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Network_Vlan&amp;#34;, &amp;#34;location&amp;#34;: &amp;#34;AMSTERDAM&amp;#34;, &amp;#34;packageId&amp;#34;: 0, # Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>place_order_vlan.rb</title>
      <link>https://softlayer.github.io/ruby/place_order_vlan.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/place_order_vlan.rb/</guid>
      <description># Example to create a new VLAN # the script uses the placeOrder method to order # a new VLAN with 32 static IP address # # Important manual page # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_Container_Product_Order_Network_Vlan object # to model the order for the new VLAN order_data = { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Container_Product_Order_Network_Vlan&amp;#39;, &amp;#39;location&amp;#39; =&amp;gt; &amp;#39;AMSTERDAM&amp;#39;, &amp;#39;packageId&amp;#39; =&amp;gt; 0, # Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>Advanced Bare Metal Server Ordering</title>
      <link>https://softlayer.github.io/python/orderBareMetal/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderBareMetal/</guid>
      <description>Example of how to build an order for a bare metal server.
 Find the package that you want to order. listServerPackages() will filter out all that are not bare metal servers Use getServerPrices() to find the item keyNames you want to include in your order. These price IDs can be included prices array directly, but I&amp;rsquo;ve included gatherPriceIds() to match up KeyNames to build a list of price ids.</description>
    </item>
    
    <item>
      <title>Ordering Raid</title>
      <link>https://softlayer.github.io/ruby/orderingRaid/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderingRaid/</guid>
      <description>As a SoftLayer user, you have probably seen the beautiful RAID Configurator that greets you when you order a server on the SoftLayer website.
It allows you to do anything you like, from a straight RAID configuration involving all drives in a single disk array, to a much more intricate configuration with nearly any mix of disks and RAID types.
However beautiful and practical the interface, sometimes you want to script this process, and the SoftLayer mantra of &amp;ldquo;Anything you can do in the Web interface, you can do on the API&amp;rdquo; also rings true in this case.</description>
    </item>
    
    <item>
      <title>Find Location specific pricing for a package</title>
      <link>https://softlayer.github.io/ruby/getLocationPricing/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getLocationPricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. In the following example we will query for the Dallas 10 data center for SoftLayer Virtual Guests.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>Find standard location pricing for a package</title>
      <link>https://softlayer.github.io/ruby/getStandardPricing/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getStandardPricing/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) object_filter = SoftLayer::ObjectFilter.new do |object_filter| object_filter.accept(&amp;#39;items.prices.locationGroupId&amp;#39;).when_it is_null end location = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] result = location.object_with_id(46).object_filter(object_filter).getItems pp result</description>
    </item>
    
    <item>
      <title>Find standard location pricing for a package</title>
      <link>https://softlayer.github.io/php/getStandardPricing/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/getStandardPricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. The following example shows how to get the Standard priceItemId for a package regardless of the location.
&amp;lt;?php require_once &amp;#39;./vendor/autoload.php&amp;#39;; $apiUsername = getenv(&amp;#39;SOFTLAYER_USERNAME&amp;#39;); $apiKey = getenv(&amp;#39;SOFTLAYER_API_KEY&amp;#39;); $packageId = 194; try { $client = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, $packageId, $apiUsername, $apiKey); $filter = new stdClass(); $filter-&amp;gt;items = new stdClass(); $filter-&amp;gt;items-&amp;gt;prices = new stdClass(); $filter-&amp;gt;items-&amp;gt;prices-&amp;gt;locationGroupId = new stdClass(); $filter-&amp;gt;items-&amp;gt;prices-&amp;gt;locationGroupId-&amp;gt;operation = &amp;#39;is null&amp;#39;; $client-&amp;gt;setObjectFilter($filter); $standardPricing = $client-&amp;gt;getItems(); print_r($standardPricing); } catch (\Exception $e) { die(&amp;#39;Cannot compute.</description>
    </item>
    
    <item>
      <title>Find Location specific pricing for a package</title>
      <link>https://softlayer.github.io/python/location_based_pricing/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/location_based_pricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. In the following example we will query for the Dallas 6 data center, and then filter our item (Local Load Balancer) and prices to include only the location-based pricing for the specific data center we&amp;rsquo;re in —or we can filter for the standard price if a location-based price doesn&amp;rsquo;t exist.</description>
    </item>
    
    <item>
      <title>Find standard location pricing for a package</title>
      <link>https://softlayer.github.io/python/standard_pricing/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/standard_pricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. The following example shows how to get the Standard priceItemId for a package regardless of the location.
import SoftLayer import json object_filter = { &amp;#39;items&amp;#39;: { &amp;#39;prices&amp;#39;: { &amp;#39;locationGroupId&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;is null&amp;#39; } } } } client = SoftLayer.</description>
    </item>
    
    <item>
      <title>Order Firewall and Security Appliances</title>
      <link>https://softlayer.github.io/php/orderFirewalls/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/orderFirewalls/</guid>
      <description>&amp;lt;?php require_once &amp;#39;./vendor/autoload.php&amp;#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &amp;#39;&amp;#39;; $this-&amp;gt;apiKey = &amp;#39;&amp;#39;; } function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;#34;ID -&amp;gt; Name \n&amp;#34;; foreach($packages as $package) { print $package-&amp;gt;id . &amp;#34; -&amp;gt; &amp;#34; . $package-&amp;gt;name . &amp;#34;\n&amp;#34;; } } function getPackageById($id=0, $onlyShow=0, $showPrices=1) { $packageClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $package = $packageClient-&amp;gt;getItems(); print &amp;#34;ID, KeyName, Description \n&amp;#34;; foreach ($package as $item) { if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) { print $item-&amp;gt;id .</description>
    </item>
    
    <item>
      <title>Order Server with security software</title>
      <link>https://softlayer.github.io/php/orderBareMetal/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/orderBareMetal/</guid>
      <description>&amp;lt;?php require_once &amp;#39;./vendor/autoload.php&amp;#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &amp;#39;&amp;#39;; $this-&amp;gt;apiKey = &amp;#39;&amp;#39;; } function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;#34;ID -&amp;gt; Name \n&amp;#34;; foreach($packages as $package) { print $package-&amp;gt;id . &amp;#34; -&amp;gt; &amp;#34; . $package-&amp;gt;name . &amp;#34;\n&amp;#34;; } } function getPackageById($id=0, $onlyShow=0, $showPrices = 1) { $packageClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $package = $packageClient-&amp;gt;getItems(); print &amp;#34;ID, KeyName, Description \n&amp;#34;; foreach ($package as $item) { if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) { print $item-&amp;gt;id .</description>
    </item>
    
    <item>
      <title>Order an SSL Certificate</title>
      <link>https://softlayer.github.io/php/orderSSLCert/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/orderSSLCert/</guid>
      <description>Generating a CSR You will need a csr to make this request, it should be on your local file system.
openssl genrsa -out domain.key 2048 openssl req -new -sha256 -key domain.key -out domain.csr&amp;lt;?php require_once &amp;#39;./vendor/autoload.php&amp;#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &amp;#39;&amp;#39;; $this-&amp;gt;apiKey = &amp;#39;&amp;#39;; } /* * Package 0 is the &amp;#34;Everything else&amp;#34; pacakge, which contains SSL certain. But if you didn&amp;#39;t remember that * this function will get you that information */ function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;#34;ID -&amp;gt; Name \n&amp;#34;; foreach($packages as $package) { print $package-&amp;gt;id .</description>
    </item>
    
    <item>
      <title>Order an SSL Certificate</title>
      <link>https://softlayer.github.io/python/orderSSLCert/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderSSLCert/</guid>
      <description>Generating a CSR You will need a csr to make this request, it should be on your local file system.
The contents of the CSR MATTER, they need to match the information for what you are ordering. + orderApproverEmailAddress must match the Email Address of the CSR + The CSR Common name must be set and must be a part of the orderApproverEmailAddress
$ openssl genrsa -out domain.key 2048 $ openssl req -new -sha256 -key domain.</description>
    </item>
    
    <item>
      <title>List Packages</title>
      <link>https://softlayer.github.io/ruby/list_packages/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_packages/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Helper function to fetch through all results from SoftLayer api # using small page sizes and sleeping before every new page fetch. def fetch_all(service, method) records = []; offset = 0; limit = 10 loop do results = service.result_limit(offset, limit).send(method) records += results break if results.size &amp;lt; limit offset += limit sleep 3 end records end # Credentials to the SoftLayer API are grabbed from the config file by default.</description>
    </item>
    
    <item>
      <title>List Packages</title>
      <link>https://softlayer.github.io/python/list_packages/</link>
      <pubDate>Fri, 28 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_packages/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): &amp;#34;&amp;#34;&amp;#34; Gets ALL packages, and prints their name and price descriptions &amp;#34;&amp;#34;&amp;#34; mask = &amp;#34;mask[hourlyBillingAvailableFlag]&amp;#34; result = self.client[&amp;#39;Product_Package&amp;#39;].getAllObjects(); for product in result: print str(product[&amp;#39;id&amp;#39;]) + &amp;#34; - &amp;#34; + product[&amp;#39;name&amp;#39;] # result has a LOT of stuff in it, only print it out if you are ready # pp.pprint(result) def getPackage(self, package_id=0): &amp;#34;&amp;#34;&amp;#34; Gets a specific package and prints out some useful information &amp;#34;&amp;#34;&amp;#34; mask = &amp;#34;mask[items[prices]]&amp;#34; # Not all packages are available in all locations, you can check that with getLocations() # locations = self.</description>
    </item>
    
    <item>
      <title>Upgrade virtual guest</title>
      <link>https://softlayer.github.io/php/upgrade_virtual_guest/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/upgrade_virtual_guest/</guid>
      <description>&amp;lt;?php /* You can use the getenv() module to pull your exported Username and API key to keep from having to store them in your files */ require_once &amp;#39;./vendor/autoload.php&amp;#39;; $apiUsername = getenv(&amp;#39;SOFTLAYER_USERNAME&amp;#39;); $apiKey = getenv(&amp;#39;SOFTLAYER_API_KEY&amp;#39;); $client = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Order&amp;#39;, null, $apiUsername, $apiKey); //The price of the item you want to upgrade to $price1 = new \stdClass(); $price1-&amp;gt;id = 1641; //The virtual guest you want to upgrade $guest = new \stdClass(); $guest-&amp;gt;id = 22983449; $priceClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, 46, $apiUsername, $apiKey); $objectMask = new \SoftLayer\Common\ObjectMask(); $objectMask-&amp;gt;description; $objectMask-&amp;gt;capacity; $objectMask-&amp;gt;prices-&amp;gt;id; $objectMask-&amp;gt;categories-&amp;gt;id; $priceClient-&amp;gt;setObjectMask($objectMask); $items = $priceClient-&amp;gt;getObject(); //Shows you what prices are available to select from print_r($items); $upgrade = new \stdClass(); $upgrade-&amp;gt;complexType = &amp;#34;SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade&amp;#34;; $upgrade-&amp;gt;prices = array($price1); $upgrade-&amp;gt;properties = new \stdClass(); $upgrade-&amp;gt;properties-&amp;gt;maintenanceWindow; $upgrade-&amp;gt;properties-&amp;gt;maintenanceWindow-&amp;gt;name = &amp;#34;MAINTENANCE_WINDOW&amp;#34;; $upgrade-&amp;gt;properties-&amp;gt;maintenanceWindow-&amp;gt;value = &amp;#34;now&amp;#34;; $upgrade-&amp;gt;virtualGuests = array($guest); print_r($upgrade); //change to placeOrder($upgrade) to actually make it happen $response = $client-&amp;gt;placeOrder($upgrade); print_r($response); ?</description>
    </item>
    
    <item>
      <title>Required price IDs for package</title>
      <link>https://softlayer.github.io/php/get_required_price_id/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/get_required_price_id/</guid>
      <description>&amp;lt;?php /* follow the installation instructions to get SoftLayer API PHP Client working: https://github.com/softlayer/softlayer-api-php-client#installation */ require_once __DIR__.&amp;#39;/vendor/autoload.php&amp;#39;; use SoftLayer\Common\ObjectMask; use SoftLayer\SoapClient; /** * Set your SoftLayer API username and key. */ $apiUsername = &amp;#39;&amp;#39;; $apiKey = &amp;#39;&amp;#39;; $packageId = 46; $client = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, $packageId, $apiUsername, $apiKey); try { $mask = new SoftLayer\Common\ObjectMask(); $mask-&amp;gt;configuration-&amp;gt;itemCategory; $client-&amp;gt;setObjectMask($mask); $configs = $client-&amp;gt;getConfiguration(); $requiredCategories = array(); foreach ($configs as $config) { if ($config-&amp;gt;isRequired == 1) { $requiredCategories[$config-&amp;gt;itemCategory-&amp;gt;id][&amp;#39;name&amp;#39;] = $config-&amp;gt;itemCategory-&amp;gt;name; } } $categories = array(); $mask = new SoftLayer\Common\ObjectMask(); $mask-&amp;gt;itemPrices-&amp;gt;categories; $client-&amp;gt;setObjectMask($mask); $prices = $client-&amp;gt;getItemPrices(); foreach ($requiredCategories as $category =&amp;gt; $categoryName) { $i = 0; foreach ($prices as $price) { foreach ($price-&amp;gt;categories as $priceCategory) { if ($priceCategory-&amp;gt;id == $category) { $requiredCategories[$category][&amp;#39;itemPrices&amp;#39;][$i][&amp;#39;id&amp;#39;] = $price-&amp;gt;id; $requiredCategories[$category][&amp;#39;itemPrices&amp;#39;][$i][&amp;#39;description&amp;#39;] = $price-&amp;gt;item-&amp;gt;description; asort($requiredCategories[$category][&amp;#39;itemPrices&amp;#39;][$i]); asort($requiredCategories); $i++; } } } } print_r($requiredCategories); } catch ( Exception $e) { die( $e-&amp;gt;getMessage()); } ?</description>
    </item>
    
    <item>
      <title>Required price IDs for package</title>
      <link>https://softlayer.github.io/python/get_required_price_id/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_required_price_id/</guid>
      <description>import SoftLayer package = 46 client = SoftLayer.Client() categoryObjectMask = &amp;#34;mask[isRequired, itemCategory[id, name]]&amp;#34; configurations = client[&amp;#39;Product_Package&amp;#39;].getConfiguration( id=package, mask=categoryObjectMask) pricesObjectMask = &amp;#34;mask[id;item.description;categories.id]&amp;#34; prices = client[&amp;#39;Product_Package&amp;#39;].getItemPrices( id=package, mask=pricesObjectMask) headerFormat = &amp;#39;%s- %s:&amp;#39; priceFormat = &amp;#39; %s-- %s&amp;#39; for configuration in configurations: if (not configuration[&amp;#39;isRequired&amp;#39;]): continue print headerFormat % (configuration[&amp;#39;itemCategory&amp;#39;][&amp;#39;name&amp;#39;], configuration[&amp;#39;itemCategory&amp;#39;][&amp;#39;id&amp;#39;]) for price in prices: if (&amp;#39;categories&amp;#39; not in price): continue if any((category.get(&amp;#39;id&amp;#39;) == configuration[&amp;#39;itemCategory&amp;#39;][&amp;#39;id&amp;#39;] for category in price[&amp;#39;categories&amp;#39;])): print priceFormat % (price[&amp;#39;id&amp;#39;], price[&amp;#39;item&amp;#39;][&amp;#39;description&amp;#39;])</description>
    </item>
    
    <item>
      <title>Getting Started With User Data and Post Provisioning Scripts</title>
      <link>https://softlayer.github.io/blog/jarteche/getting-started-user-data-and-post-provisioning-scripts/</link>
      <pubDate>Thu, 21 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/jarteche/getting-started-user-data-and-post-provisioning-scripts/</guid>
      <description>The SoftLayer platform lets you add dynamic data and scripts when you place your order. The scripts are executed after the machine is booted.
To place a script on a virtual server, the script must be available through a URL.
Note: For HTTP URLs, the script is injected in the server and manually executed. For HTTPS URLs, the script is injected and automatically executed.
In this article, we use https://x.</description>
    </item>
    
    <item>
      <title>SoftLayer_Product_Package</title>
      <link>https://softlayer.github.io/reference/datatypes/SoftLayer_Product_Package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/datatypes/SoftLayer_Product_Package/</guid>
      <description>SoftLayer_Product_Package Service Datatype   Description The SoftLayer_Product_Package data type contains information about packages from which orders can be generated. Packages contain general information regarding what is in them, where they are currently sold, availability, and pricing.
associatedMethods  SoftLayer_Product_Package_Items::getObject SoftLayer_Product_Package_Item_Prices::getObject     Local description  A generic description of the processor type and count. This includes HTML, so you may want to strip these tags if you plan to use it.</description>
    </item>
    
    <item>
      <title>getAccountRestrictedActivePresets</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAccountRestrictedActivePresets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAccountRestrictedActivePresets/</guid>
      <description>SoftLayer_Product_Package::getAccountRestrictedActivePresets Retrieve the preset configurations available only for the authenticated account and this package.
Overview Retrieve the preset configurations available only for the authenticated account and this package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package_Preset[]</description>
    </item>
    
    <item>
      <title>getAccountRestrictedCategories</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAccountRestrictedCategories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAccountRestrictedCategories/</guid>
      <description>SoftLayer_Product_Package::getAccountRestrictedCategories Retrieve the results from this call are similar to [[SoftLayer_Product_Package/getCategories|getCategories]], but these ONLY include account-restricted prices. Not all accounts have restricted pricing.
Overview Retrieve the results from this call are similar to [[SoftLayer_Product_Package/getCategories|getCategories]], but these ONLY include account-restricted prices. Not all accounts have restricted pricing.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item_Category[]</description>
    </item>
    
    <item>
      <title>getAccountRestrictedPricesFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAccountRestrictedPricesFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAccountRestrictedPricesFlag/</guid>
      <description>SoftLayer_Product_Package::getAccountRestrictedPricesFlag Retrieve the flag to indicate if there are any restricted prices in a package for the currently-active account.
Overview Retrieve the flag to indicate if there are any restricted prices in a package for the currently-active account.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getActiveItems</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveItems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveItems/</guid>
      <description>SoftLayer_Product_Package::getActiveItems Retrieve the active items, as well as their prices and categories for this package
Overview Return a list of Items in the package with their active prices.
Parameters    Name Type Description      Required Headers  authenticate SoftLayer_Product_PackageInitParameters  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_ObjectMask SoftLayer_Product_PackageObjectFilter  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getActivePackagesByAttribute</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActivePackagesByAttribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActivePackagesByAttribute/</guid>
      <description>SoftLayer_Product_Package::getActivePackagesByAttribute [DEPRECATED] Retrieve the active [[SoftLayer_Product_Package]] objects from which you can order a server, service or software filtered by an attribute type ([[SoftLayer_Product_Package_Attribute_Type]]) on the package.
Overview This method is deprecated and should not be used in production code.
This method will return the [[SoftLayer_Product_Package]] objects from which you can order a bare metal server, virtual server, service (such as CDN or Object Storage) or other software filtered by an attribute type associated with the package.</description>
    </item>
    
    <item>
      <title>getActivePresets</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActivePresets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActivePresets/</guid>
      <description>SoftLayer_Product_Package::getActivePresets Retrieve the available preset configurations for this package.
Overview Retrieve the available preset configurations for this package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package_Preset[]</description>
    </item>
    
    <item>
      <title>getActivePrivateHostedCloudPackages</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActivePrivateHostedCloudPackages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActivePrivateHostedCloudPackages/</guid>
      <description>SoftLayer_Product_Package::getActivePrivateHostedCloudPackages Get the Active SoftLayer_Product_Packages from which one can order private hosted cloud configurations.
Overview This method pulls all the active private hosted cloud packages. This will give you a basic description of the packages that are currently active and from which you can order private hosted cloud configurations.
Parameters    Name Type Description      Required Headers  authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package[]</description>
    </item>
    
    <item>
      <title>getActiveRamItems</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveRamItems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveRamItems/</guid>
      <description>SoftLayer_Product_Package::getActiveRamItems Retrieve a collection of valid RAM items available for purchase in this package.
Overview Retrieve a collection of valid RAM items available for purchase in this package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getActiveServerItems</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveServerItems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveServerItems/</guid>
      <description>SoftLayer_Product_Package::getActiveServerItems Retrieve a collection of valid server items available for purchase in this package.
Overview Retrieve a collection of valid server items available for purchase in this package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getActiveSoftwareItems</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveSoftwareItems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveSoftwareItems/</guid>
      <description>SoftLayer_Product_Package::getActiveSoftwareItems Retrieve a collection of valid software items available for purchase in this package.
Overview Retrieve a collection of valid software items available for purchase in this package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getActiveUsagePrices</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveUsagePrices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveUsagePrices/</guid>
      <description>SoftLayer_Product_Package::getActiveUsagePrices Retrieve a collection of [[SoftLayer_Product_Item_Price]] objects for pay-as-you-go usage.
Overview Retrieve a collection of [[SoftLayer_Product_Item_Price]] objects for pay-as-you-go usage.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item_Price[]</description>
    </item>
    
    <item>
      <title>getActiveUsageRatePrices</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveUsageRatePrices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getActiveUsageRatePrices/</guid>
      <description>SoftLayer_Product_Package::getActiveUsageRatePrices Return the active usage rate prices for the current package.
Overview This method returns a collection of active usage rate [[SoftLayer_Product_Item_Price]] objects for the current package and specified datacenter. Optionally you can retrieve the active usage rate prices for a particular [[SoftLayer_Product_Item_Category]] by specifying a category code as the first parameter. This information is useful so that you can see &amp;ldquo;pay as you go&amp;rdquo; rates (if any) for the current package, location and optionally category.</description>
    </item>
    
    <item>
      <title>getAdditionalServiceFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAdditionalServiceFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAdditionalServiceFlag/</guid>
      <description>SoftLayer_Product_Package::getAdditionalServiceFlag Retrieve this flag indicates that the package is an additional service.
Overview Retrieve this flag indicates that the package is an additional service.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getAllObjects</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAllObjects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAllObjects/</guid>
      <description>SoftLayer_Product_Package::getAllObjects Get the Active SoftLayer_Product_Packages
Overview This method pulls all the active packages. This will give you a basic description of the packages that are currently active
Parameters    Name Type Description      Required Headers  authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_ObjectMask SoftLayer_Product_PackageObjectFilter resultLimit  Return Values SoftLayer_Product_Package[]</description>
    </item>
    
    <item>
      <title>getAttributes</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAttributes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAttributes/</guid>
      <description>SoftLayer_Product_Package::getAttributes Overview Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package_Attribute[]</description>
    </item>
    
    <item>
      <title>getAvailableLocations</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAvailableLocations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAvailableLocations/</guid>
      <description>SoftLayer_Product_Package::getAvailableLocations Retrieve a collection of valid locations for this package. (Deprecated - Use [[SoftLayer_Product_Package/getRegions|getRegions]])
Overview Retrieve a collection of valid locations for this package. (Deprecated - Use [[SoftLayer_Product_Package/getRegions|getRegions]])
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package_Locations[]</description>
    </item>
    
    <item>
      <title>getAvailablePackagesForImageTemplate</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAvailablePackagesForImageTemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAvailablePackagesForImageTemplate/</guid>
      <description>SoftLayer_Product_Package::getAvailablePackagesForImageTemplate Overview Parameters    Name Type Description     imageTemplate SoftLayer_Virtual_Guest_Block_Device_Template_Group      Required Headers  authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package[]</description>
    </item>
    
    <item>
      <title>getAvailableStorageUnits</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAvailableStorageUnits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getAvailableStorageUnits/</guid>
      <description>SoftLayer_Product_Package::getAvailableStorageUnits Retrieve the maximum number of available disk storage units associated with the servers in a package.
Overview Retrieve the maximum number of available disk storage units associated with the servers in a package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values unsigned integer</description>
    </item>
    
    <item>
      <title>getCategories</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getCategories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getCategories/</guid>
      <description>SoftLayer_Product_Package::getCategories Retrieve this is a collection of categories ([[SoftLayer_Product_Item_Category]]) associated with a package which can be used for ordering. These categories have several objects prepopulated which are useful when determining the available products for purchase. The categories contain groups ([[SoftLayer_Product_Package_Item_Category_Group]]) that organize the products and prices by similar features. For example, operating systems will be grouped by their manufacturer and virtual server disks will be grouped by their disk type (SAN vs.</description>
    </item>
    
    <item>
      <title>getCdnItems</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getCdnItems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getCdnItems/</guid>
      <description>SoftLayer_Product_Package::getCdnItems Overview Parameters    Name Type Description      Required Headers  authenticate SoftLayer_Product_PackageInitParameters  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getCloudStorageItems</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getCloudStorageItems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getCloudStorageItems/</guid>
      <description>SoftLayer_Product_Package::getCloudStorageItems Overview Parameters    Name Type Description     provider integer     Required Headers  authenticate SoftLayer_Product_PackageInitParameters  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getConfiguration</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getConfiguration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getConfiguration/</guid>
      <description>SoftLayer_Product_Package::getConfiguration Retrieve the item categories associated with a package, including information detailing which item categories are required as part of a SoftLayer product order.
Overview Retrieve the item categories associated with a package, including information detailing which item categories are required as part of a SoftLayer product order.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package_Order_Configuration[]</description>
    </item>
    
    <item>
      <title>getDefaultRamItems</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDefaultRamItems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDefaultRamItems/</guid>
      <description>SoftLayer_Product_Package::getDefaultRamItems Retrieve a collection of valid RAM items available for purchase in this package.
Overview Retrieve a collection of valid RAM items available for purchase in this package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getDeploymentNodeType</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDeploymentNodeType/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDeploymentNodeType/</guid>
      <description>SoftLayer_Product_Package::getDeploymentNodeType Retrieve the node type for a package in a solution deployment.
Overview Retrieve the node type for a package in a solution deployment.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values string</description>
    </item>
    
    <item>
      <title>getDeploymentPackages</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDeploymentPackages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDeploymentPackages/</guid>
      <description>SoftLayer_Product_Package::getDeploymentPackages Retrieve the packages that are allowed in a multi-server solution. (Deprecated)
Overview Retrieve the packages that are allowed in a multi-server solution. (Deprecated)
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package[]</description>
    </item>
    
    <item>
      <title>getDeploymentType</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDeploymentType/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDeploymentType/</guid>
      <description>SoftLayer_Product_Package::getDeploymentType Retrieve the solution deployment type.
Overview Retrieve the solution deployment type.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values string</description>
    </item>
    
    <item>
      <title>getDeployments</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDeployments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDeployments/</guid>
      <description>SoftLayer_Product_Package::getDeployments Retrieve the package that represents a multi-server solution. (Deprecated)
Overview Retrieve the package that represents a multi-server solution. (Deprecated)
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package[]</description>
    </item>
    
    <item>
      <title>getDisallowCustomDiskPartitions</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDisallowCustomDiskPartitions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getDisallowCustomDiskPartitions/</guid>
      <description>SoftLayer_Product_Package::getDisallowCustomDiskPartitions Retrieve this flag indicates the package does not allow custom disk partitions.
Overview Retrieve this flag indicates the package does not allow custom disk partitions.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getFirstOrderStep</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getFirstOrderStep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getFirstOrderStep/</guid>
      <description>SoftLayer_Product_Package::getFirstOrderStep Retrieve the Softlayer order step is optionally step-based. This returns the first SoftLayer_Product_Package_Order_Step in the step-based order process.
Overview Retrieve the Softlayer order step is optionally step-based. This returns the first SoftLayer_Product_Package_Order_Step in the step-based order process.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package_Order_Step</description>
    </item>
    
    <item>
      <title>getGatewayApplianceFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getGatewayApplianceFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getGatewayApplianceFlag/</guid>
      <description>SoftLayer_Product_Package::getGatewayApplianceFlag Retrieve whether the package is a specialized network gateway appliance package.
Overview Retrieve whether the package is a specialized network gateway appliance package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getGpuFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getGpuFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getGpuFlag/</guid>
      <description>SoftLayer_Product_Package::getGpuFlag Retrieve this flag indicates that the package supports GPUs.
Overview Retrieve this flag indicates that the package supports GPUs.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getHourlyBillingAvailableFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getHourlyBillingAvailableFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getHourlyBillingAvailableFlag/</guid>
      <description>SoftLayer_Product_Package::getHourlyBillingAvailableFlag Retrieve determines whether the package contains prices that can be ordered hourly.
Overview Retrieve determines whether the package contains prices that can be ordered hourly.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getHourlyOnlyOrders</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getHourlyOnlyOrders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getHourlyOnlyOrders/</guid>
      <description>SoftLayer_Product_Package::getHourlyOnlyOrders Retrieve packages with this flag do not allow monthly orders.
Overview Retrieve packages with this flag do not allow monthly orders.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getItemAvailabilityTypes</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemAvailabilityTypes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemAvailabilityTypes/</guid>
      <description>SoftLayer_Product_Package::getItemAvailabilityTypes Returns a collection of SoftLayer_Product_Item_Attribute_Type objects.
Overview Returns a collection of SoftLayer_Product_Item_Attribute_Type objects. These item attribute types specifically deal with when an item, SoftLayer_Product_Item, from the product catalog may no longer be available. The keynames for these attribute types start with &amp;lsquo;UNAVAILABLE_AFTERDATE&amp;rsquo;, where the &amp;lsquo;&amp;rsquo; may represent any string. For example, &amp;lsquo;UNAVAILABLE_AFTER_DATE_NEW_ORDERS&amp;rsquo;, signifies that the item is not available for new orders. There is a catch all attribute type, &amp;lsquo;UNAVAILABLE_AFTER_DATE_ALL&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>getItemConflicts</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemConflicts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemConflicts/</guid>
      <description>SoftLayer_Product_Package::getItemConflicts Retrieve the item-item conflicts associated with a package.
Overview Retrieve the item-item conflicts associated with a package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item_Resource_Conflict[]</description>
    </item>
    
    <item>
      <title>getItemLocationConflicts</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemLocationConflicts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemLocationConflicts/</guid>
      <description>SoftLayer_Product_Package::getItemLocationConflicts Retrieve the item-location conflicts associated with a package.
Overview Retrieve the item-location conflicts associated with a package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item_Resource_Conflict[]</description>
    </item>
    
    <item>
      <title>getItemPriceReferences</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemPriceReferences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemPriceReferences/</guid>
      <description>SoftLayer_Product_Package::getItemPriceReferences Retrieve cross reference for item prices
Overview Retrieve cross reference for item prices
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package_Item_Prices[]</description>
    </item>
    
    <item>
      <title>getItemPrices</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemPrices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemPrices/</guid>
      <description>SoftLayer_Product_Package::getItemPrices Retrieve a collection of SoftLayer_Product_Item_Prices that are valid for this package.
Overview Retrieve a collection of SoftLayer_Product_Item_Prices that are valid for this package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item_Price[]</description>
    </item>
    
    <item>
      <title>getItemPricesFromSoftwareDescriptions</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemPricesFromSoftwareDescriptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemPricesFromSoftwareDescriptions/</guid>
      <description>SoftLayer_Product_Package::getItemPricesFromSoftwareDescriptions Returns a collection of SoftLayer_Item_Price objects from a collection of SoftLayer_Software_Description that are available for the service offering (package).
Overview Return a collection of SoftLayer_Item_Price objects from a collection of SoftLayer_Software_Description
Parameters    Name Type Description     softwareDescriptions SoftLayer_Software_Description[]  The software that the item prices will be returned for.   includeTranslationsFlag boolean The flag to specify whether software translations should be considered when looking at the software descriptions.</description>
    </item>
    
    <item>
      <title>getItems</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItems/</guid>
      <description>SoftLayer_Product_Package::getItems Retrieve a collection of valid items available for purchase in this package.
Overview Retrieve a collection of valid items available for purchase in this package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getItemsFromImageTemplate</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemsFromImageTemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getItemsFromImageTemplate/</guid>
      <description>SoftLayer_Product_Package::getItemsFromImageTemplate Return a collection of [[SoftLayer_Product_Item]] objects from a [[SoftLayer_Virtual_Guest_Block_Device_Template_Group]] object
Overview Return a collection of [[SoftLayer_Product_Item]] objects from a [[SoftLayer_Virtual_Guest_Block_Device_Template_Group]] object
Parameters    Name Type Description     imageTemplate SoftLayer_Virtual_Guest_Block_Device_Template_Group  The image template that the items will be returned for.    Required Headers  authenticate SoftLayer_Product_PackageInitParameters  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getLocations</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getLocations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getLocations/</guid>
      <description>SoftLayer_Product_Package::getLocations Retrieve a collection of valid locations for this package. (Deprecated - Use [[SoftLayer_Product_Package/getRegions|getRegions]])
Overview Retrieve a collection of valid locations for this package. (Deprecated - Use [[SoftLayer_Product_Package/getRegions|getRegions]])
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Location[]</description>
    </item>
    
    <item>
      <title>getLowestServerPrice</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getLowestServerPrice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getLowestServerPrice/</guid>
      <description>SoftLayer_Product_Package::getLowestServerPrice Retrieve the lowest server [[SoftLayer_Product_Item_Price]] related to this package.
Overview Retrieve the lowest server [[SoftLayer_Product_Item_Price]] related to this package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item_Price</description>
    </item>
    
    <item>
      <title>getMaximumPortSpeed</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getMaximumPortSpeed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getMaximumPortSpeed/</guid>
      <description>SoftLayer_Product_Package::getMaximumPortSpeed Retrieve the maximum available network speed associated with the package.
Overview Retrieve the maximum available network speed associated with the package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values unsigned integer</description>
    </item>
    
    <item>
      <title>getMessageQueueItems</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getMessageQueueItems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getMessageQueueItems/</guid>
      <description>SoftLayer_Product_Package::getMessageQueueItems Overview Parameters    Name Type Description      Required Headers  authenticate SoftLayer_Product_PackageInitParameters  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item[]</description>
    </item>
    
    <item>
      <title>getMinimumPortSpeed</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getMinimumPortSpeed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getMinimumPortSpeed/</guid>
      <description>SoftLayer_Product_Package::getMinimumPortSpeed Retrieve the minimum available network speed associated with the package.
Overview Retrieve the minimum available network speed associated with the package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values unsigned integer</description>
    </item>
    
    <item>
      <title>getMongoDbEngineeredFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getMongoDbEngineeredFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getMongoDbEngineeredFlag/</guid>
      <description>SoftLayer_Product_Package::getMongoDbEngineeredFlag Retrieve this flag indicates that this is a MongoDB engineered package. (Deprecated)
Overview Retrieve this flag indicates that this is a MongoDB engineered package. (Deprecated)
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getNonEuCompliantFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getNonEuCompliantFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getNonEuCompliantFlag/</guid>
      <description>SoftLayer_Product_Package::getNonEuCompliantFlag Retrieve whether the package is not in compliance with EU support.
Overview Retrieve whether the package is not in compliance with EU support.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getObject</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getObject/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getObject/</guid>
      <description>SoftLayer_Product_Package::getObject Retrieve a SoftLayer_Product_Package record.
Overview Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package</description>
    </item>
    
    <item>
      <title>getObjectStorageDatacenters</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getObjectStorageDatacenters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getObjectStorageDatacenters/</guid>
      <description>SoftLayer_Product_Package::getObjectStorageDatacenters Returns a collection of datacenters where object storage is available plus the associated active usage rate prices.
Overview This method will return a collection of [[SoftLayer_Container_Product_Order_Network_Storage_Hub_Datacenter]] objects which contain a datacenter location and all the associated active usage rate prices where object storage is available. This method is really only applicable to the object storage additional service package which has a [[SoftLayer_Product_Package_Type]] of &amp;ldquo;&amp;lsquo;ADDITIONAL_SERVICES_OBJECT_STORAGE&amp;rdquo;&amp;lsquo;. This information is useful so that you can see the &amp;ldquo;pay as you go&amp;rdquo; rates per datacenter.</description>
    </item>
    
    <item>
      <title>getObjectStorageLocationGroups</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getObjectStorageLocationGroups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getObjectStorageLocationGroups/</guid>
      <description>SoftLayer_Product_Package::getObjectStorageLocationGroups Returns a collection of location groups where object storage is available plus the associated active usage rate prices.
Overview This method will return a collection of [[SoftLayer_Container_Product_Order_Network_Storage_ObjectStorage_LocationGroup]] objects which contain a location group and all the associated active usage rate prices where object storage is available. This method is really only applicable to the object storage additional service package which has a [[SoftLayer_Product_Package_Type]] of &amp;ldquo;&amp;lsquo;ADDITIONAL_SERVICES_OBJECT_STORAGE&amp;rdquo;&amp;lsquo;. This information is useful so that you can see the &amp;ldquo;pay as you go&amp;rdquo; rates per location group.</description>
    </item>
    
    <item>
      <title>getOrderPremiums</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getOrderPremiums/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getOrderPremiums/</guid>
      <description>SoftLayer_Product_Package::getOrderPremiums Retrieve the premium price modifiers associated with the [[SoftLayer_Product_Item_Price]] and [[SoftLayer_Location]] objects in a package.
Overview Retrieve the premium price modifiers associated with the [[SoftLayer_Product_Item_Price]] and [[SoftLayer_Location]] objects in a package.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item_Price_Premium[]</description>
    </item>
    
    <item>
      <title>getPopLocationAvailabilityFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPopLocationAvailabilityFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPopLocationAvailabilityFlag/</guid>
      <description>SoftLayer_Product_Package::getPopLocationAvailabilityFlag Retrieve this flag indicates if the package may be available in PoP locations in addition to Datacenters.
Overview Retrieve this flag indicates if the package may be available in PoP locations in addition to Datacenters.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getPreconfiguredFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPreconfiguredFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPreconfiguredFlag/</guid>
      <description>SoftLayer_Product_Package::getPreconfiguredFlag Retrieve this flag indicates the package is pre-configured. (Deprecated)
Overview Retrieve this flag indicates the package is pre-configured. (Deprecated)
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getPresetConfigurationRequiredFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPresetConfigurationRequiredFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPresetConfigurationRequiredFlag/</guid>
      <description>SoftLayer_Product_Package::getPresetConfigurationRequiredFlag Retrieve whether the package requires the user to define a preset configuration.
Overview Retrieve whether the package requires the user to define a preset configuration.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getPreventVlanSelectionFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPreventVlanSelectionFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPreventVlanSelectionFlag/</guid>
      <description>SoftLayer_Product_Package::getPreventVlanSelectionFlag Retrieve whether the package prevents the user from specifying a Vlan.
Overview Retrieve whether the package prevents the user from specifying a Vlan.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getPrivateHostedCloudPackageFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPrivateHostedCloudPackageFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPrivateHostedCloudPackageFlag/</guid>
      <description>SoftLayer_Product_Package::getPrivateHostedCloudPackageFlag Retrieve this flag indicates the package is for a private hosted cloud deployment. (Deprecated)
Overview Retrieve this flag indicates the package is for a private hosted cloud deployment. (Deprecated)
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getPrivateHostedCloudPackageType</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPrivateHostedCloudPackageType/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPrivateHostedCloudPackageType/</guid>
      <description>SoftLayer_Product_Package::getPrivateHostedCloudPackageType Retrieve the server role of the private hosted cloud deployment. (Deprecated)
Overview Retrieve the server role of the private hosted cloud deployment. (Deprecated)
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values string</description>
    </item>
    
    <item>
      <title>getPrivateNetworkOnlyFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPrivateNetworkOnlyFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getPrivateNetworkOnlyFlag/</guid>
      <description>SoftLayer_Product_Package::getPrivateNetworkOnlyFlag Retrieve whether the package only has access to the private network.
Overview Retrieve whether the package only has access to the private network.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getQuantaStorPackageFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getQuantaStorPackageFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getQuantaStorPackageFlag/</guid>
      <description>SoftLayer_Product_Package::getQuantaStorPackageFlag Retrieve whether the package is a specialized mass storage QuantaStor package. (Deprecated)
Overview Retrieve whether the package is a specialized mass storage QuantaStor package. (Deprecated)
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getRaidDiskRestrictionFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getRaidDiskRestrictionFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getRaidDiskRestrictionFlag/</guid>
      <description>SoftLayer_Product_Package::getRaidDiskRestrictionFlag Retrieve this flag indicates the package does not allow different disks with RAID.
Overview Retrieve this flag indicates the package does not allow different disks with RAID.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getRedundantPowerFlag</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getRedundantPowerFlag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getRedundantPowerFlag/</guid>
      <description>SoftLayer_Product_Package::getRedundantPowerFlag Retrieve this flag determines if the package contains a redundant power supply product.
Overview Retrieve this flag determines if the package contains a redundant power supply product.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values boolean</description>
    </item>
    
    <item>
      <title>getRegions</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getRegions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getRegions/</guid>
      <description>SoftLayer_Product_Package::getRegions Retrieve the regional locations that a package is available in.
Overview Retrieve the regional locations that a package is available in.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter resultLimit SoftLayer_ObjectMask  Return Values SoftLayer_Location_Region[]</description>
    </item>
    
    <item>
      <title>getResourceGroupTemplate</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getResourceGroupTemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getResourceGroupTemplate/</guid>
      <description>SoftLayer_Product_Package::getResourceGroupTemplate Retrieve the resource group template that describes a multi-server solution. (Deprecated)
Overview Retrieve the resource group template that describes a multi-server solution. (Deprecated)
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values SoftLayer_Resource_Group_Template</description>
    </item>
    
    <item>
      <title>getStandardCategories</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getStandardCategories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getStandardCategories/</guid>
      <description>SoftLayer_Product_Package::getStandardCategories This call is similar to [[SoftLayer_Product_Package/getCategories|getCategories]], except that it does not include account-restricted pricing. Not all accounts have restricted pricing.
Overview This call is similar to [[SoftLayer_Product_Package/getCategories|getCategories]], except that it does not include account-restricted pricing. Not all accounts have restricted pricing.
Parameters    Name Type Description      Required Headers  authenticate SoftLayer_Product_PackageInitParameters  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_ObjectMask  Return Values SoftLayer_Product_Item_Category[]</description>
    </item>
    
    <item>
      <title>getTopLevelItemCategoryCode</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getTopLevelItemCategoryCode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getTopLevelItemCategoryCode/</guid>
      <description>SoftLayer_Product_Package::getTopLevelItemCategoryCode Retrieve the top level category code for this service offering.
Overview Retrieve the top level category code for this service offering.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values string</description>
    </item>
    
    <item>
      <title>getType</title>
      <link>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getType/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/reference/services/SoftLayer_Product_Package/getType/</guid>
      <description>SoftLayer_Product_Package::getType Retrieve the type of service offering. This property can be used to help filter packages.
Overview Retrieve the type of service offering. This property can be used to help filter packages.
Parameters    Name Type Description      Required Headers  SoftLayer_Product_PackageInitParameters authenticate  Optional Headers  SoftLayer_Product_PackageObjectMask SoftLayer_Product_PackageObjectFilter SoftLayer_ObjectMask  Return Values SoftLayer_Product_Package_Type</description>
    </item>
    
  </channel>
</rss>