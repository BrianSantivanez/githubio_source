<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Article on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/article/</link>
    <description>Recent content in Article on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/article/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exception Handling in the SoftLayer API</title>
      <link>https://softlayer.github.io/article/exception-handling-softlayer-api/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/exception-handling-softlayer-api/</guid>
      <description>Like any programming interface the SoftLayer API at times needs to return error messages to its users. The SoftLayer API brings these exceptions forward to the user so their application can handle the unexpected result. Exceptions are returned as SOAP, REST, or XML-RPC faults depending on the RPC method used to execute your API method call. Programming and scripting languages with SOAP and XML-RPC support usually have built-in methods for handling faults.</description>
    </item>
    
    <item>
      <title>Creating an Object Storage instance</title>
      <link>https://softlayer.github.io/article/create-object-storage/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/create-object-storage/</guid>
      <description>Create an Object Storage Instance This tutorial walks you through creating a IBM Cloud Object Storage instance.
Objectives  Create an object storage instance.  Services used This tutorial uses the following technologies: * ibmcloud IBM Cloud CLI
This tutorial may incur costs. Use the Pricing Calculator to generate a cost estimate based on your projected usage.
Install IBM Cloud CLI To install the toolset, you can run the relevant command to start the installer.</description>
    </item>
    
    <item>
      <title>Single Account Billing Detail</title>
      <link>https://softlayer.github.io/article/single-account-billing-detail/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/single-account-billing-detail/</guid>
      <description>Account Level Billing This tutorial walks you through accessing detailed billing data for a single specified account using a specified time and date range.
Objectives  Understand how to use multiple API services and methods to access detailed billing data for a specified account using a specified time and date range.  Services used This tutorial uses the following technologies: * SoftLayer Python Library * Billing_Invoice Service * Billing_Invoice_Item Service * Billing_item Service</description>
    </item>
    
    <item>
      <title>Automating Block Storage</title>
      <link>https://softlayer.github.io/article/AutomatingStorage/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/AutomatingStorage/</guid>
      <description>The Process  Order a VSI with a postInstall script Order a storage volume Update the metadata of the VSI to include the needed information to mount the storage volume postInstall script gets metadata from the metadata service, and mounts the volume  Ordering Code This script will order a VSI, based on a configuration in the file, then order some storage, authorize storage to the new VSI, and set the VSI&amp;rsquo;s metadata with the needed information for it to be mounted.</description>
    </item>
    
    <item>
      <title>Sub-Organization Billing Detail</title>
      <link>https://softlayer.github.io/article/sub-org-billing-detail/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/sub-org-billing-detail/</guid>
      <description>Sub-org Billing Detail This tutorial walks you through accessing the steps required to access detailed billing data across sub-organization accounts using a specified date and time range.
Objectives Understand how to use multiple API services and methods to access detailed billing data for all sub organization accounts for a specified time and date range.
Services used This tutorial uses the following technologies: * SoftLayer Python Library * Account Service * Billing_Invoice Service * Billing_Invoice_Item Service * Billing_item Service</description>
    </item>
    
    <item>
      <title>Understanding and building an order using the Softlayer order CLI</title>
      <link>https://softlayer.github.io/article/understanding-ordering/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/understanding-ordering/</guid>
      <description>In version 5.4.0 of softlayer-python, there is a new slcli command for placing IaaS cloud server orders using the API. This command can also be used to place orders for products that are normally ordered through the IBM Cloud infrastructure customer portal. There are multiple helpers to assist you in creating a specific order. In these examples, you will learn how to:
 Build an order  Understand the order structure Search for server packages Identify categories of items Verify the order Place the order  Place an order programmatically using Python.</description>
    </item>
    
    <item>
      <title>VSI Flavors</title>
      <link>https://softlayer.github.io/article/vsiflavors/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/vsiflavors/</guid>
      <description>The introduction of Flavors to VSI ordering significantly changes how VSIs are ordered, and the old style of ordering will eventually become unsupported. This page will hopefully explain what changes need to be made to any scripts that order VSIs.
Support for flavors has been added to the SLCLI, so make sure you have at least version 5.4.0.
Getting a Flavor List SoftLayer_Virtual_Guest::getCreateObjectOptions is where you can find out the flavor listing, along with all other options you might want to supply to SoftLayer_Virtual_Guest::createObject</description>
    </item>
    
    <item>
      <title>SLDN Articles</title>
      <link>https://softlayer.github.io/article/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Object-Filters</title>
      <link>https://softlayer.github.io/article/object-filters/</link>
      <pubDate>Tue, 02 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/object-filters/</guid>
      <description>Object filters can be used to limit the results returned by the API. They differ from objectMasks in that they determine which objects are returned while objectMasks define what properties to retrieve from the returned objects.
Structure An object filter is created by defining a property hierarchy through the relational and local properties. The property to be filtered will be a structure that represents the object filters conditional.
Each filter object will have at least an &amp;lsquo;operation&amp;rsquo; property and may contain one or more &amp;lsquo;options&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Object-Masks</title>
      <link>https://softlayer.github.io/article/object-masks/</link>
      <pubDate>Mon, 03 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/object-masks/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Overview Structure  Root Node Property Property Set Payload reduction Type   Syntax API interaction  SOAP XML-RPC REST   Legacy Object Masks     Overview In order to obtain relational data from an object in the API you must declare an object mask in your API call. With standard object masks, relational data is pulled using a SOAP header, an XML-RPC struct or a GET parameter in REST.</description>
    </item>
    
    <item>
      <title>SSL Management</title>
      <link>https://softlayer.github.io/article/ssl-management/</link>
      <pubDate>Wed, 28 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/ssl-management/</guid>
      <description>3/14/2012: Added the ability to provide SSL offloading to the local Load Balancing service in Softlayer. The load balancing service allows you to manage the offload capability, as well as, access the SSL certificate manager. In order to utilize SSL offloading, a load balancer must be purchased that offers the capability.
The SoftLayer_Security_Certificate service provides access to the new certificate manager. There are no restrictions on the number or origin of certificates, so please feel free to use it as a centralized storage location for all of your SSL certificates.</description>
    </item>
    
    <item>
      <title>An Introduction to Object Storage</title>
      <link>https://softlayer.github.io/article/introduction-object-storage/</link>
      <pubDate>Wed, 08 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/introduction-object-storage/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Authentication Endpoints Key Architecture Points  Account Cluster Container Object   Key Object Storage Feature  CDN Integration CDN API Search Service API Search API   Language Bindings    With the release of SoftLayer Object Storage, we wanted to integrate brand-unique, value-added features on top of the already comprehensive tools that have been set in place to provide a first-in-class product for our customers.</description>
    </item>
    
    <item>
      <title>CDN-Integration</title>
      <link>https://softlayer.github.io/article/cdn-integration--getting-information-you-need-faster/</link>
      <pubDate>Wed, 08 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/cdn-integration--getting-information-you-need-faster/</guid>
      <description>With the ObjectStorage product offering, CDN integration comes standard with every account. In this global market, our clients are located around the world, many having multiple locations in different cities, countries and even different continents. With CDN integration, our clients won’t have to worry about lag time when retrieving information based on where they are located. Upon activating CDN integration for a piece of data, your information is replicated to each of our Points of Presence (POPs).</description>
    </item>
    
    <item>
      <title>Searching SoftLayer Object Storage</title>
      <link>https://softlayer.github.io/article/api-operations-search-services/</link>
      <pubDate>Wed, 08 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/api-operations-search-services/</guid>
      <description>Search EOS Message Subject: Event 72839777 - End of Support for Object Storage OpenStack Swift (Infrastructure) select features and datacenter locations- Action Required Severity: Major
Effective March 31st, 2019, IBM Cloud will no longer support the following Object Storage OpenStack Swift (infrastructure) features:
-Static Site Access -Content Delivery Network (CDN) -Search -Image Templates import/export
Migration Assistance Need migration help? Refer to the IBM Cloud Object Storage documentation for migration instructions and how to use the data migration tool to efficiently migrate your data - https://cloud.</description>
    </item>
    
    <item>
      <title>SOAP in Perl</title>
      <link>https://softlayer.github.io/article/implementing-soap-perl/</link>
      <pubDate>Mon, 11 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/implementing-soap-perl/</guid>
      <description>Since writing this guide we&#39;ve created a Perl specific implementation and manual page. Check them out!
Our Perl SOAP API examples perform simple retrieval operations and output results to your Perl console. We use the SOAP::Lite Perl module to handle generating our SOAP headers, generating our SOAP request, then interpreting the result from the method call. Each of these examples execute a single method call to retrieve its data. We&#39;ll start out with a simple direct call, implement an object mask, then combine the two.</description>
    </item>
    
    <item>
      <title>Authenticating to the SoftLayer API</title>
      <link>https://softlayer.github.io/article/authenticating-softlayer-api/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/authenticating-softlayer-api/</guid>
      <description>Note about IBMid More information about how IBMid works can be found here: - https://console.bluemix.net/docs/account/softlayerlink.html#unifyingaccounts - https://console.bluemix.net/docs/customer-portal/cpmanibmid.html#customerportal_ibmid - https://console.bluemix.net/docs/iam/apikeys.html#manapikey
Currently when an IBMid is linked to SoftLayer, a user record is created in the SoftLayer environment, with a username that matches the email used to login. While you won&amp;rsquo;t be able to login to the SoftLayer control portal directly with your password(instead you will need to authenticate with the IBMid service), you can still follow these steps to create an API key for your SoftLayer Infrastructure</description>
    </item>
    
    <item>
      <title>C Sharp</title>
      <link>https://softlayer.github.io/article/c-sharp/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/c-sharp/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Consuming SOAP WSDLs  Creating Web References Using wsdl.exe   Making API Calls  Creating Service Objects Binding Authentication Setting Initialization Parameters   Using Object Masks Using Result Limits Error Handling Caveats  Setting &amp;ldquo;Specified&amp;rdquo; Properties What to do When API Services Change   Referenced API Components  Services Data Types Methods   External Links    Consuming SOAP WSDLs There are two ways to import SoftLayer&amp;rsquo;s API WSDLs into your project.</description>
    </item>
    
    <item>
      <title>Date Handling in the SoftLayer API</title>
      <link>https://softlayer.github.io/article/date-handling-softlayer-api/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/date-handling-softlayer-api/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  The dateTime Datatype Setting Your Time Zone  Portal API   See Also External Links    Most of the data presented in the SoftLayer API is date-sensitive. Servers have provision dates, tickets have modify dates, and nearly everything has a creation date. To maintain compliancy and consistency standards for all of our users worldwide, SoftLayer presents its dates in [http://www.iso.org/iso/date_and_time_format ISO 8601] format under the data type &amp;ldquo;dateTime&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://softlayer.github.io/article/getting-started/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/getting-started/</guid>
      <description>Before You Start Choosing a Protocol SoftLayer&amp;rsquo;s API can be accessed by [[SOAP]], [[XML-RPC]], or [[REST|RESTful]] means. Choose the best protocol for your preferred language and situation. We generally recommend using our SOAP interface, as it&amp;rsquo;s the most comprehensive and most easily models the API&amp;rsquo;s services and data types.
    Advantages   Disadvantages   Recommended For   Recommended Languages      [[SOAP]]   It&amp;rsquo;s the fastest of the three protocols and allows you to make direct calls against SoftLayer&amp;rsquo;s API services and data types.</description>
    </item>
    
    <item>
      <title>Legacy Object Masks</title>
      <link>https://softlayer.github.io/article/legacy-object-masks/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/legacy-object-masks/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Structure Creating an Object Mask Referenced API Components  Services Data Types   Internal Links    Most of the data types modeled in the SoftLayer API contain relational properties that tie one data type to another. For instance, a SoftLayer_Account has links to its domains, support tickets, hardware, users, and much more. By default, calling the [[SoftLayer_Account]] service&amp;rsquo;s getObject method won&amp;rsquo;t retrieve relational and count properties.</description>
    </item>
    
    <item>
      <title>PERL</title>
      <link>https://softlayer.github.io/article/perl/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/perl/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Making API Calls Using Object Masks Using Result Limits Error Handling Referenced API Components  Services Data Types Methods   External Links    SoftLayer provides a Perl-based API client that takes the heavy lifting out of making manual SOAP API calls. To use this API client, the following system requirements must be met:
 Perl 5.6 or higher SOAP::Lite XML::Hash::LX  Download the SoftLayer Perl API client from its project page on SoftLayer’s github profile.</description>
    </item>
    
    <item>
      <title>PHP</title>
      <link>https://softlayer.github.io/article/php/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/php/</guid>
      <description>SoftLayer provides a PHP-based API client that takes the heavy lifting out making manual SOAP or XML-RPC calls. To use the PHP-based API client, the following system requirements must be met:
 PHP 5.2.3 or higher One of the following PHP extensions:  SOAP XML-RPC    Download the SoftLayer PHP API client from its project page on SoftLayer&amp;rsquo;s github profile. Once downloaded, extract the PHP API Client to a directory local to your PHP project or into your PHP installation&amp;rsquo;s include_path.</description>
    </item>
    
    <item>
      <title>Permission Enforcement in the SoftLayer API</title>
      <link>https://softlayer.github.io/article/permission-enforcement-softlayer-api/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/permission-enforcement-softlayer-api/</guid>
      <description>The SoftLayer API is built around the same system of user permissions that power the SoftLayer customer portal. What the API exposes and allows depends on the authenticated user account that is making the call and that user&amp;rsquo;s permission set. Your account&amp;rsquo;s master user has full permissions to every service and method associated with your account. Please be wary if you choose to execute API method calls using your account&amp;rsquo;s master user.</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://softlayer.github.io/article/python/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/python/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Python Making API Calls Using Object Masks Using Result Limits Error Handling Managers More Resources    Python SoftLayer, an IBM company, provides a Python-based API package that takes the heavy lifting out of making manual XML-RPC API calls. Our Python-based API requires a minimum of Python 2.6 To install the Python package into your Python installation’s site-packages directory, run the following command:

pip install softlayer</description>
    </item>
    
    <item>
      <title>REST</title>
      <link>https://softlayer.github.io/article/rest/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/rest/</guid>
      <description>SoftLayer provides a RESTful API in addition to RPC-style API services. Use the REST API in cases where your programming language may not have good SOAP or XML-RPC support but can perform simple HTTP protocol actions and can interpret XML or JSON data.
REST URLs REST API URLs are structured to easily traverse SoftLayer&amp;rsquo;s object hierarchy. A basic REST request is structured as follows:
curl -u [username]:[apiKey] -d &amp;#39;{&amp;#34;parameters&amp;#34;: [&amp;#34;fisrt&amp;#34;, &amp;#34;second&amp;#34;]}&amp;#39; https://api.</description>
    </item>
    
    <item>
      <title>Ruby</title>
      <link>https://softlayer.github.io/article/ruby/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/ruby/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Making API Calls  Authentication Calling Service Methods Identifying Particular Objects   Using Object Masks Error Handling Referenced API Components  Services Data Types Methods   External Links    The Ruby client is available as the softlayer_api Ruby gem. On most systems, the command:
gem install softlayer_api installs the gem and makes it available to Ruby scripts. Where the gem is installed on your computer will depend on your particular distribution of Ruby.</description>
    </item>
    
    <item>
      <title>SOAP</title>
      <link>https://softlayer.github.io/article/soap/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/soap/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  WSDL URLs and Files Sending API Call Headers Using Object Masks Using Result Limits Error Handling Caveats  WSDL and XSD File Sizes   External Links    SoftLayer provides a SOAP interface in addition to [[XML-RPC]] and [[REST]]. We recommend using the SOAP API, as it is the most comprehensive API that we currently offer.
WSDL URLs and Files The SoftLayer SOAP API has one endpoint per available API service.</description>
    </item>
    
    <item>
      <title>Using Initialization Parameters in the SoftLayer API</title>
      <link>https://softlayer.github.io/article/using-initialization-parameters-softlayer-api/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/using-initialization-parameters-softlayer-api/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Structure Creating an Initialization Parameter  SOAP XML-RPC REST   Exceptions to the Rule    Prior to calling methods on some objects represented in the [[SoftLayer API]], a unique identifier must be used during instantiation of the service. SoftLayer provides a way to instantiate your service objects by passing the service&amp;rsquo;s initialization parameter in the header of your API calls. Once this action is complete, all methods following this header will be directed to the method containing the initialization parameter.</description>
    </item>
    
    <item>
      <title>Using Result Limits in the SoftLayer API</title>
      <link>https://softlayer.github.io/article/using-result-limits-softlayer-api/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/using-result-limits-softlayer-api/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Structure Creating a Result Limit    Many of the methods in the SoftLayer API return arrays of data types. In these cases it may be useful to limit the number of results that the API retrieves from your method call. Fortunately SoftLayer provides an easy way to accomplish this via a method analogous to the SQL LIMIT statement that you can apply in the header of your method calls.</description>
    </item>
    
    <item>
      <title>Visual Basic .NET</title>
      <link>https://softlayer.github.io/article/visual-basic-net/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/visual-basic-net/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Consuming SOAP WSDLs  Creating Web References Using Wsdl.exe   Making API Calls  Creating Service Objects Binding Authentication Setting Initialization Parameters Making the API Call   Using Object Masks Using Result Limits Error Handling Caveats  Setting &amp;ldquo;Specified&amp;rdquo; Properties What to do When API Services Change   Referenced API Components  Services Data Types Methods   External Links    Consuming SOAP WSDLs There are two ways to import SoftLayer&amp;rsquo;s API WSDLs into your project.</description>
    </item>
    
    <item>
      <title>XML-RPC</title>
      <link>https://softlayer.github.io/article/xml-rpc/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/xml-rpc/</guid>
      <description>SoftLayer provides an XML-RPC interface in addition to [[SOAP]] and [[REST]]. The XML-RPC API is built to mimic the SOAP interface. We recommend using the XML-RPC API when your chosen language doesn&amp;rsquo;t have proper SOAP support.
Endpoint URLs The SoftLayer XML-RPC API has one endpoint per available API service. Each endpoint has a unique URL containing the service name of the API services that it calls. For example: https://api.softlayer.com/xmlrpc/v3/&amp;lt;serviceName&amp;gt; or http://api.</description>
    </item>
    
  </channel>
</rss>