<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/errors/index.xml</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>Handle API errors</title>
      <link>https://softlayer.github.io/go/errors/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/go/errors/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
    &amp;quot;fmt&amp;quot;
    &amp;quot;log&amp;quot;

    &amp;quot;github.com/softlayer/softlayer-go/services&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/session&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/sl&amp;quot;
)

var invalidId = 0

func main() {
    // Create a session
    sess := session.New()

    // Call DeleteObject on an invalid virtual guest
    _, err := services.GetVirtualGuestService(sess).
        Id(invalidId).
        DeleteObject()

    // Check the error.  In this instance, a 404 is handled by the application.  
  // Anything else is a no-go.
    if err != nil {
        // Try to type assert the error and look for http status code 404
        if apiErr, ok := err.(sl.Error); ok &amp;amp;&amp;amp; apiErr.StatusCode == 404 {
            fmt.Println(&amp;quot;Virtual Guest not found (already deleted?)&amp;quot;)
        } else {
            log.Fatal(&amp;quot;Unhandled error:&amp;quot;, err)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>