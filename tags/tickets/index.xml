<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tickets on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/tickets/</link>
    <description>Recent content in Tickets on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Feb 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/tickets/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Get tickets using an objectFilter</title>
      <link>https://softlayer.github.io/python/ticket_filter/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/ticket_filter/</guid>
      <description>import SoftLayer from pprint import pprint as pp import logging class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): # logger = logging.getLogger() # logger.addHandler(logging.StreamHandler()) # logger.setLevel(3) theDate = &amp;#34;02/25/2016 01:00:00&amp;#34; endDate = &amp;#34;02/29/2016 01:00:00&amp;#34; mask = &amp;#34;mask[updates,group[name]]&amp;#34; theFilter1 = { &amp;#39;tickets&amp;#39;: { &amp;#39;createDate&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;betweenDate&amp;#39;, &amp;#39;options&amp;#39;: [ {&amp;#39;name&amp;#39;: &amp;#39;startDate&amp;#39;, &amp;#39;value&amp;#39;: [theDate]}, {&amp;#39;name&amp;#39;: &amp;#39;endDate&amp;#39;, &amp;#39;value&amp;#39;: [endDate]} ] } } } theFilter2 = { &amp;#39;tickets&amp;#39;: { &amp;#39;createDate&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;greaterThanDate&amp;#39;, &amp;#39;options&amp;#39;: [ {&amp;#39;name&amp;#39;: &amp;#39;date&amp;#39;, &amp;#39;value&amp;#39;: [theDate]} ] }, &amp;#39;group&amp;#39; : { &amp;#39;name&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;Cancellations&amp;#39; } } } } result = self.</description>
    </item>
    
    <item>
      <title>Get tickets using an objectFilter</title>
      <link>https://softlayer.github.io/php/ticket_filter/</link>
      <pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/ticket_filter/</guid>
      <description>&amp;lt;?php /* You can use the getenv() module to pull your exported Username and API key to keep from having to store them in your files */ require_once &amp;#39;./vendor/autoload.php&amp;#39;; $apiUsername = getenv(&amp;#39;SOFTLAYER_USERNAME&amp;#39;); $apiKey = getenv(&amp;#39;SOFTLAYER_API_KEY&amp;#39;); $startDate = new DateTime(&amp;#39;2015-05-28T10:05:25-06:00&amp;#39;); $ticketClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Account&amp;#39;, null, $apiUsername, $apiKey); $filter = new stdClass(); $filter-&amp;gt;tickets = new stdClass(); $filter-&amp;gt;tickets-&amp;gt;updates = new stdClass(); $filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate = new stdClass(); $filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;operation = &amp;#39;greaterThanDate&amp;#39;; $filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;options = array(); $filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;options[0] = new stdClass(); $filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;name = &amp;#39;date&amp;#39;; $filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;value = array($startDate-&amp;gt;format(&amp;#39;m/d/Y H:i:s&amp;#39;)); $filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;editorType = new stdClass(); $filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;editorType-&amp;gt;operation = &amp;#39;EMPLOYEE&amp;#39;; $mask = new \SoftLayer\Common\ObjectMask();; $mask-&amp;gt;tickets-&amp;gt;updates; $ticketClient-&amp;gt;setObjectMask($mask); $ticketClient-&amp;gt;setObjectFilter($filter); $updates = $ticketClient-&amp;gt;getTickets(); print_r($updates); //prints out some SOAP debugging print_r($ticketClient-&amp;gt;__getLastRequest()); ?</description>
    </item>
    
  </channel>
</rss>