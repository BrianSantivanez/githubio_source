<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getcustomgraphdata on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/getcustomgraphdata/</link>
    <description>Recent content in Getcustomgraphdata on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Oct 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/getcustomgraphdata/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>getCustomGraphData</title>
      <link>https://softlayer.github.io/python/tracking_objects/</link>
      <pubDate>Sun, 11 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/tracking_objects/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self, tracking_id): tracking_service = self.client[&amp;#39;SoftLayer_Metric_Tracking_Object&amp;#39;] bw_result = tracking_service.getBandwidthData(&amp;#39;2015-10-01&amp;#39;, &amp;#39;2015-11-31&amp;#39;, &amp;#39;public&amp;#39;, 600, id=tracking_id) object_type = [{&amp;#39;keyName&amp;#39;:&amp;#39;PUBLICIN&amp;#39;,&amp;#39;summaryType&amp;#39;:&amp;#39;counter&amp;#39;,&amp;#39;name&amp;#39;:&amp;#39;vif_1_rx&amp;#39;}] summary_result = tracking_service.getSummaryData(&amp;#39;2015-11-01&amp;#39;,&amp;#39;2015-11-02&amp;#39;, object_type, 600, id=tracking_id) args = { &amp;#39;startDateTime&amp;#39; : &amp;#39;2015-11-01&amp;#39;, &amp;#39;endDateTime&amp;#39;:&amp;#39;2015-11-02&amp;#39;, &amp;#39;metrics&amp;#39;: [{&amp;#39;keyName&amp;#39;:&amp;#39;PUBLICIN&amp;#39;,&amp;#39;summaryType&amp;#39;:&amp;#39;counter&amp;#39;,&amp;#39;name&amp;#39;:&amp;#39;vif_1_rx&amp;#39;}], &amp;#39;interval&amp;#39;:600, &amp;#39;returnImage&amp;#39;: False } custom_result = tracking_service.getCustomGraphData(args,id=tracking_id) pp(custom_result) # For use with a virtual Guest, just change # SoftLayer_Hardware_Server here with SoftLayer_Virtual_Guest def getTrackingId(self, server_id): tracking_id = self.</description>
    </item>
    
  </channel>
</rss>