<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Sshkeys on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/sshkeys/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Wed, 05 Oct 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Advanced Quote Ordering</title>
      <link>https://softlayer.github.io/python/order_quote_advanced/</link>
      <pubDate>Wed, 05 Oct 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/order_quote_advanced/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
from pprint import pprint as pp

class example():

    def __init__(self):
        self.client = SoftLayer.Client()

    def orderQuote(self, quote_id, dc_id = None, image_id = None, private_vlan = None, public_vlan = None):
        # If you have more than 1 server in the quote, you will need to append
        # a copy of this for each VSI, with hostnames changed as needed
        guests = {
            &#39;hostname&#39;: &#39;quotetest&#39;, 
            &#39;domain&#39;: &#39;example.com&#39;
        }
        if public_vlan:
            guests.update({
                &#39;primaryNetworkComponent&#39;: {
                    &amp;quot;networkVlan&amp;quot;: {&amp;quot;id&amp;quot;: int(public_vlan)}}})
        if private_vlan:
            guests.update({
                &amp;quot;primaryBackendNetworkComponent&amp;quot;: {
                    &amp;quot;networkVlan&amp;quot;: {&amp;quot;id&amp;quot;: int(private_vlan)}}})

        quote = self.client[&#39;Billing_Order_Quote&#39;]
        quote_container = quote.getRecalculatedOrderContainer(id=quote_id)

        container = quote_container
        container[&#39;quantity&#39;] = 1
        container[&#39;virtualGuests&#39;] = []
        container[&#39;virtualGuests&#39;].append(guests)

        # container[&#39;provisionScripts&#39;] = [&#39;https://gist.githubusercontent.com/myscript.py&#39;]
        # container[&#39;sshKeys&#39;] = [{&#39;sshKeyIds&#39;: [660791]} ]

        if image_id is not None:
            container[&#39;imageTemplateId&#39;] = image_id

        if dc_id is not None:
            container[&#39;location&#39;] = dc_id

        # result = self.client[&#39;Product_Order&#39;].verifyOrder(container)
        result = self.client[&#39;Product_Order&#39;].placeOrder(container)
        pp(result)

    def listQuotes(self):
        quotes = self.client[&#39;SoftLayer_Account&#39;].getActiveQuotes()
        pp(quotes)

    def listLocations(self):
        locations = self.client[&#39;SoftLayer_Location&#39;].getDatacenters()
        pp(locations)

    def listSshKeys(self):
        keys = self.client[&#39;SoftLayer_Account&#39;].getSshKeys()
        pp(keys)

    def listImageTemplates(self):
        mask = &amp;quot;mask[id,name,note]&amp;quot;
        imageTemplates = self.client[&#39;SoftLayer_Account&#39;].getPrivateBlockDeviceTemplateGroups(mask=mask)
        print(&amp;quot;ID - Name - Note&amp;quot;)
        for template in imageTemplates:
            try:
                print(&amp;quot;%s - %s - %s&amp;quot; % (template[&#39;id&#39;], template[&#39;name&#39;], template[&#39;note&#39;]))
            except KeyError:
                print(&amp;quot;%s - %s - %s&amp;quot; % (template[&#39;id&#39;], template[&#39;name&#39;], &#39;None&#39;))

    def listVlansInLocation(self, location_id):
        mask = &amp;quot;mask[id,vlanNumber,primaryRouter[hostname,datacenter[id,name]]]&amp;quot;
        objfilter2 = { &amp;quot;networkVlans&amp;quot;:    
                        {&amp;quot;primaryRouter&amp;quot;: 
                            {&amp;quot;datacenter&amp;quot;: { &amp;quot;id&amp;quot; : {&amp;quot;operation&amp;quot;:location_id} } }
                        }
                    }
        subnets = self.client[&#39;SoftLayer_Account&#39;].getNetworkVlans(mask=mask,filter=objfilter2)
        for subnet in subnets:
            print(&amp;quot;%s, %s, %s&amp;quot; % ( subnet[&#39;id&#39;], subnet[&#39;vlanNumber&#39;], subnet[&#39;primaryRouter&#39;][&#39;hostname&#39;]))


if __name__ == &amp;quot;__main__&amp;quot;:
    quote_id = 1234
    main = example()
    # main.listImageTemplates()
    # main.listQuotes()
    # main.listLocations()
    dal13 = 1854895
    ams03 = 814994
    dal09 = 449494
    # main.listSshKeys()
    # main.listVlansInLocation(dal13)
    backend_vlan = 1400000 # 123, bcr06a.dal09
    front_vlan = 1400001 # 456, fcr06a.dal09
    main.orderQuote(quote_id, dc_id=dal09, private_vlan=backend_vlan,public_vlan=front_vlan )

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>