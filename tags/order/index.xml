<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Order on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/order/</link>
    <description>Recent content in Order on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/order/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Order an external authentication</title>
      <link>https://softlayer.github.io/python/order_external_auth/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_external_auth/</guid>
      <description>import SoftLayer import json class example(): def __init__(self): self.client = SoftLayer.Client() # Generate the order template used to place the order def _generateOrder(self, userId, keyName, package, credential=None): # Retrieve the package object in order to know its ID pkg_filter = {&amp;#34;keyName&amp;#34;:{&amp;#34;operation&amp;#34;: package}} package_list = self.client[&amp;#39;Product_Package&amp;#39;].getAllObjects(filter=pkg_filter) package_id = package_list[0][&amp;#39;id&amp;#39;] # Retrive the available price of external auth item itm_filter = {&amp;#34;itemPrices&amp;#34;:{&amp;#34;item&amp;#34;:{&amp;#34;keyName&amp;#34;:{&amp;#34;operation&amp;#34;:keyName}}}} prices = self.client[&amp;#39;Product_Package&amp;#39;].getItemPrices(filter=itm_filter, id=package_id) # Build skeleton of order template orderTemplate = { &amp;#39;complexType&amp;#39;: &amp;#39;SoftLayer_Container_Product_Order_User_Customer_External_Binding&amp;#39;, &amp;#39;packageId&amp;#39;: package_id, &amp;#39;prices&amp;#39;:[{&amp;#39;id&amp;#39;: prices[0][&amp;#39;id&amp;#39;]}], &amp;#39;userId&amp;#39;: userId, &amp;#39;externalId&amp;#39;: credentialId } return orderTemplate def orderExternalAuth(self, userId, keyName, credential=None): # package used to order an External Auth.</description>
    </item>
    
    <item>
      <title>Advanced Quote Ordering</title>
      <link>https://softlayer.github.io/python/order_quote_advanced/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_quote_advanced/</guid>
      <description>Quotes Quotes are a way to save an order, and then easily duplicate the order later. You can create a quote from the control portal by going through the normal order process, and then instead of hitting &amp;ldquo;Order&amp;rdquo; at the end, there will be a button that says &amp;ldquo;Save Quote&amp;rdquo;, which will save the order for later. You can then use the quote service to pull down the information about it from the API.</description>
    </item>
    
    <item>
      <title>Ordering Vyatta Network Gateways</title>
      <link>https://softlayer.github.io/python/orderVyatta/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderVyatta/</guid>
      <description>This example goes over how to order a Single or HA vyatta with a bunch of optional settings. More context around ordering can be found in https://softlayer.github.io/python/orderBareMetal/ and https://softlayer.github.io/python/ordering_slcli/
import SoftLayer from SoftLayer.managers import ordering import sys from pprint import pprint as pp import logging logging.debug(&amp;#34;Starting up&amp;#34;) # Requires softlayer-python 5.4.3+ class vyattaOrderer(): def __init__(self): if SoftLayer.__version__ &amp;lt; &amp;#39;v5.4.3&amp;#39;: print(&amp;#34;SoftLayer needs to be 5.4.3+, is currently %s&amp;#34; % SoftLayer.__version__) self.client = SoftLayer.</description>
    </item>
    
    <item>
      <title>Understanding and building an order using the Softlayer order CLI</title>
      <link>https://softlayer.github.io/article/understanding-ordering/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/understanding-ordering/</guid>
      <description>In version 5.4.0 of softlayer-python, there is a new slcli command for placing IaaS cloud server orders using the API. This command can also be used to place orders for products that are normally ordered through the IBM Cloud infrastructure customer portal. There are multiple helpers to assist you in creating a specific order. In these examples, you will learn how to:
 Build an order  Understand the order structure Search for server packages Identify categories of items Verify the order Place the order  Place an order programmatically using Python.</description>
    </item>
    
    <item>
      <title>VSI Flavors</title>
      <link>https://softlayer.github.io/article/vsiflavors/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/vsiflavors/</guid>
      <description>The introduction of Flavors to VSI ordering significantly changes how VSIs are ordered, and the old style of ordering will eventually become unsupported. This page will hopefully explain what changes need to be made to any scripts that order VSIs.
Support for flavors has been added to the SLCLI, so make sure you have at least version 5.4.0.
Getting a Flavor List SoftLayer_Virtual_Guest::getCreateObjectOptions is where you can find out the flavor listing, along with all other options you might want to supply to SoftLayer_Virtual_Guest::createObject</description>
    </item>
    
    <item>
      <title>Ordering with KeyNames</title>
      <link>https://softlayer.github.io/python/ordering_slcli/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/ordering_slcli/</guid>
      <description>Version 5.4.0 of the Softlayer-python project introducted some managers and CLI functions that greatly simplify the ordering processes via the api.
Building a package still requires a few steps however.
1. Find the package name slcli order package-list The most common packages are the following:
   Description Package KeyName Package Type     Additional Products ADDITIONAL_PRODUCTS ADDITIONAL_SERVICES   Cloud Server CLOUD_SERVER VIRTUAL_SERVER_INSTANCE   Network Gateway Appliance NETWORK_GATEWAY_APPLIANCE BARE_METAL_GATEWAY   Load Balancers LOAD_BALANCERS ADDITIONAL_SERVICES_LOAD_BALANCER   Bare Metal Server BARE_METAL_SERVER BARE_METAL_CPU_FAST_PROVISION   POWER8 TULETA IBM_POWER_8 BARE_METAL_POWER_CPU   Object Storage OBJECT_STORAGE ADDITIONAL_SERVICES_OBJECT_STORAGE   Firewall FIREWALL ADDITIONAL_SERVICES_FIREWALL   Storage As A Service (StaaS) STORAGE_AS_A_SERVICE_STAAS STORAGE_AS_A_SERVICE   Load Balancer As A Service (LBaaS) LBAAS LOAD_BALANCER_AS_A_SERVICE   Dedicated Host DEDICATED_HOST DEDICATED_HOST   Public Virtual Server PUBLIC_CLOUD_SERVER VIRTUAL_SERVER_INSTANCE    Once we have selected a package we need to find out where we can order this package.</description>
    </item>
    
    <item>
      <title>Order Server with RAID Config</title>
      <link>https://softlayer.github.io/java/OrderServerWithRaidConfig/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/java/OrderServerWithRaidConfig/</guid>
      <description>import java.math.BigDecimal; import java.util.ArrayList; import java.util.Arrays; import java.util.List; import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.Hardware; import com.softlayer.api.service.container.product.order.storage.Group; import com.softlayer.api.service.container.product.order.storage.group.Partition; import com.softlayer.api.service.product.Order; import com.softlayer.api.service.product.item.Price; public class OrderWithDrivePartition { public static void main(String[] args) { String username = &amp;#34;set me&amp;#34;; String apiKey = &amp;#34;set me&amp;#34;; ApiClient client = new RestApiClient().withCredentials(username, apiKey); // Required values to place an order  long quantity = 1; long packageId = 257; // Declare hostname, domain and network components of guests you want to order, add more  // guest objects if quantity is greater than 1  List&amp;lt;Hardware&amp;gt; baremetals = new ArrayList&amp;lt;Hardware&amp;gt;(); Hardware server = new Hardware(); server.</description>
    </item>
    
    <item>
      <title>Advanced Bare Metal Server Ordering</title>
      <link>https://softlayer.github.io/python/orderBareMetal/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderBareMetal/</guid>
      <description>Example of how to build an order for a bare metal server.
 Find the package that you want to order. listServerPackages() will filter out all that are not bare metal servers Use getServerPrices() to find the item keyNames you want to include in your order. These price IDs can be included prices array directly, but I&amp;rsquo;ve included gatherPriceIds() to match up KeyNames to build a list of price ids.</description>
    </item>
    
    <item>
      <title>Ordering Raid</title>
      <link>https://softlayer.github.io/ruby/orderingRaid/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderingRaid/</guid>
      <description>As a SoftLayer user, you have probably seen the beautiful RAID Configurator that greets you when you order a server on the SoftLayer website.
It allows you to do anything you like, from a straight RAID configuration involving all drives in a single disk array, to a much more intricate configuration with nearly any mix of disks and RAID types.
However beautiful and practical the interface, sometimes you want to script this process, and the SoftLayer mantra of &amp;ldquo;Anything you can do in the Web interface, you can do on the API&amp;rdquo; also rings true in this case.</description>
    </item>
    
    <item>
      <title>Place quote order</title>
      <link>https://softlayer.github.io/ruby/order_quote/</link>
      <pubDate>Sat, 28 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_quote/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new QUOTE_ID = 1234 quote = client[&amp;#39;Billing_Order_Quote&amp;#39;].object_with_id(QUOTE_ID) order = quote.getRecalculatedOrderContainer[&amp;#39;orderContainers&amp;#39;][0] order[&amp;#39;quantity&amp;#39;] = 1 order[&amp;#39;virtualGuests&amp;#39;] = [{ &amp;#39;hostname&amp;#39; =&amp;gt; &amp;#39;quotetest&amp;#39;, &amp;#39;domain&amp;#39; =&amp;gt; &amp;#39;example.com&amp;#39; }] order.delete(&amp;#39;hardware&amp;#39;) pp client[&amp;#39;Product_Order&amp;#39;].</description>
    </item>
    
    <item>
      <title>Place block storage (performance ISCSI) order</title>
      <link>https://softlayer.github.io/python/place_order_block_storage_performance_iscsi/</link>
      <pubDate>Thu, 12 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_block_storage_performance_iscsi/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a block storage (performance ISCSI). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Location http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi_OS_Type http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi_OS_Type/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Values &amp;#34;AMS01&amp;#34;, &amp;#34;AMS03&amp;#34;, &amp;#34;CHE01&amp;#34;, &amp;#34;DAL05&amp;#34;, &amp;#34;DAL06&amp;#34; &amp;#34;FRA02&amp;#34;, &amp;#34;HKG02&amp;#34;, &amp;#34;LON02&amp;#34;, etc. location = &amp;#34;AMS01&amp;#34; # Values &amp;#34;20&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;80&amp;#34;, &amp;#34;100&amp;#34;, etc. storageSize = &amp;#34;40&amp;#34; # Values between &amp;#34;100&amp;#34; and &amp;#34;6000&amp;#34; by intervals of 100.</description>
    </item>
    
    <item>
      <title>Getting Started With User Data and Post Provisioning Scripts</title>
      <link>https://softlayer.github.io/blog/jarteche/getting-started-user-data-and-post-provisioning-scripts/</link>
      <pubDate>Thu, 21 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/jarteche/getting-started-user-data-and-post-provisioning-scripts/</guid>
      <description>The SoftLayer platform lets you add dynamic data and scripts when you place your order. The scripts are executed after the machine is booted.
To place a script on a virtual server, the script must be available through a URL.
Note: For HTTP URLs, the script is injected in the server and manually executed. For HTTPS URLs, the script is injected and automatically executed.
In this article, we use https://x.</description>
    </item>
    
    <item>
      <title>Place quote order</title>
      <link>https://softlayer.github.io/python/order_quote/</link>
      <pubDate>Wed, 12 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_quote/</guid>
      <description>import SoftLayer from pprint import pprint as pp quote_id = 12345 client = SoftLayer.Client() def getOrderContainer(quote_id): container = client[&amp;#39;Billing_Order_Quote&amp;#39;].getRecalculatedOrderContainer(id=quote_id) return container[&amp;#39;orderContainers&amp;#39;][0] def getQuotes(): quotes = client[&amp;#39;SoftLayer_Account&amp;#39;].getActiveQuotes() pp(quotes) getQuotes() guests = {&amp;#39;hostname&amp;#39;: &amp;#39;quotetest&amp;#39;, &amp;#39;domain&amp;#39;: &amp;#39;example.com&amp;#39;} container = getOrderContainer(quote_id) container[&amp;#39;quantity&amp;#39;] = 1 container[&amp;#39;virtualGuests&amp;#39;] = [] # You will need to add a hostname and domain entry for each server on the order # if quantity was 5, you would need to add 5 guests here container[&amp;#39;virtualGuests&amp;#39;].</description>
    </item>
    
  </channel>
</rss>