<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Billing on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/billing/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Wed, 06 Jan 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Associate a Billing ID with the service or item it corresponds to in the SoftLayer catalog</title>
      <link>https://softlayer.github.io/perl/getassociatedid/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/perl/getassociatedid/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;# https://api.softlayer.com/rest/v3/SoftLayer_Billing_Item/1234321/getAssociatedBillingItem
my $objectMask = {
   &#39;id&#39; =&amp;gt;&#39;&#39;
};
$billing_client-&amp;gt;setObjectMask($objectMask);
$result = $billing_client-&amp;gt;getAssociatedParent();
print Dumper($result-&amp;gt;result);

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Cancel item</title>
      <link>https://softlayer.github.io/perl/cancelitem/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/perl/cancelitem/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;#!/usr/bin/perl
use lib &amp;quot;/path/to/softlayer-api-perl-client/&amp;quot;;
use SoftLayer::API::SOAP;
use Data::Dumper;

my $api_username = &amp;quot;a&amp;quot;;
my $api_key = &amp;quot;x&amp;quot;;

#Canel service
# https://api.softlayer.com/rest/v3/SoftLayer_Billing_Item/&amp;lt;BILLING_ID&amp;gt;/cancelService
my $billing_id = $result-&amp;gt;result-&amp;gt;{&#39;id&#39;};
my $billing_client = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Billing_Item&#39;, $billing_id, $api_username, $api_key);
$result = $billing_client-&amp;gt;cancelService();
print Dumper($result-&amp;gt;result);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Retrieve the amount of your next invoice</title>
      <link>https://softlayer.github.io/perl/nextbilling/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/perl/nextbilling/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;use lib &amp;quot;./softlayer-api-perl-client/&amp;quot;;
use SoftLayer::API::SOAP;
use Data::Dumper;

my $api_username = &amp;quot;x&amp;quot;;
my $api_key = &amp;quot;a&amp;quot;;
my $client = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Account&#39;, undef, $api_username, $api_key);


my $result;
$result = $client-&amp;gt;getNextInvoiceTotalAmount();
print &amp;quot;Next Invoice Total: &amp;quot; . $result-&amp;gt;result . &amp;quot;\$\n&amp;quot; ;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Retrieve the month to date cost of an hourly VSI</title>
      <link>https://softlayer.github.io/perl/monthtodatecost/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/perl/monthtodatecost/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;#!/usr/bin/perl
use lib &amp;quot;/path/to/softlayer-api-perl-client/&amp;quot;;
use SoftLayer::API::SOAP;
use Data::Dumper;

my $api_username = &amp;quot;x&amp;quot;;
my $api_key = &amp;quot;a&amp;quot;;
my $client = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Account&#39;, undef, $api_username, $api_key);

# SoftLayer_Virtual_Guest/&amp;lt;VSI_ID&amp;gt;/getBillingItem?objectMask=mask\[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge\]&amp;quot;
# CHANGE ME to the id of the virtual guest you want to check
my $virtual_guest_id = 12345678;
my $virtual_guest = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Virtual_Guest&#39;, $virtual_guest_id, $api_username, $api_key);
my $objectMask = {
    &#39;createDate&#39; =&amp;gt; &#39;&#39;,
    &#39;hoursUsed&#39; =&amp;gt; &#39;&#39;,
    &#39;hourlyRecurringFee&#39; =&amp;gt; &#39;&#39;,
    &#39;currentHourlyCharge&#39; =&amp;gt; &#39;&#39;
};

$result = $virtual_guest-&amp;gt;getBillingItem();
my $cost;
$cost = $result-&amp;gt;result-&amp;gt;{&#39;hoursUsed&#39;} * $result-&amp;gt;result-&amp;gt;{&#39;hourlyRecurringFee&#39;};
print $result-&amp;gt;result-&amp;gt;{&#39;hoursUsed&#39;} . &amp;quot; hours @ &amp;quot; . $result-&amp;gt;result-&amp;gt;{&#39;hourlyRecurringFee&#39;} . &amp;quot;\$/hour = &amp;quot; . $cost . &amp;quot; \$\n&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1 hours @ .045$/hour = 0.045 $
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Cancel an item or service</title>
      <link>https://softlayer.github.io/rest/cancel_service/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/cancel_service/</guid>
      <description>

&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelService&#34;&gt;&lt;code&gt;SoftLayer_Billing_Item::cancelService()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Billing_Item/cancelService&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Billing_Item/&amp;lt;billing_item_id/cancelService
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;true
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;note:d22459ce58257bd3859fe8f589564967&#34;&gt;Note&lt;/h3&gt;

&lt;p&gt;If you are wanting to use the REST API to cancel a Bare Metal server you cannot use the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelService&#34;&gt;cancelService&lt;/a&gt; call but rather you will need to utilize the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelItem&#34;&gt;cancelItem&lt;/a&gt; call. This call and provide a cancellation reason.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Determining your next bill</title>
      <link>https://softlayer.github.io/rest/next_bill/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/next_bill/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNextInvoiceTotalAmount&#34;&gt;&lt;code&gt;SoftLayer_Account::getNextInvoiceTotalAmount()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Account/getNextInvoiceTotalAmount&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Account/getNextInvoiceTotalAmount
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;250.26
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product?</title>
      <link>https://softlayer.github.io/rest/get_billing_id/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/get_billing_id/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/getBillingItem&#34;&gt;&lt;code&gt;SoftLayer_Network_Storage::getBillingItem()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Network_Storage/getBillingItem&lt;/p&gt;

&lt;p&gt;To find a billing item of a provisioned product you would use the &lt;code&gt;getBillingItem&lt;/code&gt; call on the specific resource you are trying to locate. In the following example we are looking for the Billing Item of an Endurance Storage volume with an ID of 1234567.&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Network_Storage/1234567/getBillingItem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;allowCancellationFlag&amp;quot;: 1,
    &amp;quot;cancellationDate&amp;quot;: null,
    &amp;quot;categoryCode&amp;quot;: &amp;quot;storage_service_enterprise&amp;quot;,
    &amp;quot;createDate&amp;quot;: &amp;quot;2015-11-17T12:14:14-06:00&amp;quot;,
    &amp;quot;cycleStartDate&amp;quot;: &amp;quot;2015-12-04T00:07:24-06:00&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;Endurance Storage&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;87654321&amp;quot;,
    &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;laborFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;lastBillDate&amp;quot;: &amp;quot;2015-12-04T00:07:24-06:00&amp;quot;,
    &amp;quot;modifyDate&amp;quot;: &amp;quot;2015-12-04T00:07:24-06:00&amp;quot;,
    &amp;quot;nextBillDate&amp;quot;: &amp;quot;2016-01-04T00:00:00-06:00&amp;quot;,
    &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;oneTimeFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;orderItemId&amp;quot;: 99999999,
    &amp;quot;parentId&amp;quot;: null,
    &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;recurringFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;recurringMonths&amp;quot;: 1,
    &amp;quot;serviceProviderId&amp;quot;: 1,
    &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;setupFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find provisioned product from a billing item</title>
      <link>https://softlayer.github.io/rest/find_product_from_billing/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/find_product_from_billing/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/getAssociatedParent&#34;&gt;&lt;code&gt;SoftLayer_Billing_Item::getAssociatedParent()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Billing_Item/getAssociatedParent&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Billing_Item/&amp;lt;billing_item_id&amp;gt;/getAssociatedParent?objectMask=mask\[categoryCode,id,description\]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
    {
        &amp;quot;categoryCode&amp;quot;: &amp;quot;storage_service_enterprise&amp;quot;,
        &amp;quot;description&amp;quot;: &amp;quot;Endurance Storage&amp;quot;,
        &amp;quot;id&amp;quot;: 1234321
    }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Month-to-date cost of a Virtual_Guest</title>
      <link>https://softlayer.github.io/rest/hourlycost_date/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/hourlycost_date/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBillingItem&#34;&gt;&lt;code&gt;SoftLayer_Virtual_Guest::getBillingItem()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Virtual_Guest/&lt;virtual_guest_id&gt;/getBillingItem?objectMask=mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/&amp;lt;virtual_guest_id&amp;gt;/getBillingItem?objectMask=mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;createDate&amp;quot;: &amp;quot;2015-12-30T09:26:32-06:00&amp;quot;,
    &amp;quot;currentHourlyCharge&amp;quot;: &amp;quot;.18&amp;quot;,
    &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;.09&amp;quot;,
    &amp;quot;hoursUsed&amp;quot;: &amp;quot;2&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get top level billing items for all owned accounts</title>
      <link>https://softlayer.github.io/php/get_invoice_top_level_items/</link>
      <pubDate>Sun, 24 May 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/get_invoice_top_level_items/</guid>
      <description>&lt;p&gt;With a given date range, get all the invoice details for all of the owned brands, and all of their owned accounts. The $filter can be used to get just a single accounts invoices, just take off the -&amp;gt;allOwnedAccounts bits&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
require_once __DIR__.&#39;/vendor/autoload.php&#39;;


/**
* This class structure is mostly used so this can be run as a script.
* Most of the print statements use fancy bash color codes to make things pretty
*/
class topBillingItems
{

    function __construct() {
        $this-&amp;gt;apiUsername = &#39;&#39;;
        $this-&amp;gt;apiKey = &#39;&#39;;
        $this-&amp;gt;startDate = new DateTime(&#39;2015-02-12T00:00:00&#39;, new DateTimeZone(&#39;CST&#39;));
        $this-&amp;gt;endDate = new DateTime(&#39;2015-03-12T00:00:00&#39;, new DateTimeZone(&#39;CST&#39;));
    }

    /*!
    * Will get all the brands on an account, THEN all of those brand&#39;s accounts,
    * Then all of THEIR brands, then all of THEIR accounts. Then, go through each
    * of the final tier accounts, and get all the invoices, then all the billing items.
    *
    */
    function main() {

        //The First Object Mask. Used to get all the front line brands, which will have the
        //accounts that are actually buying things
        $objectMask = new \SoftLayer\Common\ObjectMask();
        $objectMask-&amp;gt;ownedBrands-&amp;gt;allOwnedAccounts-&amp;gt;ownedBrands;

        $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Account&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey);
        $client-&amp;gt;setObjectMask($objectMask);

        $response = $client-&amp;gt;getObject();

        //Start off with the main brand
        foreach ($response-&amp;gt;ownedBrands as $brand) {
            print &amp;quot;BRAND=\e[31m&amp;quot; . $brand-&amp;gt;keyName .  &amp;quot; ::&amp;quot; . $brand-&amp;gt;id . &amp;quot;\e[0m=\n&amp;quot;;

            //Go into each of the top brands accounts
            foreach ($brand-&amp;gt;allOwnedAccounts as $account) {
                print &amp;quot;==\e[32m&amp;quot; . $account-&amp;gt;companyName .&amp;quot;\e[0m\n&amp;quot;;

                //Go into each of those accounts brands...
                foreach ($account-&amp;gt;ownedBrands as $brand1) {
                    print &amp;quot;====\e[33m&amp;quot; . $brand1-&amp;gt;name .&amp;quot; ::&amp;quot; . $brand1-&amp;gt;id . &amp;quot;\e[0m\n&amp;quot;;
                    $brandInvoice = $this-&amp;gt;getAllBrandAccounts($brand1-&amp;gt;id);

                    //Go through each of the accounts on the brand
                    foreach ($brandInvoice as $brandAccount) {

                        //This is recursive and a very large data structure.
                        //we unset it here so it doesn&#39;t get in the way later
                        unset($brandAccount-&amp;gt;brand);
                        $this-&amp;gt;workAccount($brandAccount);

                    } //END foreach $brandInvoice
                } //END foreach $account-&amp;gt;ownedBrands
            } //END foreach $brand-&amp;gt;allOwnedAccounts
        } //END foreach $response-&amp;gt;ownedBrands
    }//END MAIN

    function getAllBrandAccounts($brandId) {

        //This filters out all invoices that are not in our date range.
        //all based on the invoices createDate
        $filter = new stdClass();
        $filter-&amp;gt;allOwnedAccounts = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;operation = &#39;betweenDate&#39;;
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options = array();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0] = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;name = &#39;startDate&#39;;
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;value = array($this-&amp;gt;startDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;));
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1] = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;name = &#39;endDate&#39;;
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;value = array($this-&amp;gt;endDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;));

        //Mask for the front line brands, used to get all their accounts, and their invoices
        $brandMask = new \SoftLayer\Common\ObjectMask();
        $brandMask-&amp;gt;allOwnedAccounts-&amp;gt;invoices;

        //From that brand, get all the brand&#39;s owned accounts, with their invoices from the current month
        $brandClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Brand&#39;, $brandId, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey);
        $brandClient-&amp;gt;setObjectMask($brandMask);
        $brandClient-&amp;gt;setObjectFilter($filter);
        return $brandClient-&amp;gt;getAllOwnedAccounts();

    }

    function workAccount($account) {

        print &amp;quot;=====\e[94m&amp;quot; . $account-&amp;gt;companyName .&amp;quot; ::&amp;quot; . $account-&amp;gt;id . &amp;quot;\e[0m\n&amp;quot;;
        //Used to get all the actual line items from an invoice
        $invoiceMask = new \SoftLayer\Common\ObjectMask();
        $invoiceMask-&amp;gt;items;
        $invoiceMask-&amp;gt;invoiceTotalAmount;
        //Go through each of the accounts monthly invoices
        foreach ($account-&amp;gt;invoices as $invoice) {
            print &amp;quot;Created: &amp;quot; . $invoice-&amp;gt;createDate . &amp;quot; TYPE: &amp;quot; . $invoice-&amp;gt;typeCode .&amp;quot;\n&amp;quot;;

            //Here we get the actual invoice and all the billing items inside of it
            $bClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Billing_Invoice&#39;, $invoice-&amp;gt;id , $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey);
            $bClient-&amp;gt;setObjectMask($invoiceMask);
            $bt = $bClient-&amp;gt;getObject();
            print &amp;quot;====\e[42;90m&amp;quot; . $bt-&amp;gt;invoiceTotalAmount .&amp;quot;\e[0m\n&amp;quot;;

            //Go through each item on the invoice and print out its decription + fee.
            //There are a few other fields that could be billable, but these are the main ones.
            foreach ($bt-&amp;gt;items as $lineItem) {
                unset($lineItem-&amp;gt;invoice);
                $fee = $lineItem-&amp;gt;recurringAfterTaxAmount + $lineItem-&amp;gt;oneTimeAfterTaxAmount;
                print &amp;quot;====\e[35m&amp;quot; . $lineItem-&amp;gt;description . &amp;quot; =&amp;gt; &amp;quot; . $fee . &amp;quot;$ \e[0m\n&amp;quot;;
            }

        }//end invoice
    }
}

$main = new topBillingItems();
$main-&amp;gt;main();

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get Invoices</title>
      <link>https://softlayer.github.io/php/get_invoice/</link>
      <pubDate>Sun, 22 Feb 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/get_invoice/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
require_once __DIR__.&#39;/vendor/autoload.php&#39;;
 
$apiUser = &#39;&#39;;
$key = &#39;&#39;;

//The date does need to be in this specific format
$startDate = new DateTime(&#39;2014-11-01T13:05:25&#39;, new DateTimeZone(&#39;CST&#39;));
$endDate = new DateTime(&#39;2014-12-01T09:53:51&#39;, new DateTimeZone(&#39;CST&#39;));
 
$accountClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Account&#39;, null, $apiUser, $key);

$filter = new stdClass();
$filter-&amp;gt;invoices = new stdClass();
// $filter-&amp;gt;invoices-&amp;gt;accountId = new stdClass();
// $filter-&amp;gt;invoices-&amp;gt;accountId-&amp;gt;operation = &#39;= 391780&#39;;
$filter-&amp;gt;invoices-&amp;gt;createDate = new stdClass();
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;operation = &#39;betweenDate&#39;;
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options = array();
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0] = new stdClass();
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;name = &#39;startDate&#39;;
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;value = array($startDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;));
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1] = new stdClass();
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;name = &#39;endDate&#39;;
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;value = array($endDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;));

$objectMask = new \SoftLayer\Common\ObjectMask();
$objectMask-&amp;gt;invoices; 
 
$accountClient-&amp;gt;setObjectFilter($filter);
$accountClient-&amp;gt;setObjectMask($objectMask);

$invoices = $accountClient-&amp;gt;getObject();

print_r($invoices);

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Cancel software licenses by IP</title>
      <link>https://softlayer.github.io/perl/cancel_by_license/</link>
      <pubDate>Sun, 01 Sep 2013 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/perl/cancel_by_license/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;#!/usr/bin perl
use warnings;
use strict;
use Data::Dumper;
use SoftLayer::API::SOAP;

my $api_username = &#39;&#39;;
my $api_key = &#39;&#39;;

my $cPanelIp = &#39;127.0.0.1&#39;;
my $billingItemId;
my $accountId;

my $accountClient = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Account&#39;, undef, $api_username, $api_key);
my $billingClient = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Billing_Item_Cancellation_Request&#39;, undef, $api_username, $api_key);

my $objectMask = &amp;quot;mask.billingItem.id&amp;quot;;
$accountClient-&amp;gt;setObjectMask($objectMask);

my $licenses = $accountClient-&amp;gt;getActiveVirtualLicenses()-&amp;gt;result;

for my $i (0 .. $#{$licenses}) {
    my $license = $licenses-&amp;gt;[$i];
    if ($cPanelIp eq $license-&amp;gt;{&#39;ipAddress&#39;}) {
        $billingItemId = $license-&amp;gt;{&#39;billingItem&#39;}-&amp;gt;{&#39;id&#39;};
        $accountId = $license-&amp;gt;{&#39;accountId&#39;};
    }
}

my $cancellationRequestTemplateObject = {
    &#39;items&#39; =&amp;gt; [
            {
                &#39;billingItemId&#39; =&amp;gt; $billingItemId,
            }
    ],
    &#39;accountId&#39; =&amp;gt; $accountId
};

my $result = $billingClient-&amp;gt;createObject($cancellationRequestTemplateObject);
print Dumper($result);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>