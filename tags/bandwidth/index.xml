<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bandwidth on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/bandwidth/</link>
    <description>Recent content in Bandwidth on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/bandwidth/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bandwidth Usage Reports</title>
      <link>https://softlayer.github.io/python/bandwidthData/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/bandwidthData/</guid>
      <description>Data Time Alignment The SoftLayer_Metric_TrackingObject class will auto-align your requested time to its nearest data collection boundary.
For example, if you wanted bandwidth data from 2019-02-03T00:30:00 to 2019-02-04T00:30:01 with a 3600s rollup, you would get data back from 2019-02-03T01:00:00 to 2019-02-04T00:00:00
This is especially problematic when requesting rollups for 12 and 24 hour periods. For these, the collection boundary starts at 00:00 UTC. So if you are in CST timezone for example, your request of data from 2019-02-03T00:00:00 to 2019-02-04T00:00:00 will get aligned to 2019-02-03T18:00:00-06:00 and 2019-02-03T18:00:00-06:00</description>
    </item>
    
    <item>
      <title>Server Bandwidth</title>
      <link>https://softlayer.github.io/python/get_bandwidth_data/</link>
      <pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_bandwidth_data/</guid>
      <description>import SoftLayer import pprint class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): pp = pprint.PrettyPrinter(indent=2) theMask = &amp;#34;mask[inboundPrivateBandwidthUsage,inboundPublicBandwidthUsage,outboundPrivateBandwidthUsage,outboundPublicBandwidthUsage]&amp;#34; result = self.client[&amp;#39;SoftLayer_Account&amp;#39;].getHardware() print &amp;#34;server_name,public_in,public_out,private_in,private_out&amp;#34; for server in result: #getHardware() only returns SoftLayer_Hardware, which doesn&amp;#39;t have the private bw usage metrics, for some reason. # So we just use SoftLayer_Hardware_Server here, which has more detailed information serverInfo = self.client[&amp;#39;SoftLayer_Hardware_Server&amp;#39;].getObject(id=server[&amp;#39;id&amp;#39;],mask=theMask) # use .get() to avoid exceptions pubin = serverInfo.get(&amp;#39;inboundPublicBandwidthUsage&amp;#39;, &amp;#39;--&amp;#39;) pubout = serverInfo.</description>
    </item>
    
  </channel>
</rss>