<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Topology on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/topology/</link>
    <description>Recent content in Topology on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Mar 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/topology/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Network Topology</title>
      <link>https://softlayer.github.io/python/networkTopology/</link>
      <pubDate>Fri, 17 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/networkTopology/</guid>
      <description>&amp;quot;&amp;quot;&amp;quot; @author Christopher Gallo &amp;quot;&amp;quot;&amp;quot; import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): mask = &amp;quot;&amp;quot;&amp;quot; mask[ attachedNetworkGateway[publicVlan,privateVlan], hardware[fullyQualifiedDomainName,frontendNetworkComponents[uplinkComponent], backendNetworkComponents[uplinkComponent]], network, networkSpace, primaryRouter[hostname], primarySubnet, subnets[networkIdentifier], virtualGuests[fullyQualifiedDomainName] ] &amp;quot;&amp;quot;&amp;quot; orderedVlans = {} result = self.client[&#39;SoftLayer_Account&#39;].getNetworkVlans(mask=mask) &amp;quot;&amp;quot;&amp;quot; This bit builds a nicely structured object of the network topology &amp;quot;&amp;quot;&amp;quot; for vlan in result: vlanNumber = vlan[&#39;vlanNumber&#39;] router,dc = vlan[&#39;primaryRouter&#39;][&#39;hostname&#39;].split(&amp;quot;.&amp;quot;) if dc not in orderedVlans: orderedVlans[dc] = {} if router not in orderedVlans[dc]: orderedVlans[dc][router] = {} toAppend = { &#39;hardware&#39;: vlan[&#39;hardware&#39;], &#39;virtualGuests&#39;: vlan[&#39;virtualGuests&#39;], &#39;subnets&#39;: vlan[&#39;subnets&#39;] } if &#39;attachedNetworkGateway&#39; in vlan: if vlan[&#39;networkSpace&#39;] == &#39;PUBLIC&#39;: gatewayVlan = vlan[&#39;attachedNetworkGateway&#39;][&#39;publicVlan&#39;][&#39;vlanNumber&#39;] elif vlan[&#39;networkSpace&#39;] == &#39;PRIVATE&#39;: gatewayVlan = vlan[&#39;attachedNetworkGateway&#39;][&#39;privateVlan&#39;][&#39;vlanNumber&#39;] if gatewayVlan not in orderedVlans[dc][router]: orderedVlans[dc][router][gatewayVlan] = {} orderedVlans[dc][router][gatewayVlan][vlanNumber] = toAppend orderedVlans[dc][router][gatewayVlan][&#39;gateway&#39;] = True else: orderedVlans[dc][router][vlanNumber] = toAppend &amp;quot;&amp;quot;&amp;quot; This bit prints out everything nicely-ish.</description>
    </item>
    
  </channel>
</rss>