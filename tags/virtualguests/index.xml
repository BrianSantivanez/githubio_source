<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Virtualguests on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/virtualguests/</link>
    <description>Recent content in Virtualguests on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/virtualguests/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CreateArchiveTransaction.cs</title>
      <link>https://softlayer.github.io/csharp/CreateArchiveTransaction.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/CreateArchiveTransaction.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;GetVirtualGuests.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; class GetVirtualGuests { /// &amp;lt;summary&amp;gt; /// Get Virtual Guests /// This script retrieves an account&amp;#39;s associated virtual guest objects. Also it uses an objectMask and objectFilter. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { // You SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>CreateVirtualGuest.cs</title>
      <link>https://softlayer.github.io/csharp/CreateVirtualGuest.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/CreateVirtualGuest.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;CreateVirtualGuest.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; class CreateVirtualGuest { /// &amp;lt;summary&amp;gt; /// Create Virtual Guest /// This method creates a Virtual Server using the simplified way. /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest /// &amp;lt;/manualPages&amp;gt; static void Main(string[] ards) { // You SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>GetRamOptions.cs</title>
      <link>https://softlayer.github.io/csharp/GetRamOptions.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/GetRamOptions.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;GetRamOptions.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; class GetRamOptions { /// &amp;lt;summary&amp;gt; /// Get Reload Options /// This script retrieves all options available for reload from a Virtual Guest. It is only necessary /// to declare the hostname from the vsi that you wish to reload operating system and the type of operating system. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.</description>
    </item>
    
    <item>
      <title>GetReloadOptions.cs</title>
      <link>https://softlayer.github.io/csharp/GetReloadOptions.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/GetReloadOptions.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;GetReloadOptions.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; class GetReloadOptions { /// &amp;lt;summary&amp;gt; /// Get Reload Options /// This script retrieves all options available for reload from a Virtual Guest. It is only necessary /// to declare the hostname from the vsi that you wish to reload operating system and the type of operating system. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.</description>
    </item>
    
    <item>
      <title>GetVirtualGuests.cs</title>
      <link>https://softlayer.github.io/csharp/GetVirtualGuests.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/GetVirtualGuests.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;GetVirtualGuests.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; class GetVirtualGuests { /// &amp;lt;summary&amp;gt; /// Get Virtual Guests /// This script retrieves an account&amp;#39;s associated virtual guest objects. Also it uses an objectMask and objectFilter. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { // You SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>PlaceOrder.cs</title>
      <link>https://softlayer.github.io/csharp/PlaceOrder.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/PlaceOrder.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;PlaceOrder.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; using System.Collections.Generic; class PlaceOrder { /// &amp;lt;summary&amp;gt;  /// Place Order  /// This script orders a Virtual Guest using SoftLayer_Product_Order::placeOrder method  /// For more information, review the following links:  /// &amp;lt;/summary&amp;gt;  /// &amp;lt;manualPages&amp;gt;  /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order  /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest  /// http://sldn.</description>
    </item>
    
    <item>
      <title>PlaceOrderUpgrade.cs</title>
      <link>https://softlayer.github.io/csharp/PlaceOrderUpgrade.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/PlaceOrderUpgrade.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;PlaceOrderUpgrade.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; using System.Collections.Generic; class PlaceOrderUpgrade { /// &amp;lt;summary&amp;gt; /// Order an upgrade for Virtual Guest /// This script orders an upgrade for Virtual Guest, in this case we will upgrade the ram for a Virtual Guest, /// It uses SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade container and SoftLayer_Product_Order::placeOrder /// method for it. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.</description>
    </item>
    
    <item>
      <title>ReloadOperatingSystem.cs</title>
      <link>https://softlayer.github.io/csharp/ReloadOperatingSystem.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/ReloadOperatingSystem.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;ReloadOperatingSystem.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; using System.Collections.Generic; class ReloadOperatingSystem { /// &amp;lt;summary&amp;gt; /// Reload Operating System /// This script reloads current system configuration. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/reloadOperatingSystem /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Hardware_Server_Configuration /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; public ReloadOperatingSystem() { // You SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>ShutdownPrivatePort.cs</title>
      <link>https://softlayer.github.io/csharp/ShutdownPrivatePort.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/ShutdownPrivatePort.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;ShutdownPrivatePort.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; class ShutdownPrivatePort { /// &amp;lt;summary&amp;gt; /// Shut Down Private Port /// This script shuts down the private network port /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/shutdownPrivatePort /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(String [] args) { // You SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>ShutdownPublicPort.cs</title>
      <link>https://softlayer.github.io/csharp/ShutdownPublicPort.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/ShutdownPublicPort.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;ShutdownPublicPort.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace VirtualGuests { using System; class ShutdownPublicPort { /// &amp;lt;summary&amp;gt; /// Shut Down Public Port /// This script shuts down the public network port /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/shutdownPublicPort /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(String[] args) { // You SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>Creating a Virtual Guest</title>
      <link>https://softlayer.github.io/go/createVsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/createVsi/</guid>
      <description>package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) func main() { sess := session.New() doCreateVMTest(sess) } func doCreateVMTest(sess *session.Session) { service := services.GetVirtualGuestService(sess) // Create a Virtual_Guest instance as a template  vGuestTemplate := datatypes.Virtual_Guest{} //Set Creation values - use helpers from the sl package to set pointer values  vGuestTemplate.Hostname = sl.String(&amp;#34;sample&amp;#34;) vGuestTemplate.Domain = sl.String(&amp;#34;example.com&amp;#34;) vGuestTemplate.MaxMemory = sl.Int(4096) vGuestTemplate.StartCpus = sl.Int(1) vGuestTemplate.Datacenter = &amp;amp;datatypes.Location{Name: sl.String(&amp;#34;wdc01&amp;#34;)} vGuestTemplate.OperatingSystemReferenceCode = sl.</description>
    </item>
    
    <item>
      <title>Listing Virtual Guests</title>
      <link>https://softlayer.github.io/go/listvsis/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/listvsis/</guid>
      <description>package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) func main() { sess := session.New() doListAccountVMsTest(sess) } func doListAccountVMsTest(sess *session.Session) { // Get the Account service  service := services.GetAccountService(sess) // List VMs  vms, err := service.Mask(&amp;#34;id;hostname;domain&amp;#34;).Limit(10).GetVirtualGuests() if err != nil { fmt.Printf(&amp;#34;Error retrieving Virtual Guests from Account: %s\n&amp;#34;, err) return } else { fmt.Println(&amp;#34;VMs under Account:&amp;#34;) } for _, vm := range vms { fmt.Printf(&amp;#34;\t[%d]%s.%s\n&amp;#34;, *vm.Id, *vm.Hostname, *vm.Domain) } } func handleError(err error) { apiErr := err.</description>
    </item>
    
  </channel>
</rss>