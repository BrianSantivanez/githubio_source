<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/blog/</link>
    <description>Recent content in Blog on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Nov 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Object Storage Uploader</title>
      <link>https://softlayer.github.io/blog/ashaw/object-storage-uploader/</link>
      <pubDate>Tue, 15 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/ashaw/object-storage-uploader/</guid>
      <description>Overview We&amp;rsquo;ve recently added the option to import customer-supplied Virtual Hard Disks (VHDs) to our object storage offering. This is a great option for our customers who may have special virtual machines that they have spent hours perfecting. Since learning to import these images can pose a slight challenge, especially for those unfamiliar with object storage (OpenStack Swift), I wrote this blog to share scripts that will streamline the process.</description>
    </item>
    
    <item>
      <title>Getting started with the Cloud Foundry and Bluemix Command Line Utilities</title>
      <link>https://softlayer.github.io/blog/rtiffany/getting-started-cloud-foundry-and-bluemix-command-line-utilities/</link>
      <pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/rtiffany/getting-started-cloud-foundry-and-bluemix-command-line-utilities/</guid>
      <description>In order to fully utilize the power of your Bluemix account it is recommended to install the Cloud Foundry and Bluemix command line clients. This guide will walk you through that process as well as some of the basic command line options.
Installing Cloud Foundry Command Line Client Please see our Knowledgelayer Guide on how to install the Cloud Foundry CLI.
Once installed you will use the cf command when interacting with Cloud Foundry applications and your Bluemix account.</description>
    </item>
    
    <item>
      <title>Bluemix VPN &#43; SoftLayer Vyatta = Cloud Communication</title>
      <link>https://softlayer.github.io/blog/rtiffany/bluemix-vpn-softlayer-vyatta-cloud-communication/</link>
      <pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/rtiffany/bluemix-vpn-softlayer-vyatta-cloud-communication/</guid>
      <description>Overview One of the great things about being in a connected world is the ability to have private only systems talk to each other through gateway devices. Today you will look at using the Bluemix VPN Service connected to a SoftLayer Vyatta Network Gateway Device to enable communication between Private-Only Bluemix containers and SoftLayer instances.
Prerequisites Installing and configuring the Bluemix command line Besides the VPN service, an IBM container is required in order to test the connection between Bluemix and SoftLayer.</description>
    </item>
    
    <item>
      <title>Getting started with the SLCLI and Load Balancers </title>
      <link>https://softlayer.github.io/blog/rtiffany/getting-started-slcli-and-load-balancers/</link>
      <pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/rtiffany/getting-started-slcli-and-load-balancers/</guid>
      <description>Load Balancing is a way to distribute processing and communications evenly across multiple servers within a data center so that a single device does not carry an entire load. SoftLayer Load Balancing enables customers to employ a variety of balancing methods to distribute traffic, including persistent and non-persistent options, that can be changed, activated and deactivated at any time. Today we are going to look at how to use the Python slcli client to manage your SoftLayer Local Load balancers.</description>
    </item>
    
    <item>
      <title>The painless way to mount Object Storage as a drive in your Windows server</title>
      <link>https://softlayer.github.io/blog/smandrews/painless-way-mount-object-storage-drive-your-windows-server/</link>
      <pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/smandrews/painless-way-mount-object-storage-drive-your-windows-server/</guid>
      <description>In light of the upcoming legacy storage device End of Life preparation, this how-to for mounting object storage as a drive in your Windows server can help ease the pain.
This guide uses a tool called ExpanDrive, which connects myriad storage services and maps them as network attached drives. I chose this product after testing a number of them, and found this to be the one with the smallest footprint of the bunch, the most reliable, and the easiest to use.</description>
    </item>
    
    <item>
      <title>Ordering Bare Metal Servers Using the SoftLayer API </title>
      <link>https://softlayer.github.io/blog/bpotter/ordering-bare-metal-servers-using-softlayer-api/</link>
      <pubDate>Thu, 27 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/bpotter/ordering-bare-metal-servers-using-softlayer-api/</guid>
      <description>The ability to order bare metal servers is one of the unique advantages of the SoftLayer cloud. But bare metal servers are inherently more complicated than virtual server infrastructures (VSI) because there are many more choices. A subset of the common bare metal servers can be ordered fairly easily using the [[SoftLayer_Hardware::createObject()]] method. If that’s sufficient for you, you can stop reading this article right here. If you only need to order one type of custom bare metal server, you don&amp;rsquo;t need most of the detail that follows.</description>
    </item>
    
    <item>
      <title>Location-based Pricing and You</title>
      <link>https://softlayer.github.io/blog/cmporter/location-based-pricing-and-you/</link>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/cmporter/location-based-pricing-and-you/</guid>
      <description>When we launch a new data center, we try to keep everything as consistent as possible between locations. We use the same hardware, we have a skilled “Go Live” team to bring everything online, and we train our local operations staff the same way. When we open a new data center in Dallas, that’s easy. But when the new facility is on the other side of the planet, things can get a little more complicated.</description>
    </item>
    
    <item>
      <title>How to Use The SoftLayer API to Authorize Guest VMs to iSCSI Storage</title>
      <link>https://softlayer.github.io/blog/sjanowiak/how-use-softlayer-api-authorize-guest-vms-iscsi-storage/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/sjanowiak/how-use-softlayer-api-authorize-guest-vms-iscsi-storage/</guid>
      <description>SoftLayer iSCSI storage is a great platform for running a clustered OS and file system. Featuring Multipath I/O (MPIO), industry leading durability, and our global footprint, the Endurance and Performance iSCSI block storage products are a great fit for a variety of workloads worldwide.
One important feature of our Endurance and Performance block storage options is the ability to give access and authorization to any host(s) you choose via the SoftLayer customer portal or API.</description>
    </item>
    
    <item>
      <title>More SoftLayer REST API Examples</title>
      <link>https://softlayer.github.io/blog/bpotter/more-softlayer-rest-api-examples/</link>
      <pubDate>Wed, 24 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/bpotter/more-softlayer-rest-api-examples/</guid>
      <description>The SoftLayer REST API is powerful and convenient because you can use it from any language or no language (the command line or browser). The basics of using the REST API are explained in an SLDN article on REST, and some examples are given in an SLDN blog post on REST. But even with this good information, it can be a little confusing understanding how to map what you see in the SoftLayer API Services and Data Reference to the exact REST API invocation that should be made.</description>
    </item>
    
    <item>
      <title>Ember-cli-defeatureify Addon: Feature Flag Support and Stripping of Debug Statements </title>
      <link>https://softlayer.github.io/blog/jbrown/ember-cli-defeatureify-addon-feature-flag-support-and-stripping-debug-statements/</link>
      <pubDate>Wed, 03 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/jbrown/ember-cli-defeatureify-addon-feature-flag-support-and-stripping-debug-statements/</guid>
      <description>If you have ever used a canary build of the Ember.js framework, you are likely familiar with feature flags. Used to bundle functionality and make it available in an application, it also allows for its use to be turned on or off via an entry in the application’s configuration file. While used by the Ember.js community to allow for an easy way to test new, and sometimes experimental, features in upcoming releases of Ember.</description>
    </item>
    
    <item>
      <title>Going Further with the SoftLayer API Python Client - Part 3</title>
      <link>https://softlayer.github.io/blog/bpotter/going-further-softlayer-api-python-client-part-3/</link>
      <pubDate>Wed, 11 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/bpotter/going-further-softlayer-api-python-client-part-3/</guid>
      <description>In my first two blog posts in this series, Part 1 and Part 2, I covered many general aspects of how to use the SoftLayer API effectively. In this post, we&amp;rsquo;ll dive into how to order SoftLayer resources using the SoftLayer API. [For ordering virtual servers, read Simplified CCI Creation for a great explanation of the simplified virtual server ordering process.]
Understanding How to Order SoftLayer Resources First, it is probably obvious, but to order a resource means to begin renting it, and to cancel a resource means to stop renting it.</description>
    </item>
    
    <item>
      <title>Going Further with the SoftLayer API Python Client - Part 2</title>
      <link>https://softlayer.github.io/blog/bpotter/going-further-softlayer-api-python-client-part-2/</link>
      <pubDate>Fri, 13 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/bpotter/going-further-softlayer-api-python-client-part-2/</guid>
      <description>In my previous blog post, I covered how to navigate the SoftLayer Services website, and how to query the SoftLayer API efficiently. In this post, I&#39;ll cover additional aspects of using the SoftLayer API with the python client. List of Services to Start Navigating From If you read part 1 of the series, you have a lot of good techniques for querying the data of resources in SoftLayer such that from any service you can efficiently follow the data trail to other services to get to all of the information you want.</description>
    </item>
    
    <item>
      <title>Going Further with the SoftLayer API Python Client - Part 1</title>
      <link>https://softlayer.github.io/blog/bpotter/going-further-softlayer-api-python-client-part-1/</link>
      <pubDate>Fri, 06 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/bpotter/going-further-softlayer-api-python-client-part-1/</guid>
      <description>So you want to code to the SoftLayer API, your language of choice is python (well done), and you’ve read the SoftLayer API Overview on the SLDN site. You&amp;rsquo;ve even read the article using the SoftLayer API from python, but it just felt like a tease. So you follow the web trail to readthedocs for the slightly longer API Documentation. You think, “maybe that’s all I need to know.” You dive in and start your first program.</description>
    </item>
    
    <item>
      <title>SoftLayer CLI Simple Bind Importer</title>
      <link>https://softlayer.github.io/blog/cgallo/softlayer-cli-simple-bind-importer/</link>
      <pubDate>Fri, 02 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/cgallo/softlayer-cli-simple-bind-importer/</guid>
      <description>We added a new feature, a simple bind importer, to the python CLI client that allows users to easily import bind style DNS zones into the SoftLayer DNS system. Before diving into the caveats that come with dealing with a file format that seems to be more human readable than machine readable, let’s discuss how to use it.
~$ sl dns import usage: sl dns import  [—dryRun] ~$ sl dns import realtest.</description>
    </item>
    
    <item>
      <title>Getting started with CCIs</title>
      <link>https://softlayer.github.io/blog/phil/getting-started-ccis/</link>
      <pubDate>Mon, 08 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/getting-started-ccis/</guid>
      <description>In the context of the SoftLayer API, SoftLayer CloudLayer Computing Instances(CCIs) are represented by SoftLayer_Virtual_Guest objects. The SoftLayer_Virtual_Guest service allows for interaction with a specific CCI and you are able to interact with all CCIs on your account through the SoftLayer_Account service.
Creating Ordering new CCIs is accomplished through SoftLayer_Virtual_Guest::createObject.
First, a SoftLayer_Virtual_Guest template object is created that contains the details of the CCI. Every CCI template object will need, at minimum, the following properties defined:</description>
    </item>
    
    <item>
      <title>Getting Started With User Data and Post Provisioning Scripts</title>
      <link>https://softlayer.github.io/blog/jarteche/getting-started-user-data-and-post-provisioning-scripts/</link>
      <pubDate>Thu, 21 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/jarteche/getting-started-user-data-and-post-provisioning-scripts/</guid>
      <description>The SoftLayer platform lets you add dynamic data and scripts when you place your order. The scripts are executed after the machine is booted.
To place a script on a virtual server, the script must be available through a URL.
Note: For HTTP URLs, the script is injected in the server and manually executed. For HTTPS URLs, the script is injected and automatically executed.
In this article, we use https://x.</description>
    </item>
    
    <item>
      <title>Using fog-softlayer for Managing Global IP Addresses</title>
      <link>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-global-ip-addresses/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-global-ip-addresses/</guid>
      <description>In part six of this series we explored using fog-softlayer for managing your SoftLayer VLANs.
In this installment, we’ll cover creating and routing global IP addresses.
You can follow this link for details on what SoftLayer global IP addresses are and how they work.
In short, with SoftLayer global IP addresses you can route a public IPv4 or IPv6 address to any server, on any (public) VLAN, in any SoftLayer data center.</description>
    </item>
    
    <item>
      <title>Using fog-softlayer for Managing Networks (VLANs)</title>
      <link>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-networks-vlans/</link>
      <pubDate>Thu, 31 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-networks-vlans/</guid>
      <description>In part five of this series, we explored using fog-softlayer for managing your SoftLayer key pairs.
In this blog, we&amp;rsquo;ll look at creating and assigning VLANs for use with our virtual servers.
######Network Examples
Note that SoftLayer uses the term VLAN. The Fog project tries to keep things provider-independent, so we&amp;rsquo;ll be referring to them as networks.
These examples all assume you have ~/.fog, which contain the following:
 default: softlayer_username: example-username softlayer_api_key: 1a1a1a1a1a1a1a1a1a11a1a1a1a1a1a1a1a1a1</description>
    </item>
    
    <item>
      <title>Using fog-softlayer for Managing Key Pairs</title>
      <link>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-key-pairs/</link>
      <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-key-pairs/</guid>
      <description>In part four of this series, we explored using fog-softlayer for managing your SoftLayer tags.
In this post, we&amp;rsquo;ll look at creating and assigning SSH key pairs for use with our compute instances.
Key Pair Examples These examples all assume you have ~/.fog, which contains the following:
 default: softlayer_username: example-username softlayer_api_key: 1a1a1a1a1a1a1a1a1a11a1a1a1a1a1a1a1a1a1 softlayer_default_domain: example.com 
Create a Connection to SoftLayer Compute Service  require &amp;lsquo;fog/softlayer&amp;rsquo; @sl = Fog::Compute[:softlayer]</description>
    </item>
    
    <item>
      <title>Using fog-softlayer for Managing DNS</title>
      <link>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-dns/</link>
      <pubDate>Fri, 25 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-dns/</guid>
      <description>This is Part 4 of a series, so to get the most out of it you may want to start at the beginning. This post explores using fog-softlayer to manage your SoftLayer DNS.
First however, to give credit where it&amp;rsquo;s due, a thank you goes out to @fernandes. He sent in the initial pull request that adds this DNS support.
Configure These examples all assume you have ~/.fog, which contains the following.</description>
    </item>
    
    <item>
      <title>Using fog-softlayer for Managing Object Storage</title>
      <link>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-object-storage/</link>
      <pubDate>Fri, 18 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-object-storage/</guid>
      <description>In part two of this series we explored using fog-softlayer to leverage fog, the cloud services library, for managing servers.
In this installment, we will cover several examples of using fog-softlayer to manage SoftLayer Object Storage.
Configure fog-softlayer for your account. These examples assume you have ~/.fog which contains:
 :softlayer_username: example-username :softlayer_api_key: 1a1a1a1a1a1a1a1a1a11a1a1a1a1a1a1a1a1a1 :softlayer_cluster: cluster # currently supported clusters are dal05, sng01, ams01 
Create a Connection to SoftLayer Object Storage  \trequire &amp;lsquo;fog/softlayer&amp;rsquo; \t@sl = Fog::Storage[:softlayer]</description>
    </item>
    
    <item>
      <title>Using fog-softlayer for Managing Servers</title>
      <link>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-servers/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/matteldridge/using-fog-softlayer-managing-servers/</guid>
      <description>In part one of this series we introduced a new ruby gem, fog-softlayer, which enables SoftLayer users to leverage fog, the Ruby cloud services library.
In this installment, we will walk users through getting started with fog, covering several examples of using fog-softlayer to manage servers using both VMs and bare metal cloud instances.
Configure fog-softlayer for Your Account These examples assume you have a local file at ~/.fog that contains:</description>
    </item>
    
    <item>
      <title>Fog Gem Support for SoftLayer</title>
      <link>https://softlayer.github.io/blog/matteldridge/fog-gem-support-softlayer/</link>
      <pubDate>Thu, 19 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/matteldridge/fog-gem-support-softlayer/</guid>
      <description>Things just got easier for developers working with the SoftLayer API. Support for SoftLayer is introduced with the release of fog-softlayer, which is a provider gem for fog, the Ruby cloud services library.
Fog is an open source cloud services library implemented in Ruby.
Call it what you will, fog calls it what it is. CCI, VM, Cloud Server, Elastic Cloud Compute Instance, EC2, Compute Instance. All of these terms mean the exact same thing!</description>
    </item>
    
    <item>
      <title>Introduction: Deploying Drupal on SoftLayer with Chef - Part 2</title>
      <link>https://softlayer.github.io/blog/waelriac/introduction-deploying-drupal-softlayer-chef-part-2/</link>
      <pubDate>Fri, 02 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/waelriac/introduction-deploying-drupal-softlayer-chef-part-2/</guid>
      <description>In our first installment, I gave an overview of the Chef automation, framework, and terminology and introduced Drupal. Now, let’s install and configure our Chef server, workstation, and client node. First, we need to configure our development machine with the SoftLayer CLI in order to create three virtual servers in SoftLayer. You can also create the virtual servers using the SoftLayer customer portal, if you prefer.
We will use three servers: chef-server-demo, chef-ws-demo, and chef-drupal-demo, each running Ubuntu 12.</description>
    </item>
    
    <item>
      <title>Managing SoftLayer Object Storage Through REST APIs</title>
      <link>https://softlayer.github.io/blog/waelriac/managing-softlayer-object-storage-through-rest-apis/</link>
      <pubDate>Thu, 01 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/waelriac/managing-softlayer-object-storage-through-rest-apis/</guid>
      <description>With SoftLayer object storage you can archive, manage, and serve large amounts of unstructured data with ease and cost-effectiveness. Based on OpenStack Swift, SoftLayer object storage provides a robust, highly scalable object-based storage solution that is ideal for storing static data such as virtual machine images, media, and email archives.
With pay-as-you-go pricing, built-in SFTP and full integration with our content delivery network, you have the ability to store, retrieve, and leverage data the way you want to courtesy of the SoftLayer engineered tagging and search capabilities.</description>
    </item>
    
    <item>
      <title>Ordering RAID Through API</title>
      <link>https://softlayer.github.io/blog/hanskristian/ordering-raid-through-api/</link>
      <pubDate>Tue, 22 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/hanskristian/ordering-raid-through-api/</guid>
      <description>As a SoftLayer user, you have probably seen the beautiful RAID Configurator that greets you when you order a server on the SoftLayer website.
It allows you to do anything you like, from a straight RAID configuration involving all drives in a single disk array, to a much more intricate configuration with nearly any mix of disks and RAID types.
However beautiful and practical the interface, sometimes you want to script this process, and the SoftLayer mantra of &#34;</description>
    </item>
    
    <item>
      <title>Nessus Security Scans Using the SoftLayer API</title>
      <link>https://softlayer.github.io/blog/jmarhee/nessus-security-scans-using-softlayer-api/</link>
      <pubDate>Tue, 15 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/jmarhee/nessus-security-scans-using-softlayer-api/</guid>
      <description>SoftLayer offers free vulnerability scans with all servers. When utilized through the customer portal, it will run a scan on the primary IP for the given server. Because vulnerabilities and misconfiguration are a fact of life in server administration, SoftLayer recommends running scan regularly to keep you you up-to-date on security risks that may impact your server.
Automating regular vulnerability scans can become effortless when using the SoftLayer API.
Using the SoftLayer API, the SoftLayer_Network_Security_Scanner_Request service can scan any IP address belonging to your account (primary IPs, portable IPs, Static secondary IPs).</description>
    </item>
    
    <item>
      <title>Do More with Less: A SoftLayer Knife for Chef</title>
      <link>https://softlayer.github.io/blog/matteldridge/do-more-less-softlayer-knife-chef/</link>
      <pubDate>Thu, 10 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/matteldridge/do-more-less-softlayer-knife-chef/</guid>
      <description>We&#39;re excited to announce the initial release of the knife-softlayer Ruby gem.
Knife-softlayer is a plugin for the knife utility used with Chef that allows users to launch a SoftLayer virtual server and bootstrap it in a single command. If you&#39;re new to Chef, here&#39;s a guide to get you started.
user@local knife softlayer server create --hostname web --domain example.com --flavor medium This is a basic example using every available default, but it works.</description>
    </item>
    
    <item>
      <title>Introduction: Deploying Drupal on SoftLayer with Chef - Part 1</title>
      <link>https://softlayer.github.io/blog/waelriac/introduction-deploying-drupal-softlayer-chef-part-1/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/waelriac/introduction-deploying-drupal-softlayer-chef-part-1/</guid>
      <description>DevOps adoption rate has substantially increased in the last couple of years across all organization sizes due to the real business value that DevOps provides in terms of agility. Automation of application installation in the cloud is an important aspect in DevOps. Traditionally, automation has been achieved via writing shell scripts. These were sufficient to manage smaller applications, but more complex runtimes required the scripts to be written in higher-level programming languages like Perl, Python and Ruby.</description>
    </item>
    
    <item>
      <title>Introduction: Deploying Drupal on SoftLayer with Chef</title>
      <link>https://softlayer.github.io/blog/phil/introduction-deploying-drupal-softlayer-chef/</link>
      <pubDate>Wed, 05 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/introduction-deploying-drupal-softlayer-chef/</guid>
      <description>DevOps adoption rate has substantially increased in the last couple of years across all organization sizes due to the real business value that DevOps provides in terms of agility. Automation of application installation in the cloud is an important aspect in DevOps. Traditionally, automation has been achieved via writing shell scripts. These were sufficient to manage smaller applications, but more complex runtimes required the scripts to be written in higher-level programming languages like Perl, Python and Ruby.</description>
    </item>
    
    <item>
      <title>Getting Started with the Python CLI</title>
      <link>https://softlayer.github.io/blog/phil/getting-started-python-cli/</link>
      <pubDate>Thu, 31 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/getting-started-python-cli/</guid>
      <description>:&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..:&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;: Name : Value : :&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..:&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;: Username : foo : API Key : bar : Endpoint URL : https://api.softlayer.com/xmlrpc/v3/ : Timeout : not set : :&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..:&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;: Are you sure you want to write settings to &amp;ldquo;/Users/foo/.softlayer&amp;rdquo;? [Y/n]: y Configuration Updated Successfully These values can also be manually added to the configuration file manually
Help A comprehensive help dialogue is available for all CLI features. A general help menu can be accessed with the -h flag.</description>
    </item>
    
    <item>
      <title>Redirection and Controller Workflow</title>
      <link>https://softlayer.github.io/blog/tvance/redirection-and-controller-workflow/</link>
      <pubDate>Thu, 05 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/tvance/redirection-and-controller-workflow/</guid>
      <description>A common problem when developing controller functionality is how to structure the workflow of the page. You have to make sure that the different scenarios are accounted for and make sense to the end user, but you also want to make sure that your code stays neat and easy to maintain. A good solution to this common problem is to break up your functionality into two discrete categories and use header redirection to navigate between controller actions that only belong to one category or the other.</description>
    </item>
    
    <item>
      <title>Technical Debt</title>
      <link>https://softlayer.github.io/blog/jbrown/technical-debt/</link>
      <pubDate>Thu, 25 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/jbrown/technical-debt/</guid>
      <description>According to Merriam-Webster dictionary, debt is defined as, &#34;something owed, an obligation, to be in a state of owing.&#34; You are likely familiar with this concept as it pertains to financial affairs. When you take out a loan to purchase a home or vehicle, you have obligated yourself to repay the amount of money you borrowed from a financial institution. If you do not fulfill your repayment obligation there are consequences, most likely the repossession of the item purchased with the borrowed funds and a decrease in your credit worthiness.</description>
    </item>
    
    <item>
      <title>Getting Started with Tickets</title>
      <link>https://softlayer.github.io/blog/waelriac/getting-started-tickets/</link>
      <pubDate>Tue, 09 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/waelriac/getting-started-tickets/</guid>
      <description>SoftLayer&amp;rsquo;s ticket system is a primary communication medium for customers to interact with the SoftLayer support groups. The SoftLayer_Ticket service provides an interaction point for individual tickets, and all tickets on an account can be interfaced through SoftLayer_Account.
Listing A list of all tickets can be gathered from the SoftLayer_Account service with SoftLayer_Account::getTickets. This method returns an array of SoftLayer_Ticket data type objects.
import SoftLayer client = SoftLayer.Client&amp;#40;&amp;#41; tickets = client&amp;#91;&amp;lsquo;Account&amp;rsquo;&amp;#93;.</description>
    </item>
    
    <item>
      <title>Unit Testing Ember Data Models</title>
      <link>https://softlayer.github.io/blog/jbrown/unit-testing-ember-data-models/</link>
      <pubDate>Fri, 21 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/jbrown/unit-testing-ember-data-models/</guid>
      <description>Ember.js is a JavaScript MVC framework for creating ambitious web applications and is one that, along with the Ember Data library&#39;s models, SoftLayer uses for its projects. The &#34;M&#34; in MVC stands for model which is the most important layer in an application, for if the data models are not correctly architected anything built on top of them will inherit their deficiencies. While this post is not going to discuss how to architect your data models in Ember.</description>
    </item>
    
    <item>
      <title>Getting started with Firewalls</title>
      <link>https://softlayer.github.io/blog/phil/getting-started-firewalls/</link>
      <pubDate>Tue, 04 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/getting-started-firewalls/</guid>
      <description>SoftLayer provides two flavors of firewall service that share some API components. Single device firewall solutions are interacted with through the SoftLayer_Network_Component_Firewall service and VLAN firewalls can be accessed with the SoftLayer_Network_Firewall_AccessControlList service.
Single device firewalls Listing As SoftLayer_Network_Component_Firewall objects are attached to the device they are providing protection for. The best way to retrieve a list of all firewalls protecting dedicated servers is a call to SoftLayer_Account::getHardware with an object mask for &#34;</description>
    </item>
    
    <item>
      <title>New DevOps tools for SoftLayer</title>
      <link>https://softlayer.github.io/blog/klandreth/new-devops-tools-softlayer/</link>
      <pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klandreth/new-devops-tools-softlayer/</guid>
      <description>Today, I am happy to announce two new tools to help interact with SoftLayer environment: a command line tool written with our python client and swftp-chef.
When working with lots of servers, whether that be virtual or hardware, being able to automate tasks can be a blessing. While on a CLI quickly sorting and grepping is common place for those in devOps roles.
If you have found yourself writing something like this, these tools are probably for you.</description>
    </item>
    
    <item>
      <title>Zend Framework 1.x...Without Inhaling</title>
      <link>https://softlayer.github.io/blog/jbrown/zend-framework-1xwithout-inhaling/</link>
      <pubDate>Thu, 23 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/jbrown/zend-framework-1xwithout-inhaling/</guid>
      <description>Not sure how to integrate all Zend Framework 1.x has to offer into your existing code? Do you want to know how you can use Zend Framework 1.x without having to fully adopt the MVC architecture? What if you want to begin using MVC later? This article will present ideas and examples on how you can integrate Zend Framework 1.x alongside your existing codebase with minimal need for future re-factoring.</description>
    </item>
    
    <item>
      <title>Getting started with DNS</title>
      <link>https://softlayer.github.io/blog/phil/getting-started-dns/</link>
      <pubDate>Thu, 25 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/getting-started-dns/</guid>
      <description>Users interact with SoftLayer&#39;s authortative DNS servers through the SoftLayer_Dns_Domain service. Each SoftLayer_Dns_Domain has a collection of SoftLayer_DNS_Domain_ResourceRecords referenced by the resourceRecords relational property. While it is possible to interact with resource records through the SoftLayer_Dns_Domain service, it is best to use the SoftLayer_Dns_Domain_ResourceRecord service directly after initial zone creation.
Domains Listing A list of all domains currently hosted on the SoftLayer nameservers can be retrieved with SoftLayer_Account::getDomains which returnr an array of SoftLayer_Dns_Domain template objects.</description>
    </item>
    
    <item>
      <title>Getting started with VSI&#39;s</title>
      <link>https://softlayer.github.io/blog/phil/getting-started-vsis/</link>
      <pubDate>Thu, 18 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/getting-started-vsis/</guid>
      <description>In the context of the SoftLayer API, SoftLayer Virtual Server Instances(VSIs) are represented by [[SoftLayer_Virtual_Guest (type)]] objects. The [[SoftLayer_Virtual_Guest]] service allows for interaction with a specific VSI and you are able to interact with all VSIs on your account through the [[SoftLayer_Account]] service. You will want to make sure you are on the latest version of the Softlayer PHP API SoapClient.
Creating Ordering new VSIs is accomplished through [[SoftLayer_Virtual_Guest::createObject]]. First, a SoftLayer_Virtual_Guest template object is created that contains the details of the VSI.</description>
    </item>
    
    <item>
      <title>How to Solve: Error fetching http headers</title>
      <link>https://softlayer.github.io/blog/phil/how-solve-error-fetching-http-headers/</link>
      <pubDate>Tue, 19 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/how-solve-error-fetching-http-headers/</guid>
      <description>&#34;Error Fetching http headers&#34; is a common error to encounter when working with the SLAPI. Fortunately, it is not terribly difficult to avoid. This error most commonly met when working with a large sets of data and can be a bit cryptic, as it seems to imply some sort of connection issue. In truth, it is a client side error provided when a timeout occurs while waiting for a response from the API.</description>
    </item>
    
    <item>
      <title>FTP/SFTP for SoftLayer Object Storage</title>
      <link>https://softlayer.github.io/blog/kmcdonald/ftpsftp-softlayer-object-storage/</link>
      <pubDate>Mon, 18 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/kmcdonald/ftpsftp-softlayer-object-storage/</guid>
      <description>Getting started with SoftLayer Object Storage can be a bit daunting. At it&#39;s core object storage is an API-driven product, which means integrating it into your solution involves writing code. To remedy that we&#39;ve spent time finding some of the most popular tools that help you interact with SoftLayer Object Storage. Because SoftLayer Object Storage is powered by OpenStack Swift, it benefits from the tools that the OpenStack community produces such as PyCloudFuse, S3QL, CloudBerry, and Cyberduck.</description>
    </item>
    
    <item>
      <title>Python Object Storage Backup 2.0 Released</title>
      <link>https://softlayer.github.io/blog/klandreth/python-object-storage-backup-20-released/</link>
      <pubDate>Wed, 06 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klandreth/python-object-storage-backup-20-released/</guid>
      <description>Under the cover of darkness we’ve been hard at working making more goodies for you. We’re excited to release Object Storage Backup Script 2.0 which is now available on pypi! That’s right, not only is it up to version 2.0 full of bug fixes and enhancements, but you can now install it via pip which is highly recommended.
To install the backup script, run the following command (as root or sudo): pip install slbackup To upgrade, run the following command (as root or sudo): pip install slbackup --upgrade If you don’t have pip, you can find it available as these package names for your distro</description>
    </item>
    
    <item>
      <title>Rich iOS User Interface using UIWebViews and MGTemplateEngine</title>
      <link>https://softlayer.github.io/blog/pkijowski/rich-ios-user-interface-using-uiwebviews-and-mgtemplateengine/</link>
      <pubDate>Tue, 08 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/pkijowski/rich-ios-user-interface-using-uiwebviews-and-mgtemplateengine/</guid>
      <description>SoftLayer Mobile Team is part of the Interface Development group that is dedicated to providing access to SoftLayer global platform. Our goal is to bring an outstanding user experience by clear presentation of data and friendly navigation through resources right in the palms of our customers.
Our mobile application users are very often interested in not only browsing tickets or devices – data that can efficiently be presented using native iOS UI controls like table views – but also in seeing resources health and usage info like bandwidth billing data, monitoring alarms updates and maintenance events – data sets that are more complex and not easily presentable using native controls.</description>
    </item>
    
    <item>
      <title>Simplified CCI Creation</title>
      <link>https://softlayer.github.io/blog/phil/simplified-cci-creation/</link>
      <pubDate>Tue, 18 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/simplified-cci-creation/</guid>
      <description>The SoftLayer API is a thorough beast...many ins and outs, options and choices. It is aimed to impart the greatest level of control to our customers and partners as possible. Our ordering system is a prime example. With it you are able to not only choose the standard assortment of specifications for a cloud server, but also if you want your storage stored locally vs on a SAN or even how you want us to contact you if there is an issue with a particular CCI.</description>
    </item>
    
    <item>
      <title>Dedicated server ordering with Flex Image and Python</title>
      <link>https://softlayer.github.io/blog/phil/dedicated-server-ordering-flex-image-and-python/</link>
      <pubDate>Mon, 10 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/dedicated-server-ordering-flex-image-and-python/</guid>
      <description>Automating server provisioning is not only fun, it can also save you the time and pain recovering from the carpal tunnel all of the clicking and typing ordering 100&#39;s of servers from the managment portal can cause. To save you from that fate I have put together this guide in hopes to help you explore the world of order automation with the SoftLayer API :)
We will assume that at some earlier point in time we have created a Flex Image.</description>
    </item>
    
    <item>
      <title>CCI Ram Upgrades</title>
      <link>https://softlayer.github.io/blog/phil/cci-ram-upgrades/</link>
      <pubDate>Fri, 26 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/cci-ram-upgrades/</guid>
      <description>Sometimes I just can&#39;t be bothered to do things in the &#34;normal&#34; way. Now, I can enjoy a good ole zen activity like the occasional manual data entry, but in general if I have to repeat a task more than a few times I get antsy. And I am not completely unsure that someone smart and sucessful said something good about lazy people. So in my quest for maximum return for minimal effort I find myself collecting various useful snippets and scripts.</description>
    </item>
    
    <item>
      <title>An American SLayer In Europe</title>
      <link>https://softlayer.github.io/blog/phil/american-slayer-europe/</link>
      <pubDate>Thu, 04 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/american-slayer-europe/</guid>
      <description>From time to time, I get the opportunity to travel and work with various groups and organizations around the world. Sometimes these adventures take place on the conference floor manning the SoftLayer booth trying to best khazzy’s sub 47 second time on the server challenge, talking with passersby about the wonderfulness that is the SoftLayer API or even amazing audiences with my switch-ball skills. While these events are a staple in the life of a Development Community Advocate I have had the fortune to speak at engagements and more recently work with the guys and gals that make our Startup program, Catalyst, possible.</description>
    </item>
    
    <item>
      <title>iOS User Interface Testing</title>
      <link>https://softlayer.github.io/blog/pkijowski/ios-user-interface-testing/</link>
      <pubDate>Fri, 14 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/pkijowski/ios-user-interface-testing/</guid>
      <description>Automate, automate, automate...
Automation is part of our SoftLayer DNA. We automate not only our external processes and procedures, such as server provisioning and operating system reloads, but also internal processes such as our iOS mobile products testing.
Our mobile applications have short, 2-3 week release cycles, and growing feature sets. Regression tests on the applications can take several days to complete. In order to maintain high release quality standards with the small mobile teams, we decided to implement both User Interface and code level tests to exercise our daily builds.</description>
    </item>
    
    <item>
      <title>Extended Object Masks: a taste of things to come</title>
      <link>https://softlayer.github.io/blog/phil/extended-object-masks-taste-things-come/</link>
      <pubDate>Tue, 17 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/extended-object-masks-taste-things-come/</guid>
      <description>While my culinary endeavors have never been on par with Kevin&#39;s(he grills a mean steak), I wanted to take some time to provide this tasty morsel of the new Extended Object Masks which will soon be served in full portion for the feast.
As many users know, the SLAPI is able to provide you with an enormous amount of data about your environment. And as knowledge is power, having access to the SLAPI puts you at least on par with Aquaman.</description>
    </item>
    
    <item>
      <title>World Wide Developers Conference 2012</title>
      <link>https://softlayer.github.io/blog/pkijowski/world-wide-developers-conference-2012/</link>
      <pubDate>Fri, 13 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/pkijowski/world-wide-developers-conference-2012/</guid>
      <description>SoftLayer constantly pursues excellence in bringing the best products to our customers. We achieve this by always staying up to date with the newest and most efficient technologies, having the best employees and constantly raising our qualifications. That being said, attending Apple’s 23rd World Wide Developers Conference was a must for us!
This year’s WWDC took place in San Francisco between June 11 and June 15 and I was the proud SoftLayer representative.</description>
    </item>
    
    <item>
      <title>Deglazing slbackup.py Usage In the Object Storage Kitchen</title>
      <link>https://softlayer.github.io/blog/klandreth/deglazing-slbackuppy-usage-object-storage-kitchen/</link>
      <pubDate>Mon, 02 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klandreth/deglazing-slbackuppy-usage-object-storage-kitchen/</guid>
      <description>Backups are dandy; especially when you delete everything by accident. But when some joker writes a backup script that you think will be helpful and doesn’t document how to use it properly, it’s probably more frustrating than figuring things out yourself. We’ve been busy launching a private cloud offering so this blog is much overdue.
Let’s take the very common use case of database backups. And let’s do this up foodie style.</description>
    </item>
    
    <item>
      <title>View Controller Containment in SoftLayer Mobile HD</title>
      <link>https://softlayer.github.io/blog/pkijowski/view-controller-containment-softlayer-mobile-hd/</link>
      <pubDate>Tue, 19 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/pkijowski/view-controller-containment-softlayer-mobile-hd/</guid>
      <description>SoftLayer Mobile HD version 1.2 introduced dual-pane browser functionality to provide a superior experience while interacting with our highly scalable cloud storage system, Object Storage. The browser takes advantage of a new feature in Apple’s iOS 5: view controller containment.
The iPad Object Storage browser incorporates functionality similar to that found in the Mac OS X Finder’s file browser that should be familiar to Mac OS X users. The metaphor has been reworked slightly so that it fits well on a mobile device screen.</description>
    </item>
    
    <item>
      <title>OS Reload, OS Reload, OS Reload...</title>
      <link>https://softlayer.github.io/blog/phil/os-reload-os-reload-os-reload/</link>
      <pubDate>Wed, 06 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/os-reload-os-reload-os-reload/</guid>
      <description>Need to OS Reload many servers you say!?!
Do you have a large number of servers whom could use fresh start? A 1/2 dozen boxes which can now be re-purposed? Maybe want to upgrade to the latest version of Debian and just couldn&#39;t be bothered with apt?
What ever the series of events which have led to this moment, you now find yourself in need of a way to submit a seemingly limitless number of OS Reloads and the threat of carpel tunnel makes you weary of accomplishing this task the old(or would that be new) fashioned way.</description>
    </item>
    
    <item>
      <title>The Object of My Backup Storage</title>
      <link>https://softlayer.github.io/blog/klandreth/object-my-backup-storage/</link>
      <pubDate>Mon, 14 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klandreth/object-my-backup-storage/</guid>
      <description>TL;DR: I deleted my personal site, restored it, and wrote an awesome rsync-like backup script that&#39;s really fast and easy on IO. Github link at the end of the article.
Ever had a dangling symlink ruin your rm-rf? The weight of your confidence creeps down into that area that isnt necessarily your stomach, but it&#39;s easy enough to call it such for conversation upon the realization that your previous command should have returned quite a bit sooner.</description>
    </item>
    
    <item>
      <title>Take the Bite Out of Editing Firewall Rules – A Python Example</title>
      <link>https://softlayer.github.io/blog/phil/take-bite-out-editing-firewall-rules-%e2%80%93-python-example/</link>
      <pubDate>Wed, 09 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/take-bite-out-editing-firewall-rules-%e2%80%93-python-example/</guid>
      <description>Time is the only true bartering resource. We trade dollars for goods or services but the hard earned currency for the transaction is one&#39;s time for another&#39;s. Due to the nonrenewable nature of this resource it is oft difficult for spare hours to be put into learning or researching that topic you always had a passing interest in or that everyone is gushing over. I try and keep an eye out during my daily experience for situations which may provide the excuse I need to allot time to one of the items on my &#34;</description>
    </item>
    
    <item>
      <title>Measure Twice; Cut Once</title>
      <link>https://softlayer.github.io/blog/tgarrison/measure-twice-cut-once/</link>
      <pubDate>Thu, 26 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/tgarrison/measure-twice-cut-once/</guid>
      <description>Recently I launched a project that displayed items in a blog-like format with an attached thumbnail. When I had originally developed this project, I built my thumbnail generator with the intent of adding caching support to it in order to reduce the strain placed on the server during peak usage. Unfortunately, I had forgotten to add the caching support and the product went live without.
When this product was launched, the initial traffic spurt was about 110 users all at the same time.</description>
    </item>
    
    <item>
      <title>Caching Made Easy Part 2: Pass The Stack</title>
      <link>https://softlayer.github.io/blog/klandreth/caching-made-easy-part-2-pass-stack/</link>
      <pubDate>Mon, 16 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klandreth/caching-made-easy-part-2-pass-stack/</guid>
      <description>Part I of our Memcached Series explored the concept of using memcached to cache entire pages. In Part II we further increase the responsiveness of your application by finding and removing unnecessary steps. By caching in memcached we are already bypassing an unholy amount of database queries and foreach() loops, not to mention all the unnecessary application logic to decide if a user can view the page or not. If we skip the application stack for anonymous page requests, we can additionally bypass the fastcgi handoff, forking of fastcgi processes, the bootstrap of your application, and the initial database connection (if not part of bootstrapping).</description>
    </item>
    
    <item>
      <title>Caching Made Easy Part I or: How I learned to stop worrying and love the memcached</title>
      <link>https://softlayer.github.io/blog/klandreth/caching-made-easy-part-i-or-how-i-learned-stop-worrying-and-love-memcached/</link>
      <pubDate>Sat, 31 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klandreth/caching-made-easy-part-i-or-how-i-learned-stop-worrying-and-love-memcached/</guid>
      <description>Congratulations! Your website just made the front page on [awesome social media site here]. And while the business folks begin their joy-leap whose height will only be matched by the record in revenues, the server admins brace for impact as their apache/mod_php stack begins to strain under the weight of dynamically generated content. The typical traffic seems abysmal in comparison to the wave of new anonymous users surging to your site.</description>
    </item>
    
    <item>
      <title>The CCI VLAN Specification</title>
      <link>https://softlayer.github.io/blog/phil/cci-vlan-specification/</link>
      <pubDate>Fri, 09 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/cci-vlan-specification/</guid>
      <description>When ordering a CCI on our shopping cart you are currently unable to specify a VLAN. While there are exceptions in place for things like VLAN-bound firewalls and load balancers, there are a number of situations outside of those in which a shared VLAN is preferable. Good news - when placing an order via the API this is something that can be accomplished!
When populating the virtualGuests property of a SoftLayer_Container_Product_Order_Virtual_Guest you need to create an array of SoftLayer_Virtual_Guest.</description>
    </item>
    
    <item>
      <title>Command Line Simplicity</title>
      <link>https://softlayer.github.io/blog/phil/command-line-simplicity/</link>
      <pubDate>Fri, 24 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/command-line-simplicity/</guid>
      <description>Sometimes when putting together a script for the API I find myself wanting to remove as much complication from the process as possible. Maybe in need of troubleshooting simplicity to rule out the plethora of idiosyncrasies which may be causing an API call to fail, or possibly just the need to walk my way through an idea and worry about the logic later.
I’m sure we all have our own process to filter out all of the complications the technologies we use may cause; for me in the case of the SLAPI I fall back to a Bash shell, curl and our REST endpoint.</description>
    </item>
    
    <item>
      <title>Object Storage APIs Are Here!</title>
      <link>https://softlayer.github.io/blog/phil/object-storage-apis-are-here/</link>
      <pubDate>Mon, 13 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/object-storage-apis-are-here/</guid>
      <description>SoftLayer Object Storage is based on OpenStack Swift and provides integrated indexing, searching and CDN support. Information stored to SoftLayer Object Storage is written multiple times to self-healing clusters which have the ability to immediately restore data in case of drive failure.
Unlike previously released APIs SoftLayer Object Storage is only available on a REST interface. However, very much like our other APIs will you have the ability to fully interact with SoftLayer Object Storage programmatically.</description>
    </item>
    
    <item>
      <title>Scheduled Maintenance</title>
      <link>https://softlayer.github.io/blog/phil/scheduled-maintenance/</link>
      <pubDate>Mon, 12 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/scheduled-maintenance/</guid>
      <description>The SoftLayer Development Network site will be unavailable between 5:00am and 6:00am CST on 12/14/2011. This maintenance window will be used to upgrade the infrastructure hosting the site. Please contact sldn@softlayer.com if you have any questions or concerns.</description>
    </item>
    
    <item>
      <title>SLDN Update!</title>
      <link>https://softlayer.github.io/blog/phil/sldn-update/</link>
      <pubDate>Fri, 18 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/sldn-update/</guid>
      <description>The SoftLayer Developer Network thrives on your feedback! Let us know what features and improvements you would like to see in the future. You can reach the SLDN team at sldn@softlayer.com.
Change Log:
*A number of GUI tweaks which should make the site a bit more kind on the eyes.
*The blog section has been removed and now all blogs and news articles will appear on the home page.
*A tag cloud has been added to provide filtering for blog/news articles.</description>
    </item>
    
    <item>
      <title>cPanel Provides SoftLayer DNS Clustering Support</title>
      <link>https://softlayer.github.io/blog/phil/cpanel-provides-softlayer-dns-clustering-support/</link>
      <pubDate>Mon, 26 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/cpanel-provides-softlayer-dns-clustering-support/</guid>
      <description>Since the release of cPanel &amp;amp; WHM 11.30, users of the control panel have had the ability to incorporate the native DNS Cluster Management with DNS services offered by SoftLayer and UK2Group (under the brand VPS.NET). While the benefits utilizing a geographically diverse and scalable DNS architecture merit a post dedicated to them, it is the implementation of this feature which has caught my attention.
Simply providing a SLAPI user with DNS management permissions and its associated SLAPI key allows cPanel to seamlessly integrate interaction with the SoftLayer DNS infrastructure.</description>
    </item>
    
    <item>
      <title>Helper Functions: Small Changes, Big Win</title>
      <link>https://softlayer.github.io/blog/tgarrison/helper-functions-small-changes-big-win/</link>
      <pubDate>Wed, 31 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/tgarrison/helper-functions-small-changes-big-win/</guid>
      <description>If your job is anything like mine, there is just never enough time to finish everything. When working on projects, I try to find ways which can speed up my development process. There are many tools and ideas which can help greatly in this area, however, sometimes very small behavioral changes can result in a cumulative win. When working on web-based projects in PHP, I often find that I need to see what’s contained in an array or an object so I can get my code just right.</description>
    </item>
    
    <item>
      <title>SOAP API Application Development 101</title>
      <link>https://softlayer.github.io/blog/ktrachier/soap-api-application-development-101/</link>
      <pubDate>Tue, 23 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/ktrachier/soap-api-application-development-101/</guid>
      <description>Simple Object Access Protocol (SOAP) is built on server-to-server remote procedure calls over HTTP. The data is formatted as XML; this means secure, well formatted data will be sent and received from SoftLayer’s API. This may take a little more time to set up than the REST API but it can be more scalable as you programmatically interface with it. SOAP’s ability to tunnel through existing protocols such as HTTP and innate ability to work in an object-oriented structure make it an excellent choice for interaction with the SoftLayer API.</description>
    </item>
    
    <item>
      <title>The New SLDN</title>
      <link>https://softlayer.github.io/blog/phil/new-sldn/</link>
      <pubDate>Thu, 30 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/new-sldn/</guid>
      <description>Good news everyone!
The past few months we have been working feverously on redesigning the SoftLayer Development Network site.
The goals for this first release are as follows:
* Maintain level of functionality and features of the previous SLDN
* Unify browsing experience by collapsing the blog and reference documentation into a single content management system
* Lay the groundwork for advanced features such as rating, comments, user generated content, and even a real time feed of API changes</description>
    </item>
    
    <item>
      <title>The End Is Nigh</title>
      <link>https://softlayer.github.io/blog/phil/end-nigh/</link>
      <pubDate>Fri, 03 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/phil/end-nigh/</guid>
      <description>As the depletion of IPv4 space draws nearer we have added a new requirement when placing an order which contains addtional IP addresses. In addition to the usual suspects you will need to add an additional array to your order container object: itemCategoryQuestionAnswers.
One of the SL developers, Kien Phan, was kind enough to provide the example which can be found at the bottom of this post, but for the johnny-on-the-spots out there you can get a list of the possible questions with an Object Mask of questions for SoftLayer_Product_Item_Category with a categoryId of 14(secondary IP addresses).</description>
    </item>
    
    <item>
      <title>Understanding Objective-C : Messaging</title>
      <link>https://softlayer.github.io/blog/sthompson/understanding-objective-c-messaging/</link>
      <pubDate>Mon, 23 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/sthompson/understanding-objective-c-messaging/</guid>
      <description>In this installment, I hope now to point out some of the unique features of the Objective-C language and entice other geeks to look at the language with new eyes. In this case we are going to examine the technique used to invoke object behaviors, message passing.Objective-C is the lingua franca of Mac OS X and iOS application development. However, the language is seldom seen outside of the Apple development environment.</description>
    </item>
    
    <item>
      <title>Blocks - A welcome addition to C</title>
      <link>https://softlayer.github.io/blog/sthompson/blocks-welcome-addition-c/</link>
      <pubDate>Mon, 18 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/sthompson/blocks-welcome-addition-c/</guid>
      <description>In the programming environment of Mac OS X 10.6 (Snow Leopard), Apple added a programming construct to C (and by extension C++ and Objective-C) known simply as &#34;Blocks&#34;. This new construct has been carried to the iOS platform starting with iOS 4.0. Developers familiar with the venerable LISP will smile knowingly at blocks, and wonder what took that young whippersnapper C so long. Likewise, Ruby aficionados will look at blocks and find an old friend.</description>
    </item>
    
    <item>
      <title>Virtual Guest Ordering</title>
      <link>https://softlayer.github.io/blog/sthompson/virtual-guest-ordering/</link>
      <pubDate>Tue, 11 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/sthompson/virtual-guest-ordering/</guid>
      <description>Note: This process for ordering CCIs has been deprecated. Please see the updated process here. However this blog contains current information regarding ordering complex CCI solutions and all other products.
The universe is a strange place.
Many times in my life there have been occasions where I will run into the same concept, or the same question repeatedly within a short span of time. Perhaps It&amp;rsquo;s more a question of perception than cosmic coincidence, but the phenomenon itself is real.</description>
    </item>
    
    <item>
      <title>Go Go Gadget</title>
      <link>https://softlayer.github.io/blog/wfrancis/go-go-gadget/</link>
      <pubDate>Mon, 03 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/wfrancis/go-go-gadget/</guid>
      <description>To gadgetize or not to gadgetize? That is the question. Between Apple widgets, Google gadgets, and Windows gadgets, these technologies have a bit of buzz associated with them. But as with any technology, just because it’s cool doesn’t mean it makes sense in every situation. So when I was first approached with the idea of implementing a Windows gadget to interact with the SoftLayer Application Programming Interface (SLAPI), I stepped back and asked myself what area or areas of the SLAPI make a compelling case for gadgetization.</description>
    </item>
    
    <item>
      <title>Adding SoftLayer to the Mac OS X Dashboard</title>
      <link>https://softlayer.github.io/blog/sthompson/adding-softlayer-mac-os-x-dashboard/</link>
      <pubDate>Mon, 20 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/sthompson/adding-softlayer-mac-os-x-dashboard/</guid>
      <description>The SoftLayer API started on the web. It was originally created to support the back end of our web portals. However, the API is an asset whose value extends beyond the web. The API is built on commonly used technologies like XML, JSON, and HTTP. As a result, it is possible to access the API from environments that are very different than that of the typical web browser. The SoftLayer Mobile Client is an excellent example.</description>
    </item>
    
    <item>
      <title>Directory Tree in XML</title>
      <link>https://softlayer.github.io/blog/dhudlow/directory-tree-xml/</link>
      <pubDate>Fri, 29 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dhudlow/directory-tree-xml/</guid>
      <description>As a fan of XML, the DOM, and interesting design patterns, when recently asked for a way to retrieve a representation of a public directory tree on an iPhone app, I decided to code something a little more elegant than printing raw XML or, worse, some custom format. My first assumption was that I&#39;d be building an actual DOM tree, then outputting formatted XML from there. This way, I&#39;d be assured my output was always valid XML.</description>
    </item>
    
    <item>
      <title>Captured in a Gem - The SoftLayer API Client for Ruby</title>
      <link>https://softlayer.github.io/blog/sthompson/captured-gem-softlayer-api-client-ruby/</link>
      <pubDate>Thu, 12 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/sthompson/captured-gem-softlayer-api-client-ruby/</guid>
      <description>When I first learned about object oriented programming, many years ago, I found that the technique fit me well. I found the process of breaking a computing problem down into objects to be a natural way to analyze many of them. At the same time, my designs are never as elegant as I would like them to be in the first draft. For me, the object oriented design process involves tinkering with the design, trying a couple of iterations, and refining the deconstruction over time.</description>
    </item>
    
    <item>
      <title>Time for a REST, Everyone</title>
      <link>https://softlayer.github.io/blog/klaude/time-rest-everyone/</link>
      <pubDate>Fri, 23 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/time-rest-everyone/</guid>
      <description>In our last post we mentioned that our API now supports a REST interface. It&#39;s really true, and it&#39;s really here! Quoth our new, fancy, manual page:
 REST API URLs are structured to easily traverse SoftLayer&#39;s object hierarchy. A basic REST request is structured as follows:
https://:@api.[service.]softlayer.com/rest/v3/
[/initializationParameter].
 All REST requests, even private network requests, must be passed through HTTP SSL. Use your API username and key to authenticate your request through HTTP authentication.</description>
    </item>
    
    <item>
      <title>It&#39;s Time to Bust out of the Private Network!</title>
      <link>https://softlayer.github.io/blog/klaude/its-time-bust-out-private-network/</link>
      <pubDate>Fri, 02 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/its-time-bust-out-private-network/</guid>
      <description>Some of you have noticed that we mentioned our new mobile clients are based on our developer API but don&#39;t require a VPN connection to our private network. Your observations are astute and indeed correct. Our iPhone and Android applications can be accessed from anywhere on the Internet, and now so can the SoftLayer API! We&#39;ve rolled out API endpoints on the public Internet at https://api.softlayer.com. Our public API uses SSL to keep your data transmission secure, but you&#39;re still free to use non-SSL HTTP on our private network.</description>
    </item>
    
    <item>
      <title>The SoftLayer Mobile Client: A New Perspective</title>
      <link>https://softlayer.github.io/blog/sthompson/softlayer-mobile-client-new-perspective/</link>
      <pubDate>Mon, 21 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/sthompson/softlayer-mobile-client-new-perspective/</guid>
      <description>Much of the development work that goes on here centers on the SoftLayer Customer Portal. The Customer Portal is a traditional Web application that links your browser to the powerful back-end systems that our engineers have crafted over the course of many years. Most of the engineers around here are first rate hands at web application technologies like PHP, JavaScript, and HTML.
I don&#39;t know much HTML. I know even less PHP.</description>
    </item>
    
    <item>
      <title>Our Python client is out!</title>
      <link>https://softlayer.github.io/blog/klaude/our-python-client-out/</link>
      <pubDate>Wed, 21 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/our-python-client-out/</guid>
      <description>Lately I&amp;rsquo;ve seen a lot of people around me writing and hacking in Python. Way back when API v1 was out we noted that Python has built-in XML-RPC support. Built-in XML-RPC support is great. It makes calling our API, especially our latest API, a snap. Some of y&amp;rsquo;all on our forums have been doing very cool things with our API in Python.
Python hackers and users, we&amp;rsquo;ve just made your lives easier.</description>
    </item>
    
    <item>
      <title>A Conversation on API Abstraction</title>
      <link>https://softlayer.github.io/blog/dmcaloon/conversation-api-abstraction/</link>
      <pubDate>Thu, 08 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dmcaloon/conversation-api-abstraction/</guid>
      <description>As a developer, I have a good relationship with the PHP community. Many of my personal friends are involved in large PHP projects all over the world. One friend in particular is the lead developer of The Easy API. It&#39;s an API wrapper that does the &#34;hard parts&#34; for you. Some companies release &#34;APIs&#34; that are confusing hodgepodges of unrelated functionality. Many times the API in question is simply a web form that developers are expected to POST to and parse poorly-formatted output.</description>
    </item>
    
    <item>
      <title>Something new for your API Toolbox</title>
      <link>https://softlayer.github.io/blog/klaude/something-new-your-api-toolbox/</link>
      <pubDate>Thu, 25 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/something-new-your-api-toolbox/</guid>
      <description>An interesting facet of the development and systems administration business is the number of 80% projects that build up over time. An 80% project is that awesome library, script, rewrite, new system, or what have you that&#39;s cooling on your back burner. It&#39;s almost done but it&#39;s missing the finishing touches. Maybe it needs a few code tweaks. Maybe it needs a little more documentation. Maybe you&#39;re still finalizing settings and playing with patches.</description>
    </item>
    
    <item>
      <title>Another Expo in the Bag</title>
      <link>https://softlayer.github.io/blog/klaude/another-expo-bag/</link>
      <pubDate>Tue, 23 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/another-expo-bag/</guid>
      <description>After a three hour flight that took five hours from LA to Dallas I&#39;m finally home from the Southern California Linux Expo. This was SCaLE&#39;s 8th show, an evolution that started as a meeting of Linux User Groups from the Los Angeles area that grew into one of the largest Linux, open technology, and community focused events in the region.
This is my second year attending SCaLE. I went last year as a part of an open source project I was working with and had a pretty good time.</description>
    </item>
    
    <item>
      <title>Object Masks and Filters in C Sharp</title>
      <link>https://softlayer.github.io/blog/wfrancis/object-masks-and-filters-c-sharp/</link>
      <pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/wfrancis/object-masks-and-filters-c-sharp/</guid>
      <description>Object Masks, Filters, and Other V3 Black Magic
Everyone has heard the age old saying for any given job you need to have the right tool. Just as most of us have tried to use the flat rounded edge of a butter knife a time or two when what we desperately needed was a screw driver. Does that mean you weren&amp;rsquo;t able to open that little compartment on whatever gizmo and replace the batteries?</description>
    </item>
    
    <item>
      <title>Building the Data Warehouse</title>
      <link>https://softlayer.github.io/blog/dmcaloon/building-data-warehouse/</link>
      <pubDate>Tue, 29 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dmcaloon/building-data-warehouse/</guid>
      <description>Here at SoftLayer, we have a lot of things that we need to keep track of. It&#39;s not just payments, servers, rack slots, network ports, processors, hard drives, RAM sticks, and operating systems, it&#39;s also bandwidth, monitoring, network intrusions, firewall logs, VPN access logs, API access, user history, and a whole host more. Last year, I was tapped to completely overhaul the existing bandwidth system. The old system was starting to show its age, and with our phenomenal growth it just hasn&#39;t been able to keep up.</description>
    </item>
    
    <item>
      <title>CloudLayer Storage backend API is now available</title>
      <link>https://softlayer.github.io/blog/klaude/cloudlayer-storage-backend-api-now-available/</link>
      <pubDate>Mon, 20 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/cloudlayer-storage-backend-api-now-available/</guid>
      <description>We&#39;ve opened up the backend API that powers our CloudLayer Storage systems for y&#39;all. Those of you who want more control over your cloud storage accounts and content should definitely check this out.
We&#39;ve got instructions conveniently hosted on our cloud systems:
CloudLayer&amp;trade; Storage API v.1 Documentation (1.3MB)
This is a bit of a departure from our standard API. It only covers manipulation of CloudLayer Storage accounts, and is accessed via REST-full URLs.</description>
    </item>
    
    <item>
      <title>Guess who&#39;s coming to HostingCon!</title>
      <link>https://softlayer.github.io/blog/klaude/guess-whos-coming-hostingcon/</link>
      <pubDate>Mon, 13 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/guess-whos-coming-hostingcon/</guid>
      <description>Every year I get the same question from my customers, &#34;Hey Klaude, are we going to see you at HostingCon this year?&#34;. Every year I respond with the same thing, &#34;I have no idea. I&#39;ll ask!&#34;. Every year I hear from my management, &#34;Not this year, Kevin.&#34; after I ask if I can go. Representing SoftLayer at the big trade shows is a coveted job amongst the SoftLayer enlisted, especially for an event like HostingCon.</description>
    </item>
    
    <item>
      <title>Using CURL to access CloudLayer Storage</title>
      <link>https://softlayer.github.io/blog/nday/using-curl-access-cloudlayer-storage/</link>
      <pubDate>Fri, 10 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/nday/using-curl-access-cloudlayer-storage/</guid>
      <description>CloudLayer Storage is billed as providing &#34;anytime, anywhere access to your data&#34;. This isn’t just referring to human interfaces, but also includes automated interfaces.
One easy way to automate access to CloudLayer Storage is through curl. Curl is available as a command-line tool in most every operating system and is typically used for transferring files. In this post I’ll show some examples on how to use curl to add, get, delete, or otherwise manipulate files in CloudLayer Storage.</description>
    </item>
    
    <item>
      <title>API v1 is going dark on August 1. Migrate your apps, everyone!</title>
      <link>https://softlayer.github.io/blog/klaude/api-v1-going-dark-august-1-migrate-your-apps-everyone/</link>
      <pubDate>Thu, 28 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/api-v1-going-dark-august-1-migrate-your-apps-everyone/</guid>
      <description>If you haven&#39;t done so yet, please migrate your apps and scripts based on version 1 of the SoftLayer API to version 3. Version 3 is chock full of tools and methods that touch every single facet of your servers, your account, and our business. If you&#39;ve been following threads on our forums since last March then you&#39;re likely using our latest API and don&#39;t need to migrate anything. We&#39;ve sent notices to those of you who have recently used API version 1.</description>
    </item>
    
    <item>
      <title>The start of something good</title>
      <link>https://softlayer.github.io/blog/klaude/start-something-good/</link>
      <pubDate>Fri, 06 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/start-something-good/</guid>
      <description>I&#39;ve been working with quite a few PHP users on our forums over the past few months. One thing I love is the sheer variety of tasks you guys are accomplishing. One thing I don&#39;t really love is how y&#39;all use the sample code we provided when we launched our new API last year. Our examples work great for API v1 to API v3 migrations, but those simple functions don&#39;t really do our current API justice.</description>
    </item>
    
    <item>
      <title>PHP Memory Management in Foreach</title>
      <link>https://softlayer.github.io/blog/dmcaloon/php-memory-management-foreach/</link>
      <pubDate>Thu, 15 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dmcaloon/php-memory-management-foreach/</guid>
      <description>code { display: block; background:#dddddd; border: 1px solid #999999; padding: 5px; }Many developers, even experienced ones, are confused by the way PHP handles arrays in foreach loops. In the standard foreach loop, PHP makes a copy of the array that is used in the loop. The copy is discarded immediately after the loop finishes. This is transparent in the operation of a simple foreach loop. For example:
$set = array&amp;#40;&amp;ldquo;apple&amp;rdquo;, &amp;ldquo;banana&amp;rdquo;, &amp;ldquo;coconut&amp;rdquo;&amp;#41;; foreach &amp;#40; $set AS $item &amp;#41; &amp;#123; echo &amp;ldquo;{$item}&amp;ldquo;; &amp;#125; This outputs:</description>
    </item>
    
    <item>
      <title>PHP Type Conversions for Comparison</title>
      <link>https://softlayer.github.io/blog/dmcaloon/php-type-conversions-comparison/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dmcaloon/php-type-conversions-comparison/</guid>
      <description>There has been some discussion recently among our dev team regarding PHP type conversion. I’ll give some of the problems we’ve run into and then try to shed some light on the inner workings of PHP when it does comparisons.
The first example may seem familiar to most seasoned developers, but when chained together it brings up an interesting point about PHP: The = = operator isn’t transitive. echo &amp;#40;null = = 0 ?</description>
    </item>
    
    <item>
      <title>URL Obfuscation</title>
      <link>https://softlayer.github.io/blog/dmcaloon/url-obfuscation/</link>
      <pubDate>Fri, 31 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dmcaloon/url-obfuscation/</guid>
      <description>On August 26, our CTO Nathan Day wrote a post on the InnerLayer blog about nameservers. His straightforward explanation of nameservers and their operations got me thinking about how NOT straightforward the whole operation is. The way Nathan explained it, you type in “theinnerlayer.softlayer.com” and it is translated to an IP address, which is then contacted, and the page is returned to you. However, if you know the IP address already, you can use that instead of the URL, and skip the nameserver entirely.</description>
    </item>
    
    <item>
      <title>A Boatload Of New Features!</title>
      <link>https://softlayer.github.io/blog/klaude/boatload-new-features/</link>
      <pubDate>Tue, 28 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/boatload-new-features/</guid>
      <description>Howdy everyone! We&#39;ve been pounding some really cool features out lately and just updated our documentation wiki with their API services. In addition to a whole ton of new additions to the SoftLayer_Account, SoftLayer_Hardware_Server, and our other staple services we&#39;re proud to introduce:
 SoftLayer_Network_ContentDelivery_Account - Control hosting on our content delivery network. SoftLayer_Network_Media_Transcode_Account - Configure and use SoftLayer&#39;s free (as in beer!) media transcoding service. SoftLayer_Network_LoadBalancer_Global_Account - This&#39;ll help you out if you run large and geographically diverse websites.</description>
    </item>
    
    <item>
      <title>The New Face of Search Engine Optimization</title>
      <link>https://softlayer.github.io/blog/dmcaloon/new-face-search-engine-optimization/</link>
      <pubDate>Mon, 11 Aug 2008 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dmcaloon/new-face-search-engine-optimization/</guid>
      <description>Most SL customers host websites on our services, and all websites benefit from high search engine rankings. The &#34;old method&#34; of search engine optimization doesn&#39;t really work anymore. Back in the days before Google, the best way to get to the top of the search engine rankings was to follow four easy steps:
 Diversify your IP space. Add keywords to the  tag on your site. Make sure those keywords also appear in the body of your document.</description>
    </item>
    
    <item>
      <title>Dot Net? You Bet!</title>
      <link>https://softlayer.github.io/blog/wfrancis/dot-net-you-bet/</link>
      <pubDate>Thu, 20 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/wfrancis/dot-net-you-bet/</guid>
      <description>Greetings fellow SLAPI enthusiasts! When the call went out for examples I figured why not cowboy up and try my hand at with a .NET example. After all, being an MCP in a largely PHP shop makes me as qualified as anyone. Plus I am constantly pushing the Microsoft Kool-Aid around the office so this was a chance to put my money where my mouth is.
Unfortunately, there was just one catch—I’m not a .</description>
    </item>
    
    <item>
      <title>Worth A Thousand Words</title>
      <link>https://softlayer.github.io/blog/klaude/worth-thousand-words/</link>
      <pubDate>Mon, 17 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/worth-thousand-words/</guid>
      <description>Logan, the chief architect behind our API framework, has been playing with graphviz lately to make pretty pictures out of our codebase and help find areas for improvement. You&#39;d be surprised at how much a map of your object relationships can help make your structure more efficient. These pictures looked so cool that I asked him for a diagram of our API&#39;s object relationships. The picture below represents how each API data type relates to each other.</description>
    </item>
    
    <item>
      <title>Perls of Wisdom</title>
      <link>https://softlayer.github.io/blog/klaude/perls-wisdom/</link>
      <pubDate>Wed, 12 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/perls-wisdom/</guid>
      <description>It&#39;s been a little over a week since our API launch. I haven&#39;t heard from anyone who doesn&#39;t like it, so that must mean we&#39;re doing it right. We&#39;ve been spending time lately catching up on little quirks and documentation bugs. Our first example is up. Its for you Perl jockeys, and really exemplifies the flexibility and power of object masks in your API handling code. We&#39;ve got a .NET one coming up soon.</description>
    </item>
    
    <item>
      <title>And now for something completely different... version 3!</title>
      <link>https://softlayer.github.io/blog/klaude/and-now-something-completely-different-version-3/</link>
      <pubDate>Mon, 03 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/and-now-something-completely-different-version-3/</guid>
      <description>Before I get to the good stuff I want to apologize to you guys. I haven&#39;t been active in my API evangelism as of late. Heck, as of the last few months. Well here&#39;s why. I am extremely ecstatic to announce the release of SoftLayer&#39;s API version 3.0! This has been a long time coming here at the SoftLayer devCave. This little gem has been in development for about 9 months now, and it&#39;s very fulfilling to see it finally come out.</description>
    </item>
    
    <item>
      <title>Where&#39;s the Beef?</title>
      <link>https://softlayer.github.io/blog/klaude/wheres-beef/</link>
      <pubDate>Fri, 14 Dec 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/wheres-beef/</guid>
      <description>In preparation for the new Seattle launch this Monday we&#39;ve updated getHardwareList() to return a &#34;Location&#34; string at the end of the return array. Location reads &#34;Dallas&#34; for servers in Dallas and strangely enough it reads &#34;Seattle&#34; for servers in Seattle. It&#39;s great to see all this prep-work coming together, though I think we developers will need a nap once the dust settles. In the mean time there&#39;s always Monster.</description>
    </item>
    
    <item>
      <title>Gearing up for the Rainy City</title>
      <link>https://softlayer.github.io/blog/klaude/gearing-rainy-city/</link>
      <pubDate>Thu, 06 Dec 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/gearing-rainy-city/</guid>
      <description>By now I hope y&#39;all have heard the big announcement about our new Seattle datacenter. We in the dev team got wind of it a few weeks back during one of our super-exciting and ever-informative departmental meetings. The news was met with cheers and sighs. Cheers came because, hey, the first new city is a big deal. We&#39;re growing like crazy. These are some really exciting times for us. It&#39;s easy to imagine building a datacenter.</description>
    </item>
    
    <item>
      <title>Catching Up</title>
      <link>https://softlayer.github.io/blog/klaude/catching/</link>
      <pubDate>Tue, 11 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/catching/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
Where has the time gone? We&#39;ve been busy in the devCave working out some big projects and improving what we&#39;ve got. In the mean time here&#39;s some new API features for ya&#39;ll to try out:
&amp;nbsp;
Back It Up
&amp;nbsp;
You can now query the state of your NAS or lockbox accounts through the API via the getNasSummaryDetails(strNasType) method.</description>
    </item>
    
    <item>
      <title>Revenge of the bugfixes</title>
      <link>https://softlayer.github.io/blog/klaude/revenge-bugfixes/</link>
      <pubDate>Wed, 15 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/revenge-bugfixes/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
We&#39;ve updated the API again! This latest refresh sports:
 fixed: getBandwidthList()&#39;s output now mirrors the estimated and projected bandwidth amounts measured by our management portal. fixed: Hostnames and domain names in server names are now separated by a period in getBandwidthList()&#39;s output. fixed: The Savvis #2 and Global Grossing links are now properly reported in getBackboneList().</description>
    </item>
    
    <item>
      <title>Go Play in a Sandbox</title>
      <link>https://softlayer.github.io/blog/klaude/go-play-sandbox/</link>
      <pubDate>Thu, 26 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/go-play-sandbox/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
I think we on the SLDN development team have it pretty lucky. You can&#39;t beat developing at a datacenter where there are umpteen, wonderful servers to test your code on. Need to reboot a box? Sure! Go for it! After all, it&#39;s just a quick phone call to the datacenter to bring it back online if your test code broke something.</description>
    </item>
    
    <item>
      <title>More methods, this time for the bean counters.</title>
      <link>https://softlayer.github.io/blog/dharris/more-methods-time-bean-counters/</link>
      <pubDate>Mon, 16 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dharris/more-methods-time-bean-counters/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
We&#39;ve put four new methods into the API. They are:
getInvoiceList()
Return a listing for each account that includes the invoice id, date, starting balance, ending balance, invoice amount, payment amount, and account type.
getAccountBalance()
Return the current balance and next bill date for an account.
getInvoice(intInvoiceId)
Retrieve a copy of an invoice in PDF format.</description>
    </item>
    
    <item>
      <title>New API method for searching IP addresses</title>
      <link>https://softlayer.github.io/blog/jrangel/new-api-method-searching-ip-addresses/</link>
      <pubDate>Fri, 06 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/jrangel/new-api-method-searching-ip-addresses/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
We&#39;ve added a new feature to the
Softlayer API: getIPaddressDetails. For a given IP address, this method will retrieve the parent subnet, VLAN identifier, IP address which it is routed to and the name of the server it&#39;s routed to. Instead of using the customer portal and typing in a slew of IP addresses one by one into the public network ip search page, simply call this IP for each IP address, saving you time and typing.</description>
    </item>
    
    <item>
      <title>It pays to ask</title>
      <link>https://softlayer.github.io/blog/dharris/it-pays-ask/</link>
      <pubDate>Tue, 03 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dharris/it-pays-ask/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
Ask...

And you shall receive…
The newest addition to the API methods has been released and is now available for use. We have improved upon the Portal&#39;s monitoring features by adding just a little more data.(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)</description>
    </item>
    
    <item>
      <title>Time for some morning Java</title>
      <link>https://softlayer.github.io/blog/klaude/time-some-morning-java-0/</link>
      <pubDate>Thu, 28 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/time-some-morning-java-0/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
We&#39;ve put a Java SOAP example up on our downloads page. This was written in Eclipse 3.2.2, and for your convenience the example package contains our Eclipse project files. The code should run on JVM version 1.4 and above. We&#39;d love to hear your feedback on this example. Reply here or post on our forums and let us know what you think.</description>
    </item>
    
    <item>
      <title>Time for some morning Java</title>
      <link>https://softlayer.github.io/blog/klaude/time-some-morning-java/</link>
      <pubDate>Thu, 28 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/time-some-morning-java/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
We&#39;ve put a Java SOAP example up on our downloads page. This was written in Eclipse 3.2.2, and for your convenience the example package contains our Eclipse project files. The code should run on JVM version 1.4 and above. We&#39;d love to hear your feedback on this example. Reply here or post on our forums and let us know what you think.</description>
    </item>
    
    <item>
      <title>API Hacking Fun With Python</title>
      <link>https://softlayer.github.io/blog/sboles/api-hacking-fun-python/</link>
      <pubDate>Thu, 21 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/sboles/api-hacking-fun-python/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
Hello! I&#39;m Shawn, one of new &#34;Code Writing Professionals&#34; at SoftLayer. When a call went out for examples using SoftLayer&#39;s new API, I immediately signed up to write the INTERCAL, Prolog, and Apollo Guidance Computer modules. I was told to make those low priority projects, and to perhaps focus on hacking with Python instead.</description>
    </item>
    
    <item>
      <title>Let&#39;s get this party started.</title>
      <link>https://softlayer.github.io/blog/klaude/lets-get-party-started/</link>
      <pubDate>Thu, 14 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/klaude/lets-get-party-started/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
Howdy, everyone. The SoftLayer dev team has been growing a bit lately to handle new portal additions and adding fancy new methods to the API for ya&#39;ll. So far we&#39;ve gotten some great feedback on the API and how to make our application servers work better for you and your businesses. Now that we&#39;ve got the API out and some extra head count what say we kick into high gear?</description>
    </item>
    
    <item>
      <title>API Addition - Backbone Graphs</title>
      <link>https://softlayer.github.io/blog/dgeorge/api-addition-backbone-graphs/</link>
      <pubDate>Fri, 08 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dgeorge/api-addition-backbone-graphs/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
Due to popular demand, we rolled out a change today which allows querying of our backbone connection graphs. For the uninitiated, backbone graphs show the network usage between the SoftLayer datacenter and the Internet. This functionality was accomplished by adding two new methods to the SoftLayer API.
getBackboneList
Retrieves an array of id and name pairs for all SoftLayer&#39;s Backbone providers</description>
    </item>
    
    <item>
      <title>You ask, we respond</title>
      <link>https://softlayer.github.io/blog/nday/you-ask-we-respond/</link>
      <pubDate>Tue, 29 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/nday/you-ask-we-respond/</guid>
      <description>(This post refers to SoftLayer API version 1. Check out API version 3 for our latest updates.)
We have received a lot of positive feedback on the API. Thanks, we appreciate it. We stood around and patted ourselves on the back for five seconds and got back to work.The first few requests were for bandwidth graphs of our network providers and the ability to control the SoftLayer DNS resolvers for forward and reverse lookups just like in the customer portal.</description>
    </item>
    
    <item>
      <title>Forums</title>
      <link>https://softlayer.github.io/blog/nday/forums/</link>
      <pubDate>Mon, 21 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/nday/forums/</guid>
      <description>We have launched a new group of forums to provide an area where developers and SoftLayer customers can discuss topics related to the SoftLayer API and receive new features / release announcements for the API. Additionally, you can showcase your newly developed applications that utilize the SoftLayer API.
Section one “Announcements” provide information pertaining to new additions of downloadable content, official add-ons for server control panels and other related software, new features that have been added to the API, and any upgrade windows pertaining to SoftLayer API infrastructure.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://softlayer.github.io/blog/nday/introduction/</link>
      <pubDate>Mon, 21 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/nday/introduction/</guid>
      <description>Welcome to the SoftLayer Developer Network!
SoftLayer has been a leader in giving our customers control over their dedicated server environment through our customer portal. Now we are pushing the envelope and exposing that same level of functionality to our customers through an API. To help you we have created this community - The SoftLayer Developer Network.
Just think of what you could do with an API to the datacenter. You could integrate the API into your custom application, you could write a plug-in to your favorite third party app, you could integrate dedicated server command and control into your corporate intranet, or you could even create your own version of the SoftLayer portal.</description>
    </item>
    
    <item>
      <title>Quick example</title>
      <link>https://softlayer.github.io/blog/dgeorge/quick-example/</link>
      <pubDate>Mon, 21 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/dgeorge/quick-example/</guid>
      <description>We are ushering in a new era at SoftLayer with the release of the SoftLayer API.&amp;nbsp;The API opens endless possibilities for our customers to integrate SoftLayer specific functionality into their corporate infrastructure and / or software products.&amp;nbsp;With the API, you can provide datacenter specific control for your server or custom management of SoftLayer services to your customer base. For server resellers, this allows unbranded SoftLayer functionality to their customers via integration into their current customer portal.</description>
    </item>
    
    <item>
      <title>Show off your project</title>
      <link>https://softlayer.github.io/blog/nday/show-your-project/</link>
      <pubDate>Mon, 21 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/blog/nday/show-your-project/</guid>
      <description>Everyone at SoftLayer is excited about the API. But we can&#39;t wait to see what our customers are going to be doing with it. You can go to the implementations page to see some examples of ways to use the API. What we would really like to put on that page is a list of applications developed by our customers. If you create a use for the API that is new and unique, or if you just want to show the world how cool you are - send us an email at sldn@softlayer.</description>
    </item>
    
  </channel>
</rss>