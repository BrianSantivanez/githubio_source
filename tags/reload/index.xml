<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reload on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/reload/</link>
    <description>Recent content in Reload on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Apr 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/reload/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reload with SSH keys</title>
      <link>https://softlayer.github.io/ruby/reloadWithSshhardware/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reloadWithSshhardware/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) imageId = 1234567 sshKey1 = 876543 sshKey2 = 456789 serverId = 1154265 config = { &#39;imageTemplateId&#39;=&amp;gt; imageId, &#39;sshKeyIds&#39; =&amp;gt; [sshKey1, sshKey2] } setclient = client[&#39;Hardware_Server&#39;] reload = setclient.object_with_id(serverId).reloadOperatingSystem(&#39;FORCE&#39;, config) pp reload	 </description>
    </item>
    
    <item>
      <title>Reload with SSH keys</title>
      <link>https://softlayer.github.io/python/reload_hardware/</link>
      <pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reload_hardware/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): &amp;quot;&amp;quot;&amp;quot; Will reload the operating system with a new imageTemplate, along with a set of sshKeys. This will erease all data. &amp;quot;&amp;quot;&amp;quot; # Change these IDs imageId = 1234567 sshKey1 = 123 sshKey2 = 456 serverId = 102938 config = { &#39;imageTemplateId&#39;: imageId, &#39;sshKeyIds&#39;: [sshKey1, sshKey2] } output = self.client[&#39;Hardware_Server&#39;].reloadOperatingSystem(&#39;FORCE&#39;, config, id=serverId) pp(config) print &amp;quot;RESULT\n&amp;quot; pp(output) if __name__ == &amp;quot;__main__&amp;quot;: main = example() main.</description>
    </item>
    
  </channel>
</rss>