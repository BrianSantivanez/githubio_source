<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/account/index.xml</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>Get disk usage metrics for a time range</title>
      <link>https://softlayer.github.io/go/account_disk_usage_metrics/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/go/account_disk_usage_metrics/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
    &amp;quot;fmt&amp;quot;
    &amp;quot;log&amp;quot;
    &amp;quot;time&amp;quot;

    &amp;quot;github.com/softlayer/softlayer-go/services&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/session&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/sl&amp;quot;
)

func main() {
    // Create a session
    sess := session.New()

    // Account service has the method we need
    service := services.GetAccountService(sess)

    // Range: most recent 24 hours
    //
    // Time values are wrapped within an sl.Time type, to facilitate json marshaling
    tEnd := sl.Time(time.Now())
    tStart := sl.Time(tEnd.AddDate(0, 0, -1))

    data, err := service.GetDiskUsageMetricDataByDate(tStart, tEnd)
    if err != nil {
        log.Fatal(err)
    }

    fmt.Printf(&amp;quot;Number of elements returned: %d\n&amp;quot;, len(data))

    for _, d := range data {
        fmt.Printf(&amp;quot;Counter: %.f, Time: %s, Type: %s\n&amp;quot;, *d.Counter, *d.DateTime, *d.Type)
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Look up an SSH key</title>
      <link>https://softlayer.github.io/go/sshkey_lookup/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/go/sshkey_lookup/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
    &amp;quot;fmt&amp;quot;
    &amp;quot;log&amp;quot;

    &amp;quot;github.com/softlayer/softlayer-go/filter&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/services&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/session&amp;quot;
)

// The key to look up
const label = &amp;quot;Test Public Key&amp;quot;

func main() {
    sess := session.New()
    service := services.GetAccountService(sess)

    keys, err := service.
        Filter(filter.Build(
            filter.Path(&amp;quot;sshKeys.label&amp;quot;).Eq(label))).
        Mask(&amp;quot;id,label,key,fingerprint,notes&amp;quot;).
        GetSshKeys()

    if err != nil {
        log.Fatal(&amp;quot;Error retrieving SSH key: &amp;quot;, err)
    }

    if len(keys) == 0 {
        log.Fatal(&amp;quot;No ssh key found labeled &amp;quot;, label)
    }

    if len(keys) &amp;gt; 1 {
        log.Fatal(&amp;quot;More than one ssh key found labeled &amp;quot;, label)
    }

    key := keys[0]

    fmt.Printf(&amp;quot;Public Key [%s] found:\n&amp;quot;, label)

    fmt.Println(&amp;quot;\tID:&amp;quot;, *key.Id)
    fmt.Println(&amp;quot;\tFingerprint:&amp;quot;, *key.Fingerprint)
    fmt.Println(&amp;quot;\tKey:&amp;quot;, *key.Key)

    notes := &amp;quot;&amp;quot;
    if key.Notes != nil {
        notes = *key.Notes
    }

    fmt.Println(&amp;quot;\tNotes:&amp;quot;, notes)
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>