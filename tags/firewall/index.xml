<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Firewall on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/firewall/</link>
    <description>Recent content in Firewall on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Mar 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/firewall/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Backup and Restore firewall rules</title>
      <link>https://softlayer.github.io/python/manage_firewall_rules/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/manage_firewall_rules/</guid>
      <description>restoreRules here will clobber any existing rules on the firewall, so be careful with that.
 import SoftLayer from SoftLayer.CLI import firewall from pprint import pprint as pp import json from argparse import ArgumentParser class ruleSaver(): def __init__(self, path, fw): self.client = SoftLayer.Client() self.fw = SoftLayer.FirewallManager(self.client) self.path = path self.fw_type, self.fw_id = firewall.parse_id(fw) def saveRules(self): if self.fw_type == &#39;vlan&#39;: rules = self.fw.get_dedicated_fwl_rules(self.fw_id) else: rules = self.fw.get_standard_fwl_rules(self.fw_id) with open(self.path, &#39;w&#39;) as f: json.</description>
    </item>
    
    <item>
      <title>Order Firewall and Security Appliances</title>
      <link>https://softlayer.github.io/php/orderFirewalls/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/orderFirewalls/</guid>
      <description>&amp;lt;?php require_once &#39;./vendor/autoload.php&#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &#39;&#39;; $this-&amp;gt;apiKey = &#39;&#39;; } function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;quot;ID -&amp;gt; Name \n&amp;quot;; foreach($packages as $package) { print $package-&amp;gt;id . &amp;quot; -&amp;gt; &amp;quot; . $package-&amp;gt;name . &amp;quot;\n&amp;quot;; } } function getPackageById($id=0, $onlyShow=0, $showPrices=1) { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $package = $packageClient-&amp;gt;getItems(); print &amp;quot;ID, KeyName, Description \n&amp;quot;; foreach ($package as $item) { if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) { print $item-&amp;gt;id .</description>
    </item>
    
  </channel>
</rss>