<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Objectmask on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/objectmask/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Wed, 10 Aug 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Get storage credentials for Block Storage</title>
      <link>https://softlayer.github.io/php/storage_credentials/</link>
      <pubDate>Wed, 10 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/storage_credentials/</guid>
      <description>&lt;p&gt;The following script allows you retrieve the username and password for Performance/Endurance Block storage. If you have not autorized hosts against the storage then you will get some basic information about the Block storage as a result.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

/* You can use the getenv() module to pull your exported Username
and API key to keep from having to store them in your files */ 

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);
$storageid = &#39;123456&#39;;

try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Network_Storage_Iscsi&#39;, $storageid, $apiUsername, $apiKey);
  $objectMask = new \SoftLayer\Common\ObjectMask();
  $objectMask-&amp;gt;allowedHardware-&amp;gt;allowedHost-&amp;gt;credential;
  $objectMask-&amp;gt;allowedVirtualGuests-&amp;gt;allowedHost-&amp;gt;credential;
  $client-&amp;gt;setObjectMask($objectMask);

  $response = $client-&amp;gt;getObject();

  print_r($response);

 } catch(Exception $e) {
     echo &#39;Unable to get Storage credentials: &#39; . $e-&amp;gt;getMessage();
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get storage credentials for Block Storage</title>
      <link>https://softlayer.github.io/ruby/storage_creds/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/storage_creds/</guid>
      <description>&lt;p&gt;The following script allows you retrieve the username and password for Performance/Endurance Block storage if you have authorized hosts against the storage.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
network_storage_id = 1234567
client = SoftLayer::Client.new(:timeout =&amp;gt; 120)
account_service = client[&#39;SoftLayer_Network_Storage_Iscsi&#39;]
object_mask = &#39;mask[allowedHardware[allowedHost[credential]],allowedVirtualGuests[allowedHost[credential]]]&#39;
item = account_service.object_mask(object_mask).object_with_id(network_storage_id).getObject

pp item
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find Location specific pricing for a package</title>
      <link>https://softlayer.github.io/python/location_based_pricing/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/location_based_pricing/</guid>
      <description>&lt;p&gt;With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price&#34;&gt;SoftLayer_Product_Item_Price&lt;/a&gt; objects via the API. In the following example we will query for the Dallas 6 data center, and then filter our item (Local Load Balancer) and prices to include only the location-based pricing for the specific data center we&amp;rsquo;re in â€”or we can filter for the standard price if a location-based price doesn&amp;rsquo;t exist.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
import json

package_id = 194
datacenter = &#39;dal06&#39;

client = SoftLayer.Client()

location_object_filter = {
    &#39;name&#39;: {&#39;operation&#39;: datacenter}
}

location_object_mask = &amp;quot;priceGroups&amp;quot;

location = client[&amp;quot;SoftLayer_Location_Datacenter&amp;quot;].getDatacenters(filter=location_object_filter, mask=location_object_mask)

if len(location) == 0:
    # error handling
    exit()

# lookup location group ids
location_group_ids = []
for location_group in location[0][&amp;quot;priceGroups&amp;quot;]:
    location_group_ids.append(location_group[&amp;quot;id&amp;quot;])

object_filter_standard = {
    &#39;items&#39;: {
        &amp;quot;prices&amp;quot;: {
            &amp;quot;locationGroupId&amp;quot;: {
                &amp;quot;operation&amp;quot;: &amp;quot;is null&amp;quot;
            }
        }
    }
}

standard_items = client[&amp;quot;SoftLayer_Product_Package&amp;quot;].getItems(id=package_id, filter=object_filter_standard)

object_filter_location = {
    &#39;items&#39;: {
        &amp;quot;prices&amp;quot;: {
            &amp;quot;locationGroupId&amp;quot;: {
                &amp;quot;operation&amp;quot;: &amp;quot;in&amp;quot;,
                &amp;quot;options&amp;quot;: [
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;data&amp;quot;,
                        &amp;quot;value&amp;quot;: location_group_ids
                    }
                ]
            }
        }
    }
}

location_items = client[&amp;quot;SoftLayer_Product_Package&amp;quot;].getItems(id=package_id, filter=object_filter_location)

# let&#39;s key by item id
items = {}

for standard_item in standard_items:
    for location_item in location_items:
        if location_item[&amp;quot;id&amp;quot;] == standard_item[&amp;quot;id&amp;quot;]:
            items[location_item[&amp;quot;id&amp;quot;]] = location_item
            break

    if standard_item[&amp;quot;id&amp;quot;] not in items:
        items[standard_item[&amp;quot;id&amp;quot;]] = standard_item


print(json.dumps(items, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get tickets using an objectFilter</title>
      <link>https://softlayer.github.io/python/ticket_filter/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/ticket_filter/</guid>
      <description>&lt;pre&gt;&lt;code&gt;import SoftLayer
from pprint import pprint as pp
import logging

class example():

    def __init__(self):

        self.client = SoftLayer.Client()

    def main(self):

        # logger = logging.getLogger()
        # logger.addHandler(logging.StreamHandler())
        # logger.setLevel(3)
        theDate = &amp;quot;02/25/2016 01:00:00&amp;quot;
        endDate = &amp;quot;02/29/2016 01:00:00&amp;quot;

        mask = &amp;quot;mask[updates,group[name]]&amp;quot;


        theFilter1 = {
            &#39;tickets&#39;: {
                &#39;createDate&#39;: {
                    &#39;operation&#39;: &#39;betweenDate&#39;,
                    &#39;options&#39;: [
                        {&#39;name&#39;: &#39;startDate&#39;, &#39;value&#39;: [theDate]},
                        {&#39;name&#39;: &#39;endDate&#39;, &#39;value&#39;: [endDate]}
                    ]
                }
            }
        }

        theFilter2 = {
            &#39;tickets&#39;: {
                &#39;createDate&#39;: {
                    &#39;operation&#39;: &#39;greaterThanDate&#39;,
                    &#39;options&#39;: [
                        {&#39;name&#39;: &#39;date&#39;, &#39;value&#39;: [theDate]}
                    ]
                },
                &#39;group&#39; : {
                    &#39;name&#39;: {
                        &#39;operation&#39;: &#39;Cancellations&#39;
                    }
                    
                }
            }
        }

        result = self.client[&#39;SoftLayer_Account&#39;].getTickets(filter=theFilter2, mask=mask)
        for ticket in result:
            print(&amp;quot;===============&amp;quot;)
            print(&amp;quot;%s - %s (%s)&amp;quot; % (ticket[&#39;createDate&#39;], ticket[&#39;title&#39;], ticket[&#39;group&#39;][&#39;name&#39;]))
            for update in ticket[&#39;updates&#39;]:
                print(&amp;quot;===============%s=============== &amp;quot; % (update[&#39;createDate&#39;]))
                print(&amp;quot;%s&amp;quot; % update[&#39;entry&#39;])
                print(&amp;quot;===============&amp;quot;)

        # pp(result)

if __name__ == &amp;quot;__main__&amp;quot;:
    main = example()
    main.main()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Cancel an item or service</title>
      <link>https://softlayer.github.io/python/cancel_service/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/cancel_service/</guid>
      <description>&lt;p&gt;In the following example we are retrieving the Billing Item of a Virtual Guest with the ID of 12345678 and passing that ID to &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelService&#34;&gt;cancelService&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
from pprint import pprint as pp

client = SoftLayer.Client()
mask = &amp;quot;mask[id]&amp;quot;
billingId = client[&#39;SoftLayer_Virtual_Guest&#39;].getBillingItem(mask=mask,id=12345678)
cancelItem = client[&#39;SoftLayer_Billing_Item&#39;].cancelService(id = billingId[&#39;id&#39;])

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>https://softlayer.github.io/python/getbillingitem/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/getbillingitem/</guid>
      <description>&lt;p&gt;In the following example we are looking for the Billing Item of an Virtual Guest with an ID of 1234567.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
from pprint import pprint as pp

client = SoftLayer.Client()
mask = &amp;quot;mask[id]&amp;quot;
billingId = client[&#39;SoftLayer_Virtual_Guest&#39;].getBillingItem(mask=mask,id=1234567)
pp(billingId)

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Month-to-date cost of a Virtual_Guest</title>
      <link>https://softlayer.github.io/python/monthtodate/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/monthtodate/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
from pprint import pprint as pp

client = SoftLayer.Client()
mask = &amp;quot;mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]&amp;quot;
toDateCost = client[&#39;SoftLayer_Virtual_Guest&#39;].getBillingItem(mask=mask,id=1234567)
pp(toDateCost)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;
{&#39;createDate&#39;: &#39;2016-02-05T14:07:37-06:00&#39;,
  &#39;currentHourlyCharge&#39;: &#39;.023&#39;,
  &#39;hourlyRecurringFee&#39;: &#39;.023&#39;,
  &#39;hoursUsed&#39;: &#39;1&#39;}

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Calculating month-to-date cost of a Virtual_Guest</title>
      <link>https://softlayer.github.io/ruby/monthtodate/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/monthtodate/</guid>
      <description>

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39; # Requires softlayer_api &amp;gt;= 3.2
require &#39;pp&#39; # used to display results

# Create a client
client = SoftLayer::Client.new

# add your server id, can be found with the following script: https://softlayer.github.io/ruby/list_instances/
virtual_server_id = 12345678
item = client[:Virtual_Guest].object_mask(&amp;quot;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;quot;).object_with_id(virtual_server_id).getObject
puts &amp;quot;Billing Item for Virtual Server:&amp;quot;
pp item[&#39;billingItem&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;example-output:a8ec6ac9c09d88a94b1b5bf10393284e&#34;&gt;Example Output&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Billing Item for Virtual Server:
{&amp;quot;createDate&amp;quot;=&amp;gt;&amp;quot;2016-01-29T12:23:43-06:00&amp;quot;,
 &amp;quot;currentHourlyCharge&amp;quot;=&amp;gt;&amp;quot;.023&amp;quot;,
 &amp;quot;hourlyRecurringFee&amp;quot;=&amp;gt;&amp;quot;.023&amp;quot;,
 &amp;quot;hoursUsed&amp;quot;=&amp;gt;&amp;quot;1&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>https://softlayer.github.io/ruby/billingfromproduct/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/billingfromproduct/</guid>
      <description>&lt;p&gt;In the following example we are looking for the Billing Item of an Endurance Storage volume with an ID of 1234567.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# add your network storage id, it can be found by doing this call: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNasNetworkStorage
network_storage_id = 1234567
#
item = client[:Network_Storage].object_mask(&amp;quot;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;quot;).object_with_id(network_storage_id).getObject
pp item[&#39;billingItem&#39;]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Month-to-date cost of a Virtual_Guest</title>
      <link>https://softlayer.github.io/php/monthtodate/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/monthtodate/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = &#39;&#39;;
$apiKey = &#39;&#39;;
$guest = &#39;1234567&#39;; # Put your VSI ID here

$client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Virtual_Guest&#39;, $guest, $apiUsername, $apiKey);
$objectMask = new \SoftLayer\Common\ObjectMask();
$objectMask-&amp;gt;createDate;
$objectMask-&amp;gt;hoursUsed;
$objectMask-&amp;gt;hourlyRecurringFee;
$objectMask-&amp;gt;currentHourlyCharge;

$client-&amp;gt;setObjectMask($objectMask);
$response = $client-&amp;gt;getBillingItem();
print_r($response)
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Retrieve the month to date cost of an hourly VSI</title>
      <link>https://softlayer.github.io/perl/monthtodatecost/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/perl/monthtodatecost/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;#!/usr/bin/perl
use lib &amp;quot;/path/to/softlayer-api-perl-client/&amp;quot;;
use SoftLayer::API::SOAP;
use Data::Dumper;

my $api_username = &amp;quot;x&amp;quot;;
my $api_key = &amp;quot;a&amp;quot;;
my $client = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Account&#39;, undef, $api_username, $api_key);

# SoftLayer_Virtual_Guest/&amp;lt;VSI_ID&amp;gt;/getBillingItem?objectMask=mask\[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge\]&amp;quot;
# CHANGE ME to the id of the virtual guest you want to check
my $virtual_guest_id = 12345678;
my $virtual_guest = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Virtual_Guest&#39;, $virtual_guest_id, $api_username, $api_key);
my $objectMask = {
    &#39;createDate&#39; =&amp;gt; &#39;&#39;,
    &#39;hoursUsed&#39; =&amp;gt; &#39;&#39;,
    &#39;hourlyRecurringFee&#39; =&amp;gt; &#39;&#39;,
    &#39;currentHourlyCharge&#39; =&amp;gt; &#39;&#39;
};

$result = $virtual_guest-&amp;gt;getBillingItem();
my $cost;
$cost = $result-&amp;gt;result-&amp;gt;{&#39;hoursUsed&#39;} * $result-&amp;gt;result-&amp;gt;{&#39;hourlyRecurringFee&#39;};
print $result-&amp;gt;result-&amp;gt;{&#39;hoursUsed&#39;} . &amp;quot; hours @ &amp;quot; . $result-&amp;gt;result-&amp;gt;{&#39;hourlyRecurringFee&#39;} . &amp;quot;\$/hour = &amp;quot; . $cost . &amp;quot; \$\n&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1 hours @ .045$/hour = 0.045 $
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Month-to-date cost of a Virtual_Guest</title>
      <link>https://softlayer.github.io/rest/hourlycost_date/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/hourlycost_date/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBillingItem&#34;&gt;&lt;code&gt;SoftLayer_Virtual_Guest::getBillingItem()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Virtual_Guest/&lt;virtual_guest_id&gt;/getBillingItem?objectMask=mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/&amp;lt;virtual_guest_id&amp;gt;/getBillingItem?objectMask=mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;createDate&amp;quot;: &amp;quot;2015-12-30T09:26:32-06:00&amp;quot;,
    &amp;quot;currentHourlyCharge&amp;quot;: &amp;quot;.18&amp;quot;,
    &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;.09&amp;quot;,
    &amp;quot;hoursUsed&amp;quot;: &amp;quot;2&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Determining SoftLayer Device Owners</title>
      <link>https://softlayer.github.io/ruby/determining_device_owners/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/determining_device_owners/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;vine&#39;
require &#39;pp&#39;

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
client = SoftLayer::Client.new

billing = client[&#39;Account&#39;]

object_mask = &#39;mask[fullyQualifiedDomainName,billingItem[categoryCode,description,createDate,orderItem[order[userRecord[username]]]]]&#39;

hardware_list = billing.object_mask(object_mask).getHardware
virtual_guest_list = billing.object_mask(object_mask).getVirtualGuests

def describe(item)
  domain_name = item.access(&#39;fullyQualifiedDomainName&#39;) || &#39;no fullyQualifiedDomainName&#39;
  category_code = item.access(&#39;billingItem.categoryCode&#39;) || &#39;no categoryCode&#39;
  description = item.access(&#39;billingItem.description&#39;) || &#39;no description&#39;
  create_date = item.access(&#39;billingItem.createDate&#39;) || &#39;no createDate&#39;
  user_name = item.access(&#39;billingItem.orderItem.order.userRecord.username&#39;) || &#39;no username&#39;

  return &amp;quot;&#39;#{domain_name}&#39;, category code: &#39;#{category_code}&#39;, &amp;quot;\
         &amp;quot;description: &#39;#{description}&#39;, was created by: &#39;#{user_name}&#39; &amp;quot;\
         &amp;quot;on &#39;#{create_date}&#39;&amp;quot;
end

for item in hardware_list do
  puts &amp;quot;Hardware &amp;quot; + describe(item)
end

for item in virtual_guest_list do
  puts &amp;quot;Virtual Guest &amp;quot; + describe(item)
end

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get Hardware hostnames</title>
      <link>https://softlayer.github.io/rest/get_hardware_hostname/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/get_hardware_hostname/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account/getObject&#34;&gt;&lt;code&gt;SoftLayer_Account::getObject()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Account/getObject?objectMask=mask[companyName,hardware[hostname]]&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -u username:api_key &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Account/getObject?objectMask=mask[companyName,hardware[hostname]]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;companyName&amp;quot;: &amp;quot;SoftLayer Internal - Development Community&amp;quot;,
    &amp;quot;hardware&amp;quot;: [
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;bsdal5167180245106688&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;db-server&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;db-server&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;deleteme&amp;quot;
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get hostnames</title>
      <link>https://softlayer.github.io/rest/get_hostnames/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/get_hostnames/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account/getObject&#34;&gt;&lt;code&gt;SoftLayer_Account::getObject()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Account/getObject?objectMask=mask[hardware.hostname,hourlyVirtualGuests[hostname,domain]]&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -u username:api_key &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Account/getObject?objectMask=mask[hardware.hostname,hourlyVirtualGuests[hostname,domain]]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;accountManagedResourcesFlag&amp;quot;: false,
    &amp;quot;accountStatusId&amp;quot;: 1001,
    &amp;quot;address1&amp;quot;: &amp;quot;4849 Alpha Rd&amp;quot;,
    &amp;quot;allowedPptpVpnQuantity&amp;quot;: 1,
    &amp;quot;brandId&amp;quot;: 2,
    &amp;quot;city&amp;quot;: &amp;quot;Dallas&amp;quot;,
    &amp;quot;claimedTaxExemptTxFlag&amp;quot;: false,
    &amp;quot;companyName&amp;quot;: &amp;quot;SoftLayer Internal - Development Community&amp;quot;,
    &amp;quot;country&amp;quot;: &amp;quot;US&amp;quot;,
    &amp;quot;createDate&amp;quot;: &amp;quot;2014-02-04T10:33:56-06:00&amp;quot;,
    &amp;quot;email&amp;quot;: &amp;quot;asd@softlayer.com&amp;quot;,
    &amp;quot;firstName&amp;quot;: &amp;quot;Phil&amp;quot;,
    &amp;quot;hardware&amp;quot;: [
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;bsdal5167180245106688&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;db-server&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;db-server&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;deleteme&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;pjacksontestorder&amp;quot;
        }
    ],
    &amp;quot;hourlyVirtualGuests&amp;quot;: [
        {
            &amp;quot;domain&amp;quot;: &amp;quot;lablayer.info&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;api-lab&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;sec.ibm.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;dal09-tst-eos-01a&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;example.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;host1&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;test.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;hostnametest-44ea&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;test.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;hostnametest-6f6a&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;test.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;hostnametest-709f&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;test.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;hostnametest-7c92&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;oeg.dal.slcommunity.org&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;oeg-es1&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;oeg.dal.slcommunity.org&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;oeg-es2&amp;quot;
        }
    ],
    &amp;quot;id&amp;quot;: 307608,
    &amp;quot;isReseller&amp;quot;: 0,
    &amp;quot;lastName&amp;quot;: &amp;quot;Asd&amp;quot;,
    &amp;quot;lateFeeProtectionFlag&amp;quot;: true,
    &amp;quot;modifyDate&amp;quot;: &amp;quot;2014-02-04T10:34:18-06:00&amp;quot;,
    &amp;quot;officePhone&amp;quot;: &amp;quot;281.714.1234&amp;quot;,
    &amp;quot;postalCode&amp;quot;: &amp;quot;75244-4608&amp;quot;,
    &amp;quot;state&amp;quot;: &amp;quot;TX&amp;quot;,
    &amp;quot;statusDate&amp;quot;: null
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>