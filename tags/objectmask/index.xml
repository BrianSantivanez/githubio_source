<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Objectmask on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/objectmask/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Fri, 09 Oct 2015 00:00:00 UTC</updated>
    
    <item>
      <title>Determining SoftLayer Device Owners</title>
      <link>https://softlayer.github.io/ruby/determining_device_owners/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/determining_device_owners/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;vine&#39;
require &#39;pp&#39;

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
client = SoftLayer::Client.new

billing = client[&#39;Account&#39;]

object_mask = &#39;mask[fullyQualifiedDomainName,billingItem[categoryCode,description,createDate,orderItem[order[userRecord[username]]]]]&#39;

hardware_list = billing.object_mask(object_mask).getHardware
virtual_guest_list = billing.object_mask(object_mask).getVirtualGuests

def describe(item)
  domain_name = item.access(&#39;fullyQualifiedDomainName&#39;) || &#39;no fullyQualifiedDomainName&#39;
  category_code = item.access(&#39;billingItem.categoryCode&#39;) || &#39;no categoryCode&#39;
  description = item.access(&#39;billingItem.description&#39;) || &#39;no description&#39;
  create_date = item.access(&#39;billingItem.createDate&#39;) || &#39;no createDate&#39;
  user_name = item.access(&#39;billingItem.orderItem.order.userRecord.username&#39;) || &#39;no username&#39;

  return &amp;quot;&#39;#{domain_name}&#39;, category code: &#39;#{category_code}&#39;, &amp;quot;\
         &amp;quot;description: &#39;#{description}&#39;, was created by: &#39;#{user_name}&#39; &amp;quot;\
         &amp;quot;on &#39;#{create_date}&#39;&amp;quot;
end

for item in hardware_list do
  puts &amp;quot;Hardware &amp;quot; + describe(item)
end

for item in virtual_guest_list do
  puts &amp;quot;Virtual Guest &amp;quot; + describe(item)
end

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get Hardware hostnames</title>
      <link>https://softlayer.github.io/rest/get_hardware_hostname/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/get_hardware_hostname/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account/getObject&#34;&gt;&lt;code&gt;SoftLayer_Account::getObject()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Account/getObject?objectMask=mask[companyName,hardware[hostname]]&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -u username:api_key &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Account/getObject?objectMask=mask[companyName,hardware[hostname]]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;companyName&amp;quot;: &amp;quot;SoftLayer Internal - Development Community&amp;quot;,
    &amp;quot;hardware&amp;quot;: [
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;bsdal5167180245106688&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;db-server&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;db-server&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;deleteme&amp;quot;
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get hostnames</title>
      <link>https://softlayer.github.io/rest/get_hostnames/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/get_hostnames/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account/getObject&#34;&gt;&lt;code&gt;SoftLayer_Account::getObject()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Account/getObject?objectMask=mask[hardware.hostname,hourlyVirtualGuests[hostname,domain]]&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -u username:api_key &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Account/getObject?objectMask=mask[hardware.hostname,hourlyVirtualGuests[hostname,domain]]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;accountManagedResourcesFlag&amp;quot;: false,
    &amp;quot;accountStatusId&amp;quot;: 1001,
    &amp;quot;address1&amp;quot;: &amp;quot;4849 Alpha Rd&amp;quot;,
    &amp;quot;allowedPptpVpnQuantity&amp;quot;: 1,
    &amp;quot;brandId&amp;quot;: 2,
    &amp;quot;city&amp;quot;: &amp;quot;Dallas&amp;quot;,
    &amp;quot;claimedTaxExemptTxFlag&amp;quot;: false,
    &amp;quot;companyName&amp;quot;: &amp;quot;SoftLayer Internal - Development Community&amp;quot;,
    &amp;quot;country&amp;quot;: &amp;quot;US&amp;quot;,
    &amp;quot;createDate&amp;quot;: &amp;quot;2014-02-04T10:33:56-06:00&amp;quot;,
    &amp;quot;email&amp;quot;: &amp;quot;asd@softlayer.com&amp;quot;,
    &amp;quot;firstName&amp;quot;: &amp;quot;Phil&amp;quot;,
    &amp;quot;hardware&amp;quot;: [
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;bsdal5167180245106688&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;db-server&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;db-server&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;deleteme&amp;quot;
        },
        {
            &amp;quot;hostname&amp;quot;: &amp;quot;pjacksontestorder&amp;quot;
        }
    ],
    &amp;quot;hourlyVirtualGuests&amp;quot;: [
        {
            &amp;quot;domain&amp;quot;: &amp;quot;lablayer.info&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;api-lab&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;sec.ibm.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;dal09-tst-eos-01a&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;example.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;host1&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;test.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;hostnametest-44ea&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;test.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;hostnametest-6f6a&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;test.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;hostnametest-709f&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;test.com&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;hostnametest-7c92&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;oeg.dal.slcommunity.org&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;oeg-es1&amp;quot;
        },
        {
            &amp;quot;domain&amp;quot;: &amp;quot;oeg.dal.slcommunity.org&amp;quot;,
            &amp;quot;hostname&amp;quot;: &amp;quot;oeg-es2&amp;quot;
        }
    ],
    &amp;quot;id&amp;quot;: 307608,
    &amp;quot;isReseller&amp;quot;: 0,
    &amp;quot;lastName&amp;quot;: &amp;quot;Asd&amp;quot;,
    &amp;quot;lateFeeProtectionFlag&amp;quot;: true,
    &amp;quot;modifyDate&amp;quot;: &amp;quot;2014-02-04T10:34:18-06:00&amp;quot;,
    &amp;quot;officePhone&amp;quot;: &amp;quot;281.714.1234&amp;quot;,
    &amp;quot;postalCode&amp;quot;: &amp;quot;75244-4608&amp;quot;,
    &amp;quot;state&amp;quot;: &amp;quot;TX&amp;quot;,
    &amp;quot;statusDate&amp;quot;: null
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>GetHardware with network components</title>
      <link>https://softlayer.github.io/rest/get_hardware_components/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/get_hardware_components/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware&#34;&gt;&lt;code&gt;SoftLayer_Account::getHardware()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Account/getHardware&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Parameters &lt;code&gt;objectMask=mask[id,fullyQualifiedDomainName,networkComponents[name,networkHardware[hostname],uplinkComponent[name,status]]]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -u username:api_key -G --data &amp;quot;objectMask=mask[id,fullyQualifiedDomainName,networkComponents[name,networkHardware[hostname],uplinkComponent[name,status]]]&amp;quot;  &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Account/getHardware&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
    {
        &amp;quot;fullyQualifiedDomainName&amp;quot;: &amp;quot;bsdal5167180245106688.bsd.citrix.dc&amp;quot;,
        &amp;quot;id&amp;quot;: 115628,
        &amp;quot;networkComponents&amp;quot;: [
            {
                &amp;quot;name&amp;quot;: &amp;quot;mgmt&amp;quot;,
                &amp;quot;networkHardware&amp;quot;: [
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bms173.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcs173b.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bas08b.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcr03b.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcr03a.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcs173a.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bas08a.sr03.dal05&amp;quot;
                    }
                ],
                &amp;quot;uplinkComponent&amp;quot;: {
                    &amp;quot;name&amp;quot;: &amp;quot;Ethernet1&amp;quot;,
                    &amp;quot;status&amp;quot;: &amp;quot;ACTIVE&amp;quot;
                }
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;eth&amp;quot;,
                &amp;quot;networkHardware&amp;quot;: [
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcs173a.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bas08a.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcr03b.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcr03a.dal05&amp;quot;
                    }
                ],
                &amp;quot;uplinkComponent&amp;quot;: {
                    &amp;quot;name&amp;quot;: &amp;quot;GigabitEthernet1/0&amp;quot;,
                    &amp;quot;status&amp;quot;: &amp;quot;ACTIVE&amp;quot;
                }
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;eth&amp;quot;,
                &amp;quot;networkHardware&amp;quot;: [
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;fcs173a.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;fas08a.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;fcr03a.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;fcr03b.dal05&amp;quot;
                    }
                ],
                &amp;quot;uplinkComponent&amp;quot;: {
                    &amp;quot;name&amp;quot;: &amp;quot;GigabitEthernet1/0&amp;quot;,
                    &amp;quot;status&amp;quot;: &amp;quot;ACTIVE&amp;quot;
                }
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;eth&amp;quot;,
                &amp;quot;networkHardware&amp;quot;: [
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcs173b.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bas08b.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcr03b.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;bcr03a.dal05&amp;quot;
                    }
                ],
                &amp;quot;uplinkComponent&amp;quot;: {
                    &amp;quot;name&amp;quot;: &amp;quot;GigabitEthernet2/0&amp;quot;,
                    &amp;quot;status&amp;quot;: &amp;quot;DISABLED&amp;quot;
                }
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;eth&amp;quot;,
                &amp;quot;networkHardware&amp;quot;: [
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;fcs173b.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;fas08b.sr03.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;fcr03a.dal05&amp;quot;
                    },
                    {
                        &amp;quot;hostname&amp;quot;: &amp;quot;fcr03b.dal05&amp;quot;
                    }
                ],
                &amp;quot;uplinkComponent&amp;quot;: {
                    &amp;quot;name&amp;quot;: &amp;quot;GigabitEthernet2/0&amp;quot;,
                    &amp;quot;status&amp;quot;: &amp;quot;DISABLED&amp;quot;
                }
            }
        ]
    }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ordering with placeOrder</title>
      <link>https://softlayer.github.io/rest/place_order/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/place_order/</guid>
      <description>

&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/&#34;&gt;&lt;code&gt;SoftLayer_Product_Order::placeOrder()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Product_Order/verifyOrder`&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -u userid:api_key -X POST --data @create.json 
https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/verifyOrder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Input JSON:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;parameters&amp;quot; : [
        {
            &amp;quot;packageId&amp;quot; : 126,
            &amp;quot;location&amp;quot; :449494,
            &amp;quot;quantity&amp;quot; : 1,
            &amp;quot;hardware&amp;quot;: [{
                &amp;quot;hostname&amp;quot;: &amp;quot;TEST&amp;quot;,
                &amp;quot;domain&amp;quot;: &amp;quot;test1&amp;quot;
            }],
            &amp;quot;prices&amp;quot;: [
                {&amp;quot;id&amp;quot;: 13739},
                {&amp;quot;id&amp;quot;: 13748},
                {&amp;quot;id&amp;quot;: 1267},
                {&amp;quot;id&amp;quot;: 342},
                {&amp;quot;id&amp;quot;: 21141},
                {&amp;quot;id&amp;quot;: 58},
                {&amp;quot;id&amp;quot;: 876},
                {&amp;quot;id&amp;quot;: 57},
                {&amp;quot;id&amp;quot;: 55},
                {&amp;quot;id&amp;quot;: 21},
                {&amp;quot;id&amp;quot;: 906},
                {&amp;quot;id&amp;quot;: 420},
                {&amp;quot;id&amp;quot;: 418},
                {&amp;quot;id&amp;quot;: 37620}
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;the-price-ids-explained:7de9bdc6547136ff8b5f9c219df2c891&#34;&gt;The Price Ids Explained&lt;/h4&gt;

&lt;p&gt;Use &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices&#34;&gt;getItemPrices&lt;/a&gt; to find the IDs and Items you need&lt;/p&gt;

&lt;hr /&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Single Processor Quad Core Xeon 1270 - 3.40GHz (Sandy Bridge) - 1 x 8MB cache w/HT&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 13739},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;32 GB DDR3 1333&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 13748},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;1TB sataII&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 1267},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2000 GB Bandwidth&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 342},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;1 Gbps Dual public uplink&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 21141},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;automated notification response&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 58},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Non-Raid Disk Controller&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 876},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;email and ticket notification&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 57},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;host ping monitoring&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 55},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;single primary ip&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 21},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;remote managements&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 906},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;vpn management&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 420},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;vulnerability&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 418},&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ubuntu 14.04 64bit&lt;/td&gt;
&lt;td&gt;{&amp;lsquo;id&amp;rsquo;: 37620}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;bigDataOrderFlag&amp;quot;: false,
    &amp;quot;billingOrderItemId&amp;quot;: null,
    &amp;quot;containerSplHash&amp;quot;: &amp;quot;000000004f26de1000007f7b4154b39b&amp;quot;,
    &amp;quot;currencyShortName&amp;quot;: &amp;quot;USD&amp;quot;,
    &amp;quot;extendedHardwareTesting&amp;quot;: null,
    &amp;quot;hardware&amp;quot;: [
        {
            &amp;quot;accountId&amp;quot;: null,
            &amp;quot;bareMetalInstanceFlag&amp;quot;: null,
            &amp;quot;domain&amp;quot;: &amp;quot;test1&amp;quot;,
            &amp;quot;hardwareStatusId&amp;quot;: null,
            &amp;quot;hostname&amp;quot;: &amp;quot;TEST&amp;quot;,
            &amp;quot;primaryBackendNetworkComponent&amp;quot;: {
                &amp;quot;networkVlanId&amp;quot;: null
            },
            &amp;quot;primaryNetworkComponent&amp;quot;: {
                &amp;quot;networkVlanId&amp;quot;: null
            }
        }
    ],
    &amp;quot;imageTemplateId&amp;quot;: null,
    &amp;quot;isManagedOrder&amp;quot;: 0,
    &amp;quot;location&amp;quot;: &amp;quot;449494&amp;quot;,
    &amp;quot;locationObject&amp;quot;: {
        &amp;quot;id&amp;quot;: 449494,
        &amp;quot;longName&amp;quot;: &amp;quot;Dallas 9&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;dal09&amp;quot;
    },
    &amp;quot;message&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;monitoringAgentConfigurationTemplateGroupId&amp;quot;: null,
    &amp;quot;packageId&amp;quot;: 126,
    &amp;quot;paymentType&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;postTaxRecurring&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;postTaxRecurringHourly&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;postTaxRecurringMonthly&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;postTaxSetup&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;preTaxRecurring&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;preTaxRecurringHourly&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;preTaxRecurringMonthly&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;preTaxSetup&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;presetId&amp;quot;: null,
    &amp;quot;prices&amp;quot;: [
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;server&amp;quot;,
                    &amp;quot;id&amp;quot;: 1,
                    &amp;quot;name&amp;quot;: &amp;quot;Server&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 13739,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;capacity&amp;quot;: &amp;quot;3.4&amp;quot;,
                &amp;quot;description&amp;quot;: &amp;quot;Single Intel Xeon E3-1270 (4 Cores, 3.40 GHz)&amp;quot;,
                &amp;quot;id&amp;quot;: 3796,
                &amp;quot;keyName&amp;quot;: &amp;quot;INTEL_SINGLE_XEON_1270_3_40_2&amp;quot;,
                &amp;quot;units&amp;quot;: &amp;quot;GHz&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 3796,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;ram&amp;quot;,
                    &amp;quot;id&amp;quot;: 3,
                    &amp;quot;name&amp;quot;: &amp;quot;RAM&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 13748,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;capacity&amp;quot;: &amp;quot;32&amp;quot;,
                &amp;quot;description&amp;quot;: &amp;quot;32 GB DDR3 1333&amp;quot;,
                &amp;quot;id&amp;quot;: 3805,
                &amp;quot;keyName&amp;quot;: &amp;quot;RAM_32_GB_DDR3_1333_NON_REG&amp;quot;,
                &amp;quot;units&amp;quot;: &amp;quot;GB&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 3805,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;disk0&amp;quot;,
                    &amp;quot;id&amp;quot;: 4,
                    &amp;quot;name&amp;quot;: &amp;quot;First Hard Drive&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 1267,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;capacity&amp;quot;: &amp;quot;500&amp;quot;,
                &amp;quot;description&amp;quot;: &amp;quot;500 GB SATA &amp;quot;,
                &amp;quot;id&amp;quot;: 14,
                &amp;quot;keyName&amp;quot;: &amp;quot;HARD_DRIVE_500GB_SATA_II&amp;quot;,
                &amp;quot;units&amp;quot;: &amp;quot;GB&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 14,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;bandwidth&amp;quot;,
                    &amp;quot;id&amp;quot;: 10,
                    &amp;quot;name&amp;quot;: &amp;quot;Public Bandwidth&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 342,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;capacity&amp;quot;: &amp;quot;20000&amp;quot;,
                &amp;quot;description&amp;quot;: &amp;quot;20000 GB Bandwidth&amp;quot;,
                &amp;quot;id&amp;quot;: 249,
                &amp;quot;keyName&amp;quot;: &amp;quot;BANDWIDTH_20000_GB&amp;quot;,
                &amp;quot;units&amp;quot;: &amp;quot;GB&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 249,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;port_speed&amp;quot;,
                    &amp;quot;id&amp;quot;: 26,
                    &amp;quot;name&amp;quot;: &amp;quot;Uplink Port Speeds&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 21141,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [
                    {
                        &amp;quot;bundleItem&amp;quot;: {
                            &amp;quot;capacity&amp;quot;: &amp;quot;1000&amp;quot;,
                            &amp;quot;description&amp;quot;: &amp;quot;1 Gbps Dual Public &amp;amp; Private Network Uplinks (Unbonded)&amp;quot;,
                            &amp;quot;id&amp;quot;: 4263,
                            &amp;quot;keyName&amp;quot;: &amp;quot;1_GBPS_DUAL_PUBLIC_PRIVATE_NETWORK_UPLINKS_UNBONDED&amp;quot;,
                            &amp;quot;units&amp;quot;: &amp;quot;Mbps&amp;quot;
                        },
                        &amp;quot;bundleItemId&amp;quot;: 4263,
                        &amp;quot;category&amp;quot;: {
                            &amp;quot;categoryCode&amp;quot;: &amp;quot;service_port&amp;quot;,
                            &amp;quot;id&amp;quot;: 9,
                            &amp;quot;name&amp;quot;: &amp;quot;Private Network Port&amp;quot;
                        },
                        &amp;quot;id&amp;quot;: 5544,
                        &amp;quot;itemPrice&amp;quot;: {
                            &amp;quot;id&amp;quot;: 22235,
                            &amp;quot;itemId&amp;quot;: 4399,
                            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
                            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
                            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
                            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
                        },
                        &amp;quot;itemPriceId&amp;quot;: 22235
                    },
                    {
                        &amp;quot;bundleItem&amp;quot;: {
                            &amp;quot;capacity&amp;quot;: &amp;quot;1000&amp;quot;,
                            &amp;quot;description&amp;quot;: &amp;quot;1 Gbps Dual Public &amp;amp; Private Network Uplinks (Unbonded)&amp;quot;,
                            &amp;quot;id&amp;quot;: 4263,
                            &amp;quot;keyName&amp;quot;: &amp;quot;1_GBPS_DUAL_PUBLIC_PRIVATE_NETWORK_UPLINKS_UNBONDED&amp;quot;,
                            &amp;quot;units&amp;quot;: &amp;quot;Mbps&amp;quot;
                        },
                        &amp;quot;bundleItemId&amp;quot;: 4263,
                        &amp;quot;category&amp;quot;: {
                            &amp;quot;categoryCode&amp;quot;: &amp;quot;public_port&amp;quot;,
                            &amp;quot;id&amp;quot;: 8,
                            &amp;quot;name&amp;quot;: &amp;quot;Public Network Port&amp;quot;
                        },
                        &amp;quot;id&amp;quot;: 6400,
                        &amp;quot;itemPrice&amp;quot;: {
                            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
                            &amp;quot;id&amp;quot;: 22233,
                            &amp;quot;itemId&amp;quot;: 4400,
                            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
                            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
                            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
                            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
                        },
                        &amp;quot;itemPriceId&amp;quot;: 22233
                    }
                ],
                &amp;quot;capacity&amp;quot;: &amp;quot;1000&amp;quot;,
                &amp;quot;description&amp;quot;: &amp;quot;1 Gbps Dual Public &amp;amp; Private Network Uplinks (Unbonded)&amp;quot;,
                &amp;quot;id&amp;quot;: 4263,
                &amp;quot;keyName&amp;quot;: &amp;quot;1_GBPS_DUAL_PUBLIC_PRIVATE_NETWORK_UPLINKS_UNBONDED&amp;quot;,
                &amp;quot;units&amp;quot;: &amp;quot;Mbps&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 4263,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;response&amp;quot;,
                    &amp;quot;id&amp;quot;: 22,
                    &amp;quot;name&amp;quot;: &amp;quot;Response&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 58,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;description&amp;quot;: &amp;quot;Automated Notification&amp;quot;,
                &amp;quot;id&amp;quot;: 52,
                &amp;quot;keyName&amp;quot;: &amp;quot;AUTOMATED_NOTIFICATION&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 52,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;disk_controller&amp;quot;,
                    &amp;quot;id&amp;quot;: 11,
                    &amp;quot;name&amp;quot;: &amp;quot;Disk Controller&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 876,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;description&amp;quot;: &amp;quot;Non-RAID&amp;quot;,
                &amp;quot;id&amp;quot;: 487,
                &amp;quot;keyName&amp;quot;: &amp;quot;DISK_CONTROLLER_NONRAID&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 487,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;notification&amp;quot;,
                    &amp;quot;id&amp;quot;: 21,
                    &amp;quot;name&amp;quot;: &amp;quot;Notification&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 57,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;description&amp;quot;: &amp;quot;Email and Ticket&amp;quot;,
                &amp;quot;id&amp;quot;: 51,
                &amp;quot;keyName&amp;quot;: &amp;quot;NOTIFICATION_EMAIL_AND_TICKET&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 51,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;monitoring&amp;quot;,
                    &amp;quot;id&amp;quot;: 20,
                    &amp;quot;name&amp;quot;: &amp;quot;Monitoring&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 55,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;description&amp;quot;: &amp;quot;Host Ping&amp;quot;,
                &amp;quot;id&amp;quot;: 49,
                &amp;quot;keyName&amp;quot;: &amp;quot;MONITORING_HOST_PING&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 49,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;pri_ip_addresses&amp;quot;,
                    &amp;quot;id&amp;quot;: 13,
                    &amp;quot;name&amp;quot;: &amp;quot;Primary IP Addresses&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 21,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;capacity&amp;quot;: &amp;quot;1&amp;quot;,
                &amp;quot;description&amp;quot;: &amp;quot;1 IP Address&amp;quot;,
                &amp;quot;id&amp;quot;: 15,
                &amp;quot;keyName&amp;quot;: &amp;quot;1_IP_ADDRESS&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 15,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;remote_management&amp;quot;,
                    &amp;quot;id&amp;quot;: 46,
                    &amp;quot;name&amp;quot;: &amp;quot;Remote Management&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 906,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;description&amp;quot;: &amp;quot;Reboot / KVM over IP&amp;quot;,
                &amp;quot;id&amp;quot;: 504,
                &amp;quot;keyName&amp;quot;: &amp;quot;REBOOT_KVM_OVER_IP&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 504,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;vpn_management&amp;quot;,
                    &amp;quot;id&amp;quot;: 31,
                    &amp;quot;name&amp;quot;: &amp;quot;VPN Management - Private Network&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 420,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;description&amp;quot;: &amp;quot;Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account&amp;quot;,
                &amp;quot;id&amp;quot;: 309,
                &amp;quot;keyName&amp;quot;: &amp;quot;UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 309,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;vulnerability_scanner&amp;quot;,
                    &amp;quot;id&amp;quot;: 32,
                    &amp;quot;name&amp;quot;: &amp;quot;Vulnerability Assessments &amp;amp; Management&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 418,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;description&amp;quot;: &amp;quot;Nessus Vulnerability Assessment &amp;amp; Reporting&amp;quot;,
                &amp;quot;id&amp;quot;: 307,
                &amp;quot;keyName&amp;quot;: &amp;quot;NESSUS_VULNERABILITY_ASSESSMENT_REPORTING&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 307,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        },
        {
            &amp;quot;categories&amp;quot;: [
                {
                    &amp;quot;categoryCode&amp;quot;: &amp;quot;os&amp;quot;,
                    &amp;quot;id&amp;quot;: 12,
                    &amp;quot;name&amp;quot;: &amp;quot;Operating System&amp;quot;
                }
            ],
            &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;id&amp;quot;: 37620,
            &amp;quot;item&amp;quot;: {
                &amp;quot;bundle&amp;quot;: [],
                &amp;quot;capacity&amp;quot;: &amp;quot;0&amp;quot;,
                &amp;quot;description&amp;quot;: &amp;quot;Ubuntu Linux 14.04 LTS Trusty Tahr - Minimal Install (64 bit)&amp;quot;,
                &amp;quot;id&amp;quot;: 4710,
                &amp;quot;keyName&amp;quot;: &amp;quot;OS_UBUNTU_14_04_LTS_TRUSTY_TAHR_MINIMAL_64_BIT_2&amp;quot;,
                &amp;quot;units&amp;quot;: &amp;quot;N/A&amp;quot;
            },
            &amp;quot;itemId&amp;quot;: 4710,
            &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;
        }
    ],
    &amp;quot;primaryDiskPartitionId&amp;quot;: 1,
    &amp;quot;privateCloudOrderFlag&amp;quot;: false,
    &amp;quot;proratedInitialCharge&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;proratedOrderTotal&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;quantity&amp;quot;: 1,
    &amp;quot;resourceGroupId&amp;quot;: null,
    &amp;quot;resourceGroupTemplateId&amp;quot;: null,
    &amp;quot;sendQuoteEmailFlag&amp;quot;: null,
    &amp;quot;serverCoreCount&amp;quot;: 4,
    &amp;quot;sourceVirtualGuestId&amp;quot;: null,
    &amp;quot;stepId&amp;quot;: null,
    &amp;quot;taxCacheHash&amp;quot;: &amp;quot;fa1c610dbd007f2b0fda6c417252d748bc093080&amp;quot;,
    &amp;quot;taxCompletedFlag&amp;quot;: true,
    &amp;quot;totalRecurringTax&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;totalSetupTax&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;useHourlyPricing&amp;quot;: false
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get tickets using an objectFilter</title>
      <link>https://softlayer.github.io/php/ticket_filter/</link>
      <pubDate>Wed, 08 Jul 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/ticket_filter/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

require_once &#39;./SoftLayer/SoapClient.class.php&#39;;
$apiUser = &#39;&#39;;
$key = &#39;&#39;;

$startDate = new DateTime(&#39;2015-05-28T10:05:25-06:00&#39;);

$ticketClient = SoftLayer_SoapClient::getClient(&#39;SoftLayer_Account&#39;, null, $apiUser, $key);
$filter = new stdClass();
$filter-&amp;gt;tickets = new stdClass();
$filter-&amp;gt;tickets-&amp;gt;updates = new stdClass();
$filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate = new stdClass();
$filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;operation = &#39;greaterThanDate&#39;;
$filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;options = array();
$filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;options[0] = new stdClass();
$filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;name = &#39;date&#39;;
$filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;value = array($startDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;));
$filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;editorType = new stdClass();
$filter-&amp;gt;tickets-&amp;gt;updates-&amp;gt;editorType-&amp;gt;operation = &#39;EMPLOYEE&#39;;

$mask = new SoftLayer_ObjectMask();
$mask-&amp;gt;tickets-&amp;gt;updates;

$ticketClient-&amp;gt;setObjectMask($mask);
$ticketClient-&amp;gt;setObjectFilter($filter);
$updates = $ticketClient-&amp;gt;getTickets();

print_r($updates);

//prints out some SOAP debugging
print_r($ticketClient-&amp;gt;__getLastRequest());
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get top level billing items for all owned accounts</title>
      <link>https://softlayer.github.io/php/get_invoice_top_level_items/</link>
      <pubDate>Sun, 24 May 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/get_invoice_top_level_items/</guid>
      <description>&lt;p&gt;With a given date range, get all the invoice details for all of the owned brands, and all of their owned accounts. The $filter can be used to get just a single accounts invoices, just take off the -&amp;gt;allOwnedAccounts bits&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
require_once &#39;./SoftLayer/SoapClient.class.php&#39;;


/**
* This class structure is mostly used so this can be run as a script.
* Most of the print statements use fancy bash color codes to make things pretty
*/
class topBillingItems
{

    function __construct() {
        $this-&amp;gt;apiUsername = &#39;&#39;;
        $this-&amp;gt;apiKey = &#39;&#39;;
        $this-&amp;gt;startDate = new DateTime(&#39;2015-02-12T00:00:00-06:00&#39;);
        $this-&amp;gt;endDate = new DateTime(&#39;2015-03-12T00:00:00-06:00&#39;);
    }

    /*!
    * Will get all the brands on an account, THEN all of those brand&#39;s accounts,
    * Then all of THEIR brands, then all of THEIR accounts. Then, go through each
    * of the final tier accounts, and get all the invoices, then all the billing items.
    *
    */
    function main() {

        //The First Object Mask. Used to get all the front line brands, which will have the
        //accounts that are actually buying things
        $objectMask = new SoftLayer_ObjectMask();
        $objectMask-&amp;gt;ownedBrands-&amp;gt;allOwnedAccounts-&amp;gt;ownedBrands;

        $client = SoftLayer_SoapClient::getClient(&#39;SoftLayer_Account&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey);
        $client-&amp;gt;setObjectMask($objectMask);

        $response = $client-&amp;gt;getObject();

        //Start off with the main brand
        foreach ($response-&amp;gt;ownedBrands as $brand) {
            print &amp;quot;BRAND=\e[31m&amp;quot; . $brand-&amp;gt;keyName .  &amp;quot; ::&amp;quot; . $brand-&amp;gt;id . &amp;quot;\e[0m=\n&amp;quot;;

            //Go into each of the top brands accounts
            foreach ($brand-&amp;gt;allOwnedAccounts as $account) {
                print &amp;quot;==\e[32m&amp;quot; . $account-&amp;gt;companyName .&amp;quot;\e[0m\n&amp;quot;;

                //Go into each of those accounts brands...
                foreach ($account-&amp;gt;ownedBrands as $brand1) {
                    print &amp;quot;====\e[33m&amp;quot; . $brand1-&amp;gt;name .&amp;quot; ::&amp;quot; . $brand1-&amp;gt;id . &amp;quot;\e[0m\n&amp;quot;;
                    $brandInvoice = $this-&amp;gt;getAllBrandAccounts($brand1-&amp;gt;id);

                    //Go through each of the accounts on the brand
                    foreach ($brandInvoice as $brandAccount) {

                        //This is recursive and a very large data structure.
                        //we unset it here so it doesn&#39;t get in the way later
                        unset($brandAccount-&amp;gt;brand);
                        $this-&amp;gt;workAccount($brandAccount);

                    } //END foreach $brandInvoice
                } //END foreach $account-&amp;gt;ownedBrands
            } //END foreach $brand-&amp;gt;allOwnedAccounts
        } //END foreach $response-&amp;gt;ownedBrands
    }//END MAIN

    function getAllBrandAccounts($brandId) {

        //This filters out all invoices that are not in our date range.
        //all based on the invoices createDate
        $filter = new stdClass();
        $filter-&amp;gt;allOwnedAccounts = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;operation = &#39;betweenDate&#39;;
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options = array();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0] = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;name = &#39;startDate&#39;;
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;value = array($this-&amp;gt;startDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;));
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1] = new stdClass();
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;name = &#39;endDate&#39;;
        $filter-&amp;gt;allOwnedAccounts-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;value = array($this-&amp;gt;endDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;));

        //Mask for the front line brands, used to get all their accounts, and their invoices
        $brandMask = new SoftLayer_ObjectMask();
        $brandMask-&amp;gt;allOwnedAccounts-&amp;gt;invoices;

        //From that brand, get all the brand&#39;s owned accounts, with their invoices from the current month
        $brandClient = SoftLayer_SoapClient::getClient(&#39;SoftLayer_Brand&#39;, $brandId, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey);
        $brandClient-&amp;gt;setObjectMask($brandMask);
        $brandClient-&amp;gt;setObjectFilter($filter);
        return $brandClient-&amp;gt;getAllOwnedAccounts();

    }

    function workAccount($account) {

        print &amp;quot;=====\e[94m&amp;quot; . $account-&amp;gt;companyName .&amp;quot; ::&amp;quot; . $account-&amp;gt;id . &amp;quot;\e[0m\n&amp;quot;;
        //Used to get all the actual line items from an invoice
        $invoiceMask = new SoftLayer_ObjectMask();
        $invoiceMask-&amp;gt;items;
        $invoiceMask-&amp;gt;invoiceTotalAmount;
        //Go through each of the accounts monthly invoices
        foreach ($account-&amp;gt;invoices as $invoice) {
            print &amp;quot;Created: &amp;quot; . $invoice-&amp;gt;createDate . &amp;quot; TYPE: &amp;quot; . $invoice-&amp;gt;typeCode .&amp;quot;\n&amp;quot;;

            //Here we get the actual invoice and all the billing items inside of it
            $bClient = SoftLayer_SoapClient::getClient(&#39;SoftLayer_Billing_Invoice&#39;, $invoice-&amp;gt;id , $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey);
            $bClient-&amp;gt;setObjectMask($invoiceMask);
            $bt = $bClient-&amp;gt;getObject();
            print &amp;quot;====\e[42;90m&amp;quot; . $bt-&amp;gt;invoiceTotalAmount .&amp;quot;\e[0m\n&amp;quot;;

            //Go through each item on the invoice and print out its decription + fee.
            //There are a few other fields that could be billable, but these are the main ones.
            foreach ($bt-&amp;gt;items as $lineItem) {
                unset($lineItem-&amp;gt;invoice);
                $fee = $lineItem-&amp;gt;recurringAfterTaxAmount + $lineItem-&amp;gt;oneTimeAfterTaxAmount;
                print &amp;quot;====\e[35m&amp;quot; . $lineItem-&amp;gt;description . &amp;quot; =&amp;gt; &amp;quot; . $fee . &amp;quot;$ \e[0m\n&amp;quot;;
            }

        }//end invoice
    }
}

$main = new Example();
$main-&amp;gt;main();
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get Invoices</title>
      <link>https://softlayer.github.io/php/get_invoice/</link>
      <pubDate>Sun, 22 Feb 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/get_invoice/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
require_once &#39;./SoftLayer/SoapClient.class.php&#39;;
 
$apiUser = &#39;&#39;;
$key = &#39;&#39;;

//The date does need to be in this specific format
$startDate = new DateTime(&#39;2014-11-01T13:05:25-06:00&#39;);
$endDate = new DateTime(&#39;2014-12-01T09:53:51-06:00&#39;);
 
$accountClient = SoftLayer_SoapClient::getClient(&#39;SoftLayer_Account&#39;, null, $apiUser, $key);

$filter = new stdClass();
$filter-&amp;gt;invoices = new stdClass();
// $filter-&amp;gt;invoices-&amp;gt;accountId = new stdClass();
// $filter-&amp;gt;invoices-&amp;gt;accountId-&amp;gt;operation = &#39;= 391780&#39;;
$filter-&amp;gt;invoices-&amp;gt;createDate = new stdClass();
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;operation = &#39;betweenDate&#39;;
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options = array();
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0] = new stdClass();
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;name = &#39;startDate&#39;;
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;value = array($startDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;));
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1] = new stdClass();
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;name = &#39;endDate&#39;;
$filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;value = array($endDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;));

$objectMask = new SoftLayer_ObjectMask();
$objectMask-&amp;gt;invoices; 
 
$accountClient-&amp;gt;setObjectFilter($filter);
$accountClient-&amp;gt;setObjectMask($objectMask);

$invoices = $accountClient-&amp;gt;getObject();

print_r($invoices);

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create virtual server</title>
      <link>https://softlayer.github.io/rest/create_virtual_server/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/create_virtual_server/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Virtual_Guest.json?objectMask=id&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -X POST --data @vs_create.json --user userid:api_key
https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest.json?objectMask=mask.id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Input JSON:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;parameters&amp;quot; : [
        {
            &amp;quot;hostname&amp;quot; : &amp;quot;myhostname&amp;quot;,
            &amp;quot;domain&amp;quot; : &amp;quot;my.domain.com&amp;quot;,
            &amp;quot;startCpus&amp;quot; : 1,
            &amp;quot;maxMemory&amp;quot; : 1024,
            &amp;quot;datacenter&amp;quot; : {
                &amp;quot;name&amp;quot; : &amp;quot;wdc01&amp;quot;
                },
            &amp;quot;hourlyBillingFlag&amp;quot; : true,
            &amp;quot;localDiskFlag&amp;quot; : true,
            &amp;quot;operatingSystemReferenceCode&amp;quot;: &amp;quot;UBUNTU_LATEST&amp;quot;
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&amp;quot;id&amp;quot;:7742740}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get virtual server details</title>
      <link>https://softlayer.github.io/rest/get_virtual_server_details/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/get_virtual_server_details/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Virtual_Guest/{server_id}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl --user userid:api_key
&amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/
7743084.json?objectMask=mask[domain,fullyQualifiedDomainName,hostname,id,primaryBack
endIpAddress,primaryIpAddress,status.keyName]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;domain&amp;quot;:&amp;quot;lab01.softlayer.ws&amp;quot;,
    &amp;quot;fullyQualifiedDomainName&amp;quot;:&amp;quot;test03.lab01.softlayer.ws&amp;quot;,
    &amp;quot;hostname&amp;quot;:&amp;quot;test03&amp;quot;,
    &amp;quot;id&amp;quot;:7743084,
    &amp;quot;primaryBackendIpAddress&amp;quot;:&amp;quot;10.118.68.8&amp;quot;,
    &amp;quot;primaryIpAddress&amp;quot;:&amp;quot;168.1.79.8&amp;quot;,
    &amp;quot;status&amp;quot;:{
        &amp;quot;keyName&amp;quot;:&amp;quot;ACTIVE&amp;quot;,
        &amp;quot;name&amp;quot;:&amp;quot;Active&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get primary ip address record</title>
      <link>https://softlayer.github.io/php/primary_ip_address_record/</link>
      <pubDate>Sat, 03 Jan 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/primary_ip_address_record/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
require_once &#39;./SoftLayer/SoapClient.class.php&#39;;

$apiUsername = &#39;&#39;;
$apiKey = &#39;&#39;;
$virtualGuestId = 1111111
$client = SoftLayer_SoapClient::getClient(&#39;SoftLayer_Virtual_Guest&#39;,   $virtualGuestId, $apiUsername, $apiKey);


$objectMask = new SoftLayer_ObjectMask();
$objectMask-&amp;gt;primaryNetworkComponent;
$objectMask-&amp;gt;primaryNetworkComponent-&amp;gt;primaryIpAddressRecord;

$client-&amp;gt;setObjectMask($objectMask);
$guest = $client-&amp;gt;getObject();
print_r($guest);



/*
=============== RESULT ===============
~/Code/softlayer-examples/testing/php  $ php getIpID.php
stdClass Object
(
    [accountId] =&amp;gt; 307608
    [createDate] =&amp;gt; 2015-06-12T15:37:58-06:00
    [dedicatedAccountHostOnlyFlag] =&amp;gt;
    [domain] =&amp;gt; test.lablayer.info
    [fullyQualifiedDomainName] =&amp;gt; salttest.test.lablayer.info
    [hostname] =&amp;gt; salttest
    [id] =&amp;gt; 10015277
    [lastPowerStateId] =&amp;gt;
    [lastVerifiedDate] =&amp;gt;
    [maxCpu] =&amp;gt; 1
    [maxCpuUnits] =&amp;gt; CORE
    [maxMemory] =&amp;gt; 1024
    [metricPollDate] =&amp;gt;
    [modifyDate] =&amp;gt; 2015-06-12T16:12:52-06:00
    [provisionDate] =&amp;gt; 2015-06-12T15:42:03-06:00
    [startCpus] =&amp;gt; 1
    [statusId] =&amp;gt; 1001
    [uuid] =&amp;gt; 7a9731a1-4c29-144b-8051-55507ff1f08b
    [globalIdentifier] =&amp;gt; 8f5ed47b-9864-418b-8966-e9d4a70742f8
    [managedResourceFlag] =&amp;gt;
    [primaryBackendIpAddress] =&amp;gt; 10.91.155.168
    [primaryIpAddress] =&amp;gt; 198.23.82.198
    [primaryNetworkComponent] =&amp;gt; stdClass Object
        (
            [createDate] =&amp;gt; 2015-06-12T15:38:26-06:00
            [guestId] =&amp;gt; 10015277
            [id] =&amp;gt; 5277729
            [macAddress] =&amp;gt; 06:51:99:7e:f9:ef
            [maxSpeed] =&amp;gt; 10
            [modifyDate] =&amp;gt; 2015-06-12T15:38:39-06:00
            [name] =&amp;gt; eth
            [networkId] =&amp;gt; 4043239
            [port] =&amp;gt; 1
            [speed] =&amp;gt; 10
            [status] =&amp;gt; ACTIVE
            [uuid] =&amp;gt; 61836774-e776-d480-75e5-bc45b74982c7
            [primaryIpAddress] =&amp;gt; 198.23.82.198
            [primaryIpAddressRecord] =&amp;gt; stdClass Object
                (
                    [id] =&amp;gt; 13751854
                    [ipAddress] =&amp;gt; 198.23.82.198
                    [isBroadcast] =&amp;gt;
                    [isGateway] =&amp;gt;
                    [isNetwork] =&amp;gt;
                    [isReserved] =&amp;gt;
                    [subnetId] =&amp;gt; 469930
                    [guestNetworkComponentBinding] =&amp;gt; stdClass Object
                        (
                            [ipAddressId] =&amp;gt; 13751854
                            [port] =&amp;gt;
                            [type] =&amp;gt; PRIMARY
                        )

                    [subnet] =&amp;gt; stdClass Object
                        (
                            [broadcastAddress] =&amp;gt; 198.23.82.199
                            [cidr] =&amp;gt; 29
                            [gateway] =&amp;gt; 198.23.82.193
                            [id] =&amp;gt; 469930
                            [isCustomerOwned] =&amp;gt;
                            [isCustomerRoutable] =&amp;gt;
                            [modifyDate] =&amp;gt; 2015-04-18T19:15:55-06:00
                            [netmask] =&amp;gt; 255.255.255.248
                            [networkIdentifier] =&amp;gt; 198.23.82.192
                            [networkVlanId] =&amp;gt; 359732
                            [sortOrder] =&amp;gt; 4
                            [subnetType] =&amp;gt; PRIMARY
                            [totalIpAddresses] =&amp;gt; 8
                            [usableIpAddressCount] =&amp;gt; 5
                            [version] =&amp;gt; 4
                        )

                )

        )

    [status] =&amp;gt; stdClass Object
        (
            [keyName] =&amp;gt; ACTIVE
            [name] =&amp;gt; Active
        )

)
*/
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Server Locate</title>
      <link>https://softlayer.github.io/ruby/server_locate/</link>
      <pubDate>Tue, 30 Sep 2014 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/server_locate/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39; # gem install softlayer_api
require &#39;table_print&#39; # gem install table_print

# Credentials to the SoftLayer API are grabbed from the config file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
SoftLayer::Client.default_client = SoftLayer::Client.new

servers = SoftLayer::VirtualServer.find_servers(object_mask: &#39;mask[location.pathString]&#39;)
location_info = servers.map do |server|
  datacenter, server_room, rack, slot = server[&#39;location&#39;][&#39;pathString&#39;].split(&#39;.&#39;)
  {
    server: server.fullyQualifiedDomainName,
    data_center: datacenter,
    server_room: server_room,
    rack: rack,
    slot: slot
  }
end


tp location_info
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>