<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sshkey on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/sshkey/</link>
    <description>Recent content in Sshkey on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Sep 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/sshkey/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Look up an SSH key</title>
      <link>https://softlayer.github.io/go/sshkey_lookup/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/sshkey_lookup/</guid>
      <description>package main import ( &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/filter&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; ) // The key to look up const label = &amp;#34;Test Public Key&amp;#34; func main() { sess := session.New() service := services.GetAccountService(sess) keys, err := service. Filter(filter.Build( filter.Path(&amp;#34;sshKeys.label&amp;#34;).Eq(label))). Mask(&amp;#34;id,label,key,fingerprint,notes&amp;#34;). GetSshKeys() if err != nil { log.Fatal(&amp;#34;Error retrieving SSH key: &amp;#34;, err) } if len(keys) == 0 { log.Fatal(&amp;#34;No ssh key found labeled &amp;#34;, label) } if len(keys) &amp;gt; 1 { log.Fatal(&amp;#34;More than one ssh key found labeled &amp;#34;, label) } key := keys[0] fmt.</description>
    </item>
    
    <item>
      <title>Managing SSH Key Pairs with fog-softlayer</title>
      <link>https://softlayer.github.io/fog/keypairs/</link>
      <pubDate>Fri, 08 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/fog/keypairs/</guid>
      <description>Create a connection to SoftLayer Compute Service require &amp;#39;fog/softlayer&amp;#39; @sl = Fog::Compute[:softlayer] Key Pair Basics Create
kp1 = @sl.key_pairs.create(:label =&amp;gt; &amp;#39;my-new-key&amp;#39;, :key =&amp;gt; &amp;#39;ssh-rsa AAAAxbU2lx...&amp;#39;) # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt; kp2 = @sl.key_pairs.new kp2.label = &amp;#39;my-new-new-key&amp;#39; kp2.key = &amp;#39;ssh-rsa AAAAxbU2lx...&amp;#39; kp2.save # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt; Get
# By id: kp = @sl.key_pairs.get(123456) # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt; # By label: kp = @sl.key_pairs.by_label(&amp;#39;my-new-key&amp;#39;) # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt; Destroy
kp = @sl.key_pairs.by_label(&amp;#39;my-new-key&amp;#39;) # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt; kp.destroy Key Pairs with Servers Create a server with one or more key pairs</description>
    </item>
    
  </channel>
</rss>