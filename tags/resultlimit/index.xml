<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Resultlimit on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/resultlimit/</link>
    <description>Recent content in Resultlimit on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/resultlimit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Event Logs</title>
      <link>https://softlayer.github.io/python/event_log/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/event_log/</guid>
      <description>This example deals with a few ways of pulling data from SoftLayer_Event_Log. There can ben quite a few Logs here, so I recommend using a filter like in the recentLogs function to limit how far back you search for Events, otherwise you will be paging through Events for a long time.
&amp;#34;&amp;#34;&amp;#34; @author Christopher Gallo &amp;#34;&amp;#34;&amp;#34; import datetime import SoftLayer class example(): def __init__(self): self.client = SoftLayer.Client() debugger = SoftLayer.DebugTransport(self.client.transport) self.</description>
    </item>
    
    <item>
      <title>Tickets</title>
      <link>https://softlayer.github.io/rest/tickets/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/tickets/</guid>
      <description>Tickets Tickets are how SoftLayer and you communicate and resolve problems. They can be about anything from general questions, requests for upgrades, monitoring alerts, or anything else that might come up.
Viewing Tickets To start off, lets see how to go about getting tickets that already exist on our account. There are a variety of helper functions on the SoftLayer_Account service that deal with tickets, and they all work basically the same way.</description>
    </item>
    
    <item>
      <title>Events</title>
      <link>https://softlayer.github.io/rest/events/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/events/</guid>
      <description>Events SoftLayer_Notification_Occurrence_Events at SoftLayer are how we communicate maintenance, outages, and other disruptive events to customers. In the control portal, you can find these at https://control.softlayer.com/event/announcement
Get All Events SoftLayer_Notification_Occurrence_Event::getAllObjects()
curl -u $SL_USER:$SL_APIKEY &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json The output will look something like this, but will have every event that has ever been reported on your account. For brevity I have only included 1 Event
[ { &amp;#34;endDate&amp;#34;: null, &amp;#34;id&amp;#34;: 2584, &amp;#34;lastImpactedUserCount&amp;#34;: 11232, &amp;#34;modifyDate&amp;#34;: &amp;#34;2016-06-13T08:27:20-06:00&amp;#34;, &amp;#34;recoveryTime&amp;#34;: null, &amp;#34;startDate&amp;#34;: &amp;#34;2014-03-31T00:35:00-06:00&amp;#34;, &amp;#34;statusCode&amp;#34;: { &amp;#34;keyName&amp;#34;: &amp;#34;COMPLETED&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Completed&amp;#34; }, &amp;#34;subject&amp;#34;: &amp;#34;IPv6 Sessions Down on FCR02.</description>
    </item>
    
    <item>
      <title>Provision Times</title>
      <link>https://softlayer.github.io/python/provisionTimes/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/provisionTimes/</guid>
      <description>Goes through orders and prints out each transaction that provisioned a server or virtual server. Calculates provision time from the time the order was placed, till the time the transaction went to COMPLETE.
Order: 15866609 - 2017-06-09T10:42:04-06:00 FQDN, Status, transaction id, elapsed time sgtest.cdetest.info, COMPLETE, 57090965, 383.0 Order: 15861187 - 2017-06-09T09:07:49-06:00 FQDN, Status, transaction id, elapsed time jumpbox.cdetest.info, COMPLETE, 57080823, 774.0 Order: 15860993 - 2017-06-09T08:53:22-06:00 FQDN, Status, transaction id, elapsed time Order: 15853891 - 2017-06-09T04:47:32-06:00 FQDN, Status, transaction id, elapsed time d1.</description>
    </item>
    
    <item>
      <title>Using Result Limits in the SoftLayer API</title>
      <link>https://softlayer.github.io/article/using-result-limits-softlayer-api/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/using-result-limits-softlayer-api/</guid>
      <description>toc_collapse=0;Table of contents&amp;nbsp;  Structure Creating a Result Limit    Many of the methods in the SoftLayer API return arrays of data types. In these cases it may be useful to limit the number of results that the API retrieves from your method call. Fortunately SoftLayer provides an easy way to accomplish this via a method analogous to the SQL LIMIT statement that you can apply in the header of your method calls.</description>
    </item>
    
    <item>
      <title>XML-RPC</title>
      <link>https://softlayer.github.io/article/xml-rpc/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/article/xml-rpc/</guid>
      <description>SoftLayer provides an XML-RPC interface in addition to [[SOAP]] and [[REST]]. The XML-RPC API is built to mimic the SOAP interface. We recommend using the XML-RPC API when your chosen language doesn&amp;rsquo;t have proper SOAP support.
Endpoint URLs The SoftLayer XML-RPC API has one endpoint per available API service. Each endpoint has a unique URL containing the service name of the API services that it calls. For example: https://api.softlayer.com/xmlrpc/v3/&amp;lt;serviceName&amp;gt; or http://api.</description>
    </item>
    
  </channel>
</rss>