<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vsis on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/vsis/</link>
    <description>Recent content in Vsis on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/vsis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/python/createvsiwithsecgroup/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createvsiwithsecgroup/</guid>
      <description>from __future__ import print_function import SoftLayer from SoftLayer.managers.vs import VSManager def create_vsi(): #Create a client to the SoftLayer_Account API service. #Note: currently set without the user ID and API key since #it will by default use the values set in the CLI #to use other values use SoftLayer.Client(sl_username, sl_api_key) client = SoftLayer.Client() vsi_mgr = VSManager(client) # common values datacenter = &#39;wdc07&#39; domain = &#39;cde.services&#39; os_code = &#39;UBUNTU_LATEST_64&#39; local_disk = True hourly = True dedicated = False nic_speed = 1000 disks = [100] private = False ssh_keys = [972047] public_security_groups = [43507] private_security_groups = [43511] # server properties hostname = &#39;sgvsi&#39; cpus = 2 memory = 2048 result = vsi_mgr.</description>
    </item>
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/ruby/vsiSecGroups/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/vsiSecGroups/</guid>
      <description>To get a list of Security Groups you can attach to a Virtual Guest you can run the following code:
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getGroups = client[&#39;Network_SecurityGroup&#39;].getAllObjects pp getGroups  Once you have the Security Group IDs you would like to use you can plug them in to the following example:
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) productOrder = { &#39;hostname&#39; =&amp;gt; &#39;rubysectest&#39;, &#39;domain&#39; =&amp;gt; &#39;cde.</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>https://softlayer.github.io/php/createVsi/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/createVsi/</guid>
      <description>&amp;lt;?php /* You can use the getenv() module to pull your exported Username and API key to keep from having to store them in your files */ require_once &#39;./vendor/autoload.php&#39;; $apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;); $apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;); $template = new stdClass(); $template-&amp;gt;location = 1441195; $template-&amp;gt;datacenter-&amp;gt;name = &#39;dal10&#39;; $template-&amp;gt;domain = &#39;example.com&#39;; $template-&amp;gt;startCpus = 2; $template-&amp;gt;maxMemory = 2048; $template-&amp;gt;operatingSystemReferenceCode = &#39;CENTOS_6_64&#39;; $template-&amp;gt;hostname = &#39;testphp&#39;; $template-&amp;gt;localDiskFlag = True; $template-&amp;gt;hourlyBillingFlag = True; $template-&amp;gt;dedicatedAccountHostOnlyFlag = False; $template-&amp;gt;primaryBackendNetworkComponent = 1286783; $template-&amp;gt;primaryNetworkComponent = 1286781; $template-&amp;gt;privateNetworkOnlyFlag = False; try { $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Virtual_Guest&#39;,null, $apiUsername, $apiKey); $response = $client-&amp;gt;createObject($template); print_r($response); } catch(Exception $e) { echo &#39;Cannot compute.</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>https://softlayer.github.io/ruby/createVSI/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createVSI/</guid>
      <description>When you are ready to place the order change verifyOrder(productOrder) to placeOrder(productOrder).
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) productOrder = { &#39;virtualGuests&#39; =&amp;gt; [{ &#39;hostname&#39; =&amp;gt; &#39;testRuby&#39;, &#39;domain&#39; =&amp;gt; &#39;example.com&#39;, &#39;primaryBackendNetworkComponent&#39; =&amp;gt; { &#39;networkVlan&#39; =&amp;gt; { &#39;id&#39; =&amp;gt; 1286783 } } }], &#39;location&#39; =&amp;gt; 1441195, &#39;packageId&#39; =&amp;gt; 46, &#39;operatingSystemReferenceCode&#39; =&amp;gt; &#39;CENTOS_6_64&#39;, &#39;useHourlyPricing&#39; =&amp;gt; false, &#39;prices&#39; =&amp;gt; [ {&#39;id&#39; =&amp;gt; 1640 }, # 1 x 2.0 GHz Core {&#39;id&#39; =&amp;gt; 1644 }, # 1 GB RAM {&#39;id&#39; =&amp;gt; 13945 }, # CENTOS_6_64 {&#39;id&#39; =&amp;gt; 1639 }, # 100 GB (SAN) First Disk {&#39;id&#39; =&amp;gt; 2277 }, # 100 GB (SAN) Second Disk {&#39;id&#39; =&amp;gt; 50367 }, # 250 GB Bandwidth {&#39;id&#39; =&amp;gt; 274 }, # 1 Gbps Public &amp;amp; Private Network Uplinks {&#39;id&#39; =&amp;gt; 21 }, # 1 IP Address {&#39;id&#39; =&amp;gt; 420 }, # Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account {&#39;id&#39; =&amp;gt; 56 }, # Host Ping and TCP Service Monitoring {&#39;id&#39; =&amp;gt; 57 }, # Email and Ticket {&#39;id&#39; =&amp;gt; 418 }, # NESSUS_VULNERABILITY_ASSESSMENT_REPORTING {&#39;id&#39; =&amp;gt; 905 }, # REBOOT_REMOTE_CONSOLE {&#39;id&#39; =&amp;gt; 58 } # AUTOMATED_NOTIFICATION ] } order = client[&#39;Product_Order&#39;].</description>
    </item>
    
    <item>
      <title>Find active VMs of specified creator</title>
      <link>https://softlayer.github.io/ruby/find_my_vms/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/find_my_vms/</guid>
      <description># Code example of how to list virtual instances from a SoftLayer account. # You can call the script from the command and provide the username you # want to filter on. The script expects that you have the SoftLayer gem # installed and have it configured with the credentials you&#39;d like # to use with SoftLayer. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44. # # You can run the script with the username you&#39;d like to check under # the account you have configured: # find_my_active_vms userid # # The output of the script is in a csv format with commas as the # column separator.</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>https://softlayer.github.io/python/create_vsi_options/</link>
      <pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_vsi_options/</guid>
      <description>&#39;&#39;&#39; An example of how to create a VSI from the SL python library &#39;&#39;&#39; from __future__ import print_function import SoftLayer from SoftLayer.managers.vs import VSManager def create_vsi(): #Create a client to the SoftLayer_Account API service. #Note: currently set without the user ID and API key since #it will by default use the values set in the CLI #to use other values use SoftLayer.Client(sl_username, sl_api_key) client = SoftLayer.Client() vsi_mgr = VSManager(client) # uncomment to display create options # print(vsi_mgr.</description>
    </item>
    
    <item>
      <title>Find active VMs by creator</title>
      <link>https://softlayer.github.io/python/find_my_vms/</link>
      <pubDate>Tue, 23 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/find_my_vms/</guid>
      <description>&#39;&#39;&#39; Code example of how to list virtual instances from a SoftLayer account You can call the script from the command and provide the user ID you want to check. The script expects that you have the SoftLayer CLI installed and have it configured with the credentials you&#39;d like to use with SoftLayer. You can run the script with the user ID you&#39;d like to check under the account you have configured: find_my_active_vms userid The output of the script is in a csv format with tabs as the column separator.</description>
    </item>
    
  </channel>
</rss>