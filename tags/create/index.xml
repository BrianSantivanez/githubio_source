<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Create on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/create/</link>
    <description>Recent content in Create on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/create/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/python/createvsiwithsecgroup/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createvsiwithsecgroup/</guid>
      <description>from __future__ import print_function import SoftLayer from SoftLayer.managers.vs import VSManager def create_vsi(): #Create a client to the SoftLayer_Account API service. #Note: currently set without the user ID and API key since #it will by default use the values set in the CLI #to use other values use SoftLayer.Client(sl_username, sl_api_key) client = SoftLayer.Client() vsi_mgr = VSManager(client) # common values datacenter = &#39;wdc07&#39; domain = &#39;cde.services&#39; os_code = &#39;UBUNTU_LATEST_64&#39; local_disk = True hourly = True dedicated = False nic_speed = 1000 disks = [100] private = False ssh_keys = [972047] public_security_groups = [43507] private_security_groups = [43511] # server properties hostname = &#39;sgvsi&#39; cpus = 2 memory = 2048 result = vsi_mgr.</description>
    </item>
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/ruby/vsiSecGroups/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/vsiSecGroups/</guid>
      <description>To get a list of Security Groups you can attach to a Virtual Guest you can run the following code:
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getGroups = client[&#39;Network_SecurityGroup&#39;].getAllObjects pp getGroups  Once you have the Security Group IDs you would like to use you can plug them in to the following example:
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) productOrder = { &#39;hostname&#39; =&amp;gt; &#39;rubysectest&#39;, &#39;domain&#39; =&amp;gt; &#39;cde.</description>
    </item>
    
    <item>
      <title>Advanced Bare Metal Server Ordering</title>
      <link>https://softlayer.github.io/python/orderBareMetal/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderBareMetal/</guid>
      <description>Example of how to build an order for a bare metal server.
 Find the package that you want to order. listServerPackages() will filter out all that are not bare metal servers Use getServerPrices() to find the item keyNames you want to include in your order. These price IDs can be included prices array directly, but I&amp;rsquo;ve included gatherPriceIds() to match up KeyNames to build a list of price ids.</description>
    </item>
    
    <item>
      <title>Ordering Raid</title>
      <link>https://softlayer.github.io/ruby/orderingRaid/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderingRaid/</guid>
      <description>As a SoftLayer user, you have probably seen the beautiful RAID Configurator that greets you when you order a server on the SoftLayer website.
It allows you to do anything you like, from a straight RAID configuration involving all drives in a single disk array, to a much more intricate configuration with nearly any mix of disks and RAID types.
However beautiful and practical the interface, sometimes you want to script this process, and the SoftLayer mantra of &amp;ldquo;Anything you can do in the Web interface, you can do on the API&amp;rdquo; also rings true in this case.</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>https://softlayer.github.io/php/createVsi/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/createVsi/</guid>
      <description>&amp;lt;?php /* You can use the getenv() module to pull your exported Username and API key to keep from having to store them in your files */ require_once &#39;./vendor/autoload.php&#39;; $apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;); $apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;); $template = new stdClass(); $template-&amp;gt;location = 1441195; $template-&amp;gt;datacenter-&amp;gt;name = &#39;dal10&#39;; $template-&amp;gt;domain = &#39;example.com&#39;; $template-&amp;gt;startCpus = 2; $template-&amp;gt;maxMemory = 2048; $template-&amp;gt;operatingSystemReferenceCode = &#39;CENTOS_6_64&#39;; $template-&amp;gt;hostname = &#39;testphp&#39;; $template-&amp;gt;localDiskFlag = True; $template-&amp;gt;hourlyBillingFlag = True; $template-&amp;gt;dedicatedAccountHostOnlyFlag = False; $template-&amp;gt;primaryBackendNetworkComponent = 1286783; $template-&amp;gt;primaryNetworkComponent = 1286781; $template-&amp;gt;privateNetworkOnlyFlag = False; try { $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Virtual_Guest&#39;,null, $apiUsername, $apiKey); $response = $client-&amp;gt;createObject($template); print_r($response); } catch(Exception $e) { echo &#39;Cannot compute.</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>https://softlayer.github.io/ruby/createVSI/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createVSI/</guid>
      <description>When you are ready to place the order change verifyOrder(productOrder) to placeOrder(productOrder).
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) productOrder = { &#39;virtualGuests&#39; =&amp;gt; [{ &#39;hostname&#39; =&amp;gt; &#39;testRuby&#39;, &#39;domain&#39; =&amp;gt; &#39;example.com&#39;, &#39;primaryBackendNetworkComponent&#39; =&amp;gt; { &#39;networkVlan&#39; =&amp;gt; { &#39;id&#39; =&amp;gt; 1286783 } } }], &#39;location&#39; =&amp;gt; 1441195, &#39;packageId&#39; =&amp;gt; 46, &#39;operatingSystemReferenceCode&#39; =&amp;gt; &#39;CENTOS_6_64&#39;, &#39;useHourlyPricing&#39; =&amp;gt; false, &#39;prices&#39; =&amp;gt; [ {&#39;id&#39; =&amp;gt; 1640 }, # 1 x 2.0 GHz Core {&#39;id&#39; =&amp;gt; 1644 }, # 1 GB RAM {&#39;id&#39; =&amp;gt; 13945 }, # CENTOS_6_64 {&#39;id&#39; =&amp;gt; 1639 }, # 100 GB (SAN) First Disk {&#39;id&#39; =&amp;gt; 2277 }, # 100 GB (SAN) Second Disk {&#39;id&#39; =&amp;gt; 50367 }, # 250 GB Bandwidth {&#39;id&#39; =&amp;gt; 274 }, # 1 Gbps Public &amp;amp; Private Network Uplinks {&#39;id&#39; =&amp;gt; 21 }, # 1 IP Address {&#39;id&#39; =&amp;gt; 420 }, # Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account {&#39;id&#39; =&amp;gt; 56 }, # Host Ping and TCP Service Monitoring {&#39;id&#39; =&amp;gt; 57 }, # Email and Ticket {&#39;id&#39; =&amp;gt; 418 }, # NESSUS_VULNERABILITY_ASSESSMENT_REPORTING {&#39;id&#39; =&amp;gt; 905 }, # REBOOT_REMOTE_CONSOLE {&#39;id&#39; =&amp;gt; 58 } # AUTOMATED_NOTIFICATION ] } order = client[&#39;Product_Order&#39;].</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>https://softlayer.github.io/python/create_vsi_options/</link>
      <pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_vsi_options/</guid>
      <description>&#39;&#39;&#39; An example of how to create a VSI from the SL python library &#39;&#39;&#39; from __future__ import print_function import SoftLayer from SoftLayer.managers.vs import VSManager def create_vsi(): #Create a client to the SoftLayer_Account API service. #Note: currently set without the user ID and API key since #it will by default use the values set in the CLI #to use other values use SoftLayer.Client(sl_username, sl_api_key) client = SoftLayer.Client() vsi_mgr = VSManager(client) # uncomment to display create options # print(vsi_mgr.</description>
    </item>
    
    <item>
      <title>Create virtual server</title>
      <link>https://softlayer.github.io/rest/create_virtual_server/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/create_virtual_server/</guid>
      <description>Operation: POST
URL: SoftLayer_Virtual_Guest.json?objectMask=id
Example CURL:
curl -X POST --data @vs_create.json --user userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest.json?objectMask=mask.id  Input JSON:
{ &amp;quot;parameters&amp;quot; : [ { &amp;quot;hostname&amp;quot; : &amp;quot;myhostname&amp;quot;, &amp;quot;domain&amp;quot; : &amp;quot;my.domain.com&amp;quot;, &amp;quot;startCpus&amp;quot; : 1, &amp;quot;maxMemory&amp;quot; : 1024, &amp;quot;datacenter&amp;quot; : { &amp;quot;name&amp;quot; : &amp;quot;wdc01&amp;quot; }, &amp;quot;hourlyBillingFlag&amp;quot; : true, &amp;quot;localDiskFlag&amp;quot; : true, &amp;quot;operatingSystemReferenceCode&amp;quot;: &amp;quot;UBUNTU_LATEST&amp;quot; } ] }  Example Response:
{&amp;quot;id&amp;quot;:7742740}  </description>
    </item>
    
  </channel>
</rss>