<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Getbillingitem on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/getbillingitem/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Fri, 09 Jun 2017 00:00:00 UTC</updated>
    
    <item>
      <title>Get bills by user</title>
      <link>https://softlayer.github.io/python/billsByUser/</link>
      <pubDate>Fri, 09 Jun 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/billsByUser/</guid>
      <description>&lt;p&gt;This is a rough script, it doesn&amp;rsquo;t include some of the tax fees and some of the other one off fee fields that you will find in &lt;a href=&#34;http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item&#34;&gt;http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example Output&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chris-cde - 840.0
    123.cdetesting.com : Dual Intel Xeon E5-2620 v3 (12 Cores, 2.40 GHz) $345.0
    234.cdetesting.com : Dual Intel Xeon E5-2620 v3 (12 Cores, 2.40 GHz) $495.0
    chris.testing.com : 2 x 2.0 GHz Cores $0.0
    4 Portable Private IP Addresses - $0.0
    8 Portable Private IP Addresses - $0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Source&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;quot;&amp;quot;&amp;quot;
@author Christopher Gallo
Goes through the next invoice. Collections billing items by the user that orderd them.
Prints out each user and how much they caused in billing, along with what they ordered.
&amp;quot;&amp;quot;&amp;quot;
import SoftLayer
from pprint import pprint as pp

class bills():

    def __init__(self):

        self.client = SoftLayer.Client()
        self.mgr = SoftLayer.VSManager(self.client)

    def main(self):

        &amp;quot;&amp;quot;&amp;quot;
        Not all billing items have a user record, these are collected under the master account
        http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNextInvoiceTopLevelBillingItems returns
        http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item -&amp;gt; taps orderItem for
        http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Order_Item -&amp;gt; taps order for 
        http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Order -&amp;gt; taps userRecord for
        http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer
        &amp;quot;&amp;quot;&amp;quot;
        mask=&amp;quot;mask[orderItem[order[id,userRecord[displayName,username]]]]&amp;quot;
        billingItems = self.client[&#39;SoftLayer_Account&#39;].getNextInvoiceTopLevelBillingItems(mask=mask)

        users = {&#39;masterUser&#39;: []}
        for item in billingItems:
            if &#39;orderItem&#39; in item:
                username = item[&#39;orderItem&#39;][&#39;order&#39;][&#39;userRecord&#39;][&#39;username&#39;]
                del item[&#39;orderItem&#39;]
                if username not in users:
                    users[username] = []
                users[username].append(item)
            else:
                users[&#39;masterUser&#39;].append(item)


        # prints everything out, and finds the sum of items.
        for user in users:
            servers = []
            everything_else = []
            total_cost = 0

            for item in users[user]:

                # this doens&#39;t include Tax fees, or setup fees because I&#39;m lazy
                cost = float(item[&#39;recurringFee&#39;]) + float(item[&#39;oneTimeFee&#39;])
                if &#39;hostName&#39; in item:
                    fqdn = &amp;quot;%s.%s : %s $%s&amp;quot; % (item[&#39;hostName&#39;], item[&#39;domainName&#39;], item[&#39;description&#39;], cost)
                    servers.append(fqdn)
                else:
                    item = &amp;quot;%s - $%s&amp;quot; % (item[&#39;description&#39;], cost)
                    everything_else.append(item)
                total_cost = total_cost + cost
            print(&amp;quot;%s - %s&amp;quot; % (user , total_cost))
            for server in servers:
                print(&amp;quot;\t%s&amp;quot; % server)
            for thing in everything_else:
                print(&amp;quot;\t%s&amp;quot; % thing)




if __name__ == &amp;quot;__main__&amp;quot;:
    main = bills()
    main.main()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>https://softlayer.github.io/ruby/billingfromproduct/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/billingfromproduct/</guid>
      <description>&lt;p&gt;In the following example we are looking for the Billing Item of an Endurance Storage volume with an ID of 1234567.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# add your network storage id, it can be found by doing this call: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNasNetworkStorage
network_storage_id = 1234567
#
item = client[:Network_Storage].object_mask(&amp;quot;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;quot;).object_with_id(network_storage_id).getObject
pp item[&#39;billingItem&#39;]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Retrieve the month to date cost of an hourly VSI</title>
      <link>https://softlayer.github.io/perl/monthtodatecost/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/perl/monthtodatecost/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;#!/usr/bin/perl
use lib &amp;quot;/path/to/softlayer-api-perl-client/&amp;quot;;
use SoftLayer::API::SOAP;
use Data::Dumper;

my $api_username = &amp;quot;x&amp;quot;;
my $api_key = &amp;quot;a&amp;quot;;
my $client = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Account&#39;, undef, $api_username, $api_key);

# SoftLayer_Virtual_Guest/&amp;lt;VSI_ID&amp;gt;/getBillingItem?objectMask=mask\[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge\]&amp;quot;
# CHANGE ME to the id of the virtual guest you want to check
my $virtual_guest_id = 12345678;
my $virtual_guest = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Virtual_Guest&#39;, $virtual_guest_id, $api_username, $api_key);
my $objectMask = {
    &#39;createDate&#39; =&amp;gt; &#39;&#39;,
    &#39;hoursUsed&#39; =&amp;gt; &#39;&#39;,
    &#39;hourlyRecurringFee&#39; =&amp;gt; &#39;&#39;,
    &#39;currentHourlyCharge&#39; =&amp;gt; &#39;&#39;
};

$result = $virtual_guest-&amp;gt;getBillingItem();
my $cost;
$cost = $result-&amp;gt;result-&amp;gt;{&#39;hoursUsed&#39;} * $result-&amp;gt;result-&amp;gt;{&#39;hourlyRecurringFee&#39;};
print $result-&amp;gt;result-&amp;gt;{&#39;hoursUsed&#39;} . &amp;quot; hours @ &amp;quot; . $result-&amp;gt;result-&amp;gt;{&#39;hourlyRecurringFee&#39;} . &amp;quot;\$/hour = &amp;quot; . $cost . &amp;quot; \$\n&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1 hours @ .045$/hour = 0.045 $
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>https://softlayer.github.io/rest/get_billing_id/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/get_billing_id/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/getBillingItem&#34;&gt;&lt;code&gt;SoftLayer_Network_Storage::getBillingItem()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Network_Storage/getBillingItem&lt;/p&gt;

&lt;p&gt;To find a billing item of a provisioned product you would use the &lt;code&gt;getBillingItem&lt;/code&gt; call on the specific resource you are trying to locate. In the following example we are looking for the Billing Item of an Endurance Storage volume with an ID of 1234567.&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Network_Storage/1234567/getBillingItem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;allowCancellationFlag&amp;quot;: 1,
    &amp;quot;cancellationDate&amp;quot;: null,
    &amp;quot;categoryCode&amp;quot;: &amp;quot;storage_service_enterprise&amp;quot;,
    &amp;quot;createDate&amp;quot;: &amp;quot;2015-11-17T12:14:14-06:00&amp;quot;,
    &amp;quot;cycleStartDate&amp;quot;: &amp;quot;2015-12-04T00:07:24-06:00&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;Endurance Storage&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;87654321&amp;quot;,
    &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;laborFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;lastBillDate&amp;quot;: &amp;quot;2015-12-04T00:07:24-06:00&amp;quot;,
    &amp;quot;modifyDate&amp;quot;: &amp;quot;2015-12-04T00:07:24-06:00&amp;quot;,
    &amp;quot;nextBillDate&amp;quot;: &amp;quot;2016-01-04T00:00:00-06:00&amp;quot;,
    &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;oneTimeFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;orderItemId&amp;quot;: 99999999,
    &amp;quot;parentId&amp;quot;: null,
    &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;recurringFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;recurringMonths&amp;quot;: 1,
    &amp;quot;serviceProviderId&amp;quot;: 1,
    &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;setupFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Month-to-date cost of a Virtual_Guest</title>
      <link>https://softlayer.github.io/rest/hourlycost_date/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/hourlycost_date/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBillingItem&#34;&gt;&lt;code&gt;SoftLayer_Virtual_Guest::getBillingItem()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Virtual_Guest/&lt;virtual_guest_id&gt;/getBillingItem?objectMask=mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/&amp;lt;virtual_guest_id&amp;gt;/getBillingItem?objectMask=mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;createDate&amp;quot;: &amp;quot;2015-12-30T09:26:32-06:00&amp;quot;,
    &amp;quot;currentHourlyCharge&amp;quot;: &amp;quot;.18&amp;quot;,
    &amp;quot;hourlyRecurringFee&amp;quot;: &amp;quot;.09&amp;quot;,
    &amp;quot;hoursUsed&amp;quot;: &amp;quot;2&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>