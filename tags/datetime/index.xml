<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/datetime/index.xml</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>Get disk usage metrics for a time range</title>
      <link>https://softlayer.github.io/go/account_disk_usage_metrics/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/go/account_disk_usage_metrics/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
    &amp;quot;fmt&amp;quot;
    &amp;quot;log&amp;quot;
    &amp;quot;time&amp;quot;

    &amp;quot;github.com/softlayer/softlayer-go/services&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/session&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/sl&amp;quot;
)

func main() {
    // Create a session
    sess := session.New()

    // Account service has the method we need
    service := services.GetAccountService(sess)

    // Range: most recent 24 hours
    //
    // Time values are wrapped within an sl.Time type, to facilitate json marshaling
    tEnd := sl.Time(time.Now())
    tStart := sl.Time(tEnd.AddDate(0, 0, -1))

    data, err := service.GetDiskUsageMetricDataByDate(tStart, tEnd)
    if err != nil {
        log.Fatal(err)
    }

    fmt.Printf(&amp;quot;Number of elements returned: %d\n&amp;quot;, len(data))

    for _, d := range data {
        fmt.Printf(&amp;quot;Counter: %.f, Time: %s, Type: %s\n&amp;quot;, *d.Counter, *d.DateTime, *d.Type)
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>