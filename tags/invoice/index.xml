<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Invoice on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/invoice/</link>
    <description>Recent content in Invoice on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Apr 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/invoice/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Get Invoice for PowerShell</title>
      <link>https://softlayer.github.io/rest/getInvoicesPowershell/</link>
      <pubDate>Mon, 25 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/getInvoicesPowershell/</guid>
      <description>This powershell script will get the filename for the PDF and Excel invoices and save them locally. Requires PowerShell Version 4 for the Invoke-WebRequest and ConvertFrom-Json functions.
# Start SL script $MyScriptName = &amp;quot;_Call_SL_Rest&amp;quot; $HomeDir = pwd $date4file = get-date -uformat &amp;quot;%Y-%m-%d_%H%M%S&amp;quot; $log = &amp;quot;$HomeDir\&amp;quot;+$date4file+$MyScriptName+&amp;quot;.log&amp;quot; $BaseURL = &amp;quot;https://api.softlayer.com/rest/v3&amp;quot; Add-Content $log &amp;quot;$(Get-Date -format s) : Start&amp;quot; $SLUser = &amp;quot;SLUSERNAME&amp;quot; $SLapikey = &amp;quot;APIKEY&amp;quot; $LoginPair = &amp;quot;$($SLUser):$($SLapikey)&amp;quot; $encodedCreds = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($LoginPair)) $basicAuthValue = &amp;quot;Basic $encodedCreds&amp;quot; $Headers = @{ Authorization = $basicAuthValue } $GSTURL=&amp;quot;$($BaseURL)/SoftLayer_Account/getObject&amp;quot; #$GSTURL=&amp;quot;$($BaseURL)/SoftLayer_Account/getObject?</description>
    </item>
    
    <item>
      <title>Determining your next bill</title>
      <link>https://softlayer.github.io/python/nextinvoice/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/nextinvoice/</guid>
      <description>import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() nextInvoiceAmount = client[&#39;SoftLayer_Account&#39;].getNextInvoiceTotalAmount() pp(nextInvoiceAmount)  </description>
    </item>
    
    <item>
      <title>Determining your next bill</title>
      <link>https://softlayer.github.io/php/getnextinvoice/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/getnextinvoice/</guid>
      <description>&amp;lt;?php require_once &#39;./vendor/autoload.php&#39;; $apiUsername = &#39;&#39;; $apiKey = &#39;&#39;; $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Account&#39;, null, $apiUsername, $apiKey); try { $nextinvoice = $client-&amp;gt;getNextInvoiceTotalAmount(); print_r($nextinvoice); } catch (\Exception $e) { die(&#39;Unable to get next invoice: &#39; . $e-&amp;gt;getMessage()); } ?&amp;gt;  </description>
    </item>
    
    <item>
      <title>Determining your next bill</title>
      <link>https://softlayer.github.io/ruby/nextinvoice/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/nextinvoice/</guid>
      <description> # SoftLayer library will look to see if these global variables are set when making a connection # more information here: https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L58 require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new total_amount = client[&#39;Account&#39;].getNextInvoiceTotalAmount puts &amp;quot;Next invoice total amount: #{total_amount}&amp;quot;  Example Output Next invoice total amount: 250.26  </description>
    </item>
    
    <item>
      <title>Retrieve the amount of your next invoice</title>
      <link>https://softlayer.github.io/perl/nextbilling/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/perl/nextbilling/</guid>
      <description>use lib &amp;quot;./softlayer-api-perl-client/&amp;quot;; use SoftLayer::API::SOAP; use Data::Dumper; my $api_username = &amp;quot;x&amp;quot;; my $api_key = &amp;quot;a&amp;quot;; my $client = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Account&#39;, undef, $api_username, $api_key); my $result; $result = $client-&amp;gt;getNextInvoiceTotalAmount(); print &amp;quot;Next Invoice Total: &amp;quot; . $result-&amp;gt;result . &amp;quot;\$\n&amp;quot; ;  </description>
    </item>
    
    <item>
      <title>Get top level billing items for all owned accounts</title>
      <link>https://softlayer.github.io/php/get_invoice_top_level_items/</link>
      <pubDate>Sun, 24 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/get_invoice_top_level_items/</guid>
      <description>With a given date range, get all the invoice details for all of the owned brands, and all of their owned accounts. The $filter can be used to get just a single accounts invoices, just take off the -&amp;gt;allOwnedAccounts bits
&amp;lt;?php require_once __DIR__.&#39;/vendor/autoload.php&#39;; /** * This class structure is mostly used so this can be run as a script. * Most of the print statements use fancy bash color codes to make things pretty */ class topBillingItems { function __construct() { $this-&amp;gt;apiUsername = &#39;&#39;; $this-&amp;gt;apiKey = &#39;&#39;; $this-&amp;gt;startDate = new DateTime(&#39;2015-02-12T00:00:00&#39;, new DateTimeZone(&#39;CST&#39;)); $this-&amp;gt;endDate = new DateTime(&#39;2015-03-12T00:00:00&#39;, new DateTimeZone(&#39;CST&#39;)); } /*!</description>
    </item>
    
    <item>
      <title>Get Invoices</title>
      <link>https://softlayer.github.io/php/get_invoice/</link>
      <pubDate>Sun, 22 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/get_invoice/</guid>
      <description>&amp;lt;?php require_once __DIR__.&#39;/vendor/autoload.php&#39;; $apiUser = &#39;&#39;; $key = &#39;&#39;; //The date does need to be in this specific format $startDate = new DateTime(&#39;2014-11-01T13:05:25&#39;, new DateTimeZone(&#39;CST&#39;)); $endDate = new DateTime(&#39;2014-12-01T09:53:51&#39;, new DateTimeZone(&#39;CST&#39;)); $accountClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Account&#39;, null, $apiUser, $key); $filter = new stdClass(); $filter-&amp;gt;invoices = new stdClass(); // $filter-&amp;gt;invoices-&amp;gt;accountId = new stdClass(); // $filter-&amp;gt;invoices-&amp;gt;accountId-&amp;gt;operation = &#39;= 391780&#39;; $filter-&amp;gt;invoices-&amp;gt;createDate = new stdClass(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;operation = &#39;betweenDate&#39;; $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options = array(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0] = new stdClass(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;name = &#39;startDate&#39;; $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;value = array($startDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;)); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1] = new stdClass(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;name = &#39;endDate&#39;; $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;value = array($endDate-&amp;gt;format(&#39;m/d/Y H:i:s&#39;)); $objectMask = new \SoftLayer\Common\ObjectMask(); $objectMask-&amp;gt;invoices; $accountClient-&amp;gt;setObjectFilter($filter); $accountClient-&amp;gt;setObjectMask($objectMask); $invoices = $accountClient-&amp;gt;getObject(); print_r($invoices); ?</description>
    </item>
    
  </channel>
</rss>