<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Placeorder on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/placeorder/</link>
    <description>Recent content in Placeorder on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/placeorder/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to order Vlans</title>
      <link>https://softlayer.github.io/rest/orderVlan/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/orderVlan/</guid>
      <description>There are a few steps in preparing to order a VLAN.
Find the DC name Lets start by finding the datacenter we want to order in.
curl -u $SL_USER:$SL_APIKEY &#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Product_Package/571/getRegions.json?objectMask=mask\[description,keyname\]&#39; | python -m json.tool  Keep track of the KeyName of the location you want to order from.
[{&amp;quot;description&amp;quot;: &amp;quot;HOU02 - Houston&amp;quot;, &amp;quot;keyname&amp;quot;: &amp;quot;HOUSTON02&amp;quot; }]  Find the correct router (optional) If you want the new VLAN to be behind a specific router, you need to find the ID of that router.</description>
    </item>
    
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://softlayer.github.io/python/migratevsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/migratevsi/</guid>
      <description>You can use the following python example to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.
import SoftLayer import json # The package for Virtual Guests packageId = 46 # Our exising VSI ID virtualGuests = [ { &amp;quot;id&amp;quot;:25367125 } ] # The price item id for a 25GB Local Primary Drive.</description>
    </item>
    
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://softlayer.github.io/ruby/migrateVsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/migrateVsi/</guid>
      <description>You can use the following ruby example to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.
require &#39;softlayer_api&#39; require &#39;pp&#39; softlayer_client = SoftLayer::Client.new(:timeout =&amp;gt; 120) client = softlayer_client.service_named(&#39;Product_Order&#39;) # The package for Virtual Guests packageId = 46 # The price item id for a 25GB Local Primary Drive.</description>
    </item>
    
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://softlayer.github.io/rest/migrateVsiDisk/</link>
      <pubDate>Fri, 04 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/migrateVsiDisk/</guid>
      <description>Operation: POST
Method: SoftLayer_Product_Order::placeOrder()
URL: SoftLayer_Product_Order/verifyOrder`
Getting the proper priceId You can use the following python example to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.
Example CURL:</description>
    </item>
    
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://softlayer.github.io/ruby/orderLB/</link>
      <pubDate>Wed, 18 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderLB/</guid>
      <description>require &#39;rubygems&#39; require &#39;softlayer_api&#39; location = &#39;DALLAS06&#39; # The id of the SoftLayer_Product_Package you wish to order. # In this case it is a Local Load Balancer. packageId = 194 # Build a skeleton SoftLayer_Product_Item_Price objects. These objects contain # much more than ids, but SoftLayer&#39;s ordering system only needs the price&#39;s id # to know what you want to order. # Every item in SoftLayer&#39;s product catalog is assigned an id.</description>
    </item>
    
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://softlayer.github.io/rest/orderLB/</link>
      <pubDate>Thu, 05 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/orderLB/</guid>
      <description>Operation: POST
Method: SoftLayer_Product_Order::verifyOrder() Method: SoftLayer_Product_Order::placeOrder()
URL: SoftLayer_Product_Order/verifyOrder URL: SoftLayer_Product_Order/placeOrder
In the following example I am ordering a Local Load Balancer 500 VIP connections (PriceId: 2078) in the Dallas 06 Datacenter (locationId: 154820).
Example CURL using verifyOrder:
curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X POST -d &#39;{&amp;quot;parameters&amp;quot;:[{&amp;quot;packageId&amp;quot;:194,&amp;quot;location&amp;quot;:154820,&amp;quot;quantity&amp;quot;:1,&amp;quot;prices&amp;quot;:[{&amp;quot;id&amp;quot;:2078}]}]}&#39; &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/verifyOrder&amp;quot;  Example CURL using placeOrder:
curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X POST -d &#39;{&amp;quot;parameters&amp;quot;:[{&amp;quot;packageId&amp;quot;:194,&amp;quot;location&amp;quot;:154820,&amp;quot;quantity&amp;quot;:1,&amp;quot;prices&amp;quot;:[{&amp;quot;id&amp;quot;:2078}]}]}&#39; &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/placeOrder&amp;quot;  </description>
    </item>
    
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://softlayer.github.io/python/createBWpool/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createBWpool/</guid>
      <description>import SoftLayer # For nice debug output: from pprint import pprint as pp # Set the needed values to create a new item accountId = 111111 # The values for bandwidthAllotmentTypeId are: (1) and (2) # where: (1) means this allotment is marked as a virtual private rack or # (2) bandwidth pooling bandwidthAllotmentTypeId = 2 # To get locationGroupId, execute: SoftLayer_Location_Group::getAllObjects locationGroupId = 1 newBandwithPoolName = &#39;newBWpool&#39; # Create an object template to create the item.</description>
    </item>
    
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://softlayer.github.io/python/createLBpython/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createLBpython/</guid>
      <description>&amp;quot;&amp;quot;&amp;quot; Order a load balancer Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;quot;&amp;quot;&amp;quot; import SoftLayer import json # The package to order load balancers. packageId = 194 # Build a skeleton SoftLayer_Product_Item_Price objects. These objects contain # much more than ids, but SoftLayer&#39;s ordering system only needs the price&#39;s id # to know what you want to order. # Since Load Balancers can have Location Specific itemPriceId&#39;s I am using the following script to # return just the standard (location agnostic) itemPriceId&#39;s.</description>
    </item>
    
    <item>
      <title>Upgrade Hardware and Virtual Servers</title>
      <link>https://softlayer.github.io/python/upgrade_examples/</link>
      <pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/upgrade_examples/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() &amp;quot;&amp;quot;&amp;quot; Prints out what can be upgraded on a server by category. &amp;quot;&amp;quot;&amp;quot; def getUpgradeItemPrices(self, hardware_id, service=&#39;SoftLayer_Hardware_Server&#39;): result = self.client[service].getUpgradeItemPrices(id=hardware_id) last_id = 0 for item in result: now_id = item[&#39;categories&#39;][0][&#39;id&#39;] if now_id != last_id: print(&amp;quot;%s (%s)&amp;quot; % (item[&#39;categories&#39;][0][&#39;name&#39;], item[&#39;categories&#39;][0][&#39;id&#39;])) last_id = now_id print(&amp;quot;\t %s (%s)&amp;quot; % (item[&#39;item&#39;][&#39;description&#39;], item[&#39;id&#39;])) &amp;quot;&amp;quot;&amp;quot; Get the available maintenance windows that exist for a server.</description>
    </item>
    
    <item>
      <title>Order Firewall and Security Appliances</title>
      <link>https://softlayer.github.io/php/orderFirewalls/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/orderFirewalls/</guid>
      <description>&amp;lt;?php require_once &#39;./vendor/autoload.php&#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &#39;&#39;; $this-&amp;gt;apiKey = &#39;&#39;; } function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;quot;ID -&amp;gt; Name \n&amp;quot;; foreach($packages as $package) { print $package-&amp;gt;id . &amp;quot; -&amp;gt; &amp;quot; . $package-&amp;gt;name . &amp;quot;\n&amp;quot;; } } function getPackageById($id=0, $onlyShow=0, $showPrices=1) { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $package = $packageClient-&amp;gt;getItems(); print &amp;quot;ID, KeyName, Description \n&amp;quot;; foreach ($package as $item) { if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) { print $item-&amp;gt;id .</description>
    </item>
    
    <item>
      <title>Order an SSL Certificate</title>
      <link>https://softlayer.github.io/php/orderSSLCert/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/orderSSLCert/</guid>
      <description>Generating a CSR You will need a csr to make this request, it should be on your local file system.
openssl genrsa -out domain.key 2048 openssl req -new -sha256 -key domain.key -out domain.csr  &amp;lt;?php require_once &#39;./vendor/autoload.php&#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &#39;&#39;; $this-&amp;gt;apiKey = &#39;&#39;; } /* * Package 0 is the &amp;quot;Everything else&amp;quot; pacakge, which contains SSL certain. But if you didn&#39;t remember that * this function will get you that information */ function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;quot;ID -&amp;gt; Name \n&amp;quot;; foreach($packages as $package) { print $package-&amp;gt;id .</description>
    </item>
    
    <item>
      <title>Order an SSL Certificate</title>
      <link>https://softlayer.github.io/python/orderSSLCert/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderSSLCert/</guid>
      <description>Generating a CSR You will need a csr to make this request, it should be on your local file system.
The contents of the CSR MATTER, they need to match the information for what you are ordering. + orderApproverEmailAddress must match the Email Address of the CSR + The CSR Common name must be set and must be a part of the orderApproverEmailAddress
$ openssl genrsa -out domain.key 2048 $ openssl req -new -sha256 -key domain.</description>
    </item>
    
    <item>
      <title>Ordering with placeOrder</title>
      <link>https://softlayer.github.io/rest/place_order/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/place_order/</guid>
      <description>Operation: POST
Method: SoftLayer_Product_Order::placeOrder()
URL: SoftLayer_Product_Order/verifyOrder`
Example CURL:
curl -u userid:api_key -X POST --data @create.json https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/verifyOrder  Input JSON:
{ &amp;quot;parameters&amp;quot; : [ { &amp;quot;packageId&amp;quot; : 126, &amp;quot;location&amp;quot; :449494, &amp;quot;quantity&amp;quot; : 1, &amp;quot;hardware&amp;quot;: [{ &amp;quot;hostname&amp;quot;: &amp;quot;TEST&amp;quot;, &amp;quot;domain&amp;quot;: &amp;quot;test1&amp;quot; }], &amp;quot;prices&amp;quot;: [ {&amp;quot;id&amp;quot;: 13739}, {&amp;quot;id&amp;quot;: 13748}, {&amp;quot;id&amp;quot;: 1267}, {&amp;quot;id&amp;quot;: 342}, {&amp;quot;id&amp;quot;: 21141}, {&amp;quot;id&amp;quot;: 58}, {&amp;quot;id&amp;quot;: 876}, {&amp;quot;id&amp;quot;: 57}, {&amp;quot;id&amp;quot;: 55}, {&amp;quot;id&amp;quot;: 21}, {&amp;quot;id&amp;quot;: 906}, {&amp;quot;id&amp;quot;: 420}, {&amp;quot;id&amp;quot;: 418}, {&amp;quot;id&amp;quot;: 37620} ] } ] }  The Price Ids Explained Use getItemPrices to find the IDs and Items you need</description>
    </item>
    
    <item>
      <title>Order a vyatta server with placeOrder</title>
      <link>https://softlayer.github.io/php/order_vyatta/</link>
      <pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/order_vyatta/</guid>
      <description>&amp;lt;?php require_once &#39;./vendor/autoload.php&#39;; $apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;); $apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;); $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Order&#39;, null, $apiUser, $key); $template = new stdClass(); $template_extra = new stdClass(); $template-&amp;gt;packageId = 174; $template-&amp;gt;location = 224092; $template-&amp;gt;quantity = 1; $template_extra-&amp;gt;os = 21; //vyatta $template_extra-&amp;gt;hostname = &#39;foo-vga-small&#39;; $template_extra-&amp;gt;domain = &#39;softlayer-singapore-test.com&#39;; //These might be invalid now, please double check on ordering $template_extra-&amp;gt;price_id = array(13739, // Single Quad Xeon 1270 3.4G 8M 21010, // 4G 878, // Raid //31693, // Raid 1 1267, // 500G 274, // 1GbE 342, // 20T // 21, // 1IP 56, // Ping/TCP Mon 57, // Notification ); $my_template = new stdClass(); for ($cnt = 0; $cnt &amp;lt; $template-&amp;gt;quantity; $cnt++) { $domain = new stdClass(); $domain-&amp;gt;hostname = &amp;quot;$template_extra-&amp;gt;hostname-$cnt&amp;quot;; $domain-&amp;gt;domain = $template_extra-&amp;gt;domain; $template-&amp;gt;hardware[] = $domain; } if (empty($template-&amp;gt;imageTemplateGlobalIdentifier)) { $template_extra-&amp;gt;price_id[] = $template_extra-&amp;gt;os; } foreach ($template_extra-&amp;gt;price_id as $id) { $price = new stdClass(); $price-&amp;gt;id = $id; $template-&amp;gt;prices[] = $price; } $my_template-&amp;gt;orderContainers = array(); $my_template-&amp;gt;orderContainers[0]-&amp;gt;prices = $template-&amp;gt;prices; $my_template-&amp;gt;orderContainers[0]-&amp;gt;hardware = $template-&amp;gt;hardware; $my_template-&amp;gt;orderContainers[0]-&amp;gt;quantity = $template-&amp;gt;quantity; $my_template-&amp;gt;orderContainers[0]-&amp;gt;location = $template-&amp;gt;location; $my_template-&amp;gt;orderContainers[0]-&amp;gt;packageId = $template-&amp;gt;packageId; print_r($my_template); $result = $client-&amp;gt;verifyOrder($my_template); print_r($result);  </description>
    </item>
    
  </channel>
</rss>