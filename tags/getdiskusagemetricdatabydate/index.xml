<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getdiskusagemetricdatabydate on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/getdiskusagemetricdatabydate/</link>
    <description>Recent content in Getdiskusagemetricdatabydate on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Sep 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/getdiskusagemetricdatabydate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Get disk usage metrics for a time range</title>
      <link>https://softlayer.github.io/go/account_disk_usage_metrics/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/account_disk_usage_metrics/</guid>
      <description>package main import ( &amp;quot;fmt&amp;quot; &amp;quot;log&amp;quot; &amp;quot;time&amp;quot; &amp;quot;github.com/softlayer/softlayer-go/services&amp;quot; &amp;quot;github.com/softlayer/softlayer-go/session&amp;quot; &amp;quot;github.com/softlayer/softlayer-go/sl&amp;quot; ) func main() { // Create a session sess := session.New() // Account service has the method we need service := services.GetAccountService(sess) // Range: most recent 24 hours // // Time values are wrapped within an sl.Time type, to facilitate json marshaling tEnd := sl.Time(time.Now()) tStart := sl.Time(tEnd.AddDate(0, 0, -1)) data, err := service.GetDiskUsageMetricDataByDate(tStart, tEnd) if err != nil { log.</description>
    </item>
    
  </channel>
</rss>