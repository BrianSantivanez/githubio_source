<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Users on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/users/</link>
    <description>Recent content in Users on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 May 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/users/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Find out which user placed an order</title>
      <link>https://softlayer.github.io/rest/which_user_placed_order/</link>
      <pubDate>Thu, 26 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/which_user_placed_order/</guid>
      <description>Operation: GET
Method: SoftLayer_Account::getOrders()
URL: SoftLayer_Account/getOrders
Example CURL:
curl -su userid:api_key &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Account/getOrders?objectMask=mask\[userRecord\[username\]\]&amp;quot;  Example Response:
{ &amp;quot;accountId&amp;quot;: 1234, &amp;quot;createDate&amp;quot;: &amp;quot;2014-02-04T11:45:47-06:00&amp;quot;, &amp;quot;id&amp;quot;: 99999999, &amp;quot;impersonatingUserRecordId&amp;quot;: null, &amp;quot;modifyDate&amp;quot;: &amp;quot;2014-02-04T11:45:53-06:00&amp;quot;, &amp;quot;orderQuoteId&amp;quot;: null, &amp;quot;orderTypeId&amp;quot;: 7, &amp;quot;presaleEventId&amp;quot;: null, &amp;quot;privateCloudOrderFlag&amp;quot;: false, &amp;quot;status&amp;quot;: &amp;quot;APPROVED&amp;quot;, &amp;quot;userRecord&amp;quot;: { &amp;quot;username&amp;quot;: &amp;quot;SL1234&amp;quot; }, &amp;quot;userRecordId&amp;quot;: 111111  Operation: GET
Method: SoftLayer_Billing_Order::getObject()
URL: SoftLayer_Billing_Order/getObject
Example CURL:
curl -su userid:api_key &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Billing_Order/99999999/getObject?objectMask=mask\[userRecord\[username\]\]&amp;quot;  Example Response:
{ &amp;quot;accountId&amp;quot;: 1234, &amp;quot;createDate&amp;quot;: &amp;quot;2014-02-04T11:45:47-06:00&amp;quot;, &amp;quot;id&amp;quot;: 99999999, &amp;quot;impersonatingUserRecordId&amp;quot;: null, &amp;quot;modifyDate&amp;quot;: &amp;quot;2014-02-04T11:45:53-06:00&amp;quot;, &amp;quot;orderQuoteId&amp;quot;: null, &amp;quot;orderTypeId&amp;quot;: 7, &amp;quot;presaleEventId&amp;quot;: null, &amp;quot;privateCloudOrderFlag&amp;quot;: false, &amp;quot;status&amp;quot;: &amp;quot;APPROVED&amp;quot;, &amp;quot;userRecord&amp;quot;: { &amp;quot;username&amp;quot;: &amp;quot;SL1234&amp;quot; }, &amp;quot;userRecordId&amp;quot;: 111111  Note specifying &amp;ldquo;userRecord[username]&amp;rdquo; in the objectMask will make the API call ONLY get the username for each order.</description>
    </item>
    
    <item>
      <title>Manage Users</title>
      <link>https://softlayer.github.io/python/manageUsers/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/manageUsers/</guid>
      <description>Creates a user, sets up proper permissions, sets up devices access restrictions, creates API keys and orders the user a server.
import SoftLayer.API from pprint import pprint as pp def create_user(username, password): user_template = { &#39;username&#39;: username, &#39;firstName&#39;: &#39;API&#39;, &#39;lastName&#39;: &#39;Learner&#39;, &#39;email&#39;: &#39;someone@somewhere.com&#39;, &#39;companyName&#39;: &#39;IBM&#39;, &#39;address1&#39;: &#39;123 api road&#39;, &#39;city&#39;: &#39;Houston&#39;, &#39;country&#39;: &#39;US&#39;, &#39;postalCode&#39;: &#39;TX 77002&#39;, &#39;userStatusId&#39;: 1001, &#39;timezoneId&#39;: 107 } created_user = client[&#39;User_Customer&#39;].createObject( user_template, password, password) return created_user def get_permissions(_id): permissions = client[&#39;User_Customer&#39;].</description>
    </item>
    
    <item>
      <title>Set user permissions</title>
      <link>https://softlayer.github.io/ruby/set_permission/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/set_permission/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new user_service = client[&#39;User_Customer&#39;] # List the user permissions USER_ID = 172536 # Change me. User id of user to inspect. pp user_service.object_with_id(USER_ID).getPermissions # add permission new_permission = { keyName: &#39;TICKET_ADD&#39; } result = user_service.object_with_id(USER_ID).addPortalPermission(new_permission) unless result puts &#39;Failed to add permission&#39; exit 1 end # list user permissions again pp user_service.</description>
    </item>
    
    <item>
      <title>Set user permissions</title>
      <link>https://softlayer.github.io/python/set_permission/</link>
      <pubDate>Wed, 16 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_permission/</guid>
      <description>import SoftLayer from pprint import pprint as pp class setPermissions(): def __init__(self): self.client = SoftLayer.Client() def main(self, user_id): permissions = self.client[&#39;User_Customer&#39;].getPermissions(id=user_id) print(&amp;quot;=== OLD PERMISSIONS ===&amp;quot;) self.printPermissions(permissions) setperm = {&#39;keyName&#39;: &amp;quot;TICKET_ADD&amp;quot;} self.client[&#39;User_Customer&#39;].addPortalPermission(setperm, id=user_id) permissions = self.client[&#39;User_Customer&#39;].getPermissions(id=user_id) print(&amp;quot;=== NEW PERMISSIONS ===&amp;quot;) self.printPermissions(permissions) def getUsers(self): users = self.client[&#39;Account&#39;].getUsers() print(&amp;quot;ID - USERNAME - E-MAIL&amp;quot;) for user in users: print(&amp;quot;%s - %s - %s &amp;quot; % (user[&#39;id&#39;], user[&#39;username&#39;], user[&#39;email&#39;])) def printPermissions(sefl, permissions): for permission in permissions: print(&amp;quot;%s&amp;quot; % permission[&#39;keyName&#39;]) if __name__ == &amp;quot;__main__&amp;quot;: main = setPermissions() # CHANGE ME my_user = 439723 main.</description>
    </item>
    
  </channel>
</rss>