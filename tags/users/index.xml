<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Users on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/users/</link>
    <description>Recent content in Users on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/users/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>User Access Details</title>
      <link>https://softlayer.github.io/python/user_access_details/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/user_access_details/</guid>
      <description>This script gets each user, and which dedicatedHosts, hardware, and virtual guests they have permissions to view.
The hasFullAccessFlags are used to determine if a user has access to ALL hosts of that type or not. We are using that flag here to condense the output, but each user will still have the full list of hardware under their account if they have access to all.
&amp;#34;&amp;#34;&amp;#34; List of users that have access to a certain set of devices.</description>
    </item>
    
    <item>
      <title>Manage Users</title>
      <link>https://softlayer.github.io/python/manageUsers/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/manageUsers/</guid>
      <description>This example is a set of scripts I&amp;rsquo;ve used for creating and disabling users. This will ONLY create SoftLayer users, and does not work for Bluemix/IbmCloud type accounts.
Some of this functionality is also in the SLCLI now.
Create Users Creates a user, sets up proper permissions, sets up devices access restrictions, creates API keys and orders the user a server.
import SoftLayer.API from pprint import pprint as pp def create_user(username, password): user_template = { &amp;#39;username&amp;#39;: username, &amp;#39;firstName&amp;#39;: &amp;#39;API&amp;#39;, &amp;#39;lastName&amp;#39;: &amp;#39;Learner&amp;#39;, &amp;#39;email&amp;#39;: &amp;#39;someone@somewhere.</description>
    </item>
    
    <item>
      <title>disableServersAndUser.php</title>
      <link>https://softlayer.github.io/php/disableServersAndUser.php/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/disableServersAndUser.php/</guid>
      <description>&amp;lt;?php require_once (&amp;#39;Softlayer/SoapClient.class.php&amp;#39;); $apiUsername = &amp;#39;&amp;#39;; $apiKey = &amp;#39;apikey_goes_here&amp;#39;; $accountClient = SoftLayer_SoapClient::getClient(&amp;#39;SoftLayer_Account&amp;#39;, null, $apiUsername, $apiKey); $userClient = SoftLayer_SoapClient::getClient(&amp;#39;SoftLayer_User_Customer&amp;#39;, null, $apiUsername, $apiKey); $virtualGuestClient = SoftLayer_SoapClient::getClient(&amp;#39;SoftLayer_Virtual_Guest&amp;#39;, null, $apiUsername, $apiKey); $accountClient-&amp;gt;setObjectMask(&amp;#34;mask[id, userStatus, username]&amp;#34;); $users = $accountClient-&amp;gt;getUsers(); var_dump($users); $userToDisable = &amp;#39;username&amp;#39;; #$ccis = $userClient-&amp;gt;getVirtualGuests(); #print ($ccis); // Loop through each user on the account and identify by username foreach ($users as $user) { if ($user-&amp;gt;username == $userToDisable) { // set the userId for the userClient $userClient-&amp;gt;setInitParameter($user-&amp;gt;id); // Shutdown a users CCIs $ccis = $userClient-&amp;gt;getVirtualGuests(); foreach ($ccis as $cci) { $virtualGuestClient-&amp;gt;setInitParameter($cci-&amp;gt;id); # $virtualGuestClient-&amp;gt;powerOffSoft(); print ($virtualGuestClient); } // Disable the user $templateObject = new stdClass(); $templateObject-&amp;gt;id = $user-&amp;gt;id; $templateObject-&amp;gt;userStatusId = 1002; // 1001 for enabled #$result = $userClient-&amp;gt;editObject($templateObject); } } ?</description>
    </item>
    
    <item>
      <title>get_user_status.py</title>
      <link>https://softlayer.github.io/python/get_user_status.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_user_status.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get User status. This script will list the status of sub-users similar to the view displayed at https://control.softlayer.com/account/users it calls to SoftLayer_User_Customer::getChildUsers method to retrieve the user list. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer from prettytable import PrettyTable &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;&amp;#39; API_KEY = &amp;#39;apikey_goes_here&amp;#39; # Set the User ID of the user we want to get the information, we can get this information by # SoftLayer_Account::getUsers method.</description>
    </item>
    
    <item>
      <title>AddAllPermissionsForUsers.php</title>
      <link>https://softlayer.github.io/php/AddAllPermissionsForUsers.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/AddAllPermissionsForUsers.php/</guid>
      <description>&amp;lt;?php /** * Add All Portal Permission for users * * This script adds all permissions from a portal user&amp;#39;s permission set. In this case it adds for multiple users. * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addBulkPortalPermission * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission * @see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers * @see http://sldn.softlayer.com/article/Object-Filters * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#34;C:/PhpSoftLayer/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;); /** * SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * SoftLayer API key * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the usernames to remove permissions * @var array() */ $users = array(&amp;#34;user1&amp;#34;, &amp;#34;user2&amp;#34;, &amp;#34;user3&amp;#34;); /* * Create SoftLayer API client object for SoftLayer_Account, SoftLayer_User_Customer and * SoftLayer_User_Customer_CustomerPermission_Permission services */ $account = SoftLayer_SoapClient::getClient(&amp;#34;SoftLayer_Account&amp;#34;, null, $username, $apiKey); $client = SoftLayer_SoapClient::getClient(&amp;#34;SoftLayer_User_Customer&amp;#34;, null, $username, $apiKey); $customerPermission = SoftLayer_SoapClient::getClient(&amp;#34;SoftLayer_User_Customer_CustomerPermission_Permission&amp;#34;, null, $username, $apiKey); // Declare an object filter, to retrieve users with the specific usernames $filter = new stdClass(); $filter -&amp;gt; users = new stdClass(); $filter -&amp;gt; users -&amp;gt; username = new stdClass(); $filter -&amp;gt; users -&amp;gt; username -&amp;gt; operation = &amp;#34;in&amp;#34;; $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options = array(); $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options[0] = new stdClass(); $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options[0] -&amp;gt; name = &amp;#34;data&amp;#34;; $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options[0] -&amp;gt; value = $users; $account -&amp;gt; setObjectFilter($filter); // Get Users $receiptUsers = $account -&amp;gt; getUsers(); // Get All Permissions $permissions = $customerPermission -&amp;gt; getAllObjects(); for ($i = 0; $i &amp;lt; sizeof($receiptUsers); $i++) { // Set init parameters to the Client $client -&amp;gt; setInitParameter($receiptUsers[$i] -&amp;gt; id); try { /* * Add permissions, if you want to remove all permissions for users, change the below line for: * $result = $client -&amp;gt; removeBulkPortalPermission($permissions); */ $result = $client -&amp;gt; addBulkPortalPermission($permissions); // Print Result print_r(&amp;#34;All permissions were added for &amp;#34; .</description>
    </item>
    
    <item>
      <title>AddApiKey.cs</title>
      <link>https://softlayer.github.io/csharp/AddApiKey.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/AddApiKey.cs/</guid>
      <description>ï»¿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;AddApiKey.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace Users { using System; using System.Collections.Generic; class AddApiKey { /// &amp;lt;summary&amp;gt; /// This script adds api key for users. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addApiAuthenticationKey /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(string [] args) { //Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Declare the usernames that you wish to add api keys List&amp;lt;string&amp;gt; usernameList = new List&amp;lt;string&amp;gt;(); usernameList.</description>
    </item>
    
    <item>
      <title>AddApiKeyForUsers.php</title>
      <link>https://softlayer.github.io/php/AddApiKeyForUsers.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/AddApiKeyForUsers.php/</guid>
      <description>&amp;lt;?php /** * Add Api Authentication Keys for users * * This script adds api authentication keys for usernames specified in $users array. A user can only * have a single authentication key. * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addApiAuthenticationKey * @see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers * @see http://sldn.softlayer.com/article/Object-Filters * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#34;C:/PhpSoftLayer/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;); /** * SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * SoftLayer API key * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the usernames to add Api Authentication Keys.</description>
    </item>
    
    <item>
      <title>AddBulkDevicesAccess.cs</title>
      <link>https://softlayer.github.io/csharp/AddBulkDevicesAccess.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/AddBulkDevicesAccess.cs/</guid>
      <description>ï»¿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;AddBulkDevicesAccess.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace Users { using System; using System.Collections.Generic; class AddBulkDevicesAccess { /// &amp;lt;summary&amp;gt; /// This script adds multiple devices (Virtual Servers or Hardware objects) to a portal users&amp;#39;s access list. /// It is only necessary to specify the ip addresses from devices and the usernames from users that you wish to allow access to the devices.</description>
    </item>
    
    <item>
      <title>AddBulkPortalPermission.cs</title>
      <link>https://softlayer.github.io/csharp/AddBulkPortalPermission.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/AddBulkPortalPermission.cs/</guid>
      <description>ï»¿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;AddBulkPortalPermission.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace Users { using System; using System.Collections.Generic; class AddBulkPortalPermission { /// &amp;lt;summary&amp;gt; /// This script adds multiple permissions to a portal user&amp;#39;s permissions set. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addBulkPortalPermission /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { //Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; /* * Declare a string array containing the keyNames from the permissions that you wish to add for users * The following method helps you yo get all of them: SoftLayer_User_Customer_CustomerPermissions_Permissions::getAllObjects * http://sldn.</description>
    </item>
    
    <item>
      <title>AddHardwareForUsers.php</title>
      <link>https://softlayer.github.io/php/AddHardwareForUsers.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/AddHardwareForUsers.php/</guid>
      <description>&amp;lt;?php /** * Add Bulk Hardware Access * * This script adds multiple hardware to a portal user&amp;#39;s hardware access list. This script works for multiple * users and the users need to be able the permission: &amp;#34;View Hardware Details&amp;#34;, you can set this in the following * link: https://control.softlayer.com/account/users or using SoftLayer_User_Customer::addPortalPermission by API. * This script works specifying just usernames from users and hostnames from hardware objects. * * Important manual pages: * @see http://sldn.</description>
    </item>
    
    <item>
      <title>AddRandomPermissionsForUsers.php</title>
      <link>https://softlayer.github.io/php/AddRandomPermissionsForUsers.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/AddRandomPermissionsForUsers.php/</guid>
      <description>&amp;lt;?php /** * Add Random Permission for users * * This script adds permissions for specific usernames, you need to configure the usernames in the array $users. * All the permissions that you specified will be added to them. In this case we will generate randomly the permissions. * Also the script has attached an example for specific permissions in comments. * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addBulkPortalPermission * @see http://sldn.</description>
    </item>
    
    <item>
      <title>AddVsiForUsers.php</title>
      <link>https://softlayer.github.io/php/AddVsiForUsers.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/AddVsiForUsers.php/</guid>
      <description>&amp;lt;?php /** * Add Bulk Virtual Guest Access * * This script adds multiple CloudLayer Computing Instances for multiple users to a portal user&amp;#39;s access list. * The users needs to be able the permission: &amp;#34;View Virtual Server Details&amp;#34;, you can set this in the following * page: https://control.softlayer.com/account/users or using SoftLayer_User_Customer::addPortalPermission by API. * This script works specifying just usernames from users and hostnames from virtual guests. * * Important manual pages: * @see http://sldn.</description>
    </item>
    
    <item>
      <title>CopyPermissions.cs</title>
      <link>https://softlayer.github.io/csharp/CopyPermissions.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/CopyPermissions.cs/</guid>
      <description>ï»¿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;CopyPermissions.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace Users { using System; using System.Collections.Generic; class CopyPermissions { /// &amp;lt;summary&amp;gt; /// This script copies permissions from an user to another users /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addBulkPortalPermission /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { //Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Declare the username from which you want to copy its permissions string usernameSource = &amp;#34;usernameSource&amp;#34;; // Declare the usernames for which you want to copy the permissions List&amp;lt;string&amp;gt; usernameList = new List&amp;lt;string&amp;gt;(); usernameList.</description>
    </item>
    
    <item>
      <title>GetApiKeyForUsers.php</title>
      <link>https://softlayer.github.io/php/GetApiKeyForUsers.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/GetApiKeyForUsers.php/</guid>
      <description>&amp;lt;?php /** * Add Api Authentication Keys for users * * This script adds api authentication keys for usernames specified in $users array. A user can only * have a single authentication key. * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addApiAuthenticationKey * @see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers * @see http://sldn.softlayer.com/article/Object-Filters * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#34;C:/PhpSoftLayer/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;); /** * SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * SoftLayer API key * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the usernames to add Api Authentication Keys.</description>
    </item>
    
    <item>
      <title>GetDevicesAccess.php</title>
      <link>https://softlayer.github.io/php/GetDevicesAccess.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/GetDevicesAccess.php/</guid>
      <description>&amp;lt;?php /** * Get Devices Access * * This script retrieves all permissions for multiple users. You need to specify all the users that you want * to retrieve permissions in $users array. This script uses SoftLayer_User_Customer::getPermisions * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getHardware * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getVirtualGuests * @see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers * @see http://sldn.softlayer.com/article/Object-Filters * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#34;C:/PhpSoftLayer/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;); /** * SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * SoftLayer API key * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the usernames to add permissions.</description>
    </item>
    
    <item>
      <title>GetPermissions.php</title>
      <link>https://softlayer.github.io/php/GetPermissions.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/GetPermissions.php/</guid>
      <description>&amp;lt;?php /** * Get Permissions * * This script retrieves all permissions for multiple users. You need to specify all the users that you want * to retrieve permissions in $users array. This script uses SoftLayer_User_Customer::getPermisions * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getPermissions * @see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers * @see http://sldn.softlayer.com/article/Object-Filters * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#34;C:/PhpSoftLayer/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;); /** * SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * SoftLayer API key * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the usernames to add permissions.</description>
    </item>
    
    <item>
      <title>RemoveAllDevicesAccessForUsers.php</title>
      <link>https://softlayer.github.io/php/RemoveAllDevicesAccessForUsers.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/RemoveAllDevicesAccessForUsers.php/</guid>
      <description>&amp;lt;?php /** * Remove Devices Access for users * * This script removes all access for Virtual Guests and Hardware objects for specific users. * This script makes API calls to SoftLayer_User_Customer::removeAllVirtualAccessForThisUser and * SoftLayer_User_Customer::removeAllHardwareAccessForThisUser methods. * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/removeAllVirtualAccessForThisUser * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/removeAllHardwareAccessForThisUser * @see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers * @see http://sldn.softlayer.com/article/Object-Filters * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#34;C:/PhpSoftLayer/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;); /** * SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * SoftLayer API key * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the usernames to remove permissions * @var array() */ $users = array(&amp;#34;user1&amp;#34;, &amp;#34;user2&amp;#34;, &amp;#34;user3&amp;#34;); /* * Create SoftLayer API client object for SoftLayer_Account and SoftLayer_User_Customer */ $account = SoftLayer_SoapClient::getClient(&amp;#34;SoftLayer_Account&amp;#34;, null, $username, $apiKey); $client = SoftLayer_SoapClient::getClient(&amp;#34;SoftLayer_User_Customer&amp;#34;, null, $username, $apiKey); // Declare an object filter, to retrieve users with the specific usernames $filter = new stdClass(); $filter -&amp;gt; users = new stdClass(); $filter -&amp;gt; users -&amp;gt; username = new stdClass(); $filter -&amp;gt; users -&amp;gt; username -&amp;gt; operation = &amp;#34;in&amp;#34;; $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options = array(); $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options[0] = new stdClass(); $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options[0] -&amp;gt; name = &amp;#34;data&amp;#34;; $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options[0] -&amp;gt; value = $users; $account -&amp;gt; setObjectFilter($filter); // Get Users $receiptUsers = $account -&amp;gt; getUsers(); for ($i = 0; $i &amp;lt; sizeof($receiptUsers); $i++) { // Set init parameters to the Client $client -&amp;gt; setInitParameter($receiptUsers[$i] -&amp;gt; id); try { // Remove Hardware objects access $resultHardware = $client -&amp;gt; removeAllHardwareAccessForThisUser(); // Remove Virtual Guests access $resultVsi = $client -&amp;gt; removeAllVirtualAccessForThisUser(); print_r(&amp;#34;User: &amp;#34; .</description>
    </item>
    
    <item>
      <title>RemoveApiKey.cs</title>
      <link>https://softlayer.github.io/csharp/RemoveApiKey.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/RemoveApiKey.cs/</guid>
      <description>ï»¿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;RemoveApiKey.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace Users { using System; using System.Collections.Generic; class RemoveApiKey { /// &amp;lt;summary&amp;gt; /// This script removes api key for users. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getApiAuthenticationKeys /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/removeApiAuthenticationKey /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { //Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Declare the usernames that you wish to remove api keys List&amp;lt;string&amp;gt; usernameList = new List&amp;lt;string&amp;gt;(); usernameList.</description>
    </item>
    
    <item>
      <title>RemoveApiKeyForUsers.php</title>
      <link>https://softlayer.github.io/php/RemoveApiKeyForUsers.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/RemoveApiKeyForUsers.php/</guid>
      <description>&amp;lt;?php /** * Remove Api Authentication Key For Users * * This script removes api authentication keys for usernames specified in $users array. * This script uses the SoftLayer_User_Customer::removeApiAuthenticationKey method. * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/removeApiAuthenticationKey * @see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers * @see http://sldn.softlayer.com/article/Object-Filters * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#34;C:/PhpSoftLayer/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;); /** * SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * SoftLayer API key * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the usernames to remove Api Authentication Keys.</description>
    </item>
    
    <item>
      <title>RemovePermissionsForUsers.php</title>
      <link>https://softlayer.github.io/php/RemovePermissionsForUsers.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/RemovePermissionsForUsers.php/</guid>
      <description>&amp;lt;?php /** * Remove Bulk Portal Permission for users * * This script removes multiple permissions from a portal user&amp;#34;s permission set. In this case it removes for multiple users. * You can retrieve the &amp;#34;keyName&amp;#34; permissions using SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects method. * * Important manual pages: * @see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/removeBulkPortalPermission * @see http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission * @see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers * @see http://sldn.softlayer.com/article/Object-Filters * * @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#34;C:/PhpSoftLayer/SoftLayer/SoftLayer/SoapClient.class.php&amp;#34;); /** * SoftLayer API username * @var string */ $username = &amp;#34;set me&amp;#34;; /** * SoftLayer API key * @var string */ $apiKey = &amp;#34;set me&amp;#34;; /** * Declare the usernames to remove permissions * @var array() */ $users = array(&amp;#34;user1&amp;#34;, &amp;#34;user2&amp;#34;, &amp;#34;user3&amp;#34;); /* * Create SoftLayer API client object for SoftLayer_Account and SoftLayer_User_Customer */ $account = SoftLayer_SoapClient::getClient(&amp;#34;SoftLayer_Account&amp;#34;, null, $username, $apiKey); $client = SoftLayer_SoapClient::getClient(&amp;#34;SoftLayer_User_Customer&amp;#34;, null, $username, $apiKey); // Declare an object filter, to retrieve users with the specific usernames $filter = new stdClass(); $filter -&amp;gt; users = new stdClass(); $filter -&amp;gt; users -&amp;gt; username = new stdClass(); $filter -&amp;gt; users -&amp;gt; username -&amp;gt; operation = &amp;#34;in&amp;#34;; $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options = array(); $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options[0] = new stdClass(); $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options[0] -&amp;gt; name = &amp;#34;data&amp;#34;; $filter -&amp;gt; users -&amp;gt; username -&amp;gt; options[0] -&amp;gt; value = $users; $account -&amp;gt; setObjectFilter($filter); // Get Users $receiptUsers = $account -&amp;gt; getUsers(); /** * Set Permission template with the permissions to be removed from the users */ $permissions = array( array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;TICKET_VIEW&amp;#34;, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;View Tickets&amp;#34;), array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;ACCOUNT_SUMMARY_VIEW&amp;#34;, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;view account summary&amp;#34;), array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;TICKET_SEARCH&amp;#34;, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Search Tickets&amp;#34;), array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;TICKET_ADD&amp;#34;, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Add Tickets&amp;#34;), array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;TICKET_VIEW_BY_HARDWARE&amp;#34;, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;View Tickets by Hardware Access&amp;#34;), array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;TICKET_VIEW_BY_VIRTUAL_GUEST&amp;#34;, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;View Tickets by Computing Instance Access&amp;#34;), array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;USER_MANAGE&amp;#34;, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;add / edit user&amp;#34;), array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;ACCESS_ALL_HARDWARE&amp;#34;, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Access all hardware&amp;#34;), array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;ACCESS_ALL_GUEST&amp;#34;, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Access all guests&amp;#34;)); for ($i = 0; $i &amp;lt; sizeof($receiptUsers); $i++) { // Set init parameters to the Client $client -&amp;gt; setInitParameter($receiptUsers[$i] -&amp;gt; id); try { $result = $client -&amp;gt; removeBulkPortalPermission($permissions); print_r(&amp;#34;The permissions were removed for &amp;#34; .</description>
    </item>
    
    <item>
      <title>UpdateApiKey.cs</title>
      <link>https://softlayer.github.io/csharp/UpdateApiKey.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/UpdateApiKey.cs/</guid>
      <description>ï»¿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;UpdateApiKey.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace Users { using System; using System.Collections.Generic; class UpdateApiKey { /// &amp;lt;summary&amp;gt; /// This script updates api key for users. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/removeApiAuthenticationKey /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addApiAuthenticationKey /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { //Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Declare the usernames that you wish to update their api keys List&amp;lt;string&amp;gt; usernameList = new List&amp;lt;string&amp;gt;(); usernameList.</description>
    </item>
    
    <item>
      <title>UpdateExpirePassword.cs</title>
      <link>https://softlayer.github.io/csharp/UpdateExpirePassword.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/UpdateExpirePassword.cs/</guid>
      <description>ï»¿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;UpdateExpirePassword.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace Users { using System; using System.Collections.Generic; class UpdateExpirePassword { /// &amp;lt;summary&amp;gt; /// This script updates the Expire Password days for users. /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { //Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Declare the usernames that you wish to update the expire password days List&amp;lt;string&amp;gt; usernameList = new List&amp;lt;string&amp;gt;(); usernameList.</description>
    </item>
    
    <item>
      <title>UpdateParentUser.cs</title>
      <link>https://softlayer.github.io/csharp/UpdateParentUser.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/UpdateParentUser.cs/</guid>
      <description>ï»¿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;UpdateParentUser.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace Users { using System; using System.Collections.Generic; class UpdateParentUser { /// &amp;lt;summary&amp;gt; /// This script updates the &amp;#34;parent user&amp;#34; for users /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { //Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Declare the usernames that you wish to change the parent user List&amp;lt;string&amp;gt; usernameList = new List&amp;lt;string&amp;gt;(); usernameList.</description>
    </item>
    
    <item>
      <title>UpdatePassword.cs</title>
      <link>https://softlayer.github.io/csharp/UpdatePassword.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/csharp/UpdatePassword.cs/</guid>
      <description>ï»¿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;UpdatePassword.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace Users { using System; using System.Collections.Generic; class UpdatePassword { /// &amp;lt;summary&amp;gt; /// This script updates the passwords from users. /// It&amp;#39;s necessary to run the script with master user&amp;#39;s credentials /// For more information, review the following links: /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers /// http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/updatePassword /// http://sldn.softlayer.com/article/Object-Filters /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { //Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Declare the new portal password for users string newPassword = &amp;#34;NewPassword123*-&amp;#34;; // Declare the usernames from users that you wish to update the password List&amp;lt;string&amp;gt; usernameList = new List&amp;lt;string&amp;gt;(); usernameList.</description>
    </item>
    
    <item>
      <title>add_portal_permissions.rb</title>
      <link>https://softlayer.github.io/ruby/add_portal_permissions.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/add_portal_permissions.rb/</guid>
      <description># # Add user permission. # This script adds a single permission to an user. # Use the SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects method # to retrieve a list of all permissions available in the SoftLayer. # Important manual Pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addPortalPermission # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) # Set the user ID of the user you want to add permissions, yo can get them using # The method SoftLayer_Account::getUsers.</description>
    </item>
    
    <item>
      <title>add_user_permission.go</title>
      <link>https://softlayer.github.io/go/add_user_permission.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/add_user_permission.go/</guid>
      <description>/* Add user permission. This script shows how to add permissions to an user. Important manual Pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addPortalPermission http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The Id of user you want to add permissions 	userId := 6660647 /* Declare the permission you want to add.</description>
    </item>
    
    <item>
      <title>add_user_permissions.py</title>
      <link>https://softlayer.github.io/python/add_user_permissions.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_user_permissions.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Add user permission. This script adds a single permission to an user. Use the SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects method to retrieve a list of all permissions available in the SoftLayer. Important manual Pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addPortalPermission http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Set the user ID of the user you want to add permissions, you can get it using the method SoftLayer_Account::getUsers.</description>
    </item>
    
    <item>
      <title>create_portal_user.go</title>
      <link>https://softlayer.github.io/go/create_portal_user.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/create_portal_user.go/</guid>
      <description>/* Create Portal User. This script will create a new portal user based in the values set into a SoftLayer_User_Customer template object and then it will pass to SoftLayer_User_Customer::createObject method. Check below references for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Build the skeleton of new user like below 6660647 	userTemplate := datatypes.</description>
    </item>
    
    <item>
      <title>create_portal_user.py</title>
      <link>https://softlayer.github.io/python/create_portal_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_portal_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create Portal User. This script will create a new portal user based in the values set into a SoftLayer_User_Customer template object and then it will pass to SoftLayer_User_Customer::createObject method. Check below references for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; # Create a client instance to connect to the API service.</description>
    </item>
    
    <item>
      <title>create_portal_user.rb</title>
      <link>https://softlayer.github.io/ruby/create_portal_user.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_portal_user.rb/</guid>
      <description># # Create Portal User. # This script will create a new portal user based in the values set into a SoftLayer_User_Customer # template object and then it will pass to SoftLayer_User_Customer::createObject method. # Check below references for more details. # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Set API user account credentials SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; # Set the password for the new user usr_password = &amp;#39;Password!</description>
    </item>
    
    <item>
      <title>create_standard_ticket_getting_subject_and_users.py</title>
      <link>https://softlayer.github.io/python/create_standard_ticket_getting_subject_and_users.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_standard_ticket_getting_subject_and_users.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create standard ticket The script creates a standard ticket, it makes a single call to the SoftLayer_Ticket::createStandardTicket method For more information see: Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/ http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_Ticket_Subject http://sldn.softlayer.com/reference/services/SoftLayer_Ticket_Subject/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Ticket http://sldn.softlayer.com/reference/services/SoftLayer_Ticket/createStandardTicket License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The name of the user to assign the ticket assingToUser = &amp;#34;pulse-lab&amp;#34; # The subject name of the ticket subjectName = &amp;#34;Vyatta Question&amp;#34; # Creating the services client = SoftLayer.</description>
    </item>
    
    <item>
      <title>create_user.go</title>
      <link>https://softlayer.github.io/go/create_user.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/create_user.go/</guid>
      <description>/* Create user The script creates an user, it makes a single call to the SoftLayer_User_Customer::createObject method. For more information see below. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/ http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Build the skeleton of new user like below 	userTemplate := datatypes.</description>
    </item>
    
    <item>
      <title>create_user.py</title>
      <link>https://softlayer.github.io/python/create_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create user The script creates an user, it makes a single call to the SoftLayer_User_Customer::createObject method. For more information see below. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/ http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username. USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://manage.softlayer.com/Administrative/apiKeychain API_KEY = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_User_Customer object # Containing the user you want to create. templateObject = { # Your account ID &amp;#34;accountId&amp;#34;: 1, &amp;#34;address1&amp;#34;: &amp;#34;4849 Alpha Rd.</description>
    </item>
    
    <item>
      <title>delete_user.go</title>
      <link>https://softlayer.github.io/go/delete_user.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/delete_user.go/</guid>
      <description>/* Delete user. This scripts allows to delete a given user, it retrieves the SoftLayer_User_Customer object by the SoftLayer_User_Customer::getObject method and changes the status of user to deleted. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The Id of user you want to delete 	userId := 6660647 /* Build following user structure with the new user status.</description>
    </item>
    
    <item>
      <title>delete_user.py</title>
      <link>https://softlayer.github.io/python/delete_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/delete_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete user. This scripts allows to delete a given user, it retrieves the SoftLayer_User_Customer object by the SoftLayer_User_Customer::getObject method and changes the status of user to deleted. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; # Set the user ID of the user you want to delete, you can get them using # The method SoftLayer_Account::getUsers.</description>
    </item>
    
    <item>
      <title>delete_user.rb</title>
      <link>https://softlayer.github.io/ruby/delete_user.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/delete_user.rb/</guid>
      <description># # Delete user. # This scripts allows to delete a given user, it retrieves the SoftLayer_User_Customer object # by the SoftLayer_User_Customer::getObject method and changes the status of user to deleted. # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) # Set the user ID of the user you want to delete, yo can get it using # The SoftLayer_Account::getUsers method.</description>
    </item>
    
    <item>
      <title>disable_email_invoice_after_creation.py</title>
      <link>https://softlayer.github.io/python/disable_email_invoice_after_creation.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/disable_email_invoice_after_creation.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Disable the email invoice after creation option. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createNotificationSubscriber http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;set me&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) result = userService.deactivateNotificationSubscriber(&amp;#34;BILLING_INVOICE_CREATED&amp;#34;, users[0][&amp;#39;accountId&amp;#39;], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>disable_require_security_questions_on_log_in.py</title>
      <link>https://softlayer.github.io/python/disable_require_security_questions_on_log_in.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/disable_require_security_questions_on_log_in.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Disable require security questions on log in. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) users[0][&amp;#39;secondaryLoginRequiredFlag&amp;#39;] = False result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>disable_user_can_edit_settings.py</title>
      <link>https://softlayer.github.io/python/disable_user_can_edit_settings.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/disable_user_can_edit_settings.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Disable user can edit settings. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) users[0][&amp;#39;secondaryLoginManagementFlag&amp;#39;] = True result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to disable user can edit settings.</description>
    </item>
    
    <item>
      <title>duplicate_user.py</title>
      <link>https://softlayer.github.io/python/duplicate_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/duplicate_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Duplicate user Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/ http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getVirtualGuests http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getHardware http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getPermissions License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer def get_user(username, accountService): &amp;#34;&amp;#34;&amp;#34;Get an user. :param string username: The username of the user you wish to get. :param Softlayer_Account accountService: The Softlayer account service. :returns: A Softlayer_User_Customer object with the information about the user. &amp;#34;&amp;#34;&amp;#34; objectFilter = {&amp;#34;users&amp;#34;: { &amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: username}}} try: users = accountService.getUsers(filter=objectFilter) except SoftLayer.</description>
    </item>
    
    <item>
      <title>edit_user.go</title>
      <link>https://softlayer.github.io/go/edit_user.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/edit_user.go/</guid>
      <description>/* Edit User. Account master users and sub-users who have the User Manage permission in the SoftLayer customer portal can update other user&amp;#39;s information. Use editObject() if you wish to edit a single user account. Users who do not have the User Manage permission can only update their own information. Important manual Pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.</description>
    </item>
    
    <item>
      <title>edit_user.py</title>
      <link>https://softlayer.github.io/python/edit_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Edit User. Account master users and sub-users who have the User Manage permission in the SoftLayer customer portal can update other user&amp;#39;s information. Use editObject() if you wish to edit a single user account. Users who do not have the User Manage permission can only update their own information. Important manual Pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>edit_user.rb</title>
      <link>https://softlayer.github.io/ruby/edit_user.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/edit_user.rb/</guid>
      <description># # Edit User. # Account master users and sub-users who have the User Manage permission in the SoftLayer customer portal # can update other user&amp;#39;s information. Use editObject() if you wish to edit a single user account. # Users who do not have the User Manage permission can only update their own information. # Important manual Pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.</description>
    </item>
    
    <item>
      <title>enable_email_invoice_after_creation.py</title>
      <link>https://softlayer.github.io/python/enable_email_invoice_after_creation.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enable_email_invoice_after_creation.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Enable the email invoice after creation option. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createNotificationSubscriber http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;set me&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) result = userService.createNotificationSubscriber(&amp;#34;BILLING_INVOICE_CREATED&amp;#34;, users[0][&amp;#39;accountId&amp;#39;], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>enable_require_security_questions_on_log_in.py</title>
      <link>https://softlayer.github.io/python/enable_require_security_questions_on_log_in.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enable_require_security_questions_on_log_in.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Enable require security questions on log in. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) users[0][&amp;#39;secondaryLoginRequiredFlag&amp;#39;] = True result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>enable_user_can_edit_settings.py</title>
      <link>https://softlayer.github.io/python/enable_user_can_edit_settings.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enable_user_can_edit_settings.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Enable user can edit settings. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) users[0][&amp;#39;secondaryLoginManagementFlag&amp;#39;] = False result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to enable user can edit settings.</description>
    </item>
    
    <item>
      <title>get_child_users.go</title>
      <link>https://softlayer.github.io/go/get_child_users.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/get_child_users.go/</guid>
      <description>/* Get child users. Retrieve a portal user&amp;#39;s child users. Some portal users may not have child users. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getChildUsers http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The Id of user you want to get his child users 	userId := 167758 // Create SoftLayer API session 	sess := session.</description>
    </item>
    
    <item>
      <title>get_notification_subscribers.go</title>
      <link>https://softlayer.github.io/go/get_notification_subscribers.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/get_notification_subscribers.go/</guid>
      <description>/* Get all the notification subscribers for an user. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getSubscribers License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The Id of user you want to get his subscribers 	userId := 437729 // Create SoftLayer API session 	sess := session.</description>
    </item>
    
    <item>
      <title>get_notification_subscribers.py</title>
      <link>https://softlayer.github.io/python/get_notification_subscribers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_notification_subscribers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get all the notification subscribers for an user. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getSubscribers http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;set me&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) result = userService.getSubscribers(id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the notification subscribers.</description>
    </item>
    
    <item>
      <title>get_user_status.rb</title>
      <link>https://softlayer.github.io/ruby/get_user_status.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_user_status.rb/</guid>
      <description># # Get User status. # This script will list the status of sub-users similar to the view displayed at # https://control.softlayer.com/account/users # it calls to SoftLayer_User_Customer::getChildUsers # method to retrieve the user list. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) # Get current user begin current_user = client[&amp;#39;Account&amp;#39;].</description>
    </item>
    
    <item>
      <title>remove_user_permission.go</title>
      <link>https://softlayer.github.io/go/remove_user_permission.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/remove_user_permission.go/</guid>
      <description>/* Remove user permission. This script shows how to remove permissions to an user. Important manual Pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/removePortalPermission http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The Id of user you want to remove permissions 	userId := 6660647 /* Declare the permission you want to remove.</description>
    </item>
    
    <item>
      <title>reset_portal_user_password.go</title>
      <link>https://softlayer.github.io/go/reset_portal_user_password.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/go/reset_portal_user_password.go/</guid>
      <description>/* Reset portal user password. This script resets the password of a portal user by SoftLayer_User_Customer::updatePassword method need to define the new password and pass it to updatePassword() method. Take account that users with OpenIdConnect will not be able to update password through this feature. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/updatePassword @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; ) func main() { // SoftLayer API username and key 	username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The Id of user you want to add permissions 	userId := 6660647 // New password you want to set for user.</description>
    </item>
    
    <item>
      <title>reset_portal_user_password.py</title>
      <link>https://softlayer.github.io/python/reset_portal_user_password.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reset_portal_user_password.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Reset portal user password. This script resets the password of a portal user by SoftLayer_User_Customer::updatePassword method need to define the new password and pass it to updatePassword() method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/updatePassword @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; userCustomerId = 152188 newPassword = &amp;#39;newPassword123!</description>
    </item>
    
    <item>
      <title>reset_portal_user_password.rb</title>
      <link>https://softlayer.github.io/ruby/reset_portal_user_password.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reset_portal_user_password.rb/</guid>
      <description># # Reset portal user password. # This script resets the password of a portal user by SoftLayer_User_Customer::updatePassword method # need to define the new password and pass it to updatePassword() method. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/updatePassword # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # # Your SoftLayer API username and key. # Generate an API key at the SoftLayer Customer Portal # SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; # Set the user id to reset the portal user password, use the # SoftLayer_Account::getUsers method to get a list of users available in the account.</description>
    </item>
    
    <item>
      <title>set_api_ip_address_restriction.py</title>
      <link>https://softlayer.github.io/python/set_api_ip_address_restriction.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_api_ip_address_restriction.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set API IP address restriction. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getApiAuthenticationKeys http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_ApiAuthentication/editObject http://sldn.softlayer.com/reference/datypes/SoftLayer_User_Customer_ApiAuthentication/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;set me&amp;#34; ip = &amp;#34;10.10.10.10&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] keyService = client[&amp;#39;SoftLayer_User_Customer_ApiAuthentication&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) keys = userService.getApiAuthenticationKeys(id=users[0][&amp;#39;id&amp;#39;]) keys[0][&amp;#34;ipAddressRestriction&amp;#34;] = ip result = keyService.</description>
    </item>
    
    <item>
      <title>set_expire_password_in.py</title>
      <link>https://softlayer.github.io/python/set_expire_password_in.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_expire_password_in.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set expire password in. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) # Set the value to 0 for never users[0][&amp;#39;secondaryPasswordTimeoutDays&amp;#39;] = 90 result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>set_restrict_access_to_ip.py</title>
      <link>https://softlayer.github.io/python/set_restrict_access_to_ip.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_restrict_access_to_ip.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set restrict access to IP address. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) # Set the value to &amp;#34;&amp;#34; to delete the previous configured IP address. users[0][&amp;#39;ipAddressRestriction&amp;#39;] = &amp;#34;10.</description>
    </item>
    
    <item>
      <title>Find out which user placed an order</title>
      <link>https://softlayer.github.io/rest/which_user_placed_order/</link>
      <pubDate>Thu, 26 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/which_user_placed_order/</guid>
      <description>Operation: GET
Method: SoftLayer_Account::getOrders()
URL: SoftLayer_Account/getOrders
Example CURL:
curl -su userid:api_key &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Account/getOrders?objectMask=mask\[userRecord\[username\]\]&amp;#34; Example Response:
{ &amp;#34;accountId&amp;#34;: 1234, &amp;#34;createDate&amp;#34;: &amp;#34;2014-02-04T11:45:47-06:00&amp;#34;, &amp;#34;id&amp;#34;: 99999999, &amp;#34;impersonatingUserRecordId&amp;#34;: null, &amp;#34;modifyDate&amp;#34;: &amp;#34;2014-02-04T11:45:53-06:00&amp;#34;, &amp;#34;orderQuoteId&amp;#34;: null, &amp;#34;orderTypeId&amp;#34;: 7, &amp;#34;presaleEventId&amp;#34;: null, &amp;#34;privateCloudOrderFlag&amp;#34;: false, &amp;#34;status&amp;#34;: &amp;#34;APPROVED&amp;#34;, &amp;#34;userRecord&amp;#34;: { &amp;#34;username&amp;#34;: &amp;#34;SL1234&amp;#34; }, &amp;#34;userRecordId&amp;#34;: 111111 Operation: GET
Method: SoftLayer_Billing_Order::getObject()
URL: SoftLayer_Billing_Order/getObject
Example CURL:
curl -su userid:api_key &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Billing_Order/99999999/getObject?objectMask=mask\[userRecord\[username\]\]&amp;#34; Example Response:
{ &amp;#34;accountId&amp;#34;: 1234, &amp;#34;createDate&amp;#34;: &amp;#34;2014-02-04T11:45:47-06:00&amp;#34;, &amp;#34;id&amp;#34;: 99999999, &amp;#34;impersonatingUserRecordId&amp;#34;: null, &amp;#34;modifyDate&amp;#34;: &amp;#34;2014-02-04T11:45:53-06:00&amp;#34;, &amp;#34;orderQuoteId&amp;#34;: null, &amp;#34;orderTypeId&amp;#34;: 7, &amp;#34;presaleEventId&amp;#34;: null, &amp;#34;privateCloudOrderFlag&amp;#34;: false, &amp;#34;status&amp;#34;: &amp;#34;APPROVED&amp;#34;, &amp;#34;userRecord&amp;#34;: { &amp;#34;username&amp;#34;: &amp;#34;SL1234&amp;#34; }, &amp;#34;userRecordId&amp;#34;: 111111 Note specifying &amp;ldquo;userRecord[username]&amp;rdquo; in the objectMask will make the API call ONLY get the username for each order.</description>
    </item>
    
    <item>
      <title>Set user permissions</title>
      <link>https://softlayer.github.io/ruby/set_permission/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/set_permission/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new user_service = client[&amp;#39;User_Customer&amp;#39;] # List the user permissions USER_ID = 172536 # Change me. User id of user to inspect. pp user_service.object_with_id(USER_ID).getPermissions # add permission new_permission = { keyName: &amp;#39;TICKET_ADD&amp;#39; } result = user_service.object_with_id(USER_ID).addPortalPermission(new_permission) unless result puts &amp;#39;Failed to add permission&amp;#39; exit 1 end # list user permissions again pp user_service.</description>
    </item>
    
    <item>
      <title>Set user permissions</title>
      <link>https://softlayer.github.io/python/set_permission/</link>
      <pubDate>Wed, 16 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_permission/</guid>
      <description>import SoftLayer from pprint import pprint as pp class setPermissions(): def __init__(self): self.client = SoftLayer.Client() def main(self, user_id): permissions = self.client[&amp;#39;User_Customer&amp;#39;].getPermissions(id=user_id) print(&amp;#34;=== OLD PERMISSIONS ===&amp;#34;) self.printPermissions(permissions) setperm = {&amp;#39;keyName&amp;#39;: &amp;#34;TICKET_ADD&amp;#34;} self.client[&amp;#39;User_Customer&amp;#39;].addPortalPermission(setperm, id=user_id) permissions = self.client[&amp;#39;User_Customer&amp;#39;].getPermissions(id=user_id) print(&amp;#34;=== NEW PERMISSIONS ===&amp;#34;) self.printPermissions(permissions) def getUsers(self): users = self.client[&amp;#39;Account&amp;#39;].getUsers() print(&amp;#34;ID - USERNAME - E-MAIL&amp;#34;) for user in users: print(&amp;#34;%s- %s- %s&amp;#34; % (user[&amp;#39;id&amp;#39;], user[&amp;#39;username&amp;#39;], user[&amp;#39;email&amp;#39;])) def printPermissions(sefl, permissions): for permission in permissions: print(&amp;#34;%s&amp;#34; % permission[&amp;#39;keyName&amp;#39;]) if __name__ == &amp;#34;__main__&amp;#34;: main = setPermissions() # CHANGE ME my_user = 439723 main.</description>
    </item>
    
  </channel>
</rss>