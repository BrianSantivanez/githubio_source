<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/bandwidth-pool/index.xml</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>Subnets and Bandwidth Pools</title>
      <link>https://softlayer.github.io/python/bandwidthPoolsAndSubnets/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/bandwidthPoolsAndSubnets/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
from pprint import pprint as pp

class example():

    def __init__(self):

        self.client = SoftLayer.Client()

    def getPublicSubnets(self):
        &amp;quot;&amp;quot;&amp;quot;
        subnet types
        SECONDARY_ON_VLAN = Portable IPs
        PRIMARY
        SUBNET_ON_VLAN = static subnets
        PRIMARY_6
        STATIC_IP_ROUTED
        GLOBAL_IP
        ADDITIONAL_PRIMARY
        &amp;quot;&amp;quot;&amp;quot;
        object_filter = {
            &#39;publicSubnets&#39; : {
                &#39;subnetType&#39; : {
                    &#39;operation&#39;: &#39;SECONDARY_ON_VLAN&#39;
                }
            }
        }

        subnets = self.client[&#39;Account&#39;].getPublicSubnets(filter=object_filter)
        pp(subnets)

    def getBandwidthPools(self):
        &amp;quot;&amp;quot;&amp;quot;
        bareMetalInstances and privateNetworkOnlyHardware
        may need to be included in the mask if applicable. 
        &amp;quot;&amp;quot;&amp;quot;
        mask = &amp;quot;mask[hardware,virtualGuests]&amp;quot;
        pool = self.client[&#39;Account&#39;].getVirtualDedicatedRacks(mask=mask)
        pp(pool)


if __name__ == &amp;quot;__main__&amp;quot;:
    main = example()
    main.getBandwidthPools()
    main.getPublicSubnets()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>