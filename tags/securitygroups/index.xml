<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Securitygroups on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/securitygroups/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Mon, 30 Oct 2017 00:00:00 UTC</updated>
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/python/createvsiwithsecgroup/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/createvsiwithsecgroup/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
from __future__ import print_function
import SoftLayer
from SoftLayer.managers.vs import VSManager

def create_vsi():
    #Create a client to the SoftLayer_Account API service.
    #Note: currently set without the user ID and API key since
    #it will by default use the values set in the CLI
    #to use other values use SoftLayer.Client(sl_username, sl_api_key)
    client = SoftLayer.Client()
    vsi_mgr = VSManager(client)

   # common values
    datacenter = &#39;wdc07&#39; 
    domain = &#39;cde.services&#39; 
    os_code = &#39;UBUNTU_LATEST_64&#39;
    local_disk = True 
    hourly = True 
    dedicated = False 
    nic_speed = 1000 
    disks = [100] 
    private = False 
    ssh_keys = [972047] 
    public_security_groups = [43507]
    private_security_groups = [43511]

    # server properties
    hostname = &#39;sgvsi&#39;
    cpus = 2
    memory = 2048

    result = vsi_mgr.create_instance(hostname=hostname, domain=domain,
                                     cpus=cpus, memory=memory, datacenter=datacenter,
                                     os_code=os_code, local_disk=local_disk,
                                     hourly=hourly, dedicated=dedicated,
                                     disks=disks, nic_speed=nic_speed, private=private,
                                     ssh_keys=ssh_keys, public_security_groups=public_security_groups,
                                     private_security_groups=private_security_groups)
    print(result)

if __name__ == &#39;__main__&#39;:
    create_vsi()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/ruby/vsisecgroups/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/vsisecgroups/</guid>
      <description>&lt;p&gt;To get a list of Security Groups you can attach to a Virtual Guest you can run the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

getGroups = client[&#39;Network_SecurityGroup&#39;].getAllObjects

pp getGroups
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you have the Security Group IDs you would like to use you can plug them in to the following example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

productOrder = {
    	&#39;hostname&#39; =&amp;gt; &#39;rubysectest&#39;,
    	&#39;domain&#39; =&amp;gt; &#39;cde.services&#39;,
    	&#39;datacenter&#39; =&amp;gt; {&#39;name&#39; =&amp;gt; &#39;dal05&#39;},
    	&#39;startCpus&#39; =&amp;gt; 2, # 2 x 2.0 GHz Cores
    	&#39;maxMemory&#39; =&amp;gt; 2048, # 4GB RAM
    	&#39;private_network_only&#39; =&amp;gt; false,
    	&#39;dedicated_host_only&#39; =&amp;gt; false,
    	&#39;operatingSystemReferenceCode&#39; =&amp;gt; &#39;UBUNTU_LATEST_64&#39;, # Latest Ubuntu LTS
    	&#39;localDiskFlag&#39; =&amp;gt; false, # Use a SAN disk
    	&#39;public_security_groups&#39; =&amp;gt; [43507],
    	&#39;private_security_groups&#39; =&amp;gt; [43511],
    	&#39;hourly&#39; =&amp;gt; false # Charge me for hourly use, rather than monthly.
}

order = client[&#39;Virtual_Guest&#39;].createObject(productOrder)

pp order

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Add, list, and remove security group rules</title>
      <link>https://softlayer.github.io/python/securitygroup_rule_ops/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/securitygroup_rule_ops/</guid>
      <description>

&lt;h2 id=&#34;adding-a-rule-to-a-security-group&#34;&gt;Adding a rule to a security group&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)

sg_id = 123045
direction = &#39;ingress&#39;
ethertype = &#39;IPv4&#39;
remote_ip = &#39;169.148.34.0/24&#39;
protocol = &#39;tcp&#39;
port_min = 22
port_max = 22
try:
    result = net_mgr.add_securitygroup_rule(sg_id,
                                            direction=direction,
                                            ethertype=ethertype,
                                            remote_ip=remote_ip,
                                            protocol=protocol,
                                            port_min=port_min,
                                            port_max=port_max)
    pp(result)
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to add a rule to the security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;listing-rules-in-a-security-group&#34;&gt;Listing rules in a security group&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)

sg_id = 123045
try:
    result = net_mgr.list_securitygroup_rules(sg_id)
    pp(result)
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to list rules in the security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;removing-a-rule-from-a-security-group&#34;&gt;Removing a rule from a security group&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)

sg_id = 123045
rule_id = 475879
try:
    result = net_mgr.remove_securitygroup_rule(sg_id, rule_id)
    pp(result)
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to remove rule from the security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;remove-all-rules-from-a-security-group&#34;&gt;Remove all rules from a security group&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)

sg_id = 123045
try:
    rules = net_mgr.list_securitygroup_rules(sg_id)
    rules = [rule[&#39;id&#39;] for rule in rules]
    result = net_mgr.remove_securitygroup_rules(sg_id, rules)
    pp(result)
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to remove rules from the security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create, list, get, and delete security groups</title>
      <link>https://softlayer.github.io/python/securitygroup_ops/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/securitygroup_ops/</guid>
      <description>

&lt;h2 id=&#34;creating-a-security-group&#34;&gt;Creating a security group&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)

name = &#39;pythonCreatedGroupExample&#39;
description = &#39;Security Group created via python&#39;
try:
    result = net_mgr.create_securitygroup(name=name, description=description)
    pp(result)
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to create a new security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;deleting-a-security-group&#34;&gt;Deleting a security group&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)

sg_id = 12045
try:
    result = net_mgr.delete_securitygroup(sg_id)
    pp(result)
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to delete security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;getting-a-security-group&#34;&gt;Getting a security group&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)

sg_id = 12045
try:
    result = net_mgr.get_securitygroup(sg_id)
    pp(result)
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to get security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;list-all-security-groups-in-account&#34;&gt;List all security groups in account&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)

result = net_mgr.list_securitygroups()
pp(result)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>VSIs and security groups</title>
      <link>https://softlayer.github.io/python/securitygroup_vsis/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/securitygroup_vsis/</guid>
      <description>

&lt;h2 id=&#34;creating-a-vsi-with-security-groups&#34;&gt;Creating a VSI with security groups&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the VSManager
client = SoftLayer.Client()
vs_mgr = SoftLayer.VSManager(client)

http_sg_id = 384757
ssh_sg_id = 576973

# Allow only HTTP on the public interface of the VSI
public_groups = [http_sg_id]

# Allow HTTP and SSH on the private interface of the VSI
private_groups = [http_sg_id, ssh_sg_id]

# If we didn&#39;t want to set any security groups on an interface
# (which allows all traffic), we don&#39;t set the associated
# creation kwarg

create_kwargs = {
    &#39;hostname&#39;: &#39;sg-vsi&#39;,
    &#39;domain&#39;: &#39;mycompany.com&#39;,
    &#39;os_code&#39;: &#39;UBUNTU_LATEST_64&#39;,
    &#39;datacenter&#39;: &#39;dal13&#39;,
    &#39;cpus&#39;: 1,
    &#39;memory&#39;: 1024,
    &#39;hourly&#39;: True,
    &#39;disks&#39;: (&#39;100&#39;,),
    &#39;public_security_groups&#39;: public_groups,
    &#39;private_security_groups&#39;: private_groups,
}

try:
    vsi = vs_mgr.create_instance(**create_kwargs)
    pp(vsi)
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to create VSI with security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;attach-an-existing-vsi-to-security-groups&#34;&gt;Attach an existing VSI to security groups&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager and VSManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)
vs_mgr = SoftLayer.VSManager(client)

http_sg_id = 384757
vsi_id = 4018735
private_interface = False
port_number = 0 if private_interface else 1
network_component_mask = &#39;networkComponents[id, port]&#39;

try:
    vsi_components = vs_mgr.get_instance(vsi_id, mask=network_component_mask)
    component_to_attach = [comp for comp in vsi_components[&#39;networkComponents&#39;]
                           if comp[&#39;port&#39;] == port_number][0]
    result = net_mgr.attach_securitygroup_component(http_sg_id,
                                                    component_to_attach[&#39;id&#39;])
    pp(result)
    
    # If this is the first time the server is being associated with security groups,
    # a reboot is required for the security group to take effect on the VSI
    client[&#39;Virtual_Guest&#39;].rebootSoft(id=vsi_id)
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to associate VSI with security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;detach-a-vsi-from-a-security-group&#34;&gt;Detach a VSI from a security group&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
# For nice debug output
from pprint import pprint as pp

# Create a client for use with the NetworkManager and VSManager
client = SoftLayer.Client()
net_mgr = SoftLayer.NetworkManager(client)
vs_mgr = SoftLayer.VSManager(client)

http_sg_id = 384757
vsi_id = 4018735
private_interface = False
port_number = 0 if private_interface else 1
network_component_mask = &#39;networkComponents[id, port]&#39;

try:
    vsi_components = vs_mgr.get_instance(vsi_id, mask=network_component_mask)
    component_to_detach = [comp for comp in vsi_components[&#39;networkComponents&#39;]
                           if comp[&#39;port&#39;] == port_number][0]
    net_mgr.detach_securitygroup_component(http_sg_id,
                                           component_to_detach[&#39;id&#39;])
    
except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed... Unable to disassociate VSI with security group: faultCode=%s, faultString=%s&#39;
       % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Add, get, edit and remove Security Group rules</title>
      <link>https://softlayer.github.io/rest/addgeteditremovesecuritygrouprules/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/addgeteditremovesecuritygrouprules/</guid>
      <description>

&lt;h3 id=&#34;add-rules&#34;&gt;Add rules&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup/{securitygroup_id}/addRules&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -X POST &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/136741/addRules&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [[{&amp;quot;direction&amp;quot;: &amp;quot;ingress&amp;quot;,&amp;quot;portRangeMin&amp;quot;:100,&amp;quot;portRangeMax&amp;quot;:101,&amp;quot;protocol&amp;quot;:&amp;quot;tcp&amp;quot;}]]}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;get-rules&#34;&gt;Get rules&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup/{securitygroup_id}/getObject?objectMask=mask[rules]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -g -X GET &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/42401/getObject?objectMask=mask[rules]&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;createDate&amp;quot;: &amp;quot;2017-05-19T14:00:15-05:00&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;VSIs in this group respond to ping requests.&amp;quot;,
    &amp;quot;id&amp;quot;: 42401,
    &amp;quot;modifyDate&amp;quot;: null,
    &amp;quot;name&amp;quot;: &amp;quot;allow_ping&amp;quot;,
    &amp;quot;rules&amp;quot;: [
        {
            &amp;quot;direction&amp;quot;: &amp;quot;ingress&amp;quot;,
            &amp;quot;ethertype&amp;quot;: &amp;quot;IPv4&amp;quot;,
            &amp;quot;id&amp;quot;: 43001,
            &amp;quot;portRangeMax&amp;quot;: 0,
            &amp;quot;portRangeMin&amp;quot;: 8,
            &amp;quot;protocol&amp;quot;: &amp;quot;icmp&amp;quot;,
            &amp;quot;remoteGroupId&amp;quot;: null,
            &amp;quot;securityGroupId&amp;quot;: 42401
        }
    ]
}

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;edit-rules&#34;&gt;Edit Rules&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;PUT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup/{securitygroup_id}/editRules&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -X PUT &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/123456/editRules&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [[{&amp;quot;id&amp;quot;: 11111,&amp;quot;portRangeMin&amp;quot;: 99},{&amp;quot;id&amp;quot;: 22222,&amp;quot;portRangeMin&amp;quot;: 199}]]}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;remove-rules&#34;&gt;Remove Rules&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;PUT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup/{securitygroup_id}/removeRules&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -X PUT &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/123456/removeRules&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [[11111]]}&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create, get, edit and delete Security Groups</title>
      <link>https://softlayer.github.io/rest/creategeteditdeletesecuritygroup/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/creategeteditdeletesecuritygroup/</guid>
      <description>

&lt;h3 id=&#34;create-security-group&#34;&gt;Create Security Group&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X POST &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [{&amp;quot;name&amp;quot;: &amp;quot;some name&amp;quot;,&amp;quot;description&amp;quot;:&amp;quot;some description&amp;quot;}]}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;createDate&amp;quot;: &amp;quot;2017-10-11T11:04:42-05:00&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;some description&amp;quot;,
    &amp;quot;id&amp;quot;: 123456,
    &amp;quot;modifyDate&amp;quot;: null,
    &amp;quot;name&amp;quot;: &amp;quot;some name&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;get-security-group&#34;&gt;Get Security Group&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup/{securitygroup_id}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X GET &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/123456&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;createDate&amp;quot;: &amp;quot;2017-10-11T11:04:42-05:00&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;some description&amp;quot;,
    &amp;quot;id&amp;quot;: 123456,
    &amp;quot;modifyDate&amp;quot;: null,
    &amp;quot;name&amp;quot;: &amp;quot;some name&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;edit-security-group&#34;&gt;Edit Security Group&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;PUT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup/{securitygroup_id}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X PUT &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/123456&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [{&amp;quot;description&amp;quot;: &amp;quot;new description&amp;quot;}]}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;true
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;delete-security-group&#34;&gt;Delete Security Group&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;DELETE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup/{securitygroup_id}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X DELETE &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/123456&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;true
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get network components, attach and detach network components</title>
      <link>https://softlayer.github.io/rest/getattachdetachnetworkcomponent/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/getattachdetachnetworkcomponent/</guid>
      <description>

&lt;h3 id=&#34;get-the-network-component-ids-for-a-vsi&#34;&gt;Get the network component IDs for a VSI&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Virtual_Guest/{guest_id}/getObject.json?objectMask=mask[networkComponents.port,networkComponents.id]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -g -X GET &#39;https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/30000007/getObject.json?objectMask=mask[networkComponents.port,networkComponents.id]&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;lt;output omitted&amp;gt;
    &amp;quot;networkComponents&amp;quot;: [
        {
            &amp;quot;id&amp;quot;: 20000003,
            &amp;quot;port&amp;quot;: 0
        },
        {
            &amp;quot;id&amp;quot;: 20000001,
            &amp;quot;port&amp;quot;: 1
        }
    ],
    &amp;lt;output omitted&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;attach-network-component-to-security-group&#34;&gt;Attach network component to Security Group&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup/{securitygroup_id}/attachNetworkComponents&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -X POST &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/123456/attachNetworkComponents&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [[20000003]]}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;detach-network-component-from-security-group&#34;&gt;Detach network component from Security Group&lt;/h3&gt;

&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Network_SecurityGroup/{securitygroup_id}/detachNetworkComponents&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -X POST &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/123456/detachNetworkComponents&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [[20000003]]}&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Add and remove rules in a Security group</title>
      <link>https://softlayer.github.io/ruby/addremovesecuritygrouprules/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/addremovesecuritygrouprules/</guid>
      <description>

&lt;h3 id=&#34;adding-rules&#34;&gt;Adding Rules&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;
=begin
@author Ryan Tiffany
=end

require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)
secGroupId = 84301

# Create an object template to create the item.
objectTemplate = {
	&#39;direction&#39; =&amp;gt; &#39;ingress&#39;,
	&#39;protocol&#39; =&amp;gt; &#39;tcp&#39;,
	&#39;portRangeMin&#39; =&amp;gt; 22,
	&#39;portRangeMax&#39; =&amp;gt; 22,
	&#39;ethertype&#39; =&amp;gt; &#39;IPv4&#39;,
	&#39;remoteIp&#39; =&amp;gt; &#39;0.0.0.0/0&#39;
}

newRules = client[&#39;SoftLayer_Network_SecurityGroup&#39;].object_with_id(secGroupId).addRules([objectTemplate])
pp newRules
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;removing-rules&#34;&gt;Removing rules&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;
=begin
@author Ryan Tiffany
=end

require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)
secGroupId = 45101

# Create an object template to create the item.
objectTemplate = [ 48501, 48401 ]

remove = client[&#39;SoftLayer_Network_SecurityGroup&#39;].object_with_id(secGroupId).removeRules(objectTemplate)
pp remove
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a Security group</title>
      <link>https://softlayer.github.io/ruby/createsecuritygroup/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/createsecuritygroup/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;
=begin
@author Ryan Tiffany
=end

require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)
objectTemplate = { 
	&#39;name&#39; =&amp;gt; &#39;rubyExampleCreation&#39;,
    	&#39;description&#39; =&amp;gt; &#39;Sec Group created via ruby&#39;
}

createGroup = client[&#39;SoftLayer_Network_SecurityGroup&#39;].createObjects([objectTemplate])

pp createGroup
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>