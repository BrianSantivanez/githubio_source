<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Securitygroups on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/securitygroups/</link>
    <description>Recent content in Securitygroups on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/securitygroups/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/python/createvsiwithsecgroup/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createvsiwithsecgroup/</guid>
      <description>from __future__ import print_function import SoftLayer from SoftLayer.managers.vs import VSManager def create_vsi(): #Create a client to the SoftLayer_Account API service. #Note: currently set without the user ID and API key since #it will by default use the values set in the CLI #to use other values use SoftLayer.Client(sl_username, sl_api_key) client = SoftLayer.Client() vsi_mgr = VSManager(client) # common values datacenter = &#39;wdc07&#39; domain = &#39;cde.services&#39; os_code = &#39;UBUNTU_LATEST_64&#39; local_disk = True hourly = True dedicated = False nic_speed = 1000 disks = [100] private = False ssh_keys = [972047] public_security_groups = [43507] private_security_groups = [43511] # server properties hostname = &#39;sgvsi&#39; cpus = 2 memory = 2048 result = vsi_mgr.</description>
    </item>
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/ruby/vsiSecGroups/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/vsiSecGroups/</guid>
      <description>To get a list of Security Groups you can attach to a Virtual Guest you can run the following code:
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getGroups = client[&#39;Network_SecurityGroup&#39;].getAllObjects pp getGroups  Once you have the Security Group IDs you would like to use you can plug them in to the following example:
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) productOrder = { &#39;hostname&#39; =&amp;gt; &#39;rubysectest&#39;, &#39;domain&#39; =&amp;gt; &#39;cde.</description>
    </item>
    
    <item>
      <title>Add, list, and remove security group rules</title>
      <link>https://softlayer.github.io/python/securitygroup_rule_ops/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/securitygroup_rule_ops/</guid>
      <description>Adding a rule to a security group import SoftLayer # For nice debug output from pprint import pprint as pp # Create a client for use with the NetworkManager client = SoftLayer.Client() net_mgr = SoftLayer.NetworkManager(client) sg_id = 123045 direction = &#39;ingress&#39; ethertype = &#39;IPv4&#39; remote_ip = &#39;169.148.34.0/24&#39; protocol = &#39;tcp&#39; port_min = 22 port_max = 22 try: result = net_mgr.add_securitygroup_rule(sg_id, direction=direction, ethertype=ethertype, remote_ip=remote_ip, protocol=protocol, port_min=port_min, port_max=port_max) pp(result) except SoftLayer.SoftLayerAPIError as e: pp(&#39;Failed.</description>
    </item>
    
    <item>
      <title>Create, list, get, and delete security groups</title>
      <link>https://softlayer.github.io/python/securitygroup_ops/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/securitygroup_ops/</guid>
      <description>Creating a security group import SoftLayer # For nice debug output from pprint import pprint as pp # Create a client for use with the NetworkManager client = SoftLayer.Client() net_mgr = SoftLayer.NetworkManager(client) name = &#39;pythonCreatedGroupExample&#39; description = &#39;Security Group created via python&#39; try: result = net_mgr.create_securitygroup(name=name, description=description) pp(result) except SoftLayer.SoftLayerAPIError as e: pp(&#39;Failed... Unable to create a new security group: faultCode=%s, faultString=%s&#39; % (e.faultCode, e.faultString))  Deleting a security group import SoftLayer # For nice debug output from pprint import pprint as pp # Create a client for use with the NetworkManager client = SoftLayer.</description>
    </item>
    
    <item>
      <title>VSIs and security groups</title>
      <link>https://softlayer.github.io/python/securitygroup_vsis/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/securitygroup_vsis/</guid>
      <description>Creating a VSI with security groups import SoftLayer # For nice debug output from pprint import pprint as pp # Create a client for use with the VSManager client = SoftLayer.Client() vs_mgr = SoftLayer.VSManager(client) http_sg_id = 384757 ssh_sg_id = 576973 # Allow only HTTP on the public interface of the VSI public_groups = [http_sg_id] # Allow HTTP and SSH on the private interface of the VSI private_groups = [http_sg_id, ssh_sg_id] # If we didn&#39;t want to set any security groups on an interface # (which allows all traffic), we don&#39;t set the associated # creation kwarg create_kwargs = { &#39;hostname&#39;: &#39;sg-vsi&#39;, &#39;domain&#39;: &#39;mycompany.</description>
    </item>
    
    <item>
      <title>Add, get, edit and remove Security Group rules</title>
      <link>https://softlayer.github.io/rest/addGetEditRemoveSecurityGroupRules/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/addGetEditRemoveSecurityGroupRules/</guid>
      <description>Add rules Operation: POST
URL: SoftLayer_Network_SecurityGroup/{securitygroup_id}/addRules
Example CURL:
$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -X POST &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/461903/addRules&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [[{&amp;quot;direction&amp;quot;: &amp;quot;ingress&amp;quot;,&amp;quot;portRangeMin&amp;quot;:100,&amp;quot;portRangeMax&amp;quot;:101,&amp;quot;protocol&amp;quot;:&amp;quot;tcp&amp;quot;}]]}&#39;  Example Response:
{ &amp;quot;requestId&amp;quot;: &amp;quot;c0796ae700a8fad97170168&amp;quot;, &amp;quot;rules&amp;quot;: [ { &amp;quot;direction&amp;quot;: &amp;quot;ingress&amp;quot;, &amp;quot;ethertype&amp;quot;: &amp;quot;IPv4&amp;quot;, &amp;quot;id&amp;quot;: 789953, &amp;quot;portRangeMax&amp;quot;: 101, &amp;quot;portRangeMin&amp;quot;: 100, &amp;quot;protocol&amp;quot;: &amp;quot;tcp&amp;quot;, &amp;quot;remoteGroupId&amp;quot;: null, &amp;quot;securityGroupId&amp;quot;: 461903 } ] }  Get rules Operation: GET
URL: SoftLayer_Network_SecurityGroup/{securitygroup_id}/getObject?objectMask=mask[rules]
Example CURL:
$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -g -X GET &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/42401/getObject?objectMask=mask[rules]&#39;  Example Response:
{ &amp;quot;createDate&amp;quot;: &amp;quot;2017-05-19T14:00:15-05:00&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;VSIs in this group respond to ping requests.</description>
    </item>
    
    <item>
      <title>Create, get, edit and delete Security Groups</title>
      <link>https://softlayer.github.io/rest/createGetEditDeleteSecurityGroup/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/createGetEditDeleteSecurityGroup/</guid>
      <description>Create Security Group Operation: POST
URL: SoftLayer_Network_SecurityGroup
Example CURL:
$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X POST &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [{&amp;quot;name&amp;quot;: &amp;quot;some name&amp;quot;,&amp;quot;description&amp;quot;:&amp;quot;some description&amp;quot;}]}&#39;  Example Response:
{ &amp;quot;createDate&amp;quot;: &amp;quot;2017-10-11T11:04:42-05:00&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;some description&amp;quot;, &amp;quot;id&amp;quot;: 123456, &amp;quot;modifyDate&amp;quot;: null, &amp;quot;name&amp;quot;: &amp;quot;some name&amp;quot; }  Get Security Group Operation: GET
URL: SoftLayer_Network_SecurityGroup/{securitygroup_id}
Example CURL:
$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X GET &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/123456&#39;  Example Response:
{ &amp;quot;createDate&amp;quot;: &amp;quot;2017-10-11T11:04:42-05:00&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;some description&amp;quot;, &amp;quot;id&amp;quot;: 123456, &amp;quot;modifyDate&amp;quot;: null, &amp;quot;name&amp;quot;: &amp;quot;some name&amp;quot; }  Edit Security Group Operation: PUT</description>
    </item>
    
    <item>
      <title>Get network components, attach and detach network components</title>
      <link>https://softlayer.github.io/rest/getAttachDetachNetworkComponent/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/getAttachDetachNetworkComponent/</guid>
      <description>Get the network component IDs for a VSI Operation: GET
URL: SoftLayer_Virtual_Guest/{guest_id}/getObject.json?objectMask=mask[networkComponents.port,networkComponents.id]
Example CURL:
$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -g -X GET &#39;https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/39269481/getObject.json?objectMask=mask[networkComponents.port,networkComponents.id]&#39;  Example Response:
{ &amp;lt;output omitted&amp;gt; &amp;quot;networkComponents&amp;quot;: [ { &amp;quot;id&amp;quot;: 21781733, &amp;quot;port&amp;quot;: 0 }, { &amp;quot;id&amp;quot;: 21781731, &amp;quot;port&amp;quot;: 1 } ], &amp;lt;output omitted&amp;gt; }  Attach network component to Security Group Operation: POST
URL: SoftLayer_Network_SecurityGroup/{securitygroup_id}/attachNetworkComponents
Example CURL:
$ curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -X POST &#39;https://api.softlayer.com/rest/v3/SoftLayer_Network_SecurityGroup/461903/attachNetworkComponents&#39; -d &#39;{&amp;quot;parameters&amp;quot;: [[21781731]]}&#39;  Example Response:</description>
    </item>
    
    <item>
      <title>Add and remove rules in a Security group</title>
      <link>https://softlayer.github.io/ruby/addRemoveSecurityGroupRules/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/addRemoveSecurityGroupRules/</guid>
      <description>Adding Rules =begin @author Ryan Tiffany =end require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) secGroupId = 84301 # Create an object template to create the item. objectTemplate = { &#39;direction&#39; =&amp;gt; &#39;ingress&#39;, &#39;protocol&#39; =&amp;gt; &#39;tcp&#39;, &#39;portRangeMin&#39; =&amp;gt; 22, &#39;portRangeMax&#39; =&amp;gt; 22, &#39;ethertype&#39; =&amp;gt; &#39;IPv4&#39;, &#39;remoteIp&#39; =&amp;gt; &#39;0.0.0.0/0&#39; } newRules = client[&#39;SoftLayer_Network_SecurityGroup&#39;].object_with_id(secGroupId).addRules([objectTemplate]) pp newRules  Removing rules =begin @author Ryan Tiffany =end require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>Create a Security group</title>
      <link>https://softlayer.github.io/ruby/createSecurityGroup/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createSecurityGroup/</guid>
      <description>=begin @author Ryan Tiffany =end require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) objectTemplate = { &#39;name&#39; =&amp;gt; &#39;rubyExampleCreation&#39;, &#39;description&#39; =&amp;gt; &#39;Sec Group created via ruby&#39; } createGroup = client[&#39;SoftLayer_Network_SecurityGroup&#39;].createObjects([objectTemplate]) pp createGroup  </description>
    </item>
    
  </channel>
</rss>