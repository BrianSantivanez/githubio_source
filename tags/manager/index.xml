<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Manager on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/manager/</link>
    <description>Recent content in Manager on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Mar 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/manager/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Backup and Restore firewall rules</title>
      <link>https://softlayer.github.io/python/manage_firewall_rules/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/manage_firewall_rules/</guid>
      <description>restoreRules here will clobber any existing rules on the firewall, so be careful with that.
 import SoftLayer from SoftLayer.CLI import firewall from pprint import pprint as pp import json from argparse import ArgumentParser class ruleSaver(): def __init__(self, path, fw): self.client = SoftLayer.Client() self.fw = SoftLayer.FirewallManager(self.client) self.path = path self.fw_type, self.fw_id = firewall.parse_id(fw) def saveRules(self): if self.fw_type == &#39;vlan&#39;: rules = self.fw.get_dedicated_fwl_rules(self.fw_id) else: rules = self.fw.get_standard_fwl_rules(self.fw_id) with open(self.path, &#39;w&#39;) as f: json.</description>
    </item>
    
    <item>
      <title>List Instances</title>
      <link>https://softlayer.github.io/python/list_instances/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_instances/</guid>
      <description>import SoftLayer import pprint class example(): def __init__(self): self.client = SoftLayer.Client() self.mgr = SoftLayer.VSManager(self.client) def main(self): &amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; pp = pprint.PrettyPrinter(indent=4) result = self.mgr.list_instances() pp.pprint(result) if __name__ == &amp;quot;__main__&amp;quot;: main = example() main.main()  </description>
    </item>
    
  </channel>
</rss>