<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ordering on SoftLayer API</title>
    <link>https://softlayer.github.io/tags/ordering/</link>
    <description>Recent content in Ordering on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Mar 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/tags/ordering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Manage Users</title>
      <link>https://softlayer.github.io/python/manageUsers/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/manageUsers/</guid>
      <description>Creates a user, sets up proper permissions, sets up devices access restrictions, creates API keys and orders the user a server.
import SoftLayer.API from pprint import pprint as pp def create_user(username, password): user_template = { &#39;username&#39;: username, &#39;firstName&#39;: &#39;API&#39;, &#39;lastName&#39;: &#39;Learner&#39;, &#39;email&#39;: &#39;someone@somewhere.com&#39;, &#39;companyName&#39;: &#39;IBM&#39;, &#39;address1&#39;: &#39;123 api road&#39;, &#39;city&#39;: &#39;Houston&#39;, &#39;country&#39;: &#39;US&#39;, &#39;postalCode&#39;: &#39;TX 77002&#39;, &#39;userStatusId&#39;: 1001, &#39;timezoneId&#39;: 107 } created_user = client[&#39;User_Customer&#39;].createObject( user_template, password, password) return created_user def get_permissions(_id): permissions = client[&#39;User_Customer&#39;].</description>
    </item>
    
    <item>
      <title>Required the available servers to order</title>
      <link>https://softlayer.github.io/python/list_available_servers_to_order/</link>
      <pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_available_servers_to_order/</guid>
      <description>&amp;quot;&amp;quot;&amp;quot; List all the vailable servers to order. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package_Server/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Server/ http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;quot;&amp;quot;&amp;quot; import SoftLayer import json client = SoftLayer.Client() packageService = client[&#39;SoftLayer_Product_Package_Server&#39;] objectFilter = { &amp;quot;packageType&amp;quot;: { &amp;quot;operation&amp;quot;: &amp;quot;in&amp;quot;, &amp;quot;options&amp;quot;: [{ &amp;quot;name&amp;quot;: &amp;quot;data&amp;quot;, &amp;quot;value&amp;quot;: [ &amp;quot;BARE_METAL_CORE&amp;quot;, &amp;quot;BARE_METAL_CPU&amp;quot;, &amp;quot;BARE_METAL_CPU_FAST_PROVISION&amp;quot; ] }] } } try: servers = packageService.getAllObjects(filter=objectFilter) print(json.dumps(servers, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;quot;Unable to list the servers to order.</description>
    </item>
    
    <item>
      <title>Order Firewall and Security Appliances</title>
      <link>https://softlayer.github.io/php/orderFirewalls/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/orderFirewalls/</guid>
      <description>&amp;lt;?php require_once &#39;./vendor/autoload.php&#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &#39;&#39;; $this-&amp;gt;apiKey = &#39;&#39;; } function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;quot;ID -&amp;gt; Name \n&amp;quot;; foreach($packages as $package) { print $package-&amp;gt;id . &amp;quot; -&amp;gt; &amp;quot; . $package-&amp;gt;name . &amp;quot;\n&amp;quot;; } } function getPackageById($id=0, $onlyShow=0, $showPrices=1) { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $package = $packageClient-&amp;gt;getItems(); print &amp;quot;ID, KeyName, Description \n&amp;quot;; foreach ($package as $item) { if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) { print $item-&amp;gt;id .</description>
    </item>
    
    <item>
      <title>Order Server with security software</title>
      <link>https://softlayer.github.io/php/orderBareMetal/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/orderBareMetal/</guid>
      <description>&amp;lt;?php require_once &#39;./vendor/autoload.php&#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &#39;&#39;; $this-&amp;gt;apiKey = &#39;&#39;; } function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;quot;ID -&amp;gt; Name \n&amp;quot;; foreach($packages as $package) { print $package-&amp;gt;id . &amp;quot; -&amp;gt; &amp;quot; . $package-&amp;gt;name . &amp;quot;\n&amp;quot;; } } function getPackageById($id=0, $onlyShow=0, $showPrices = 1) { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $package = $packageClient-&amp;gt;getItems(); print &amp;quot;ID, KeyName, Description \n&amp;quot;; foreach ($package as $item) { if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) { print $item-&amp;gt;id .</description>
    </item>
    
    <item>
      <title>Order an SSL Certificate</title>
      <link>https://softlayer.github.io/php/orderSSLCert/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/orderSSLCert/</guid>
      <description>Generating a CSR You will need a csr to make this request, it should be on your local file system.
openssl genrsa -out domain.key 2048 openssl req -new -sha256 -key domain.key -out domain.csr  &amp;lt;?php require_once &#39;./vendor/autoload.php&#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &#39;&#39;; $this-&amp;gt;apiKey = &#39;&#39;; } /* * Package 0 is the &amp;quot;Everything else&amp;quot; pacakge, which contains SSL certain. But if you didn&#39;t remember that * this function will get you that information */ function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;quot;ID -&amp;gt; Name \n&amp;quot;; foreach($packages as $package) { print $package-&amp;gt;id .</description>
    </item>
    
    <item>
      <title>Order an SSL Certificate</title>
      <link>https://softlayer.github.io/python/orderSSLCert/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderSSLCert/</guid>
      <description>Generating a CSR You will need a csr to make this request, it should be on your local file system.
The contents of the CSR MATTER, they need to match the information for what you are ordering. + orderApproverEmailAddress must match the Email Address of the CSR + The CSR Common name must be set and must be a part of the orderApproverEmailAddress
$ openssl genrsa -out domain.key 2048 $ openssl req -new -sha256 -key domain.</description>
    </item>
    
    <item>
      <title>List Packages</title>
      <link>https://softlayer.github.io/ruby/list_packages/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_packages/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; # Helper function to fetch through all results from SoftLayer api # using small page sizes and sleeping before every new page fetch. def fetch_all(service, method) records = []; offset = 0; limit = 10 loop do results = service.result_limit(offset, limit).send(method) records += results break if results.size &amp;lt; limit offset += limit sleep 3 end records end # Credentials to the SoftLayer API are grabbed from the config file by default.</description>
    </item>
    
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>https://softlayer.github.io/ruby/create_server_from_template/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_server_from_template/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; IMAGE_ID = &#39;foobar&#39; # change me. Image template global ID. # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new order_template = { hostname: &#39;test&#39;, domain: &#39;example.com&#39;, datacenter: &#39;hou02&#39;, cores: 2, # 2 x 2.0 GHz Cores memory: 4, # 4GB RAM private_network_only: false, dedicated_host_only: false, #os_reference_code: &#39;CENTOS_6_64&#39;, # CentOS 6.latest minimal (64 bit) image_template: SoftLayer::ImageTemplate.template_with_global_id(IMAGE_ID), use_local_disk: false, # Use a SAN disk hourly: true # Charge me for hourly use, rather than monthly.</description>
    </item>
    
    <item>
      <title>Ordering with placeOrder</title>
      <link>https://softlayer.github.io/rest/place_order/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/rest/place_order/</guid>
      <description>Operation: POST
Method: SoftLayer_Product_Order::placeOrder()
URL: SoftLayer_Product_Order/verifyOrder`
Example CURL:
curl -u userid:api_key -X POST --data @create.json https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/verifyOrder  Input JSON:
{ &amp;quot;parameters&amp;quot; : [ { &amp;quot;packageId&amp;quot; : 126, &amp;quot;location&amp;quot; :449494, &amp;quot;quantity&amp;quot; : 1, &amp;quot;hardware&amp;quot;: [{ &amp;quot;hostname&amp;quot;: &amp;quot;TEST&amp;quot;, &amp;quot;domain&amp;quot;: &amp;quot;test1&amp;quot; }], &amp;quot;prices&amp;quot;: [ {&amp;quot;id&amp;quot;: 13739}, {&amp;quot;id&amp;quot;: 13748}, {&amp;quot;id&amp;quot;: 1267}, {&amp;quot;id&amp;quot;: 342}, {&amp;quot;id&amp;quot;: 21141}, {&amp;quot;id&amp;quot;: 58}, {&amp;quot;id&amp;quot;: 876}, {&amp;quot;id&amp;quot;: 57}, {&amp;quot;id&amp;quot;: 55}, {&amp;quot;id&amp;quot;: 21}, {&amp;quot;id&amp;quot;: 906}, {&amp;quot;id&amp;quot;: 420}, {&amp;quot;id&amp;quot;: 418}, {&amp;quot;id&amp;quot;: 37620} ] } ] }  The Price Ids Explained Use getItemPrices to find the IDs and Items you need</description>
    </item>
    
    <item>
      <title>List Packages</title>
      <link>https://softlayer.github.io/python/list_packages/</link>
      <pubDate>Fri, 28 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_packages/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): &amp;quot;&amp;quot;&amp;quot; Gets ALL packages, and prints their name and price descriptions &amp;quot;&amp;quot;&amp;quot; mask = &amp;quot;mask[hourlyBillingAvailableFlag]&amp;quot; result = self.client[&#39;Product_Package&#39;].getAllObjects(); for product in result: print str(product[&#39;id&#39;]) + &amp;quot; - &amp;quot; + product[&#39;name&#39;] # result has a LOT of stuff in it, only print it out if you are ready # pp.pprint(result) def getPackage(self, package_id=0): &amp;quot;&amp;quot;&amp;quot; Gets a specific package and prints out some useful information &amp;quot;&amp;quot;&amp;quot; mask = &amp;quot;mask[items[prices]]&amp;quot; # Not all packages are available in all locations, you can check that with getLocations() # locations = self.</description>
    </item>
    
    <item>
      <title>Order a vyatta server with placeOrder</title>
      <link>https://softlayer.github.io/php/order_vyatta/</link>
      <pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/order_vyatta/</guid>
      <description>&amp;lt;?php require_once &#39;./vendor/autoload.php&#39;; $apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;); $apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;); $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Order&#39;, null, $apiUser, $key); $template = new stdClass(); $template_extra = new stdClass(); $template-&amp;gt;packageId = 174; $template-&amp;gt;location = 224092; $template-&amp;gt;quantity = 1; $template_extra-&amp;gt;os = 21; //vyatta $template_extra-&amp;gt;hostname = &#39;foo-vga-small&#39;; $template_extra-&amp;gt;domain = &#39;softlayer-singapore-test.com&#39;; //These might be invalid now, please double check on ordering $template_extra-&amp;gt;price_id = array(13739, // Single Quad Xeon 1270 3.4G 8M 21010, // 4G 878, // Raid //31693, // Raid 1 1267, // 500G 274, // 1GbE 342, // 20T // 21, // 1IP 56, // Ping/TCP Mon 57, // Notification ); $my_template = new stdClass(); for ($cnt = 0; $cnt &amp;lt; $template-&amp;gt;quantity; $cnt++) { $domain = new stdClass(); $domain-&amp;gt;hostname = &amp;quot;$template_extra-&amp;gt;hostname-$cnt&amp;quot;; $domain-&amp;gt;domain = $template_extra-&amp;gt;domain; $template-&amp;gt;hardware[] = $domain; } if (empty($template-&amp;gt;imageTemplateGlobalIdentifier)) { $template_extra-&amp;gt;price_id[] = $template_extra-&amp;gt;os; } foreach ($template_extra-&amp;gt;price_id as $id) { $price = new stdClass(); $price-&amp;gt;id = $id; $template-&amp;gt;prices[] = $price; } $my_template-&amp;gt;orderContainers = array(); $my_template-&amp;gt;orderContainers[0]-&amp;gt;prices = $template-&amp;gt;prices; $my_template-&amp;gt;orderContainers[0]-&amp;gt;hardware = $template-&amp;gt;hardware; $my_template-&amp;gt;orderContainers[0]-&amp;gt;quantity = $template-&amp;gt;quantity; $my_template-&amp;gt;orderContainers[0]-&amp;gt;location = $template-&amp;gt;location; $my_template-&amp;gt;orderContainers[0]-&amp;gt;packageId = $template-&amp;gt;packageId; print_r($my_template); $result = $client-&amp;gt;verifyOrder($my_template); print_r($result);  </description>
    </item>
    
    <item>
      <title>Upgrade virtual guest</title>
      <link>https://softlayer.github.io/php/upgrade_virtual_guest/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/upgrade_virtual_guest/</guid>
      <description>&amp;lt;?php /* You can use the getenv() module to pull your exported Username and API key to keep from having to store them in your files */ require_once &#39;./vendor/autoload.php&#39;; $apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;); $apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;); $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Order&#39;, null, $apiUsername, $apiKey); //The price of the item you want to upgrade to $price1 = new \stdClass(); $price1-&amp;gt;id = 1641; //The virtual guest you want to upgrade $guest = new \stdClass(); $guest-&amp;gt;id = 22983449; $priceClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, 46, $apiUsername, $apiKey); $objectMask = new \SoftLayer\Common\ObjectMask(); $objectMask-&amp;gt;description; $objectMask-&amp;gt;capacity; $objectMask-&amp;gt;prices-&amp;gt;id; $objectMask-&amp;gt;categories-&amp;gt;id; $priceClient-&amp;gt;setObjectMask($objectMask); $items = $priceClient-&amp;gt;getObject(); //Shows you what prices are available to select from print_r($items); $upgrade = new \stdClass(); $upgrade-&amp;gt;complexType = &amp;quot;SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade&amp;quot;; $upgrade-&amp;gt;prices = array($price1); $upgrade-&amp;gt;properties = new \stdClass(); $upgrade-&amp;gt;properties-&amp;gt;maintenanceWindow; $upgrade-&amp;gt;properties-&amp;gt;maintenanceWindow-&amp;gt;name = &amp;quot;MAINTENANCE_WINDOW&amp;quot;; $upgrade-&amp;gt;properties-&amp;gt;maintenanceWindow-&amp;gt;value = &amp;quot;now&amp;quot;; $upgrade-&amp;gt;virtualGuests = array($guest); print_r($upgrade); //change to placeOrder($upgrade) to actually make it happen $response = $client-&amp;gt;placeOrder($upgrade); print_r($response); ?</description>
    </item>
    
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>https://softlayer.github.io/python/create_server_from_template/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_server_from_template/</guid>
      <description>getPrivateBlockDeviceTemplateGroups will return a list of all the templates that you have created on your account. Use this method to find the id of the template you want to create a server from.
import SoftLayer from pprint import pprint as pp templateId = 12345 client = SoftLayer.Client() mask = &amp;quot;mask[id,name,note]&amp;quot; imageTemplates = client[&#39;SoftLayer_Account&#39;].getPrivateBlockDeviceTemplateGroups(mask=mask) print(&amp;quot;ID - Name - Note&amp;quot;) for template in imageTemplates: try: print(&amp;quot;%s - %s - %s&amp;quot; % (template[&#39;id&#39;], template[&#39;name&#39;], template[&#39;note&#39;])) except KeyError: print(&amp;quot;%s - %s - %s&amp;quot; % (template[&#39;id&#39;], template[&#39;name&#39;], &#39;None&#39;)) order = { &#39;complexType&#39;: &#39;SoftLayer_Container_Product_Order_Virtual_Guest&#39;, &#39;quantity&#39;: 1, &#39;virtualGuests&#39;: [ {&#39;hostname&#39;: &#39;test-template&#39;, &#39;domain&#39;: &#39;example.</description>
    </item>
    
    <item>
      <title>Required price IDs for package</title>
      <link>https://softlayer.github.io/php/get_required_price_id/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/php/get_required_price_id/</guid>
      <description>&amp;lt;?php /* follow the installation instructions to get SoftLayer API PHP Client working: https://github.com/softlayer/softlayer-api-php-client#installation */ require_once __DIR__.&#39;/vendor/autoload.php&#39;; use SoftLayer\Common\ObjectMask; use SoftLayer\SoapClient; /** * Set your SoftLayer API username and key. */ $apiUsername = &#39;&#39;; $apiKey = &#39;&#39;; $packageId = 46; $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, $packageId, $apiUsername, $apiKey); try { $mask = new SoftLayer\Common\ObjectMask(); $mask-&amp;gt;configuration-&amp;gt;itemCategory; $client-&amp;gt;setObjectMask($mask); $configs = $client-&amp;gt;getConfiguration(); $requiredCategories = array(); foreach ($configs as $config) { if ($config-&amp;gt;isRequired == 1) { $requiredCategories[$config-&amp;gt;itemCategory-&amp;gt;id][&#39;name&#39;] = $config-&amp;gt;itemCategory-&amp;gt;name; } } $categories = array(); $mask = new SoftLayer\Common\ObjectMask(); $mask-&amp;gt;itemPrices-&amp;gt;categories; $client-&amp;gt;setObjectMask($mask); $prices = $client-&amp;gt;getItemPrices(); foreach ($requiredCategories as $category =&amp;gt; $categoryName) { $i = 0; foreach ($prices as $price) { foreach ($price-&amp;gt;categories as $priceCategory) { if ($priceCategory-&amp;gt;id == $category) { $requiredCategories[$category][&#39;itemPrices&#39;][$i][&#39;id&#39;] = $price-&amp;gt;id; $requiredCategories[$category][&#39;itemPrices&#39;][$i][&#39;description&#39;] = $price-&amp;gt;item-&amp;gt;description; asort($requiredCategories[$category][&#39;itemPrices&#39;][$i]); asort($requiredCategories); $i++; } } } } print_r($requiredCategories); } catch ( Exception $e) { die( $e-&amp;gt;getMessage()); } ?</description>
    </item>
    
    <item>
      <title>Required price IDs for package</title>
      <link>https://softlayer.github.io/python/get_required_price_id/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_required_price_id/</guid>
      <description>import SoftLayer package = 46 client = SoftLayer.Client() categoryObjectMask = &amp;quot;mask[isRequired, itemCategory[id, name]]&amp;quot; configurations = client[&#39;Product_Package&#39;].getConfiguration( id=package, mask=categoryObjectMask) pricesObjectMask = &amp;quot;mask[id;item.description;categories.id]&amp;quot; prices = client[&#39;Product_Package&#39;].getItemPrices( id=package, mask=pricesObjectMask) headerFormat = &#39;%s - %s:&#39; priceFormat = &#39; %s -- %s&#39; for configuration in configurations: if (not configuration[&#39;isRequired&#39;]): continue print headerFormat % (configuration[&#39;itemCategory&#39;][&#39;name&#39;], configuration[&#39;itemCategory&#39;][&#39;id&#39;]) for price in prices: if (&#39;categories&#39; not in price): continue if any((category.get(&#39;id&#39;) == configuration[&#39;itemCategory&#39;][&#39;id&#39;] for category in price[&#39;categories&#39;])): print priceFormat % (price[&#39;id&#39;], price[&#39;item&#39;][&#39;description&#39;])  </description>
    </item>
    
  </channel>
</rss>