<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on SoftLayer API</title>
    <link>https://softlayer.github.io/python/</link>
    <description>Recent content in Python on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Advanced Quote Ordering</title>
      <link>https://softlayer.github.io/python/order_quote_advanced/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_quote_advanced/</guid>
      <description>Quotes Quotes are a way to save an order, and then easily duplicate the order later. You can create a quote from the control portal by going through the normal order process, and then instead of hitting &amp;ldquo;Order&amp;rdquo; at the end, there will be a button that says &amp;ldquo;Save Quote&amp;rdquo;, which will save the order for later. You can then use the quote service to pull down the information about it from the API.</description>
    </item>
    
    <item>
      <title>LBaaS Examples</title>
      <link>https://softlayer.github.io/python/lbaas/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/lbaas/</guid>
      <description>This example covers a variety of API calls that you might want to use when interacting with the Load Balancer as a Service offering. General information about this service can be found on the Load Balancer as a Service Documentation
&amp;#34;&amp;#34;&amp;#34; Manages LBaaS instances. This sample shows how to use a variety of the common methods when working with LBaaS instances. This example is more a proof of concept to show basically how it all works, and not really intended to be used as is.</description>
    </item>
    
    <item>
      <title>Event Logs</title>
      <link>https://softlayer.github.io/python/event_log/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/event_log/</guid>
      <description>This example deals with a few ways of pulling data from SoftLayer_Event_Log. There can ben quite a few Logs here, so I recommend using a filter like in the recentLogs function to limit how far back you search for Events, otherwise you will be paging through Events for a long time.
&amp;#34;&amp;#34;&amp;#34; @author Christopher Gallo &amp;#34;&amp;#34;&amp;#34; import datetime import SoftLayer class example(): def __init__(self): self.client = SoftLayer.Client() debugger = SoftLayer.DebugTransport(self.client.transport) self.</description>
    </item>
    
    <item>
      <title>buildExamples.py</title>
      <link>https://softlayer.github.io/python/buildExamples.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/buildExamples.py/</guid>
      <description>import os from pprint import pprint as pp import re import time template = &amp;#34;&amp;#34;&amp;#34;--- title: &amp;#34;{title}&amp;#34; description: &amp;#34;{description}&amp;#34; date: &amp;#34;{date}&amp;#34; classes: {classes} tags: {tags} --- {example}
&amp;#34;&amp;#34;&amp;#34; class examples(): def main(self): out_dir = &amp;#39;/Users/christopher/Code/githubio_source/content&amp;#39; for root, dirs, files in os.walk(&amp;#34;.&amp;#34;): path = root.split(os.sep) # pp(path) # print((len(path) - 1) * &amp;#39;---&amp;#39;, os.path.basename(root)) for file in files: # print(len(path) * &amp;#39;---&amp;#39;, file) print(&amp;#34;Working on %s&amp;#34; % file) output = self.buildExample(file, root) out_folder = self.</description>
    </item>
    
    <item>
      <title>closeAlarm.py</title>
      <link>https://softlayer.github.io/python/closeAlarm.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/closeAlarm.py/</guid>
      <description># example to delete an specific alarm from a virtual server # # some reference pages # # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/ # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMonitoringActiveAlarms # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/closeAlarm # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # import SoftLayer # Your SoftLayer API username and key. # Generate an API key at the SoftLayer Customer Portal: # https://manage.softlayer.com/Administrative/apiKeychain # The id of the virtual server which contains the alarm you wish to delete # you can get the virtual guest ID by calling the SoftLayer_Account::getVirtualGuests method # for more reference see: http://sldn.</description>
    </item>
    
    <item>
      <title>createScaleGroup.py</title>
      <link>https://softlayer.github.io/python/createScaleGroup.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createScaleGroup.py/</guid>
      <description>#!/usr/bin/env python3 import SoftLayer # client configuration # Your SoftLayer API username. USERNAME = &amp;#39;&amp;#39; # Generate one at https://manage.softlayer.com/Administrative/apiKeychain API_KEY = &amp;#39;apikey_goes_here&amp;#39; # Declare the API client client = SoftLayer.Client(username=USERNAME,api_key=API_KEY) scaleGroupService = client[&amp;#39;SoftLayer_Scale_Group&amp;#39;] template = { &amp;#34;cooldown&amp;#34; : 1800, &amp;#34;maximumMemberCount&amp;#34; : 5, &amp;#34;minimumMemberCount&amp;#34; : 1, &amp;#34;name&amp;#34; : &amp;#34;testRaul2cb03&amp;#34;, &amp;#34;regionalGroupId&amp;#34; : 102, &amp;#34;suspendedFlag&amp;#34; : False, &amp;#34;terminationPolicyId&amp;#34; : 2, &amp;#34;virtualGuestMemberTemplate&amp;#34; : { &amp;#34;domain&amp;#34; : &amp;#34;test.com&amp;#34;, &amp;#34;hostname&amp;#34; : &amp;#34;hostnametest&amp;#34;, &amp;#34;maxMemory&amp;#34; : 1024, &amp;#34;postInstallScriptUri&amp;#34; : &amp;#34;https://www.</description>
    </item>
    
    <item>
      <title>createScaleGroupTriggerPolicy.py</title>
      <link>https://softlayer.github.io/python/createScaleGroupTriggerPolicy.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createScaleGroupTriggerPolicy.py/</guid>
      <description># Example to create a scale group with a policy and a trigger # trigger will be: If my CPU Percentage is greater than 80 for 30 Minute(s) # Action: Scale group to 1 Member (absolute) # reference pages # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Scale_Policy_Trigger_ResourceUse # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Scale_Group # http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group # http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group/createObject import SoftLayer # client configuration # Your SoftLayer API username. USERNAME = &amp;#39;&amp;#39; # Generate one at https://manage.softlayer.com/Administrative/apiKeychain API_KEY = &amp;#39;apikey_goes_here&amp;#39; # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>createTicketAttachedFile.py</title>
      <link>https://softlayer.github.io/python/createTicketAttachedFile.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createTicketAttachedFile.py/</guid>
      <description>import SoftLayer # client configuration ENDPOINT = &amp;#34;http://api.softlayer.com/v3/sldn/xmlrpc/&amp;#34; # Your SoftLayer API username. USERNAME = &amp;#39;&amp;#39; # Generate one at https://manage.softlayer.com/Administrative/apiKeychain API_KEY = &amp;#39;apikey_goes_here&amp;#39; # Declare the API client client = SoftLayer.Client(endpoint_url=ENDPOINT, username=USERNAME,api_key=API_KEY) #client = SoftLayer.Client(username=USERNAME,api_key=API_KEY) templateObject = { &amp;#34;assignedUserId&amp;#34; : 104672, &amp;#34;notifyUserOnUpdateFlag&amp;#34; : True, &amp;#34;subjectId&amp;#34; : 1522, &amp;#34;title&amp;#34; : &amp;#34;ticket example&amp;#34; } contents = &amp;#39;this the ticket contet&amp;#39; attachedFiles = [ { &amp;#34;data&amp;#34; : &amp;#34;gICBdDQp9&amp;#34;, &amp;#34;filename&amp;#34; : &amp;#34;test2.txt&amp;#34; } ] attachID = 0 rootPassword = &amp;#34;&amp;#34; controlPanelPassword = &amp;#34;&amp;#34; accesPort = &amp;#34;&amp;#34; attachedFiles = attachedFiles try: # getting the VLANs result = client[&amp;#39;SoftLayer_Ticket&amp;#39;].</description>
    </item>
    
    <item>
      <title>createTicketAttachedFileEncode.py</title>
      <link>https://softlayer.github.io/python/createTicketAttachedFileEncode.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createTicketAttachedFileEncode.py/</guid>
      <description>import SoftLayer import base64 # client configuration ENDPOINT = &amp;#34;http://api.softlayer.com/v3/sldn/xmlrpc/&amp;#34; # Your SoftLayer API username. USERNAME = &amp;#39;&amp;#39; # Generate one at https://manage.softlayer.com/Administrative/apiKeychain API_KEY = &amp;#39;apikey_goes_here&amp;#39; # Declare the API client #client = SoftLayer.Client(endpoint_url=ENDPOINT, username=USERNAME,api_key=API_KEY) client = SoftLayer.Client(username=USERNAME,api_key=API_KEY) encoded_string = &amp;#34;&amp;#34; with open(&amp;#34;C:\\test.png&amp;#34;, &amp;#34;rb&amp;#34;) as image_file: encoded_string = base64.b64encode(image_file.read()) templateObject = { &amp;#34;assignedUserId&amp;#34; : 205832, &amp;#34;notifyUserOnUpdateFlag&amp;#34; : True, &amp;#34;subjectId&amp;#34; : 1522, &amp;#34;title&amp;#34; : &amp;#34;Test Ticket Please Close at your earliest convenience&amp;#34; } contents = &amp;#39;this the ticket contet&amp;#39; attachedFiles = [ { &amp;#34;data&amp;#34; : encoded_string, &amp;#34;filename&amp;#34; : &amp;#34;test2.</description>
    </item>
    
    <item>
      <title>edit_record.py</title>
      <link>https://softlayer.github.io/python/edit_record.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_record.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Edit a Record. It edits an existing domain resource record Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain_ResourceRecord/editObject http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/getResourceRecords http://sldn.softlayer.com/reference/datatypes/SoftLayer_Dns_Domain_ResourceRecord License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;&amp;#39; API_KEY = &amp;#39;apikey_goes_here&amp;#39; recordId = 55687207 client = SoftLayer.Client( username=API_USERNAME, api_key=API_KEY) # Create a object template to edit the Resource Record. objectTemplate = { &amp;#34;data&amp;#34;: &amp;#34;127.</description>
    </item>
    
    <item>
      <title>edit_standard_rules.py</title>
      <link>https://softlayer.github.io/python/edit_standard_rules.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_standard_rules.py/</guid>
      <description># Edit Standard Rule # A rule set of a firewall is modified by passing a SoftLayer_Network_Firewall_Update_Request template object # to SoftLayer_Network_Firewall_Update_Request::createObject. The entire rule set is rewritten with each # update request. This means it is necessary to include all past unchanged rules along with any modifications # or additions. This is easily accomplished by pulling in the existing rules as described above then modifying # the gathered array. # Each SoftLayer_Network_Component_Firewall_Update_Request_Rule object requires: # # action - permit or deny # destinationIpAddress - destination address # destinationIpSubnetMask - subnet mask for destination # sourceIpAddress - originating address # sourceIpSubnetMask - subnet mask for origin address # protocol - tcp/udp # destinationPortRangeStart - first port the rule will effect # destinationPortRangeEnd - last port the rule will effect # orderValue - order in which rules are applied (lower is sooner) # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>edit_vlan_firewall_rules.py</title>
      <link>https://softlayer.github.io/python/edit_vlan_firewall_rules.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_vlan_firewall_rules.py/</guid>
      <description># Edit Vlan firewall rule. # # A firewall&amp;#39;s ruleset is modified by passing a SoftLayer_Network_Firewall_Update_Request template # object to SoftLayer_Network_Firewall_Update_Request::createObject. The entire ruleset is rewritten # with each update request. This means it is necessary to include all past unchanged rules along with any # modifications or additions. This is easily accomplished by pulling in the existing rules as described above # then modifying the gathered array. # Each SoftLayer_Network_Component_Firewall_Update_Request_Rule object requires: # # action - permit or deny # destinationIpAddress - destination address # destinationIpSubnetMask - subnet mask for destination # sourceIpAddress - originating address # sourceIpSubnetMask - subnet mask for origin address # protocol - tcp/udp # destinationPortRangeStart - first port the rule will effect # destinationPortRangeEnd - last port the rule will effect # orderValue - order in which rules are applied (lower is sooner) # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>get_snapshot_space_available.py</title>
      <link>https://softlayer.github.io/python/get_snapshot_space_available.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_snapshot_space_available.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get snapshot space available The script makes a single call to SoftLayer_Account::getNetworkStorage method to get the network storages into the account and uses a mask in order to get the snapshot space available. See below for more details Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNetworkStorage http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Storage License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal: https://manage.</description>
    </item>
    
    <item>
      <title>get_user_status.py</title>
      <link>https://softlayer.github.io/python/get_user_status.py/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_user_status.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get User status. This script will list the status of sub-users similar to the view displayed at https://control.softlayer.com/account/users it calls to SoftLayer_User_Customer::getChildUsers method to retrieve the user list. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer from prettytable import PrettyTable &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;&amp;#39; API_KEY = &amp;#39;apikey_goes_here&amp;#39; # Set the User ID of the user we want to get the information, we can get this information by # SoftLayer_Account::getUsers method.</description>
    </item>
    
    <item>
      <title>Ordering Vyatta Network Gateways</title>
      <link>https://softlayer.github.io/python/orderVyatta/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderVyatta/</guid>
      <description>This example goes over how to order a Single or HA vyatta with a bunch of optional settings. More context around ordering can be found in https://softlayer.github.io/python/orderBareMetal/ and https://softlayer.github.io/python/ordering_slcli/
import SoftLayer from SoftLayer.managers import ordering import sys from pprint import pprint as pp import logging logging.debug(&amp;#34;Starting up&amp;#34;) # Requires softlayer-python 5.4.3+ class vyattaOrderer(): def __init__(self): if SoftLayer.__version__ &amp;lt; &amp;#39;v5.4.3&amp;#39;: print(&amp;#34;SoftLayer needs to be 5.4.3+, is currently %s&amp;#34; % SoftLayer.__version__) self.client = SoftLayer.</description>
    </item>
    
    <item>
      <title>Creating a support ticket</title>
      <link>https://softlayer.github.io/python/create_ticket/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_ticket/</guid>
      <description>Getting Subjects Standard support tickets&amp;rsquo; titles must be selected from a pre-determined list of ticket subjects, defined in the SoftLayer_Ticket_Subject service. The following example will output all of the Ticket Subjects:
import SoftLayer client = SoftLayer.Client() def getSubjects(self): mask = &amp;#34;mask[group]&amp;#34; subjects = client.call(&amp;#39;SoftLayer_Ticket_Subject&amp;#39;, &amp;#39;getAllObjects&amp;#39;, mask=mask) print(&amp;#34;|Subject Id | Subject Name | Group Name |&amp;#34;) print(&amp;#34;| --- | --- | --- |&amp;#34;) for subject in subjects: print(&amp;#34;|%s| %s| %s|&amp;#34; % (subject[&amp;#39;id&amp;#39;], subject[&amp;#39;name&amp;#39;], subject[&amp;#39;group&amp;#39;][&amp;#39;name&amp;#39;])) Subjects    Subject Id Subject Name Group Name     1522 API Question Support   1001 Accounting Request Accounting   1181 CDN Question SysAdmin   1261 Colocation Service Request Hardware   1041 DNS Request Support   1201 DOS/Abuse Issue Support   1121 Hardware Firewall Question Support   1021 Hardware Issue Support   1122 Hardware Load Balancer Question Support   1081 Licensing Question Support   1141 Mail Server Issue Support   1004 OS Reload Question Support   1005 Portal Information Question Support   1061 Private Network Question Support   1022 Public Network Question Support   1003 Reboots and Console Access Support   1002 Sales Request Sales   1603 Sales Request - Compute &amp;amp; Infrastructure Sales   1645 Sales Request - Firewall Service Sales   1647 Sales Request - General Question Sales   1605 Sales Request - Network &amp;amp; Security Services Sales   1643 Sales Request - Other Services Sales   1607 Sales Request - Upgrades &amp;amp; Add-ons Sales   1101 Security Issue Support   1161 Storage Question Support   1221 Transcoding Question Support   1723 VMware Solutions VMware Solutions   1482 Vyatta Question SysAdmin    Creating Tickets Once you have the Ticket Subject ID you can pass it to createStandardTicket.</description>
    </item>
    
    <item>
      <title>Ordering with KeyNames</title>
      <link>https://softlayer.github.io/python/ordering_slcli/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/ordering_slcli/</guid>
      <description>Version 5.4.0 of the Softlayer-python project introducted some managers and CLI functions that greatly simplify the ordering processes via the api.
Building a package still requires a few steps however.
1. Find the package name slcli order package-list The most common packages are the following:
   Description Package KeyName Package Type     Additional Products ADDITIONAL_PRODUCTS ADDITIONAL_SERVICES   Cloud Server CLOUD_SERVER VIRTUAL_SERVER_INSTANCE   Network Gateway Appliance NETWORK_GATEWAY_APPLIANCE BARE_METAL_GATEWAY   Load Balancers LOAD_BALANCERS ADDITIONAL_SERVICES_LOAD_BALANCER   Bare Metal Server BARE_METAL_SERVER BARE_METAL_CPU_FAST_PROVISION   POWER8 TULETA IBM_POWER_8 BARE_METAL_POWER_CPU   Object Storage OBJECT_STORAGE ADDITIONAL_SERVICES_OBJECT_STORAGE   Firewall FIREWALL ADDITIONAL_SERVICES_FIREWALL   Storage As A Service (StaaS) STORAGE_AS_A_SERVICE_STAAS STORAGE_AS_A_SERVICE   Load Balancer As A Service (LBaaS) LBAAS LOAD_BALANCER_AS_A_SERVICE   Dedicated Host DEDICATED_HOST DEDICATED_HOST   Public Virtual Server PUBLIC_CLOUD_SERVER VIRTUAL_SERVER_INSTANCE    Once we have selected a package we need to find out where we can order this package.</description>
    </item>
    
    <item>
      <title>ListDedicatedHost.py</title>
      <link>https://softlayer.github.io/python/ListDedicatedHost.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/ListDedicatedHost.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the dedicated hosts in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getDedicatedHosts http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_DedicatedHost License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;setme&amp;#39; API_KEY = &amp;#39;setme&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] try: response = accountService.getDedicatedHosts() print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the dedicated hosts. faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.</description>
    </item>
    
    <item>
      <title>activate_agent.py</title>
      <link>https://softlayer.github.io/python/activate_agent.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/activate_agent.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Active an agent. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/activate http://sldn.softlayer.com/article/object-masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json vsiIp = &amp;#34;169.45.98.148&amp;#34; agentName = &amp;#34;DHCP Response Monitoring Agent&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] agentService = client[&amp;#39;SoftLayer_Monitoring_Agent&amp;#39;] try: objectMask = &amp;#34;mask[monitoringRobot[id, robotStatus[name]], monitoringAgents[statusName, name, id], monitoringServiceEligibilityFlag, datacenter]&amp;#34; vsi = vsiService.findByIpAddress(vsiIp, mask=objectMask) if not vsi: print(&amp;#34;There is no a vsi with the IP address: &amp;#34; + vsiIp) exit(1) agent = {} for agents in vsi[&amp;#39;monitoringAgents&amp;#39;]: if agents[&amp;#39;name&amp;#39;].</description>
    </item>
    
    <item>
      <title>activate_private_port.py</title>
      <link>https://softlayer.github.io/python/activate_private_port.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/activate_private_port.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Activate private Port. It activates the private network port Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/activatePrivatePort License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Set the server id in order to activate the network port.</description>
    </item>
    
    <item>
      <title>activate_public_port.py</title>
      <link>https://softlayer.github.io/python/activate_public_port.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/activate_public_port.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Activate Public Port. It Activate the public network port Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/activatePublicPort License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Set the server id in order to activate the network port.</description>
    </item>
    
    <item>
      <title>activate_scale_group.py</title>
      <link>https://softlayer.github.io/python/activate_scale_group.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/activate_scale_group.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Activate a scale group. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group/editObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Scale_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; scaleGroupId = 28660 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) scaleGroupService = client[&amp;#39;SoftLayer_Scale_Group&amp;#39;] template = { &amp;#34;id&amp;#34;: scaleGroupId, &amp;#34;suspendedFlag&amp;#34;: False } try: result = scaleGroupService.editObject(template, id=scaleGroupId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to activate the scale group. faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>add_devices_to_pool.py</title>
      <link>https://softlayer.github.io/python/add_devices_to_pool.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_devices_to_pool.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Add servers and VSIs to a bandwidth pool. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/requestVdrContentUpdates License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; listServerIps = [&amp;#34;184.172.45.210&amp;#34;, &amp;#34;108.168.251.167&amp;#34;] listVsiIps = [&amp;#34;169.54.234.102&amp;#34;] poolId = 234419 # Declare the API client client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) hardwareService = client[&amp;#39;SoftLayer_Hardware_Server&amp;#39;] vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] poolService = client[&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;] try: hardwareToAdd = [] hardwareToRemove = [] cloudsToAdd = [] cloudsToRemove = [] for ip in listServerIps: server = hardwareService.</description>
    </item>
    
    <item>
      <title>add_firewall_rule_to_vsi.py</title>
      <link>https://softlayer.github.io/python/add_firewall_rule_to_vsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_firewall_rule_to_vsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Add firewall rules to the Firewall in a VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getFirewallServiceComponent http://sldn.softlayer.com/reference/services/SoftLayer_Network_Firewall_Update_Request/createObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiIp = &amp;#34;169.57.129.196&amp;#34; # Creating an array SoftLayer_Network_Firewall_Update_Request_Rule skeleton object # which contains the rules to add to the firewall. rules = [ { &amp;#39;action&amp;#39;: &amp;#39;permit&amp;#39;, &amp;#39;protocol&amp;#39;: &amp;#39;tcp&amp;#39;, &amp;#39;version&amp;#39;: 4, &amp;#39;sourceIpAddress&amp;#39;: &amp;#39;10.2.2.3&amp;#39;, &amp;#39;orderValue&amp;#39;: 5, &amp;#39;sourceIpCidr&amp;#39;: 32, &amp;#39;destinationIpAddress&amp;#39;: &amp;#39;169.</description>
    </item>
    
    <item>
      <title>add_locations_to_image_template.py</title>
      <link>https://softlayer.github.io/python/add_locations_to_image_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_locations_to_image_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Update Locations The script create(s) transaction(s) to set the archived block device available locations. Important manual pages: https://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group/setAvailableLocations https://sldn.softlayer.com/reference/datatypes/SoftLayer_Location https://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # The virtual guest ID you want to create a template imageTemplateId = 1796623 # The name of the image template &amp;#34;&amp;#34;&amp;#34; Build a skeleton of SoftLayer_Location array containing the locations´ identifiers.</description>
    </item>
    
    <item>
      <title>add_origin_mapping.py</title>
      <link>https://softlayer.github.io/python/add_origin_mapping.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_origin_mapping.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create an origin mappings in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/createOriginPullMapping http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdnid = 30393 template = { &amp;#34;mediaType&amp;#34;: &amp;#34;HTTP&amp;#34;, &amp;#34;originUrl&amp;#34;: &amp;#34;http://www.example.com&amp;#34;, &amp;#34;cname&amp;#34;: &amp;#34;cdn.example.com&amp;#34; } # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) cdnService = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] try: response = cdnService.createOriginPullMapping(template, id=cdnid) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>add_portal_permission.py</title>
      <link>https://softlayer.github.io/python/add_portal_permission.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_portal_permission.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Add permissions to user The script adds permissions to an arbitrary user by making a single call to the SoftLayer_User_Customer::addBulkPortalPermission method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/ http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addBulkPortalPermission http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The user id you wish to add permissions userId = 213758 &amp;#34;&amp;#34;&amp;#34; You can get all permissions by calling the SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects method see http://sldn.</description>
    </item>
    
    <item>
      <title>add_service_group.py</title>
      <link>https://softlayer.github.io/python/add_service_group.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_service_group.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Add a new service group. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress/editObject http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Type http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Type/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Method http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Method/getAllObjects License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; loadBalancerId = 79945 # The new allocation value for the service groups. # The sum of the allocation of all your services group must be 100. # If you add a new service group it is required to change the allocation # value of the previous service groups into the load balancer.</description>
    </item>
    
    <item>
      <title>add_service_to_service_group.py</title>
      <link>https://softlayer.github.io/python/add_service_to_service_group.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_service_to_service_group.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Add a new service to a service group. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress/editObject http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check_Type http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check_Type/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet_IpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet_IpAddress/findByIpv4Address License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; loadBalancerId = 79945 serviceGroupId = 138193 destinationIpAddress = &amp;#34;169.53.15.53&amp;#34; destinationPort = 40 weight = 10 notes = &amp;#34;my service group note&amp;#34; enabled = True healthCheck = &amp;#34;Ping&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) loadBalancerService = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress&amp;#39;] healthService = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check_Type&amp;#39;] ipService = client[&amp;#39;SoftLayer_Network_Subnet_IpAddress&amp;#39;] heaqlthFilter = {&amp;#34;name&amp;#34;: {&amp;#34;operation&amp;#34;: healthCheck}} objectMask = &amp;#34;mask[sslActiveFlag, notes, sslEnabledFlag, loadBalancerHardware[hostname,datacenterName,location,locationPathString], ipAddress, virtualServers[notes,port,id,allocation,serviceGroups[services[groupReferences[weight],healthChecks[type[id,name],attributes],ipAddress[id,ipAddress]],routingMethod,routingType]]]&amp;#34; try: healthCheck = healthService.</description>
    </item>
    
    <item>
      <title>add_subscribers.py</title>
      <link>https://softlayer.github.io/python/add_subscribers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_subscribers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Add subscribers The scripts adds subscribers to an arbitrary VSI machine. for more information see below: Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMonitoringAgents http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getEligibleAlarmSubscibers http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/setActiveAlarmSubscriber http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/SoftLayer_User_Customer/getObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent/SoftLayer_User_Customer License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Client configuration USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; hostnames = [&amp;#34;rctest&amp;#34;, &amp;#34;rctest2&amp;#34;] mailsToAdd = [&amp;#34;Nelson.Cabero@jalasoft.com&amp;#34;, &amp;#34;miguel.higorre@jalasoft.com&amp;#34;] client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) try: # Getting all virtual servers on the account vServers = client[&amp;#39;Account&amp;#39;].</description>
    </item>
    
    <item>
      <title>add_user_permissions.py</title>
      <link>https://softlayer.github.io/python/add_user_permissions.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/add_user_permissions.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Add user permission. This script adds a single permission to an user. Use the SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects method to retrieve a list of all permissions available in the SoftLayer. Important manual Pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addPortalPermission http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Set the user ID of the user you want to add permissions, you can get it using the method SoftLayer_Account::getUsers.</description>
    </item>
    
    <item>
      <title>agent_status.py</title>
      <link>https://softlayer.github.io/python/agent_status.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/agent_status.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Guet the status of the monitoring agent. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/article/object-masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json vsiIp = &amp;#34;169.45.98.148&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] try: objectMask = &amp;#34;mask[monitoringRobot[id, robotStatus[name]], monitoringAgents[statusName, name, id], monitoringServiceEligibilityFlag, datacenter]&amp;#34; vsi = vsiService.findByIpAddress(vsiIp, mask=objectMask) if not vsi: print(&amp;#34;There is no a vsi with the IP address: &amp;#34; + vsiIp) exit(1) status = {} status[&amp;#39;monitoringRobotStatus&amp;#39;] = vsi[&amp;#39;monitoringRobot&amp;#39;] status[&amp;#39;agents&amp;#39;] = vsi[&amp;#39;monitoringAgents&amp;#39;] print(json.</description>
    </item>
    
    <item>
      <title>allow_access_from_virtual_guest.py</title>
      <link>https://softlayer.github.io/python/allow_access_from_virtual_guest.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/allow_access_from_virtual_guest.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Allow access to Consistent Performance Storage iSCSI. This script allows the access to Consistent Performance Storage iSCSI from a virtual guest using the SoftLayer_Network_Storage::allowAccessFromVirtualGuest method. See below references for more details. Important manual Pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/allowAccessFromVirtualGuest @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: import pprint # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Set the storage Id to allow the access from a virtual instance, you can get a list of storage with SoftLayer::getNetworkStorage &amp;#34;&amp;#34;&amp;#34; storageId = 4379484 &amp;#34;&amp;#34;&amp;#34; Set the server id which will be attached to the storage, retrieve a list of virtual guests by SoftLayer_Account::getVirtualGuests &amp;#34;&amp;#34;&amp;#34; serverId = 7598482 virtualGuestTemplate = {&amp;#39;id&amp;#39;: serverId} # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>associate_vlan.py</title>
      <link>https://softlayer.github.io/python/associate_vlan.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/associate_vlan.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Associate vlans in a gateway device. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway_Vlan/createObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Gateway_Vlan/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; gatewayId = 127643 vlanIdToAdd = 1054265 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) gatewayVlanService = client[&amp;#39;SoftLayer_Network_Gateway_Vlan&amp;#39;] object = { &amp;#34;bypassFlag&amp;#34;: True, &amp;#34;networkGatewayId&amp;#34;: gatewayId, &amp;#34;networkVlanId&amp;#34;: vlanIdToAdd } template = [] template.append(object) try: result = gatewayVlanService.createObjects(template) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>backup_netscaler.py</title>
      <link>https://softlayer.github.io/python/backup_netscaler.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/backup_netscaler.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; NetScalers Backups Example to take Netscalers backups, the script will list all the Netscalers in the account and will look for an specific Netscaler in order to take a backup Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller/saveCurrentConfiguration http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller https://sldn.softlayer.com/reference/services/SoftLayer_Account/getApplicationDeliveryControllers https://sldn.softlayer.com/reference/services/SoftLayer_Account/ &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The name of the netscaler you wish take the backup netscalerName = &amp;#34;SLADC208473-1&amp;#34; # Declare the API client and creating the services that we need client = SoftLayer.</description>
    </item>
    
    <item>
      <title>bypass_rules_for_a_firewall_in_a_bypass.py</title>
      <link>https://softlayer.github.io/python/bypass_rules_for_a_firewall_in_a_bypass.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/bypass_rules_for_a_firewall_in_a_bypass.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Bypass rules for a firewall in a VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getFirewallServiceComponent http://sldn.softlayer.com/reference/services/SoftLayer_Network_Firewall_Update_Request/createObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiIp = &amp;#34;169.57.129.196&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) guestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] firewallService = client[&amp;#39;SoftLayer_Network_Component_Firewall&amp;#39;] firewallUpdateService = client[&amp;#39;SoftLayer_Network_Firewall_Update_Request&amp;#39;] try: vsi = guestService.findByIpAddress(vsiIp) firewall = guestService.getFirewallServiceComponent(id=vsi[&amp;#39;id&amp;#39;]) oldRules = firewallService.getRules(id=firewall[&amp;#39;id&amp;#39;]) template = { &amp;#39;bypassFlag&amp;#39;: True, &amp;#39;networkComponentFirewallId&amp;#39;: firewall[&amp;#39;id&amp;#39;], &amp;#39;rules&amp;#39;: oldRules } result = firewallUpdateService.</description>
    </item>
    
    <item>
      <title>bypass_vlans.py</title>
      <link>https://softlayer.github.io/python/bypass_vlans.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/bypass_vlans.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Bypass the vlans in a gateway device. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/getInsideVlans http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/bypassVlans http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; gatewayId = 127643 vlanIdsToRemove = [1054267, 822929] client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) gatewayService = client[&amp;#39;SoftLayer_Network_Gateway&amp;#39;] objectFilter = {&amp;#34;insideVlans&amp;#34;: {&amp;#34;networkVlanId&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: vlanIdsToRemove}]}}} try: gatewayVlans = gatewayService.getInsideVlans(id=gatewayId, filter=objectFilter) result = gatewayService.bypassVlans(gatewayVlans, id=gatewayId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>cancel_cdn.py</title>
      <link>https://softlayer.github.io/python/cancel_cdn.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/cancel_cdn.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Cancel CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item_Cancellation_Request/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account/ http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The name of the CDN to cancel. cdnAccountName = &amp;#34;14793&amp;#34; immediateCancellation = True client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) billingService = client[&amp;#39;SoftLayer_Billing_Item_Cancellation_Request&amp;#39;] accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] # Set an object mask to get the billing item associated to the CDNN. objectMask = &amp;#34;mask[billingItem]&amp;#34; # Set an object filter to get only the configured CDN to delete in the result.</description>
    </item>
    
    <item>
      <title>cancel_global_ip.py</title>
      <link>https://softlayer.github.io/python/cancel_global_ip.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/cancel_global_ip.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Cancel Global IP address. Cancel the global IP address resource using its billing Item. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelItem http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet/getGlobalIpRecord License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; subnetId = 880617 mask = &amp;#39;id,billingItem.id&amp;#39; client = SoftLayer.Client( username=API_USERNAME, api_key=API_KEY ) try: subnetResult = client[&amp;#39;SoftLayer_Network_Subnet&amp;#39;].</description>
    </item>
    
    <item>
      <title>cancel_load_balancer.py</title>
      <link>https://softlayer.github.io/python/cancel_load_balancer.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/cancel_load_balancer.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Cancel load balancer. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item_Cancellation_Request http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item_Cancellation_Request http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item_Cancellation_Request/createObject http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; loadBalancerId = 109225 immediateCancellationFlag = True client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) loadBalancerService = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress&amp;#39;] cancellationService = client[&amp;#39;SoftLayer_Billing_Item_Cancellation_Request&amp;#39;] objectMask = &amp;#34;mask[accountId, dedicatedFlag,dedicatedBillingItem[id],billingItem[id]]&amp;#34; try: loadBalancer = loadBalancerService.getObject(id=loadBalancerId, mask=objectMask) billingItemId = 0 if loadBalancer[&amp;#39;dedicatedFlag&amp;#39;]: billingItemId = loadBalancer[&amp;#39;dedicatedBillingItem&amp;#39;][&amp;#39;id&amp;#39;] else: billingItemId = loadBalancer[&amp;#39;billingItem&amp;#39;][&amp;#39;id&amp;#39;] cancelTemplate = { &amp;#39;accountId&amp;#39;: loadBalancer[&amp;#39;accountId&amp;#39;], &amp;#39;items&amp;#39;: [ { &amp;#39;billingItemId&amp;#39;: billingItemId, &amp;#39;immediateCancellationFlag&amp;#39;: immediateCancellationFlag } ] } result = cancellationService.</description>
    </item>
    
    <item>
      <title>cancel_server.py</title>
      <link>https://softlayer.github.io/python/cancel_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/cancel_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Cancel servers from a list of IPs This script looks for a server with a determinated IP address and delete it. It makes a single call to the cancelService() method in the SoftLayer_Billing_Item API service Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item_Hardware http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelItem License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set-me&amp;#39; # The list of IPs from the servers you wish cancel # (separate them by commas, e.</description>
    </item>
    
    <item>
      <title>cancel_storage.py</title>
      <link>https://softlayer.github.io/python/cancel_storage.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/cancel_storage.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Cancel Consistent Performance Storage iSCSI. This script cancels the service of a Consistent Performance Storage iSCSI, passing a storage billing ID to SoftLayer_Billing_Item::cancelService method. See below references for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelService @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: import pprint # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Set storage Id to Cancel, you can get a list of network storage available in the account using the SoftLayer_Account::getNetworkStorage method.</description>
    </item>
    
    <item>
      <title>cancel_subnet.py</title>
      <link>https://softlayer.github.io/python/cancel_subnet.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/cancel_subnet.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Cancel a Subnet. Cancel network subnet using its billing Item. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelItem License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; subnetId = 85467 client = SoftLayer.Client( username=API_USERNAME, api_key=API_KEY ) try: subnetResult = client[&amp;#39;SoftLayer_Network_Subnet&amp;#39;].getBillingItem( id=subnetId) billingItemId = subnetResult[&amp;#39;id&amp;#39;] try: result = client[&amp;#39;SoftLayer_Billing_Item&amp;#39;].</description>
    </item>
    
    <item>
      <title>cancel_virtual_guest.py</title>
      <link>https://softlayer.github.io/python/cancel_virtual_guest.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/cancel_virtual_guest.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Cancel a Virtual Guest. It cancels the resource for a billing Item. The billing item will be cancelled immediately and reclaim of the resource will begin shortly. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getObject http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelService License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; virtualGuestId = 35747489 client = SoftLayer.</description>
    </item>
    
    <item>
      <title>cancel_vlan.py</title>
      <link>https://softlayer.github.io/python/cancel_vlan.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/cancel_vlan.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Example to cancel a VLAN The script will get the Billing_Item id of the VLAN service then it will cancel the VLAN service Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getObject http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelService License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The VLAN id you wish to cancel vlanId = 563298 # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>clone_configuration_template.py</title>
      <link>https://softlayer.github.io/python/clone_configuration_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/clone_configuration_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a monitoring configuration template and a template group The script clones an existent configuration template performs a change in the configuration template then creates a template group and adds the created configuration template to the new template group. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Configuration_Template http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent_Configuration_Template_Group http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.</description>
    </item>
    
    <item>
      <title>configure_agent_cpu.py</title>
      <link>https://softlayer.github.io/python/configure_agent_cpu.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/configure_agent_cpu.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Configure the section &amp;#39;CPU&amp;#39; from the &amp;#39;Cpu, Disk, and Memory Monitoring Agent&amp;#39; agent. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/applyConfigurationValues http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent_Configuration_Value License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The IP address of the server or VSI to configure. ipAddres = &amp;#34;23.246.195.66&amp;#34; configuration = { &amp;#39;Graph System CPU Usage&amp;#39;: &amp;#34;False&amp;#34;, &amp;#39;Graph Total CPU Usage&amp;#39;: &amp;#34;False&amp;#34;, &amp;#39;Graph User CPU Usage&amp;#39;: &amp;#34;True&amp;#34;, &amp;#39;Graph I/O Wait CPU Usage&amp;#39;: &amp;#34;True&amp;#34;, &amp;#39;Processor Queue Length Alarm&amp;#39;: &amp;#34;True&amp;#34;, &amp;#39;CPU Usage Error Alarm&amp;#39;: &amp;#34;True&amp;#34;, &amp;#39;CPU Usage Error Alarm Threshold&amp;#39;: &amp;#34;99&amp;#34;, &amp;#39;CPU Usage Warning Alarm&amp;#39;: &amp;#34;True&amp;#34;, &amp;#39;CPU Usage Warning Alarm Threshold&amp;#39;: &amp;#34;82&amp;#34;, &amp;#39;Processor Queue Length Alarm&amp;#39;: &amp;#34;True&amp;#34;, &amp;#39;Max Queue Length&amp;#39;: &amp;#34;4&amp;#34; } # The agent&amp;#39;s name we wish to configure.</description>
    </item>
    
    <item>
      <title>configure_agent_creating_new_profile_disk.py</title>
      <link>https://softlayer.github.io/python/configure_agent_creating_new_profile_disk.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/configure_agent_creating_new_profile_disk.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a new &amp;#39;Disk Profile&amp;#39; configuration for the &amp;#39;Cpu, Disk, and Memory Monitoring Agent&amp;#39; agent. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/addConfigurationProfile http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent_Configuration_Value License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The IP address of the server or VSI to configure. ipAddres = &amp;#34;23.246.195.66&amp;#34; configuration = { &amp;#39;Disk Path&amp;#39;: &amp;#34;c:/&amp;#34;, &amp;#39;Description&amp;#39;: &amp;#34;file system c:/&amp;#34;, &amp;#39;Graph Disk Usage&amp;#39;: &amp;#34;TRUE&amp;#34;, &amp;#39;Graph Disk Usage as Percentage&amp;#39;: &amp;#34;TRUE&amp;#34;, &amp;#39;Disk Usage Error Alarm&amp;#39;: &amp;#34;TRUE&amp;#34;, &amp;#39;Usage Error Alarm Threshold&amp;#39;: &amp;#34;90&amp;#34;, &amp;#39;Disk Usage Warning Alarm&amp;#39;: &amp;#34;TRUE&amp;#34;, &amp;#39;Disk Usage Warning Threshold&amp;#39;: &amp;#34;90&amp;#34;, } # The agent&amp;#39;s name we wish to configure.</description>
    </item>
    
    <item>
      <title>configure_agent_edit_profile_disk.py</title>
      <link>https://softlayer.github.io/python/configure_agent_edit_profile_disk.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/configure_agent_edit_profile_disk.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Edit the configuration for the &amp;#34;Disk Profile&amp;#34; section of a monitoring agent. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/addConfigurationProfile http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent_Configuration_Value License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The IP address of the server or VSI to configure. ipAddres = &amp;#34;5.153.59.197&amp;#34; configuration = { &amp;#39;Disk Path&amp;#39;: &amp;#34;c:/&amp;#34;, &amp;#39;Description&amp;#39;: &amp;#34;file system c:/&amp;#34;, &amp;#39;Graph Disk Usage&amp;#39;: &amp;#34;TRUE&amp;#34;, &amp;#39;Graph Disk Usage as Percentage&amp;#39;: &amp;#34;TRUE&amp;#34;, &amp;#39;Disk Usage Error Alarm&amp;#39;: &amp;#34;TRUE&amp;#34;, &amp;#39;Usage Error Alarm Threshold&amp;#39;: &amp;#34;95&amp;#34;, &amp;#39;Disk Usage Warning Alarm&amp;#39;: &amp;#34;TRUE&amp;#34;, &amp;#39;Disk Usage Warning Threshold&amp;#39;: &amp;#34;90&amp;#34;, } # The agent&amp;#39;s name we will configure.</description>
    </item>
    
    <item>
      <title>configure_agent_memory.py</title>
      <link>https://softlayer.github.io/python/configure_agent_memory.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/configure_agent_memory.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Configure the section &amp;#39;Memory&amp;#39; from the &amp;#39;Cpu, Disk, and Memory Monitoring Agent&amp;#39; agent. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/applyConfigurationValues http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent_Configuration_Value License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The IP address of the server or VSI to configure. ipAddres = &amp;#34;5.153.59.197&amp;#34; configuration = { &amp;#34;Graph Memory Usage&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Graph Memory Usage as Percentage&amp;#34;: &amp;#34;TRUE&amp;#34;, &amp;#34;Graph Physical Memory Usage&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Graph Physical Memory Usage as Percentage&amp;#34;: &amp;#34;TRUE&amp;#34;, &amp;#34;Graph Swap Memory Usage&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Graph Swap Memory Usage as Percentage&amp;#34;: &amp;#34;TRUE&amp;#34;, &amp;#34;Graph System Paging in Kb/s&amp;#34;: &amp;#34;TRUE&amp;#34;, &amp;#34;Graph System Paging in Pg/s&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Total Memory Usage Error Alarm&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Total Memory Usage Error Threshold&amp;#34;: &amp;#34;90&amp;#34;, &amp;#34;Total Memory Usage Warning Alarm&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Total Memory Usage Warning Threshold&amp;#34;: &amp;#34;50&amp;#34;, &amp;#34;Physical Memory Usage Error Alarm&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Physical Memory Usage Error Threshold&amp;#34;: &amp;#34;95&amp;#34;, &amp;#34;Physical Memory Usage Warning Alarm&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Physical Memory Usage Warning Threshold&amp;#34;: &amp;#34;85&amp;#34;, &amp;#34;Swap Memory Usage Error Alarm&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Swap Memory Usage Error Threshold&amp;#34;: &amp;#34;85&amp;#34;, &amp;#34;Swap Memory Usage Warning Alarm&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Swap Memory Usage Warning Threshold&amp;#34;: &amp;#34;60&amp;#34;, &amp;#34;Paging Error Alarm Active&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Paging Error Alarm Threshold&amp;#34;: &amp;#34;400&amp;#34;, &amp;#34;Paging Warning Alarm Active&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Paging Warning Alarm Threshold&amp;#34;: &amp;#34;150&amp;#34; } # The agent&amp;#39;s name we wish to configure.</description>
    </item>
    
    <item>
      <title>copy_to_external_source.py</title>
      <link>https://softlayer.github.io/python/copy_to_external_source.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/copy_to_external_source.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Copy to external source This script creates a transaction to export/copy a template to an external source Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/copyToExternalSource http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Virtual_Guest_Block_Device_Template_Configuration License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Declare the image template identifier that you wish to export imageTemplateId = 1796405 &amp;#39;&amp;#39;&amp;#39; Define the parameters below, which refers to object storage where the image template will be copied.</description>
    </item>
    
    <item>
      <title>create_Dns_Zone.py</title>
      <link>https://softlayer.github.io/python/create_Dns_Zone.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_Dns_Zone.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a DNS Zone. This script creates a new domain on the SoftLayer name servers. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Dns_Domain License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Sets SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Object template to create the new zone. objectTemplate = { &amp;#39;name&amp;#39;: &amp;#39;mydomain.</description>
    </item>
    
    <item>
      <title>create_bare_metal.py</title>
      <link>https://softlayer.github.io/python/create_bare_metal.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_bare_metal.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new server. Build a SoftLayer_Container_Product_Order object for a new server order and pass it to the SoftLayer_Product_Order API service to order it. In this care we&amp;#39;ll order a Single Intel Xeon E5-2620 with 8G RAM, 100mbit NICs, 500GB bandwidth, a 500G SATA drive, no Operating system, and default server order options. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder https://sldn.softlayer.com/reference/services/SoftLayer_Account/getActivePackages License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc.</description>
    </item>
    
    <item>
      <title>create_cancel_server_ticket.py</title>
      <link>https://softlayer.github.io/python/create_cancel_server_ticket.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_cancel_server_ticket.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create cancel server ticket Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Ticket/ http://sldn.softlayer.com/reference/services/SoftLayer_Ticket/createCancelServerTicket License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username. USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://manage.softlayer.com/Administrative/apiKeychain. API_KEY = &amp;#39;set me&amp;#39; # Declare the API client and creating the services that we need client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) ticketService = client[&amp;#39;SoftLayer_Ticket&amp;#39;] serverId = 198982 reason = &amp;#34;No longer needed&amp;#34; content = &amp;#34;cancel because we want a new server&amp;#34; try: result = ticketService.</description>
    </item>
    
    <item>
      <title>create_customer.py</title>
      <link>https://softlayer.github.io/python/create_customer.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_customer.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; Create a customer. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Brand/createCustomerAccount http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; template = { &amp;#39;address1&amp;#39;: &amp;#39;8200 Warden Ave&amp;#39;, &amp;#39;city&amp;#39;: &amp;#39;Markham&amp;#39;, &amp;#39;companyName&amp;#39;: &amp;#39;My company&amp;#39;, &amp;#39;email&amp;#39;: &amp;#39;email@softlayer.com&amp;#39;, &amp;#39;firstName&amp;#39;: &amp;#39;FirstName&amp;#39;, &amp;#39;lastName&amp;#39;: &amp;#39;Surename&amp;#39;, &amp;#39;officePhone&amp;#39;: &amp;#39;number&amp;#39;, &amp;#39;postalCode&amp;#39;: &amp;#39;L6G 1C7&amp;#39;, &amp;#39;state&amp;#39;: &amp;#39;TX&amp;#39;, &amp;#39;brandId&amp;#39;: 4, &amp;#39;country&amp;#39;: &amp;#39;CA&amp;#39; } client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) brandService = client[&amp;#39;SoftLayer_Brand&amp;#39;] try: result = brandService.createCustomerAccount(template) print(json.</description>
    </item>
    
    <item>
      <title>create_dedicated_firewall.py</title>
      <link>https://softlayer.github.io/python/create_dedicated_firewall.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_dedicated_firewall.py/</guid>
      <description># # Create a dedicated firewall # # This script will config a dedicated firewall service on # a vlan using the SoftLayer_Product_Order::placeOrder # method it is needed to build a skeleton SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated # object and provide the ID of vlan in which # the firewall service will be configured # To get prices IDs for firewall service use # SoftLayer_Product_Package::getItemPrices method. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/placeOrder # http://sldn.</description>
    </item>
    
    <item>
      <title>create_flex_image.py</title>
      <link>https://softlayer.github.io/python/create_flex_image.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_flex_image.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create an flex image from a CCI The script makes a single call to the SoftLayer_Virtual_Guest::captureImage method to create an flex image. please see below for more information. IMPORTANT: This script will no longer work properly as of Monday August 7, 2017 IBM Cloud (formerly SoftLayer) has discontinued offering the Flex Image service. https://control.softlayer.com/support/event/details/46488623 Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Disk_Image_Capture_Template http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/captureImage http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>create_flex_image_server.py</title>
      <link>https://softlayer.github.io/python/create_flex_image_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_flex_image_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create an flex image from a Server The script makes a single call to the SoftLayer_Hardware_Server::captureTemplate method in order to create a flex image from the bare metal server. For more information please see below. IMPORTANT: This script will no longer work properly as of Monday August 7, 2017 IBM Cloud (formerly SoftLayer) has discontinued offering the Flex Image service. https://control.softlayer.com/support/event/details/46488623 Important manual page: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Disk_Image_Capture_Template http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/captureImage http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc.</description>
    </item>
    
    <item>
      <title>create_image_from_external_source.py</title>
      <link>https://softlayer.github.io/python/create_image_from_external_source.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_image_from_external_source.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create Image Template from external source This script creates a transaction to import a disk image from an external source and create a standard image template Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/createFromExternalSource http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Virtual_Guest_Block_Device_Template_Configuration http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Declare the group name to be applied to the imported template name = &amp;#39;imageTemplateTest&amp;#39; # Declare the note to be applied to the imported template note = &amp;#39;An optional note&amp;#39; &amp;#39;&amp;#39;&amp;#39; Declare referenceCode of the operating system software description for the imported VHD available options: CENTOS_6_32, CENTOS_6_64, CENTOS_7_64, REDHAT_6_32, REDHAT_6_64, REDHAT_7_64, UBUNTU_12_32, UBUNTU_12_64, UBUNTU_14_32, UBUNTU_14_64, WIN_2003-STD-SP2-5_32, WIN_2003-STD-SP2-5_64, WIN_2008-STD-R2-SP1_64, WIN_2012-STD_64.</description>
    </item>
    
    <item>
      <title>create_job.py</title>
      <link>https://softlayer.github.io/python/create_job.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_job.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a transcode job. Important manual pages https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account/createTranscodeJob License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The transcode account id. transcodeAccountId = 1514 # The file you wish to convert. inputFile = &amp;#34;/in/535fec1f9828a535fe7e06697evideo1.avi&amp;#34; outputFile = &amp;#34;/out/myconvertedFile&amp;#34; # Name of the job. name = &amp;#34;testrc&amp;#34; autoDeleteDuration = 259200 # The output format.</description>
    </item>
    
    <item>
      <title>create_network_monitor.py</title>
      <link>https://softlayer.github.io/python/create_network_monitor.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_network_monitor.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create network monitoring The script creates a monitoring network with Service ping in a determinate IP address Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Monitor_Version1_Query_Host License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The ID of the server you wish to monitor serverId = 7698842 &amp;#34;&amp;#34;&amp;#34; ID of the query type which can be found with SoftLayer_Network_Monitor_Version1_Query_Host_Stratum/getAllQueryTypes.</description>
    </item>
    
    <item>
      <title>create_notification_subscribers.py</title>
      <link>https://softlayer.github.io/python/create_notification_subscribers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_notification_subscribers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a notification subscription The script creates a notification for a determinate user in a determinate Virtual Guest for more reference see these reference pages Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_Notification_Virtual_Guest/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_Notification_Virtual_Guests License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) userCustomerNotification = client[&amp;#39;SoftLayer_User_Customer_Notification_Virtual_Guest&amp;#39;] &amp;#34;&amp;#34;&amp;#34; Build a SoftLayer_User_Customer_Notification_Virtual_Guest skeleton object which contains the virtual guest id and user id of the notification &amp;#34;&amp;#34;&amp;#34; newNotification = [ { &amp;#39;guestId&amp;#39;: 7698972, &amp;#39;userId&amp;#39;: 205832 } ] try: result = userCustomerNotification.</description>
    </item>
    
    <item>
      <title>create_password.py</title>
      <link>https://softlayer.github.io/python/create_password.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_password.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a new password for a device. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_Password http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_Password/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Software_Component_Password/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The software component id which contains the password. softwareId = 7946585 username = &amp;#34;newUser2&amp;#34; password = &amp;#34;newPass&amp;#34; # optional field notes = &amp;#34;my optional note&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) passwordService = client[&amp;#39;SoftLayer_Software_Component_Password&amp;#39;] # Build a SoftLayer_Software_Component_Password object templatePass = { &amp;#34;username&amp;#34;: username, &amp;#34;password&amp;#34;: password, &amp;#34;notes&amp;#34;: notes, &amp;#34;softwareId&amp;#34;: softwareId } try: result = passwordService.</description>
    </item>
    
    <item>
      <title>create_pool.py</title>
      <link>https://softlayer.github.io/python/create_pool.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_pool.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a bandwidth pool. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/createObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; template = { &amp;#34;accountId&amp;#34;: 307608, &amp;#34;bandwidthAllotmentTypeId&amp;#34;: 2, &amp;#34;locationGroupId&amp;#34;: 1, # The region for the pool. &amp;#34;name&amp;#34;: &amp;#34;testPoolApi&amp;#34; } # Declare the API client client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) bandwidthService = client[&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;] try: result = bandwidthService.createObject(template) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>create_portal_user.py</title>
      <link>https://softlayer.github.io/python/create_portal_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_portal_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create Portal User. This script will create a new portal user based in the values set into a SoftLayer_User_Customer template object and then it will pass to SoftLayer_User_Customer::createObject method. Check below references for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; # Create a client instance to connect to the API service.</description>
    </item>
    
    <item>
      <title>create_quote.py</title>
      <link>https://softlayer.github.io/python/create_quote.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_quote.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a quote. This script creates a quote based in the information provided into the SoftLayer_Container_Product_Order_Virtual_Guest object passing that object to SoftLayer_Product_Order::placeQuote method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeQuote/ @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: import pprint &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal.</description>
    </item>
    
    <item>
      <title>create_server_simplified.py</title>
      <link>https://softlayer.github.io/python/create_server_simplified.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_server_simplified.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a VSI using the simplified way. The script creates a simple VSI using the SoftLayer_Virtual_Guest::createObject method Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject/ http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getCreateObjectOptions/ http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/generateOrderTemplate/ http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; # To get the configuration options to create the server # call the SoftLayer_Virtual_Guest::getCreateObjectOptions method.</description>
    </item>
    
    <item>
      <title>create_standard_firewall.py</title>
      <link>https://softlayer.github.io/python/create_standard_firewall.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_standard_firewall.py/</guid>
      <description># # Create a standard firewall # # This script will config a firewall service on # a virtual instance using the SoftLayer_Product_Order::placeOrder # method it is needed to build a skeleton of a virtual guest # object and provide the ID of virtual instance in which # the firewall service will be configured # To get prices IDs for firewall service use # SoftLayer_Product_Package::getCategories method. # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>create_standard_ticket_getting_subject_and_users.py</title>
      <link>https://softlayer.github.io/python/create_standard_ticket_getting_subject_and_users.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_standard_ticket_getting_subject_and_users.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create standard ticket The script creates a standard ticket, it makes a single call to the SoftLayer_Ticket::createStandardTicket method For more information see: Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/ http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_Ticket_Subject http://sldn.softlayer.com/reference/services/SoftLayer_Ticket_Subject/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Ticket http://sldn.softlayer.com/reference/services/SoftLayer_Ticket/createStandardTicket License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The name of the user to assign the ticket assingToUser = &amp;#34;pulse-lab&amp;#34; # The subject name of the ticket subjectName = &amp;#34;Vyatta Question&amp;#34; # Creating the services client = SoftLayer.</description>
    </item>
    
    <item>
      <title>create_subscriber.py</title>
      <link>https://softlayer.github.io/python/create_subscriber.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_subscriber.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create subscribers The script creates a subscription to an unplanned incident Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createSubscriberDeliveryMethods http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The customer ID you wish add the subscription customerId = 205830 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) userClient = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] deliveryMethodKeyNames = [ &amp;#34;EMAIL&amp;#34; ] try: templates = userClient.createSubscriberDeliveryMethods(&amp;#34;UNPLANNED_INCIDENT&amp;#34;, deliveryMethodKeyNames, id=customerId) print(templates) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to create the subscription faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>create_template.py</title>
      <link>https://softlayer.github.io/python/create_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create image template. The script creates a standard image template, it makes a call to the SoftLayer_Virtual_Guest::createArchiveTransaction method sending the IDs of the disks in the request, the response will provide an ID property which is the Transaction number until it´s being fully provisioned. For more information please see below. Important manual pages: https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createArchiveTransaction https://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>create_user.py</title>
      <link>https://softlayer.github.io/python/create_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create user The script creates an user, it makes a single call to the SoftLayer_User_Customer::createObject method. For more information see below. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/ http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username. USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://manage.softlayer.com/Administrative/apiKeychain API_KEY = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_User_Customer object # Containing the user you want to create. templateObject = { # Your account ID &amp;#34;accountId&amp;#34;: 1, &amp;#34;address1&amp;#34;: &amp;#34;4849 Alpha Rd.</description>
    </item>
    
    <item>
      <title>create_virtual_guest.py</title>
      <link>https://softlayer.github.io/python/create_virtual_guest.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_virtual_guest.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a new Virtual Guest. createObject() enables the creation of computing instances on an account. This method is a simplified alternative to interacting with the ordering system directly. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/generateOrderTemplate http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>create_virutal_guest_tag.py</title>
      <link>https://softlayer.github.io/python/create_virutal_guest_tag.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_virutal_guest_tag.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a VSI using the simplified way with tags. The script creates a simple VSI using the SoftLayer_Virtual_Guest::createObject method along with tags. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject/ http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getCreateObjectOptions/ http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/generateOrderTemplate/ http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; object_server = { &amp;#34;datacenter&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;dal05&amp;#34; }, &amp;#34;hostname&amp;#34;: &amp;#34;testborrame&amp;#34;, &amp;#34;domain&amp;#34;: &amp;#34;example.</description>
    </item>
    
    <item>
      <title>create_vsi_no_monitoring.py</title>
      <link>https://softlayer.github.io/python/create_vsi_no_monitoring.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_vsi_no_monitoring.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new VSI without advanced monitoring. The script makes a order for a VSI, it uses the SoftLayer_Product_Order::placeOrder method for more information please see below: Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>delet_origin_mapping.py</title>
      <link>https://softlayer.github.io/python/delet_origin_mapping.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/delet_origin_mapping.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete an origin mappings in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/deleteOriginPullRule http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdnid = 30393 originid = &amp;#34;co616979&amp;#34; # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) cdnService = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] try: response = cdnService.deleteOriginPullRule(originid, id=cdnid) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to delete the origin mappings.</description>
    </item>
    
    <item>
      <title>delete_domain_resource_record.py</title>
      <link>https://softlayer.github.io/python/delete_domain_resource_record.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/delete_domain_resource_record.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete Record. This script deletes a domain&amp;#39;s resource record. The deleteObject method returns Boolean true on successful deletion Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/getResourceRecords http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain_ResourceRecord/deleteObject http://sldn.softlayer.com/reference/services/SoftLayer_Account/getDomains License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Set a domain ID # To get Domain information: http://sldn.</description>
    </item>
    
    <item>
      <title>delete_image_template.py</title>
      <link>https://softlayer.github.io/python/delete_image_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/delete_image_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete an image template The script makes a single call to the SoftLayer_Virtual_Guest_Block_Device_Template_Group::deleteObject method to delete an image template. For more information see below. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/deleteObject http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; The image template which you wish to delete To get the list of images templates in your account call the Softlayer_Account::getPrivateBlockDeviceTemplateGroups method &amp;#34;&amp;#34;&amp;#34; imageTemplateId = 1796335 # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>delete_network_notification.py</title>
      <link>https://softlayer.github.io/python/delete_network_notification.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/delete_network_notification.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete network monitoring The script makes a single call to SoftLayer_Network_Monitor_Version1_Query_Host::deleteObject method to delete the network monitoring for more information see below Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host/deleteObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; The id of the network monitor you wish to delete virtualGuestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] virtualGuestId = 7698842 networkMonitors = virtualGuestService.</description>
    </item>
    
    <item>
      <title>delete_notification_subscriber.py</title>
      <link>https://softlayer.github.io/python/delete_notification_subscriber.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/delete_notification_subscriber.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete a notification subscription The script deletes a notification for a determinate user in a determinate Virtual Guest for more reference see these reference pages Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_Notification_Virtual_Guest/deleteObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_Notification_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) userCustomerNotification = client[&amp;#39;SoftLayer_User_Customer_Notification_Virtual_Guest&amp;#39;] &amp;#34;&amp;#34;&amp;#34; Build a SoftLayer_User_Customer_Notification_Virtual_Guest skeleton object which contains the id we wish to delete To get the notifications for an determinate Virtual Guest call the getObject method + the mask &amp;#34;mask[monitoringUserNotification]&amp;#34; e.</description>
    </item>
    
    <item>
      <title>delete_quote.py</title>
      <link>https://softlayer.github.io/python/delete_quote.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/delete_quote.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete quote. This script delete a presented quote in the SoftLayer Customer Portal&amp;#39;s (https://control.softlayer.com/account/quotes) using a single API call to SoftLayer_Billing_Order_Quote::deleteQuote method passing the ID of the quote to be deleted. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order_Quote http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order_Quote/deleteQuote @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Set quote id you want to delete, you may use the SoftLayer_Account::getQuotes to get the id of quotes available in the account.</description>
    </item>
    
    <item>
      <title>delete_scale.py</title>
      <link>https://softlayer.github.io/python/delete_scale.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/delete_scale.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete scale group. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group/deleteObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; scaleGroupId = 28660 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) scaleGroupService = client[&amp;#39;SoftLayer_Scale_Group&amp;#39;] try: result = scaleGroupService.deleteObject(id=scaleGroupId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to delete the scale group. faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.</description>
    </item>
    
    <item>
      <title>delete_user.py</title>
      <link>https://softlayer.github.io/python/delete_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/delete_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete user. This scripts allows to delete a given user, it retrieves the SoftLayer_User_Customer object by the SoftLayer_User_Customer::getObject method and changes the status of user to deleted. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; # Set the user ID of the user you want to delete, you can get them using # The method SoftLayer_Account::getUsers.</description>
    </item>
    
    <item>
      <title>desactivate_agent.py</title>
      <link>https://softlayer.github.io/python/desactivate_agent.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/desactivate_agent.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Desactive an agent. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/deactivate http://sldn.softlayer.com/article/object-masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json vsiIp = &amp;#34;169.45.98.148&amp;#34; agentName = &amp;#34;DHCP Response Monitoring Agent&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] agentService = client[&amp;#39;SoftLayer_Monitoring_Agent&amp;#39;] try: objectMask = &amp;#34;mask[monitoringRobot[id, robotStatus[name]], monitoringAgents[statusName, name, id], monitoringServiceEligibilityFlag, datacenter]&amp;#34; vsi = vsiService.findByIpAddress(vsiIp, mask=objectMask) if not vsi: print(&amp;#34;There is no a vsi with the IP address: &amp;#34; + vsiIp) exit(1) agent = {} for agents in vsi[&amp;#39;monitoringAgents&amp;#39;]: if agents[&amp;#39;name&amp;#39;].</description>
    </item>
    
    <item>
      <title>determine_required_items.py</title>
      <link>https://softlayer.github.io/python/determine_required_items.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/determine_required_items.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Determine Required items Each Package is aware of a list of ItemCategories that make sense for that Package. This list is called the Packages &amp;#34;Configuration&amp;#34;. Within the configuration, the Package may identify certain categories that are required, meaning you must include an ItemPrice from that category in any order you make against that Package Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getConfiguration http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/article/Python @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; package = 46 client = SoftLayer.</description>
    </item>
    
    <item>
      <title>disable_byol_os_license.py</title>
      <link>https://softlayer.github.io/python/disable_byol_os_license.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/disable_byol_os_license.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Remove BYOL OS License The script updates an image template to specify a user provided OS license, it allows you to remove BYOL attribute for a given image template. It requires the image template identifier of a SoftLayer_Virtual_Guest_Block_Device_Template_Group type. For more information please see below. Import manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/deleteByolAttribute License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>disable_cloudinit_image_template.py</title>
      <link>https://softlayer.github.io/python/disable_cloudinit_image_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/disable_cloudinit_image_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Disable CloudInit The script allows you to disable this image template as cloud init. It requires the image template identifier of a SoftLayer_Virtual_Guest_Block_Device_Template_Group type. For more information please see below. Import manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/deleteCloudInitAttribute License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # The image template which you wish more details imageTemplateId = 1796623 # Declaring the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>disable_email_invoice_after_creation.py</title>
      <link>https://softlayer.github.io/python/disable_email_invoice_after_creation.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/disable_email_invoice_after_creation.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Disable the email invoice after creation option. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createNotificationSubscriber http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;set me&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) result = userService.deactivateNotificationSubscriber(&amp;#34;BILLING_INVOICE_CREATED&amp;#34;, users[0][&amp;#39;accountId&amp;#39;], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>disable_require_security_questions_on_log_in.py</title>
      <link>https://softlayer.github.io/python/disable_require_security_questions_on_log_in.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/disable_require_security_questions_on_log_in.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Disable require security questions on log in. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) users[0][&amp;#39;secondaryLoginRequiredFlag&amp;#39;] = False result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>disable_user_can_edit_settings.py</title>
      <link>https://softlayer.github.io/python/disable_user_can_edit_settings.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/disable_user_can_edit_settings.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Disable user can edit settings. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) users[0][&amp;#39;secondaryLoginManagementFlag&amp;#39;] = True result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to disable user can edit settings.</description>
    </item>
    
    <item>
      <title>disassociate_vlan.py</title>
      <link>https://softlayer.github.io/python/disassociate_vlan.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/disassociate_vlan.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Disassociate vlans in a gateway device. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway_Vlan/deleteObject http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/getInsideVlans http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; gatewayId = 127643 vlanIdToRemove = 1054265 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) gatewayService = client[&amp;#39;SoftLayer_Network_Gateway&amp;#39;] gatewayVlanService = client[&amp;#39;SoftLayer_Network_Gateway_Vlan&amp;#39;] objectFilter = {&amp;#34;insideVlans&amp;#34;: {&amp;#34;networkVlanId&amp;#34;: {&amp;#34;operation&amp;#34;: vlanIdToRemove}}} try: gatewayVlan = gatewayService.getInsideVlans(id=gatewayId, filter=objectFilter) if len(gatewayVlan) == 0: print(&amp;#34;The Vlan id: &amp;#34; + str(vlanIdToRemove) + &amp;#34; is not associated to the gateway id: &amp;#34; + str(gatewayId)) exit(1) result = gatewayVlanService.</description>
    </item>
    
    <item>
      <title>duplicate_user.py</title>
      <link>https://softlayer.github.io/python/duplicate_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/duplicate_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Duplicate user Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/ http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getVirtualGuests http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getHardware http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getPermissions License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer def get_user(username, accountService): &amp;#34;&amp;#34;&amp;#34;Get an user. :param string username: The username of the user you wish to get. :param Softlayer_Account accountService: The Softlayer account service. :returns: A Softlayer_User_Customer object with the information about the user. &amp;#34;&amp;#34;&amp;#34; objectFilter = {&amp;#34;users&amp;#34;: { &amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: username}}} try: users = accountService.getUsers(filter=objectFilter) except SoftLayer.</description>
    </item>
    
    <item>
      <title>edit_details.py</title>
      <link>https://softlayer.github.io/python/edit_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Edit details of a Virtual Guest. It edits a computing instance&amp;#39;s properties Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/editObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; serverId = 35747489 # Create an object template with data that you wish to edit.</description>
    </item>
    
    <item>
      <title>edit_firewall_rule_from_vsi.py</title>
      <link>https://softlayer.github.io/python/edit_firewall_rule_from_vsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_firewall_rule_from_vsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Edit a firewall rule from a VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getFirewallServiceComponent http://sldn.softlayer.com/reference/services/SoftLayer_Network_Firewall_Update_Request/createObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiIp = &amp;#34;169.57.129.196&amp;#34; ruleToEdit = { &amp;#39;action&amp;#39;: &amp;#39;permit&amp;#39;, &amp;#39;protocol&amp;#39;: &amp;#39;tcp&amp;#39;, &amp;#39;sourceIpAddress&amp;#39;: &amp;#39;10.2.3.1&amp;#39;, &amp;#39;destinationIpAddress&amp;#39;: &amp;#39;169.57.129.196&amp;#39;, &amp;#39;destinationPortRangeStart&amp;#39;: 20, &amp;#39;destinationPortRangeEnd&amp;#39;: 30, } newRuleValues = { &amp;#39;action&amp;#39;: &amp;#39;permit&amp;#39;, &amp;#39;protocol&amp;#39;: &amp;#39;tcp&amp;#39;, &amp;#39;sourceIpAddress&amp;#39;: &amp;#39;10.2.2.3&amp;#39;, &amp;#39;destinationIpAddress&amp;#39;: &amp;#39;169.57.129.196&amp;#39;, &amp;#39;destinationPortRangeStart&amp;#39;: 8083, &amp;#39;destinationPortRangeEnd&amp;#39;: 8083, } client = SoftLayer.</description>
    </item>
    
    <item>
      <title>edit_monitoring_notification_ping.py</title>
      <link>https://softlayer.github.io/python/edit_monitoring_notification_ping.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_monitoring_notification_ping.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Change the basic monitoring The script will change the configuration for a address in a virtual guest reference pages Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host/editObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The virtual guest ID you wish change the monitoring virtualGuestId = 6143038 # The address you wish to change address = &amp;#34;10.</description>
    </item>
    
    <item>
      <title>edit_password.py</title>
      <link>https://softlayer.github.io/python/edit_password.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_password.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Edit a password for a device. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_Password http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_Password/editObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Software_Component_Password/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The software component password id which contains the password. passwordId = 8409127 username = &amp;#34;newUserEdit&amp;#34; password = &amp;#34;newPassEdit&amp;#34; # optional field notes = &amp;#34;my optional note&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) passwordService = client[&amp;#39;SoftLayer_Software_Component_Password&amp;#39;] # Build a SoftLayer_Software_Component_Password object templatePass = { &amp;#34;username&amp;#34;: username, &amp;#34;password&amp;#34;: password, &amp;#34;notes&amp;#34;: notes, } try: result = passwordService.</description>
    </item>
    
    <item>
      <title>edit_private_port_speed.py</title>
      <link>https://softlayer.github.io/python/edit_private_port_speed.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_private_port_speed.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Change Private Network Interface Speed. It sets the private network interface speed to the new speed. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/setPrivateNetworkInterfaceSpeed License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; virtualGuestId = 35747489 newSpeed = 100 # Create a SoftLayer Client.</description>
    </item>
    
    <item>
      <title>edit_public_port_speed.py</title>
      <link>https://softlayer.github.io/python/edit_public_port_speed.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_public_port_speed.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Change Public Network Interface Speed. It sets the public network interface speed to the new speed. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/setPublicNetworkInterfaceSpeed License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; virtualGuestId = 10403817 newPortValue = 10 # Create a SoftLayer Client.</description>
    </item>
    
    <item>
      <title>edit_server.py</title>
      <link>https://softlayer.github.io/python/edit_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Edit a bare metal server&amp;#39;s basic information Change the notes property for a single bare metal server record to the sentence &amp;#34;This is my fastest server!&amp;#34; using the editObject() method in the SoftLayer_Hardware_Server API service. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/editObject http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>edit_user.py</title>
      <link>https://softlayer.github.io/python/edit_user.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_user.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Edit User. Account master users and sub-users who have the User Manage permission in the SoftLayer customer portal can update other user&amp;#39;s information. Use editObject() if you wish to edit a single user account. Users who do not have the User Manage permission can only update their own information. Important manual Pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>enable_byol_os_license.py</title>
      <link>https://softlayer.github.io/python/enable_byol_os_license.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enable_byol_os_license.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Allow BYOL OS License The script updates an image template to specify a user provided OS license, it allows you to mark this image template as customer managed software license (BYOL). It requires the image template identifier of a SoftLayer_Virtual_Guest_Block_Device_Template_Group type. IMPORTANT: This property will work only for image templates created over servers provisioned with RHEL 7.x Minimal installation specifically (https://knowledgelayer.softlayer.com/procedure/use-red-hat-cloud-access) For more information please see below. Import manual pages: http://sldn.</description>
    </item>
    
    <item>
      <title>enable_cloudinit_image_template.py</title>
      <link>https://softlayer.github.io/python/enable_cloudinit_image_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enable_cloudinit_image_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Enable CloudInit The script allows you to mark this image template as cloud init. It requires the image template identifier of a SoftLayer_Virtual_Guest_Block_Device_Template_Group type. ONLY virtual servers that were ordered without selecting additional software, post-provisioning scripts, or advanced monitoring can be allowed to set cloudInit on their image templates. For more information please see below. Import manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/addCloudInitAttribute License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>enable_email_invoice_after_creation.py</title>
      <link>https://softlayer.github.io/python/enable_email_invoice_after_creation.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enable_email_invoice_after_creation.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Enable the email invoice after creation option. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createNotificationSubscriber http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;set me&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) result = userService.createNotificationSubscriber(&amp;#34;BILLING_INVOICE_CREATED&amp;#34;, users[0][&amp;#39;accountId&amp;#39;], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>enable_require_security_questions_on_log_in.py</title>
      <link>https://softlayer.github.io/python/enable_require_security_questions_on_log_in.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enable_require_security_questions_on_log_in.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Enable require security questions on log in. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) users[0][&amp;#39;secondaryLoginRequiredFlag&amp;#39;] = True result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>enable_snapshot_endurance.py</title>
      <link>https://softlayer.github.io/python/enable_snapshot_endurance.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enable_snapshot_endurance.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Enable Snapshot for a endurance. The example creates a daily snapshot at 14:05 Important Manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/enableSnapshots http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Client configuration Your SoftLayer API username and key. &amp;#34;&amp;#34;&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; scheduleType = &amp;#34;DAILY&amp;#34; retentionCount = 3 minute = 5 hour = 14 legacyIscsiId = 5805095 # Declaring the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) networkStorageService = client[&amp;#39;SoftLayer_Network_Storage&amp;#39;] try: result = networkStorageService.</description>
    </item>
    
    <item>
      <title>enable_user_can_edit_settings.py</title>
      <link>https://softlayer.github.io/python/enable_user_can_edit_settings.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enable_user_can_edit_settings.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Enable user can edit settings. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) users[0][&amp;#39;secondaryLoginManagementFlag&amp;#39;] = False result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to enable user can edit settings.</description>
    </item>
    
    <item>
      <title>firewall_report.py</title>
      <link>https://softlayer.github.io/python/firewall_report.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/firewall_report.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get firewall report Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet_IpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet_IpAddress/getTopTenSyslogEventsByProtocolsOneDay &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The ip address ID you which to generate the report ipAddressId = 12597032 # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) try: # Getting the report result = client[&amp;#39;SoftLayer_Network_Subnet_IpAddress&amp;#39;].getTopTenSyslogEventsByProtocolsOneDay(id=ipAddressId) print(result) except SoftLayer.SoftLayerAPIError as e: # If there was an error returned from the SoftLayer API then bomb out with the # error message.</description>
    </item>
    
    <item>
      <title>forward_zone_details.py</title>
      <link>https://softlayer.github.io/python/forward_zone_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/forward_zone_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; DNS Forward Zone Details The script shows the DNS Forward Zone Details.This means, that this retrieves the individual records contained within a domain record Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/getResourceRecords http://sldn.softlayer.com/reference/datatypes/SoftLayer_Dns_Domain_ResourceRecord License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Set SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Set the forward zone id dnsId = 1769988 # Create a new connection to the API service.</description>
    </item>
    
    <item>
      <title>gather_details.py</title>
      <link>https://softlayer.github.io/python/gather_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/gather_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get image template details. The script gets more details of an arbitrary image template, it uses an object mask to retrieve the information. For more information please see below. Import manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/getObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # The image template which you wish more details imageTemplateId = 1796405 # Declaring the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>getAvailableRouters.py</title>
      <link>https://softlayer.github.io/python/getAvailableRouters.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/getAvailableRouters.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the available backend routers to order a dedicated host. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_DedicatedHost/getAvailableRouters http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_DedicatedHost License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # API credentials USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) dedicatedHostService = client[&amp;#39;SoftLayer_Virtual_DedicatedHost&amp;#39;] # Skeleton of the dedicated host to specify datacenter and configuration sizes templateDedicatedHost = { &amp;#34;cpuCount&amp;#34;: 56, &amp;#34;diskCapacity&amp;#34;: 1200, &amp;#34;memoryCapacity&amp;#34;: 242, &amp;#34;datacenter&amp;#34;: { &amp;#34;id&amp;#34;: 814994 } } try: response = dedicatedHostService.</description>
    </item>
    
    <item>
      <title>getDedicatedHostToMigrate.py</title>
      <link>https://softlayer.github.io/python/getDedicatedHostToMigrate.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/getDedicatedHostToMigrate.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get valid dedicated host for migration. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getDedicatedHosts http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_DedicatedHost http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getDedicatedHost http://sldn.softlayer.com/article/object-masks http://sldn.softlayer.com/article/object-filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; virtualGuestIdToMigrate = 37117661 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] virtualGuestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] try: dedicatedHostSource = virtualGuestService.getDedicatedHost(id=virtualGuestIdToMigrate, mask=&amp;#34;mask[backendRouter]&amp;#34;) objectFilter = { &amp;#34;dedicatedHosts&amp;#34;: { &amp;#34;backendRouter&amp;#34;: { &amp;#34;id&amp;#34;: { &amp;#34;operation&amp;#34;: dedicatedHostSource[&amp;#34;backendRouter&amp;#34;][&amp;#34;id&amp;#34;] } } } } response = accountService.</description>
    </item>
    
    <item>
      <title>get_accounts_brands.py</title>
      <link>https://softlayer.github.io/python/get_accounts_brands.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_accounts_brands.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; Get owned account The script retrieves all the owned accounts for an arbitrary brand, the script makes a call to getOwnedBrands() method to retrieve the brands where the account belongs, then it calls the getAllOwnedAccounts() method to get the owned accounts for every brand. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getOwnedBrands http://sldn.softlayer.com/reference/services/SoftLayer_Account/getAllOwnedAccounts http://sldn.softlayer.com/reference/services/SoftLayer_Brand http://sldn.softlayer.com/reference/datatypes/SoftLayer_Brand License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_active_presets.py</title>
      <link>https://softlayer.github.io/python/get_active_presets.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_active_presets.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the active presets for a package. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Preset/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set-me&amp;#39; client = SoftLayer.create_client_from_env(username=API_USERNAME, api_key=API_KEY) packageService = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] packageId = 200 try: presets = packageService.getActivePresets(id=packageId) print(json.dumps(presets, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the presets for the package: \nfaultCode= %s, \nfaultString= %s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>get_active_presets_prices.py</title>
      <link>https://softlayer.github.io/python/get_active_presets_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_active_presets_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get active presets prices This script retrieves the available preset configurations for this package, also it provides information about the prices and items from them. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Preset @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the package id packageId = 200 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_agent_configuration.py</title>
      <link>https://softlayer.github.io/python/get_agent_configuration.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_agent_configuration.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the configuration of the monitoring agent in a server or VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent/ http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json ipAddres = &amp;#34;5.153.59.197&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] hardwareService = client[&amp;#39;SoftLayer_Hardware_Server&amp;#39;] try: objectMask = &amp;#39;mask[monitoringAgents[configurationTemplate[configurationSections[subSections]],&amp;#39; \ &amp;#39;configurationValues[id, value, profileId, agentId, configurationDefinitionId,&amp;#39; \ &amp;#39;profile, definition[attributes, section, valueType]]]]&amp;#39; server = vsiService.</description>
    </item>
    
    <item>
      <title>get_all_firewalls_in_the_account.py</title>
      <link>https://softlayer.github.io/python/get_all_firewalls_in_the_account.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_all_firewalls_in_the_account.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the firewalls in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNetworkVlans License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiIp = &amp;#34;169.57.129.196&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[firewallNetworkComponents,networkVlanFirewall,dedicatedFirewallFlag,firewallGuestNetworkComponents,firewallInterfaces,firewallRules,highAvailabilityFirewallFlag]&amp;#34; try: vlans = accountService.getNetworkVlans(mask=objectMask) firewalls = [] for vlan in vlans: if vlan[&amp;#39;dedicatedFirewallFlag&amp;#39;] == 1 or vlan[&amp;#39;highAvailabilityFirewallFlag&amp;#39;] or len(vlan[&amp;#39;firewallGuestNetworkComponents&amp;#39;]) &amp;gt; 0 or len(vlan[&amp;#39;firewallInterfaces&amp;#39;]) &amp;gt; 0 or len(vlan[&amp;#39;firewallNetworkComponents&amp;#39;]): firewalls.</description>
    </item>
    
    <item>
      <title>get_all_transcoding_status.py</title>
      <link>https://softlayer.github.io/python/get_all_transcoding_status.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_all_transcoding_status.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get all transcode statuses. Important manual pages https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Job_Status https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Job_Status/getAllStatuses https://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Media_Transcode_Job_Status License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declares the service. client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) transcodeService = client[&amp;#39;SoftLayer_Network_Media_Transcode_Job_Status&amp;#39;] try: status = transcodeService.getAllStatuses() print(json.dumps(status, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the transcode statuses. faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>get_antivirus_logs.py</title>
      <link>https://softlayer.github.io/python/get_antivirus_logs.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_antivirus_logs.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the anti-virus logs. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_AntivirusSpyware http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_AntivirusSpyware/getObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Software_Component_AntivirusSpyware License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; antivirusSpywareId = 2665230 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) antivirusSpywareService = client[&amp;#39;SoftLayer_Software_Component_AntivirusSpyware&amp;#39;] objectMask = &amp;#34;mask[latestAccessProtectionEvents,latestAntivirusEvents[virusActionTaken]]&amp;#34; try: response = antivirusSpywareService.getObject(id=antivirusSpywareId, mask=objectMask) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the logs.</description>
    </item>
    
    <item>
      <title>get_antivirus_spyware_for_servers.py</title>
      <link>https://softlayer.github.io/python/get_antivirus_spyware_for_servers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_antivirus_spyware_for_servers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the anti-virus and spywares for the servers in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[antivirusSpywareSoftwareComponent, operatingSystem]&amp;#34; try: response = accountService.getHardware(mask=objectMask) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the servers.</description>
    </item>
    
    <item>
      <title>get_antivirus_spyware_for_vsis.py</title>
      <link>https://softlayer.github.io/python/get_antivirus_spyware_for_vsis.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_antivirus_spyware_for_vsis.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the anti-virus and spywares for the VSIs in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[antivirusSpywareSoftwareComponent, operatingSystem]&amp;#34; try: response = accountService.getVirtualGuests(mask=objectMask) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the VSIs.</description>
    </item>
    
    <item>
      <title>get_array_types_for_storage_group_configuration.py</title>
      <link>https://softlayer.github.io/python/get_array_types_for_storage_group_configuration.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_array_types_for_storage_group_configuration.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List all the available array types for configure the storage groups. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Configuration_Storage_Group_Array_Type/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Configuration_Storage_Group_Array_Type License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set-me&amp;#39; client = SoftLayer.create_client_from_env(username=API_USERNAME, api_key=API_KEY) packageService = client[&amp;#39;SoftLayer_Configuration_Storage_Group_Array_Type&amp;#39;] try: types = packageService.getAllObjects() print(json.dumps(types, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;There was an error.</description>
    </item>
    
    <item>
      <title>get_authorized_hosts.py</title>
      <link>https://softlayer.github.io/python/get_authorized_hosts.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_authorized_hosts.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get all the authorized hosts for a iSCSI. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Storage http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/getObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; iscsiId = 6548079 # Declares the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) networkStorageService = client[&amp;#39;SoftLayer_Network_Storage&amp;#39;] objectMask = &amp;#34;mask[id,username,allowedVirtualGuests[fullyQualifiedDomainName,allowedHost[name,credential[username,password]]],allowedHardware[fullyQualifiedDomainName,allowedHost[name,credential[username,password]]]]&amp;#34; try: response = networkStorageService.getObject(id=iscsiId, mask=objectMask) print(response) except SoftLayer.SoftLayerAPIError as e: # If there was an error returned from the SoftLayer API then bomb out with the # error message.</description>
    </item>
    
    <item>
      <title>get_available_locations.py</title>
      <link>https://softlayer.github.io/python/get_available_locations.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_available_locations.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get available locations. This script will retrieve a collection of valid locations for a given package and the server. It displays the same locations as Control Portal does. E.g: Portal Link: https://manage.softlayer.com/Sales/configureOrder/265/49565/ package = 265 server = 49565 Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getRegions http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price/getItem http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_available_package_for_image.py</title>
      <link>https://softlayer.github.io/python/get_available_package_for_image.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_available_package_for_image.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get available package for an image template This script retrieves a collection of valid locations for this package Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAvailablePackagesForImageTemplate http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the image template id imageTemplateId = 429428 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_bandwidth_data.py</title>
      <link>https://softlayer.github.io/python/get_bandwidth_data.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_bandwidth_data.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get bandwidth data in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getBandwidthData License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdnid = 30393 startDate = &amp;#34;2014-10-10 00:00:00&amp;#34; endDate = &amp;#34;2015-10-10 05:00:00&amp;#34; # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) cdnService = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] try: response = cdnService.getBandwidthData(startDate, endDate, id=cdnid) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the bandwidth data.</description>
    </item>
    
    <item>
      <title>get_bandwidth_details_server.py</title>
      <link>https://softlayer.github.io/python/get_bandwidth_details_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_bandwidth_details_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the bandwidth details for a server. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object http://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getSummaryData http://sldn.softlayer.com/reference/datatypes/SoftLayer_Metric_Tracking_Object License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json import datetime USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; hardwareId = 132521 startDate = &amp;#34;2015-10-3&amp;#34; endDate = &amp;#34;2015-10-10&amp;#34; summaryPeriod = 3600 types = [ { &amp;#34;keyName&amp;#34;: &amp;#34;PUBLICIN&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;publicIn&amp;#34;, &amp;#34;summaryType&amp;#34;: &amp;#34;sum&amp;#34; }, { &amp;#34;keyName&amp;#34;: &amp;#34;PUBLICOUT&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;publicOut&amp;#34;, &amp;#34;summaryType&amp;#34;: &amp;#34;sum&amp;#34; } ] client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_bandwidth_details_vsi.py</title>
      <link>https://softlayer.github.io/python/get_bandwidth_details_vsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_bandwidth_details_vsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the bandwidth details for a server. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object http://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getSummaryData http://sldn.softlayer.com/reference/datatypes/SoftLayer_Metric_Tracking_Object License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json import datetime USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiId = 9066729 startDate = &amp;#34;2015-10-3&amp;#34; endDate = &amp;#34;2015-10-10&amp;#34; summaryPeriod = 3600 types = [ { &amp;#34;keyName&amp;#34;: &amp;#34;PUBLICIN&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;publicIn&amp;#34;, &amp;#34;summaryType&amp;#34;: &amp;#34;sum&amp;#34; }, { &amp;#34;keyName&amp;#34;: &amp;#34;PUBLICOUT&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;publicOut&amp;#34;, &amp;#34;summaryType&amp;#34;: &amp;#34;sum&amp;#34; } ] client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_bandwidth_graph.py</title>
      <link>https://softlayer.github.io/python/get_bandwidth_graph.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_bandwidth_graph.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve a bandwidth graph for a single server. Retrieve a bandwidth graph for a single server for an arbitrary start and end date, specifying graph size and other graphing options. We can do this with two calls to the SoftLayer API. Counter data such as bandwidth counters and VSI resource use are stored in a server&amp;#39;s metric tracking object. Our first call retrieves that server&amp;#39;s tracking object record. The second call is to the tracking object service which will generate a PNG image of our bandwidth graph.</description>
    </item>
    
    <item>
      <title>get_bandwidth_usage.py</title>
      <link>https://softlayer.github.io/python/get_bandwidth_usage.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_bandwidth_usage.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Bandwidth usage. getCurrentBandwidthSummary: Retrieves an object that provides commonly used bandwidth summary components for the current billing cycle. getBandwidthDataByDate: Use this method when needing the metric data for bandwidth for a single guest. It will gather the correct input parameters based on the date ranges. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBandwidthDataByDate http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getCurrentBandwidthSummary http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import datetime from pprint import pprint as pp # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_bare_metal_billing_items.py</title>
      <link>https://softlayer.github.io/python/get_bare_metal_billing_items.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_bare_metal_billing_items.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve the billing items for the Bare Metals in the account. This script makes a single call to the getHardware() method in the SoftLayer_Account API service and uses a object mask to get the billing items and items for each Bare Metal server in the account. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; client configuration Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_billing_info.py</title>
      <link>https://softlayer.github.io/python/get_billing_info.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_billing_info.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve the billing info for the Bare Metals in the account. This script makes a single call to the getHardware() method in the SoftLayer_Account API service and uses a object mask to get the billing info for each Bare Metal server in the account. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Info License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Client configuration Your SoftLayer API username and key. &amp;#34;&amp;#34;&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_details_vlan.py</title>
      <link>https://softlayer.github.io/python/get_details_vlan.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_details_vlan.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve VLAN details such as primary router and subnet. Retrieve the primary router and subnet for a determinate VLAN associated with a SoftLayer customer account We do this with a call to the getObject() method in the SoftLayer_Network_Vlan API service using an object mask to retrieve associated subnets and primary router records. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Subnet http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Subnet_IpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc.</description>
    </item>
    
    <item>
      <title>get_device_configuration_upgrade.py</title>
      <link>https://softlayer.github.io/python/get_device_configuration_upgrade.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_device_configuration_upgrade.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Display the hardware configuration and the items which can be modified in the server like in the portal when the modify device configuration link is clicked in the bare metal details page. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getObject http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getUpgradeItemPrices/getMaintenanceWindows http://sldn.softlayer.com/reference/services/SoftLayer_Provisioning_Maintenance_Window http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API import datetime # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set-me&amp;#39; server_ip = &amp;#34;159.</description>
    </item>
    
    <item>
      <title>get_email_delivery_accounts.py</title>
      <link>https://softlayer.github.io/python/get_email_delivery_accounts.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_email_delivery_accounts.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get email delivery accounts. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNetworkMessageDeliveryAccounts License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectFilter = {&amp;#34;type&amp;#34;: {&amp;#34;keyName&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;EMAIL&amp;#34;}}} try: result = accountService.getNetworkMessageDeliveryAccounts(filter=objectFilter) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the email delivery accounts faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.faultString)) exit(1)</description>
    </item>
    
    <item>
      <title>get_files.py</title>
      <link>https://softlayer.github.io/python/get_files.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_files.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the files in a transcode account. Important manual pages https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account/getDirectoryInformation License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The transcode account id from where you wish to get the files. transcodeAccountId = 1514 # Directory you wish to see. Set &amp;#34;in&amp;#34; to see the uploaded files and &amp;#34;out&amp;#34; to see the converted files directory = &amp;#34;in&amp;#34; # Declares the service.</description>
    </item>
    
    <item>
      <title>get_firewall_for_a_vsi.py</title>
      <link>https://softlayer.github.io/python/get_firewall_for_a_vsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_firewall_for_a_vsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the firewall associated to a VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getFirewallServiceComponent License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiIp = &amp;#34;169.57.129.196&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) guestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] try: vsi = guestService.findByIpAddress(vsiIp) firewall = guestService.getFirewallServiceComponent(id=vsi[&amp;#39;id&amp;#39;]) print(json.dumps(firewall, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the firewall. faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.</description>
    </item>
    
    <item>
      <title>get_firewall_ip_address.py</title>
      <link>https://softlayer.github.io/python/get_firewall_ip_address.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_firewall_ip_address.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the IP address from a VLan The script lists the IP address of VLAN, it makes a single call to the SoftLayer_Network_Vlan::getFirewallProtectableIpAddresses method. For more information see below: Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getFirewallProtectableIpAddresses http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The Vlan Id you which get the IP address vlanId = 361652 # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_firewall_logs.py</title>
      <link>https://softlayer.github.io/python/get_firewall_logs.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_firewall_logs.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the firewall logs for an arbitrary IP address. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet_IpAddress/getByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet_IpAddress/getSyslogEventsOneDay License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The ip address to get the logs. ip = &amp;#34;169.57.129.196&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) ipService = client[&amp;#39;SoftLayer_Network_Subnet_IpAddress&amp;#39;] try: subnetIp = ipService.getByIpAddress(ip) logs = ipService.getSyslogEventsOneDay(id=subnetIp[&amp;#39;id&amp;#39;]) print(json.dumps(logs, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the logs.</description>
    </item>
    
    <item>
      <title>get_firewall_rules_for_a_vsi.py</title>
      <link>https://softlayer.github.io/python/get_firewall_rules_for_a_vsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_firewall_rules_for_a_vsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the associated Firewall&amp;#39;s rules for a vsi. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getFirewallServiceComponent License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiIp = &amp;#34;169.57.129.196&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) guestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] firewallService = client[&amp;#39;SoftLayer_Network_Component_Firewall&amp;#39;] try: vsi = guestService.findByIpAddress(vsiIp) firewall = guestService.getFirewallServiceComponent(id=vsi[&amp;#39;id&amp;#39;]) rules = firewallService.getRules(id=firewall[&amp;#39;id&amp;#39;]) print(json.dumps(rules, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the firewall rules.</description>
    </item>
    
    <item>
      <title>get_gateway_details.py</title>
      <link>https://softlayer.github.io/python/get_gateway_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_gateway_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get gateway details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/getObject http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/getPossibleInsideVlans http://sldn.softlayer.com/article/object-masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; gatewayId = 61522 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) gatewayService = client[&amp;#39;SoftLayer_Network_Gateway&amp;#39;] objectMask = &amp;#34;mask[id, name, networkSpace, status.name, groupNumber, publicIpAddress.ipAddress, privateIpAddress.ipAddress, publicIpv6Address.ipAddress, publicVlan[id, vlanNumber, primaryRouter.hostname, networkSpace], privateVlan[id, vlanNumber, primaryRouter.hostname, networkSpace], members[priority, hardware[id, fullyQualifiedDomainName, primaryIpAddress, primaryBackendIpAddress, primaryNetworkComponent.primaryVersion6IpAddressRecord.ipAddress, operatingSystem[id, passwords[username, password]]]], insideVlans[id, bypassFlag, networkVlan[id, vlanNumber, primaryRouter.</description>
    </item>
    
    <item>
      <title>get_graph_data.py</title>
      <link>https://softlayer.github.io/python/get_graph_data.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_graph_data.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the graph data from a monitoring agent The script gets the CPU usage in a determinate date range for more reference see below. Important manual pages. http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getGraphData License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; TIMEOUT = 12000 &amp;#34;&amp;#34;&amp;#34; Creating an skeleton SoftLayer_Container_Metric_Data_Type object which represent the metric data that we will get.</description>
    </item>
    
    <item>
      <title>get_graph_image_connections_for_a_service.py</title>
      <link>https://softlayer.github.io/python/get_graph_image_connections_for_a_service.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_graph_image_connections_for_a_service.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get graph image connections for a service. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service/getGraphImage License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; serviceId = 367025 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) service = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service&amp;#39;] graphType = &amp;#39;connections&amp;#39; # The metric can be &amp;#39;day&amp;#39;, &amp;#39;week&amp;#39;, or &amp;#39;month&amp;#39;. metric = &amp;#39;day&amp;#39; try: result = service.getGraphImage(graphType, metric, id=serviceId) print(&amp;#34;The graph image has been retrieved successfully&amp;#34;) except SoftLayer.</description>
    </item>
    
    <item>
      <title>get_graph_image_connections_for_a_service_group.py</title>
      <link>https://softlayer.github.io/python/get_graph_image_connections_for_a_service_group.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_graph_image_connections_for_a_service_group.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get graph image connections for a service group. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group/getGraphImage License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; serviceGroupId = 138193 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) serviceGroupService = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group&amp;#39;] graphType = &amp;#39;connections&amp;#39; # The metric can be &amp;#39;day&amp;#39;, &amp;#39;week&amp;#39;, or &amp;#39;month&amp;#39;. metric = &amp;#39;day&amp;#39; try: result = serviceGroupService.getGraphImage(graphType, metric, id=serviceGroupId) print(&amp;#34;The graph image has been retrieved successfully&amp;#34;) except SoftLayer.</description>
    </item>
    
    <item>
      <title>get_graph_image_status_for_a_service.py</title>
      <link>https://softlayer.github.io/python/get_graph_image_status_for_a_service.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_graph_image_status_for_a_service.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get graph image status for a service. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service/getGraphImage License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; serviceId = 367025 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) service = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service&amp;#39;] graphType = &amp;#39;status&amp;#39; # The metric can be &amp;#39;day&amp;#39;, &amp;#39;week&amp;#39;, or &amp;#39;month&amp;#39;. metric = &amp;#39;day&amp;#39; try: result = service.getGraphImage(graphType, metric, id=serviceId) print(&amp;#34;The graph image has been retrieved successfully&amp;#34;) except SoftLayer.</description>
    </item>
    
    <item>
      <title>get_hostids_for_servers.py</title>
      <link>https://softlayer.github.io/python/get_hostids_for_servers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_hostids_for_servers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the host IDS for the servers in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[hostIpsSoftwareComponent, operatingSystem]&amp;#34; try: response = accountService.getHardware(mask=objectMask) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the servers.</description>
    </item>
    
    <item>
      <title>get_hostids_for_vsis.py</title>
      <link>https://softlayer.github.io/python/get_hostids_for_vsis.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_hostids_for_vsis.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the host IDS for the VSIs in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[hostIpsSoftwareComponent, operatingSystem]&amp;#34; try: response = accountService.getVirtualGuests(mask=objectMask) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the VSIs.</description>
    </item>
    
    <item>
      <title>get_hostids_logs.py</title>
      <link>https://softlayer.github.io/python/get_hostids_logs.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_hostids_logs.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the host IDS logs. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_HostIps http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_HostIps/getObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Software_Component_HostIps License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; hostidsId = 2665230 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) hostidsService = client[&amp;#39;SoftLayer_Software_Component_HostIps&amp;#39;] objectMask = &amp;#34;mask[ipsEvents[signature],blockedApplicationEvents]&amp;#34; try: response = hostidsService.getObject(id=hostidsId, mask=objectMask) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the logs.</description>
    </item>
    
    <item>
      <title>get_invoice.py</title>
      <link>https://softlayer.github.io/python/get_invoice.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_invoice.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve the invoice information. This script makes a single call to the getInvoices() method in the SoftLayer_Account API service and uses a object mask to get more information about the invoices. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getInvoices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Invoice License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Client configuration Your SoftLayer API username and key. &amp;#34;&amp;#34;&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_iops_standard_price.py</title>
      <link>https://softlayer.github.io/python/get_iops_standard_price.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_iops_standard_price.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get IOPS prices to order a endurance object storage. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package id to order endurance object storage. packageId = 240 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) productPackage = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] # A filter to get only the prices for IOPS. objectFilter = {&amp;#34;items&amp;#34;: {&amp;#34;prices&amp;#34;: {&amp;#34;categories&amp;#34;: {&amp;#34;categoryCode&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;storage_tier_level&amp;#34;}}, &amp;#34;locationGroupId&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;is null&amp;#34;}}}} try: items = productPackage.</description>
    </item>
    
    <item>
      <title>get_item_price_information.py</title>
      <link>https://softlayer.github.io/python/get_item_price_information.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_item_price_information.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get item prices information This script retrieves information of prices from a package. It retrieves the item description, location conflicts, pricing location group and item conflicts Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getRegions http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/article/object-masks @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer from prettytable import PrettyTable # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the image template id packageId = 265 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_item_prices.py</title>
      <link>https://softlayer.github.io/python/get_item_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_item_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get item prices This script will display the general information relating to a single SoftLayer product item price Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; # Set the ID of the package to retrieve the information package = 46 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_items_from_image.py</title>
      <link>https://softlayer.github.io/python/get_items_from_image.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_items_from_image.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get items from an image template This script returns a collection of SoftLayer_Product_Item objects from a SoftLayer_Virtual_Guest_Block_Device_Template_Grouo object Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemsFromImageTemplate http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/ @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the image template id imageTemplateId = 429428 # Declare a Package Id for which you want to get its items packageId = 46 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_load_balancer_by_order_id.py</title>
      <link>https://softlayer.github.io/python/get_load_balancer_by_order_id.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_load_balancer_by_order_id.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get a load balancer given the order id. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getAdcLoadBalancers http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; orderId = 5980963 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] filterDedicated = {&amp;#34;adcLoadBalancers&amp;#34;: {&amp;#34;dedicatedBillingItem&amp;#34;: {&amp;#34;orderItem&amp;#34;: {&amp;#34;order&amp;#34;: {&amp;#34;id&amp;#34;: {&amp;#34;operation&amp;#34;: orderId}}}}}} filter = {&amp;#34;adcLoadBalancers&amp;#34;: {&amp;#34;billingItem&amp;#34;: {&amp;#34;orderItem&amp;#34;: {&amp;#34;order&amp;#34;: {&amp;#34;id&amp;#34;: {&amp;#34;operation&amp;#34;: orderId}}}}}} try: loadBalancers = accountService.getAdcLoadBalancers(filter=filter) if len(loadBalancers) == 0: loadBalancers = accountService.</description>
    </item>
    
    <item>
      <title>get_load_balancer_details.py</title>
      <link>https://softlayer.github.io/python/get_load_balancer_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_load_balancer_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the details for a load balancer. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress/getObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; loadBalancerId = 79945 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) loadBalancerService = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress&amp;#39;] objectMask = &amp;#34;mask[sslActiveFlag, notes, sslEnabledFlag, loadBalancerHardware[hostname,datacenterName,location,locationPathString], ipAddress, virtualServers[notes,port,id,allocation,serviceGroups[services[groupReferences[weight],healthChecks[type[id,name],attributes],ipAddress[id,ipAddress]],routingMethod,routingType]]]&amp;#34; try: result = loadBalancerService.getObject(id=loadBalancerId, mask=objectMask) details = {} details[&amp;#39;ip&amp;#39;] = result[&amp;#39;ipAddress&amp;#39;][&amp;#39;ipAddress&amp;#39;] details[&amp;#39;name&amp;#39;] = result[&amp;#39;loadBalancerHardware&amp;#39;][0][&amp;#39;hostname&amp;#39;] details[&amp;#39;location&amp;#39;] = result[&amp;#39;loadBalancerHardware&amp;#39;][0][&amp;#39;datacenterName&amp;#39;] if result[&amp;#39;sslEnabledFlag&amp;#39;]: if result[&amp;#39;sslActiveFlag&amp;#39;]: details[&amp;#39;ssl&amp;#39;] = &amp;#34;Enabled&amp;#34; else: details[&amp;#39;ssl&amp;#39;] = &amp;#34;Disabled&amp;#34; else: details[&amp;#39;ssl&amp;#39;] = &amp;#34;Not Supported&amp;#34; if &amp;#39;notes&amp;#39; in result: details[&amp;#39;notes&amp;#39;] = result[&amp;#39;notes&amp;#39;] else: details[&amp;#39;notes&amp;#39;] = &amp;#34;&amp;#34; serviceGroups = [] for virtualServer in result[&amp;#39;virtualServers&amp;#39;]: group = {} group[&amp;#39;virtualPort&amp;#39;] = virtualServer[&amp;#39;port&amp;#39;] group[&amp;#39;virtualServerId&amp;#39;] = virtualServer[&amp;#39;id&amp;#39;] group[&amp;#39;allocation&amp;#39;] = virtualServer[&amp;#39;allocation&amp;#39;] group[&amp;#39;notes&amp;#39;] = virtualServer[&amp;#39;serviceGroups&amp;#39;][0][&amp;#39;notes&amp;#39;] group[&amp;#39;method&amp;#39;] = virtualServer[&amp;#39;serviceGroups&amp;#39;][0][&amp;#39;routingMethod&amp;#39;][&amp;#39;name&amp;#39;] group[&amp;#39;group&amp;#39;] = virtualServer[&amp;#39;serviceGroups&amp;#39;][0][&amp;#39;routingType&amp;#39;][&amp;#39;name&amp;#39;] group[&amp;#39;customTimeout&amp;#39;] = virtualServer[&amp;#39;serviceGroups&amp;#39;][0][&amp;#39;timeout&amp;#39;] group[&amp;#39;serverGroupId&amp;#39;] = virtualServer[&amp;#39;serviceGroups&amp;#39;][0][&amp;#39;id&amp;#39;] serviceGroups.</description>
    </item>
    
    <item>
      <title>get_location_groups.py</title>
      <link>https://softlayer.github.io/python/get_location_groups.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_location_groups.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get all the location groups pricing.. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location_Group_Pricing License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declares the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) locationGroupService = client[&amp;#39;SoftLayer_Location_Group_Pricing&amp;#39;] # Declares an object mask to see the location details objectMask = &amp;#34;mask[locations]&amp;#34; try: response = locationGroupService.getAllObjects(mask=objectMask) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the location groups.</description>
    </item>
    
    <item>
      <title>get_location_prices_for_dc.py</title>
      <link>https://softlayer.github.io/python/get_location_prices_for_dc.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_location_prices_for_dc.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get location prices for a datacenter This script retrieves location prices for a package from a specific datacenter Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/article/Object-Filters @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the package id packageId = 265 # Declare the datacenter name that you wish to retrieve the item prices datacenter = &amp;#39;London 1&amp;#39; # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_locations.py</title>
      <link>https://softlayer.github.io/python/get_locations.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_locations.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get package location. This script will retrieve a collection of valid locations for a given package by calling to SoftLayer_Product_Package::getLocations method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getLocations @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice output: from prettytable import PrettyTable # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; package = 46 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_locations_for_replica.py</title>
      <link>https://softlayer.github.io/python/get_locations_for_replica.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_locations_for_replica.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get valid datacenters to order a replica. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/getValidReplicationTargetDatacenterLocations License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The id of the endurance storage you wish to create a replica. enduranceStorageId = 6548079 # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) storageService = client[&amp;#39;SoftLayer_Network_Storage&amp;#39;] try: result = storageService.getValidReplicationTargetDatacenterLocations(id=enduranceStorageId) print(result) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the locations.</description>
    </item>
    
    <item>
      <title>get_metric.py</title>
      <link>https://softlayer.github.io/python/get_metric.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_metric.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Metric The script gets the CPU Metric and Memory Metric for a VSI for more information see below Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getCpuMetricDataByDate http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMemoryMetricDataByDate http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal: https://manage.softlayer.com/Administrative/apiKeychain &amp;#34;&amp;#34;&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The virtual guest ID you want to reload virtualGuestId = 4949592 startDateTime = &amp;#34;2014-06-04T00:00:00-05:00&amp;#34; endDateTime = &amp;#34;2014-07-14T10:37:00-05:00&amp;#34; # Declare a new API service object client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_notification_subscribers.py</title>
      <link>https://softlayer.github.io/python/get_notification_subscribers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_notification_subscribers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get all the notification subscribers for an user. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getSubscribers http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;set me&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) result = userService.getSubscribers(id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the notification subscribers.</description>
    </item>
    
    <item>
      <title>get_object.py</title>
      <link>https://softlayer.github.io/python/get_object.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_object.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Hardware This script retrieves the SoftLayer_Hardware object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Hardware service. You can only retrieve the account that your portal user is assigned to. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Hardware/getObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>get_partition_template.py</title>
      <link>https://softlayer.github.io/python/get_partition_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_partition_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the partition templates available for the first disk. The partition templates available will depend on the OS selected and the disk type assigned. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Component_Partition_OperatingSystem/getByDescription http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Component_Partition_OperatingSystem/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;Set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;Set-me&amp;#39; # To get the valid list of description values use # SoftLayer_Hardware_Component_Partition_OperatingSystem::getAllObjects method.</description>
    </item>
    
    <item>
      <title>get_passwords_for_a_server.py</title>
      <link>https://softlayer.github.io/python/get_passwords_for_a_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_passwords_for_a_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the passwords for a server. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getSoftwareComponents License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; serverId = 179996 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) serverService = client[&amp;#39;SoftLayer_Hardware_Server&amp;#39;] objectMask = &amp;#39;mask[passwords,softwareLicense]&amp;#39; try: components = serverService.getSoftwareComponents(id=serverId, mask=objectMask) print(json.dumps(components, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the passwords faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>get_passwrods_for_a_vsi.py</title>
      <link>https://softlayer.github.io/python/get_passwrods_for_a_vsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_passwrods_for_a_vsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the passwords for a vsi. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getSoftwareComponents License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiId = 13102629 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] objectMask = &amp;#39;mask[passwords,softwareLicense]&amp;#39; try: components = vsiService.getSoftwareComponents(id=vsiId, mask=objectMask) print(json.dumps(components, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the passwords faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>get_pool_details_servers.py</title>
      <link>https://softlayer.github.io/python/get_pool_details_servers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_pool_details_servers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the details for a bandwidth pool (list only the servers). Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The bandwidth pool id you wish to see the details poolId = 234419 # Declare the API client client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask(SoftLayer_Hardware_Server)[projectedPublicBandwidthUsage, datacenter, outboundPublicBandwidthUsage, bandwidthAllocation, virtualRackId]&amp;#34; objectFilter = {&amp;#34;hardware&amp;#34;: {&amp;#34;virtualRackId&amp;#34;: {&amp;#34;operation&amp;#34;: poolId}}} try: details = [] servers = accountService.</description>
    </item>
    
    <item>
      <title>get_pool_details_vsis.py</title>
      <link>https://softlayer.github.io/python/get_pool_details_vsis.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_pool_details_vsis.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the details for a bandwidth pool (list only the VSIs). Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The bandwidth pool id you wish to see the details poolId = 234419 # Declare the API client client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[projectedPublicBandwidthUsage, datacenter, outboundPublicBandwidthUsage, bandwidthAllocation, virtualRackId, primaryIpAddress]&amp;#34; objectFilter = {&amp;#34;virtualGuests&amp;#34;: {&amp;#34;virtualRackId&amp;#34;: {&amp;#34;operation&amp;#34;: poolId}}} try: details = [] vsis = accountService.</description>
    </item>
    
    <item>
      <title>get_presets.py</title>
      <link>https://softlayer.github.io/python/get_presets.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_presets.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the presets. Important manual pages https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account/getPresets License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The transcode account id from where you wish to get the presets. transcodeAccountId = 1514 # Declares the service. client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) transcodeService = client[&amp;#39;SoftLayer_Network_Media_Transcode_Account&amp;#39;] try: presets = transcodeService.getPresets(id=transcodeAccountId) print(json.dumps(presets, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>get_prices_per_dc_from_presets.py</title>
      <link>https://softlayer.github.io/python/get_prices_per_dc_from_presets.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_prices_per_dc_from_presets.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get active presets and their prices per location This script retrieves the active presets with their prices for the items per datacenter. Also it displays the information for hourly recurring fee and recurring fee. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/search/site/object%20mask http://sldn.softlayer.com/article/Object-Filters @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer from prettytable import PrettyTable # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_prices_per_package_from_image.py</title>
      <link>https://softlayer.github.io/python/get_prices_per_package_from_image.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_prices_per_package_from_image.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; This script retrieves item prices per packages from an image template Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAvailablePackagesForImageTemplate http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemsFromImageTemplate http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer from prettytable import PrettyTable # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the image template id imageTemplateId = 33566 # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_quote_details.py</title>
      <link>https://softlayer.github.io/python/get_quote_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_quote_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve an account&amp;#39;s quote information. This script retrieves the data presented in the SoftLayer Customer Portal&amp;#39;s (https://control.softlayer.com/account/quotes) using an API call to SoftLayer_Account::getQuotes method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getQuotes @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice output: from prettytable import PrettyTable &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_records.py</title>
      <link>https://softlayer.github.io/python/get_records.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_records.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Records. Retrieve the individual records contained within a domain record Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/getResourceRecords http://sldn.softlayer.com/reference/datatypes/SoftLayer_Dns_Domain_ResourceRecord License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Set the domain id # To get information the DNS Domains associated with an account, review: # http://sldn.</description>
    </item>
    
    <item>
      <title>get_regions.py</title>
      <link>https://softlayer.github.io/python/get_regions.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_regions.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the valid regions to order a bandwidth pool. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location_Group http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) locationService = client[&amp;#39;SoftLayer_Location_Group&amp;#39;] objectFilter = {&amp;#34;locationGroupType&amp;#34;: {&amp;#34;name&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;VDR&amp;#34;}}} try: regions = locationService.getAllObjects(filter=objectFilter) print(json.dumps(regions, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to retrieve the regions.</description>
    </item>
    
    <item>
      <title>get_reverse_domain_records.py</title>
      <link>https://softlayer.github.io/python/get_reverse_domain_records.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_reverse_domain_records.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Reverse Domain Records The script list retrieves all reverse DNS records associated with a subnet. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet/getSubnetForIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet/getReverseDomainRecords License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; ipAddress = &amp;#39;119.81.70.176&amp;#39; # Create a new connection to the API service.</description>
    </item>
    
    <item>
      <title>get_scan_details.py</title>
      <link>https://softlayer.github.io/python/get_scan_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_scan_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Scan vulnerabilities details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Security_Scanner_Request http://sldn.softlayer.com/reference/services/SoftLayer_Network_Security_Scanner_Request/getReport &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The scan ID you want to get the details. scanId = 1135575 # Declares a new API service object. client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) networkSecurityScannerService = client[&amp;#39;SoftLayer_Network_Security_Scanner_Request&amp;#39;] try: # Gets a report in HTML format. result = networkSecurityScannerService.getReport(id=scanId) print(result) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Error faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.faultString)) exit(1)</description>
    </item>
    
    <item>
      <title>get_scans.py</title>
      <link>https://softlayer.github.io/python/get_scans.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_scans.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Scan vulnerabilities from a VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Security_Scanner_Request http://sldn.softlayer.com/reference/services/SoftLayer_Network_Security_Scanner_Request/getReport &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The virtual guest ID you want to get the vulnerabilities scan. virtualGuestId = 11528955 # Declares a new API service object. client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) virtualGuestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] # Declares an object mask to get information about the vulnerabilities scans in the VSI. objectMask = &amp;#34;mask[securityScanRequests]&amp;#34; try: result = virtualGuestService.</description>
    </item>
    
    <item>
      <title>get_schedules.py</title>
      <link>https://softlayer.github.io/python/get_schedules.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_schedules.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get all the schedules configured in the endurance storage. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/getSchedules License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The endurance storage id from where you wish to get the schedules enduranceStorageId = 6548079 # Declares the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) storageService = client[&amp;#39;SoftLayer_Network_Storage&amp;#39;] try: result = storageService.getSchedules(id=enduranceStorageId) print(result) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the Schedules.</description>
    </item>
    
    <item>
      <title>get_server_cost.py</title>
      <link>https://softlayer.github.io/python/get_server_cost.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_server_cost.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the recurring cost of all servers on your account. Get a list of servers on a SoftLayer account along with their recurring monthly costs. We can get that by calling getHardware() in the SoftLayer_Account API service with an object mask to retrieve cost. Important manual pages see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware see http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getCost License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; client configuration Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_server_details.py</title>
      <link>https://softlayer.github.io/python/get_server_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_server_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Bare Metal details. Retrieve a list of bare metal servers in the account and print a report with server hostname, domain, login info, network, CPU, and RAM details. This script makes a single call to the getHardware() method in the SoftLayer_Account API service and uses an object mask to retrieve related information. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.</description>
    </item>
    
    <item>
      <title>get_servers_in_a_region.py</title>
      <link>https://softlayer.github.io/python/get_servers_in_a_region.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_servers_in_a_region.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the servers which belong to a region. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; regionId = &amp;#34;1&amp;#34; # Declare the API client client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectFilter = {&amp;#34;hardware&amp;#34;: {&amp;#34;datacenter&amp;#34;: {&amp;#34;groups&amp;#34;: {&amp;#34;locationGroupTypeId&amp;#34;: {&amp;#34;operation&amp;#34;: regionId}}}}} try: servers = accountService.getHardware(filter=objectFilter) print(json.dumps(servers, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the servers.</description>
    </item>
    
    <item>
      <title>get_specific_packages.py</title>
      <link>https://softlayer.github.io/python/get_specific_packages.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_specific_packages.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get specific packages The script displays all the packages which contains a determinate kind of processor. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package_Server http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package_Server/getAllObjects License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The filter to find determinate processors in the result # and only retrieve those processors from the API objectFilter = {&amp;#34;processorName&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;Xeon 2650&amp;#34;, &amp;#34;Xeon 5650&amp;#34;]}, ]}} # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_standard_prices.py</title>
      <link>https://softlayer.github.io/python/get_standard_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_standard_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get standard prices This script retrieves standard prices for an package Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/article/Object-Filters @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the package id packageId = 265 # Create a client instance client = SoftLayer.Client(username=API_USERNAME, api_key=API_KEY) # Declare an object filter to get standard item prices objectFilter = {&amp;#39;itemPrices&amp;#39;: {&amp;#39;locationGroupId&amp;#39;: {&amp;#39;operation&amp;#39;: &amp;#39;is null&amp;#39;}}} try: standardPrices = client[&amp;#39;SoftLayer_Product_Package&amp;#39;].</description>
    </item>
    
    <item>
      <title>get_standard_rules.py</title>
      <link>https://softlayer.github.io/python/get_standard_rules.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_standard_rules.py/</guid>
      <description># Get Standard Rules # Each SoftLayer_Network_Component_Firewall object stores # its rules in the &amp;#34;rules&amp;#34; relational property. This property # contains an array of SoftLayer_Network_Component_Firewall_Rule objects. # These objects define the firewall rule and how it will behave # Important Manual Pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Component_Firewall/ # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Component_Firewall_Rule # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # # So we can talk to the SoftLayer API: import SoftLayer # For nice output: from prettytable import PrettyTable # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_storage_space_prices_for_location.py</title>
      <link>https://softlayer.github.io/python/get_storage_space_prices_for_location.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_storage_space_prices_for_location.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the storage space prices to order an endurance space. The script retrieves all the storage spaces prices which meet an IOPS requirement and these prices are valid to an arbitrary location. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package id to order endurance object storage. packageId = 240 # value = 200 is for 2 IOPS per GB.</description>
    </item>
    
    <item>
      <title>get_storage_space_standard_prices.py</title>
      <link>https://softlayer.github.io/python/get_storage_space_standard_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_storage_space_standard_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the storage space prices to order an endurance space. The script retrieves all the storage spaces prices which meet an IOPS requirement and these prices are standard prices (they work for any datacenter). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package id to order endurance object storage. packageId = 240 # value = 200 is for 2 IOPS per GB.</description>
    </item>
    
    <item>
      <title>get_subnet_details.py</title>
      <link>https://softlayer.github.io/python/get_subnet_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_subnet_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get subnet details. It retrieves information related to a subnet. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet/getObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Subnet http://sldn.softlayer.com/reference/services/SoftLayer_Account/getSubnets License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; subnetId = 555920 # Object mask helps to get more and specific information related to the item objectMask = &amp;#39;id,broadcastAddress,networkVlan.</description>
    </item>
    
    <item>
      <title>get_subnets.py</title>
      <link>https://softlayer.github.io/python/get_subnets.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_subnets.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve the subnets for a VLAN Retrieve all the subnets for a determinate VLAN associated with a SoftLayer customer account We do this with a call to the getSubnets() method in the SoftLayer_Network_Vlan API service. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Subnet http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getSubnets License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The VLAN id you wish to see its subnets vlanId = 557984 # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_tags.py</title>
      <link>https://softlayer.github.io/python/get_tags.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_tags.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get all the tags in the account. The script gets all the tags in the account we make a simple call the the getTags() in the SoftLayer_Account API service. Important Manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getTags License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Client configuration Your SoftLayer API username and key. &amp;#34;&amp;#34;&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_transcode_ftp_credencials.py</title>
      <link>https://softlayer.github.io/python/get_transcode_ftp_credencials.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_transcode_ftp_credencials.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get FTP credentials. Important manual pages https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account/getFtpAttributes License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The transcode account id from where you wish to get the credentials. transcodeAccountId = 1514 # Declares the service. client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) transcodeService = client[&amp;#39;SoftLayer_Network_Media_Transcode_Account&amp;#39;] try: credentials = transcodeService.getFtpAttributes(id=transcodeAccountId) print(json.dumps(credentials, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>get_transcode_jobs.py</title>
      <link>https://softlayer.github.io/python/get_transcode_jobs.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_transcode_jobs.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the transcode jobs. Important manual pages https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account https://sldn.softlayer.com/reference/services/SoftLayer_Network_Media_Transcode_Account/getTranscodeJobs License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The transcode account id from where you wish to get the jobs transcodeAccountId = 1514 # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declares the service. client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) transcodeAccountService = client[&amp;#39;SoftLayer_Network_Media_Transcode_Account&amp;#39;] # Declares a filter to get only the jobs with an arbitrary status.</description>
    </item>
    
    <item>
      <title>get_transcoding_account.py</title>
      <link>https://softlayer.github.io/python/get_transcoding_account.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_transcoding_account.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get all transcode accounts. Important manual pages https://sldn.softlayer.com/reference/services/SoftLayer_Account https://sldn.softlayer.com/reference/services/SoftLayer_Account/getTranscodeAccounts License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declares the service. client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] try: transcodeAccounts = accountService.getTranscodeAccounts() print(json.dumps(transcodeAccounts, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the transcode accounts. faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>get_unattached_portable_storages.py</title>
      <link>https://softlayer.github.io/python/get_unattached_portable_storages.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_unattached_portable_storages.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get unattached portal storages. The script gets all the unattached portal storages in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPortableStorageVolumes http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Disk_Image &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] # Declaring a object mask to get information about the guest # of the portal storage. objeckMask = &amp;#34;mask[storageRepository[guests]]&amp;#34; unattachedPortalStorages = [] # Looking for the portal storages which do not have any guest.</description>
    </item>
    
    <item>
      <title>get_virtual_guest_billing_items.py</title>
      <link>https://softlayer.github.io/python/get_virtual_guest_billing_items.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_virtual_guest_billing_items.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve the billing items for the VSI in the account. This script makes a single call to the getVirtualGuests() method in the SoftLayer_Account API service and uses a object mask to get the billing items and items for each VSI server in the account. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Client configuration Your SoftLayer API username and key. &amp;#34;&amp;#34;&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_virtual_guests_details.py</title>
      <link>https://softlayer.github.io/python/get_virtual_guests_details.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_virtual_guests_details.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Virtual Guest details. It retrieves virtual guest information. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getObject http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: from pprint import pprint as pp # Set your SoftLayer API username and key. # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Set the server id that you wish to get details.</description>
    </item>
    
    <item>
      <title>get_virtual_guests_list.py</title>
      <link>https://softlayer.github.io/python/get_virtual_guests_list.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_virtual_guests_list.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List Virtual Guests. Retrieve an account&amp;#39;s associated virtual guest objects&amp;#39; Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Creates an object filter to get virtual guests with host different of zero.</description>
    </item>
    
    <item>
      <title>get_virtual_server_notes.py</title>
      <link>https://softlayer.github.io/python/get_virtual_server_notes.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_virtual_server_notes.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get notes from a VSI. The script retrieves the notes for an arbitrary VSI, it makes a single call to SoftLayer_Virtual_Guest::getObject method. for more information see below: Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getObject/ http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; #Declare variables virtualGuestId = 35747489 # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_vlan.py</title>
      <link>https://softlayer.github.io/python/get_vlan.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_vlan.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve account VLAN and subnet information. Retrieve a list of all VLANs associated with a SoftLayer customer account and print a simple report detailing these VLANs and the subnets assigned to them. We do this with a call to the getNetworkVlans() method in the SoftLayer_Account API service using an object mask to retrieve the VLANs&amp;#39; associated subnets and primary router records. See below for more details. Important manual pages: http://sldn.</description>
    </item>
    
    <item>
      <title>get_vlan_for_account.py</title>
      <link>https://softlayer.github.io/python/get_vlan_for_account.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_vlan_for_account.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Example to get the VLANS in an account The example retrieves a list of all VLANs in the account. It makes a single call to the SoftLayer_Account::getPublicNetworkVlans method. For more information please see below. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPublicNetworkVlans http://sldn.softlayer.com/reference/services/SoftLayer_Account/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_vlan_rules.py</title>
      <link>https://softlayer.github.io/python/get_vlan_rules.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_vlan_rules.py/</guid>
      <description># Get VLAN Firewall Rules # This script display a list of firewall rules configured # on a Network VLan # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Vlan # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Vlan_Firewall_Rule # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # So we can talk to the SoftLayer API: import SoftLayer.API # For nice output: from prettytable import PrettyTable # Your SoftLayer API username and key. # Generate an API key at the SoftLayer Customer Portal API_USERNAME = &amp;#39;set_me&amp;#39; API_KEY = &amp;#39;set_me&amp;#39; client = SoftLayer.</description>
    </item>
    
    <item>
      <title>get_vlans_for_order.py</title>
      <link>https://softlayer.github.io/python/get_vlans_for_order.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_vlans_for_order.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get available VLANs for a new order The script makes a single to call to SoftLayer_Product_Order::getVlans method to call the available VLANs for the configuration of an order for more details please see below. Important manual pages: https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/getVlans License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; The id for the datacenter where you are creating your machine you can get the ids by using the &amp;#34;SoftLayer_Location_Datacenter&amp;#34; service and the method &amp;#34;getDatacenters&amp;#34; e.</description>
    </item>
    
    <item>
      <title>get_vsis_in_a_region.py</title>
      <link>https://softlayer.github.io/python/get_vsis_in_a_region.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_vsis_in_a_region.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the VSIs which belong to a region. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; regionId = &amp;#34;1&amp;#34; # Declare the API client client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectFilter = {&amp;#34;virtualGuests&amp;#34;: {&amp;#34;datacenter&amp;#34;: {&amp;#34;groups&amp;#34;: {&amp;#34;locationGroupTypeId&amp;#34;: {&amp;#34;operation&amp;#34;: regionId}}}}} try: vsis = accountService.getVirtualGuests(filter=objectFilter) print(json.dumps(vsis, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the VSIs.</description>
    </item>
    
    <item>
      <title>historical_graph.py</title>
      <link>https://softlayer.github.io/python/historical_graph.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/historical_graph.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get Historical Bandwidth The script makes a single call to Softlayer_Account::getHistoricalBandwidthGraph method to display the historical bandwidth graph. For more information see below Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHistoricalBandwidthGraph http://sldn.softlayer.com/reference/services/SoftLayer_Account License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal: https://manage.softlayer.com/Administrative/apiKeychain &amp;#34;&amp;#34;&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; startDate = &amp;#39;2014-9-8&amp;#39; endDate = &amp;#39;2014-9-18&amp;#39; client = SoftLayer.</description>
    </item>
    
    <item>
      <title>listVirtualGuestDedicatedHost.py</title>
      <link>https://softlayer.github.io/python/listVirtualGuestDedicatedHost.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/listVirtualGuestDedicatedHost.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List associated guest of dedicated host. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_DedicatedHost/getGuests http://sldn.softlayer.com/reference/datatypes/SoftLayer_virtual_guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) dedicatedHostService = client[&amp;#39;SoftLayer_Virtual_DedicatedHost&amp;#39;] dedicatedHostId = 9301 try: response = dedicatedHostService.getGuests(id=9301) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the guests. faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.</description>
    </item>
    
    <item>
      <title>list_agents.py</title>
      <link>https://softlayer.github.io/python/list_agents.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_agents.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; List agents. The script retrieves all the agents in a brand account. It displays the same result like in https://agent.softlayer.com/administration/user/list Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[id, firstName, lastName, username, email, userStatus[name]]&amp;#34; try: result = accountService.getUsers(mask=objectMask) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>list_bandwidth_pools.py</title>
      <link>https://softlayer.github.io/python/list_bandwidth_pools.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_bandwidth_pools.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the bandwidth pools in the account. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getBandwidthAllotments http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Bandwidth_Version1_Allotment License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[id, name, serviceProviderId, locationGroup[name], locationGroup, hardwareCount, privateNetworkOnlyHardwareCount, virtualGuestCount, bareMetalInstanceCount, applicationDeliveryControllerCount, totalBandwidthAllocated, outboundPublicBandwidthUsage, bandwidthAllotmentTypeId, projectedPublicBandwidthUsage]&amp;#34; objectFilter = {&amp;#34;bandwidthAllotments&amp;#34;: {&amp;#34;bandwidthAllotmentTypeId&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;!= 1&amp;#34;}}} try: pools = [] data = accountService.</description>
    </item>
    
    <item>
      <title>list_customers.py</title>
      <link>https://softlayer.github.io/python/list_customers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_customers.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; List customers. The script retrieves all the customers in a brand account. It displays the same result like in https://agent.softlayer.com/customer/account/list Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Brand/getOwnedAccounts http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; brandId = 4 client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) brandService = client[&amp;#39;SoftLayer_Brand&amp;#39;] objectMask = &amp;#34;mask[accountStatus[name], masterUser[username], hardwareCount, virtualGuestCount, userCount, openTicketCount]&amp;#34; try: result = brandService.getOwnedAccounts(id=brandId, mask=objectMask) print(json.</description>
    </item>
    
    <item>
      <title>list_global_ips.py</title>
      <link>https://softlayer.github.io/python/list_global_ips.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_global_ips.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List global IP address Example to list the global IP address from an account and see if a specific IP is assigned to a specific host Important manual pages: http://sldn.softlayer.com/article/python http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getGlobalIpRecords http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Subnet_IpAddress_Global http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Subnet_IpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The global Ip address you want to verify if it is assigned globalIpId = 11222 # The hostname of the virtual guest that you want to verify if it is assigned hostnameAssigned = &amp;#34;danone-fw1&amp;#34; # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>list_images_os_manager.py</title>
      <link>https://softlayer.github.io/python/list_images_os_manager.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_images_os_manager.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List images templates The script retrieves a list the images templates in the account, it uses the ImageManager class. For more information please see below. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Declare a new API service object client = SoftLayer.</description>
    </item>
    
    <item>
      <title>list_images_templates.py</title>
      <link>https://softlayer.github.io/python/list_images_templates.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_images_templates.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get private image template the script calls the SoftLayer_Account::getPrivateBlockDeviceTemplateGroups method to list the private templates in the account and uses an object mask to display more related information of the images templates Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPrivateBlockDeviceTemplateGroups http://sldn.softlayer.com/reference/dataypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>list_invoices.py</title>
      <link>https://softlayer.github.io/python/list_invoices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_invoices.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; List invoices. The script retrieves all the invoices in a brand account. It displays the same result like in https://agent.softlayer.com/administration/invoice/list Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account/getInvoices http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Invoice http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[id, modifyDate, createDate, amount, payment, typeCode, statusCode, purchaseOrderNumber]&amp;#34; try: result = accountService.getInvoices(mask=objectMask) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>list_iscsi_storage.py</title>
      <link>https://softlayer.github.io/python/list_iscsi_storage.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_iscsi_storage.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List Storage iSCSI. This script will list the Storage iSCSI available in the account See below references for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getIscsiNetworkStorage http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Storage @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer from prettytable import PrettyTable # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>list_items_for_order_server.py</title>
      <link>https://softlayer.github.io/python/list_items_for_order_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_items_for_order_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List items to order device. The script displays the available data centers and items for a package. Note: The displayed prices are standard prices. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getObject http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getConfiguration http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getPresetConfigurationRequiredFlag http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package/ http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Preset/ http://sldn.softlayer.com/article/Object-Masks http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;Set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;Set-me&amp;#39; package_id = 200 # Set True to see the hourly prices.</description>
    </item>
    
    <item>
      <title>list_load_balancers.py</title>
      <link>https://softlayer.github.io/python/list_load_balancers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_load_balancers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the load balancers in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getAdcLoadBalancers http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[id, connectionLimit, connectionLimitUnits, dedicatedFlag, notes, highAvailabilityFlag, ipAddress, securityCertificateId, sslActiveFlag, sslEnabledFlag, loadBalancerHardware[hostname, fullyQualifiedDomainName, datacenterName], dedicatedBillingItem[id, description, cancellationDate], billingItem[id, upgradeItem, description, cancellationDate], applicationDeliveryControllers[id]]&amp;#34; try: loadBalancers = accountService.</description>
    </item>
    
    <item>
      <title>list_origin_mapping.py</title>
      <link>https://softlayer.github.io/python/list_origin_mapping.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_origin_mapping.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List all the origin pull mappings in the CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getOriginPullMappingInformation License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdnid = 30393 # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) cdnService = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] try: response = cdnService.getOriginPullMappingInformation(id=cdnid) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list origin mappings. faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>list_passwords.py</title>
      <link>https://softlayer.github.io/python/list_passwords.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_passwords.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the passwords of the devices in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Search http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) searchService = client[&amp;#39;SoftLayer_Search&amp;#39;] objectMask = &amp;#34;mask[resource(SoftLayer_Hardware)[softwareComponents.passwords,softwareComponents.softwareLicense.softwareDescription.name,softwareComponents.softwareLicense.softwareDescription.operatingSystem,softwareComponents.softwareLicense.softwareDescription.manufacturer,softwareComponents.passwords.id,fullyQualifiedDomainName,id,serviceProviderId,primaryIpAddress,softwareComponents.passwords.password,softwareComponents.passwords.username,softwareComponents.passwords.createDate,softwareComponents.passwords.modifyDate,softwareComponents.passwords.notes,softwareComponents.passwords.port,softwareComponents.softwareLicense.softwareDescription.version,datacenter.longName,datacenter.id],resource(SoftLayer_Hardware_Server)[softwareComponents.passwords,softwareComponents.softwareLicense.softwareDescription.name,softwareComponents.softwareLicense.softwareDescription.operatingSystem,softwareComponents.softwareLicense.softwareDescription.manufacturer,softwareComponents.passwords.id,fullyQualifiedDomainName,id,serviceProviderId,primaryIpAddress,softwareComponents.passwords.password,softwareComponents.passwords.username,softwareComponents.passwords.createDate,softwareComponents.passwords.modifyDate,softwareComponents.passwords.notes,softwareComponents.passwords.port,softwareComponents.softwareLicense.softwareDescription.version,datacenter.longName,datacenter.id],resource(SoftLayer_Virtual_Guest)[softwareComponents.passwords,softwareComponents.softwareLicense.softwareDescription.name,softwareComponents.softwareLicense.softwareDescription.operatingSystem,operatingSystem.softwareLicense.softwareDescription.manufacturer,operatingSystem.softwareLicense.softwareDescription.name,softwareComponents.passwords.id,fullyQualifiedDomainName,id,primaryIpAddress,softwareComponents.passwords.password,softwareComponents.passwords.username,softwareComponents.passwords.createDate,softwareComponents.passwords.modifyDate,softwareComponents.passwords.notes,softwareComponents.passwords.port,operatingSystem.softwareLicense.softwareDescription.operatingSystem,datacenter.longName,datacenter.id]]&amp;#34; try: devices = searchService.advancedSearch(&amp;#34;_objectType:SoftLayer_Hardware,SoftLayer_Virtual_Guest&amp;#34;, mask=objectMask) passwords = [] for device in devices: if &amp;#39;resource&amp;#39; in device: for component in device[&amp;#39;resource&amp;#39;][&amp;#39;softwareComponents&amp;#39;]: for pas in component[&amp;#39;passwords&amp;#39;]: password = {} password[&amp;#39;name&amp;#39;] = device[&amp;#39;resource&amp;#39;][&amp;#39;fullyQualifiedDomainName&amp;#39;] password[&amp;#39;username&amp;#39;] = pas[&amp;#39;username&amp;#39;] password[&amp;#39;password&amp;#39;] = pas[&amp;#39;password&amp;#39;] password[&amp;#39;softwareComponentId&amp;#39;] = component[&amp;#39;id&amp;#39;] password[&amp;#39;passwordId&amp;#39;] = pas[&amp;#39;id&amp;#39;] password[&amp;#39;deviceId&amp;#39;] = device[&amp;#39;resource&amp;#39;][&amp;#39;id&amp;#39;] passwords.</description>
    </item>
    
    <item>
      <title>list_planned_events.py</title>
      <link>https://softlayer.github.io/python/list_planned_events.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_planned_events.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; List planned events. The script retrieves all the planned events in a brand account. It displays the same result like in https://agent.softlayer.com/support/event/planned Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Notification_Occurrence_Event http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API import json import datetime USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Gets the current date. now = datetime.datetime.now() now = now.strftime(&amp;#34;%m/%d/%Y&amp;#34;) client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) eventService = client[&amp;#39;SoftLayer_Notification_Occurrence_Event&amp;#39;] objectMask = &amp;#34;mask[updateCount, statusCode, notificationOccurrenceEventType[keyName], impactedUsers[user[id], acknowledgedFlag]]&amp;#34; objectFilterEndDate = {&amp;#34;endDate&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;greaterThanDate&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;date&amp;#34;, &amp;#34;value&amp;#34;: [now]}]}, &amp;#34;notificationOccurrenceEventType&amp;#34;: {&amp;#34;keyName&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;PLANNED&amp;#34;}}, &amp;#34;statusCode&amp;#34;: {&amp;#34;keyName&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;ACTIVE&amp;#34;, &amp;#34;COMPLETED&amp;#34;]}, {&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;ACTIVE&amp;#34;, &amp;#34;COMPLETED&amp;#34;, &amp;#34;PUBLISHED&amp;#34;]}]}}} objectFilterNoEndDate = {&amp;#34;endDate&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#39;is null&amp;#39;}, &amp;#34;notificationOccurrenceEventType&amp;#34;: {&amp;#34;keyName&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;PLANNED&amp;#34;}}, &amp;#34;statusCode&amp;#34;: {&amp;#34;keyName&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;ACTIVE&amp;#34;, &amp;#34;COMPLETED&amp;#34;]}, {&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;ACTIVE&amp;#34;, &amp;#34;COMPLETED&amp;#34;, &amp;#34;PUBLISHED&amp;#34;]}]}}} try: resultEndDate = eventService.</description>
    </item>
    
    <item>
      <title>list_prices_packages_and_datacenters.py</title>
      <link>https://softlayer.github.io/python/list_prices_packages_and_datacenters.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_prices_packages_and_datacenters.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List Prices for Packages and Data centers Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getActivePackages http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAvailableLocations License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. username = &amp;#39;set me&amp;#39; key = &amp;#39;set me&amp;#39; # Declare the API client to use the SoftLayer_Product_Order API service client = SoftLayer.Client(username=username, api_key=key) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] productPackageService = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] try: # Get all active packages for your account, but this method is slow result = accountService.</description>
    </item>
    
    <item>
      <title>list_roles.py</title>
      <link>https://softlayer.github.io/python/list_roles.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_roles.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; List roles. The script retrieves all the roles in a brand account. It displays the same result like in https://agent.softlayer.com/administration/role/list Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPermissionRoles http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Permission_Role http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[userCount]&amp;#34; try: result = accountService.getPermissionRoles(mask=objectMask) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the roles.</description>
    </item>
    
    <item>
      <title>list_scale_groups.py</title>
      <link>https://softlayer.github.io/python/list_scale_groups.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_scale_groups.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the scale groups in the account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getScaleGroups http://sldn.softlayer.com/reference/datatypes/SoftLayer_Scale_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Create a SoftLayer API client object client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMask = &amp;#34;mask[id, name, status[name, keyName], regionalGroup[id, name, description]]&amp;#34; try: scaleGroups = [] result = accountService.getScaleGroups(mask=objectMask) for item in result: scaleGroup = {} scaleGroup[&amp;#39;id&amp;#39;] = item[&amp;#39;id&amp;#39;] scaleGroup[&amp;#39;name&amp;#39;] = item[&amp;#39;name&amp;#39;] scaleGroup[&amp;#39;status&amp;#39;] = item[&amp;#39;status&amp;#39;][&amp;#39;name&amp;#39;] scaleGroup[&amp;#39;region&amp;#39;] = item[&amp;#39;regionalGroup&amp;#39;][&amp;#39;name&amp;#39;] scaleGroups.</description>
    </item>
    
    <item>
      <title>list_servers.py</title>
      <link>https://softlayer.github.io/python/list_servers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_servers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List Bare Metal servers. The script retrieve a list of all bare metal servers in your account. it makes a single call to the Softlayer_Account::getHardware method for more information see below. Important manual pages: https://sldn.softlayer.com/reference/services/SoftLayer_Account https://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware https://sldn.softlayer.com/reference/datatype/SoftLayer_Hardware/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>list_servers_to_order.py</title>
      <link>https://softlayer.github.io/python/list_servers_to_order.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_servers_to_order.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List all the servers to order. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package_Server/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Server/ http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set-me&amp;#39; client = SoftLayer.create_client_from_env(username=API_USERNAME, api_key=API_KEY) packageService = client[&amp;#39;SoftLayer_Product_Package_Server&amp;#39;] objectFilter = {&amp;#34;packageType&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;BARE_METAL_CORE&amp;#34;, &amp;#34;BARE_METAL_CPU&amp;#34;, &amp;#34;BARE_METAL_CPU_FAST_PROVISION&amp;#34;]}]}} try: servers = packageService.getAllObjects(filter=objectFilter) print(json.dumps(servers, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>list_servers_to_order_hourly.py</title>
      <link>https://softlayer.github.io/python/list_servers_to_order_hourly.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_servers_to_order_hourly.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List all the servers to order (hourly). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package_Server/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Server/ http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set-me&amp;#39; client = SoftLayer.create_client_from_env(username=API_USERNAME, api_key=API_KEY) packageService = client[&amp;#39;SoftLayer_Product_Package_Server&amp;#39;] objectFilter = {&amp;#34;packageType&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;BARE_METAL_CPU_FAST_PROVISION&amp;#34;]}]}} try: servers = packageService.getAllObjects(filter=objectFilter) print(json.dumps(servers, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>list_standard_firewall.py</title>
      <link>https://softlayer.github.io/python/list_standard_firewall.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_standard_firewall.py/</guid>
      <description># # List standard firewalls # # This script will display the virtual servers with # firewall configured on them, a view like the # following will be displayed # +-----------+-------------------------+-------------+-------------------------------------+-----------------+ # | Server ID | Server Name | Firewall ID | Firewall Guest Network Component ID | Firewall Status | # +-----------+-------------------------+-------------+-------------------------------------+-----------------+ # | 8121992 | Test | 43302 | 4343912 | no_edit | # | 8200941 | test-host | 43689 | 4383153 | allow_edit | # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>list_subnet_prices.py</title>
      <link>https://softlayer.github.io/python/list_subnet_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_subnet_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the options and the prices to order a subnet like the portal. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAllObjects http://sldn.softlayer.com/article/Object-Masks http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json client = SoftLayer.Client() packageService = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] # The groups listed in the portal and its category code. groups = { &amp;#34;Static Public&amp;#34;: &amp;#34;static_sec_ip_addresses&amp;#34;, &amp;#34;Portable Public&amp;#34;: &amp;#34;sov_sec_ip_addresses_pub&amp;#34;, &amp;#34;Portable Private&amp;#34;: &amp;#34;sov_sec_ip_addresses_priv&amp;#34;, &amp;#34;Global IPv4&amp;#34;: &amp;#34;global_ipv4&amp;#34;, &amp;#34;Static Public IPv6&amp;#34;: &amp;#34;static_ipv6_addresses&amp;#34;, &amp;#34;Portable Public IPv6&amp;#34;: &amp;#34;sov_ipv6_addresses&amp;#34;, &amp;#34;Global IPv6&amp;#34;: &amp;#34;global_ipv6&amp;#34; } # Declaring a filter to get the packages related to subnets objectFilter = { &amp;#34;type&amp;#34;: { &amp;#34;keyName&amp;#34;: { &amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{ &amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [ &amp;#34;ADDITIONAL_SERVICES&amp;#34;, &amp;#34;ADDITIONAL_SERVICES_PORTABLE_IP_ADDRESSES&amp;#34;, &amp;#34;ADDITIONAL_SERVICES_STATIC_IP_ADDRESSES&amp;#34; ] }] } } } # Declaring an object mask to get more information about the packages objectMask = &amp;#34;mask[items[id, description, prices[id, recurringFee, attributes], categories[categoryCode]]]&amp;#34; try: packages = packageService.</description>
    </item>
    
    <item>
      <title>list_subnets.py</title>
      <link>https://softlayer.github.io/python/list_subnets.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_subnets.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List subnets. It retrieves all network subnets associated with an account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getSubnets License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client( username=API_USERNAME, api_key=API_KEY ) try: result = client[&amp;#39;SoftLayer_Account&amp;#39;].getSubnets() pp(result) except SoftLayer.SoftLayerAPIError as e: pp(&amp;#39;Unable to get the subnets faultCode=%s, faultString=%s&amp;#39; % (e.</description>
    </item>
    
    <item>
      <title>list_tags.py</title>
      <link>https://softlayer.github.io/python/list_tags.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_tags.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the tags for a VSI The scripts list all the tags set in an arbitrary VSI, it uses the SoftLayer_Virtual_Guest::getTagReferences method to get the tags. For more information please see below Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getTagReferences License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username and API key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The virtual guestId you wish to get the tags virtualGuestId = 7844984 # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>list_tickets.py</title>
      <link>https://softlayer.github.io/python/list_tickets.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_tickets.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; List tickets. The script retrieves all the tickets in a brand account. It displays the same result like in https://agent.softlayer.com/support/ticket/list Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Notification_Occurrence_Event http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; brandId = 4 client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY, timeout=500) brandService = client[&amp;#39;SoftLayer_Brand&amp;#39;] objectMask = &amp;#34;mask[group[name], status[name], statusId, id, createDate, title, assignedUser[username], attachedFileCount, totalUpdateCount, modifyDate, lastEditType, newUpdatesFlag, attachedHardwareCount, attachedVirtualGuestCount, priority, account[companyName, accountStatus[name]], assignedAgents[username], state[stateType], scheduledActions[transactionGroup, ticketScheduledActionReference] ]&amp;#34; objectFilter = {&amp;#34;tickets&amp;#34;: {&amp;#34;status&amp;#34;: {&amp;#34;name&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;Open&amp;#34;, &amp;#34;Assigned&amp;#34;]}]}}}} try: result = brandService.</description>
    </item>
    
    <item>
      <title>list_upgrade_prices.py</title>
      <link>https://softlayer.github.io/python/list_upgrade_prices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_upgrade_prices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get list of prices to upgrade VSI. The script retrieves the list of items to upgrade an arbitrary VSI. for more information see below: Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getUpgradeItemPrices http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; virtualGuestID = 35747489 # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>list_vlan_firewall.py</title>
      <link>https://softlayer.github.io/python/list_vlan_firewall.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_vlan_firewall.py/</guid>
      <description># List VLan firewalls # # This script will display a list of network VLan with firewall configured on them # using the SoftLayer_Account::getNetworkVlans and filtering the result the &amp;#34;dedicatedFirewallFlag&amp;#34; # will indicate if firewall is configured on the VLan, a view like the # following will be displayed # +---------+-----------------+-------------+--------------+----------------+ # | VLan ID | VLan Name | VLan Number | Router | Subnet | # +---------+-----------------+-------------+--------------+----------------+ # | 361652 | FirewallTesting | 1763 | fcr01a.</description>
    </item>
    
    <item>
      <title>list_zones.py</title>
      <link>https://softlayer.github.io/python/list_zones.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_zones.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List zones The script lists all domains belong to an account. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getDomains http://sldn.softlayer.com/reference/datatypes/SoftLayer_Dns_Domain License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Create a new connection to the API service. client = SoftLayer.Client( username=USERNAME, api_key=API_KEY ) try: # Get zone list through Account service result = client[&amp;#39;Account&amp;#39;].</description>
    </item>
    
    <item>
      <title>load_balancer_edit.py</title>
      <link>https://softlayer.github.io/python/load_balancer_edit.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/load_balancer_edit.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Edit load balancer The script edits the configuration of an existing load balancer, it makes a single call to the SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress::editObject method. For more information please see below. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress/editObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Creating an skeleton object SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress # which contains the configuration for our load balancer templateObject = { &amp;#39;id&amp;#39;: 35026, &amp;#39;virtualServers&amp;#39;: [{ &amp;#39;port&amp;#39;: 30, &amp;#39;allocation&amp;#39;: 100, &amp;#39;id&amp;#39;: 83554, &amp;#39;virtualIpAddressId&amp;#39;: 35026, &amp;#39;serviceGroups&amp;#39;: [{ &amp;#39;timeout&amp;#39;: &amp;#39;&amp;#39;, &amp;#39;notes&amp;#39;: &amp;#39;testhttp3&amp;#39;, &amp;#39;id&amp;#39;: 86554, &amp;#39;routingTypeId&amp;#39;: 2, &amp;#39;routingMethodId&amp;#39;: 10}], }] } client = SoftLayer.</description>
    </item>
    
    <item>
      <title>load_from_image.py</title>
      <link>https://softlayer.github.io/python/load_from_image.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/load_from_image.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Reload servers from a list of IPs This script looks for a server with a determinate IP address and reload it from an image template. Note: Regarding the Flex Image service, On Monday August 7, 2017 IBM Cloud (formerly SoftLayer) has discontinued offering the Flex Image service. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/reloadOperatingSystem License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>migrateDedicatedHost.py</title>
      <link>https://softlayer.github.io/python/migrateDedicatedHost.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/migrateDedicatedHost.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a transaction to migrate an instance from one dedicated host to another dedicated host. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/migrateDedicatedHost License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; virtualGuestIdToMigrate = 37117661 dedicatedHostTarget = 10201 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) virtualGuestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] try: response = virtualGuestService.migrateDedicatedHost(dedicatedHostTarget, id=virtualGuestIdToMigrate) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to migrate the dedicated host.</description>
    </item>
    
    <item>
      <title>modify_device_configuration.py</title>
      <link>https://softlayer.github.io/python/modify_device_configuration.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/modify_device_configuration.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Upgrades a server. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getUpgradeItemPrices http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Property http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Upgrade License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API import json def getServer(serverIp, hardwareService): &amp;#34;&amp;#34;&amp;#34;Get the server. :param string serverIp: The Ip address of the server. :param SoftLayer_Hardware_Server hardwareService: the SoftLayer_Hardware_Server service. :returns: A SoftLayer_Hardware_Server object. &amp;#34;&amp;#34;&amp;#34; try: objectMask = &amp;#34;mask[id]&amp;#34; server = hardwareService.findByIpAddress(serverIp, mask=objectMask) if not server: print(&amp;#34;There is no a server with the IP address: &amp;#34; + serverIp) exit(1) except SoftLayer.</description>
    </item>
    
    <item>
      <title>monitoring_notifications_change_ping.py</title>
      <link>https://softlayer.github.io/python/monitoring_notifications_change_ping.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/monitoring_notifications_change_ping.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create Network Notification The script creates a Network Notification of type service ping and a notify wait of 5 minutes. Important manual pages: http://sldn.softlayer.com/reference/services/Softlayer_Monitoring_Agent http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getGraphData License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) networkMonitorService = client[&amp;#39;SoftLayer_Network_Monitor_Version1_Query_Host&amp;#39;] objectTemplate = [ { &amp;#34;guestId&amp;#34;: 6143038, &amp;#34;ipAddress&amp;#34;: &amp;#34;10.</description>
    </item>
    
    <item>
      <title>orderDedicatedHost.py</title>
      <link>https://softlayer.github.io/python/orderDedicatedHost.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderDedicatedHost.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a Dedicated host. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/node/274081 http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) productOrderService = client[&amp;#39;SoftLayer_Product_Order&amp;#39;] orderData = { &amp;#34;orderContainers&amp;#34;: [ { &amp;#34;location&amp;#34;: &amp;#34;DALLAS10&amp;#34;, &amp;#34;packageId&amp;#34;: 813, # Building a skeleton SoftLayer_Hardware_Server object to model the hostname, # domain and the router that we want for our dedicated host.</description>
    </item>
    
    <item>
      <title>orderVSIOnDedicatedHost.py</title>
      <link>https://softlayer.github.io/python/orderVSIOnDedicatedHost.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderVSIOnDedicatedHost.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new VSI in a dedicated host. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;setme&amp;#39; API_KEY = &amp;#39;setme&amp;#39; orderData = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Virtual_Guest&amp;#34;, &amp;#34;hostId&amp;#34;: 9301, # The dedicated host where this virtual guest is going to be deployed in &amp;#34;packageId&amp;#34;: 46, &amp;#34;prices&amp;#34;: [ {&amp;#34;id&amp;#34;: 200317}, {&amp;#34;id&amp;#34;: 200353}, {&amp;#34;id&amp;#34;: 45466}, {&amp;#34;id&amp;#34;: 200385}, {&amp;#34;id&amp;#34;: 50367}, {&amp;#34;id&amp;#34;: 273}, {&amp;#34;id&amp;#34;: 55}, {&amp;#34;id&amp;#34;: 58}, {&amp;#34;id&amp;#34;: 420}, {&amp;#34;id&amp;#34;: 418}, {&amp;#34;id&amp;#34;: 21}, {&amp;#34;id&amp;#34;: 57}, {&amp;#34;id&amp;#34;: 905} ], &amp;#34;quantity&amp;#34;: 1, &amp;#34;virtualGuests&amp;#34;: [ { &amp;#34;domain&amp;#34;: &amp;#34;softlayer.</description>
    </item>
    
    <item>
      <title>order_ccivia_vsmanager.py</title>
      <link>https://softlayer.github.io/python/order_ccivia_vsmanager.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_ccivia_vsmanager.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a VSI using VSManager class. The script Verifies an instance creation command without actually placing an order. When ready to order change the manager to create_instance instead of verify_create_instance, remember that this will incur in billing charges. For more information see below: Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getObject/ http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>order_consistent_performance_storage_iscsi.py</title>
      <link>https://softlayer.github.io/python/order_consistent_performance_storage_iscsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_consistent_performance_storage_iscsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order Consistent Performance Storage iSCSI. This script creates an order for Consistent Performance Storage iSCSI (Monthly) need to build a SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi object and pass it to SoftLayer_Product_Order::placeOrder method. See below references for more details. important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: import pprint # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>order_consistent_performance_storage_nfs.py</title>
      <link>https://softlayer.github.io/python/order_consistent_performance_storage_nfs.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_consistent_performance_storage_nfs.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order Consistent Performance Storage Nfs. This script creates an order for Consistent Performance Storage Nfs (Monthly) See below references for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: import pprint # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>order_dedicated_firewall.py</title>
      <link>https://softlayer.github.io/python/order_dedicated_firewall.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_dedicated_firewall.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order dedicated firewall The script calls the SoftLayer_Product_Order::placeOrder method to order a firewall. for more information see below. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated object # containing the order you wish to place. orderData = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Network_Protection_Firewall&amp;#34;, &amp;#34;virtualGuests&amp;#34;: [ { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Virtual_Guest&amp;#34;, &amp;#34;id&amp;#34;: 6674100 # the virtual Guest ID where you wish add a firewall.</description>
    </item>
    
    <item>
      <title>order_email_delivery_account.py</title>
      <link>https://softlayer.github.io/python/order_email_delivery_account.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_email_delivery_account.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order email delivery account. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_ContentDelivery_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_ContentDelivery_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_Container_Product_Order_Network_ContentDelivery_Account object # containing the order you wish to place. orderTemplate = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Network_Message_Delivery&amp;#34;, &amp;#34;packageId&amp;#34;: 246, # Build a skeleton SoftLayer_Product_Item_Price object. # The object contains the price ID of the email delivery account # you wish to order.</description>
    </item>
    
    <item>
      <title>order_evault.py</title>
      <link>https://softlayer.github.io/python/order_evault.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_evault.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a Evault device. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/services/SoftLayer_Location http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Vault http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Values &amp;#34;AMS01&amp;#34;, &amp;#34;AMS03&amp;#34;, &amp;#34;CHE01&amp;#34;, &amp;#34;DAL05&amp;#34;, &amp;#34;DAL06&amp;#34; &amp;#34;FRA02&amp;#34;, &amp;#34;HKG02&amp;#34;, &amp;#34;LON02&amp;#34;, etc. location = &amp;#34;DAL05&amp;#34; # Values &amp;#34;20&amp;#34;, &amp;#34;30&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;50&amp;#34;, &amp;#34;60&amp;#34;, &amp;#34;100&amp;#34;, etc. size = &amp;#34;20&amp;#34; # The VSI or Sever IP address where the Evault will be added.</description>
    </item>
    
    <item>
      <title>order_global_ipv4_ipv6.py</title>
      <link>https://softlayer.github.io/python/order_global_ipv4_ipv6.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_global_ipv4_ipv6.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Orders a new Global IPv4/IPv6 subnet Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Creates a new connection to the API service. client = SoftLayer.Client( username=API_USERNAME, api_key=API_KEY ) # Set the package related to subnets package_id = 0 # Filters a specific type of subnet to order e.</description>
    </item>
    
    <item>
      <title>order_iscsi_storage.py</title>
      <link>https://softlayer.github.io/python/order_iscsi_storage.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_iscsi_storage.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order iSCSI Storage. This script creates an order for iSCSI Storage (Monthly) See below references for more details. http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: import pprint # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; orderTemplate = { &amp;#39;complexType&amp;#39;: &amp;#39;SoftLayer_Container_Product_Order_Network_Storage_Iscsi&amp;#39;, &amp;#39;quantity&amp;#39;: 1, &amp;#39;packageId&amp;#39;: 218, &amp;#39;location&amp;#39;: &amp;#39;DALLAS07&amp;#39;, &amp;#39;prices&amp;#39;: [ {&amp;#39;id&amp;#39;: 1033} # 20 GB iSCSI SAN Storage ] } # Create a client instance client = SoftLayer.</description>
    </item>
    
    <item>
      <title>order_load_balancer.py</title>
      <link>https://softlayer.github.io/python/order_load_balancer.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_load_balancer.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a load balancer Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package to order load balancers. packageId = 194 # Build a skeleton SoftLayer_Product_Item_Price objects. These objects contain # much more than ids, but SoftLayer&amp;#39;s ordering system only needs the price&amp;#39;s id # to know what you want to order.</description>
    </item>
    
    <item>
      <title>order_portable_private_subnet.py</title>
      <link>https://softlayer.github.io/python/order_portable_private_subnet.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_portable_private_subnet.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Orders a new portable private subnet Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Order Template with all new item configurations orderTemplate = { &amp;#39;location&amp;#39;: 138124, # Dallas 5 &amp;#39;packageId&amp;#39;: 0, &amp;#39;endPointVlanId&amp;#39;: 382776, &amp;#39;prices&amp;#39;: [ { &amp;#39;id&amp;#39;: 13981 } ], &amp;#39;quantity&amp;#39;: 1, &amp;#39;itemCategoryQuestionAnswers&amp;#39;: [ { &amp;#39;categoryId&amp;#39;: 312, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_priv&amp;#39;, &amp;#39;questionId&amp;#39;: 14, &amp;#39;answer&amp;#39;: 1 # TOTAL_IPS_IN_30_DAYS }, { &amp;#39;categoryId&amp;#39;: 312, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_priv&amp;#39;, &amp;#39;questionId&amp;#39;: 15, &amp;#39;answer&amp;#39;: 2 # TOTAL_IPS_IN_12_MONTHS }, { &amp;#39;categoryId&amp;#39;: 312, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_priv&amp;#39;, &amp;#39;questionId&amp;#39;: 16, &amp;#39;answer&amp;#39;: &amp;#39;Test description of your need for additional IPs&amp;#39; # REASON_FOR_IPS }, { &amp;#39;categoryId&amp;#39;: 312, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_priv&amp;#39;, &amp;#39;questionId&amp;#39;: 9, &amp;#39;answer&amp;#39;: &amp;#39;ContactNameTest&amp;#39; # CONTACT_NAME }, { &amp;#39;categoryId&amp;#39;: 312, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_priv&amp;#39;, &amp;#39;questionId&amp;#39;: 10, &amp;#39;answer&amp;#39;: &amp;#39;ContactJobTitleTest&amp;#39; # CONTACT_JOB_TITLE }, { &amp;#39;categoryId&amp;#39;: 312, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_priv&amp;#39;, &amp;#39;questionId&amp;#39;: 11, &amp;#39;answer&amp;#39;: &amp;#39;contact.</description>
    </item>
    
    <item>
      <title>order_portable_public_subnet.py</title>
      <link>https://softlayer.github.io/python/order_portable_public_subnet.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_portable_public_subnet.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Orders a new portable public subnet Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Order Template with all new item configurations orderTemplate = { &amp;#39;location&amp;#39;: 224092, # Singapore 1 &amp;#39;packageId&amp;#39;: 0, &amp;#39;endPointVlanId&amp;#39;: 527900, &amp;#39;prices&amp;#39;: [ { &amp;#39;id&amp;#39;: 13980 } ], &amp;#39;quantity&amp;#39;: 1, &amp;#39;itemCategoryQuestionAnswers&amp;#39;: [ { &amp;#39;categoryId&amp;#39;: 313, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_pub&amp;#39;, &amp;#39;questionId&amp;#39;: 14, &amp;#39;answer&amp;#39;: 1 # TOTAL_IPS_IN_30_DAYS }, { &amp;#39;categoryId&amp;#39;: 313, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_pub&amp;#39;, &amp;#39;questionId&amp;#39;: 15, &amp;#39;answer&amp;#39;: 3 # TOTAL_IPS_IN_12_MONTHS }, { &amp;#39;categoryId&amp;#39;: 313, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_pub&amp;#39;, &amp;#39;questionId&amp;#39;: 16, &amp;#39;answer&amp;#39;: &amp;#39;Test description of your need for additional IPs&amp;#39; # REASON_FOR_IPS }, { &amp;#39;categoryId&amp;#39;: 313, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_pub&amp;#39;, &amp;#39;questionId&amp;#39;: 9, &amp;#39;answer&amp;#39;: &amp;#39;ContactNameTest&amp;#39; # CONTACT_NAME }, { &amp;#39;categoryId&amp;#39;: 313, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_pub&amp;#39;, &amp;#39;questionId&amp;#39;: 10, &amp;#39;answer&amp;#39;: &amp;#39;ContactJobTitleTest&amp;#39; # CONTACT_JOB_TITLE }, { &amp;#39;categoryId&amp;#39;: 313, &amp;#39;categoryCode&amp;#39;: &amp;#39;sov_sec_ip_addresses_pub&amp;#39;, &amp;#39;questionId&amp;#39;: 11, &amp;#39;answer&amp;#39;: &amp;#39;contact.</description>
    </item>
    
    <item>
      <title>order_portable_public_subnet_ipv6.py</title>
      <link>https://softlayer.github.io/python/order_portable_public_subnet_ipv6.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_portable_public_subnet_ipv6.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Orders a new portable Public IPv6 Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Order Template with all new item configurations orderTemplate = { &amp;#39;packageId&amp;#39;: 0, &amp;#39;endPointVlanId&amp;#39;: 412000, &amp;#39;prices&amp;#39;: [ { &amp;#39;id&amp;#39;: 1482 } ], &amp;#39;quantity&amp;#39;: 1, &amp;#39;complexType&amp;#39;: &amp;#39;SoftLayer_Container_Product_Order_Network_Subnet&amp;#39; } # Creates a new connection to the API service.</description>
    </item>
    
    <item>
      <title>order_preset_server.py</title>
      <link>https://softlayer.github.io/python/order_preset_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_preset_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new server with preset configuration. The presets used to simplify ordering by eliminating the need for price ids when submitting orders. Also when the order contains a preset id, it is not possible to configure VLANs in the order. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>order_server_with_raid.py</title>
      <link>https://softlayer.github.io/python/order_server_with_raid.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_server_with_raid.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new server with RAID configuration. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set-me&amp;#39; quantity = 1 location = &amp;#39;AMSTERDAM&amp;#39; packageId = 259 lvmFlag = True # Building a skeleton SoftLayer_Hardware_Server object to model the hostname and # domain we want for our server.</description>
    </item>
    
    <item>
      <title>order_static_public_subnet.py</title>
      <link>https://softlayer.github.io/python/order_static_public_subnet.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_static_public_subnet.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Orders a new static public subnet Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # Order a new SoftLayer IP subnet import SoftLayer # For nice debug output: from pprint import pprint as pp API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Order Template with all configurations of the new item orderTemplate = { &amp;#39;location&amp;#39;: 154820, # dal06 &amp;#39;packageId&amp;#39;: 0, &amp;#39;endPointIpAddressId&amp;#39;: 24036066, &amp;#39;prices&amp;#39;: [ { &amp;#39;id&amp;#39;: 13983 } ], &amp;#39;quantity&amp;#39;: 1, &amp;#39;itemCategoryQuestionAnswers&amp;#39;: [ { &amp;#39;categoryId&amp;#39;: 53, &amp;#39;categoryCode&amp;#39;: &amp;#39;static_sec_ip_addresses&amp;#39;, &amp;#39;questionId&amp;#39;: 14, &amp;#39;answer&amp;#39;: 1 # static_sec_ip_addresses }, { &amp;#39;categoryId&amp;#39;: 53, &amp;#39;categoryCode&amp;#39;: &amp;#39;static_sec_ip_addresses&amp;#39;, &amp;#39;questionId&amp;#39;: 15, &amp;#39;answer&amp;#39;: 1 # TOTAL_IPS_IN_12_MONTHS }, { &amp;#39;categoryId&amp;#39;: 53, &amp;#39;categoryCode&amp;#39;: &amp;#39;static_sec_ip_addresses&amp;#39;, &amp;#39;questionId&amp;#39;: 16, &amp;#39;answer&amp;#39;: &amp;#39;Set the description of your need for additional IPs&amp;#39; # TOTAL_IPS_IN_12_MONTHS }, { &amp;#39;categoryId&amp;#39;: 53, &amp;#39;categoryCode&amp;#39;: &amp;#39;static_sec_ip_addresses&amp;#39;, &amp;#39;questionId&amp;#39;: 9, &amp;#39;answer&amp;#39;: &amp;#39;ContactNameTest&amp;#39; # TOTAL_IPS_IN_12_MONTHS }, { &amp;#39;categoryId&amp;#39;: 53, &amp;#39;categoryCode&amp;#39;: &amp;#39;static_sec_ip_addresses&amp;#39;, &amp;#39;questionId&amp;#39;: 10, &amp;#39;answer&amp;#39;: &amp;#39;ContactJobTitle&amp;#39; # CONTACT_JOB_TITLE }, { &amp;#39;categoryId&amp;#39;: 53, &amp;#39;categoryCode&amp;#39;: &amp;#39;static_sec_ip_addresses&amp;#39;, &amp;#39;questionId&amp;#39;: 11, &amp;#39;answer&amp;#39;: &amp;#39;contact.</description>
    </item>
    
    <item>
      <title>order_static_public_subnet_ipv6.py</title>
      <link>https://softlayer.github.io/python/order_static_public_subnet_ipv6.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_static_public_subnet_ipv6.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Orders a new Static Public IPv6 Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp API_USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Order Template with all new item configurations orderTemplate = { &amp;#39;packageId&amp;#39;: 0, &amp;#39;endPointIpAddressId&amp;#39;: 18263116, &amp;#39;prices&amp;#39;: [ { &amp;#39;id&amp;#39;: 1481 } ], &amp;#39;quantity&amp;#39;: 1, &amp;#39;complexType&amp;#39;: &amp;#39;SoftLayer_Container_Product_Order_Network_Subnet&amp;#39; } # Creates a new connection to the API service.</description>
    </item>
    
    <item>
      <title>order_subnet.py</title>
      <link>https://softlayer.github.io/python/order_subnet.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_subnet.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new subnet. The script order a new subnet using the same options like the portal. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet/getSubnetForIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNetworkVlans http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Subnet http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The subnet you wish to order. The available options are the # same like in the in the Softlayer Portal. # e.g. &amp;#34;1 Static Public IP Address&amp;#34;, # &amp;#34;/64 Block Static Public IPv6 Addresses&amp;#34;, etc.</description>
    </item>
    
    <item>
      <title>order_vsi_friendly.py</title>
      <link>https://softlayer.github.io/python/order_vsi_friendly.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_vsi_friendly.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Account/getSshKeys http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getVlanForIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Declare variables location = &amp;#34;AMS01&amp;#34; quantity = 1 # If you want the VSI hourly pricing # set the value as True useHourlyPricing = False # The configuration of the VSI # The values and names are the same like # the ones displayed in the portal.</description>
    </item>
    
    <item>
      <title>order_vyatta.py</title>
      <link>https://softlayer.github.io/python/order_vyatta.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_vyatta.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a Network Gateway Appliance (Vyatta) The script orders a (Vyatta) high availability pair it uses the SoftLayer_Product_Order::placeOrder to make the order For more information see below: Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Container_Product_Order object. The object contains the configuration for the Vyatta server such as the quantity, the location, etc.</description>
    </item>
    
    <item>
      <title>os_reload_configuration_page.py</title>
      <link>https://softlayer.github.io/python/os_reload_configuration_page.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/os_reload_configuration_page.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Display the information about the server to reload like the Softlayer portal. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_SoftLayer_Product_Package http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getObject http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/reloadOperatingSystem http://sldn.softlayer.com/reference/services/SoftLayer_SoftLayer_Product_Package/getItemConflicts License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer def get_hardware(hardware_id, hardware_service): &amp;#34;&amp;#34;&amp;#34;Get the hardware object. :param int hardware_id: The id of the hardware to get. :param SoftLayer_Hardware_Server hardware_service: The SoftLayer_Hardware_Server service. :returns: A Softlayer_Hardware_Server object. &amp;#34;&amp;#34;&amp;#34; object_mask = &amp;#39;mask[account[attributes[accountAttributeType]], activeTransaction[transactionStatus], &amp;#39; \ &amp;#39;billingItem[item[totalPhysicalCoreCapacity, capacity], &amp;#39; \ &amp;#39;package[configuration[itemCategory[categoryCode, name]], &amp;#39; \ &amp;#39;items[availabilityAttributes[attributeTypeKeyName], coreRestrictedItemFlag, &amp;#39; \ &amp;#39;prices[accountRestrictions, categories[categoryCode, name], requiredCoreCount, &amp;#39; \ &amp;#39;definedSoftwareLicenseFlag], requirements, softwareDescription[averageInstallationDuration]]]],&amp;#39; \ &amp;#39;hourlyBillingFlag, managedResourceFlag, operatingSystem[averageInstallationDuration, &amp;#39; \ &amp;#39;passwords[sshKeys]], primaryIpAddress, &amp;#39; \ &amp;#39;softwareComponents[softwareLicense[softwareDescription[features[keyName],&amp;#39; \ &amp;#39;productItems[categories[categoryCode, name]]]]], networkGatewayMemberFlag]&amp;#39; try: hardware = hardware_service.</description>
    </item>
    
    <item>
      <title>pagination.py</title>
      <link>https://softlayer.github.io/python/pagination.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/pagination.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Example about pagination The script retrieves the Bare metal servers in a account and displays all the servers using pagination Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware https://softlayer-api-python-client.readthedocs.org/en/latest/api/client/#module-SoftLayer License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) offset = 0 limit = 1 accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] while True: try: result = accountService.</description>
    </item>
    
    <item>
      <title>place_order_block_storage.py</title>
      <link>https://softlayer.github.io/python/place_order_block_storage.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_block_storage.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a block storage (performance) The script orders a block storage (performance) device, with 40GB storage and 600 IOPS, it makes a single call to SoftLayer_Product_Order::placeOrder method. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Building an skeleton SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi to the order orderTemplate = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi&amp;#34;, &amp;#34;location&amp;#34;: &amp;#34;DALLAS05&amp;#34;, &amp;#34;quantity&amp;#34;: 1, # The package for order block storage &amp;#34;packageId&amp;#34;: 222, # The prices for the block storage, it required you specify # a storage space and IOPS in the template.</description>
    </item>
    
    <item>
      <title>place_order_block_storage_endurance_with_snapshot_size.py</title>
      <link>https://softlayer.github.io/python/place_order_block_storage_endurance_with_snapshot_size.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_block_storage_endurance_with_snapshot_size.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a block storage (endurance) with snapshot storage space. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Location http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/node/274081 http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Values &amp;#34;AMS01&amp;#34;, &amp;#34;AMS03&amp;#34;, &amp;#34;CHE01&amp;#34;, &amp;#34;DAL05&amp;#34;, &amp;#34;DAL06&amp;#34; &amp;#34;FRA02&amp;#34;, &amp;#34;HKG02&amp;#34;, &amp;#34;LON02&amp;#34;, etc. location = &amp;#34;set me&amp;#34; # Values: &amp;#34;0.25&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;4&amp;#34; iops = &amp;#34;set me&amp;#34; # Values &amp;#34;20&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;80&amp;#34;, &amp;#34;100&amp;#34;, etc.</description>
    </item>
    
    <item>
      <title>place_order_block_storage_performance_iscsi.py</title>
      <link>https://softlayer.github.io/python/place_order_block_storage_performance_iscsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_block_storage_performance_iscsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a block storage (performance ISCSI). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Location http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi_OS_Type http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi_OS_Type/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/node/274081 http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Values &amp;#34;AMS01&amp;#34;, &amp;#34;AMS03&amp;#34;, &amp;#34;CHE01&amp;#34;, &amp;#34;DAL05&amp;#34;, &amp;#34;DAL06&amp;#34; &amp;#34;FRA02&amp;#34;, &amp;#34;HKG02&amp;#34;, &amp;#34;LON02&amp;#34;, etc. location = &amp;#34;set me&amp;#34; # Values &amp;#34;20&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;80&amp;#34;, &amp;#34;100&amp;#34;, etc.</description>
    </item>
    
    <item>
      <title>place_order_cdn.py</title>
      <link>https://softlayer.github.io/python/place_order_cdn.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_cdn.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new CDN account Build a SoftLayer_Container_Product_Order_Network_ContentDelivery_Account object for a new CDN account order and pass it to the SoftLayer_Product_Order API service to order it. In this case we&amp;#39;ll order a pay as you go bandwidth and storage CDN account. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_ContentDelivery_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_ContentDelivery_Account http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Container_Product_Order_Network_ContentDelivery_Account object containing the order you wish to place.</description>
    </item>
    
    <item>
      <title>place_order_evault.py</title>
      <link>https://softlayer.github.io/python/place_order_evault.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_evault.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a Evault Build a SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Vault object for a new Evault order and pass it to the SoftLayer_Product_Order for more information see below: Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Vault http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; # Your SoftLayer API username and key. # Generate an API key at the SoftLayer Customer Portal: # https://manage.softlayer.com/Administrative/apiKeychain &amp;#34;&amp;#34;&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Create a SoftLayer API client object client = SoftLayer.</description>
    </item>
    
    <item>
      <title>place_order_file_storage_endurance.py</title>
      <link>https://softlayer.github.io/python/place_order_file_storage_endurance.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_file_storage_endurance.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a simple file storage (endurance). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Location http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/node/274081 http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Values &amp;#34;AMS01&amp;#34;, &amp;#34;AMS03&amp;#34;, &amp;#34;CHE01&amp;#34;, &amp;#34;DAL05&amp;#34;, &amp;#34;DAL06&amp;#34; &amp;#34;FRA02&amp;#34;, &amp;#34;HKG02&amp;#34;, &amp;#34;LON02&amp;#34;, etc. location = &amp;#34;set me&amp;#34; # Values: &amp;#34;0.25&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;4&amp;#34; iops = &amp;#34;set me&amp;#34; # Values &amp;#34;20&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;80&amp;#34;, &amp;#34;100&amp;#34;, etc.</description>
    </item>
    
    <item>
      <title>place_order_file_storage_endurance_with_snapshot_size.py</title>
      <link>https://softlayer.github.io/python/place_order_file_storage_endurance_with_snapshot_size.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_file_storage_endurance_with_snapshot_size.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a file storage (endurance) with snapshot storage space. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Location http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/node/274081 http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Values &amp;#34;AMS01&amp;#34;, &amp;#34;AMS03&amp;#34;, &amp;#34;CHE01&amp;#34;, &amp;#34;DAL05&amp;#34;, &amp;#34;DAL06&amp;#34; &amp;#34;FRA02&amp;#34;, &amp;#34;HKG02&amp;#34;, &amp;#34;LON02&amp;#34;, etc. location = &amp;#34;set me&amp;#34; # Values: &amp;#34;0.25&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;4&amp;#34; iops = &amp;#34;set me&amp;#34; # Values &amp;#34;20&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;80&amp;#34;, &amp;#34;100&amp;#34;, etc.</description>
    </item>
    
    <item>
      <title>place_order_file_storage_performance_nfs.py</title>
      <link>https://softlayer.github.io/python/place_order_file_storage_performance_nfs.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_file_storage_performance_nfs.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a file storage (performance NFS). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group_Pricing/getAllObjects http://sldn.softlayer.com/reference/services/SoftLayer_Location http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location_Group_Pricing http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_PerformanceStorage_Nfs http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/node/274081 http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Values &amp;#34;AMS01&amp;#34;, &amp;#34;AMS03&amp;#34;, &amp;#34;CHE01&amp;#34;, &amp;#34;DAL05&amp;#34;, &amp;#34;DAL06&amp;#34; &amp;#34;FRA02&amp;#34;, &amp;#34;HKG02&amp;#34;, &amp;#34;LON02&amp;#34;, etc. location = &amp;#34;set me&amp;#34; # Values &amp;#34;20&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;80&amp;#34;, &amp;#34;100&amp;#34;, etc. storageSize = &amp;#34;set me&amp;#34; # Values between &amp;#34;100&amp;#34; and &amp;#34;6000&amp;#34; by intervals of 100.</description>
    </item>
    
    <item>
      <title>place_order_monitoring.py</title>
      <link>https://softlayer.github.io/python/place_order_monitoring.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_monitoring.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a Monitoring Package Build a SoftLayer_Container_Product_Order_Monitoring_Package object for a new monitoring order and pass it to the SoftLayer_Product_Order API service to order it In this care we&amp;#39;ll order a Basic (Hardware and OS) package with Basic Monitoring Package - Linux configuration for more details see below Important manual pages: https://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Monitoring_Package http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent_Configuration_Template_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Container_Product_Order_Monitoring_Package object containing the order you wish to place.</description>
    </item>
    
    <item>
      <title>place_order_nas.py</title>
      <link>https://softlayer.github.io/python/place_order_nas.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_nas.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a NAS Build a SoftLayer_Container_Product_Order_Network_Storage_Nas object for a new CDN account order and pass it to the SoftLayer_Product_Order API service to order it. In this script we&amp;#39;ll order a NAS. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Nas http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://manage.softlayer.com/Administrative/apiKeychain API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Container_Product_Order_Network_Storage_Nas object containing the order you wish to place.</description>
    </item>
    
    <item>
      <title>place_order_performance_nfs.py</title>
      <link>https://softlayer.github.io/python/place_order_performance_nfs.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_performance_nfs.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order performance NFS storage. The script orders a performance NFS storage with 40GB storage space and 100 IOPS. It makes a single call to SoftLayer_Product_Order::placeOrder method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Building an skeleton SoftLayer_Container_Product_Order for the order orderTemplate = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order&amp;#34;, &amp;#34;location&amp;#34;: &amp;#34;DALLAS05&amp;#34;, # The package for order performance NFS storage.</description>
    </item>
    
    <item>
      <title>place_order_portable_storage.py</title>
      <link>https://softlayer.github.io/python/place_order_portable_storage.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_portable_storage.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a portal storage The script orders a portal storage device, it makes a single call to SoftLayer_Product_Order::placeOrder method. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Disk_Image http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client to use the SoftLayer_Product_Order API service client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) productOrderService = client[&amp;#39;SoftLayer_Product_Order&amp;#39;] # Building an skeleton SoftLayer_Container_Product_Order_Virtual_Disk_Image to the order orderTemplate = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Virtual_Disk_Image&amp;#34;, &amp;#34;location&amp;#34;: &amp;#34;SANJOSE&amp;#34;, # The package for order portable storage &amp;#34;packageId&amp;#34;: 198, &amp;#34;diskDescription&amp;#34;: &amp;#34;test portable storage&amp;#34;, &amp;#34;prices&amp;#34;: [ { # The prices for the portable storage # to see the list of prices available for the package # use the Softlayer_Product_Package::getItems method (http://sldn.</description>
    </item>
    
    <item>
      <title>place_order_replica.py</title>
      <link>https://softlayer.github.io/python/place_order_replica.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_replica.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order snapshot replica. Build a SoftLayer_Container_Product_Order_Network_Storage_Enterprise object to order a replica for your endurance object storage. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Builds a skeleton SoftLayer_Container_Product_Order_Network_Storage_Enterprise object # containing the order you wish to place. orderData = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Network_Storage_Enterprise&amp;#34;, &amp;#34;packageId&amp;#34;: 240, # In order to get the valid locations for the replica # call the SoftLayer_Network_Storage::getValidReplicationTargetDatacenterLocations method # e.</description>
    </item>
    
    <item>
      <title>place_order_several_vms_vlan.py</title>
      <link>https://softlayer.github.io/python/place_order_several_vms_vlan.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_several_vms_vlan.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new VSI. The script makes a order for a VSI, it uses the SoftLayer_Product_Order::placeOrder method for more information please see below: Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp &amp;#34;&amp;#34;&amp;#34; &amp;#34;&amp;#34;&amp;#34; # Your SoftLayer API username and key. API_USERNAME = &amp;#39;&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Container_Product_Order_Virtual_Guest object containing the order you wish to place.</description>
    </item>
    
    <item>
      <title>place_order_storage_space.py</title>
      <link>https://softlayer.github.io/python/place_order_storage_space.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_storage_space.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order storage space. The script adds an storage space of 10 GB to an endurance storage. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise_SnapshotSpace http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_Container_Product_Order_Network_Storage_Enterprise_SnapshotSpace object # containing the order you wish to place. orderData = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Network_Storage_Enterprise_SnapshotSpace&amp;#34;, &amp;#34;volumeId&amp;#34;: 6538873, # The storage endurance id where you wish to add the storage space.</description>
    </item>
    
    <item>
      <title>place_order_template_vlan_provisioning_script.py</title>
      <link>https://softlayer.github.io/python/place_order_template_vlan_provisioning_script.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_template_vlan_provisioning_script.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new VSI with post script and VLAN. The script makes a order for a VSI, it uses the SoftLayer_Product_Order::placeOrder method for more information please see below: Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp &amp;#34;&amp;#34;&amp;#34; &amp;#34;&amp;#34;&amp;#34; # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>place_order_vlan.py</title>
      <link>https://softlayer.github.io/python/place_order_vlan.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_vlan.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Example to create a new VLAN. The script uses the placeOrder method to order a new VLAN with 32 static IP address Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Container_Product_Order_Network_Vlan object to model the order for the new VLAN &amp;#34;&amp;#34;&amp;#34; orderData = { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Network_Vlan&amp;#34;, &amp;#34;location&amp;#34;: &amp;#34;AMSTERDAM&amp;#34;, &amp;#34;packageId&amp;#34;: 0, # Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>place_quote_order.py</title>
      <link>https://softlayer.github.io/python/place_quote_order.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_quote_order.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order from account&amp;#39;s quote. This script creates an order from a account&amp;#39;s quote presented in the SoftLayer Customer Portal&amp;#39;s (https://control.softlayer.com/account/quotes) Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getQuotes http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order_Quote/getRecalculatedOrderContainer http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order_Quote/placeOrder @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: import pprint &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; &amp;#34;&amp;#34;&amp;#34; Set the id of the quote from which you want to create the order, use SoftLayer_Account::getQuotes method to get a list of quotes from account &amp;#34;&amp;#34;&amp;#34; quoteId = 1186525 # Get the order data by using SoftLayer_Billing_Order_Quote::getRecalculatedOrderContainer method orderTemplates = client[&amp;#39;SoftLayer_Billing_Order_Quote&amp;#39;].</description>
    </item>
    
    <item>
      <title>planned_events.py</title>
      <link>https://softlayer.github.io/python/planned_events.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/planned_events.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the planned events. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Notification_Occurrence_Event http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event/getAllObjects http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API import json import datetime USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Gets the current date. now = datetime.datetime.now() now = now.strftime(&amp;#34;%m/%d/%Y&amp;#34;) # Creates the API service. client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) notificationEventService = client[&amp;#39;SoftLayer_Notification_Occurrence_Event&amp;#39;] # Declares a object mask to get more information about the events. objectMask = &amp;#34;mask[updateCount,statusCode,notificationOccurrenceEventType[keyName],impactedUsers[user[id],acknowledgedFlag]]&amp;#34; # Declares a object filter to get the planned events whose status is active and the end date of the event is greater than today.</description>
    </item>
    
    <item>
      <title>power_off_guest.py</title>
      <link>https://softlayer.github.io/python/power_off_guest.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/power_off_guest.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Power off Guest The scripts will look for a VSI which has an specific hostname and the it powers off the VSI by making a single call to the SoftLayer_Virtual_Guest::powerOff method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Acount/ http://sldn.softlayer.com/reference/services/SoftLayer_Acount/getVirtualGuests http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/powerOff License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # The name of the machine you wish to power off virtualGuestName = &amp;#39;vsiHostname&amp;#39; # Declare a new API service object client = SoftLayer.</description>
    </item>
    
    <item>
      <title>power_on_guest.py</title>
      <link>https://softlayer.github.io/python/power_on_guest.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/power_on_guest.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Power off Guest The scripts will look for a VSI which has an specific hostname and the it powers on the VSI by making a single call to the SoftLayer_Virtual_Guest::powerOn method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Acount/ http://sldn.softlayer.com/reference/services/SoftLayer_Acount/getVirtualGuests http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/powerOn License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # The name of the machine you wish to power off virtualGuestName = &amp;#39;vsiHostname&amp;#39; # Declare a new API service object client = SoftLayer.</description>
    </item>
    
    <item>
      <title>process_rules_for_a_firewall_in_a_bypass.py</title>
      <link>https://softlayer.github.io/python/process_rules_for_a_firewall_in_a_bypass.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/process_rules_for_a_firewall_in_a_bypass.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Process rules for a firewall in a VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getFirewallServiceComponent http://sldn.softlayer.com/reference/services/SoftLayer_Network_Firewall_Update_Request/createObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiIp = &amp;#34;169.57.129.196&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) guestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] firewallService = client[&amp;#39;SoftLayer_Network_Component_Firewall&amp;#39;] firewallUpdateService = client[&amp;#39;SoftLayer_Network_Firewall_Update_Request&amp;#39;] try: vsi = guestService.findByIpAddress(vsiIp) firewall = guestService.getFirewallServiceComponent(id=vsi[&amp;#39;id&amp;#39;]) oldRules = firewallService.getRules(id=firewall[&amp;#39;id&amp;#39;]) template = { &amp;#39;bypassFlag&amp;#39;: False, &amp;#39;networkComponentFirewallId&amp;#39;: firewall[&amp;#39;id&amp;#39;], &amp;#39;rules&amp;#39;: oldRules } result = firewallUpdateService.</description>
    </item>
    
    <item>
      <title>purcharse_hostids.py</title>
      <link>https://softlayer.github.io/python/purcharse_hostids.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/purcharse_hostids.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Purchase a hostIDS for a server. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Ticket http://sldn.softlayer.com/reference/services/SoftLayer_Ticket/createUpgradeTicket License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; attachmentId = 164203 # The hardware id where you wish to add the McAfee AntiVirus. genericUpgrade = &amp;#34;Add / Upgrade Software&amp;#34; upgradeMaintenanceWindow = &amp;#34;9.30.2015 (Wed) 01:00(GMT-0600) - 04:00(GMT-0600)&amp;#34; # The time you wish to upgrade the hardware.</description>
    </item>
    
    <item>
      <title>purchase_anti_virus.py</title>
      <link>https://softlayer.github.io/python/purchase_anti_virus.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/purchase_anti_virus.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Purchase an anti-virus for a server. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Ticket http://sldn.softlayer.com/reference/services/SoftLayer_Ticket/createUpgradeTicket License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; attachmentId = 164203 # The hardware id where you wish to add the McAfee AntiVirus. genericUpgrade = &amp;#34;Add / Upgrade Software&amp;#34; upgradeMaintenanceWindow = &amp;#34;9.30.2015 (Wed) 01:00(GMT-0600) - 04:00(GMT-0600)&amp;#34; # The time you wish to upgrade the hardware.</description>
    </item>
    
    <item>
      <title>purchase_spyware.py</title>
      <link>https://softlayer.github.io/python/purchase_spyware.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/purchase_spyware.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Purchase a spyware for a server. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Ticket http://sldn.softlayer.com/reference/services/SoftLayer_Ticket/createUpgradeTicket License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; attachmentId = 164203 # The hardware id where you wish to add the McAfee AntiVirus. genericUpgrade = &amp;#34;Add / Upgrade Software&amp;#34; upgradeMaintenanceWindow = &amp;#34;9.30.2015 (Wed) 01:00(GMT-0600) - 04:00(GMT-0600)&amp;#34; # The time you wish to upgrade the hardware.</description>
    </item>
    
    <item>
      <title>quick_scale.py</title>
      <link>https://softlayer.github.io/python/quick_scale.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/quick_scale.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Quick scale. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group/scale http://sldn.softlayer.com/reference/datatypes/SoftLayer_Scale_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; scaleGroupId = 28660 scaleAmount = 1 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) scaleGroupService = client[&amp;#39;SoftLayer_Scale_Group&amp;#39;] try: result = scaleGroupService.scale(scaleAmount, id=scaleGroupId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to scale. faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.</description>
    </item>
    
    <item>
      <title>re_deploy_agent.py</title>
      <link>https://softlayer.github.io/python/re_deploy_agent.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/re_deploy_agent.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Re-deploy an agent. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/deployMonitoringAgent http://sldn.softlayer.com/article/object-masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json vsiIp = &amp;#34;169.45.98.148&amp;#34; agentName = &amp;#34;DHCP Response Monitoring Agent&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] agentService = client[&amp;#39;SoftLayer_Monitoring_Agent&amp;#39;] try: objectMask = &amp;#34;mask[monitoringRobot[id, robotStatus[name]], monitoringAgents[statusName, name, id], monitoringServiceEligibilityFlag, datacenter]&amp;#34; vsi = vsiService.findByIpAddress(vsiIp, mask=objectMask) if not vsi: print(&amp;#34;There is no a vsi with the IP address: &amp;#34; + vsiIp) exit(1) agent = {} for agents in vsi[&amp;#39;monitoringAgents&amp;#39;]: if agents[&amp;#39;name&amp;#39;].</description>
    </item>
    
    <item>
      <title>re_deploy_all_agents.py</title>
      <link>https://softlayer.github.io/python/re_deploy_all_agents.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/re_deploy_all_agents.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Re-deploy all agents. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/deployMonitoringAgent http://sldn.softlayer.com/article/object-masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json vsiIp = &amp;#34;169.45.98.148&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] agentService = client[&amp;#39;SoftLayer_Monitoring_Agent&amp;#39;] try: objectMask = &amp;#34;mask[monitoringRobot[id, robotStatus[name]], monitoringAgents[statusName, name, id], monitoringServiceEligibilityFlag, datacenter]&amp;#34; vsi = vsiService.findByIpAddress(vsiIp, mask=objectMask) if not vsi: print(&amp;#34;There is no a vsi with the IP address: &amp;#34; + vsiIp) exit(1) for agent in vsi[&amp;#39;monitoringAgents&amp;#39;]: configuration = agentService.</description>
    </item>
    
    <item>
      <title>reboot_default.py</title>
      <link>https://softlayer.github.io/python/reboot_default.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reboot_default.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Reboot Virtual Guest. It reboots a SoftLayer Virtual Guest Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/rebootDefault License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # From pprint import pprint as pp # For nice debug output from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # If you don&amp;#39;t know your server id you can call getVirtualGuests() in the # SoftLayer_Account API service to get a list of Virtual Guests serverId = 35747489 # Create a connection to API service.</description>
    </item>
    
    <item>
      <title>reload_current_os_configuration.py</title>
      <link>https://softlayer.github.io/python/reload_current_os_configuration.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reload_current_os_configuration.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Reload current operating system configuration. It creates a transaction to perform an OS reload Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/reloadCurrentOperatingSystemConfiguration License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Set the server id that you wish to reload.</description>
    </item>
    
    <item>
      <title>reload_os.py</title>
      <link>https://softlayer.github.io/python/reload_os.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reload_os.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Reload servers from a list of IPs This script looks for a server with a determinate IP address and reloads the Operative System with another one. It makes a single call to the reloadOperatingSystem() method in the SoftLayer_Hardware_Server API service Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/reloadOperatingSystem License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>reload_os_server.py</title>
      <link>https://softlayer.github.io/python/reload_os_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reload_os_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Reload servers from a list of IPs This script looks for a server with a determinate IP address and reload it Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/reloadOperatingSystem License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json def get_price(server, item_name): &amp;#34;&amp;#34;&amp;#34;Get the price for an item. :param SoftLayer_Hardware_Server server: The server to reload. :param string item_name: The item name to get the price. :returns: A Softlayer_Product_Item_Price object. &amp;#34;&amp;#34;&amp;#34; items = server[&amp;#39;billingItem&amp;#39;][&amp;#39;package&amp;#39;][&amp;#39;items&amp;#39;] prices = [] for item in items: if &amp;#39;description&amp;#39; in item: if item[&amp;#39;description&amp;#39;].</description>
    </item>
    
    <item>
      <title>remove_access_from_virtual_guest.py</title>
      <link>https://softlayer.github.io/python/remove_access_from_virtual_guest.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/remove_access_from_virtual_guest.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Remove access to Consistent Performance Storage iSCSI. This script removes the access to Consistent Performance Storage iSCSI from a virtual guest by calling to SoftLayer_Network_Storage::removeAccessFromVirtualGuest method. See below references for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/removeAccessFromVirtualGuest @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: import pprint # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>remove_devices_from_pool.py</title>
      <link>https://softlayer.github.io/python/remove_devices_from_pool.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/remove_devices_from_pool.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Remove servers and VSIs from a bandwidth pool. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/requestVdrContentUpdates License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; listServerIps = [&amp;#34;184.172.45.210&amp;#34;, &amp;#34;108.168.251.167&amp;#34;] listVsiIps = [&amp;#34;169.54.234.102&amp;#34;] poolId = 234419 # Declare the API client client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) hardwareService = client[&amp;#39;SoftLayer_Hardware_Server&amp;#39;] vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] poolService = client[&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;] try: hardwareToAdd = [] hardwareToRemove = [] cloudsToAdd = [] cloudsToRemove = [] for ip in listServerIps: server = hardwareService.</description>
    </item>
    
    <item>
      <title>remove_firewall_rule_from_vsi.py</title>
      <link>https://softlayer.github.io/python/remove_firewall_rule_from_vsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/remove_firewall_rule_from_vsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Remove firewall rule from a VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getFirewallServiceComponent http://sldn.softlayer.com/reference/services/SoftLayer_Network_Firewall_Update_Request/createObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiIp = &amp;#34;169.57.129.196&amp;#34; ruleToDelete = { &amp;#39;action&amp;#39;: &amp;#39;permit&amp;#39;, &amp;#39;protocol&amp;#39;: &amp;#39;tcp&amp;#39;, &amp;#39;sourceIpAddress&amp;#39;: &amp;#39;10.2.2.3&amp;#39;, &amp;#39;destinationIpAddress&amp;#39;: &amp;#39;169.57.129.196&amp;#39;, &amp;#39;destinationPortRangeStart&amp;#39;: 8084, &amp;#39;destinationPortRangeEnd&amp;#39;: 8084, } client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) guestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] firewallService = client[&amp;#39;SoftLayer_Network_Component_Firewall&amp;#39;] firewallUpdateService = client[&amp;#39;SoftLayer_Network_Firewall_Update_Request&amp;#39;] try: vsi = guestService.findByIpAddress(vsiIp) firewall = guestService.</description>
    </item>
    
    <item>
      <title>remove_service.py</title>
      <link>https://softlayer.github.io/python/remove_service.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/remove_service.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Remove a service from a load balancer. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service/deleteObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The service id to delete. serviceId = 367111 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) service = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service&amp;#39;] try: result = service.deleteObject(id=serviceId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to remove the service.</description>
    </item>
    
    <item>
      <title>remove_service_group.py</title>
      <link>https://softlayer.github.io/python/remove_service_group.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/remove_service_group.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Remove a service group from a load balancer. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer/ http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer/deleteObject License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The virtual server which contains the service group to delete. virtualServerId = 193563 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) virtualService = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer&amp;#39;] try: result = virtualService.deleteObject(id=virtualServerId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>remove_subscribers.py</title>
      <link>https://softlayer.github.io/python/remove_subscribers.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/remove_subscribers.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Remove subscribers The scripts remove subscribers from an arbitrary VSI machine. for more information see below: Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMonitoringAgents http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getEligibleAlarmSubscibers http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/removeActiveAlarmSubscriber http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/SoftLayer_User_Customer/getObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent/SoftLayer_User_Customer License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Client configuration USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; hostnames = [&amp;#34;rctest&amp;#34;, &amp;#34;rctest2&amp;#34;] mailsToRemove = [&amp;#34;Nelson.Cabero@jalasoft.com&amp;#34;] client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) try: # Getting all virtual servers on the account vServers = client[&amp;#39;Account&amp;#39;].</description>
    </item>
    
    <item>
      <title>reset_connections_service_group.py</title>
      <link>https://softlayer.github.io/python/reset_connections_service_group.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reset_connections_service_group.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Reset the connections for a service group. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group/kickAllConnections License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; serviceGroupId = 138193 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) serviceGroupService = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group&amp;#39;] try: result = serviceGroupService.kickAllConnections(id=serviceGroupId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to reset the connections. faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>reset_portal_user_password.py</title>
      <link>https://softlayer.github.io/python/reset_portal_user_password.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reset_portal_user_password.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Reset portal user password. This script resets the password of a portal user by SoftLayer_User_Customer::updatePassword method need to define the new password and pass it to updatePassword() method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/updatePassword @License: http://sldn.softlayer.com/article/License @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer &amp;#34;&amp;#34;&amp;#34; Your SoftLayer API username and key. Generate an API key at the SoftLayer Customer Portal &amp;#34;&amp;#34;&amp;#34; API_USERNAME = &amp;#39;set-me&amp;#39; API_KEY = &amp;#39;set-me&amp;#39; userCustomerId = 152188 newPassword = &amp;#39;newPassword123!</description>
    </item>
    
    <item>
      <title>restart_agent.py</title>
      <link>https://softlayer.github.io/python/restart_agent.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/restart_agent.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Restart an agent. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/restartMonitoringAgent http://sldn.softlayer.com/article/object-masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json vsiIp = &amp;#34;169.45.98.148&amp;#34; agentName = &amp;#34;DHCP Response Monitoring Agent&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] agentService = client[&amp;#39;SoftLayer_Monitoring_Agent&amp;#39;] try: objectMask = &amp;#34;mask[monitoringRobot[id, robotStatus[name]], monitoringAgents[statusName, name, id], monitoringServiceEligibilityFlag, datacenter]&amp;#34; vsi = vsiService.findByIpAddress(vsiIp, mask=objectMask) if not vsi: print(&amp;#34;There is no a vsi with the IP address: &amp;#34; + vsiIp) exit(1) agent = {} for agents in vsi[&amp;#39;monitoringAgents&amp;#39;]: if agents[&amp;#39;name&amp;#39;].</description>
    </item>
    
    <item>
      <title>retrieve_metadata.py</title>
      <link>https://softlayer.github.io/python/retrieve_metadata.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/retrieve_metadata.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieves the user data for the VSIs in the account The script gets the user metadata for a VSI in the account we make a simple call the getVirtualGuests() in the SoftLayer_Virtual_Guest API service and we set an object mask to get the information about the user data Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Client configuration Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>route_global_ip.py</title>
      <link>https://softlayer.github.io/python/route_global_ip.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/route_global_ip.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Route Global IP. This function is used to create a new transaction to modify a global IP route Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet_IpAddress_Global/route License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; subnetId = 880579 newEndPointIpAddress = &amp;#39;50.97.102.211&amp;#39; client = SoftLayer.</description>
    </item>
    
    <item>
      <title>route_vlans.py</title>
      <link>https://softlayer.github.io/python/route_vlans.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/route_vlans.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Route the vlans in a gateway device. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/getInsideVlans http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/unbypassVlans http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; gatewayId = 127643 vlanIdsToRemove = [1054267, 822929] client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) gatewayService = client[&amp;#39;SoftLayer_Network_Gateway&amp;#39;] objectFilter = {&amp;#34;insideVlans&amp;#34;: {&amp;#34;networkVlanId&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: vlanIdsToRemove}]}}} try: gatewayVlans = gatewayService.getInsideVlans(id=gatewayId, filter=objectFilter) result = gatewayService.unbypassVlans(gatewayVlans, id=gatewayId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>scale_group_details_active_devices.py</title>
      <link>https://softlayer.github.io/python/scale_group_details_active_devices.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/scale_group_details_active_devices.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the scale group details (devices). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; scaleGroupId = 595465 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] objectMaskMember = &amp;#34;mask[datacenter,scaleMember]&amp;#34; objectFilterMember = {&amp;#34;virtualGuests&amp;#34;: {&amp;#34;scaleMember&amp;#34;: {&amp;#34;scaleGroupId&amp;#34;: {&amp;#34;operation&amp;#34;: scaleGroupId}}}} objectFilterAssets = {&amp;#34;virtualGuests&amp;#34;: {&amp;#34;scaleAssets&amp;#34;: {&amp;#34;scaleGroupId&amp;#34;: {&amp;#34;operation&amp;#34;: scaleGroupId}}}} objectMaskAssets = &amp;#34;mask[datacenter,scaleAssets]&amp;#34; try: items = accountService.getVirtualGuests(mask=objectMaskMember, filter=objectFilterMember) members = [] for item in items: member = {} member[&amp;#39;deviceName&amp;#39;] = item[&amp;#39;fullyQualifiedDomainName&amp;#39;] member[&amp;#39;location&amp;#39;] = item[&amp;#39;datacenter&amp;#39;][&amp;#39;longName&amp;#39;] member[&amp;#39;publicIp&amp;#39;] = item[&amp;#39;primaryIpAddress&amp;#39;] member[&amp;#39;privateIp&amp;#39;] = item[&amp;#39;primaryBackendIpAddress&amp;#39;] member[&amp;#39;startDate&amp;#39;] = item[&amp;#39;createDate&amp;#39;] members.</description>
    </item>
    
    <item>
      <title>scale_group_details_configuration.py</title>
      <link>https://softlayer.github.io/python/scale_group_details_configuration.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/scale_group_details_configuration.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the scale group details (configuration). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group/getObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Scale_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; scaleGroupId = 595465 # Create a SoftLayer API client object client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) scaleGroupService = client[&amp;#39;SoftLayer_Scale_Group&amp;#39;] objectMask = &amp;#34;mask[id, name, status[name, keyName], regionalGroup[id, name, description], suspendedFlag, terminationPolicy, cooldown, regionalGroupId, minimumMemberCount, maximumMemberCount, balancedTerminationFlag, networkVlans[ id, networkVlan[ id, name, vlanNumber, networkSpace, primaryRouter[id,hostname,datacenter[name,longName]],localDiskStorageCapabilityFlag,sanStorageCapabilityFlag]],virtualGuestMemberTemplate[hostname,domain,fullyQualifiedDomainName,startCpus,maxMemory,hourlyBillingFlag,localDiskFlag,operatingSystem,datacenter,privateNetworkOnlyFlag,networkComponents.</description>
    </item>
    
    <item>
      <title>scale_group_details_logs.py</title>
      <link>https://softlayer.github.io/python/scale_group_details_logs.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/scale_group_details_logs.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the scale group details (logs). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group/getLogs http://sldn.softlayer.com/reference/datatypes/SoftLayer_Scale_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; scaleGroupId = 595465 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) scaleGroupService = client[&amp;#39;SoftLayer_Scale_Group&amp;#39;] try: logs = scaleGroupService.getLogs(id=scaleGroupId) print(json.dumps(logs[0][&amp;#39;scaleGroup&amp;#39;][&amp;#39;logs&amp;#39;], sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the scale group details. faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.</description>
    </item>
    
    <item>
      <title>search_tag.py</title>
      <link>https://softlayer.github.io/python/search_tag.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/search_tag.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Search VSI by tag The script retrieve all the VSIs which contain an arbitrary list of tags Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # Example to search tags for a VSI import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # List of tags to look for tags = [&amp;#34;mytag1&amp;#34;, &amp;#34;tag2&amp;#34;] # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>set_api_ip_address_restriction.py</title>
      <link>https://softlayer.github.io/python/set_api_ip_address_restriction.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_api_ip_address_restriction.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set API IP address restriction. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/getApiAuthenticationKeys http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_ApiAuthentication/editObject http://sldn.softlayer.com/reference/datypes/SoftLayer_User_Customer_ApiAuthentication/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;set me&amp;#34; ip = &amp;#34;10.10.10.10&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] keyService = client[&amp;#39;SoftLayer_User_Customer_ApiAuthentication&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) keys = userService.getApiAuthenticationKeys(id=users[0][&amp;#39;id&amp;#39;]) keys[0][&amp;#34;ipAddressRestriction&amp;#34;] = ip result = keyService.</description>
    </item>
    
    <item>
      <title>set_expire_password_in.py</title>
      <link>https://softlayer.github.io/python/set_expire_password_in.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_expire_password_in.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set expire password in. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) # Set the value to 0 for never users[0][&amp;#39;secondaryPasswordTimeoutDays&amp;#39;] = 90 result = userService.editObject(users[0], id=users[0][&amp;#39;id&amp;#39;]) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>set_restrict_access_to_ip.py</title>
      <link>https://softlayer.github.io/python/set_restrict_access_to_ip.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_restrict_access_to_ip.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set restrict access to IP address. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; userName = &amp;#34;myusernaetest0235&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] userService = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] objectFilterUser = {&amp;#34;users&amp;#34;: {&amp;#34;username&amp;#34;: {&amp;#34;operation&amp;#34;: userName}}} try: users = accountService.getUsers(filter=objectFilterUser) # Set the value to &amp;#34;&amp;#34; to delete the previous configured IP address. users[0][&amp;#39;ipAddressRestriction&amp;#39;] = &amp;#34;10.</description>
    </item>
    
    <item>
      <title>set_tags.py</title>
      <link>https://softlayer.github.io/python/set_tags.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_tags.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set tags for a VSI The script sets the tags for an arbitrary VSI, it makes a single call to the SoftLayer_Virtual_Guest::setTags method For more information please see below. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/setTags License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>set_tags_virtual_server.py</title>
      <link>https://softlayer.github.io/python/set_tags_virtual_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_tags_virtual_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set tags to a virtual server The script set the tags for an arbitrary VSI it makes a single call to the SoftLayer_Virtual_Guest::setTags for more information see below. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/setTags License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # the virtual guest ID where you wish to add the tags virtualGuestID = 35747489 # the tags you wish to add tags = &amp;#34;tag1,tag2,tag3&amp;#34; client = SoftLayer.</description>
    </item>
    
    <item>
      <title>set_user_data_bare_metal.py</title>
      <link>https://softlayer.github.io/python/set_user_data_bare_metal.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_user_data_bare_metal.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set user data for a Bare Metal Server. The script makes a single call to the SoftLayer_Hardware_Server::setUserMetadata method in order to set the user data in the bare metal server. For more information see below. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/setUserMetadata License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set-me&amp;#39; # The id of the Bare Metal server you wish to set the user data.</description>
    </item>
    
    <item>
      <title>set_user_metadata.py</title>
      <link>https://softlayer.github.io/python/set_user_metadata.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_user_metadata.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Set the user data for a VSI. The script sets the user metadata for a VSI we make a simple call the setUserMetadata() in the SoftLayer_Virtual_Guest API service Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/setUserMetadata License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer &amp;#34;&amp;#34;&amp;#34; Client configuration Your SoftLayer API username and key. &amp;#34;&amp;#34;&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The user data you wish to set userData = [&amp;#34;this is my user data 2&amp;#34;] # The id of the VSI where you want to set the user data virtualGuestId = 7370502 # Declaring the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>share_image_template.py</title>
      <link>https://softlayer.github.io/python/share_image_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/share_image_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Share image template. The script shares an image template to another account, it makes a single call to SoftLayer_Virtual_Guest_Block_Device_Template_Group::permitSharingAccess method. For more information please see below. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/permitSharingAccess http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; The image template which you wish to share To get the list of images templates in your account call the Softlayer_Account::getPrivateBlockDeviceTemplateGroups method &amp;#34;&amp;#34;&amp;#34; imageTemplateId = 1796623 # the account you wish to share the image template accountToShare = 207819 # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>shutdown_port_disactive_port.py</title>
      <link>https://softlayer.github.io/python/shutdown_port_disactive_port.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/shutdown_port_disactive_port.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Sets the networks speed for a hardware devices This script makes a single call to the setPublicNetworkInterfaceSpeed() method to change the speed to public network or call the setPrivateNetworkInterfaceSpeed method to change the speed to private network. See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/setPublicNetworkInterfaceSpeed http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/setPrivateNetworkInterfaceSpeed License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.</description>
    </item>
    
    <item>
      <title>shutdown_private_port.py</title>
      <link>https://softlayer.github.io/python/shutdown_private_port.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/shutdown_private_port.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Shutdown Private Port. It shuts down the private network port. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/shutdownPrivatePort License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Set the server id to shut down the network port.</description>
    </item>
    
    <item>
      <title>shutdown_public_port.py</title>
      <link>https://softlayer.github.io/python/shutdown_public_port.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/shutdown_public_port.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Shutdown Public Port. It shuts down the public network port. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/shutdownPublicPort License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; # So we can talk to the SoftLayer API: import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; # Set the server id to shut down the network port.</description>
    </item>
    
    <item>
      <title>simplifiedOrder.py</title>
      <link>https://softlayer.github.io/python/simplifiedOrder.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/simplifiedOrder.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a virtual server in a dedicated host. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject http://developer.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getCreateObjectOptions License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) virtualGuestService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] # The order template for the new virtual guest # See getCreateObjectOptions for available options order = { &amp;#34;hostname&amp;#34;: &amp;#34;dedisim2&amp;#34;, &amp;#34;domain&amp;#34;: &amp;#34;example.com&amp;#34;, &amp;#34;blockDevices&amp;#34;: [ { &amp;#34;device&amp;#34;: &amp;#34;0&amp;#34;, &amp;#34;diskImage&amp;#34;: { &amp;#34;capacity&amp;#34;: 25 } } ], &amp;#34;localDiskFlag&amp;#34;: True, &amp;#34;datacenter&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;dal10&amp;#34; }, &amp;#34;startCpus&amp;#34;: 4, &amp;#34;dedicatedHost&amp;#34;: { &amp;#34;id&amp;#34;: 9301 }, &amp;#34;maxMemory&amp;#34;: 8192, &amp;#34;operatingSystemReferenceCode&amp;#34;: &amp;#34;UBUNTU_LATEST&amp;#34; } try: response = virtualGuestService.</description>
    </item>
    
    <item>
      <title>status_local.py</title>
      <link>https://softlayer.github.io/python/status_local.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/status_local.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get network status local The script displays the same information as the https://control.softlayer.com/network/status/local page. Important manual pages https://sldn.softlayer.com/reference/services/SoftLayer_Account/ https://sldn.softlayer.com/reference/services/SoftLayer_Account/getObject https://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json def getRacks(networkHardware, routerStatus): &amp;#34;&amp;#34;&amp;#34;Retrieves the racks information. :param SoftLayer_Hardware networkHardware: A network hardware downstream. :param SoftLayer_Hardware routerStatus: The routers in the account which contains the network incidents. &amp;#34;&amp;#34;&amp;#34; racks = [] if &amp;#39;downstreamNetworkHardware&amp;#39; in networkHardware: for network in networkHardware[&amp;#39;downstreamNetworkHardware&amp;#39;]: rack = {} if &amp;#39;cs&amp;#39; in network[&amp;#39;hostname&amp;#39;]: rack[&amp;#39;name&amp;#39;] = network[&amp;#39;hostname&amp;#39;] + &amp;#39;.</description>
    </item>
    
    <item>
      <title>suspend_scale_group.py</title>
      <link>https://softlayer.github.io/python/suspend_scale_group.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/suspend_scale_group.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Suspend a scale group. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group http://sldn.softlayer.com/reference/services/SoftLayer_Scale_Group/editObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Scale_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; scaleGroupId = 28660 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) scaleGroupService = client[&amp;#39;SoftLayer_Scale_Group&amp;#39;] template = { &amp;#34;id&amp;#34;: scaleGroupId, &amp;#34;suspendedFlag&amp;#34;: True } try: result = scaleGroupService.editObject(template, id=scaleGroupId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to suspend the scale group. faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>switch_port_stats.py</title>
      <link>https://softlayer.github.io/python/switch_port_stats.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/switch_port_stats.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Retrieve a list of switch port statistics for a server&amp;#39;s network interfaces. This script makes a single call to the getPortStatistics() method in the SoftLayer_Network_Component API service for each of a server&amp;#39;s network components to query port statistics for that interface from SoftLayer&amp;#39;s switches. Port statistics are modeled by the SoftLayer__Container_Network_Port_Statistic data type See below for more details. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_NetworkComponent/getPortStatistics http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_Port_Statistic License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.</description>
    </item>
    
    <item>
      <title>unplanned_events.py</title>
      <link>https://softlayer.github.io/python/unplanned_events.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/unplanned_events.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the unplanned events. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Notification_Occurrence_Event http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event/getAllObjects http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API import json import datetime USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Gets the current date. now = datetime.datetime.now() now = now.strftime(&amp;#34;%m/%d/%Y&amp;#34;) # Declares the API services. client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) notificationEventService = client[&amp;#39;SoftLayer_Notification_Occurrence_Event&amp;#39;] accountService = client[&amp;#39;SoftLayer_Account&amp;#39;] # Declares a object mask to get more information about the events.</description>
    </item>
    
    <item>
      <title>unroute_global_ip.py</title>
      <link>https://softlayer.github.io/python/unroute_global_ip.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/unroute_global_ip.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Route Global IP. This function is used to create a new transaction to unroute a global IP address Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Subnet_IpAddress_Global/route License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; subnetId = 880579 client = SoftLayer.Client( username=API_USERNAME, api_key=API_KEY ) try: # Get the Global IP record globalIpRecord = client[&amp;#39;SoftLayer_Network_Subnet&amp;#39;].</description>
    </item>
    
    <item>
      <title>unshare_image_template.py</title>
      <link>https://softlayer.github.io/python/unshare_image_template.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/unshare_image_template.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Un-share an image template The script un-shares an image template it makes a call to SoftLayer_Virtual_Guest_Block_Device_Template_Group::denySharingAccess method, For more information please see below: Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/denySharingAccess http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; The image template which you wish to unshare To get the list of images templates in your account call the Softlayer_Account::getPrivateBlockDeviceTemplateGroups method &amp;#34;&amp;#34;&amp;#34; imageTemplateId = 1796405 # The account you wish to unshare the image template accountToUnshare = 207819 # Declare the API client client = SoftLayer.</description>
    </item>
    
    <item>
      <title>update_anitvirus_spyware_policy.py</title>
      <link>https://softlayer.github.io/python/update_anitvirus_spyware_policy.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/update_anitvirus_spyware_policy.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Updates the policy for a anti-virus or spyware. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_AntivirusSpyware http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_AntivirusSpyware/updateAntivirusSpywarePolicy License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; antivirusSpywareId = 2665230 # The valid values are: # Minimal, Relaxed, Default, High, Ultimate policy = &amp;#34;High&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) antivirusSpywareService = client[&amp;#39;SoftLayer_Software_Component_AntivirusSpyware&amp;#39;] try: response = antivirusSpywareService.updateAntivirusSpywarePolicy(id=antivirusSpywareId) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    
    <item>
      <title>update_firmware.py</title>
      <link>https://softlayer.github.io/python/update_firmware.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/update_firmware.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Update the firmware in a BareMetal server The script makes a single call to SoftLayer_Hardware_Server::createFirmwareUpdateTransaction method to update the firmware in a bare metal server. It will bring your server offline for approximately 20 minutes while the updates are in progress. See below for more details Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/createFirmwareUpdateTransaction License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API from pprint import pprint as pp # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>update_hostids.py</title>
      <link>https://softlayer.github.io/python/update_hostids.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/update_hostids.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Update Host IDS policy. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_HostIps http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_HostIps/updateHipsPolicies License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The hostidsid you wish to update the policy. hostidsId = 6114923 # Values # __EPO_ENFORCE_YES__ # __EPO_ENFORCE_NO__ newEnforcementPolicy = &amp;#34;__EPO_ENFORCE_NO__&amp;#34; # Values # McAfee Default # My Default # On_120 # On [McAfee Default] # Adaptive_10 # Adaptive_120 # Adaptive_UR # On_10 # On_UR # Off newIpsMode = &amp;#34;On_120&amp;#34; # Values # Basic Protection [McAfee Default] # Enhanced Protection # Maximum Protection # Prepare for Enhanced Protection # Prepare for Maximum Protection # Warning # My Default newIpsProtection = &amp;#34;Basic Protection [McAfee Default]&amp;#34; # Values # McAfee Default # My Default # Off [McAfee Default] # On # Adaptive # Learn # Custom_FWONSpecial_DONOTUSE newFirewallMode = &amp;#34;Off [McAfee Default]&amp;#34; # Values # McAfee Default # Typical Corporate Environment # SLDefault # No_Rules # My Default newFirewallRuleset = &amp;#34;SLDefault&amp;#34; client = SoftLayer.</description>
    </item>
    
    <item>
      <title>update_subscriber.py</title>
      <link>https://softlayer.github.io/python/update_subscriber.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/update_subscriber.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Update subscribers The script updates a subscription to an unplanned incident Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/updateSubscriberDeliveryMethod http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The customer ID you wish add the subscription customerId = 205830 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) userClient = client[&amp;#39;SoftLayer_User_Customer&amp;#39;] deliveryMethodKeyNames = [ &amp;#34;EMAIL&amp;#34; ] # The status 0 = inactive; 1= active status = 0 try: templates = userClient.</description>
    </item>
    
    <item>
      <title>upgrade_bare_metal_server.py</title>
      <link>https://softlayer.github.io/python/upgrade_bare_metal_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/upgrade_bare_metal_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Upgrades a Bare Metal Server The script upgrades a Bare Metal server, it changes port speed to 1GB for more information see below: Important manual pages http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Property http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Upgrade http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The id of the hardware you wish upgrade hardwareServerId = 166391 # Build a skeleton SoftLayer_Hardware object to model the id hardwareServer = [ { &amp;#39;id&amp;#39;: hardwareServerId } ] &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Product_Item_Price objects Every item in SoftLayer&amp;#39;s product catalog is assigned an id.</description>
    </item>
    
    <item>
      <title>upgrade_speed_limit.py</title>
      <link>https://softlayer.github.io/python/upgrade_speed_limit.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/upgrade_speed_limit.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Upgrade the connection limit for a load balancer Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress/upgradeConnectionLimit License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; loadBalancerId = 79945 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) loadBalancerService = client[&amp;#39;SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress&amp;#39;] try: result = loadBalancerService.upgradeConnectionLimit(id=loadBalancerId) print(json.dumps(result, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to upgrade . faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>upgrade_virtual_guest.py</title>
      <link>https://softlayer.github.io/python/upgrade_virtual_guest.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/upgrade_virtual_guest.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Upgrade a VSI. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/ http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer # For nice debug output: from pprint import pprint as pp # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set me&amp;#39; # Generate one at https://control.softlayer.com/account/users API_KEY = &amp;#39;set me&amp;#39; virtualGuestId = 35747489 orderContainer = {} orderContainer[&amp;#39;complexType&amp;#39;] = &amp;#39;SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade&amp;#39; orderContainer[&amp;#39;virtualGuests&amp;#39;] = [{&amp;#39;id&amp;#39;: virtualGuestId}] orderContainer[&amp;#39;prices&amp;#39;] = [ # RAM Upgrades, uncomment the desired one {&amp;#39;id&amp;#39;: 1644} # 1 GB RAM # {&amp;#39;id&amp;#39;: 1645 } # 2 GB RAM # {&amp;#39;id&amp;#39;: 1646 } # 4 GB RAM # {&amp;#39;id&amp;#39;: 2238 } # 6 GB RAM # {&amp;#39;id&amp;#39;: 1647 } # 8 GB RAM # {&amp;#39;id&amp;#39;: 2243 } # 12 GB RAM # {&amp;#39;id&amp;#39;: 1927 } # 16 GB RAM # {&amp;#39;id&amp;#39;: 21275 } # 32 GB RAM # {&amp;#39;id&amp;#39;: 22422 } # 48 GB RAM # {&amp;#39;id&amp;#39;: 37042 } # 64 GB RAM # CPU Upgrades, uncomment the desired one # {&amp;#39;id&amp;#39;: 1962 } # Private 1 x 2.</description>
    </item>
    
    <item>
      <title>upgrade_virtual_server.py</title>
      <link>https://softlayer.github.io/python/upgrade_virtual_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/upgrade_virtual_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Upgrades the ram of a VSI The script upgrades a VSI, it upgrades the ram from 1GB to 2GB for more information see below: Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Category http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The id of the virtual guest you wish upgrade virtualGuestId = 4949592 # Build a skeleton SoftLayer_Virtual_Guest object to model the id virtualGuest = [ { &amp;#39;id&amp;#39;: virtualGuestId } ] &amp;#34;&amp;#34;&amp;#34; Build a skeleton SoftLayer_Product_Item_Price objects Every item in SoftLayer&amp;#39;s product catalog is assigned an id.</description>
    </item>
    
    <item>
      <title>upgrade_virtual_server_disks.py</title>
      <link>https://softlayer.github.io/python/upgrade_virtual_server_disks.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/upgrade_virtual_server_disks.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Upgrades a VSI The script upgrades a VSI, it changes the size of a disk and add a new disk to the VSI for more information see below: Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Category http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; &amp;#34;&amp;#34;&amp;#34; The id of the virtual guest you wish upgrade you can get the virtual guest ID by calling the SoftLayer_Account::getVirtualGuests method for more reference see: http://sldn.</description>
    </item>
    
    <item>
      <title>view_active_alarms.py</title>
      <link>https://softlayer.github.io/python/view_active_alarms.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/view_active_alarms.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; View active alarms of an advanced monitoring. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMonitoringActiveAlarms License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json vsiIp = &amp;#34;169.45.98.148&amp;#34; startDate = &amp;#34;2000-01-01&amp;#34; endDate = &amp;#34;2016-12-22&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] try: vsi = vsiService.findByIpAddress(vsiIp) if not vsi: print(&amp;#34;There is no a vsi with the IP address: &amp;#34; + vsiIp) exit(1) result = vsiService.</description>
    </item>
    
    <item>
      <title>view_agent_report_cpu.py</title>
      <link>https://softlayer.github.io/python/view_agent_report_cpu.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/view_agent_report_cpu.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; View the reports for the &amp;#34;CPU&amp;#34; section from the &amp;#39;Cpu, Disk, and Memory Monitoring Agent&amp;#39; monitor agent. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getGraphData http://sldn.softlayer.com/reference/services/Monitoring_Agent_Configuration_Value/getMetricDataType License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The IP address of the server or VSI to configure. ipAddres = &amp;#34;5.153.59.197&amp;#34; startDate = &amp;#39;2016-01-02&amp;#39; endDate = &amp;#39;2016-01-08&amp;#39; # Set &amp;#34;True&amp;#34; the reports you wish to see. reports = { &amp;#39;Graph System CPU Usage&amp;#39;: &amp;#34;False&amp;#34;, &amp;#39;Graph Total CPU Usage&amp;#39;: &amp;#34;False&amp;#34;, &amp;#39;Graph User CPU Usage&amp;#39;: &amp;#34;False&amp;#34;, &amp;#39;Graph I/O Wait CPU Usage&amp;#39;: &amp;#34;True&amp;#34;, } # The agent&amp;#39;s name we wish to see the reports.</description>
    </item>
    
    <item>
      <title>view_agent_report_disk_profile.py</title>
      <link>https://softlayer.github.io/python/view_agent_report_disk_profile.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/view_agent_report_disk_profile.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; View the reports for the &amp;#34;Disk Profile&amp;#34; section from the &amp;#39;Cpu, Disk, and Memory Monitoring Agent&amp;#39; monitor agent. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getGraphData http://sldn.softlayer.com/reference/services/Monitoring_Agent_Configuration_Value/getMetricDataType License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The IP address of the server or VSI to configure. ipAddres = &amp;#34;5.153.59.197&amp;#34; startDate = &amp;#39;2016-01-02&amp;#39; endDate = &amp;#39;2016-01-08&amp;#39; # Set &amp;#34;True&amp;#34; the reports you wish to see. reports = { &amp;#39;Graph Disk Usage&amp;#39;: &amp;#34;TRUE&amp;#34;, &amp;#39;Graph Disk Usage as Percentage&amp;#39;: &amp;#34;False&amp;#34; } # The profile you wish to see the reports.</description>
    </item>
    
    <item>
      <title>view_agent_report_memory.py</title>
      <link>https://softlayer.github.io/python/view_agent_report_memory.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/view_agent_report_memory.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; View the reports for the &amp;#34;Memory&amp;#34; section from the &amp;#39;Cpu, Disk, and Memory Monitoring Agent&amp;#39; monitor agent. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getGraphData http://sldn.softlayer.com/reference/services/Monitoring_Agent_Configuration_Value/getMetricDataType License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The IP address of the server or VSI to configure. ipAddres = &amp;#34;5.153.59.197&amp;#34; startDate = &amp;#39;2016-01-02&amp;#39; endDate = &amp;#39;2016-01-08&amp;#39; # Set &amp;#34;True&amp;#34; the reports you wish to see. reports = { &amp;#34;Graph Memory Usage&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Graph Memory Usage as Percentage&amp;#34;: &amp;#34;TRUE&amp;#34;, &amp;#34;Graph Physical Memory Usage&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Graph Physical Memory Usage as Percentage&amp;#34;: &amp;#34;TRUE&amp;#34;, &amp;#34;Graph Swap Memory Usage&amp;#34;: &amp;#34;FALSE&amp;#34;, &amp;#34;Graph Swap Memory Usage as Percentage&amp;#34;: &amp;#34;TRUE&amp;#34;, &amp;#34;Graph System Paging in Kb/s&amp;#34;: &amp;#34;TRUE&amp;#34;, &amp;#34;Graph System Paging in Pg/s&amp;#34;: &amp;#34;FALSE&amp;#34;, } # The agent&amp;#39;s name we wish to see the reports.</description>
    </item>
    
    <item>
      <title>view_closed_alarm.py</title>
      <link>https://softlayer.github.io/python/view_closed_alarm.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/view_closed_alarm.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; View closed alarms of an advanced monitoring. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMonitoringClosedAlarms License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json vsiIp = &amp;#34;169.45.98.148&amp;#34; startDate = &amp;#34;2000-01-01&amp;#34; endDate = &amp;#34;2016-12-22&amp;#34; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] try: vsi = vsiService.findByIpAddress(vsiIp) if not vsi: print(&amp;#34;There is no a vsi with the IP address: &amp;#34; + vsiIp) exit(1) result = vsiService.</description>
    </item>
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/python/createvsiwithsecgroup/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createvsiwithsecgroup/</guid>
      <description>from __future__ import print_function import SoftLayer from SoftLayer.managers.vs import VSManager def create_vsi(): #Create a client to the SoftLayer_Account API service. #Note: currently set without the user ID and API key since #it will by default use the values set in the CLI #to use other values use SoftLayer.Client(sl_username, sl_api_key) client = SoftLayer.Client() vsi_mgr = VSManager(client) # common values datacenter = &amp;#39;wdc07&amp;#39; domain = &amp;#39;cde.services&amp;#39; os_code = &amp;#39;UBUNTU_LATEST_64&amp;#39; local_disk = True hourly = True dedicated = False nic_speed = 1000 disks = [100] private = False ssh_keys = [972047] public_security_groups = [43507] private_security_groups = [43511] # server properties hostname = &amp;#39;sgvsi&amp;#39; cpus = 2 memory = 2048 result = vsi_mgr.</description>
    </item>
    
    <item>
      <title>Add, list, and remove security group rules</title>
      <link>https://softlayer.github.io/python/securitygroup_rule_ops/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/securitygroup_rule_ops/</guid>
      <description>Adding a rule to a security group import SoftLayer # For nice debug output from pprint import pprint as pp # Create a client for use with the NetworkManager client = SoftLayer.Client() net_mgr = SoftLayer.NetworkManager(client) sg_id = 123045 direction = &amp;#39;ingress&amp;#39; ethertype = &amp;#39;IPv4&amp;#39; remote_ip = &amp;#39;169.148.34.0/24&amp;#39; protocol = &amp;#39;tcp&amp;#39; port_min = 22 port_max = 22 try: result = net_mgr.add_securitygroup_rule(sg_id, direction=direction, ethertype=ethertype, remote_ip=remote_ip, protocol=protocol, port_min=port_min, port_max=port_max) pp(result) except SoftLayer.SoftLayerAPIError as e: pp(&amp;#39;Failed.</description>
    </item>
    
    <item>
      <title>Create, list, get, and delete security groups</title>
      <link>https://softlayer.github.io/python/securitygroup_ops/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/securitygroup_ops/</guid>
      <description>Creating a security group import SoftLayer # For nice debug output from pprint import pprint as pp # Create a client for use with the NetworkManager client = SoftLayer.Client() net_mgr = SoftLayer.NetworkManager(client) name = &amp;#39;pythonCreatedGroupExample&amp;#39; description = &amp;#39;Security Group created via python&amp;#39; try: result = net_mgr.create_securitygroup(name=name, description=description) pp(result) except SoftLayer.SoftLayerAPIError as e: pp(&amp;#39;Failed... Unable to create a new security group: faultCode=%s, faultString=%s&amp;#39; % (e.faultCode, e.faultString)) Deleting a security group import SoftLayer # For nice debug output from pprint import pprint as pp # Create a client for use with the NetworkManager client = SoftLayer.</description>
    </item>
    
    <item>
      <title>VSIs and security groups</title>
      <link>https://softlayer.github.io/python/securitygroup_vsis/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/securitygroup_vsis/</guid>
      <description>Creating a VSI with security groups import SoftLayer # For nice debug output from pprint import pprint as pp # Create a client for use with the VSManager client = SoftLayer.Client() vs_mgr = SoftLayer.VSManager(client) http_sg_id = 384757 ssh_sg_id = 576973 # Allow only HTTP on the public interface of the VSI public_groups = [http_sg_id] # Allow HTTP and SSH on the private interface of the VSI private_groups = [http_sg_id, ssh_sg_id] # If we didn&amp;#39;t want to set any security groups on an interface # (which allows all traffic), we don&amp;#39;t set the associated # creation kwarg create_kwargs = { &amp;#39;hostname&amp;#39;: &amp;#39;sg-vsi&amp;#39;, &amp;#39;domain&amp;#39;: &amp;#39;mycompany.</description>
    </item>
    
    <item>
      <title>Advanced Bare Metal Server Ordering</title>
      <link>https://softlayer.github.io/python/orderBareMetal/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderBareMetal/</guid>
      <description>Example of how to build an order for a bare metal server.
 Find the package that you want to order. listServerPackages() will filter out all that are not bare metal servers Use getServerPrices() to find the item keyNames you want to include in your order. These price IDs can be included prices array directly, but I&amp;rsquo;ve included gatherPriceIds() to match up KeyNames to build a list of price ids.</description>
    </item>
    
    <item>
      <title>Object Storage Uploader</title>
      <link>https://softlayer.github.io/python/swiftUploader/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/swiftUploader/</guid>
      <description>Overview We’ve recently added the option to import customer-supplied Virtual Hard Disks (VHDs) to our object storage offering. This is a great option for our customers who may have special virtual machines that they have spent hours perfecting. Since learning to import these images can pose a slight challenge, especially for those unfamiliar with object storage (OpenStack Swift), I wrote this blog to share scripts that will streamline the process.</description>
    </item>
    
    <item>
      <title>Get Dedicated Host Allocation</title>
      <link>https://softlayer.github.io/python/getDediHostAllocation/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/getDediHostAllocation/</guid>
      <description>The first thing you need to get is a list of the Dedicated Hosts on your account. To list the Dedicated Hosts on your account you can use the following code:
import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() dedicatedHosts = client[&amp;#39;SoftLayer_Account&amp;#39;].getDedicatedHosts() pp(dedicatedHosts) Once you have the Dedicated Host ID you can use the following code to retrieve the resource allocations on the host.
&amp;#34;&amp;#34;&amp;#34; @author Ryan TIffany &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp dedicatedHostId = 10501 client = SoftLayer.</description>
    </item>
    
    <item>
      <title>Get Dedicated Host Guests</title>
      <link>https://softlayer.github.io/python/getDedicatedHostGuests/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/getDedicatedHostGuests/</guid>
      <description>The first thing you need to get is a list of the Dedicated Hosts on your account. To list the Dedicated Hosts on your account you can use the following code:
import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() dedicatedHosts = client[&amp;#39;SoftLayer_Account&amp;#39;].getDedicatedHosts() pp(dedicatedHosts) Once you have the Dedicated Host ID you can use the following code to retrieve the Virtual Guests on the host.
&amp;#34;&amp;#34;&amp;#34; @service SoftLayer_Virtual_DedicatedHost @author Ryan TIffany &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp dhId = 10001 client = SoftLayer.</description>
    </item>
    
    <item>
      <title>Migrate a VSI between dedicated hosts</title>
      <link>https://softlayer.github.io/python/migrateDedicatedInstance/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/migrateDedicatedInstance/</guid>
      <description>The first thing you need to get is a list of the Dedicated Hosts on your account. To list the Dedicated Hosts on your account you can use the following code:
import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() dedicatedHosts = client[&amp;#39;SoftLayer_Account&amp;#39;].getDedicatedHosts() pp(dedicatedHosts) Once you have the Dedicated Host ID you want to migrate the Virtual Guest to you can use this script to kick of an immediate migration of the Virtual Guest.</description>
    </item>
    
    <item>
      <title>Show user accounts with and without two-factor enabled</title>
      <link>https://softlayer.github.io/python/externalBindingUsers/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/externalBindingUsers/</guid>
      <description>To get a list of users with Two-Factor authentication enabled.
&amp;#34;&amp;#34;&amp;#34; @author Ryan TIffany &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() mask = mask&amp;#34;[id,username,firstName,lastName,externalBindingCount,externalBindings]&amp;#34; theFilter = { &amp;#39;users&amp;#39;: { &amp;#39;externalBindings&amp;#39;:{ &amp;#39;active&amp;#39;:{ &amp;#39;operation&amp;#39;:&amp;#39;1&amp;#39; }}} } getUsers = client[&amp;#39;SoftLayer_Account&amp;#39;].getUsers(filter=theFilter, mask=mask) pp(getUsers) To get a list of users without Two-Factor authentication enabled.
&amp;#34;&amp;#34;&amp;#34; @author Ryan TIffany &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() mask = mask&amp;#34;[id,username,firstName,lastName,externalBindingCount,externalBindings]&amp;#34; theFilter = { &amp;#39;users&amp;#39;: { &amp;#39;externalBindings&amp;#39;:{ &amp;#39;active&amp;#39;:{ &amp;#39;operation&amp;#39;:&amp;#39;0&amp;#39; }}} } getUsers = client[&amp;#39;SoftLayer_Account&amp;#39;].</description>
    </item>
    
    <item>
      <title>Router Model Map</title>
      <link>https://softlayer.github.io/python/networkMapper/</link>
      <pubDate>Fri, 23 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/networkMapper/</guid>
      <description>Prints out model numbers of networking equipment that is on route to your servers. Could be useful if merged with https://softlayer.github.io/python/networktopology/
&amp;#34;&amp;#34;&amp;#34; @author Christopher Gallo Finds the model number of all networking equipment that is on the way to servers on the account. &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp class networkMap(): def __init__(self): self.client = SoftLayer.Client() def main(self): &amp;#34;&amp;#34;&amp;#34; Goes through each server, and prints out what networking hardware is upstream &amp;#34;&amp;#34;&amp;#34; mask = &amp;#34;mask[id, fullyQualifiedDomainName]&amp;#34; servers = self.</description>
    </item>
    
    <item>
      <title>Provision Times</title>
      <link>https://softlayer.github.io/python/provisionTimes/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/provisionTimes/</guid>
      <description>Goes through orders and prints out each transaction that provisioned a server or virtual server. Calculates provision time from the time the order was placed, till the time the transaction went to COMPLETE.
Order: 15866609 - 2017-06-09T10:42:04-06:00 FQDN, Status, transaction id, elapsed time sgtest.cdetest.info, COMPLETE, 57090965, 383.0 Order: 15861187 - 2017-06-09T09:07:49-06:00 FQDN, Status, transaction id, elapsed time jumpbox.cdetest.info, COMPLETE, 57080823, 774.0 Order: 15860993 - 2017-06-09T08:53:22-06:00 FQDN, Status, transaction id, elapsed time Order: 15853891 - 2017-06-09T04:47:32-06:00 FQDN, Status, transaction id, elapsed time d1.</description>
    </item>
    
    <item>
      <title>Get bills by user</title>
      <link>https://softlayer.github.io/python/billsByUser/</link>
      <pubDate>Fri, 09 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/billsByUser/</guid>
      <description>This is a rough script, it doesn&amp;rsquo;t include some of the tax fees and some of the other one off fee fields that you will find in http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item
Example Output for billsByUser()
chris-cde - 840.0 123.cdetesting.com : Dual Intel Xeon E5-2620 v3 (12 Cores, 2.40 GHz) $345.0 234.cdetesting.com : Dual Intel Xeon E5-2620 v3 (12 Cores, 2.40 GHz) $495.0 chris.testing.com : 2 x 2.0 GHz Cores $0.0 4 Portable Private IP Addresses - $0.</description>
    </item>
    
    <item>
      <title>Tag Vlans</title>
      <link>https://softlayer.github.io/python/vlanTagging/</link>
      <pubDate>Fri, 09 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/vlanTagging/</guid>
      <description>A rough examples of how to add vlans to servers
&amp;#34;&amp;#34;&amp;#34; @author Christopher Gallo @sldn{SoftLayer_Network_Component} @sldn{SoftLayer_Network_Component,getNetworkVlanTrunks} @manager{hardware} Goes through a list of servers, add the specified vlan to each one &amp;#34;&amp;#34;&amp;#34; import SoftLayer class testVlanTag(): def __init__(self): &amp;#34;&amp;#34;&amp;#34;SoftLayer Client&amp;#34;&amp;#34;&amp;#34; self.client = SoftLayer.Client() self.mgr = SoftLayer.HardwareManager(self.client) def addVlanTrunks(self, id, vlans): &amp;#34;&amp;#34;&amp;#34; Adds a vlan to a network component @param id ID of SoftLayer_Network_Component you want to add vlan to @param vlans dictionary of vlan nubmers you want to add @sldn{SoftLayer_Network_Component,addNetworkVlanTrunks} @sldn{SoftLayer_Network_Component,getNetworkVlanTrunks} &amp;#34;&amp;#34;&amp;#34; for vlanNumber in vlans: print &amp;#34;Adding vlan %sto %s&amp;#34; % (vlanNumber,id) result = self.</description>
    </item>
    
    <item>
      <title>Get Virtual Console Virtual Guest</title>
      <link>https://softlayer.github.io/python/getKvmDetails/</link>
      <pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/getKvmDetails/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; @author Ryan Tiffany &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() mask = &amp;#34;mask[consoleIpAddressRecord[ipAddress[ipAddress],port],operatingSystem[passwords]]&amp;#34; getDetails = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].getObject(mask=mask,id=31678643) pp(getDetails)</description>
    </item>
    
    <item>
      <title>Reloading a server with a custom partition scheme</title>
      <link>https://softlayer.github.io/python/reloadCustomPartition/</link>
      <pubDate>Wed, 29 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reloadCustomPartition/</guid>
      <description>The following code allows you to reload a Bare Metal server with a custom partitioning scheme. You simply need to change the serverId and the partitions to suit your needs. Note that one partition must be marked as the &amp;lsquo;grow&amp;rsquo; partition.
import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): serverId = 1154505 config = { &amp;#34;upgradeHardDriveFirmware&amp;#34;: &amp;#34;0&amp;#34;, &amp;#34;upgradeBios&amp;#34;: &amp;#34;0&amp;#34;, &amp;#34;hardDrives&amp;#34;: [ { &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Hardware_Component_HardDrive&amp;#34;, &amp;#34;partitions&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;/boot&amp;#34;, &amp;#34;minimumSize&amp;#34;: &amp;#34;.</description>
    </item>
    
    <item>
      <title>Network Topology</title>
      <link>https://softlayer.github.io/python/networkTopology/</link>
      <pubDate>Fri, 17 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/networkTopology/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; @author Christopher Gallo &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): mask = &amp;#34;&amp;#34;&amp;#34; mask[ attachedNetworkGateway[publicVlan,privateVlan], hardware[fullyQualifiedDomainName,frontendNetworkComponents[uplinkComponent], backendNetworkComponents[uplinkComponent]], network, networkSpace, primaryRouter[hostname], primarySubnet, subnets[networkIdentifier], virtualGuests[fullyQualifiedDomainName] ] &amp;#34;&amp;#34;&amp;#34; orderedVlans = {} result = self.client[&amp;#39;SoftLayer_Account&amp;#39;].getNetworkVlans(mask=mask) &amp;#34;&amp;#34;&amp;#34; This bit builds a nicely structured object of the network topology &amp;#34;&amp;#34;&amp;#34; for vlan in result: vlanNumber = vlan[&amp;#39;vlanNumber&amp;#39;] router,dc = vlan[&amp;#39;primaryRouter&amp;#39;][&amp;#39;hostname&amp;#39;].split(&amp;#34;.&amp;#34;) if dc not in orderedVlans: orderedVlans[dc] = {} if router not in orderedVlans[dc]: orderedVlans[dc][router] = {} toAppend = { &amp;#39;hardware&amp;#39;: vlan[&amp;#39;hardware&amp;#39;], &amp;#39;virtualGuests&amp;#39;: vlan[&amp;#39;virtualGuests&amp;#39;], &amp;#39;subnets&amp;#39;: vlan[&amp;#39;subnets&amp;#39;] } if &amp;#39;attachedNetworkGateway&amp;#39; in vlan: if vlan[&amp;#39;networkSpace&amp;#39;] == &amp;#39;PUBLIC&amp;#39;: gatewayVlan = vlan[&amp;#39;attachedNetworkGateway&amp;#39;][&amp;#39;publicVlan&amp;#39;][&amp;#39;vlanNumber&amp;#39;] elif vlan[&amp;#39;networkSpace&amp;#39;] == &amp;#39;PRIVATE&amp;#39;: gatewayVlan = vlan[&amp;#39;attachedNetworkGateway&amp;#39;][&amp;#39;privateVlan&amp;#39;][&amp;#39;vlanNumber&amp;#39;] if gatewayVlan not in orderedVlans[dc][router]: orderedVlans[dc][router][gatewayVlan] = {} orderedVlans[dc][router][gatewayVlan][vlanNumber] = toAppend orderedVlans[dc][router][gatewayVlan][&amp;#39;gateway&amp;#39;] = True else: orderedVlans[dc][router][vlanNumber] = toAppend &amp;#34;&amp;#34;&amp;#34; This bit prints out everything nicely-ish.</description>
    </item>
    
    <item>
      <title>Endurance Storage Replication</title>
      <link>https://softlayer.github.io/python/EnduranceReplication/</link>
      <pubDate>Tue, 21 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/EnduranceReplication/</guid>
      <description>Some good starting reading.
 https://knowledgelayer.softlayer.com/procedure/endurance-replication https://knowledgelayer.softlayer.com/procedure/endurance-snapshots http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/enableSnapshots  For more information on the magic of storage ordering see the following
 https://github.com/softlayer/softlayer-python/blob/master/SoftLayer/managers/file.py https://github.com/softlayer/softlayer-python/blob/master/SoftLayer/managers/storage_utils.py  This example should touch on all the basics of dealing with endurance storage replication volumes. This example uses the SoftLayer-python File manager a little bit for ordering
TO authorize hosts that are NOT virtual guests, see the allowAccessFrom* methods in
 http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/  Graceful vs Immediate failover</description>
    </item>
    
    <item>
      <title>Subnets and Bandwidth Pools</title>
      <link>https://softlayer.github.io/python/bandwidthPoolsAndSubnets/</link>
      <pubDate>Thu, 16 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/bandwidthPoolsAndSubnets/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def getPublicSubnets(self): &amp;#34;&amp;#34;&amp;#34; subnet types SECONDARY_ON_VLAN = Portable IPs PRIMARY SUBNET_ON_VLAN = static subnets PRIMARY_6 STATIC_IP_ROUTED GLOBAL_IP ADDITIONAL_PRIMARY &amp;#34;&amp;#34;&amp;#34; object_filter = { &amp;#39;publicSubnets&amp;#39; : { &amp;#39;subnetType&amp;#39; : { &amp;#39;operation&amp;#39;: &amp;#39;SECONDARY_ON_VLAN&amp;#39; } } } subnets = self.client[&amp;#39;Account&amp;#39;].getPublicSubnets(filter=object_filter) pp(subnets) def getBandwidthPools(self): &amp;#34;&amp;#34;&amp;#34; bareMetalInstances and privateNetworkOnlyHardware may need to be included in the mask if applicable. &amp;#34;&amp;#34;&amp;#34; mask = &amp;#34;mask[hardware,virtualGuests]&amp;#34; pool = self.</description>
    </item>
    
    <item>
      <title>Get verbose details about a Bare Metal Server</title>
      <link>https://softlayer.github.io/python/getVerboseBmDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/getVerboseBmDetails/</guid>
      <description>This script will get the Packages, Categories, and items associated with a Bare Metal Server.
import SoftLayer import pprint from pprint import pprint as pp client = SoftLayer.Client() mask = &amp;#34;mask[id, fullyQualifiedDomainName, billingItem[id, item[id, description], category[name, id],children[id, item[id, description], category[name, id]]]]&amp;#34; getDetails = client[&amp;#39;SoftLayer_Hardware&amp;#39;].getObject(mask=mask,id=296740) pp(getDetails)</description>
    </item>
    
    <item>
      <title>Get verbose details about a Virtual Guest</title>
      <link>https://softlayer.github.io/python/getVerboseVsiDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/getVerboseVsiDetails/</guid>
      <description>This script will get the Packages, Categories, and items associated with a Virtual Guest.
import SoftLayer import pprint from pprint import pprint as pp client = SoftLayer.Client() mask = &amp;#34;mask[id, fullyQualifiedDomainName, billingItem[id, item[id, description], category[name, id],children[id, item[id, description], category[name, id]]]]&amp;#34; getDetails = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].getObject(mask=mask,id=26961063) pp(getDetails)</description>
    </item>
    
    <item>
      <title>Order a Netscaler</title>
      <link>https://softlayer.github.io/python/orderNetscaler/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderNetscaler/</guid>
      <description>import SoftLayer from pprint import pprint as pp class orderNetscaler(): def __init__(self): self.client = SoftLayer.Client() def main(self): productOrder = { &amp;#39;orderContainers&amp;#39;: [ {&amp;#34;hardware&amp;#34;: [{ &amp;#34;primaryBackendNetworkComponent&amp;#34;: { # REPLACE THIS &amp;#34;networkVlanId&amp;#34;: 1234 }, &amp;#34;primaryNetworkComponent&amp;#34;: { # REPLACE THIS &amp;#34;networkVlanId&amp;#34;: 456 } }], # REPLACE THIS with your location &amp;#34;location&amp;#34;: &amp;#34;DALLAS09&amp;#34;, &amp;#34;packageId&amp;#34;: 192, &amp;#34;quantity&amp;#34;: 1, # Price IDS for Netscaler and 2 IPs &amp;#34;prices&amp;#34;: [ {&amp;#34;id&amp;#34;: 44964}, {&amp;#34;id&amp;#34;: 17238} ] }] } order = self.</description>
    </item>
    
    <item>
      <title>Get a list of Virtual Guests and Bare Metal servers per Pod in a Datacenter</title>
      <link>https://softlayer.github.io/python/listByPod/</link>
      <pubDate>Fri, 18 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/listByPod/</guid>
      <description>import SoftLayer import pprint from prettytable import PrettyTable client = SoftLayer.Client() # Define datacenter e.g: dal05, dal09, ams01, sao01, etc datacenter = &amp;#39;dal10&amp;#39; # Declare a new API service objects for SoftLayer_Account accountClient = client[&amp;#39;SoftLayer_Account&amp;#39;] # Define objectMask and objectFilters to get additional information objectMask = &amp;#39;mask[primaryNetworkComponent[router[hostname]]]&amp;#39; objectFilterBms = {&amp;#34;hardware&amp;#34;: {&amp;#34;datacenter&amp;#34;: {&amp;#34;name&amp;#34;: {&amp;#34;operation&amp;#34;: datacenter}}}} objectFilterVsi = {&amp;#34;virtualGuests&amp;#34;: {&amp;#34;datacenter&amp;#34;: {&amp;#34;name&amp;#34;: {&amp;#34;operation&amp;#34;: datacenter}}}} # Define array to add pods pods = [] try: # Getting servers and vsis servers = accountClient.</description>
    </item>
    
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://softlayer.github.io/python/migratevsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/migratevsi/</guid>
      <description>You can use the following python example to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.
import SoftLayer import json # The package for Virtual Guests packageId = 46 # Our exising VSI ID virtualGuests = [ { &amp;#34;id&amp;#34;:25367125 } ] # The price item id for a 25GB Local Primary Drive.</description>
    </item>
    
    <item>
      <title>Monitoring Examples</title>
      <link>https://softlayer.github.io/python/monitoring/</link>
      <pubDate>Wed, 12 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/monitoring/</guid>
      <description>ResponseStatus codes and what they mean. http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Monitor_Version1_Query_Result
 0: CRITICAL 1: Warning 2: OK
 4 - 5: Unknown Status, Contact Support  More information: https://stackoverflow.com/questions/37662607/python-api-monitoring-manager
This example gets the status of your Basic and Advanced monitoring.
import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): return True def getBasicStatus(self, server_id): mask = &amp;#34;mask[fullyQualifiedDomainName, networkMonitors[lastResult]]&amp;#34; server = self.client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].getObject(id=server_id, mask=mask ) pp(server) def getAdvancedStatus(self, server_id): mask = &amp;#34;mask[fullyQualifiedDomainName, monitoringAgents[configurationValues[definition]]]&amp;#34; server = self.</description>
    </item>
    
    <item>
      <title>Create a snapshot schedule</title>
      <link>https://softlayer.github.io/python/enableSnapshots/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/enableSnapshots/</guid>
      <description>This method is not valid for Legacy iSCSI Storage Volumes. You need to have already purchased snapshot space for the script to work properly.
import SoftLayer client = SoftLayer.Client() storageId = 11657445 # Define parameters for snapshot scheduleType = &amp;#39;WEEKLY&amp;#39; retentionCount = &amp;#39;20&amp;#39; minute = &amp;#39;1&amp;#39; hour = &amp;#39;13&amp;#39; dayOfWeek = &amp;#39;SUNDAY&amp;#39; try: result = client[&amp;#39;SoftLayer_Network_Storage&amp;#39;].enableSnapshots(scheduleType, retentionCount, minute, hour, dayOfWeek, id=storageId) print (result) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Error: &amp;#34; % (e.</description>
    </item>
    
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://softlayer.github.io/python/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createSnapshot/</guid>
      <description>Trigger a manual snapshot creation of a Block storage volume.
import SoftLayer import json iscsiStorageId = 8744521 client = SoftLayer.create_client_from_env() networkStorageIscsiService = client[&amp;#39;SoftLayer_Network_Storage_Iscsi&amp;#39;] try: iscsiStorage = networkStorageIscsiService.createSnapshot(id=iscsiStorageId) print(json.dumps(iscsiStorage, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to retrieve the Network Storage Iscsi. faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.faultString)) The process can take sometime to complete. You can check the snapshots associated with a storage volume by using the code below:</description>
    </item>
    
    <item>
      <title>Create A Domain</title>
      <link>https://softlayer.github.io/python/createDNS/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createDNS/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): zone_name = &amp;#39;lablayer2.info&amp;#39; zone_client = self.client[&amp;#39;SoftLayer_Dns_Domain&amp;#39;] the_zone = { &amp;#39;name&amp;#39; : zone_name, &amp;#39;resourceRecords&amp;#39; : [ { &amp;#39;data&amp;#39; : &amp;#39;123.123.123.123&amp;#39;, &amp;#39;host&amp;#39; : &amp;#39;ns1&amp;#39;, &amp;#39;type&amp;#39; : &amp;#39;a&amp;#39;, }, { &amp;#39;data&amp;#39; : &amp;#39;123.123.123.123&amp;#39;, &amp;#39;host&amp;#39; : &amp;#39;ns2&amp;#39;, &amp;#39;type&amp;#39; : &amp;#39;a&amp;#39;, }, { &amp;#39;data&amp;#39; : &amp;#39;123.123.123.123&amp;#39;, &amp;#39;host&amp;#39; : &amp;#39;@&amp;#39;, &amp;#39;type&amp;#39; : &amp;#39;a&amp;#39;, }, { &amp;#39;data&amp;#39; : &amp;#39;ns2.lablayer2.info.&amp;#39;, &amp;#39;host&amp;#39; : &amp;#39;@&amp;#39;, &amp;#39;type&amp;#39; : &amp;#39;ns&amp;#39;, }, { &amp;#39;data&amp;#39; : &amp;#39;ns1.</description>
    </item>
    
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://softlayer.github.io/python/createBWpool/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createBWpool/</guid>
      <description>import SoftLayer # For nice debug output: from pprint import pprint as pp # Set the needed values to create a new item accountId = 111111 # The values for bandwidthAllotmentTypeId are: (1) and (2) # where: (1) means this allotment is marked as a virtual private rack or # (2) bandwidth pooling bandwidthAllotmentTypeId = 2 # To get locationGroupId, execute: SoftLayer_Location_Group::getAllObjects locationGroupId = 1 newBandwithPoolName = &amp;#39;newBWpool&amp;#39; # Create an object template to create the item.</description>
    </item>
    
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://softlayer.github.io/python/createLBpython/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/createLBpython/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a load balancer Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The package to order load balancers. packageId = 194 # Build a skeleton SoftLayer_Product_Item_Price objects. These objects contain # much more than ids, but SoftLayer&amp;#39;s ordering system only needs the price&amp;#39;s id # to know what you want to order. # Since Load Balancers can have Location Specific itemPriceId&amp;#39;s I am using the following script to # return just the standard (location agnostic) itemPriceId&amp;#39;s.</description>
    </item>
    
    <item>
      <title>Adding/Removing Servers in a Bandwidth Pool</title>
      <link>https://softlayer.github.io/python/adjustpool/</link>
      <pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/adjustpool/</guid>
      <description>The following script allows you to add and remove servers in an existing bandwidth pool. The script requires empty arrays when not specifying a Bare Metal or Virtual Guest Id.
import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() hardwareToAdd = [{&amp;#34;id&amp;#34;: 123456 }] # ID&amp;#39;s for any bare metal servers to add to the pool hardwareToRemove = [] # ID&amp;#39;s for any bare metal servers to remove from the pool cloudsToAdd = [] # ID&amp;#39;s for any virtual guests to add to the pool cloudsToRemove = [{&amp;#34;id&amp;#34;: 987654 }] # ID&amp;#39;s for any virtual guests to remove from the pool pool_id = &amp;#39;11111111&amp;#39; # Bandwidth Pool ID adjustpool = client[&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;].</description>
    </item>
    
    <item>
      <title>Get storage credentials for Block Storage</title>
      <link>https://softlayer.github.io/python/getstoragedetails/</link>
      <pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/getstoragedetails/</guid>
      <description>The following script allows you retrieve the username and password for Performance/Endurance Block storage if you have authorized hosts against the storage.
&amp;#34;&amp;#34;&amp;#34; Get credentials for a authorized hosts of a SoftLayer_Network_Storage_Iscsi Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json iscsiStorageId = 1234567 client = SoftLayer.create_client_from_env() networkStorageIscsiService = client[&amp;#39;SoftLayer_Network_Storage_Iscsi&amp;#39;] objectMask = &amp;#39;mask[allowedHardware[allowedHost[credential]],allowedVirtualGuests[allowedHost[credential]]]&amp;#39; try: iscsiStorage = networkStorageIscsiService.getObject(mask=objectMask, id=iscsiStorageId) print(json.dumps(iscsiStorage, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to retrieve the Network Storage Iscsi.</description>
    </item>
    
    <item>
      <title>Find Location specific pricing for a package</title>
      <link>https://softlayer.github.io/python/location_based_pricing/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/location_based_pricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. In the following example we will query for the Dallas 6 data center, and then filter our item (Local Load Balancer) and prices to include only the location-based pricing for the specific data center we&amp;rsquo;re in —or we can filter for the standard price if a location-based price doesn&amp;rsquo;t exist.</description>
    </item>
    
    <item>
      <title>Find standard location pricing for a package</title>
      <link>https://softlayer.github.io/python/standard_pricing/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/standard_pricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. The following example shows how to get the Standard priceItemId for a package regardless of the location.
import SoftLayer import json object_filter = { &amp;#39;items&amp;#39;: { &amp;#39;prices&amp;#39;: { &amp;#39;locationGroupId&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;is null&amp;#39; } } } } client = SoftLayer.</description>
    </item>
    
    <item>
      <title>Upgrade Hardware and Virtual Servers</title>
      <link>https://softlayer.github.io/python/upgrade_examples/</link>
      <pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/upgrade_examples/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() &amp;#34;&amp;#34;&amp;#34; Prints out what can be upgraded on a server by category. &amp;#34;&amp;#34;&amp;#34; def getUpgradeItemPrices(self, hardware_id, service=&amp;#39;SoftLayer_Hardware_Server&amp;#39;): result = self.client[service].getUpgradeItemPrices(id=hardware_id) last_id = 0 for item in result: now_id = item[&amp;#39;categories&amp;#39;][0][&amp;#39;id&amp;#39;] if now_id != last_id: print(&amp;#34;%s (%s)&amp;#34; % (item[&amp;#39;categories&amp;#39;][0][&amp;#39;name&amp;#39;], item[&amp;#39;categories&amp;#39;][0][&amp;#39;id&amp;#39;])) last_id = now_id print(&amp;#34;\t %s (%s)&amp;#34; % (item[&amp;#39;item&amp;#39;][&amp;#39;description&amp;#39;], item[&amp;#39;id&amp;#39;])) &amp;#34;&amp;#34;&amp;#34; Get the available maintenance windows that exist for a server.</description>
    </item>
    
    <item>
      <title>Backup and Restore firewall rules</title>
      <link>https://softlayer.github.io/python/manage_firewall_rules/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/manage_firewall_rules/</guid>
      <description>restoreRules here will clobber any existing rules on the firewall, so be careful with that.
import SoftLayer from SoftLayer.CLI import firewall from pprint import pprint as pp import json from argparse import ArgumentParser class ruleSaver(): def __init__(self, path, fw): self.client = SoftLayer.Client() self.fw = SoftLayer.FirewallManager(self.client) self.path = path self.fw_type, self.fw_id = firewall.parse_id(fw) def saveRules(self): if self.fw_type == &amp;#39;vlan&amp;#39;: rules = self.fw.get_dedicated_fwl_rules(self.fw_id) else: rules = self.fw.get_standard_fwl_rules(self.fw_id) with open(self.path, &amp;#39;w&amp;#39;) as f: json.</description>
    </item>
    
    <item>
      <title>Attach and Detach a Block Device to a Virtual_Guest</title>
      <link>https://softlayer.github.io/python/attach_disk/</link>
      <pubDate>Thu, 03 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/attach_disk/</guid>
      <description>Attaching a currently detached portable block device to a given guest. The disk image will need to be migrated to the host the guest is on, so make sure to check if that host has enough disk space (with checkHostDiskAvailability) before attaching. This is only required for guests with local storage guests. SAN based guests don&amp;rsquo;t need that step.
Running this on a disk that is already attached will move the disk to the new guest.</description>
    </item>
    
    <item>
      <title>Update Firmware on a Bare Metal Server</title>
      <link>https://softlayer.github.io/python/update_firmware/</link>
      <pubDate>Thu, 03 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/update_firmware/</guid>
      <description>In the following example we are updating the firmware for the IPMI, BIOS, Hard Drives, and Raid Controller on our Bare Metal Server with ID 12345. We can toggle the specific items we want updated by setting the values to False (Do not update firmware) or True (Do update firmware).
import SoftLayer client = SoftLayer.Client() mgr = SoftLayer.HardwareManager(client) result = mgr.</description>
    </item>
    
    <item>
      <title>Manage Users</title>
      <link>https://softlayer.github.io/python/manageUsers/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/manageUsers/</guid>
      <description>Creates a user, sets up proper permissions, sets up devices access restrictions, creates API keys and orders the user a server.
import SoftLayer.API from pprint import pprint as pp def create_user(username, password): user_template = { &amp;#39;username&amp;#39;: username, &amp;#39;firstName&amp;#39;: &amp;#39;API&amp;#39;, &amp;#39;lastName&amp;#39;: &amp;#39;Learner&amp;#39;, &amp;#39;email&amp;#39;: &amp;#39;someone@somewhere.com&amp;#39;, &amp;#39;companyName&amp;#39;: &amp;#39;IBM&amp;#39;, &amp;#39;address1&amp;#39;: &amp;#39;123 api road&amp;#39;, &amp;#39;city&amp;#39;: &amp;#39;Houston&amp;#39;, &amp;#39;country&amp;#39;: &amp;#39;US&amp;#39;, &amp;#39;postalCode&amp;#39;: &amp;#39;TX 77002&amp;#39;, &amp;#39;userStatusId&amp;#39;: 1001, &amp;#39;timezoneId&amp;#39;: 107 } created_user = client[&amp;#39;User_Customer&amp;#39;].createObject( user_template, password, password) return created_user def get_permissions(_id): permissions = client[&amp;#39;User_Customer&amp;#39;].</description>
    </item>
    
    <item>
      <title>Get Notifications</title>
      <link>https://softlayer.github.io/python/notifications/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/notifications/</guid>
      <description>Retrieves all notifications that were created on January 1, 2016.
import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): theDate = &amp;#39;01/01/2016 01:00:00&amp;#39; _filter = { &amp;#39;startDate&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;greaterThanDate&amp;#39;, &amp;#39;options&amp;#39;: [ {&amp;#39;name&amp;#39;: &amp;#39;date&amp;#39;, &amp;#39;value&amp;#39;: [theDate]} ] } } result = self.client[&amp;#39;SoftLayer_Notification_Occurrence_Event&amp;#39;].getAllObjects(filter=_filter) pp(result) if __name__ == &amp;#34;__main__&amp;#34;: main = example() main.</description>
    </item>
    
    <item>
      <title>Get tickets using an objectFilter</title>
      <link>https://softlayer.github.io/python/ticket_filter/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/ticket_filter/</guid>
      <description>import SoftLayer from pprint import pprint as pp import logging class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): # logger = logging.getLogger() # logger.addHandler(logging.StreamHandler()) # logger.setLevel(3) theDate = &amp;#34;02/25/2016 01:00:00&amp;#34; endDate = &amp;#34;02/29/2016 01:00:00&amp;#34; mask = &amp;#34;mask[updates,group[name]]&amp;#34; theFilter1 = { &amp;#39;tickets&amp;#39;: { &amp;#39;createDate&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;betweenDate&amp;#39;, &amp;#39;options&amp;#39;: [ {&amp;#39;name&amp;#39;: &amp;#39;startDate&amp;#39;, &amp;#39;value&amp;#39;: [theDate]}, {&amp;#39;name&amp;#39;: &amp;#39;endDate&amp;#39;, &amp;#39;value&amp;#39;: [endDate]} ] } } } theFilter2 = { &amp;#39;tickets&amp;#39;: { &amp;#39;createDate&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;greaterThanDate&amp;#39;, &amp;#39;options&amp;#39;: [ {&amp;#39;name&amp;#39;: &amp;#39;date&amp;#39;, &amp;#39;value&amp;#39;: [theDate]} ] }, &amp;#39;group&amp;#39; : { &amp;#39;name&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;Cancellations&amp;#39; } } } } result = self.</description>
    </item>
    
    <item>
      <title>Cancel an item or service</title>
      <link>https://softlayer.github.io/python/cancel_service/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/cancel_service/</guid>
      <description>In the following example we are retrieving the Billing Item of a Virtual Guest with the ID of 12345678 and passing that ID to cancelService.
import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() mask = &amp;#34;mask[id]&amp;#34; billingId = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].getBillingItem(mask=mask,id=12345678) cancelItem = client[&amp;#39;SoftLayer_Billing_Item&amp;#39;].cancelService(id = billingId[&amp;#39;id&amp;#39;])</description>
    </item>
    
    <item>
      <title>Determining your next bill</title>
      <link>https://softlayer.github.io/python/nextinvoice/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/nextinvoice/</guid>
      <description>import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() nextInvoiceAmount = client[&amp;#39;SoftLayer_Account&amp;#39;].getNextInvoiceTotalAmount() pp(nextInvoiceAmount)</description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>https://softlayer.github.io/python/getbillingitem/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/getbillingitem/</guid>
      <description>In the following example we are looking for the Billing Item of an Virtual Guest with an ID of 1234567.
import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() mask = &amp;#34;mask[id]&amp;#34; billingId = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].getBillingItem(mask=mask,id=1234567) pp(billingId)</description>
    </item>
    
    <item>
      <title>Month-to-date cost of a Virtual_Guest</title>
      <link>https://softlayer.github.io/python/monthtodate/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/monthtodate/</guid>
      <description>import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() mask = &amp;#34;mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]&amp;#34; toDateCost = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].getBillingItem(mask=mask,id=1234567) pp(toDateCost) Example Response
{&amp;#39;createDate&amp;#39;: &amp;#39;2016-02-05T14:07:37-06:00&amp;#39;, &amp;#39;currentHourlyCharge&amp;#39;: &amp;#39;.023&amp;#39;, &amp;#39;hourlyRecurringFee&amp;#39;: &amp;#39;.023&amp;#39;, &amp;#39;hoursUsed&amp;#39;: &amp;#39;1&amp;#39;}</description>
    </item>
    
    <item>
      <title>Reload with SSH keys</title>
      <link>https://softlayer.github.io/python/reload_hardware/</link>
      <pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/reload_hardware/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): &amp;#34;&amp;#34;&amp;#34; Will reload the operating system with a new imageTemplate, along with a set of sshKeys. This will erease all data. &amp;#34;&amp;#34;&amp;#34; # Change these IDs imageId = 1234567 sshKey1 = 123 sshKey2 = 456 serverId = 102938 config = { &amp;#39;imageTemplateId&amp;#39;: imageId, &amp;#39;sshKeyIds&amp;#39;: [sshKey1, sshKey2] } output = self.client[&amp;#39;Hardware_Server&amp;#39;].reloadOperatingSystem(&amp;#39;FORCE&amp;#39;, config, id=serverId) pp(config) print &amp;#34;RESULT\n&amp;#34; pp(output) if __name__ == &amp;#34;__main__&amp;#34;: main = example() main.</description>
    </item>
    
    <item>
      <title>Modify the configuration for a Bare Metal Server.</title>
      <link>https://softlayer.github.io/python/modify_bare_metal/</link>
      <pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/modify_bare_metal/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Upgrades a server. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getUpgradeItemPrices http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Property http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Upgrade License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer.API import json def getServer(serverIp, hardwareService): &amp;#34;&amp;#34;&amp;#34;Get the server. :param string serverIp: The Ip address of the server. :param SoftLayer_Hardware_Server hardwareService: the SoftLayer_Hardware_Server service. :returns: A SoftLayer_Hardware_Server object. &amp;#34;&amp;#34;&amp;#34; try: objectMask = &amp;#34;mask[id]&amp;#34; server = hardwareService.findByIpAddress(serverIp, mask=objectMask) if not server: print(&amp;#34;There is no a server with the IP address: &amp;#34; + serverIp) exit(1) except SoftLayer.</description>
    </item>
    
    <item>
      <title>Required the available servers to order</title>
      <link>https://softlayer.github.io/python/list_available_servers_to_order/</link>
      <pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_available_servers_to_order/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List all the vailable servers to order. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package_Server/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Package_Server/ http://sldn.softlayer.com/article/Object-Filters License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json client = SoftLayer.Client() packageService = client[&amp;#39;SoftLayer_Product_Package_Server&amp;#39;] objectFilter = { &amp;#34;packageType&amp;#34;: { &amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [{ &amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [ &amp;#34;BARE_METAL_CORE&amp;#34;, &amp;#34;BARE_METAL_CPU&amp;#34;, &amp;#34;BARE_METAL_CPU_FAST_PROVISION&amp;#34; ] }] } } try: servers = packageService.getAllObjects(filter=objectFilter) print(json.dumps(servers, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the servers to order.</description>
    </item>
    
    <item>
      <title>Edit IP address note</title>
      <link>https://softlayer.github.io/python/edit_ip_note/</link>
      <pubDate>Fri, 11 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/edit_ip_note/</guid>
      <description>import SoftLayer class example(): def __init__(self): self.client = SoftLayer.Client() def getSubnets(self): subnets = self.client[&amp;#39;SoftLayer_Account&amp;#39;].getSubnets() for subnet in subnets: print(&amp;#34;%s- %s/%s- %s&amp;#34; % ( subnet[&amp;#39;id&amp;#39;], subnet[&amp;#39;gateway&amp;#39;], subnet[&amp;#39;cidr&amp;#39;], subnet[&amp;#39;networkVlanId&amp;#39;] ) ) def getIpInSubnet(self, subnet_id): mask = &amp;#34;mask[virtualGuest,hardware]&amp;#34; subnet = self.client[&amp;#39;SoftLayer_Network_Subnet&amp;#39;] ips = subnet.getIpAddresses(id=subnet_id,mask=mask) for ip in ips: status = &amp;#34;Free&amp;#34; if ip[&amp;#39;subnet&amp;#39;][&amp;#39;subnetType&amp;#39;] == &amp;#34;PRIMARY&amp;#34;: status = &amp;#34;Reserved&amp;#34; elif ip[&amp;#39;isNetwork&amp;#39;]: status = &amp;#34;Network Ip&amp;#34; elif ip[&amp;#39;isGateway&amp;#39;]: status = &amp;#34;Gateway Ip&amp;#34; try: status = ip[&amp;#39;virtualGuest&amp;#39;][&amp;#39;fullyQualifiedDomainName&amp;#39;] except KeyError: pass try: status = ip[&amp;#39;hardware&amp;#39;][&amp;#39;fullyQualifiedDomainName&amp;#39;] except KeyError: pass try: note = ip[&amp;#39;note&amp;#39;] except KeyError: note = &amp;#34;none&amp;#34; print(&amp;#34;%s: %s- %s- %s&amp;#34; % (ip[&amp;#39;id&amp;#39;],ip[&amp;#39;ipAddress&amp;#39;],status, note)) def editNote(self, ip_id, note): &amp;#34;&amp;#34;&amp;#34; With editObject on SoftLayer_Network_Subnet_IpAddress you can only edit the note, everything else will get ignored silently.</description>
    </item>
    
    <item>
      <title>Place block storage (performance ISCSI) order</title>
      <link>https://softlayer.github.io/python/place_order_block_storage_performance_iscsi/</link>
      <pubDate>Thu, 12 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/place_order_block_storage_performance_iscsi/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a block storage (performance ISCSI). Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems http://sldn.softlayer.com/reference/services/SoftLayer_Location http://sldn.softlayer.com/reference/services/SoftLayer_Location/getDatacenters http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi_OS_Type http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi_OS_Type/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Enterprise http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-3 http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Python http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Values &amp;#34;AMS01&amp;#34;, &amp;#34;AMS03&amp;#34;, &amp;#34;CHE01&amp;#34;, &amp;#34;DAL05&amp;#34;, &amp;#34;DAL06&amp;#34; &amp;#34;FRA02&amp;#34;, &amp;#34;HKG02&amp;#34;, &amp;#34;LON02&amp;#34;, etc. location = &amp;#34;AMS01&amp;#34; # Values &amp;#34;20&amp;#34;, &amp;#34;40&amp;#34;, &amp;#34;80&amp;#34;, &amp;#34;100&amp;#34;, etc. storageSize = &amp;#34;40&amp;#34; # Values between &amp;#34;100&amp;#34; and &amp;#34;6000&amp;#34; by intervals of 100.</description>
    </item>
    
    <item>
      <title>Order an SSL Certificate</title>
      <link>https://softlayer.github.io/python/orderSSLCert/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/orderSSLCert/</guid>
      <description>Generating a CSR You will need a csr to make this request, it should be on your local file system.
The contents of the CSR MATTER, they need to match the information for what you are ordering. + orderApproverEmailAddress must match the Email Address of the CSR + The CSR Common name must be set and must be a part of the orderApproverEmailAddress
$ openssl genrsa -out domain.key 2048 $ openssl req -new -sha256 -key domain.</description>
    </item>
    
    <item>
      <title>getCustomGraphData</title>
      <link>https://softlayer.github.io/python/tracking_objects/</link>
      <pubDate>Sun, 11 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/tracking_objects/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self, tracking_id): tracking_service = self.client[&amp;#39;SoftLayer_Metric_Tracking_Object&amp;#39;] bw_result = tracking_service.getBandwidthData(&amp;#39;2015-10-01&amp;#39;, &amp;#39;2015-11-31&amp;#39;, &amp;#39;public&amp;#39;, 600, id=tracking_id) object_type = [{&amp;#39;keyName&amp;#39;:&amp;#39;PUBLICIN&amp;#39;,&amp;#39;summaryType&amp;#39;:&amp;#39;counter&amp;#39;,&amp;#39;name&amp;#39;:&amp;#39;vif_1_rx&amp;#39;}] summary_result = tracking_service.getSummaryData(&amp;#39;2015-11-01&amp;#39;,&amp;#39;2015-11-02&amp;#39;, object_type, 600, id=tracking_id) args = { &amp;#39;startDateTime&amp;#39; : &amp;#39;2015-11-01&amp;#39;, &amp;#39;endDateTime&amp;#39;:&amp;#39;2015-11-02&amp;#39;, &amp;#39;metrics&amp;#39;: [{&amp;#39;keyName&amp;#39;:&amp;#39;PUBLICIN&amp;#39;,&amp;#39;summaryType&amp;#39;:&amp;#39;counter&amp;#39;,&amp;#39;name&amp;#39;:&amp;#39;vif_1_rx&amp;#39;}], &amp;#39;interval&amp;#39;:600, &amp;#39;returnImage&amp;#39;: False } custom_result = tracking_service.getCustomGraphData(args,id=tracking_id) pp(custom_result) # For use with a virtual Guest, just change # SoftLayer_Hardware_Server here with SoftLayer_Virtual_Guest def getTrackingId(self, server_id): tracking_id = self.</description>
    </item>
    
    <item>
      <title>Set user permissions</title>
      <link>https://softlayer.github.io/python/set_permission/</link>
      <pubDate>Wed, 16 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_permission/</guid>
      <description>import SoftLayer from pprint import pprint as pp class setPermissions(): def __init__(self): self.client = SoftLayer.Client() def main(self, user_id): permissions = self.client[&amp;#39;User_Customer&amp;#39;].getPermissions(id=user_id) print(&amp;#34;=== OLD PERMISSIONS ===&amp;#34;) self.printPermissions(permissions) setperm = {&amp;#39;keyName&amp;#39;: &amp;#34;TICKET_ADD&amp;#34;} self.client[&amp;#39;User_Customer&amp;#39;].addPortalPermission(setperm, id=user_id) permissions = self.client[&amp;#39;User_Customer&amp;#39;].getPermissions(id=user_id) print(&amp;#34;=== NEW PERMISSIONS ===&amp;#34;) self.printPermissions(permissions) def getUsers(self): users = self.client[&amp;#39;Account&amp;#39;].getUsers() print(&amp;#34;ID - USERNAME - E-MAIL&amp;#34;) for user in users: print(&amp;#34;%s- %s- %s&amp;#34; % (user[&amp;#39;id&amp;#39;], user[&amp;#39;username&amp;#39;], user[&amp;#39;email&amp;#39;])) def printPermissions(sefl, permissions): for permission in permissions: print(&amp;#34;%s&amp;#34; % permission[&amp;#39;keyName&amp;#39;]) if __name__ == &amp;#34;__main__&amp;#34;: main = setPermissions() # CHANGE ME my_user = 439723 main.</description>
    </item>
    
    <item>
      <title>List Packages</title>
      <link>https://softlayer.github.io/python/list_packages/</link>
      <pubDate>Fri, 28 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_packages/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): &amp;#34;&amp;#34;&amp;#34; Gets ALL packages, and prints their name and price descriptions &amp;#34;&amp;#34;&amp;#34; mask = &amp;#34;mask[hourlyBillingAvailableFlag]&amp;#34; result = self.client[&amp;#39;Product_Package&amp;#39;].getAllObjects(); for product in result: print str(product[&amp;#39;id&amp;#39;]) + &amp;#34; - &amp;#34; + product[&amp;#39;name&amp;#39;] # result has a LOT of stuff in it, only print it out if you are ready # pp.pprint(result) def getPackage(self, package_id=0): &amp;#34;&amp;#34;&amp;#34; Gets a specific package and prints out some useful information &amp;#34;&amp;#34;&amp;#34; mask = &amp;#34;mask[items[prices]]&amp;#34; # Not all packages are available in all locations, you can check that with getLocations() # locations = self.</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>https://softlayer.github.io/python/create_vsi_options/</link>
      <pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_vsi_options/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; An example of how to create a VSI from the SL python library &amp;#39;&amp;#39;&amp;#39; from __future__ import print_function import SoftLayer from SoftLayer.managers.vs import VSManager def create_vsi(): #Create a client to the SoftLayer_Account API service. #Note: currently set without the user ID and API key since #it will by default use the values set in the CLI #to use other values use SoftLayer.Client(sl_username, sl_api_key) client = SoftLayer.Client() vsi_mgr = VSManager(client) # uncomment to display create options # print(vsi_mgr.</description>
    </item>
    
    <item>
      <title>Find active VMs by creator</title>
      <link>https://softlayer.github.io/python/find_my_vms/</link>
      <pubDate>Tue, 23 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/find_my_vms/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; Code example of how to list virtual instances from a SoftLayer account You can call the script from the command and provide the user ID you want to check. The script expects that you have the SoftLayer CLI installed and have it configured with the credentials you&amp;#39;d like to use with SoftLayer. You can run the script with the user ID you&amp;#39;d like to check under the account you have configured: find_my_active_vms userid The output of the script is in a csv format with tabs as the column separator.</description>
    </item>
    
    <item>
      <title>Server Bandwidth</title>
      <link>https://softlayer.github.io/python/get_bandwidth_data/</link>
      <pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_bandwidth_data/</guid>
      <description>import SoftLayer import pprint class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): pp = pprint.PrettyPrinter(indent=2) theMask = &amp;#34;mask[inboundPrivateBandwidthUsage,inboundPublicBandwidthUsage,outboundPrivateBandwidthUsage,outboundPublicBandwidthUsage]&amp;#34; result = self.client[&amp;#39;SoftLayer_Account&amp;#39;].getHardware() print &amp;#34;server_name,public_in,public_out,private_in,private_out&amp;#34; for server in result: #getHardware() only returns SoftLayer_Hardware, which doesn&amp;#39;t have the private bw usage metrics, for some reason. # So we just use SoftLayer_Hardware_Server here, which has more detailed information serverInfo = self.client[&amp;#39;SoftLayer_Hardware_Server&amp;#39;].getObject(id=server[&amp;#39;id&amp;#39;],mask=theMask) # use .get() to avoid exceptions pubin = serverInfo.get(&amp;#39;inboundPublicBandwidthUsage&amp;#39;, &amp;#39;--&amp;#39;) pubout = serverInfo.</description>
    </item>
    
    <item>
      <title>Password Auth</title>
      <link>https://softlayer.github.io/python/token_auth/</link>
      <pubDate>Tue, 09 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/token_auth/</guid>
      <description>import SoftLayer client = SoftLayer.Client() client.authenticate_with_password(&amp;#34;username&amp;#34;, &amp;#34;password&amp;#34;) print client.call(&amp;#39;Account&amp;#39;, &amp;#39;getCurrentUser&amp;#39;, mask=&amp;#39;id,apiAuthenticationKeys&amp;#39;)</description>
    </item>
    
    <item>
      <title>Change Passwords</title>
      <link>https://softlayer.github.io/python/change_multi_pass/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/change_multi_pass/</guid>
      <description>import SoftLayer import pprint class example(): def __init__(self): self.client = SoftLayer.Client() self.prefix = &amp;#34;PREFIX&amp;#34; self.password= &amp;#34;qweASDzxc!23&amp;#34; def main(self): pp = pprint.PrettyPrinter(indent=4) users = self.get_target_users(prefix=self.prefix) for user in users: print &amp;#34;Changing password for: &amp;#34; + str(user[&amp;#39;id&amp;#39;]) + &amp;#34; &amp;#34; + user[&amp;#39;username&amp;#39;] result = self.client[&amp;#39;User_Customer&amp;#39;].updatePassword(self.password, id=user[&amp;#39;id&amp;#39;]) # pp.pprint(result) def get_target_users(self, prefix): _filter = { &amp;#39;users&amp;#39;: { &amp;#39;username&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;*= %s&amp;#39; % (prefix) } } } _mask = &amp;#34;mask[id,username]&amp;#34; _users = self.client[&amp;#39;Account&amp;#39;].getUsers(filter=_filter, mask=_mask) return _users if __name__ == &amp;#34;__main__&amp;#34;: main = example() main.</description>
    </item>
    
    <item>
      <title>Set a server&#39;s metadata</title>
      <link>https://softlayer.github.io/python/set_user_metadata/</link>
      <pubDate>Mon, 23 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/set_user_metadata/</guid>
      <description>import SoftLayer from pprint import pprint as pp # CHANGE ME server = 678243 client = SoftLayer.Client() mask = &amp;#34;mask[attributes]&amp;#34; # Sets the metadata for this server to tttttt result1 = client[&amp;#39;SoftLayer_Hardware_Server&amp;#39;].setUserMetadata({&amp;#39;value&amp;#39;: &amp;#39;tttttt&amp;#39;},id=server) pp(result1) result2 = client[&amp;#39;SoftLayer_Hardware_Server&amp;#39;].getObject(mask=mask,id=server) pp(result2)</description>
    </item>
    
    <item>
      <title>List Instances</title>
      <link>https://softlayer.github.io/python/list_instances/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/list_instances/</guid>
      <description>import SoftLayer import pprint class example(): def __init__(self): self.client = SoftLayer.Client() self.mgr = SoftLayer.VSManager(self.client) def main(self): &amp;#34;&amp;#34;&amp;#34; &amp;#34;&amp;#34;&amp;#34; pp = pprint.PrettyPrinter(indent=4) result = self.mgr.list_instances() pp.pprint(result) if __name__ == &amp;#34;__main__&amp;#34;: main = example() main.</description>
    </item>
    
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>https://softlayer.github.io/python/create_server_from_template/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_server_from_template/</guid>
      <description>getPrivateBlockDeviceTemplateGroups will return a list of all the templates that you have created on your account. Use this method to find the id of the template you want to create a server from.
import SoftLayer from pprint import pprint as pp templateId = 12345 client = SoftLayer.Client() mask = &amp;#34;mask[id,name,note]&amp;#34; imageTemplates = client[&amp;#39;SoftLayer_Account&amp;#39;].getPrivateBlockDeviceTemplateGroups(mask=mask) print(&amp;#34;ID - Name - Note&amp;#34;) for template in imageTemplates: try: print(&amp;#34;%s- %s- %s&amp;#34; % (template[&amp;#39;id&amp;#39;], template[&amp;#39;name&amp;#39;], template[&amp;#39;note&amp;#39;])) except KeyError: print(&amp;#34;%s- %s- %s&amp;#34; % (template[&amp;#39;id&amp;#39;], template[&amp;#39;name&amp;#39;], &amp;#39;None&amp;#39;)) order = { &amp;#39;complexType&amp;#39;: &amp;#39;SoftLayer_Container_Product_Order_Virtual_Guest&amp;#39;, &amp;#39;quantity&amp;#39;: 1, &amp;#39;virtualGuests&amp;#39;: [ {&amp;#39;hostname&amp;#39;: &amp;#39;test-template&amp;#39;, &amp;#39;domain&amp;#39;: &amp;#39;example.</description>
    </item>
    
    <item>
      <title>Create child SoftLayer Account</title>
      <link>https://softlayer.github.io/python/create_account/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/create_account/</guid>
      <description>import SoftLayer from pprint import pprint as pp import json import SoftLayer.API # DIST MASTER ACCOUNT API INFORMATION (NOT SUB-BRAND) username = &amp;#34;CHANGE_ME&amp;#34; #change me apiKey = &amp;#34;CHANGE_ME&amp;#34; #change me # Brand ID of the Sub-brand to create the account under, NOT the top level distributor brand. # Very important to set this correctly, as it determines the location of the account # Will currently be a five digit number (the ID of of the parent brand, not the parent account) brandId = 0 #change me companyname = &amp;#34;&amp;#34; #change me firstname = &amp;#34;&amp;#34; #change me lastname = &amp;#34;&amp;#34; #change me address = &amp;#34;&amp;#34; #change me city = &amp;#34;&amp;#34; #change me state = &amp;#34;&amp;#34; #change me country = &amp;#34;&amp;#34; #change me -- two letter ISO code zipcode = &amp;#34;&amp;#34; #change me phone = &amp;#34;&amp;#34; #change me email = &amp;#34;&amp;#34; #change me cust_account = { &amp;#34;brandId&amp;#34;: brandId, &amp;#34;companyName&amp;#34;: companyname, &amp;#34;firstName&amp;#34;: firstname, &amp;#34;lastName&amp;#34;: lastname, &amp;#34;address1&amp;#34;: address, &amp;#34;postalCode&amp;#34;: zipcode, &amp;#34;city&amp;#34;: city, &amp;#34;state&amp;#34;: state, &amp;#34;country&amp;#34;: country, &amp;#34;officePhone&amp;#34;: phone, &amp;#34;email&amp;#34;: email, &amp;#34;lateFeeProtectionFlag&amp;#34;: True, &amp;#34;claimedTaxExemptTxFlag&amp;#34;: False, &amp;#34;allowedPptpVpnQuantity&amp;#34;: 1, &amp;#34;isReseller&amp;#34;: 0, &amp;#34;accountStatusId&amp;#34;: 1001 # 1001 = Active Account } print(&amp;#34;\n&amp;#34;) pp(cust_account) print(&amp;#34;\n&amp;#34;) null = raw_input(&amp;#34;Press Enter to create this brand in production.</description>
    </item>
    
    <item>
      <title>Get IPMI info for BMS</title>
      <link>https://softlayer.github.io/python/get_ipmi/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_ipmi/</guid>
      <description>import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() mask = &amp;#34;&amp;#34;&amp;#34;mask[networkManagementIpAddress,remoteManagementAccounts[username,password],id,fullyQualifiedDomainName]&amp;#34;&amp;#34;&amp;#34; result = client[&amp;#39;SoftLayer_Account&amp;#39;].getHardware(mask=mask) pp(result)</description>
    </item>
    
    <item>
      <title>Required price IDs for package</title>
      <link>https://softlayer.github.io/python/get_required_price_id/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/get_required_price_id/</guid>
      <description>import SoftLayer package = 46 client = SoftLayer.Client() categoryObjectMask = &amp;#34;mask[isRequired, itemCategory[id, name]]&amp;#34; configurations = client[&amp;#39;Product_Package&amp;#39;].getConfiguration( id=package, mask=categoryObjectMask) pricesObjectMask = &amp;#34;mask[id;item.description;categories.id]&amp;#34; prices = client[&amp;#39;Product_Package&amp;#39;].getItemPrices( id=package, mask=pricesObjectMask) headerFormat = &amp;#39;%s- %s:&amp;#39; priceFormat = &amp;#39; %s-- %s&amp;#39; for configuration in configurations: if (not configuration[&amp;#39;isRequired&amp;#39;]): continue print headerFormat % (configuration[&amp;#39;itemCategory&amp;#39;][&amp;#39;name&amp;#39;], configuration[&amp;#39;itemCategory&amp;#39;][&amp;#39;id&amp;#39;]) for price in prices: if (&amp;#39;categories&amp;#39; not in price): continue if any((category.get(&amp;#39;id&amp;#39;) == configuration[&amp;#39;itemCategory&amp;#39;][&amp;#39;id&amp;#39;] for category in price[&amp;#39;categories&amp;#39;])): print priceFormat % (price[&amp;#39;id&amp;#39;], price[&amp;#39;item&amp;#39;][&amp;#39;description&amp;#39;])</description>
    </item>
    
    <item>
      <title>Place quote order</title>
      <link>https://softlayer.github.io/python/order_quote/</link>
      <pubDate>Wed, 12 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/python/order_quote/</guid>
      <description>import SoftLayer from pprint import pprint as pp quote_id = 12345 client = SoftLayer.Client() def getOrderContainer(quote_id): container = client[&amp;#39;Billing_Order_Quote&amp;#39;].getRecalculatedOrderContainer(id=quote_id) return container[&amp;#39;orderContainers&amp;#39;][0] def getQuotes(): quotes = client[&amp;#39;SoftLayer_Account&amp;#39;].getActiveQuotes() pp(quotes) getQuotes() guests = {&amp;#39;hostname&amp;#39;: &amp;#39;quotetest&amp;#39;, &amp;#39;domain&amp;#39;: &amp;#39;example.com&amp;#39;} container = getOrderContainer(quote_id) container[&amp;#39;quantity&amp;#39;] = 1 container[&amp;#39;virtualGuests&amp;#39;] = [] # You will need to add a hostname and domain entry for each server on the order # if quantity was 5, you would need to add 5 guests here container[&amp;#39;virtualGuests&amp;#39;].</description>
    </item>
    
  </channel>
</rss>