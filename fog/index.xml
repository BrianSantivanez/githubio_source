<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fog on SoftLayer API</title>
    <link>https://softlayer.github.io/fog/</link>
    <description>Recent content in Fog on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/fog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Interact with SoftLayer Object Storage</title>
      <link>https://softlayer.github.io/fog/storage/</link>
      <pubDate>Fri, 08 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/fog/storage/</guid>
      <description>Create a connection to SoftLayer Object Storage require &#39;fog/softlayer&#39; @sl = Fog::Storage[:softlayer]  Use the Models List directories/containers.
dirs = @sl.directories dirs.size # the number of directories  Create a directory/container.
@sl.directories.create(:key =&amp;gt; &#39;a-container&#39;)  Get a directory/container
dir = @sl.directories.get(&#39;a-container&#39;) dir.key # =&amp;gt; &#39;a-container&#39;  Create a new file/object
dir = @sl.directories.get(&#39;a-container&#39;) # Pass a string. dir.files.create(:key =&amp;gt; &#39;data.txt&#39;, :body =&amp;gt; &#39;The quick brown fox jumps over the lazy dog.</description>
    </item>
    
    <item>
      <title>Managing SSH Key Pairs with fog-softlayer</title>
      <link>https://softlayer.github.io/fog/keypairs/</link>
      <pubDate>Fri, 08 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/fog/keypairs/</guid>
      <description>Create a connection to SoftLayer Compute Service require &#39;fog/softlayer&#39; @sl = Fog::Compute[:softlayer]  Key Pair Basics Create
kp1 = @sl.key_pairs.create(:label =&amp;gt; &#39;my-new-key&#39;, :key =&amp;gt; &#39;ssh-rsa AAAAxbU2lx...&#39;) # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt; kp2 = @sl.key_pairs.new kp2.label = &#39;my-new-new-key&#39; kp2.key = &#39;ssh-rsa AAAAxbU2lx...&#39; kp2.save # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt;  Get
# By id: kp = @sl.key_pairs.get(123456) # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt; # By label: kp = @sl.key_pairs.by_label(&#39;my-new-key&#39;) # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt;  Destroy
kp = @sl.key_pairs.by_label(&#39;my-new-key&#39;) # =&amp;gt; &amp;lt;Fog::Compute::Softlayer::KeyPair&amp;gt; kp.</description>
    </item>
    
    <item>
      <title>Managing DNS with fog-softlayer</title>
      <link>https://softlayer.github.io/fog/dns/</link>
      <pubDate>Thu, 07 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/fog/dns/</guid>
      <description>Prerequisites These examples all assume you have installed the fog-softlayer gem and that you have created a ~/.fog file, which contains the following:
default: softlayer_username: &amp;lt;YOUR USERNAME&amp;gt; softlayer_api_key: &amp;lt;YOUR API KEY&amp;gt;  Create a connection to SoftLayer DNS Service require &#39;fog/softlayer&#39; @sl = Fog::DNS[:softlayer]  Create Operations Create Domain
@domain = @sl.domains.create(&#39;yourdomain.com&#39;)  Create Record
record = { &#39;value&#39; =&amp;gt; &#39;127.0.0.1&#39;, &#39;host&#39; =&amp;gt; &#39;@&#39;, &#39;type&#39; =&amp;gt; &#39;a&#39; } @domain.create_record(record)  Read Operations List all domains</description>
    </item>
    
    <item>
      <title>Managing VSI&#39;s and Bare Metal servers  with fog-softlayer</title>
      <link>https://softlayer.github.io/fog/compute/</link>
      <pubDate>Thu, 07 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/fog/compute/</guid>
      <description>Create a connection to SoftLayer Compute Service require &#39;fog/softlayer&#39; @sl = Fog::Compute[:softlayer]  Use the Models List all servers
@sl.servers # list all servers @sl.servers.size # get a count of all servers  Get a server&amp;rsquo;s details
server = @sl.servers.get(&amp;lt;server id&amp;gt;) server.name # =&amp;gt; &#39;hostname.example.com&#39; server.created_at # =&amp;gt; DateTime the server was created server.state # =&amp;gt; &#39;Running&#39;, &#39;Stopped&#39;, &#39;Terminated&#39;, etc.  Get a server&amp;rsquo;s details using ip address
server = @sl.</description>
    </item>
    
  </channel>
</rss>