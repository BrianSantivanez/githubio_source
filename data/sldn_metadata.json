{
    "BluePages_Container_EmployeeProfile": {
        "name": "BluePages_Container_EmployeeProfile",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "Employee address "
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "Employee address "
            },
            "addressCountry": {
                "name": "addressCountry",
                "type": "string",
                "form": "local",
                "doc": "Country of employee's address "
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "Employee city "
            },
            "departmentCode": {
                "name": "departmentCode",
                "type": "string",
                "form": "local",
                "doc": "Employee department code "
            },
            "departmentCountry": {
                "name": "departmentCountry",
                "type": "string",
                "form": "local",
                "doc": "Employee department country code "
            },
            "divisionCode": {
                "name": "divisionCode",
                "type": "string",
                "form": "local",
                "doc": "Employee division code "
            },
            "emailAddress": {
                "name": "emailAddress",
                "type": "string",
                "form": "local",
                "doc": "Employee email address "
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "Employee first name "
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Employee last name "
            },
            "managerEmailAddress": {
                "name": "managerEmailAddress",
                "type": "string",
                "form": "local",
                "doc": "Email of employee's manager "
            },
            "managerFirstName": {
                "name": "managerFirstName",
                "type": "string",
                "form": "local",
                "doc": "Employee's manager's first name "
            },
            "managerLastName": {
                "name": "managerLastName",
                "type": "string",
                "form": "local",
                "doc": "Employee's manager's last name "
            },
            "managerUid": {
                "name": "managerUid",
                "type": "string",
                "form": "local",
                "doc": "Employee' manager's identifier "
            },
            "phone": {
                "name": "phone",
                "type": "string",
                "form": "local",
                "doc": "Employee phone number "
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "Employee postal code "
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "Employee state "
            },
            "uid": {
                "name": "uid",
                "type": "string",
                "form": "local",
                "doc": "Employee identifier "
            }
        }
    },
    "BluePages_Search": {
        "name": "BluePages_Search",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Searches BluePages for an employee and returns a container representing the employee. Note that this service is not available to customers, despite being visible, and will return an error response. ",
        "methods": {
            "findBluePagesProfile": {
                "name": "findBluePagesProfile",
                "type": "BluePages_Container_EmployeeProfile",
                "doc": "Given an IBM email address, searches BluePages and returns the employee's details. Note that this method is not available to customers, despite being visible, and will return an error response. ",
                "static": true,
                "parameters": [
                    {
                        "name": "emailAddress",
                        "type": "string"
                    }
                ]
            }
        }
    },
    "IntegratedOfferingTeam_Container_Region": {
        "name": "IntegratedOfferingTeam_Container_Region",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "IntegratedOfferingTeam_Container_Region_Lead": {
        "name": "IntegratedOfferingTeam_Container_Region_Lead",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "emailAddress": {
                "name": "emailAddress",
                "type": "string",
                "form": "local",
                "doc": "Regional lead's email address"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "Regional lead's first name"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Regional lead's last name"
            },
            "regionKeyName": {
                "name": "regionKeyName",
                "type": "string",
                "form": "local",
                "doc": "Key name of the region this lead is in charge of"
            },
            "regionName": {
                "name": "regionName",
                "type": "string",
                "form": "local",
                "doc": "Full name of the region this lead is in charge of"
            }
        }
    },
    "IntegratedOfferingTeam_Region": {
        "name": "IntegratedOfferingTeam_Region",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This class represents an Integrated Offering Team region. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "IntegratedOfferingTeam_Container_Region",
                "typeArray": true,
                "doc": "Returns a list of all Integrated Offering Team regions. Note that this method, despite being visible, is not accessible by customers and attempting to use it will result in an error response. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getRegionLeads": {
                "name": "getRegionLeads",
                "type": "IntegratedOfferingTeam_Container_Region_Lead",
                "typeArray": true,
                "doc": "Returns a list of all Integrated Offering Team region leads. Note that this method, despite being visible, is not accessible by customers and attempting to use it will result in an error response. ",
                "static": true
            }
        },
        "typeDoc": "This class represents an Integrated Offering Team region. "
    },
    "McAfee_Epolicy_Orchestrator_Version36_Agent_Details": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Agent_Details",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Agent_Details data type represents a virus scan agent and contains details about its version.",
        "properties": {
            "currentPolicy": {
                "name": "currentPolicy",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Agent_Parent_Details",
                "form": "relational",
                "doc": "The current anti-virus policy of an agent."
            },
            "agentVersion": {
                "name": "agentVersion",
                "type": "string",
                "form": "local",
                "doc": "Version number of the anti-virus scan agent."
            },
            "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "form": "local",
                "doc": "The date of the last time the anti-virus agent checked in."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Agent_Parent_Details": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Agent_Parent_Details",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Agent_Parent_Details data type contains the name of an anti-virus policy.",
        "properties": {
            "currentPolicy": {
                "name": "currentPolicy",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Agent_Parent_Details",
                "form": "relational",
                "doc": "The current anti-virus policy of an agent."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a policy."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event data type represents a single anti-virus event. It contains details about the event such as the date the event occurred, the virus that is detected and the action that is taken. ",
        "properties": {
            "virusActionTaken": {
                "name": "virusActionTaken",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event_Filter_Description",
                "form": "relational",
                "doc": "The action taken when a virus is detected."
            },
            "eventLocalDateTime": {
                "name": "eventLocalDateTime",
                "type": "dateTime",
                "form": "local",
                "doc": "The date when an anti-virus event occurs."
            },
            "filename": {
                "name": "filename",
                "type": "string",
                "form": "local",
                "doc": "Name of the file found to be infected."
            },
            "virusName": {
                "name": "virusName",
                "type": "string",
                "form": "local",
                "doc": "The name of a virus that is found."
            },
            "virusType": {
                "name": "virusType",
                "type": "string",
                "form": "local",
                "doc": "The type of virus that is found."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event_AccessProtection": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event_AccessProtection",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event_AccessProtection data type represents an access protection event. It contains details about the event such as when it occurs, the process that caused it, and the rule that triggered the event. ",
        "properties": {
            "eventLocalDateTime": {
                "name": "eventLocalDateTime",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that an access protection event occurs."
            },
            "filename": {
                "name": "filename",
                "type": "string",
                "form": "local",
                "doc": "The name of the file that was protected from access."
            },
            "processName": {
                "name": "processName",
                "type": "string",
                "form": "local",
                "doc": "The name of the process that was protected from access."
            },
            "ruleName": {
                "name": "ruleName",
                "type": "string",
                "form": "local",
                "doc": "The name of the rule that triggered an access protection event."
            },
            "source": {
                "name": "source",
                "type": "string",
                "form": "local",
                "doc": "The IP address that caused an access protection event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event_Filter_Description": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event_Filter_Description",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event_Filter_Description data type contains the name of the rule that was triggered by an anti-virus event.",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the rule that triggered an anti-virus event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_BlockedApplicationEvent": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_BlockedApplicationEvent",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_BlockedApplicationEvent data type contains a single blocked application event. The details of the event are the time the event occurred, the process that generated the event and a brief description of the application that was blocked. ",
        "properties": {
            "applicationDescription": {
                "name": "applicationDescription",
                "type": "string",
                "form": "local",
                "doc": "A brief description of the application that is blocked."
            },
            "incidentTime": {
                "name": "incidentTime",
                "type": "dateTime",
                "form": "local",
                "doc": "The time that an application is blocked."
            },
            "processName": {
                "name": "processName",
                "type": "string",
                "form": "local",
                "doc": "The name of a process that is blocked."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_Event_Signature": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_Event_Signature",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_Event_Signature data type contains the signature name of a rule that generated an IPS event.",
        "properties": {
            "signatureName": {
                "name": "signatureName",
                "type": "string",
                "form": "local",
                "doc": "The name of a rule that triggered an IPS event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_IPSEvent": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_IPSEvent",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_IPSEvent data type represents a single IPS event.  It contains details about the event such as the date the event occurred, the process that generated it, the severity of the event, and the action taken. ",
        "properties": {
            "signature": {
                "name": "signature",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_Event_Signature",
                "form": "relational",
                "doc": "The signature that generated an IPS event."
            },
            "incidentTime": {
                "name": "incidentTime",
                "type": "dateTime",
                "form": "local",
                "doc": "The time when an IPS event occurred."
            },
            "processName": {
                "name": "processName",
                "type": "string",
                "form": "local",
                "doc": "Name of the process that generated an IPS event."
            },
            "reactionText": {
                "name": "reactionText",
                "type": "string",
                "form": "local",
                "doc": "The action taken because of an IPS event."
            },
            "remoteIpAddress": {
                "name": "remoteIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address that generated an IPS event."
            },
            "severityText": {
                "name": "severityText",
                "type": "string",
                "form": "local",
                "doc": "The severity level for an IPS event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_BlockedApplicationEvent": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_BlockedApplicationEvent",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_BlockedApplicationEvent data type contains a single blocked application event. The details of the event are the time the event occurred, the process that generated the event and a brief description of the application that was blocked. ",
        "properties": {
            "applicationDescription": {
                "name": "applicationDescription",
                "type": "string",
                "form": "local",
                "doc": "A brief description of the application that is blocked."
            },
            "incidentTime": {
                "name": "incidentTime",
                "type": "dateTime",
                "form": "local",
                "doc": "The time that an application is blocked."
            },
            "processName": {
                "name": "processName",
                "type": "string",
                "form": "local",
                "doc": "The name of a process that is blocked."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_Event_Signature": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_Event_Signature",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_Event_Signature data type contains the signature name of a rule that generated an IPS event.",
        "properties": {
            "signatureName": {
                "name": "signatureName",
                "type": "string",
                "form": "local",
                "doc": "The name of a rule that triggered an IPS event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_IPSEvent": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_IPSEvent",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_IPSEvent data type represents a single IPS event.  It contains details about the event such as the date the event occurred, the process that generated it, the severity of the event, and the action taken. ",
        "properties": {
            "signature": {
                "name": "signature",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_Event_Signature",
                "form": "relational",
                "doc": "The signature that generated an IPS event."
            },
            "incidentTime": {
                "name": "incidentTime",
                "type": "dateTime",
                "form": "local",
                "doc": "The time when an IPS event occurred."
            },
            "processName": {
                "name": "processName",
                "type": "string",
                "form": "local",
                "doc": "Name of the process that generated an IPS event."
            },
            "reactionText": {
                "name": "reactionText",
                "type": "string",
                "form": "local",
                "doc": "The action taken because of an IPS event."
            },
            "remoteIpAddress": {
                "name": "remoteIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address that generated an IPS event."
            },
            "severityText": {
                "name": "severityText",
                "type": "string",
                "form": "local",
                "doc": "The severity level for an IPS event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Policy_Object": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Policy_Object",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Policy_Object data type contains the name of a policy that may be assigned to a server.",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a policy."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version36_Product_Properties": {
        "name": "McAfee_Epolicy_Orchestrator_Version36_Product_Properties",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version36_Product_Properties data type contains the virus definition file version.",
        "properties": {
            "datVersion": {
                "name": "datVersion",
                "type": "string",
                "form": "local",
                "doc": "The virus definition file version."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Agent_Details": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Agent_Details",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Agent_Details data type represents a virus scan agent and contains details about its version.",
        "properties": {
            "agentVersion": {
                "name": "agentVersion",
                "type": "string",
                "form": "local",
                "doc": "Version number of the anti-virus scan agent."
            },
            "lastUpdate": {
                "name": "lastUpdate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of the last time the anti-virus agent checked in."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Agent_Parent_Details": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Agent_Parent_Details",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Agent_Parent_Details data type contains the name of an anti-virus policy.",
        "properties": {
            "agentDetails": {
                "name": "agentDetails",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Agent_Details",
                "form": "relational",
                "doc": "Additional information about an agent."
            },
            "policies": {
                "name": "policies",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Agent_Parent_Details",
                "form": "relational",
                "typeArray": true,
                "doc": "The current anti-virus policy of an agent."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a policy."
            },
            "policyCount": {
                "name": "policyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the current anti-virus policy of an agent."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Event": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Event",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Event data type represents a single event. It contains details about the event such as the date the event occurred, the virus or intrusion that is detected and the action that is taken. ",
        "properties": {
            "agentDetails": {
                "name": "agentDetails",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Agent_Details",
                "form": "relational",
                "doc": "Additional information about an agent."
            },
            "virusActionTaken": {
                "name": "virusActionTaken",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Event_Filter_Description",
                "form": "relational",
                "doc": "The action taken when a virus is detected."
            },
            "detectedUtc": {
                "name": "detectedUtc",
                "type": "dateTime",
                "form": "local",
                "doc": "The time that an event was detected."
            },
            "sourceIpv4": {
                "name": "sourceIpv4",
                "type": "string",
                "form": "local",
                "doc": "The IP address of the source that generated an event."
            },
            "sourceProcessName": {
                "name": "sourceProcessName",
                "type": "string",
                "form": "local",
                "doc": "The name of the process that generated an event."
            },
            "targetFilename": {
                "name": "targetFilename",
                "type": "string",
                "form": "local",
                "doc": "The name of the file that was the target of the event."
            },
            "threatActionTaken": {
                "name": "threatActionTaken",
                "type": "string",
                "form": "local",
                "doc": "The action taken regarding a threat."
            },
            "threatName": {
                "name": "threatName",
                "type": "string",
                "form": "local",
                "doc": "The name of the threat."
            },
            "threatSeverityLabel": {
                "name": "threatSeverityLabel",
                "type": "string",
                "form": "local",
                "doc": "The textual representation of the severity level."
            },
            "threatType": {
                "name": "threatType",
                "type": "string",
                "form": "local",
                "doc": "The type of threat."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Event_Filter_Description": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Event_Filter_Description",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Event_Filter_Description data type contains the name of the rule that was triggered by an event.",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the rule that triggered an event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Event_Version7": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Event_Version7",
        "base": "McAfee_Epolicy_Orchestrator_Version45_Event",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Event_Version7 data type represents a single event. It contains details about the event such as the date the event occurred, the virus or intrusion that is detected and the action that is taken. ",
        "properties": {
            "signature": {
                "name": "signature",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Hips_Event_Signature_Version7",
                "form": "relational",
                "doc": "The signature information for an event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Event_Version8": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Event_Version8",
        "base": "McAfee_Epolicy_Orchestrator_Version45_Event",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Event_Version8 data type represents a single event. It contains details about the event such as the date the event occurred, the virus or intrusion that is detected and the action that is taken. ",
        "properties": {
            "signature": {
                "name": "signature",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Hips_Event_Signature_Version8",
                "form": "relational",
                "doc": "The signature information for an event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Hips_Event_Signature_Version7": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Hips_Event_Signature_Version7",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Hips_Event_Signature_Version7 data type contains the signature name of a rule that generated an IPS event.",
        "properties": {
            "signatureName": {
                "name": "signatureName",
                "type": "string",
                "form": "local",
                "doc": "The name of a rule that triggered an IPS event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Hips_Event_Signature_Version8": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Hips_Event_Signature_Version8",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Hips_Event_Signature_Version8 data type contains the signature name of a rule that generated an IPS event.",
        "properties": {
            "signatureName": {
                "name": "signatureName",
                "type": "string",
                "form": "local",
                "doc": "The name of a rule that triggered an IPS event."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Policy_Object": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Policy_Object",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Policy_Object data type contains the name of a policy that may be assigned to a server.",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a policy."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version45_Product_Properties": {
        "name": "McAfee_Epolicy_Orchestrator_Version45_Product_Properties",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version45_Product_Properties data type contains the virus definition file version.",
        "properties": {
            "datVersion": {
                "name": "datVersion",
                "type": "string",
                "form": "local",
                "doc": "The virus definition file version."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version51_Agent_Details": {
        "name": "McAfee_Epolicy_Orchestrator_Version51_Agent_Details",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version51_Agent_Details data type represents a virus scan agent and contains details about its version.",
        "properties": {
            "agentVersion": {
                "name": "agentVersion",
                "type": "string",
                "form": "local",
                "doc": "Version number of the anti-virus scan agent."
            },
            "lastUpdate": {
                "name": "lastUpdate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of the last time the anti-virus agent checked in."
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version51_Policy_Object": {
        "name": "McAfee_Epolicy_Orchestrator_Version51_Policy_Object",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version51_Policy_Object data type represents a virus scan agent and contains details about its version.",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "McAfee_Epolicy_Orchestrator_Version51_Product_Properties": {
        "name": "McAfee_Epolicy_Orchestrator_Version51_Product_Properties",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The McAfee_Epolicy_Orchestrator_Version51_Product_Properties data type represents the version of the virus data file",
        "properties": {
            "datVersion": {
                "name": "datVersion",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Abuse_Lockdown_Resource": {
        "name": "SoftLayer_Abuse_Lockdown_Resource",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "invoiceItem": {
                "name": "invoiceItem",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Account": {
        "name": "SoftLayer_Account",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every SoftLayer customer has an account which is defined in the SoftLayer_Account service. SoftLayer accounts have users, hardware, and services such as storage and domains associated with them. The SoftLayer_Account service is a convenient way to obtain general information about your SoftLayer account. Use the data returned by these methods with other API services to get more detailed information about your services and to make changes to your servers and services. \n\nSoftLayer customers are unable to change their company account information in the portal or the API. If you need to change this information please open a sales ticket in our customer portal and our account management staff will assist you. ",
        "methods": {
            "activatePartner": {
                "name": "activatePartner",
                "type": "SoftLayer_Account",
                "doc": "A test SoftLayer_Account::activePartner THing",
                "overview": "A test of the overview view",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string",
                        "doc": "Specify the account ID that needs to be activated."
                    },
                    {
                        "name": "hashCode",
                        "type": "string",
                        "doc": "Specify the hashcode for the partner"
                    }
                ]
            },
            "addAchInformation": {
                "name": "addAchInformation",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "achInformation",
                        "type": "SoftLayer_Container_Billing_Info_Ach",
                        "doc": "ACH Information for this account"
                    }
                ],
                "static": true
            },
            "addReferralPartnerPaymentOption": {
                "name": "addReferralPartnerPaymentOption",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "paymentOption",
                        "type": "SoftLayer_Container_Referral_Partner_Payment_Option",
                        "doc": "Referral Partner Payment Option for this account",
                        "defaultValue": null
                    }
                ],
                "static": true
            },
            "areVdrUpdatesBlockedForBilling": {
                "name": "areVdrUpdatesBlockedForBilling",
                "type": "boolean",
                "doc": "This method indicates whether or not Bandwidth Pooling updates are blocked for the account so the billing cycle can run.  Generally, accounts are restricted from moving servers in or out of Bandwidth Pools from 12:00 CST on the day prior to billing, until the billing batch completes, sometime after midnight the day of actual billing for the account. ",
                "static": true
            },
            "cancelPayPalTransaction": {
                "name": "cancelPayPalTransaction",
                "type": "boolean",
                "doc": "Cancel the PayPal Payment Request process. During the process of submitting a PayPal payment request, the customer is redirected to PayPal to confirm the request.  If the customer elects to cancel the payment from PayPal, they are returned to SoftLayer where the manual payment record is updated to a status of canceled. ",
                "parameters": [
                    {
                        "name": "token",
                        "type": "string",
                        "doc": "Value provided by PayPal to access paypal information and complete the transaction."
                    },
                    {
                        "name": "payerId",
                        "type": "string",
                        "doc": "Paypal user identifier."
                    }
                ],
                "static": true
            },
            "completePayPalTransaction": {
                "name": "completePayPalTransaction",
                "type": "string",
                "doc": "Complete the PayPal Payment Request process and receive confirmation message. During the process of submitting a PayPal payment request, the customer is redirected to PayPal to confirm the request.  Once confirmed, PayPal returns the customer to SoftLayer where an attempt is made to finalize the transaction.  A status message regarding the attempt is returned to the calling function. ",
                "parameters": [
                    {
                        "name": "token",
                        "type": "string",
                        "doc": "Value provided by PayPal to access paypal information and complete the transaction."
                    },
                    {
                        "name": "payerId",
                        "type": "string",
                        "doc": "Paypal user identifier."
                    }
                ],
                "static": true
            },
            "countHourlyInstances": {
                "name": "countHourlyInstances",
                "type": "int",
                "doc": "Retrieve the number of hourly services on an account that are active, plus any pending orders with hourly services attached. ",
                "static": true
            },
            "createUser": {
                "name": "createUser",
                "type": "SoftLayer_User_Customer",
                "doc": "Create a new Customer user record in the SoftLayer customer portal. This is a wrapper around the Customer::createObject call, please see the documentation of that API. This wrapper adds the feature of the \"silentlyCreate\" option, which bypasses the IBMid invitation email process.  False (the default) goes through the IBMid invitation email process, which creates the IBMid/SoftLayer Single-Sign-On (SSO) user link when the invitation is accepted (meaning the email has been received, opened, and the link(s) inside the email have been clicked to complete the process). True will silently (no email) create the IBMid/SoftLayer user SSO link immediately. Either case will use the value in the template object 'email' field to indicate the IBMid to use. This can be the username or, if unique, the email address of an IBMid.  In the silent case, the IBMid must already exist.  In the non-silent invitation email case, the IBMid can be created during this flow, by specifying an email address to be used to create the IBMid.All the features and restrictions of createObject apply to this API as well.  In addition, note that the \"silentlyCreate\" flag is ONLY valid for IBMid-authenticated accounts. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer",
                        "doc": "as documented by createObject"
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "as documented by createObject",
                        "defaultValue": null
                    },
                    {
                        "name": "vpnPassword",
                        "type": "string",
                        "doc": "as documented by createObject",
                        "defaultValue": null
                    },
                    {
                        "name": "silentlyCreateFlag",
                        "type": "boolean",
                        "doc": "- A flag to tell whether to go through the usual IBMid invitation email",
                        "defaultValue": false
                    }
                ],
                "static": true
            },
            "disableEuSupport": {
                "name": "disableEuSupport",
                "type": "void",
                "doc": "<p style=\"color:red\"><strong>Warning</strong>: If you remove the EU Supported account flag, you are removing the restriction that limits Processing activities to EU personnel.</p> ",
                "static": true
            },
            "disableVpnConfigRequiresVpnManageAttribute": {
                "name": "disableVpnConfigRequiresVpnManageAttribute",
                "type": "void",
                "doc": "Disables the VPN_CONFIG_REQUIRES_VPN_MANAGE attribute on the account. If the attribute does not exist for the account, it will be created and set to false. ",
                "static": true
            },
            "editAccount": {
                "name": "editAccount",
                "type": "SoftLayer_Container_Account_Update_Response",
                "doc": "This method will edit the account's information. Pass in a SoftLayer_Account template with the fields to be modified. Certain changes to the account will automatically create a ticket for manual review. This will be returned with the SoftLayer_Container_Account_Update_Response.<br> <br> The following fields are editable:<br> <br> <ul> <li>companyName</li> <li>firstName</li> <li>lastName</li> <li>address1</li> <li>address2</li> <li>city</li> <li>state</li> <li>country</li> <li>postalCode</li> <li>email</li> <li>officePhone</li> <li>alternatePhone</li> <li>faxPhone</li> <li>abuseEmails.email</li> <li>billingInfo.vatId</li> </ul> ",
                "parameters": [
                    {
                        "name": "modifiedAccountInformation",
                        "type": "SoftLayer_Account",
                        "doc": "Account template containing the information to update to."
                    }
                ],
                "static": true
            },
            "enableEuSupport": {
                "name": "enableEuSupport",
                "type": "void",
                "doc": "<p> If you select the EU Supported option, the most common Support issues will be limited to IBM Cloud staff located in the EU.  In the event your issue requires non-EU expert assistance, it will be reviewed and approval given prior to any non-EU intervention.  Additionally, in order to support and update the services, cross-border Processing of your data may still occur.  Please ensure you take the necessary actions to allow this Processing, as detailed in the <strong><a href=\"http://www-03.ibm.com/software/sla/sladb.nsf/sla/bm-6605-12\">Cloud Service Terms</a></strong>. A standard Data Processing Addendum is available <strong><a href=\"https://www-05.ibm.com/support/operations/zz/en/dpa.html\">here</a></strong>. </p> \n\n<p> <strong>Important note (you will only see this once):</strong> Orders using the API will proceed without additional notifications. The terms related to selecting products, services, or locations outside the EU apply to API orders. Users you create and API keys you generate will have the ability to order products, services, and locations outside of the EU. It is your responsibility to educate anyone you grant access to your account on the consequences and requirements if they make a selection that is not in the EU Supported option.  In order to meet EU Supported requirements, the current PPTP VPN solution will no longer be offered or supported. </p> \n\n<p> If PPTP has been selected as an option for any users in your account by itself (or in combination with another VPN offering), you will need to disable PPTP before selecting the EU Supported account feature. For more information on VPN changes, click <strong><a href=\"http://knowledgelayer.softlayer.com/procedure/activate-or-deactivate-pptp-vpn-access-user\"> here</a></strong>. </p> ",
                "static": true
            },
            "enableVpnConfigRequiresVpnManageAttribute": {
                "name": "enableVpnConfigRequiresVpnManageAttribute",
                "type": "void",
                "doc": "Enables the VPN_CONFIG_REQUIRES_VPN_MANAGE attribute on the account. If the attribute does not exist for the account, it will be created and set to true. ",
                "static": true
            },
            "getAccountBackupHistory": {
                "name": "getAccountBackupHistory",
                "type": "SoftLayer_Container_Network_Storage_Evault_WebCc_JobDetails",
                "typeArray": true,
                "doc": "This method returns an array of SoftLayer_Container_Network_Storage_Evault_WebCc_JobDetails objects for the given start and end dates. Start and end dates should be be valid ISO 8601 dates. The backupStatus can be one of null, 'success', 'failed', or 'conflict'. The 'success' backupStatus returns jobs with a status of 'COMPLETED', the 'failed' backupStatus returns jobs with a status of 'FAILED', while the 'conflict' backupStatus will return jobs that are not 'COMPLETED' or 'FAILED'. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "Timestamp of the starting date"
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "Timestamp of the ending date"
                    },
                    {
                        "name": "backupStatus",
                        "type": "string",
                        "doc": "$backupStatus Can be null, 'success', 'failed', or 'conflict'",
                        "defaultValue": null
                    }
                ],
                "static": true
            },
            "getAccountTraitValue": {
                "name": "getAccountTraitValue",
                "type": "string",
                "doc": "This method pulls an account trait by its key. ",
                "parameters": [
                    {
                        "name": "keyName",
                        "type": "string"
                    }
                ],
                "static": true
            },
            "getActiveOutletPackages": {
                "name": "getActiveOutletPackages",
                "type": "SoftLayer_Product_Package",
                "typeArray": true,
                "doc": "This is deprecated and will not return any results. ",
                "maskable": true,
                "static": true
            },
            "getActivePackages": {
                "name": "getActivePackages",
                "type": "SoftLayer_Product_Package",
                "typeArray": true,
                "doc": "This method will return the [[SoftLayer_Product_Package]] objects from which you can order a bare metal server, virtual server, service (such as CDN or Object Storage) or other software. Once you have the package you want to order from, you may query one of various endpoints from that package to get specific information about its products and pricing. See [[SoftLayer_Product_Package/getCategories|getCategories]] or [[SoftLayer_Product_Package/getItems|getItems]] for more information. \n\nPackages that have been retired will not appear in this result set. ",
                "maskable": true,
                "static": true
            },
            "getActivePackagesByAttribute": {
                "name": "getActivePackagesByAttribute",
                "type": "SoftLayer_Product_Package",
                "typeArray": true,
                "doc": "<strong>This method is deprecated and should not be used in production code.</strong> \n\nThis method will return the [[SoftLayer_Product_Package]] objects from which you can order a bare metal server, virtual server, service (such as CDN or Object Storage) or other software filtered by an attribute type associated with the package. Once you have the package you want to order from, you may query one of various endpoints from that package to get specific information about its products and pricing. See [[SoftLayer_Product_Package/getCategories|getCategories]] or [[SoftLayer_Product_Package/getItems|getItems]] for more information. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "attributeKeyName",
                        "type": "string",
                        "doc": "the attribute key name"
                    }
                ],
                "static": true
            },
            "getActivePrivateHostedCloudPackages": {
                "name": "getActivePrivateHostedCloudPackages",
                "type": "SoftLayer_Product_Package",
                "typeArray": true,
                "doc": "[DEPRECATED] This method pulls all the active private hosted cloud packages. This will give you a basic description of the packages that are currently active and from which you can order private hosted cloud configurations. ",
                "maskable": true,
                "static": true
            },
            "getAggregatedUptimeGraph": {
                "name": "getAggregatedUptimeGraph",
                "type": "SoftLayer_Container_Graph",
                "doc": "Returns URL uptime data for your account ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "timestamp of the starting date"
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "timestamp of the ending date"
                    }
                ],
                "static": true
            },
            "getAlternateCreditCardData": {
                "name": "getAlternateCreditCardData",
                "type": "SoftLayer_Container_Account_Payment_Method_CreditCard",
                "static": true
            },
            "getAttributeByType": {
                "name": "getAttributeByType",
                "type": "SoftLayer_Account_Attribute",
                "doc": "Retrieve a single [[SoftLayer_Account_Attribute]] record by its [[SoftLayer_Account_Attribute_Type|types's]] key name. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "attributeType",
                        "type": "string",
                        "doc": "The [[SoftLayer_Account_Attribute_Type]] key name associated with the account attribute you wish to retrieve."
                    }
                ],
                "static": true
            },
            "getAuxiliaryNotifications": {
                "name": "getAuxiliaryNotifications",
                "type": "SoftLayer_Container_Utility_Message",
                "typeArray": true,
                "static": true,
                "limitable": true
            },
            "getAverageArchiveUsageMetricDataByDate": {
                "name": "getAverageArchiveUsageMetricDataByDate",
                "type": "float",
                "doc": "Returns the average disk space usage for all archive repositories. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ],
                "static": true
            },
            "getAveragePublicUsageMetricDataByDate": {
                "name": "getAveragePublicUsageMetricDataByDate",
                "type": "float",
                "doc": "Returns the average disk space usage for all public repositories. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ],
                "static": true
            },
            "getBandwidthList": {
                "name": "getBandwidthList",
                "type": "SoftLayer_Container_Bandwidth_Usage",
                "typeArray": true,
                "parameters": [
                    {
                        "name": "networkType",
                        "type": "string",
                        "doc": "Specify either the public or private network",
                        "defaultValue": "public"
                    },
                    {
                        "name": "direction",
                        "type": "string",
                        "doc": "Specify either in or out usage",
                        "defaultValue": "out"
                    },
                    {
                        "name": "startDate",
                        "type": "string",
                        "doc": "Beginning of cycle to sum usage",
                        "defaultValue": null
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "doc": "Beginning of cycle to sum usage",
                        "defaultValue": null
                    },
                    {
                        "name": "serverIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "Integer array of specific server IDs",
                        "defaultValue": []
                    }
                ],
                "static": true
            },
            "getCurrentBackupStatisticsGraph": {
                "name": "getCurrentBackupStatisticsGraph",
                "type": "SoftLayer_Container_Account_Graph_Outputs",
                "doc": "This method returns a SoftLayer_Container_Account_Graph_Outputs containing a base64 string PNG image. The optional parameter, detailedGraph, can be passed to get a more detailed graph. ",
                "parameters": [
                    {
                        "name": "detailedGraph",
                        "type": "boolean",
                        "doc": "True to retrieve a detailed graph.",
                        "defaultValue": false
                    }
                ],
                "static": true
            },
            "getCurrentTicketStatisticsGraph": {
                "name": "getCurrentTicketStatisticsGraph",
                "type": "SoftLayer_Container_Account_Graph_Outputs",
                "parameters": [
                    {
                        "name": "detailedGraph",
                        "type": "boolean",
                        "doc": "True to retrieve a detailed graph.",
                        "defaultValue": false
                    }
                ],
                "static": true
            },
            "getCurrentUser": {
                "name": "getCurrentUser",
                "type": "SoftLayer_User_Customer",
                "doc": "Retrieve the user record of the user calling the SoftLayer API. ",
                "static": true,
                "maskable": true
            },
            "getDedicatedHostsForImageTemplate": {
                "name": "getDedicatedHostsForImageTemplate",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "typeArray": true,
                "doc": "This returns a collection of dedicated hosts that are valid for a given image template. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "imageTemplateId",
                        "type": "int",
                        "doc": "A [[SoftLayer_Virtual_Guest_Block_Device_Template_Group]] id to get dedicated hosts for"
                    }
                ],
                "static": true
            },
            "getDiskUsageMetricDataByDate": {
                "name": "getDiskUsageMetricDataByDate",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve disk usage data on a [[SoftLayer_Virtual_Guest|Cloud Computing Instance]] image for the time range you provide from the Metric Tracking Object System and Legacy Data Warehouse. Each data entry objects contain ''dateTime'' and ''counter'' properties. ''dateTime'' property indicates the time that the disk usage data was measured and ''counter'' property holds the disk usage in bytes. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ],
                "static": true
            },
            "getDiskUsageMetricDataFromLegacyByDate": {
                "name": "getDiskUsageMetricDataFromLegacyByDate",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve disk usage data on a [[SoftLayer_Virtual_Guest|Cloud Computing Instance]] image for the time range you provide from the Legacy Data Warehouse.  Each data entry objects contain ''dateTime'' and ''counter'' properties. ''dateTime'' property indicates the time that the disk usage data was measured and ''counter'' property holds the disk usage in bytes. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ],
                "static": true
            },
            "getDiskUsageMetricDataFromMetricTrackingObjectSystemByDate": {
                "name": "getDiskUsageMetricDataFromMetricTrackingObjectSystemByDate",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve disk usage data on a [[SoftLayer_Virtual_Guest|Cloud Computing Instance]] image for the time range you provide from the Metric Tracking Object System.  Each data entry object contains ''dateTime'' and ''counter'' properties.  ''dateTime'' property indicates the time that the disk usage data was measured and ''counter'' property holds the disk usage in bytes. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ],
                "static": true
            },
            "getDiskUsageMetricImageByDate": {
                "name": "getDiskUsageMetricImageByDate",
                "type": "SoftLayer_Container_Account_Graph_Outputs",
                "doc": "[DEPRECATED] JpGraph has been removed, so this method is no longer functional. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ],
                "static": true
            },
            "getExecutiveSummaryPdf": {
                "name": "getExecutiveSummaryPdf",
                "type": "base64Binary",
                "doc": "This method will return a PDF of the specified report, with the specified period within the start and end dates. The pdfType must be one of 'snapshot', or 'historical'. Possible historicalType parameters are 'monthly', 'yearly', and 'quarterly'. Start and end dates should be in ISO 8601 date format. ",
                "parameters": [
                    {
                        "name": "pdfType",
                        "type": "string",
                        "doc": "type of PDF report: snapshot, historical"
                    },
                    {
                        "name": "historicalType",
                        "type": "string",
                        "doc": "type of historical report: monthly, yearly, quarterly"
                    },
                    {
                        "name": "startDate",
                        "type": "string",
                        "doc": "start date of the historical report"
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "doc": "end date of the historical report"
                    }
                ],
                "static": true
            },
            "getFlexibleCreditProgramInfo": {
                "name": "getFlexibleCreditProgramInfo",
                "type": "SoftLayer_Container_Account_Discount_Program",
                "doc": "[DEPRECATED] Please use SoftLayer_Account::getFlexibleCreditProgramsInfo. \n\nThis method will return a [[SoftLayer_Container_Account_Discount_Program]] object containing the Flexible Credit Program information for this account. To be considered an active participant, the account must have an enrollment record with a monthly credit amount set and the current date must be within the range defined by the enrollment and graduation date. The forNextBillCycle parameter can be set to true to return a SoftLayer_Container_Account_Discount_Program object with information with relation to the next bill cycle. The forNextBillCycle parameter defaults to false. Please note that all discount amount entries are reported as pre-tax amounts and the legacy tax fields in the [[SoftLayer_Container_Account_Discount_Program]] are deprecated. ",
                "parameters": [
                    {
                        "name": "forNextBillCycle",
                        "type": "boolean",
                        "doc": "<<< EOT",
                        "defaultValue": false
                    }
                ],
                "static": true
            },
            "getFlexibleCreditProgramsInfo": {
                "name": "getFlexibleCreditProgramsInfo",
                "type": "SoftLayer_Container_Account_Discount_Program_Collection",
                "doc": "This method will return a [[SoftLayer_Container_Account_Discount_Program_Collection]] object containing information on all of the Flexible Credit Programs your account is enrolled in. To be considered an active participant, the account must have at least one enrollment record with a monthly credit amount set and the current date must be within the range defined by the enrollment and graduation date. The forNextBillCycle parameter can be set to true to return a SoftLayer_Container_Account_Discount_Program_Collection object with information with relation to the next bill cycle. The forNextBillCycle parameter defaults to false. Please note that all discount amount entries are reported as pre-tax amounts. ",
                "parameters": [
                    {
                        "name": "nextBillingCycleFlag",
                        "type": "boolean",
                        "doc": "Flag indicating whether the information in the container should be in the next bill cycle.",
                        "defaultValue": false
                    }
                ],
                "static": true
            },
            "getHardwarePools": {
                "name": "getHardwarePools",
                "type": "SoftLayer_Container_Hardware_Pool_Details",
                "typeArray": true,
                "doc": "Return a collection of managed hardware pools.",
                "static": true
            },
            "getHistoricalBackupGraph": {
                "name": "getHistoricalBackupGraph",
                "type": "SoftLayer_Container_Account_Graph_Outputs",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "timestamp of the starting date"
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "timestamp of the ending date"
                    }
                ],
                "static": true
            },
            "getHistoricalBandwidthGraph": {
                "name": "getHistoricalBandwidthGraph",
                "type": "SoftLayer_Container_Account_Graph_Outputs",
                "doc": "[DEPRECATED] This method will return a SoftLayer_Container_Account_Graph_Outputs object containing a base64 string PNG image of a line graph of bandwidth statistics given the start and end dates. The start and end dates should be valid ISO 8601 date formatted strings. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "timestamp of the starting date"
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "timestamp of the ending date"
                    }
                ],
                "static": true
            },
            "getHistoricalTicketGraph": {
                "name": "getHistoricalTicketGraph",
                "type": "SoftLayer_Container_Account_Graph_Outputs",
                "doc": "Given the start and end dates, this method will return a pie chart of ticket statistics in the form of SoftLayer_Container_Account_Graph_Outputs object with a base64 PNG string. If an error occurs the graphError parameter will be populated. Possible errors include: SoftLayer_Exception_Public Thrown if an invalid start or end date is provided. SoftLayer_Exception Thrown if there is an error connecting to HBase. SoftLayer_Exception Thrown if there is no data available for the specified date range. SoftLayer_Exception Thrown if there is an error retrieving data or generating the graph. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "timestamp of the starting date"
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "timestamp of the ending date"
                    }
                ],
                "static": true
            },
            "getHistoricalUptimeGraph": {
                "name": "getHistoricalUptimeGraph",
                "type": "SoftLayer_Container_Account_Graph_Outputs",
                "doc": "The graph image is returned as a base64 PNG string. Start and end dates should be formatted using the ISO 8601 date standard. If there is an error retrieving graph data or generating the graph string a graphError attribute will be returned. The graphError attribute may contain any of the following error messages: SoftLayer_Exception_Public Thrown if an invalid start or end date is provided. SoftLayer_Exception Thrown if there is an error connecting to HBase. SoftLayer_Exception Thrown if there is no data available for the specified date range. SoftLayer_Exception Thrown if there is an error retrieving data or generating the graph. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "timestamp of the starting date"
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "timestamp of the ending date"
                    }
                ],
                "static": true
            },
            "getLargestAllowedSubnetCidr": {
                "name": "getLargestAllowedSubnetCidr",
                "type": "int",
                "doc": "Computes the number of available public secondary IP addresses, aligned to a subnet size. ",
                "parameters": [
                    {
                        "name": "numberOfHosts",
                        "type": "int",
                        "doc": "Number of hosts to adjust the current server count by",
                        "defaultValue": 1
                    },
                    {
                        "name": "locationId",
                        "type": "int",
                        "doc": "Deprecated",
                        "defaultValue": 3
                    }
                ],
                "static": true
            },
            "getNetAppActiveAccountLicenseKeys": {
                "name": "getNetAppActiveAccountLicenseKeys",
                "type": "string",
                "typeArray": true,
                "doc": "This returns a collection of active NetApp software account license keys.",
                "static": true
            },
            "getNextInvoiceExcel": {
                "name": "getNextInvoiceExcel",
                "type": "base64Binary",
                "doc": "Return an account's next invoice in a Microsoft excel format. The \"next invoice\" is what a customer will be billed on their next invoice, assuming no changes are made. Currently this does not include Bandwidth Pooling charges.",
                "parameters": [
                    {
                        "name": "documentCreateDate",
                        "type": "dateTime",
                        "doc": "Retrieves Excel on file created after this date. (optional)",
                        "defaultValue": null
                    }
                ],
                "static": true
            },
            "getNextInvoicePdf": {
                "name": "getNextInvoicePdf",
                "type": "base64Binary",
                "doc": "Return an account's next invoice in PDF format. The \"next invoice\" is what a customer will be billed on their next invoice, assuming no changes are made. Currently this does not include Bandwidth Pooling charges.",
                "parameters": [
                    {
                        "name": "documentCreateDate",
                        "type": "dateTime",
                        "doc": "Retrieves PDF on file created after this date. (optional)",
                        "defaultValue": null
                    }
                ],
                "static": true
            },
            "getNextInvoicePdfDetailed": {
                "name": "getNextInvoicePdfDetailed",
                "type": "base64Binary",
                "doc": "Return an account's next invoice detailed portion in PDF format. The \"next invoice\" is what a customer will be billed on their next invoice, assuming no changes are made. Currently this does not include Bandwidth Pooling charges.",
                "parameters": [
                    {
                        "name": "documentCreateDate",
                        "type": "dateTime",
                        "doc": "Retrieves PDF Details on file created after this date. (optional)",
                        "defaultValue": null
                    }
                ],
                "static": true
            },
            "getNextInvoiceZeroFeeItemCounts": {
                "name": "getNextInvoiceZeroFeeItemCounts",
                "type": "SoftLayer_Container_Product_Item_Category_ZeroFee_Count",
                "typeArray": true,
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account",
                "doc": "getObject retrieves the SoftLayer_Account object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Account service. You can only retrieve the account that your portal user is assigned to. ",
                "filterable": true,
                "maskable": true,
                "static": true
            },
            "getPendingCreditCardChangeRequestData": {
                "name": "getPendingCreditCardChangeRequestData",
                "type": "SoftLayer_Container_Account_Payment_Method_CreditCard",
                "typeArray": true,
                "doc": "Before being approved for general use, a credit card must be approved by a SoftLayer agent. Once a credit card change request has been either approved or denied, the change request will no longer appear in the list of pending change requests. This method will return a list of all pending change requests as well as a portion of the data from the original request. ",
                "static": true
            },
            "getReferralPartnerCommissionForecast": {
                "name": "getReferralPartnerCommissionForecast",
                "type": "SoftLayer_Container_Referral_Partner_Commission",
                "typeArray": true,
                "static": true
            },
            "getReferralPartnerCommissionHistory": {
                "name": "getReferralPartnerCommissionHistory",
                "type": "SoftLayer_Container_Referral_Partner_Commission",
                "typeArray": true,
                "static": true
            },
            "getReferralPartnerCommissionPending": {
                "name": "getReferralPartnerCommissionPending",
                "type": "SoftLayer_Container_Referral_Partner_Commission",
                "typeArray": true,
                "static": true
            },
            "getSharedBlockDeviceTemplateGroups": {
                "name": "getSharedBlockDeviceTemplateGroups",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "typeArray": true,
                "doc": "This method returns the [[SoftLayer_Virtual_Guest_Block_Device_Template_Group]] objects that have been shared with this account ",
                "limitable": true,
                "filterable": true,
                "maskable": true,
                "static": true
            },
            "getTechIncubatorProgramInfo": {
                "name": "getTechIncubatorProgramInfo",
                "type": "SoftLayer_Container_Account_Discount_Program",
                "doc": "This method will return a SoftLayer_Container_Account_Discount_Program object containing the Technology Incubator Program information for this account. To be considered an active participant, the account must have an enrollment record with a monthly credit amount set and the current date must be within the range defined by the enrollment and graduation date. The forNextBillCycle parameter can be set to true to return a SoftLayer_Container_Account_Discount_Program object with information with relation to the next bill cycle. The forNextBillCycle parameter defaults to false. ",
                "parameters": [
                    {
                        "name": "forNextBillCycle",
                        "type": "boolean",
                        "doc": "Boolean flag to indicate whether the information in the container should be in",
                        "defaultValue": false
                    }
                ],
                "static": true
            },
            "getThirdPartyPoliciesAcceptanceStatus": {
                "name": "getThirdPartyPoliciesAcceptanceStatus",
                "type": "SoftLayer_Container_Policy_Acceptance",
                "typeArray": true,
                "doc": "Returns multiple [[SoftLayer_Container_Policy_Acceptance]] that represent the acceptance status of the applicable third-party policies for this account. ",
                "static": true
            },
            "getValidSecurityCertificateEntries": {
                "name": "getValidSecurityCertificateEntries",
                "type": "SoftLayer_Security_Certificate_Entry",
                "typeArray": true,
                "doc": "Retrieve a list of valid (non-expired) security certificates without the sensitive certificate information. This allows non-privileged users to view and select security certificates when configuring associated services. ",
                "static": true
            },
            "getVmWareActiveAccountLicenseKeys": {
                "name": "getVmWareActiveAccountLicenseKeys",
                "type": "string",
                "typeArray": true,
                "doc": "This returns a collection of active VMware software account license keys.",
                "static": true
            },
            "getWindowsUpdateStatus": {
                "name": "getWindowsUpdateStatus",
                "type": "SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_Status",
                "typeArray": true,
                "doc": "Retrieve a list of an account's hardware's Windows Update status. This list includes which servers have available updates, which servers require rebooting due to updates, which servers have failed retrieving updates, and which servers have failed to communicate with the SoftLayer private Windows Software Update Services server. ",
                "static": true
            },
            "hasAttribute": {
                "name": "hasAttribute",
                "type": "boolean",
                "doc": "Determine if an account has an [[SoftLayer_Account_Attribute|attribute]] associated with it. hasAttribute() returns false if the attribute does not exist or if it does not have a value. ",
                "parameters": [
                    {
                        "name": "attributeType",
                        "type": "string",
                        "doc": "The [[SoftLayer_Account_Attribute_Type]] key name associated with the account attribute you wish to determine exists."
                    }
                ],
                "static": true
            },
            "hourlyInstanceLimit": {
                "name": "hourlyInstanceLimit",
                "type": "int",
                "doc": "This method will return the limit (number) of hourly services the account is allowed to have. ",
                "static": true
            },
            "hourlyServerLimit": {
                "name": "hourlyServerLimit",
                "type": "int",
                "doc": "This method will return the limit (number) of hourly bare metal servers the account is allowed to have. ",
                "static": true
            },
            "isActiveVmwareCustomer": {
                "name": "isActiveVmwareCustomer",
                "type": "boolean",
                "static": true
            },
            "isEligibleForLocalCurrencyProgram": {
                "name": "isEligibleForLocalCurrencyProgram",
                "type": "boolean",
                "doc": "Returns true if this account is eligible for the local currency program, false otherwise. ",
                "static": true
            },
            "isEligibleToLinkWithPaas": {
                "name": "isEligibleToLinkWithPaas",
                "type": "boolean",
                "doc": "Returns true if this account is eligible to link with PaaS. False otherwise. ",
                "static": true
            },
            "linkExternalAccount": {
                "name": "linkExternalAccount",
                "type": "void",
                "doc": "This method will link this SoftLayer account with the provided external account. ",
                "parameters": [
                    {
                        "name": "externalAccountId",
                        "type": "string",
                        "doc": "The ID of the external account to link to this SoftLayer account"
                    },
                    {
                        "name": "authorizationToken",
                        "type": "string",
                        "doc": "Access token for any authorization that needs to happen"
                    },
                    {
                        "name": "externalServiceProviderKey",
                        "type": "string",
                        "doc": "Key name of the service provider"
                    }
                ],
                "static": true
            },
            "removeAlternateCreditCard": {
                "name": "removeAlternateCreditCard",
                "type": "boolean",
                "static": true
            },
            "requestCreditCardChange": {
                "name": "requestCreditCardChange",
                "type": "SoftLayer_Billing_Payment_Card_ChangeRequest",
                "doc": "Retrieve the record data associated with the submission of a Credit Card Change Request. Softlayer customers are permitted to request a change in Credit Card information. Part of the process calls for an attempt by SoftLayer to submit at $1.00 charge to the financial institution backing the credit card as a means of verifying that the information provided in the change request is valid.  The data associated with this change request returned to the calling function. \n\nIf the onlyChangeNicknameFlag parameter is set to true, the nickname of the credit card will be changed immediately without requiring approval by an agent.  To change the nickname of the active payment method, pass the empty string for paymentRoleName.  To change the nickname for the alternate credit card, pass ALTERNATE_CREDIT_CARD as the paymentRoleName.  vatId must be set, but the value will not be used and the empty string is acceptable. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Billing_Payment_Card_ChangeRequest",
                        "doc": "Details required to request a credit card change."
                    },
                    {
                        "name": "vatId",
                        "type": "string",
                        "doc": "EU member states VAT ID."
                    },
                    {
                        "name": "paymentRoleName",
                        "type": "string",
                        "doc": "keyName of the card's payment role",
                        "defaultValue": null
                    },
                    {
                        "name": "onlyChangeNicknameFlag",
                        "type": "boolean",
                        "defaultValue": false
                    }
                ],
                "static": true
            },
            "requestManualPayment": {
                "name": "requestManualPayment",
                "type": "SoftLayer_Billing_Payment_Card_ManualPayment",
                "doc": "Retrieve the record data associated with the submission of a Manual Payment Request. Softlayer customers are permitted to request a manual one-time payment at a minimum amount of $2.00. Customers may submit a Credit Card Payment (Mastercard, Visa, American Express) or a PayPal payment. For Credit Card Payments, SoftLayer engages the credit card financial institution to submit the payment request.  The financial institution's response and other data associated with the transaction are returned to the calling function.  In the case of PayPal Payments, SoftLayer engages the PayPal system to initiate the PayPal payment sequence.  The applicable data generated during the request is returned to the calling function. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Billing_Payment_Card_ManualPayment",
                        "doc": "Details required to request a manual payment."
                    }
                ],
                "static": true
            },
            "requestManualPaymentUsingCreditCardOnFile": {
                "name": "requestManualPaymentUsingCreditCardOnFile",
                "type": "SoftLayer_Billing_Payment_Card_ManualPayment",
                "doc": "Retrieve the record data associated with the submission of a Manual Payment Request for a manual payment using a credit card which is on file and does not require an approval process.  Softlayer customers are permitted to request a manual one-time payment at a minimum amount of $2.00.  Customers may use an existing Credit Card on file (Mastercard, Visa, American Express).  SoftLayer engages the credit card financial institution to submit the payment request.  The financial institution's response and other data associated with the transaction are returned to the calling function.  The applicable data generated during the request is returned to the calling function. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "amount",
                        "type": "string",
                        "doc": "dollar amount which will be charged to the specified credit card"
                    },
                    {
                        "name": "payWithAlternateCardFlag",
                        "type": "boolean",
                        "doc": "if true, the charge will be applied to the alternate card on file",
                        "defaultValue": false
                    },
                    {
                        "name": "note",
                        "type": "string",
                        "doc": "Optional note which will be added to the manual payment request",
                        "defaultValue": null
                    }
                ],
                "static": true
            },
            "setAbuseEmails": {
                "name": "setAbuseEmails",
                "type": "boolean",
                "doc": "Set this account's abuse emails. Takes an array of email addresses as strings. ",
                "parameters": [
                    {
                        "name": "emails",
                        "type": "string",
                        "typeArray": true
                    }
                ],
                "static": true
            },
            "setManagedPoolQuantity": {
                "name": "setManagedPoolQuantity",
                "type": "int",
                "doc": "Set the total number of servers that are to be maintained in the given pool. When a server is ordered a new server will be put in the pool to replace the server that was removed to fill an order to maintain the desired pool availability quantity. ",
                "parameters": [
                    {
                        "name": "poolKeyName",
                        "type": "string",
                        "doc": "$poolKeyName"
                    },
                    {
                        "name": "backendRouter",
                        "type": "string",
                        "doc": "$backendRouter"
                    },
                    {
                        "name": "quantity",
                        "type": "int",
                        "doc": "$quantity"
                    }
                ],
                "static": true
            },
            "setVlanSpan": {
                "name": "setVlanSpan",
                "type": "boolean",
                "doc": "Set the flag that enables or disables automatic private network VLAN spanning for a SoftLayer customer account. Enabling VLAN spanning allows an account's servers to talk on the same broadcast domain even if they reside within different private vlans. ",
                "parameters": [
                    {
                        "name": "enabled",
                        "type": "boolean",
                        "doc": "Whether or not to enable private VLAN spanning on an account.",
                        "defaultValue": false
                    }
                ],
                "static": true
            },
            "swapCreditCards": {
                "name": "swapCreditCards",
                "type": "boolean",
                "static": true
            },
            "syncCurrentUserPopulationWithPaas": {
                "name": "syncCurrentUserPopulationWithPaas",
                "type": "void",
                "static": true
            },
            "updateVpnUsersForResource": {
                "name": "updateVpnUsersForResource",
                "type": "boolean",
                "doc": "[DEPRECATED] This method has been deprecated and will simply return false. ",
                "parameters": [
                    {
                        "name": "objectId",
                        "type": "int"
                    },
                    {
                        "name": "objectType",
                        "type": "string"
                    }
                ],
                "static": true
            },
            "validate": {
                "name": "validate",
                "type": "string",
                "typeArray": true,
                "doc": "This method will validate the following account fields. Included are the allowed characters for each field.<br> <strong>Company Name (required):</strong> alphabet, numbers, space, period, dash, octothorpe, forward slash, comma, colon, at sign, ampersand, underscore, apostrophe, parenthesis, exclamation point. (Note: may not contain an email address)<br> <strong>First Name (required):</strong> alphabet, space, period, dash, comma, apostrophe.<br> <strong>Last Name (required):</strong> alphabet, space, period, dash, comma, apostrophe.<br> <strong>Email (required):</strong> Validates e-mail addresses against the syntax in RFC 822.<br> <strong>Address 1 (required):</strong> alphabet, numbers, space, period, dash, octothorpe, forward slash, comma, colon, at sign, ampersand, underscore, apostrophe, parentheses. (Note: may not contain an email address)<br> <strong>Address 2 (required):</strong> alphabet, numbers, space, period, dash, octothorpe, forward slash, comma, colon, at sign, ampersand, underscore, apostrophe, parentheses. (Note: may not contain an email address)<br> <strong>City (required):</strong> alphabet, numbers, space, period, dash, apostrophe, forward slash, comma, parenthesis.<br> <strong>State (required):</strong> Required if country is US, Brazil, Canada or India. Must be valid Alpha-2 ISO 3166-1 state code for that country.<br> <strong>Postal Code (required):</strong> alphabet, numbers, dash, space.<br> <strong>Country (required):</strong> alphabet, numbers. Must be valid Alpha-2 ISO 3166-1 country code.<br> <strong>Office Phone (required):</strong> alphabet, numbers, space, period, dash, parenthesis, plus sign.<br> <strong>Alternate Phone:</strong> alphabet, numbers, space, period, dash, parenthesis, plus sign.<br> <strong>Fax Phone:</strong> alphabet, numbers, space, period, dash, parenthesis, plus sign.<br> ",
                "static": true,
                "parameters": [
                    {
                        "name": "account",
                        "type": "SoftLayer_Account"
                    }
                ]
            },
            "validateManualPaymentAmount": {
                "name": "validateManualPaymentAmount",
                "type": "boolean",
                "doc": "This method checks global and account specific requirements and returns true if the dollar amount entered is acceptable for this account and false otherwise. Please note the dollar amount is in USD. ",
                "parameters": [
                    {
                        "name": "amount",
                        "type": "string"
                    }
                ],
                "static": true
            }
        },
        "typeDoc": "The SoftLayer_Account data type contains general information relating to a single SoftLayer customer account. Personal information in this type such as names, addresses, and phone numbers are assigned to the account only and not to users belonging to the account. The SoftLayer_Account data type contains a number of relational properties that are used by the SoftLayer customer portal to quickly present a variety of account related services to it's users. \n\nSoftLayer customers are unable to change their company account information in the portal or the API. If you need to change this information please open a sales ticket in our customer portal and our account management staff will assist you. ",
        "properties": {
            "abuseEmail": {
                "name": "abuseEmail",
                "type": "string",
                "form": "relational",
                "doc": "An email address that is responsible for abuse and legal inquiries on behalf of an account. For instance, new legal and abuse tickets are sent to this address."
            },
            "abuseEmails": {
                "name": "abuseEmails",
                "type": "SoftLayer_Account_AbuseEmail",
                "form": "relational",
                "typeArray": true,
                "doc": "Email addresses that are responsible for abuse and legal inquiries on behalf of an account. For instance, new legal and abuse tickets are sent to these addresses."
            },
            "accountContacts": {
                "name": "accountContacts",
                "type": "SoftLayer_Account_Contact",
                "form": "relational",
                "typeArray": true,
                "doc": "The account contacts on an account."
            },
            "accountLicenses": {
                "name": "accountLicenses",
                "type": "SoftLayer_Software_AccountLicense",
                "form": "relational",
                "typeArray": true,
                "doc": "The account software licenses owned by an account"
            },
            "accountLinks": {
                "name": "accountLinks",
                "type": "SoftLayer_Account_Link",
                "form": "relational",
                "typeArray": true
            },
            "accountStatus": {
                "name": "accountStatus",
                "type": "SoftLayer_Account_Status",
                "form": "relational",
                "doc": "An account's status presented in a more detailed data type."
            },
            "activeAccountDiscountBillingItem": {
                "name": "activeAccountDiscountBillingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item associated with an account's monthly discount."
            },
            "activeAccountLicenses": {
                "name": "activeAccountLicenses",
                "type": "SoftLayer_Software_AccountLicense",
                "form": "relational",
                "typeArray": true,
                "doc": "The active account software licenses owned by an account"
            },
            "activeAddresses": {
                "name": "activeAddresses",
                "type": "SoftLayer_Account_Address",
                "form": "relational",
                "typeArray": true,
                "doc": "The active address(es) that belong to an account."
            },
            "activeAgreements": {
                "name": "activeAgreements",
                "type": "SoftLayer_Account_Agreement",
                "form": "relational",
                "typeArray": true,
                "doc": "All active agreements for an account"
            },
            "activeBillingAgreements": {
                "name": "activeBillingAgreements",
                "type": "SoftLayer_Account_Agreement",
                "form": "relational",
                "typeArray": true,
                "doc": "All billing agreements for an account"
            },
            "activeCatalystEnrollment": {
                "name": "activeCatalystEnrollment",
                "type": "SoftLayer_Catalyst_Enrollment",
                "form": "relational"
            },
            "activeColocationContainers": {
                "name": "activeColocationContainers",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The account's active top level colocation containers."
            },
            "activeFlexibleCreditEnrollment": {
                "name": "activeFlexibleCreditEnrollment",
                "type": "SoftLayer_FlexibleCredit_Enrollment",
                "form": "relational",
                "doc": "[Deprecated] Please use SoftLayer_Account::activeFlexibleCreditEnrollments."
            },
            "activeFlexibleCreditEnrollments": {
                "name": "activeFlexibleCreditEnrollments",
                "type": "SoftLayer_FlexibleCredit_Enrollment",
                "form": "relational",
                "typeArray": true
            },
            "activeNotificationSubscribers": {
                "name": "activeNotificationSubscribers",
                "type": "SoftLayer_Notification_Subscriber",
                "form": "relational",
                "typeArray": true
            },
            "activeQuotes": {
                "name": "activeQuotes",
                "type": "SoftLayer_Billing_Order_Quote",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's non-expired quotes."
            },
            "activeReservedCapacityAgreements": {
                "name": "activeReservedCapacityAgreements",
                "type": "SoftLayer_Account_Agreement",
                "form": "relational",
                "typeArray": true,
                "doc": "Active reserved capacity agreements for an account"
            },
            "activeVirtualLicenses": {
                "name": "activeVirtualLicenses",
                "type": "SoftLayer_Software_VirtualLicense",
                "form": "relational",
                "typeArray": true,
                "doc": "The virtual software licenses controlled by an account"
            },
            "adcLoadBalancers": {
                "name": "adcLoadBalancers",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated load balancers."
            },
            "addresses": {
                "name": "addresses",
                "type": "SoftLayer_Account_Address",
                "form": "relational",
                "typeArray": true,
                "doc": "All the address(es) that belong to an account."
            },
            "affiliateId": {
                "name": "affiliateId",
                "type": "string",
                "form": "relational",
                "doc": "An affiliate identifier associated with the customer account. "
            },
            "allBillingItems": {
                "name": "allBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items that will be on an account's next invoice."
            },
            "allCommissionBillingItems": {
                "name": "allCommissionBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items that will be on an account's next invoice."
            },
            "allRecurringTopLevelBillingItems": {
                "name": "allRecurringTopLevelBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items that will be on an account's next invoice."
            },
            "allRecurringTopLevelBillingItemsUnfiltered": {
                "name": "allRecurringTopLevelBillingItemsUnfiltered",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items that will be on an account's next invoice. Does not consider associated items."
            },
            "allSubnetBillingItems": {
                "name": "allSubnetBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items that will be on an account's next invoice."
            },
            "allTopLevelBillingItems": {
                "name": "allTopLevelBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "All billing items of an account."
            },
            "allTopLevelBillingItemsUnfiltered": {
                "name": "allTopLevelBillingItemsUnfiltered",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items that will be on an account's next invoice. Does not consider associated items."
            },
            "allowIbmIdSilentMigrationFlag": {
                "name": "allowIbmIdSilentMigrationFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates whether this account is allowed to silently migrate to use IBMid Authentication."
            },
            "allowsBluemixAccountLinkingFlag": {
                "name": "allowsBluemixAccountLinkingFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Flag indicating if this account can be linked with Bluemix."
            },
            "applicationDeliveryControllers": {
                "name": "applicationDeliveryControllers",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated application delivery controller records."
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Account_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "The account attribute values for a SoftLayer customer account."
            },
            "availablePublicNetworkVlans": {
                "name": "availablePublicNetworkVlans",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "The public network VLANs assigned to an account."
            },
            "balance": {
                "name": "balance",
                "type": "decimal",
                "form": "relational",
                "doc": "The account balance of a SoftLayer customer account. An account's balance is the amount of money owed to SoftLayer by the account holder, returned as a floating point number with two decimal places, measured in US Dollars ($USD). A negative account balance means the account holder has overpaid and is owed money by SoftLayer."
            },
            "bandwidthAllotments": {
                "name": "bandwidthAllotments",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "typeArray": true,
                "doc": "The bandwidth allotments for an account."
            },
            "bandwidthAllotmentsOverAllocation": {
                "name": "bandwidthAllotmentsOverAllocation",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "typeArray": true,
                "doc": "The bandwidth allotments for an account currently over allocation."
            },
            "bandwidthAllotmentsProjectedOverAllocation": {
                "name": "bandwidthAllotmentsProjectedOverAllocation",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "typeArray": true,
                "doc": "The bandwidth allotments for an account projected to go over allocation."
            },
            "bareMetalInstances": {
                "name": "bareMetalInstances",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated bare metal server objects."
            },
            "billingAgreements": {
                "name": "billingAgreements",
                "type": "SoftLayer_Account_Agreement",
                "form": "relational",
                "typeArray": true,
                "doc": "All billing agreements for an account"
            },
            "billingInfo": {
                "name": "billingInfo",
                "type": "SoftLayer_Billing_Info",
                "form": "relational",
                "doc": "An account's billing information."
            },
            "blockDeviceTemplateGroups": {
                "name": "blockDeviceTemplateGroups",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "Private template group objects (parent and children) and the shared template group objects (parent only) for an account."
            },
            "bluemixAccountLink": {
                "name": "bluemixAccountLink",
                "type": "SoftLayer_Account_Link_Bluemix",
                "form": "relational",
                "doc": "The Bluemix account link associated with this SoftLayer account, if one exists."
            },
            "bluemixLinkedFlag": {
                "name": "bluemixLinkedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Returns true if this account is linked to IBM Bluemix, false if not."
            },
            "brand": {
                "name": "brand",
                "type": "SoftLayer_Brand",
                "form": "relational"
            },
            "brandAccountFlag": {
                "name": "brandAccountFlag",
                "type": "boolean",
                "form": "relational"
            },
            "brandKeyName": {
                "name": "brandKeyName",
                "type": "string",
                "form": "relational",
                "doc": "The brand keyName."
            },
            "businessPartner": {
                "name": "businessPartner",
                "type": "SoftLayer_Account_Business_Partner",
                "form": "relational",
                "doc": "The Business Partner details for the account. Country Enterprise Code, Channel, Segment, Reseller Level."
            },
            "canOrderAdditionalVlansFlag": {
                "name": "canOrderAdditionalVlansFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "[DEPRECATED] All accounts may order VLANs."
            },
            "carts": {
                "name": "carts",
                "type": "SoftLayer_Billing_Order_Quote",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's active carts."
            },
            "catalystEnrollments": {
                "name": "catalystEnrollments",
                "type": "SoftLayer_Catalyst_Enrollment",
                "form": "relational",
                "typeArray": true
            },
            "closedTickets": {
                "name": "closedTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "All closed tickets associated with an account."
            },
            "datacentersWithSubnetAllocations": {
                "name": "datacentersWithSubnetAllocations",
                "type": "SoftLayer_Location",
                "form": "relational",
                "typeArray": true,
                "doc": "Datacenters which contain subnets that the account has access to route."
            },
            "dedicatedHosts": {
                "name": "dedicatedHosts",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated virtual dedicated host objects."
            },
            "disablePaymentProcessingFlag": {
                "name": "disablePaymentProcessingFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating whether payments are processed for this account."
            },
            "displaySupportRepresentativeAssignments": {
                "name": "displaySupportRepresentativeAssignments",
                "type": "SoftLayer_Account_Attachment_Employee",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer employees that an account is assigned to."
            },
            "domainRegistrations": {
                "name": "domainRegistrations",
                "type": "SoftLayer_Dns_Domain_Registration",
                "form": "relational",
                "typeArray": true
            },
            "domains": {
                "name": "domains",
                "type": "SoftLayer_Dns_Domain",
                "form": "relational",
                "typeArray": true,
                "doc": "The DNS domains associated with an account."
            },
            "domainsWithoutSecondaryDnsRecords": {
                "name": "domainsWithoutSecondaryDnsRecords",
                "type": "SoftLayer_Dns_Domain",
                "form": "relational",
                "typeArray": true,
                "doc": "The DNS domains associated with an account that were not created as a result of a secondary DNS zone transfer."
            },
            "euSupportedFlag": {
                "name": "euSupportedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Boolean flag dictating whether or not this account has the EU Supported flag. This flag indicates that this account uses IBM Cloud services to process EU citizen's personal data."
            },
            "evaultCapacityGB": {
                "name": "evaultCapacityGB",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total capacity of Legacy EVault Volumes on an account, in GB."
            },
            "evaultMasterUsers": {
                "name": "evaultMasterUsers",
                "type": "SoftLayer_Account_Password",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's master EVault user. This is only used when an account has EVault service."
            },
            "evaultNetworkStorage": {
                "name": "evaultNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated EVault storage volumes."
            },
            "expiredSecurityCertificates": {
                "name": "expiredSecurityCertificates",
                "type": "SoftLayer_Security_Certificate",
                "form": "relational",
                "typeArray": true,
                "doc": "Stored security certificates that are expired (ie. SSL)"
            },
            "facilityLogs": {
                "name": "facilityLogs",
                "type": "SoftLayer_User_Access_Facility_Log",
                "form": "relational",
                "typeArray": true,
                "doc": "Logs of who entered a colocation area which is assigned to this account, or when a user under this account enters a datacenter."
            },
            "fileBlockBetaAccessFlag": {
                "name": "fileBlockBetaAccessFlag",
                "type": "boolean",
                "form": "relational"
            },
            "flexibleCreditEnrollments": {
                "name": "flexibleCreditEnrollments",
                "type": "SoftLayer_FlexibleCredit_Enrollment",
                "form": "relational",
                "typeArray": true,
                "doc": "All of the account's current and former Flexible Credit enrollments."
            },
            "forcePaasAccountLinkDate": {
                "name": "forcePaasAccountLinkDate",
                "type": "string",
                "form": "relational",
                "doc": "Timestamp representing the point in time when an account is required to link with PaaS."
            },
            "globalIpRecords": {
                "name": "globalIpRecords",
                "type": "SoftLayer_Network_Subnet_IpAddress_Global",
                "form": "relational",
                "typeArray": true
            },
            "globalIpv4Records": {
                "name": "globalIpv4Records",
                "type": "SoftLayer_Network_Subnet_IpAddress_Global",
                "form": "relational",
                "typeArray": true
            },
            "globalIpv6Records": {
                "name": "globalIpv6Records",
                "type": "SoftLayer_Network_Subnet_IpAddress_Global",
                "form": "relational",
                "typeArray": true
            },
            "globalLoadBalancerAccounts": {
                "name": "globalLoadBalancerAccounts",
                "type": "SoftLayer_Network_LoadBalancer_Global_Account",
                "form": "relational",
                "typeArray": true,
                "doc": "[Deprecated] The global load balancer accounts for a softlayer customer account."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated hardware objects."
            },
            "hardwareOverBandwidthAllocation": {
                "name": "hardwareOverBandwidthAllocation",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated hardware objects currently over bandwidth allocation."
            },
            "hardwareProjectedOverBandwidthAllocation": {
                "name": "hardwareProjectedOverBandwidthAllocation",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated hardware objects projected to go over bandwidth allocation."
            },
            "hardwareWithCpanel": {
                "name": "hardwareWithCpanel",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that has the cPanel web hosting control panel installed."
            },
            "hardwareWithHelm": {
                "name": "hardwareWithHelm",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that has the Helm web hosting control panel installed."
            },
            "hardwareWithMcafee": {
                "name": "hardwareWithMcafee",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that has McAfee Secure software components."
            },
            "hardwareWithMcafeeAntivirusRedhat": {
                "name": "hardwareWithMcafeeAntivirusRedhat",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that has McAfee Secure AntiVirus for Redhat software components."
            },
            "hardwareWithMcafeeAntivirusWindows": {
                "name": "hardwareWithMcafeeAntivirusWindows",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that has McAfee Secure AntiVirus for Windows software components."
            },
            "hardwareWithMcafeeIntrusionDetectionSystem": {
                "name": "hardwareWithMcafeeIntrusionDetectionSystem",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that has McAfee Secure Intrusion Detection System software components."
            },
            "hardwareWithPlesk": {
                "name": "hardwareWithPlesk",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that has the Plesk web hosting control panel installed."
            },
            "hardwareWithQuantastor": {
                "name": "hardwareWithQuantastor",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that has the QuantaStor storage system installed."
            },
            "hardwareWithUrchin": {
                "name": "hardwareWithUrchin",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that has the Urchin web traffic analytics package installed."
            },
            "hardwareWithWindows": {
                "name": "hardwareWithWindows",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware associated with an account that is running a version of the Microsoft Windows operating system."
            },
            "hasEvaultBareMetalRestorePluginFlag": {
                "name": "hasEvaultBareMetalRestorePluginFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Return 1 if one of the account's hardware has the EVault Bare Metal Server Restore Plugin otherwise 0."
            },
            "hasIderaBareMetalRestorePluginFlag": {
                "name": "hasIderaBareMetalRestorePluginFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Return 1 if one of the account's hardware has an installation of Idera Server Backup otherwise 0."
            },
            "hasPendingOrder": {
                "name": "hasPendingOrder",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The number of orders in a PENDING status for a SoftLayer customer account."
            },
            "hasR1softBareMetalRestorePluginFlag": {
                "name": "hasR1softBareMetalRestorePluginFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Return 1 if one of the account's hardware has an installation of R1Soft CDP otherwise 0."
            },
            "hourlyBareMetalInstances": {
                "name": "hourlyBareMetalInstances",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated hourly bare metal server objects."
            },
            "hourlyServiceBillingItems": {
                "name": "hourlyServiceBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "Hourly service billing items that will be on an account's next invoice."
            },
            "hourlyVirtualGuests": {
                "name": "hourlyVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated hourly virtual guest objects."
            },
            "hubNetworkStorage": {
                "name": "hubNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated Virtual Storage volumes."
            },
            "ibmCustomerNumber": {
                "name": "ibmCustomerNumber",
                "type": "string",
                "form": "relational",
                "doc": "Unique identifier for a customer used throughout IBM."
            },
            "ibmIdAuthenticationRequiredFlag": {
                "name": "ibmIdAuthenticationRequiredFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates whether this account requires IBMid authentication."
            },
            "ibmIdMigrationExpirationTimestamp": {
                "name": "ibmIdMigrationExpirationTimestamp",
                "type": "string",
                "form": "relational",
                "doc": "This key is deprecated and should not be used."
            },
            "inProgressExternalAccountSetup": {
                "name": "inProgressExternalAccountSetup",
                "type": "SoftLayer_Account_External_Setup",
                "form": "relational",
                "doc": "An in progress request to switch billing systems."
            },
            "internalNotes": {
                "name": "internalNotes",
                "type": "SoftLayer_Account_Note",
                "form": "relational",
                "typeArray": true
            },
            "invoices": {
                "name": "invoices",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated billing invoices."
            },
            "ipAddresses": {
                "name": "ipAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true
            },
            "iscsiIsolationDisabled": {
                "name": "iscsiIsolationDisabled",
                "type": "boolean",
                "form": "relational"
            },
            "iscsiNetworkStorage": {
                "name": "iscsiNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated iSCSI storage volumes."
            },
            "lastCanceledBillingItem": {
                "name": "lastCanceledBillingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The most recently canceled billing item."
            },
            "lastCancelledServerBillingItem": {
                "name": "lastCancelledServerBillingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The most recent cancelled server billing item."
            },
            "lastFiveClosedAbuseTickets": {
                "name": "lastFiveClosedAbuseTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The five most recently closed abuse tickets associated with an account."
            },
            "lastFiveClosedAccountingTickets": {
                "name": "lastFiveClosedAccountingTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The five most recently closed accounting tickets associated with an account."
            },
            "lastFiveClosedOtherTickets": {
                "name": "lastFiveClosedOtherTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The five most recently closed tickets that do not belong to the abuse, accounting, sales, or support groups associated with an account."
            },
            "lastFiveClosedSalesTickets": {
                "name": "lastFiveClosedSalesTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The five most recently closed sales tickets associated with an account."
            },
            "lastFiveClosedSupportTickets": {
                "name": "lastFiveClosedSupportTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The five most recently closed support tickets associated with an account."
            },
            "lastFiveClosedTickets": {
                "name": "lastFiveClosedTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The five most recently closed tickets associated with an account."
            },
            "latestBillDate": {
                "name": "latestBillDate",
                "type": "dateTime",
                "form": "relational",
                "doc": "An account's most recent billing date."
            },
            "latestRecurringInvoice": {
                "name": "latestRecurringInvoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "doc": "An account's latest recurring invoice."
            },
            "latestRecurringPendingInvoice": {
                "name": "latestRecurringPendingInvoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "doc": "An account's latest recurring pending invoice."
            },
            "legacyBandwidthAllotments": {
                "name": "legacyBandwidthAllotments",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "typeArray": true,
                "doc": "The legacy bandwidth allotments for an account."
            },
            "legacyIscsiCapacityGB": {
                "name": "legacyIscsiCapacityGB",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total capacity of Legacy iSCSI Volumes on an account, in GB."
            },
            "loadBalancers": {
                "name": "loadBalancers",
                "type": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated load balancers."
            },
            "lockboxCapacityGB": {
                "name": "lockboxCapacityGB",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total capacity of Legacy lockbox Volumes on an account, in GB."
            },
            "lockboxNetworkStorage": {
                "name": "lockboxNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated Lockbox storage volumes."
            },
            "manualPaymentsUnderReview": {
                "name": "manualPaymentsUnderReview",
                "type": "SoftLayer_Billing_Payment_Card_ManualPayment",
                "form": "relational",
                "typeArray": true
            },
            "masterUser": {
                "name": "masterUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "An account's master user."
            },
            "mediaDataTransferRequests": {
                "name": "mediaDataTransferRequests",
                "type": "SoftLayer_Account_Media_Data_Transfer_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's media transfer service requests."
            },
            "migratedToIbmCloudPortalFlag": {
                "name": "migratedToIbmCloudPortalFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Flag indicating whether this account is restricted to the IBM Cloud portal."
            },
            "monthlyBareMetalInstances": {
                "name": "monthlyBareMetalInstances",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated monthly bare metal server objects."
            },
            "monthlyVirtualGuests": {
                "name": "monthlyVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated monthly virtual guest objects."
            },
            "nasNetworkStorage": {
                "name": "nasNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated NAS storage volumes."
            },
            "networkCreationFlag": {
                "name": "networkCreationFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "[Deprecated] Whether or not this account can define their own networks."
            },
            "networkGateways": {
                "name": "networkGateways",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "typeArray": true,
                "doc": "All network gateway devices on this account."
            },
            "networkHardware": {
                "name": "networkHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated network hardware."
            },
            "networkMessageDeliveryAccounts": {
                "name": "networkMessageDeliveryAccounts",
                "type": "SoftLayer_Network_Message_Delivery",
                "form": "relational",
                "typeArray": true
            },
            "networkMonitorDownHardware": {
                "name": "networkMonitorDownHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "Hardware which is currently experiencing a service failure."
            },
            "networkMonitorDownVirtualGuests": {
                "name": "networkMonitorDownVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "Virtual guest which is currently experiencing a service failure."
            },
            "networkMonitorRecoveringHardware": {
                "name": "networkMonitorRecoveringHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "Hardware which is currently recovering from a service failure."
            },
            "networkMonitorRecoveringVirtualGuests": {
                "name": "networkMonitorRecoveringVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "Virtual guest which is currently recovering from a service failure."
            },
            "networkMonitorUpHardware": {
                "name": "networkMonitorUpHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "Hardware which is currently online."
            },
            "networkMonitorUpVirtualGuests": {
                "name": "networkMonitorUpVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "Virtual guest which is currently online."
            },
            "networkStorage": {
                "name": "networkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated storage volumes. This includes Lockbox, NAS, EVault, and iSCSI volumes."
            },
            "networkStorageGroups": {
                "name": "networkStorageGroups",
                "type": "SoftLayer_Network_Storage_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's Network Storage groups."
            },
            "networkTunnelContexts": {
                "name": "networkTunnelContexts",
                "type": "SoftLayer_Network_Tunnel_Module_Context",
                "form": "relational",
                "typeArray": true,
                "doc": "IPSec network tunnels for an account."
            },
            "networkVlanSpan": {
                "name": "networkVlanSpan",
                "type": "SoftLayer_Account_Network_Vlan_Span",
                "form": "relational",
                "doc": "Whether or not an account has automatic private VLAN spanning enabled."
            },
            "networkVlans": {
                "name": "networkVlans",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "All network VLANs assigned to an account."
            },
            "nextBillingPublicAllotmentHardwareBandwidthDetails": {
                "name": "nextBillingPublicAllotmentHardwareBandwidthDetails",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "typeArray": true,
                "doc": "DEPRECATED - This information can be pulled directly through tapping keys now - DEPRECATED. The allotments for this account and their servers for the next billing cycle. The public inbound and outbound bandwidth is calculated for each server in addition to the daily average network traffic since the last billing date."
            },
            "nextInvoiceIncubatorExemptTotal": {
                "name": "nextInvoiceIncubatorExemptTotal",
                "type": "decimal",
                "form": "relational",
                "doc": "The pre-tax total amount exempt from incubator credit for the account's next invoice. This field is now deprecated and will soon be removed. Please update all references to instead use nextInvoiceTotalAmount"
            },
            "nextInvoiceRecurringAmountEligibleForAccountDiscount": {
                "name": "nextInvoiceRecurringAmountEligibleForAccountDiscount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total recurring charge amount of an account's next invoice eligible for account discount measured in US Dollars ($USD), assuming no changes or charges occur between now and time of billing."
            },
            "nextInvoiceTopLevelBillingItems": {
                "name": "nextInvoiceTopLevelBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items that will be on an account's next invoice."
            },
            "nextInvoiceTotalAmount": {
                "name": "nextInvoiceTotalAmount",
                "type": "float",
                "form": "relational",
                "doc": "The pre-tax total amount of an account's next invoice measured in US Dollars ($USD), assuming no changes or charges occur between now and time of billing."
            },
            "nextInvoiceTotalOneTimeAmount": {
                "name": "nextInvoiceTotalOneTimeAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total one-time charge amount of an account's next invoice measured in US Dollars ($USD), assuming no changes or charges occur between now and time of billing."
            },
            "nextInvoiceTotalOneTimeTaxAmount": {
                "name": "nextInvoiceTotalOneTimeTaxAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total one-time tax amount of an account's next invoice measured in US Dollars ($USD), assuming no changes or charges occur between now and time of billing."
            },
            "nextInvoiceTotalRecurringAmount": {
                "name": "nextInvoiceTotalRecurringAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total recurring charge amount of an account's next invoice measured in US Dollars ($USD), assuming no changes or charges occur between now and time of billing."
            },
            "nextInvoiceTotalRecurringAmountBeforeAccountDiscount": {
                "name": "nextInvoiceTotalRecurringAmountBeforeAccountDiscount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total recurring charge amount of an account's next invoice measured in US Dollars ($USD), assuming no changes or charges occur between now and time of billing."
            },
            "nextInvoiceTotalRecurringTaxAmount": {
                "name": "nextInvoiceTotalRecurringTaxAmount",
                "type": "float",
                "form": "relational",
                "doc": "The total recurring tax amount of an account's next invoice measured in US Dollars ($USD), assuming no changes or charges occur between now and time of billing."
            },
            "nextInvoiceTotalTaxableRecurringAmount": {
                "name": "nextInvoiceTotalTaxableRecurringAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total recurring charge amount of an account's next invoice measured in US Dollars ($USD), assuming no changes or charges occur between now and time of billing."
            },
            "notificationSubscribers": {
                "name": "notificationSubscribers",
                "type": "SoftLayer_Notification_Subscriber",
                "form": "relational",
                "typeArray": true
            },
            "openAbuseTickets": {
                "name": "openAbuseTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The open abuse tickets associated with an account."
            },
            "openAccountingTickets": {
                "name": "openAccountingTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The open accounting tickets associated with an account."
            },
            "openBillingTickets": {
                "name": "openBillingTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The open billing tickets associated with an account."
            },
            "openCancellationRequests": {
                "name": "openCancellationRequests",
                "type": "SoftLayer_Billing_Item_Cancellation_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "An open ticket requesting cancellation of this server, if one exists."
            },
            "openOtherTickets": {
                "name": "openOtherTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The open tickets that do not belong to the abuse, accounting, sales, or support groups associated with an account."
            },
            "openRecurringInvoices": {
                "name": "openRecurringInvoices",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's recurring invoices."
            },
            "openSalesTickets": {
                "name": "openSalesTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The open sales tickets associated with an account."
            },
            "openStackAccountLinks": {
                "name": "openStackAccountLinks",
                "type": "SoftLayer_Account_Link",
                "form": "relational",
                "typeArray": true
            },
            "openStackObjectStorage": {
                "name": "openStackObjectStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated Openstack related Object Storage accounts."
            },
            "openSupportTickets": {
                "name": "openSupportTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The open support tickets associated with an account."
            },
            "openTickets": {
                "name": "openTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "All open tickets associated with an account."
            },
            "openTicketsWaitingOnCustomer": {
                "name": "openTicketsWaitingOnCustomer",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "All open tickets associated with an account last edited by an employee."
            },
            "orders": {
                "name": "orders",
                "type": "SoftLayer_Billing_Order",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated billing orders excluding upgrades."
            },
            "orphanBillingItems": {
                "name": "orphanBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items that have no parent billing item. These are items that don't necessarily belong to a single server."
            },
            "ownedBrands": {
                "name": "ownedBrands",
                "type": "SoftLayer_Brand",
                "form": "relational",
                "typeArray": true
            },
            "ownedHardwareGenericComponentModels": {
                "name": "ownedHardwareGenericComponentModels",
                "type": "SoftLayer_Hardware_Component_Model_Generic",
                "form": "relational",
                "typeArray": true
            },
            "paymentProcessors": {
                "name": "paymentProcessors",
                "type": "SoftLayer_Billing_Payment_Processor",
                "form": "relational",
                "typeArray": true
            },
            "pendingEvents": {
                "name": "pendingEvents",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "form": "relational",
                "typeArray": true
            },
            "pendingInvoice": {
                "name": "pendingInvoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "doc": "An account's latest open (pending) invoice."
            },
            "pendingInvoiceTopLevelItems": {
                "name": "pendingInvoiceTopLevelItems",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of top-level invoice items that are on an account's currently pending invoice."
            },
            "pendingInvoiceTotalAmount": {
                "name": "pendingInvoiceTotalAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total amount of an account's pending invoice, if one exists."
            },
            "pendingInvoiceTotalOneTimeAmount": {
                "name": "pendingInvoiceTotalOneTimeAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total one-time charges for an account's pending invoice, if one exists. In other words, it is the sum of one-time charges, setup fees, and labor fees. It does not include taxes."
            },
            "pendingInvoiceTotalOneTimeTaxAmount": {
                "name": "pendingInvoiceTotalOneTimeTaxAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The sum of all the taxes related to one time charges for an account's pending invoice, if one exists."
            },
            "pendingInvoiceTotalRecurringAmount": {
                "name": "pendingInvoiceTotalRecurringAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total recurring amount of an account's pending invoice, if one exists."
            },
            "pendingInvoiceTotalRecurringTaxAmount": {
                "name": "pendingInvoiceTotalRecurringTaxAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total amount of the recurring taxes on an account's pending invoice, if one exists."
            },
            "permissionGroups": {
                "name": "permissionGroups",
                "type": "SoftLayer_User_Permission_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's permission groups."
            },
            "permissionRoles": {
                "name": "permissionRoles",
                "type": "SoftLayer_User_Permission_Role",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's user roles."
            },
            "placementGroups": {
                "name": "placementGroups",
                "type": "SoftLayer_Virtual_PlacementGroup",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated virtual placement groups."
            },
            "portableStorageVolumes": {
                "name": "portableStorageVolumes",
                "type": "SoftLayer_Virtual_Disk_Image",
                "form": "relational",
                "typeArray": true
            },
            "postProvisioningHooks": {
                "name": "postProvisioningHooks",
                "type": "SoftLayer_Provisioning_Hook",
                "form": "relational",
                "typeArray": true,
                "doc": "Customer specified URIs that are downloaded onto a newly provisioned or reloaded server. If the URI is sent over https it will be executed directly on the server."
            },
            "pptpVpnAllowedFlag": {
                "name": "pptpVpnAllowedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "(Deprecated) Boolean flag dictating whether or not this account supports PPTP VPN Access."
            },
            "pptpVpnUsers": {
                "name": "pptpVpnUsers",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated portal users with PPTP VPN access. (Deprecated)"
            },
            "previousRecurringRevenue": {
                "name": "previousRecurringRevenue",
                "type": "decimal",
                "form": "relational",
                "doc": "The total recurring amount for an accounts previous revenue."
            },
            "priceRestrictions": {
                "name": "priceRestrictions",
                "type": "SoftLayer_Product_Item_Price_Account_Restriction",
                "form": "relational",
                "typeArray": true,
                "doc": "The item price that an account is restricted to."
            },
            "priorityOneTickets": {
                "name": "priorityOneTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "All priority one tickets associated with an account."
            },
            "privateAllotmentHardwareBandwidthDetails": {
                "name": "privateAllotmentHardwareBandwidthDetails",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "typeArray": true,
                "doc": "DEPRECATED - This information can be pulled directly through tapping keys now - DEPRECATED. The allotments for this account and their servers. The private inbound and outbound bandwidth is calculated for each server in addition to the daily average network traffic since the last billing date."
            },
            "privateBlockDeviceTemplateGroups": {
                "name": "privateBlockDeviceTemplateGroups",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "Private and shared template group objects (parent only) for an account."
            },
            "privateIpAddresses": {
                "name": "privateIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true
            },
            "privateNetworkVlans": {
                "name": "privateNetworkVlans",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "The private network VLANs assigned to an account."
            },
            "privateSubnets": {
                "name": "privateSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "All private subnets associated with an account."
            },
            "proofOfConceptAccountFlag": {
                "name": "proofOfConceptAccountFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Boolean flag indicating whether or not this account is a Proof of Concept account."
            },
            "publicAllotmentHardwareBandwidthDetails": {
                "name": "publicAllotmentHardwareBandwidthDetails",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "typeArray": true,
                "doc": "DEPRECATED - This information can be pulled directly through tapping keys now - DEPRECATED. The allotments for this account and their servers. The public inbound and outbound bandwidth is calculated for each server in addition to the daily average network traffic since the last billing date."
            },
            "publicIpAddresses": {
                "name": "publicIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true
            },
            "publicNetworkVlans": {
                "name": "publicNetworkVlans",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "The public network VLANs assigned to an account."
            },
            "publicSubnets": {
                "name": "publicSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "All public network subnets associated with an account."
            },
            "quotes": {
                "name": "quotes",
                "type": "SoftLayer_Billing_Order_Quote",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's quotes."
            },
            "recentEvents": {
                "name": "recentEvents",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "form": "relational",
                "typeArray": true
            },
            "referralPartner": {
                "name": "referralPartner",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The Referral Partner for this account, if any."
            },
            "referredAccounts": {
                "name": "referredAccounts",
                "type": "SoftLayer_Account",
                "form": "relational",
                "typeArray": true,
                "doc": "If this is a account is a referral partner, the accounts this referral partner has referred"
            },
            "regulatedWorkloads": {
                "name": "regulatedWorkloads",
                "type": "SoftLayer_Legal_RegulatedWorkload",
                "form": "relational",
                "typeArray": true
            },
            "remoteManagementCommandRequests": {
                "name": "remoteManagementCommandRequests",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_Command_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "Remote management command requests for an account"
            },
            "replicationEvents": {
                "name": "replicationEvents",
                "type": "SoftLayer_Network_Storage_Event",
                "form": "relational",
                "typeArray": true,
                "doc": "The Replication events for all Network Storage volumes on an account."
            },
            "requireSilentIBMidUserCreation": {
                "name": "requireSilentIBMidUserCreation",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates whether newly created users under this account will be associated with IBMid via an email requiring a response, or not."
            },
            "reservedCapacityAgreements": {
                "name": "reservedCapacityAgreements",
                "type": "SoftLayer_Account_Agreement",
                "form": "relational",
                "typeArray": true,
                "doc": "All reserved capacity agreements for an account"
            },
            "reservedCapacityGroups": {
                "name": "reservedCapacityGroups",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup",
                "form": "relational",
                "typeArray": true,
                "doc": "The reserved capacity groups owned by this account."
            },
            "resourceGroups": {
                "name": "resourceGroups",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated top-level resource groups."
            },
            "routers": {
                "name": "routers",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All Routers that an accounts VLANs reside on"
            },
            "rwhoisData": {
                "name": "rwhoisData",
                "type": "SoftLayer_Network_Subnet_Rwhois_Data",
                "form": "relational",
                "typeArray": true,
                "doc": "DEPRECATED"
            },
            "samlAuthentication": {
                "name": "samlAuthentication",
                "type": "SoftLayer_Account_Authentication_Saml",
                "form": "relational",
                "doc": "The SAML configuration for this account."
            },
            "scaleGroups": {
                "name": "scaleGroups",
                "type": "SoftLayer_Scale_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "All scale groups on this account."
            },
            "secondaryDomains": {
                "name": "secondaryDomains",
                "type": "SoftLayer_Dns_Secondary",
                "form": "relational",
                "typeArray": true,
                "doc": "The secondary DNS records for a SoftLayer customer account."
            },
            "securityCertificates": {
                "name": "securityCertificates",
                "type": "SoftLayer_Security_Certificate",
                "form": "relational",
                "typeArray": true,
                "doc": "Stored security certificates (ie. SSL)"
            },
            "securityGroups": {
                "name": "securityGroups",
                "type": "SoftLayer_Network_SecurityGroup",
                "form": "relational",
                "typeArray": true,
                "doc": "The security groups belonging to this account."
            },
            "securityLevel": {
                "name": "securityLevel",
                "type": "SoftLayer_Security_Level",
                "form": "relational"
            },
            "securityScanRequests": {
                "name": "securityScanRequests",
                "type": "SoftLayer_Network_Security_Scanner_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's vulnerability scan requests."
            },
            "serviceBillingItems": {
                "name": "serviceBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The service billing items that will be on an account's next invoice. "
            },
            "shipments": {
                "name": "shipments",
                "type": "SoftLayer_Account_Shipment",
                "form": "relational",
                "typeArray": true,
                "doc": "Shipments that belong to the customer's account."
            },
            "sshKeys": {
                "name": "sshKeys",
                "type": "SoftLayer_Security_Ssh_Key",
                "form": "relational",
                "typeArray": true,
                "doc": "Customer specified SSH keys that can be implemented onto a newly provisioned or reloaded server."
            },
            "sslVpnUsers": {
                "name": "sslVpnUsers",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated portal users with SSL VPN access."
            },
            "standardPoolVirtualGuests": {
                "name": "standardPoolVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's virtual guest objects that are hosted on a user provisioned hypervisor."
            },
            "subnetRegistrationDetails": {
                "name": "subnetRegistrationDetails",
                "type": "SoftLayer_Account_Regional_Registry_Detail",
                "form": "relational",
                "typeArray": true
            },
            "subnetRegistrations": {
                "name": "subnetRegistrations",
                "type": "SoftLayer_Network_Subnet_Registration",
                "form": "relational",
                "typeArray": true
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "All network subnets associated with an account."
            },
            "supportRepresentatives": {
                "name": "supportRepresentatives",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer employees that an account is assigned to."
            },
            "supportSubscriptions": {
                "name": "supportSubscriptions",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The active support subscriptions for this account."
            },
            "supportTier": {
                "name": "supportTier",
                "type": "string",
                "form": "relational"
            },
            "suppressInvoicesFlag": {
                "name": "suppressInvoicesFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating to suppress invoices."
            },
            "tags": {
                "name": "tags",
                "type": "SoftLayer_Tag",
                "form": "relational",
                "typeArray": true
            },
            "tickets": {
                "name": "tickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated tickets."
            },
            "ticketsClosedInTheLastThreeDays": {
                "name": "ticketsClosedInTheLastThreeDays",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "Tickets closed within the last 72 hours or last 10 tickets, whichever is less, associated with an account."
            },
            "ticketsClosedToday": {
                "name": "ticketsClosedToday",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "Tickets closed today associated with an account."
            },
            "transcodeAccounts": {
                "name": "transcodeAccounts",
                "type": "SoftLayer_Network_Media_Transcode_Account",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated Transcode account."
            },
            "upgradeRequests": {
                "name": "upgradeRequests",
                "type": "SoftLayer_Product_Upgrade_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated upgrade requests."
            },
            "users": {
                "name": "users",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's portal users."
            },
            "validSecurityCertificates": {
                "name": "validSecurityCertificates",
                "type": "SoftLayer_Security_Certificate",
                "form": "relational",
                "typeArray": true,
                "doc": "Stored security certificates that are not expired (ie. SSL)"
            },
            "vdrUpdatesInProgressFlag": {
                "name": "vdrUpdatesInProgressFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Return 0 if vpn updates are currently in progress on this account otherwise 1."
            },
            "virtualDedicatedRacks": {
                "name": "virtualDedicatedRacks",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "typeArray": true,
                "doc": "The bandwidth pooling for this account."
            },
            "virtualDiskImages": {
                "name": "virtualDiskImages",
                "type": "SoftLayer_Virtual_Disk_Image",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated virtual server virtual disk images."
            },
            "virtualGuests": {
                "name": "virtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated virtual guest objects."
            },
            "virtualGuestsOverBandwidthAllocation": {
                "name": "virtualGuestsOverBandwidthAllocation",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated virtual guest objects currently over bandwidth allocation."
            },
            "virtualGuestsProjectedOverBandwidthAllocation": {
                "name": "virtualGuestsProjectedOverBandwidthAllocation",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated virtual guest objects currently over bandwidth allocation."
            },
            "virtualGuestsWithCpanel": {
                "name": "virtualGuestsWithCpanel",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All virtual guests associated with an account that has the cPanel web hosting control panel installed."
            },
            "virtualGuestsWithMcafee": {
                "name": "virtualGuestsWithMcafee",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All virtual guests associated with an account that have McAfee Secure software components."
            },
            "virtualGuestsWithMcafeeAntivirusRedhat": {
                "name": "virtualGuestsWithMcafeeAntivirusRedhat",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All virtual guests associated with an account that have McAfee Secure AntiVirus for Redhat software components."
            },
            "virtualGuestsWithMcafeeAntivirusWindows": {
                "name": "virtualGuestsWithMcafeeAntivirusWindows",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All virtual guests associated with an account that has McAfee Secure AntiVirus for Windows software components."
            },
            "virtualGuestsWithMcafeeIntrusionDetectionSystem": {
                "name": "virtualGuestsWithMcafeeIntrusionDetectionSystem",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All virtual guests associated with an account that has McAfee Secure Intrusion Detection System software components."
            },
            "virtualGuestsWithPlesk": {
                "name": "virtualGuestsWithPlesk",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All virtual guests associated with an account that has the Plesk web hosting control panel installed."
            },
            "virtualGuestsWithQuantastor": {
                "name": "virtualGuestsWithQuantastor",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All virtual guests associated with an account that have the QuantaStor storage system installed."
            },
            "virtualGuestsWithUrchin": {
                "name": "virtualGuestsWithUrchin",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All virtual guests associated with an account that has the Urchin web traffic analytics package installed."
            },
            "virtualPrivateRack": {
                "name": "virtualPrivateRack",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "doc": "The bandwidth pooling for this account."
            },
            "virtualStorageArchiveRepositories": {
                "name": "virtualStorageArchiveRepositories",
                "type": "SoftLayer_Virtual_Storage_Repository",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated virtual server archived storage repositories."
            },
            "virtualStoragePublicRepositories": {
                "name": "virtualStoragePublicRepositories",
                "type": "SoftLayer_Virtual_Storage_Repository",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated virtual server public storage repositories."
            },
            "vpcVirtualGuests": {
                "name": "vpcVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated VPC configured virtual guest objects."
            },
            "vpnConfigRequiresVPNManageFlag": {
                "name": "vpnConfigRequiresVPNManageFlag",
                "type": "boolean",
                "form": "relational"
            },
            "accountManagedResourcesFlag": {
                "name": "accountManagedResourcesFlag",
                "type": "boolean",
                "form": "local",
                "doc": "A flag indicating that the account has a managed resource."
            },
            "accountStatusId": {
                "name": "accountStatusId",
                "type": "int",
                "form": "local",
                "doc": "A number reflecting the state of an account."
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "The first line of the mailing address belonging to an account."
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "The second line of the mailing address belonging to an account."
            },
            "allowedPptpVpnQuantity": {
                "name": "allowedPptpVpnQuantity",
                "type": "int",
                "form": "local",
                "doc": "The number of PPTP VPN users allowed on an account."
            },
            "alternatePhone": {
                "name": "alternatePhone",
                "type": "string",
                "form": "local",
                "doc": "A secondary phone number assigned to an account."
            },
            "brandId": {
                "name": "brandId",
                "type": "int",
                "form": "local",
                "doc": "The Brand tied to an account."
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The city of the mailing address belonging to an account."
            },
            "claimedTaxExemptTxFlag": {
                "name": "claimedTaxExemptTxFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether an account is exempt from taxes on their invoices."
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local",
                "doc": "The company name associated with an account."
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "A two-letter abbreviation of the country in the mailing address belonging to an account."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an account was created."
            },
            "deviceFingerprintId": {
                "name": "deviceFingerprintId",
                "type": "string",
                "form": "local",
                "doc": "Device Fingerprint Identifier - Used internally and can safely be ignored."
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "A general email address assigned to an account."
            },
            "faxPhone": {
                "name": "faxPhone",
                "type": "string",
                "form": "local",
                "doc": "A fax phone number assigned to an account."
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "Each customer account is listed under a single individual. This is that individual's first name."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A customer account's internal identifier. Account numbers are typically preceded by the string \"SL\" in the customer portal. Every SoftLayer account has at least one portal user whose username follows the \"SL\" + account number naming scheme. "
            },
            "isReseller": {
                "name": "isReseller",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating if an account belongs to a reseller or not."
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Each customer account is listed under a single individual. This is that individual's last name."
            },
            "lateFeeProtectionFlag": {
                "name": "lateFeeProtectionFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether an account has late fee protection."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an account was last modified."
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local",
                "doc": "An office phone number assigned to an account."
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The postal code of the mailing address belonging to an account."
            },
            "resellerLevel": {
                "name": "resellerLevel",
                "type": "int",
                "form": "local",
                "doc": "The Reseller level of the account."
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "A two-letter abbreviation of the state in the mailing address belonging to an account. If an account does not reside in a province then this is typically blank."
            },
            "statusDate": {
                "name": "statusDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of an account's last status change."
            },
            "abuseEmailCount": {
                "name": "abuseEmailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of email addresses that are responsible for abuse and legal inquiries on behalf of an account. For instance, new legal and abuse tickets are sent to these addresses."
            },
            "accountContactCount": {
                "name": "accountContactCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the account contacts on an account."
            },
            "accountLicenseCount": {
                "name": "accountLicenseCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the account software licenses owned by an account"
            },
            "accountLinkCount": {
                "name": "accountLinkCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "activeAccountLicenseCount": {
                "name": "activeAccountLicenseCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the active account software licenses owned by an account"
            },
            "activeAddressCount": {
                "name": "activeAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the active address(es) that belong to an account."
            },
            "activeAgreementCount": {
                "name": "activeAgreementCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all active agreements for an account"
            },
            "activeBillingAgreementCount": {
                "name": "activeBillingAgreementCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all billing agreements for an account"
            },
            "activeColocationContainerCount": {
                "name": "activeColocationContainerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the account's active top level colocation containers."
            },
            "activeFlexibleCreditEnrollmentCount": {
                "name": "activeFlexibleCreditEnrollmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "activeNotificationSubscriberCount": {
                "name": "activeNotificationSubscriberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "activeQuoteCount": {
                "name": "activeQuoteCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's non-expired quotes."
            },
            "activeReservedCapacityAgreementCount": {
                "name": "activeReservedCapacityAgreementCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of active reserved capacity agreements for an account"
            },
            "activeVirtualLicenseCount": {
                "name": "activeVirtualLicenseCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the virtual software licenses controlled by an account"
            },
            "adcLoadBalancerCount": {
                "name": "adcLoadBalancerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated load balancers."
            },
            "addressCount": {
                "name": "addressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all the address(es) that belong to an account."
            },
            "allCommissionBillingItemCount": {
                "name": "allCommissionBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items that will be on an account's next invoice."
            },
            "allRecurringTopLevelBillingItemCount": {
                "name": "allRecurringTopLevelBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items that will be on an account's next invoice."
            },
            "allRecurringTopLevelBillingItemsUnfilteredCount": {
                "name": "allRecurringTopLevelBillingItemsUnfilteredCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items that will be on an account's next invoice. Does not consider associated items."
            },
            "allSubnetBillingItemCount": {
                "name": "allSubnetBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items that will be on an account's next invoice."
            },
            "allTopLevelBillingItemCount": {
                "name": "allTopLevelBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all billing items of an account."
            },
            "allTopLevelBillingItemsUnfilteredCount": {
                "name": "allTopLevelBillingItemsUnfilteredCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items that will be on an account's next invoice. Does not consider associated items."
            },
            "applicationDeliveryControllerCount": {
                "name": "applicationDeliveryControllerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated application delivery controller records."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the account attribute values for a SoftLayer customer account."
            },
            "availablePublicNetworkVlanCount": {
                "name": "availablePublicNetworkVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the public network VLANs assigned to an account."
            },
            "bandwidthAllotmentCount": {
                "name": "bandwidthAllotmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the bandwidth allotments for an account."
            },
            "bandwidthAllotmentsOverAllocationCount": {
                "name": "bandwidthAllotmentsOverAllocationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the bandwidth allotments for an account currently over allocation."
            },
            "bandwidthAllotmentsProjectedOverAllocationCount": {
                "name": "bandwidthAllotmentsProjectedOverAllocationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the bandwidth allotments for an account projected to go over allocation."
            },
            "bareMetalInstanceCount": {
                "name": "bareMetalInstanceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated bare metal server objects."
            },
            "billingAgreementCount": {
                "name": "billingAgreementCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all billing agreements for an account"
            },
            "blockDeviceTemplateGroupCount": {
                "name": "blockDeviceTemplateGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of private template group objects (parent and children) and the shared template group objects (parent only) for an account."
            },
            "cartCount": {
                "name": "cartCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's active carts."
            },
            "catalystEnrollmentCount": {
                "name": "catalystEnrollmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "closedTicketCount": {
                "name": "closedTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all closed tickets associated with an account."
            },
            "datacentersWithSubnetAllocationCount": {
                "name": "datacentersWithSubnetAllocationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of datacenters which contain subnets that the account has access to route."
            },
            "dedicatedHostCount": {
                "name": "dedicatedHostCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated virtual dedicated host objects."
            },
            "displaySupportRepresentativeAssignmentCount": {
                "name": "displaySupportRepresentativeAssignmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer employees that an account is assigned to."
            },
            "domainCount": {
                "name": "domainCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the DNS domains associated with an account."
            },
            "domainRegistrationCount": {
                "name": "domainRegistrationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "domainsWithoutSecondaryDnsRecordCount": {
                "name": "domainsWithoutSecondaryDnsRecordCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the DNS domains associated with an account that were not created as a result of a secondary DNS zone transfer."
            },
            "evaultMasterUserCount": {
                "name": "evaultMasterUserCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's master EVault user. This is only used when an account has EVault service."
            },
            "evaultNetworkStorageCount": {
                "name": "evaultNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated EVault storage volumes."
            },
            "expiredSecurityCertificateCount": {
                "name": "expiredSecurityCertificateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of stored security certificates that are expired (ie. SSL)"
            },
            "facilityLogCount": {
                "name": "facilityLogCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of logs of who entered a colocation area which is assigned to this account, or when a user under this account enters a datacenter."
            },
            "flexibleCreditEnrollmentCount": {
                "name": "flexibleCreditEnrollmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all of the account's current and former Flexible Credit enrollments."
            },
            "globalIpRecordCount": {
                "name": "globalIpRecordCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "globalIpv4RecordCount": {
                "name": "globalIpv4RecordCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "globalIpv6RecordCount": {
                "name": "globalIpv6RecordCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "globalLoadBalancerAccountCount": {
                "name": "globalLoadBalancerAccountCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of [Deprecated] The global load balancer accounts for a softlayer customer account."
            },
            "hardwareCount": {
                "name": "hardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated hardware objects."
            },
            "hardwareOverBandwidthAllocationCount": {
                "name": "hardwareOverBandwidthAllocationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated hardware objects currently over bandwidth allocation."
            },
            "hardwareProjectedOverBandwidthAllocationCount": {
                "name": "hardwareProjectedOverBandwidthAllocationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated hardware objects projected to go over bandwidth allocation."
            },
            "hardwareWithCpanelCount": {
                "name": "hardwareWithCpanelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that has the cPanel web hosting control panel installed."
            },
            "hardwareWithHelmCount": {
                "name": "hardwareWithHelmCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that has the Helm web hosting control panel installed."
            },
            "hardwareWithMcafeeAntivirusRedhatCount": {
                "name": "hardwareWithMcafeeAntivirusRedhatCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that has McAfee Secure AntiVirus for Redhat software components."
            },
            "hardwareWithMcafeeAntivirusWindowCount": {
                "name": "hardwareWithMcafeeAntivirusWindowCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that has McAfee Secure AntiVirus for Windows software components."
            },
            "hardwareWithMcafeeCount": {
                "name": "hardwareWithMcafeeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that has McAfee Secure software components."
            },
            "hardwareWithMcafeeIntrusionDetectionSystemCount": {
                "name": "hardwareWithMcafeeIntrusionDetectionSystemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that has McAfee Secure Intrusion Detection System software components."
            },
            "hardwareWithPleskCount": {
                "name": "hardwareWithPleskCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that has the Plesk web hosting control panel installed."
            },
            "hardwareWithQuantastorCount": {
                "name": "hardwareWithQuantastorCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that has the QuantaStor storage system installed."
            },
            "hardwareWithUrchinCount": {
                "name": "hardwareWithUrchinCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that has the Urchin web traffic analytics package installed."
            },
            "hardwareWithWindowCount": {
                "name": "hardwareWithWindowCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware associated with an account that is running a version of the Microsoft Windows operating system."
            },
            "hourlyBareMetalInstanceCount": {
                "name": "hourlyBareMetalInstanceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated hourly bare metal server objects."
            },
            "hourlyServiceBillingItemCount": {
                "name": "hourlyServiceBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of hourly service billing items that will be on an account's next invoice."
            },
            "hourlyVirtualGuestCount": {
                "name": "hourlyVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated hourly virtual guest objects."
            },
            "hubNetworkStorageCount": {
                "name": "hubNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated Virtual Storage volumes."
            },
            "internalNoteCount": {
                "name": "internalNoteCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "invoiceCount": {
                "name": "invoiceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated billing invoices."
            },
            "ipAddressCount": {
                "name": "ipAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "iscsiNetworkStorageCount": {
                "name": "iscsiNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated iSCSI storage volumes."
            },
            "lastFiveClosedAbuseTicketCount": {
                "name": "lastFiveClosedAbuseTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the five most recently closed abuse tickets associated with an account."
            },
            "lastFiveClosedAccountingTicketCount": {
                "name": "lastFiveClosedAccountingTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the five most recently closed accounting tickets associated with an account."
            },
            "lastFiveClosedOtherTicketCount": {
                "name": "lastFiveClosedOtherTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the five most recently closed tickets that do not belong to the abuse, accounting, sales, or support groups associated with an account."
            },
            "lastFiveClosedSalesTicketCount": {
                "name": "lastFiveClosedSalesTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the five most recently closed sales tickets associated with an account."
            },
            "lastFiveClosedSupportTicketCount": {
                "name": "lastFiveClosedSupportTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the five most recently closed support tickets associated with an account."
            },
            "lastFiveClosedTicketCount": {
                "name": "lastFiveClosedTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the five most recently closed tickets associated with an account."
            },
            "legacyBandwidthAllotmentCount": {
                "name": "legacyBandwidthAllotmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the legacy bandwidth allotments for an account."
            },
            "loadBalancerCount": {
                "name": "loadBalancerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated load balancers."
            },
            "lockboxNetworkStorageCount": {
                "name": "lockboxNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated Lockbox storage volumes."
            },
            "manualPaymentsUnderReviewCount": {
                "name": "manualPaymentsUnderReviewCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "mediaDataTransferRequestCount": {
                "name": "mediaDataTransferRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's media transfer service requests."
            },
            "monthlyBareMetalInstanceCount": {
                "name": "monthlyBareMetalInstanceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated monthly bare metal server objects."
            },
            "monthlyVirtualGuestCount": {
                "name": "monthlyVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated monthly virtual guest objects."
            },
            "nasNetworkStorageCount": {
                "name": "nasNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated NAS storage volumes."
            },
            "networkGatewayCount": {
                "name": "networkGatewayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all network gateway devices on this account."
            },
            "networkHardwareCount": {
                "name": "networkHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated network hardware."
            },
            "networkMessageDeliveryAccountCount": {
                "name": "networkMessageDeliveryAccountCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "networkMonitorDownHardwareCount": {
                "name": "networkMonitorDownHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of hardware which is currently experiencing a service failure."
            },
            "networkMonitorDownVirtualGuestCount": {
                "name": "networkMonitorDownVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of virtual guest which is currently experiencing a service failure."
            },
            "networkMonitorRecoveringHardwareCount": {
                "name": "networkMonitorRecoveringHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of hardware which is currently recovering from a service failure."
            },
            "networkMonitorRecoveringVirtualGuestCount": {
                "name": "networkMonitorRecoveringVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of virtual guest which is currently recovering from a service failure."
            },
            "networkMonitorUpHardwareCount": {
                "name": "networkMonitorUpHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of hardware which is currently online."
            },
            "networkMonitorUpVirtualGuestCount": {
                "name": "networkMonitorUpVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of virtual guest which is currently online."
            },
            "networkStorageCount": {
                "name": "networkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated storage volumes. This includes Lockbox, NAS, EVault, and iSCSI volumes."
            },
            "networkStorageGroupCount": {
                "name": "networkStorageGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's Network Storage groups."
            },
            "networkTunnelContextCount": {
                "name": "networkTunnelContextCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of iPSec network tunnels for an account."
            },
            "networkVlanCount": {
                "name": "networkVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all network VLANs assigned to an account."
            },
            "nextBillingPublicAllotmentHardwareBandwidthDetailCount": {
                "name": "nextBillingPublicAllotmentHardwareBandwidthDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of dEPRECATED - This information can be pulled directly through tapping keys now - DEPRECATED. The allotments for this account and their servers for the next billing cycle. The public inbound and outbound bandwidth is calculated for each server in addition to the daily average network traffic since the last billing date."
            },
            "nextInvoiceTopLevelBillingItemCount": {
                "name": "nextInvoiceTopLevelBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items that will be on an account's next invoice."
            },
            "notificationSubscriberCount": {
                "name": "notificationSubscriberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "openAbuseTicketCount": {
                "name": "openAbuseTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the open abuse tickets associated with an account."
            },
            "openAccountingTicketCount": {
                "name": "openAccountingTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the open accounting tickets associated with an account."
            },
            "openBillingTicketCount": {
                "name": "openBillingTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the open billing tickets associated with an account."
            },
            "openCancellationRequestCount": {
                "name": "openCancellationRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an open ticket requesting cancellation of this server, if one exists."
            },
            "openOtherTicketCount": {
                "name": "openOtherTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the open tickets that do not belong to the abuse, accounting, sales, or support groups associated with an account."
            },
            "openRecurringInvoiceCount": {
                "name": "openRecurringInvoiceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's recurring invoices."
            },
            "openSalesTicketCount": {
                "name": "openSalesTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the open sales tickets associated with an account."
            },
            "openStackAccountLinkCount": {
                "name": "openStackAccountLinkCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "openStackObjectStorageCount": {
                "name": "openStackObjectStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated Openstack related Object Storage accounts."
            },
            "openSupportTicketCount": {
                "name": "openSupportTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the open support tickets associated with an account."
            },
            "openTicketCount": {
                "name": "openTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all open tickets associated with an account."
            },
            "openTicketsWaitingOnCustomerCount": {
                "name": "openTicketsWaitingOnCustomerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all open tickets associated with an account last edited by an employee."
            },
            "orderCount": {
                "name": "orderCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated billing orders excluding upgrades."
            },
            "orphanBillingItemCount": {
                "name": "orphanBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items that have no parent billing item. These are items that don't necessarily belong to a single server."
            },
            "ownedBrandCount": {
                "name": "ownedBrandCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "ownedHardwareGenericComponentModelCount": {
                "name": "ownedHardwareGenericComponentModelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "paymentProcessorCount": {
                "name": "paymentProcessorCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "pendingEventCount": {
                "name": "pendingEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "pendingInvoiceTopLevelItemCount": {
                "name": "pendingInvoiceTopLevelItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of top-level invoice items that are on an account's currently pending invoice."
            },
            "permissionGroupCount": {
                "name": "permissionGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's permission groups."
            },
            "permissionRoleCount": {
                "name": "permissionRoleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's user roles."
            },
            "placementGroupCount": {
                "name": "placementGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated virtual placement groups."
            },
            "portableStorageVolumeCount": {
                "name": "portableStorageVolumeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "postProvisioningHookCount": {
                "name": "postProvisioningHookCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of customer specified URIs that are downloaded onto a newly provisioned or reloaded server. If the URI is sent over https it will be executed directly on the server."
            },
            "pptpVpnUserCount": {
                "name": "pptpVpnUserCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated portal users with PPTP VPN access. (Deprecated)"
            },
            "priceRestrictionCount": {
                "name": "priceRestrictionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the item price that an account is restricted to."
            },
            "priorityOneTicketCount": {
                "name": "priorityOneTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all priority one tickets associated with an account."
            },
            "privateAllotmentHardwareBandwidthDetailCount": {
                "name": "privateAllotmentHardwareBandwidthDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of dEPRECATED - This information can be pulled directly through tapping keys now - DEPRECATED. The allotments for this account and their servers. The private inbound and outbound bandwidth is calculated for each server in addition to the daily average network traffic since the last billing date."
            },
            "privateBlockDeviceTemplateGroupCount": {
                "name": "privateBlockDeviceTemplateGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of private and shared template group objects (parent only) for an account."
            },
            "privateIpAddressCount": {
                "name": "privateIpAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "privateNetworkVlanCount": {
                "name": "privateNetworkVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the private network VLANs assigned to an account."
            },
            "privateSubnetCount": {
                "name": "privateSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all private subnets associated with an account."
            },
            "publicAllotmentHardwareBandwidthDetailCount": {
                "name": "publicAllotmentHardwareBandwidthDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of dEPRECATED - This information can be pulled directly through tapping keys now - DEPRECATED. The allotments for this account and their servers. The public inbound and outbound bandwidth is calculated for each server in addition to the daily average network traffic since the last billing date."
            },
            "publicIpAddressCount": {
                "name": "publicIpAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "publicNetworkVlanCount": {
                "name": "publicNetworkVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the public network VLANs assigned to an account."
            },
            "publicSubnetCount": {
                "name": "publicSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all public network subnets associated with an account."
            },
            "quoteCount": {
                "name": "quoteCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's quotes."
            },
            "recentEventCount": {
                "name": "recentEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "referredAccountCount": {
                "name": "referredAccountCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of if this is a account is a referral partner, the accounts this referral partner has referred"
            },
            "regulatedWorkloadCount": {
                "name": "regulatedWorkloadCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "remoteManagementCommandRequestCount": {
                "name": "remoteManagementCommandRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of remote management command requests for an account"
            },
            "replicationEventCount": {
                "name": "replicationEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the Replication events for all Network Storage volumes on an account."
            },
            "reservedCapacityAgreementCount": {
                "name": "reservedCapacityAgreementCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all reserved capacity agreements for an account"
            },
            "reservedCapacityGroupCount": {
                "name": "reservedCapacityGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the reserved capacity groups owned by this account."
            },
            "resourceGroupCount": {
                "name": "resourceGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated top-level resource groups."
            },
            "routerCount": {
                "name": "routerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all Routers that an accounts VLANs reside on"
            },
            "rwhoisDataCount": {
                "name": "rwhoisDataCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of dEPRECATED"
            },
            "scaleGroupCount": {
                "name": "scaleGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all scale groups on this account."
            },
            "secondaryDomainCount": {
                "name": "secondaryDomainCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the secondary DNS records for a SoftLayer customer account."
            },
            "securityCertificateCount": {
                "name": "securityCertificateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of stored security certificates (ie. SSL)"
            },
            "securityGroupCount": {
                "name": "securityGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the security groups belonging to this account."
            },
            "securityScanRequestCount": {
                "name": "securityScanRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's vulnerability scan requests."
            },
            "serviceBillingItemCount": {
                "name": "serviceBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the service billing items that will be on an account's next invoice. "
            },
            "shipmentCount": {
                "name": "shipmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of shipments that belong to the customer's account."
            },
            "sshKeyCount": {
                "name": "sshKeyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of customer specified SSH keys that can be implemented onto a newly provisioned or reloaded server."
            },
            "sslVpnUserCount": {
                "name": "sslVpnUserCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated portal users with SSL VPN access."
            },
            "standardPoolVirtualGuestCount": {
                "name": "standardPoolVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's virtual guest objects that are hosted on a user provisioned hypervisor."
            },
            "subnetCount": {
                "name": "subnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all network subnets associated with an account."
            },
            "subnetRegistrationCount": {
                "name": "subnetRegistrationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "subnetRegistrationDetailCount": {
                "name": "subnetRegistrationDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "supportRepresentativeCount": {
                "name": "supportRepresentativeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer employees that an account is assigned to."
            },
            "supportSubscriptionCount": {
                "name": "supportSubscriptionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the active support subscriptions for this account."
            },
            "tagCount": {
                "name": "tagCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "ticketCount": {
                "name": "ticketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated tickets."
            },
            "ticketsClosedInTheLastThreeDaysCount": {
                "name": "ticketsClosedInTheLastThreeDaysCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of tickets closed within the last 72 hours or last 10 tickets, whichever is less, associated with an account."
            },
            "ticketsClosedTodayCount": {
                "name": "ticketsClosedTodayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of tickets closed today associated with an account."
            },
            "transcodeAccountCount": {
                "name": "transcodeAccountCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated Transcode account."
            },
            "upgradeRequestCount": {
                "name": "upgradeRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated upgrade requests."
            },
            "userCount": {
                "name": "userCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's portal users."
            },
            "validSecurityCertificateCount": {
                "name": "validSecurityCertificateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of stored security certificates that are not expired (ie. SSL)"
            },
            "virtualDedicatedRackCount": {
                "name": "virtualDedicatedRackCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the bandwidth pooling for this account."
            },
            "virtualDiskImageCount": {
                "name": "virtualDiskImageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated virtual server virtual disk images."
            },
            "virtualGuestCount": {
                "name": "virtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated virtual guest objects."
            },
            "virtualGuestsOverBandwidthAllocationCount": {
                "name": "virtualGuestsOverBandwidthAllocationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated virtual guest objects currently over bandwidth allocation."
            },
            "virtualGuestsProjectedOverBandwidthAllocationCount": {
                "name": "virtualGuestsProjectedOverBandwidthAllocationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated virtual guest objects currently over bandwidth allocation."
            },
            "virtualGuestsWithCpanelCount": {
                "name": "virtualGuestsWithCpanelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all virtual guests associated with an account that has the cPanel web hosting control panel installed."
            },
            "virtualGuestsWithMcafeeAntivirusRedhatCount": {
                "name": "virtualGuestsWithMcafeeAntivirusRedhatCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all virtual guests associated with an account that have McAfee Secure AntiVirus for Redhat software components."
            },
            "virtualGuestsWithMcafeeAntivirusWindowCount": {
                "name": "virtualGuestsWithMcafeeAntivirusWindowCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all virtual guests associated with an account that has McAfee Secure AntiVirus for Windows software components."
            },
            "virtualGuestsWithMcafeeCount": {
                "name": "virtualGuestsWithMcafeeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all virtual guests associated with an account that have McAfee Secure software components."
            },
            "virtualGuestsWithMcafeeIntrusionDetectionSystemCount": {
                "name": "virtualGuestsWithMcafeeIntrusionDetectionSystemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all virtual guests associated with an account that has McAfee Secure Intrusion Detection System software components."
            },
            "virtualGuestsWithPleskCount": {
                "name": "virtualGuestsWithPleskCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all virtual guests associated with an account that has the Plesk web hosting control panel installed."
            },
            "virtualGuestsWithQuantastorCount": {
                "name": "virtualGuestsWithQuantastorCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all virtual guests associated with an account that have the QuantaStor storage system installed."
            },
            "virtualGuestsWithUrchinCount": {
                "name": "virtualGuestsWithUrchinCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all virtual guests associated with an account that has the Urchin web traffic analytics package installed."
            },
            "virtualStorageArchiveRepositoryCount": {
                "name": "virtualStorageArchiveRepositoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated virtual server archived storage repositories."
            },
            "virtualStoragePublicRepositoryCount": {
                "name": "virtualStoragePublicRepositoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated virtual server public storage repositories."
            },
            "vpcVirtualGuestCount": {
                "name": "vpcVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated VPC configured virtual guest objects."
            }
        }
    },
    "SoftLayer_Account_AbuseEmail": {
        "name": "SoftLayer_Account_AbuseEmail",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "An unfortunate facet of the hosting business is the necessity of with legal and network abuse inquiries. As these types of inquiries frequently contain sensitive information SoftLayer keeps a separate account contact email address for direct contact about legal and abuse matters, modeled by the SoftLayer_Account_AbuseEmail data type. SoftLayer will typically email an account's abuse email addresses in these types of cases, and an email is automatically sent to an account's abuse email addresses when a legal or abuse ticket is created or updated. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account associated with an abuse email address."
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "A valid email address."
            }
        }
    },
    "SoftLayer_Account_Address": {
        "name": "SoftLayer_Account_Address",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's address service allows you to access and manage addresses associated with your account. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Account_Address",
                "doc": "Create a new address record. The ''typeId'', ''accountId'', ''description'', ''address1'', ''city'', ''state'', ''country'', and ''postalCode'' properties in the templateObject parameter are required properties and may not be null or empty. Users will be restricted to creating addresses for their account. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Address",
                        "doc": "The SoftLayer_Account_Address object that you wish to create."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the properties of an address record by passing in a modified instance of a SoftLayer_Account_Address object. Users will be restricted to modifying addresses for their account. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Address",
                        "doc": "A skeleton SoftLayer_Account_Address object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAllDataCenters": {
                "name": "getAllDataCenters",
                "type": "SoftLayer_Account_Address",
                "typeArray": true,
                "doc": "Retrieve a list of SoftLayer datacenter addresses.",
                "static": true,
                "maskable": true
            },
            "getNetworkAddress": {
                "name": "getNetworkAddress",
                "type": "SoftLayer_Account_Address",
                "typeArray": true,
                "doc": "Retrieve a list of SoftLayer datacenter addresses.",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "doc": "Location Name."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Address",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Account_Address data type contains information on an address associated with a SoftLayer account. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account to which this address belongs."
            },
            "createUser": {
                "name": "createUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who created this address."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The location of this address."
            },
            "modifyEmployee": {
                "name": "modifyEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "The employee who last modified this address."
            },
            "modifyUser": {
                "name": "modifyUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who last modified this address."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Account_Address_Type",
                "form": "relational",
                "doc": "An account address' type."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "Line 1 of the address (normally the street address)."
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "Line 2 of the address."
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The city of the address."
            },
            "contactName": {
                "name": "contactName",
                "type": "string",
                "form": "local",
                "doc": "The contact name (person, office) of the address."
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "The country of the address."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the address."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the address."
            },
            "isActive": {
                "name": "isActive",
                "type": "int",
                "form": "local",
                "doc": "Flag to show whether the address is active."
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "The location id of the address."
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The postal (zip) code of the address."
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "The state of the address."
            }
        }
    },
    "SoftLayer_Account_Address_Type": {
        "name": "SoftLayer_Account_Address_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Address_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "DEPRECATED"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Affiliation": {
        "name": "SoftLayer_Account_Affiliation",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Account_Affiliation",
                "doc": "Create a new affiliation to associate with an existing account. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Affiliation",
                        "doc": "The SoftLayer_Account_Affiliation object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "deleteObject permanently removes an account affiliation "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit an affiliation that is associated to an existing account. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Affiliation",
                        "doc": "A skeleton SoftLayer_Account_Affiliation object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAccountAffiliationsByAffiliateId": {
                "name": "getAccountAffiliationsByAffiliateId",
                "type": "SoftLayer_Account_Affiliation",
                "typeArray": true,
                "doc": "Get account affiliation information associated with affiliate id. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "affiliateId",
                        "type": "string",
                        "doc": "Affiliate Id"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Affiliation",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This service allows for a unique identifier to be associated to an existing customer account. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that an affiliation belongs to."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A customer account's internal identifier. "
            },
            "affiliateId": {
                "name": "affiliateId",
                "type": "string",
                "form": "local",
                "doc": "An affiliate identifier associated with the customer account. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an account affiliation was created. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A customer affiliation internal identifier. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an account affiliation was last modified. "
            }
        }
    },
    "SoftLayer_Account_Agreement": {
        "name": "SoftLayer_Account_Agreement",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Agreement",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "agreementType": {
                "name": "agreementType",
                "type": "SoftLayer_Account_Agreement_Type",
                "form": "relational",
                "doc": "The type of agreement."
            },
            "attachedBillingAgreementFiles": {
                "name": "attachedBillingAgreementFiles",
                "type": "SoftLayer_Account_MasterServiceAgreement",
                "form": "relational",
                "typeArray": true,
                "doc": "The files attached to an agreement."
            },
            "billingItems": {
                "name": "billingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items associated with an agreement."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Account_Agreement_Status",
                "form": "relational",
                "doc": "The status of the agreement."
            },
            "topLevelBillingItems": {
                "name": "topLevelBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The top level billing item associated with an agreement."
            },
            "agreementTypeId": {
                "name": "agreementTypeId",
                "type": "int",
                "form": "local",
                "doc": "The type of agreement identifier."
            },
            "autoRenew": {
                "name": "autoRenew",
                "type": "int",
                "form": "local"
            },
            "cancellationFee": {
                "name": "cancellationFee",
                "type": "int",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an agreement was created."
            },
            "durationMonths": {
                "name": "durationMonths",
                "type": "int",
                "form": "local",
                "doc": "The duration in months of an agreement."
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The end date of an agreement."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An agreement's internal identifier."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The effective start date of an agreement."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The status identifier for an agreement."
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "The title of an agreement."
            },
            "attachedBillingAgreementFileCount": {
                "name": "attachedBillingAgreementFileCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the files attached to an agreement."
            },
            "billingItemCount": {
                "name": "billingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items associated with an agreement."
            },
            "topLevelBillingItemCount": {
                "name": "topLevelBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the top level billing item associated with an agreement."
            }
        }
    },
    "SoftLayer_Account_Agreement_Status": {
        "name": "SoftLayer_Account_Agreement_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the agreement status."
            }
        }
    },
    "SoftLayer_Account_Agreement_Type": {
        "name": "SoftLayer_Account_Agreement_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the agreement type."
            }
        }
    },
    "SoftLayer_Account_Attachment_Employee": {
        "name": "SoftLayer_Account_Attachment_Employee",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A SoftLayer_Account_Attachment_Employee models an assignment of a single [[SoftLayer_User_Employee|employee]] with a single [[SoftLayer_Account|account]] ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "A [[SoftLayer_Account|account]] that is assigned to a [[SoftLayer_User_Employee|employee]]."
            },
            "employee": {
                "name": "employee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "A [[SoftLayer_User_Employee|employee]] that is assigned to a [[SoftLayer_Account|account]]."
            },
            "employeeRole": {
                "name": "employeeRole",
                "type": "SoftLayer_Account_Attachment_Employee_Role",
                "form": "relational",
                "doc": "A [[SoftLayer_User_Employee|employee]] that is assigned to a [[SoftLayer_Account|account]]."
            },
            "roleId": {
                "name": "roleId",
                "type": "int",
                "form": "local",
                "doc": "Role identifier."
            }
        }
    },
    "SoftLayer_Account_Attachment_Employee_Role": {
        "name": "SoftLayer_Account_Attachment_Employee_Role",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Attribute": {
        "name": "SoftLayer_Account_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Many SoftLayer customer accounts have individual attributes assigned to them that describe features or special features for that account, such as special pricing, account statuses, and ordering instructions. The SoftLayer_Account_Attribute data type contains information relating to a single SoftLayer_Account attribute. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account that has an attribute."
            },
            "accountAttributeType": {
                "name": "accountAttributeType",
                "type": "SoftLayer_Account_Attribute_Type",
                "form": "relational",
                "doc": "The type of attribute assigned to a SoftLayer customer account."
            },
            "accountAttributeTypeId": {
                "name": "accountAttributeTypeId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the type of attribute that a SoftLayer customer account attribute belongs to. "
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the SoftLayer customer account that is assigned an account attribute. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer customer account attribute's internal identifier. "
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A SoftLayer account attribute's value. "
            }
        }
    },
    "SoftLayer_Account_Attribute_Type": {
        "name": "SoftLayer_Account_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Account_Attribute_Type models the type of attribute that can be assigned to a SoftLayer customer account. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A brief description of a SoftLayer account attribute type. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer account attribute type's internal identifier. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A SoftLayer account attribute type's key name. This is typically a shorter version of an attribute type's name. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A SoftLayer account attribute type's name. "
            }
        }
    },
    "SoftLayer_Account_Authentication_Attribute": {
        "name": "SoftLayer_Account_Authentication_Attribute",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Authentication_Attribute",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Account authentication has many different settings that can be set. This class allows the customer or employee to set these settigns. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account."
            },
            "authenticationRecord": {
                "name": "authenticationRecord",
                "type": "SoftLayer_Account_Authentication_Saml",
                "form": "relational",
                "doc": "The SoftLayer account authentication that has an attribute."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Account_Authentication_Attribute_Type",
                "form": "relational",
                "doc": "The type of attribute assigned to a SoftLayer account authentication."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the SoftLayer customer account that is assigned an account authenction attribute. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer account authenction attribute's internal identifier. "
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the type of attribute that a SoftLayer account authenction attribute belongs to. "
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A SoftLayer account authenction attribute's value. "
            }
        }
    },
    "SoftLayer_Account_Authentication_Attribute_Type": {
        "name": "SoftLayer_Account_Authentication_Attribute_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Account_Attribute_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Authentication_Attribute_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Account_Authentication_Attribute_Type models the type of attribute that can be assigned to a SoftLayer customer account authentication. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A brief description of a SoftLayer account authentication attribute type. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer account authentication attribute type's internal identifier. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A SoftLayer account authentication attribute type's key name. This is typically a shorter version of an attribute type's name. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A SoftLayer account authentication attribute type's name. "
            },
            "valueExample": {
                "name": "valueExample",
                "type": "string",
                "form": "local",
                "doc": "An example of what you can put in as your value. "
            }
        }
    },
    "SoftLayer_Account_Authentication_OpenIdConnect_Option": {
        "name": "SoftLayer_Account_Authentication_OpenIdConnect_Option",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "key": {
                "name": "key",
                "type": "string",
                "form": "local"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Authentication_OpenIdConnect_RegistrationInformation": {
        "name": "SoftLayer_Account_Authentication_OpenIdConnect_RegistrationInformation",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "existingBlueIdFlag": {
                "name": "existingBlueIdFlag",
                "type": "boolean",
                "form": "local"
            },
            "federatedEmailDomainFlag": {
                "name": "federatedEmailDomainFlag",
                "type": "boolean",
                "form": "local"
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Authentication_Saml": {
        "name": "SoftLayer_Account_Authentication_Saml",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Account_Authentication_Saml",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Authentication_Saml",
                        "doc": "The SoftLayer_Account_Authentication_Saml object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the object by passing in a modified instance of the object ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Authentication_Saml",
                        "doc": "A skeleton SoftLayer_Account_Authentication_Saml object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getMetadata": {
                "name": "getMetadata",
                "type": "string",
                "doc": "This method will return the service provider metadata in XML format. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Authentication_Saml",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account associated with this saml configuration."
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Account_Authentication_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "The saml attribute values for a SoftLayer customer account."
            },
            "accountId": {
                "name": "accountId",
                "type": "string",
                "form": "local",
                "doc": "The saml account id."
            },
            "certificate": {
                "name": "certificate",
                "type": "string",
                "form": "local",
                "doc": "The identity provider x509 certificate."
            },
            "certificateFingerprint": {
                "name": "certificateFingerprint",
                "type": "string",
                "form": "local",
                "doc": "The identity provider x509 certificate fingerprint."
            },
            "entityId": {
                "name": "entityId",
                "type": "string",
                "form": "local",
                "doc": "The identity provider entity ID."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The saml internal identifying number."
            },
            "serviceProviderCertificate": {
                "name": "serviceProviderCertificate",
                "type": "string",
                "form": "local",
                "doc": "The service provider x509 certificate."
            },
            "serviceProviderEntityId": {
                "name": "serviceProviderEntityId",
                "type": "string",
                "form": "local",
                "doc": "The service provider entity IDs."
            },
            "serviceProviderPublicKey": {
                "name": "serviceProviderPublicKey",
                "type": "string",
                "form": "local",
                "doc": "The service provider public key."
            },
            "serviceProviderSingleLogoutEncoding": {
                "name": "serviceProviderSingleLogoutEncoding",
                "type": "string",
                "form": "local",
                "doc": "The service provider signle logout encoding."
            },
            "serviceProviderSingleLogoutUrl": {
                "name": "serviceProviderSingleLogoutUrl",
                "type": "string",
                "form": "local",
                "doc": "The service provider signle logout address."
            },
            "serviceProviderSingleSignOnEncoding": {
                "name": "serviceProviderSingleSignOnEncoding",
                "type": "string",
                "form": "local",
                "doc": "The service provider signle sign on encoding."
            },
            "serviceProviderSingleSignOnUrl": {
                "name": "serviceProviderSingleSignOnUrl",
                "type": "string",
                "form": "local",
                "doc": "The service provider signle sign on address."
            },
            "singleLogoutEncoding": {
                "name": "singleLogoutEncoding",
                "type": "string",
                "form": "local",
                "doc": "The identity provider single logout encoding."
            },
            "singleLogoutUrl": {
                "name": "singleLogoutUrl",
                "type": "string",
                "form": "local",
                "doc": "The identity provider sigle logout address."
            },
            "singleSignOnEncoding": {
                "name": "singleSignOnEncoding",
                "type": "string",
                "form": "local",
                "doc": "The identity provider single sign on encoding."
            },
            "singleSignOnUrl": {
                "name": "singleSignOnUrl",
                "type": "string",
                "form": "local",
                "doc": "The identity provider signle sign on address."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the saml attribute values for a SoftLayer customer account."
            }
        }
    },
    "SoftLayer_Account_Business_Partner": {
        "name": "SoftLayer_Account_Business_Partner",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Business_Partner",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Contains business partner details associated with an account. Country Enterprise Identifier (CEID), Channel ID, Segment ID and Reseller Level. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "Account associated with the business partner data"
            },
            "channel": {
                "name": "channel",
                "type": "SoftLayer_Business_Partner_Channel",
                "form": "relational",
                "doc": "Channel indicator used to categorize business partner revenue."
            },
            "segment": {
                "name": "segment",
                "type": "SoftLayer_Business_Partner_Segment",
                "form": "relational",
                "doc": "Segment indicator used to categorize business partner revenue."
            },
            "channelId": {
                "name": "channelId",
                "type": "int",
                "form": "local",
                "doc": "Account business partner channel identifier "
            },
            "countryEnterpriseCode": {
                "name": "countryEnterpriseCode",
                "type": "string",
                "form": "local",
                "doc": "Account business partner country enterprise code "
            },
            "resellerLevel": {
                "name": "resellerLevel",
                "type": "int",
                "form": "local",
                "doc": "Reseller level of an account business partner "
            },
            "segmentId": {
                "name": "segmentId",
                "type": "int",
                "form": "local",
                "doc": "Account business partner segment identifier "
            }
        }
    },
    "SoftLayer_Account_Classification_Group_Type": {
        "name": "SoftLayer_Account_Classification_Group_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Contact": {
        "name": "SoftLayer_Account_Contact",
        "base": "SoftLayer_Entity",
        "methods": {
            "createComplianceReportRequestorContact": {
                "name": "createComplianceReportRequestorContact",
                "type": "SoftLayer_Account_Contact",
                "doc": "<<EOT",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "requestorTemplate",
                        "type": "SoftLayer_Account_Contact"
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Account_Contact",
                "doc": "This method creates an account contact. The accountId is fixed, other properties can be set during creation. The typeId indicates the SoftLayer_Account_Contact_Type for the contact. This method returns the SoftLayer_Account_Contact object that is created. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Contact",
                        "doc": "The SoftLayer_Account_Contact object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "deleteObject permanently removes an account contact "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "This method allows you to modify an account contact. Only master users are permitted to modify an account contact. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Contact",
                        "doc": "A skeleton SoftLayer_Account_Contact object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAllContactTypes": {
                "name": "getAllContactTypes",
                "type": "SoftLayer_Account_Contact_Type",
                "typeArray": true,
                "doc": "This method will return an array of SoftLayer_Account_Contact_Type objects which can be used when creating or editing an account contact. ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Contact",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Account_Contact_Type",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local"
            },
            "alternatePhone": {
                "name": "alternatePhone",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local"
            },
            "faxPhone": {
                "name": "faxPhone",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "jobTitle": {
                "name": "jobTitle",
                "type": "string",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local"
            },
            "profileName": {
                "name": "profileName",
                "type": "string",
                "form": "local"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local"
            },
            "url": {
                "name": "url",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Contact_Type": {
        "name": "SoftLayer_Account_Contact_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_External_Setup": {
        "name": "SoftLayer_Account_External_Setup",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service class allows the user to set up an account to be billed by an external billing system. ",
        "methods": {
            "finalizeExternalBillingForAccount": {
                "name": "finalizeExternalBillingForAccount",
                "type": "SoftLayer_Container_Account_External_Setup_ProvisioningHoldLifted",
                "doc": "Calling this method signals that the account with the provided account id is ready to be billed by the external billing system. ",
                "static": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_External_Setup",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "verifyCardTransaction": {
                "name": "verifyCardTransaction",
                "type": "SoftLayer_Billing_Payment_Card_Transaction",
                "form": "relational",
                "doc": "The transaction information related to verifying the customer credit card."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer customer account the request belongs to."
            },
            "currencyId": {
                "name": "currencyId",
                "type": "int",
                "form": "local",
                "doc": "The currency requested after the billing switch."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this setup request."
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local",
                "doc": "The external system that will handle billing."
            },
            "statusCode": {
                "name": "statusCode",
                "type": "string",
                "form": "local",
                "doc": "The status of the account setup request."
            },
            "typeCode": {
                "name": "typeCode",
                "type": "string",
                "form": "local"
            },
            "verifyCardTransactionId": {
                "name": "verifyCardTransactionId",
                "type": "int",
                "form": "local",
                "doc": "The related credit card transaction record for card verification."
            }
        }
    },
    "SoftLayer_Account_Historical_Report": {
        "name": "SoftLayer_Account_Historical_Report",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's account historical report service allows users to access a broad overview of devices for that account and historical details concerning the overall function and performance of the devices on that account ",
        "methods": {
            "getAccountHostUptimeGraphData": {
                "name": "getAccountHostUptimeGraphData",
                "type": "SoftLayer_Container_Graph",
                "static": true,
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "string",
                        "doc": "format: YYYY-MM-DD (2008-11-01)"
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "doc": "format: YYYY-MM-DD (2008-11-01)"
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "Unused, necessary to keep parent API contract.",
                        "defaultValue": null
                    }
                ]
            },
            "getAccountHostUptimeSummary": {
                "name": "getAccountHostUptimeSummary",
                "type": "SoftLayer_Container_Account_Historical_Summary",
                "static": true,
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "string"
                    },
                    {
                        "name": "endDateTime",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "Unused, necessary to keep API contract with parent.",
                        "defaultValue": null
                    }
                ]
            },
            "getAccountUrlUptimeGraphData": {
                "name": "getAccountUrlUptimeGraphData",
                "type": "SoftLayer_Container_Graph",
                "static": true,
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "string",
                        "doc": "format: YYYY-MM-DD (2008-11-01)"
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "doc": "format: YYYY-MM-DD (2008-11-01)"
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "Unused, necessary to keep parent API contract.",
                        "defaultValue": null
                    }
                ]
            },
            "getAccountUrlUptimeSummary": {
                "name": "getAccountUrlUptimeSummary",
                "type": "SoftLayer_Container_Account_Historical_Summary",
                "static": true,
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "string"
                    },
                    {
                        "name": "endDateTime",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "Unused, necessary to keep API contract with parent method.",
                        "defaultValue": null
                    }
                ]
            },
            "getHostUptimeDetail": {
                "name": "getHostUptimeDetail",
                "type": "SoftLayer_Container_Account_Historical_Summary_Detail",
                "static": true,
                "parameters": [
                    {
                        "name": "configurationValueId",
                        "type": "int"
                    },
                    {
                        "name": "startDateTime",
                        "type": "string"
                    },
                    {
                        "name": "endDateTime",
                        "type": "string"
                    }
                ]
            },
            "getHostUptimeGraphData": {
                "name": "getHostUptimeGraphData",
                "type": "SoftLayer_Container_Graph",
                "static": true,
                "parameters": [
                    {
                        "name": "configurationValueId",
                        "type": "int"
                    },
                    {
                        "name": "startDate",
                        "type": "string",
                        "doc": "format: YYYY-MM-DD (2008-11-01)"
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "doc": "format: YYYY-MM-DD (2008-11-01)"
                    }
                ]
            },
            "getUrlUptimeDetail": {
                "name": "getUrlUptimeDetail",
                "type": "SoftLayer_Container_Account_Historical_Summary_Detail",
                "static": true,
                "parameters": [
                    {
                        "name": "configurationValueId",
                        "type": "int"
                    },
                    {
                        "name": "startDateTime",
                        "type": "string"
                    },
                    {
                        "name": "endDateTime",
                        "type": "string"
                    }
                ]
            },
            "getUrlUptimeGraphData": {
                "name": "getUrlUptimeGraphData",
                "type": "SoftLayer_Container_Graph",
                "static": true,
                "parameters": [
                    {
                        "name": "configurationValueId",
                        "type": "int"
                    },
                    {
                        "name": "startDate",
                        "type": "string",
                        "doc": "format: YYYY-MM-DD (2008-11-01)"
                    },
                    {
                        "name": "endDate",
                        "type": "string",
                        "doc": "format: YYYY-MM-DD (2008-11-01)"
                    }
                ]
            }
        }
    },
    "SoftLayer_Account_Internal_Ibm": {
        "name": "SoftLayer_Account_Internal_Ibm",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Processes requests by IBM employees to create an IaaS account tied to their email. Request process cannot be initiated directly and must go through the Bluemix IBMer account request form. ",
        "methods": {
            "getAccountTypes": {
                "name": "getAccountTypes",
                "type": "string",
                "typeArray": true,
                "doc": "Validates request and, if the request is approved, returns a list of allowed uses for an automatically created IBMer IaaS account. ",
                "static": true
            },
            "getAuthorizationUrl": {
                "name": "getAuthorizationUrl",
                "type": "string",
                "doc": "Gets the URL used to perform manager validation. ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    }
                ]
            },
            "getBmsCountryList": {
                "name": "getBmsCountryList",
                "type": "string",
                "typeArray": true,
                "static": true
            },
            "getEmployeeAccessToken": {
                "name": "getEmployeeAccessToken",
                "type": "string",
                "doc": "Exchanges a code for a token during manager validation. ",
                "static": true,
                "parameters": [
                    {
                        "name": "unverifiedAuthenticationCode",
                        "type": "string"
                    }
                ]
            },
            "getManagerPreview": {
                "name": "getManagerPreview",
                "type": "SoftLayer_Container_Account_Internal_Ibm_Request",
                "doc": "After validating the requesting user through the access token, generates a container with the relevant request information and returns it. ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    },
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "hasExistingRequest": {
                "name": "hasExistingRequest",
                "type": "boolean",
                "doc": "Checks for an existing request which would block an IBMer from submitting a new request. Such a request could be denied, approved, or awaiting manager action. ",
                "static": true,
                "parameters": [
                    {
                        "name": "employeeUid",
                        "type": "string"
                    },
                    {
                        "name": "managerUid",
                        "type": "string"
                    }
                ]
            },
            "managerApprove": {
                "name": "managerApprove",
                "type": "void",
                "doc": "Applies manager approval to a pending internal IBM account request. If cost recovery is already configured, this will create an account. If not, this will remind the internal team to configure cost recovery and create the account when possible. ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    },
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "managerDeny": {
                "name": "managerDeny",
                "type": "void",
                "doc": "Denies a pending request and prevents additional requests from the same applicant for as long as the manager remains the same. ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    },
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "requestAccount": {
                "name": "requestAccount",
                "type": "void",
                "doc": "Validates request and kicks off the approval process. ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestContainer",
                        "type": "SoftLayer_Container_Account_Internal_Ibm_Request"
                    }
                ]
            }
        }
    },
    "SoftLayer_Account_Link": {
        "name": "SoftLayer_Account_Link",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "serviceProvider": {
                "name": "serviceProvider",
                "type": "SoftLayer_Service_Provider",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "destinationAccountAlphanumericId": {
                "name": "destinationAccountAlphanumericId",
                "type": "string",
                "form": "local"
            },
            "destinationAccountId": {
                "name": "destinationAccountId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Link_Bluemix": {
        "name": "SoftLayer_Account_Link_Bluemix",
        "base": "SoftLayer_Account_Link",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Link_Bluemix",
                "filterable": true,
                "maskable": true
            },
            "getSupportTierType": {
                "name": "getSupportTierType",
                "type": "string"
            }
        }
    },
    "SoftLayer_Account_Link_OpenStack": {
        "name": "SoftLayer_Account_Link_OpenStack",
        "base": "SoftLayer_Account_Link",
        "serviceDoc": "Service for linking account to OpenStack project ",
        "methods": {
            "createOSDomain": {
                "name": "createOSDomain",
                "type": "SoftLayer_Account_Link_OpenStack_DomainCreationDetails",
                "static": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Account_Link_OpenStack_LinkRequest"
                    }
                ]
            },
            "createOSProject": {
                "name": "createOSProject",
                "type": "SoftLayer_Account_Link_OpenStack_ProjectCreationDetails",
                "static": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Account_Link_OpenStack_LinkRequest"
                    }
                ]
            },
            "deleteOSDomain": {
                "name": "deleteOSDomain",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "domainId",
                        "type": "string"
                    }
                ]
            },
            "deleteOSProject": {
                "name": "deleteOSProject",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "projectId",
                        "type": "string"
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "deleteObject permanently removes an account link and all of it's associated keystone data (including users for the associated project). '''This cannot be undone.''' Be wary of running this method. If you remove an account link in error you will need to re-create it by creating a new SoftLayer_Account_Link_OpenStack object. "
            },
            "getOSProject": {
                "name": "getOSProject",
                "type": "SoftLayer_Account_Link_OpenStack_ProjectDetails",
                "static": true,
                "parameters": [
                    {
                        "name": "projectId",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Link_OpenStack",
                "filterable": true,
                "maskable": true
            },
            "listOSProjects": {
                "name": "listOSProjects",
                "type": "SoftLayer_Account_Link_OpenStack_ProjectDetails",
                "typeArray": true,
                "static": true
            }
        },
        "properties": {
            "domainId": {
                "name": "domainId",
                "type": "string",
                "form": "local",
                "doc": "Pseudonym for destinationAccountAlphanumericId"
            }
        }
    },
    "SoftLayer_Account_Link_OpenStack_DomainCreationDetails": {
        "name": "SoftLayer_Account_Link_OpenStack_DomainCreationDetails",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "OpenStack domain creation details",
        "properties": {
            "domainId": {
                "name": "domainId",
                "type": "string",
                "form": "local",
                "doc": "Id for the domain this user was added to. "
            },
            "userId": {
                "name": "userId",
                "type": "string",
                "form": "local",
                "doc": "Id for the user given the Cloud Admin role for this domain. "
            },
            "userName": {
                "name": "userName",
                "type": "string",
                "form": "local",
                "doc": "Name for the user given the Cloud Admin role for this domain. "
            }
        }
    },
    "SoftLayer_Account_Link_OpenStack_LinkRequest": {
        "name": "SoftLayer_Account_Link_OpenStack_LinkRequest",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Details required for OpenStack link request",
        "properties": {
            "desiredPassword": {
                "name": "desiredPassword",
                "type": "string",
                "form": "local",
                "doc": "Optional password"
            },
            "desiredProjectName": {
                "name": "desiredProjectName",
                "type": "string",
                "form": "local",
                "doc": "Optional projectName"
            },
            "desiredUsername": {
                "name": "desiredUsername",
                "type": "string",
                "form": "local",
                "doc": "Required username"
            }
        }
    },
    "SoftLayer_Account_Link_OpenStack_ProjectCreationDetails": {
        "name": "SoftLayer_Account_Link_OpenStack_ProjectCreationDetails",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "OpenStack project creation details",
        "properties": {
            "domainId": {
                "name": "domainId",
                "type": "string",
                "form": "local",
                "doc": "Id for the domain this project was added to. "
            },
            "projectId": {
                "name": "projectId",
                "type": "string",
                "form": "local",
                "doc": "Id for this project. "
            },
            "projectName": {
                "name": "projectName",
                "type": "string",
                "form": "local",
                "doc": "Name for this project. "
            },
            "userId": {
                "name": "userId",
                "type": "string",
                "form": "local",
                "doc": "Id for the user given the Project Admin role for this project. "
            },
            "userName": {
                "name": "userName",
                "type": "string",
                "form": "local",
                "doc": "Name for the user given the Project Admin role for this project. "
            }
        }
    },
    "SoftLayer_Account_Link_OpenStack_ProjectDetails": {
        "name": "SoftLayer_Account_Link_OpenStack_ProjectDetails",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "OpenStack project details",
        "properties": {
            "projectId": {
                "name": "projectId",
                "type": "string",
                "form": "local",
                "doc": "Id for this project. "
            },
            "projectName": {
                "name": "projectName",
                "type": "string",
                "form": "local",
                "doc": "Name for this project. "
            }
        }
    },
    "SoftLayer_Account_Link_Vendor": {
        "name": "SoftLayer_Account_Link_Vendor",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Lockdown_Request": {
        "name": "SoftLayer_Account_Lockdown_Request",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service allows approved brands the ability to disconnect, reconnect, and disable customer accounts under that brand. Brand customers are able to make requests on their customers through an API call to this service. \n\nDisconnecting a customer will disable all hardware resources (servers and virtual machines) via a lockdown event. The customer will continue to have control portal access as well as access to their private ports. \n\nReconnecting a customer will restore all previously disconnected public access. The original lockdown event will be closed. \n\nDisabling an account is a PERMANENT action. All billable items under the account will be canceled, access to the control portal, all resources, network access and hardware will be permanently disabled and reclaimed. ",
        "methods": {
            "cancelRequest": {
                "name": "cancelRequest",
                "type": "void",
                "doc": "Will cancel a lockdown request scheduled in the future. Once canceled, the lockdown request cannot be reconciled and new requests must be made for subsequent actions on the account. "
            },
            "disableLockedAccount": {
                "name": "disableLockedAccount",
                "type": "int",
                "doc": "Takes the original lockdown request ID, and an optional disable date. If no date is passed with the API call, the account will be disabled immediately. Otherwise, the account will be disabled on the date given. All hardware will be reclaimed and all accounts permanently disabled. ",
                "parameters": [
                    {
                        "name": "disableDate",
                        "type": "string",
                        "defaultValue": null
                    }
                ]
            },
            "disconnectCompute": {
                "name": "disconnectCompute",
                "type": "int",
                "doc": "Takes an account ID and an optional disconnect date. If no disconnect date is passed into the API call, the account disconnection will happen immediately. Otherwise, the account disconnection will happen on the date given. A brand account request ID will be returned and will then be updated when the disconnection occurs. ",
                "static": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int"
                    },
                    {
                        "name": "disconnectDate",
                        "type": "string",
                        "defaultValue": null
                    }
                ]
            },
            "getAccountHistory": {
                "name": "getAccountHistory",
                "type": "SoftLayer_Account_Lockdown_Request",
                "typeArray": true,
                "doc": "Provides a history of an account's lockdown requests and their status.",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Lockdown_Request",
                "filterable": true,
                "maskable": true
            },
            "reconnectCompute": {
                "name": "reconnectCompute",
                "type": "int",
                "doc": "Takes the original disconnected lockdown event ID, and an optional reconnect date. If no reconnect date is passed with the API call, the account reconnection will happen immediately. Otherwise, the account reconnection will happen on the date given. The associated lockdown event will be unlocked and closed at that time. ",
                "parameters": [
                    {
                        "name": "reconnectDate",
                        "type": "string",
                        "defaultValue": null
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Account_Lockdown_Request data type holds information on API requests from brand customers. ",
        "properties": {
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "Account ID associated with this lockdown request."
            },
            "action": {
                "name": "action",
                "type": "string",
                "form": "local",
                "doc": "Type of request."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp when the lockdown request was initially made."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "ID of this lockdown request."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp when the lockdown request was modified."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "Status of the lockdown request denoting whether it's been completed."
            }
        }
    },
    "SoftLayer_Account_MasterServiceAgreement": {
        "name": "SoftLayer_Account_MasterServiceAgreement",
        "base": "SoftLayer_Entity",
        "methods": {
            "getFile": {
                "name": "getFile",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "doc": "Gets a File Entity container with the user's account's current MSA PDF. Gets a translation if one is available. Otherwise, gets the master document. ",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_MasterServiceAgreement",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "guid": {
                "name": "guid",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Media": {
        "name": "SoftLayer_Account_Media",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's data transfer request media service allows users to access and manage their media devices that they have submitted through SoftLayer's Data Transfer Service. ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the properties of a media record by passing in a modified instance of a SoftLayer_Account_Media object. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Media",
                        "doc": "A skeleton SoftLayer_Account_Media object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAllMediaTypes": {
                "name": "getAllMediaTypes",
                "type": "SoftLayer_Account_Media_Type",
                "typeArray": true,
                "doc": "Retrieve a list supported media types for SoftLayer's Data Transfer Service.",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Media",
                "filterable": true,
                "maskable": true
            },
            "removeMediaFromList": {
                "name": "removeMediaFromList",
                "type": "int",
                "doc": "Remove a media from a SoftLayer account's list of media. The media record is not deleted. ",
                "static": true,
                "parameters": [
                    {
                        "name": "mediaTemplate",
                        "type": "SoftLayer_Account_Media",
                        "doc": "A template of the media to be hidden from the available media list."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Account_Media data type contains information on a single piece of media associated with a Data Transfer Service request. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account to which the media belongs."
            },
            "createUser": {
                "name": "createUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who created the media object."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The datacenter where the media resides."
            },
            "modifyEmployee": {
                "name": "modifyEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "The employee who last modified the media."
            },
            "modifyUser": {
                "name": "modifyUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who last modified the media."
            },
            "request": {
                "name": "request",
                "type": "SoftLayer_Account_Media_Data_Transfer_Request",
                "form": "relational",
                "doc": "The request to which the media belongs."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Account_Media_Type",
                "form": "relational",
                "doc": "The media's type."
            },
            "volume": {
                "name": "volume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "A guest's associated EVault network storage service account."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the media."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the media."
            },
            "requestId": {
                "name": "requestId",
                "type": "int",
                "form": "local",
                "doc": "The request id of the media."
            },
            "serialNumber": {
                "name": "serialNumber",
                "type": "string",
                "form": "local",
                "doc": "The manufacturer's serial number of the media."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The type id of the media."
            }
        }
    },
    "SoftLayer_Account_Media_Data_Transfer_Request": {
        "name": "SoftLayer_Account_Media_Data_Transfer_Request",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's Data Transfer Request Service allows users to send SoftLayer media devices such as DVDs, CDs, USB hard drives or USB flash/thumb drives. These media can be connected to SoftLayer servers and presented as ISCSI targets for use by the user. Currently, the initial usage period is two weeks and there is no charge for this service. Additional time for maintaining the media for continued may be purchased. Please contact sales for additional information regarding this. Once the usage period has elapsed. SoftLayer will disconnect the media and return it to the user. ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the properties of a data transfer request record by passing in a modified instance of a SoftLayer_Account_Media_Data_Transfer_Request object. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Media_Data_Transfer_Request",
                        "doc": "A skeleton SoftLayer_Account_Media_Data_Transfer_Request object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAllRequestStatuses": {
                "name": "getAllRequestStatuses",
                "type": "SoftLayer_Account_Media_Data_Transfer_Request_Status",
                "typeArray": true,
                "doc": "Retrieves a list of all the possible statuses to which a request may be set.",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Media_Data_Transfer_Request",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Account_Media_Data_Transfer_Request data type contains information on a single Data Transfer Service request. Creation of these requests is limited to SoftLayer customers through the SoftLayer Customer Portal. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account to which the request belongs."
            },
            "activeTickets": {
                "name": "activeTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The active tickets that are attached to the data transfer request."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for the original request."
            },
            "createUser": {
                "name": "createUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who created the request."
            },
            "media": {
                "name": "media",
                "type": "SoftLayer_Account_Media",
                "form": "relational",
                "doc": "The media of the request."
            },
            "modifyEmployee": {
                "name": "modifyEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "The employee who last modified the request."
            },
            "modifyUser": {
                "name": "modifyUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who last modified the request."
            },
            "shipments": {
                "name": "shipments",
                "type": "SoftLayer_Account_Shipment",
                "form": "relational",
                "typeArray": true,
                "doc": "The shipments of the request."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Account_Media_Data_Transfer_Request_Status",
                "form": "relational",
                "doc": "The status of the request."
            },
            "tickets": {
                "name": "tickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "All tickets that are attached to the data transfer request."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account id of the request."
            },
            "createUserId": {
                "name": "createUserId",
                "type": "int",
                "form": "local",
                "doc": "The create user id of the request."
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The end date of the request."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the request."
            },
            "modifyUserId": {
                "name": "modifyUserId",
                "type": "int",
                "form": "local",
                "doc": "The modify user id of the request."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The start date of the request."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The status id of the request."
            },
            "activeTicketCount": {
                "name": "activeTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the active tickets that are attached to the data transfer request."
            },
            "shipmentCount": {
                "name": "shipmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the shipments of the request."
            },
            "ticketCount": {
                "name": "ticketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all tickets that are attached to the data transfer request."
            }
        }
    },
    "SoftLayer_Account_Media_Data_Transfer_Request_Status": {
        "name": "SoftLayer_Account_Media_Data_Transfer_Request_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Account_Media_Data_Transfer_Request_Status data type contains general information relating to the statuses to which a Data Transfer Request may be set. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the request status."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the request status."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The unique keyname of the request status."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the request status."
            }
        }
    },
    "SoftLayer_Account_Media_Type": {
        "name": "SoftLayer_Account_Media_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Account_Media_Type data type contains general information relating to the different types of media devices that SoftLayer currently supports, as part of the Data Transfer Request Service. Such devices as USB hard drives and flash drives, as well as optical media such as CD and DVD are currently supported. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the media type."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the media type."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The unique keyname of the media type."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the media type."
            }
        }
    },
    "SoftLayer_Account_Network_Vlan_Span": {
        "name": "SoftLayer_Account_Network_Vlan_Span",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Account_Network_Vlan_Span data type exposes the setting which controls the automatic spanning of private VLANs attached to a given customers account. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account associated with a VLAN."
            },
            "enabledFlag": {
                "name": "enabledFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating whether the customer wishes to have all private network VLANs associated with account automatically joined [0 or 1]"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique internal identifier of the SoftLayer_Account_Network_Vlan_Span object."
            },
            "lastAppliedDate": {
                "name": "lastAppliedDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of the last time the ACL for this account was applied."
            },
            "lastVerifiedDate": {
                "name": "lastVerifiedDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of the last time the subnet hash was verified for this VLAN span record."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of the last edit of the record."
            }
        }
    },
    "SoftLayer_Account_Note": {
        "name": "SoftLayer_Account_Note",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Account_Note",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Note",
                        "doc": "The SoftLayer_Account_Note object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Note",
                        "doc": "A skeleton SoftLayer_Account_Note object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Note",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "customer": {
                "name": "customer",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "noteHistory": {
                "name": "noteHistory",
                "type": "SoftLayer_Account_Note_History",
                "form": "relational",
                "typeArray": true
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local"
            },
            "noteTypeId": {
                "name": "noteTypeId",
                "type": "int",
                "form": "local"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local"
            },
            "noteHistoryCount": {
                "name": "noteHistoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Account_Note_History": {
        "name": "SoftLayer_Account_Note_History",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "accountNote": {
                "name": "accountNote",
                "type": "SoftLayer_Account_Note",
                "form": "relational"
            },
            "customer": {
                "name": "customer",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "accountNoteId": {
                "name": "accountNoteId",
                "type": "int",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Partner_Referral_Prospect": {
        "name": "SoftLayer_Account_Partner_Referral_Prospect",
        "base": "SoftLayer_User_Customer_Prospect",
        "methods": {
            "createProspect": {
                "name": "createProspect",
                "type": "SoftLayer_Account_Partner_Referral_Prospect",
                "doc": "Create a new Referral Partner Prospect ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Container_Referral_Partner_Prospect",
                        "doc": "use an container object for transport"
                    },
                    {
                        "name": "commit",
                        "type": "boolean",
                        "doc": "Commit Flag",
                        "defaultValue": true
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Partner_Referral_Prospect",
                "filterable": true,
                "maskable": true
            },
            "getSurveyQuestions": {
                "name": "getSurveyQuestions",
                "type": "SoftLayer_Survey_Question",
                "typeArray": true,
                "doc": "Retrieves Questions for a Referral Partner Survey ",
                "static": true,
                "maskable": true
            }
        },
        "properties": {
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local"
            },
            "emailAddress": {
                "name": "emailAddress",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Password": {
        "name": "SoftLayer_Account_Password",
        "base": "SoftLayer_Entity",
        "serviceDoc": "As a SoftLayer customer accumulates services they may accumulate usernames and passwords to those services. The SoftLayer_Account_Password data type stores a username and password combination for these services that are tied their customer account. This shouldn't be confused with username and password combinations for server-specific services. \n\nFor instance, an account's EVault WebCC information is kept in a SoftLayer_Account_Password record, but a server's root or control panel password isn't. Server software specific usernames and passwords are handled by the SoftLayer_Hardware_Software_Password data type. ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "The password and/or notes may be modified.  Modifying the EVault passwords here will also update the password the Webcc interface will use. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Password",
                        "doc": "A skeleton SoftLayer_Account_Password object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Password",
                "doc": "getObject retrieves the SoftLayer_Account_Password object whose ID corresponds to the ID number of the init parameter passed to the SoftLayer_Account_Password service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Account_Password contains username, passwords and notes for services that may require for external applications such the Webcc interface for the EVault Storage service. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Account_Password_Type",
                "form": "relational",
                "doc": "The service that an account/password combination is tied to."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer customer account id that a username/password combination is associated with."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A username/password combination's internal identifier."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A simple description of a username/password combination. These notes don't affect portal functionality."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "The password portion of a username/password combination."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "An identifier relating to a username/password combinations's associated service."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username portion of a username/password combination."
            }
        }
    },
    "SoftLayer_Account_Password_Type": {
        "name": "SoftLayer_Account_Password_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Every username and password combination associated with a SoftLayer customer account belongs to a service that SoftLayer provides. The relationship between a username/password and it's service is provided by the SoftLayer_Account_Password_Type data type. Each username/password belongs to a single service type. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A description of the use for the account username/password combination."
            }
        }
    },
    "SoftLayer_Account_PersonalData_RemoveRequestReview": {
        "name": "SoftLayer_Account_PersonalData_RemoveRequestReview",
        "base": "SoftLayer_Entity",
        "methods": {
            "approveRequest": {
                "name": "approveRequest",
                "type": "void",
                "doc": "Approve a personal information removal request.",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    },
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "getAuthorizationUrl": {
                "name": "getAuthorizationUrl",
                "type": "string",
                "doc": "Gets the redirect URL for GDPR removal review.",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_PersonalData_RemoveRequestReview",
                "filterable": true,
                "maskable": true
            },
            "getPendingRequests": {
                "name": "getPendingRequests",
                "type": "SoftLayer_Container_Account_PersonalInformation",
                "typeArray": true,
                "doc": "Gets information removal requests to review.",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "getReviewerAccessToken": {
                "name": "getReviewerAccessToken",
                "type": "string",
                "doc": "Retrieves an access token.",
                "static": true,
                "parameters": [
                    {
                        "name": "code",
                        "type": "string"
                    }
                ]
            },
            "getReviewerEmailFromAccessToken": {
                "name": "getReviewerEmailFromAccessToken",
                "type": "string",
                "doc": "Finds a reviewer's email using the access token",
                "static": true,
                "parameters": [
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "getTotalPendingRequests": {
                "name": "getTotalPendingRequests",
                "type": "int",
                "static": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "approvedFlag": {
                "name": "approvedFlag",
                "type": "SoftLayer_Account_PersonalData_RemoveRequestReview",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Account_ProofOfConcept": {
        "name": "SoftLayer_Account_ProofOfConcept",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Approved IBM sales representatives can use this service to request and manage temporary access on behalf of clients. This access is subject to multiple layers of approval and requires payment arrangement in advance. \n\nThis service is unavailable to users outside of IBM and is not applicable to the majority of users. ",
        "methods": {
            "approveReview": {
                "name": "approveReview",
                "type": "void",
                "doc": "Allows a verified reviewer to approve a request ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    },
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "denyReview": {
                "name": "denyReview",
                "type": "void",
                "doc": "Allows verified reviewer to deny a request ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    },
                    {
                        "name": "accessToken",
                        "type": "string"
                    },
                    {
                        "name": "reason",
                        "type": "string"
                    }
                ]
            },
            "getAuthenticationUrl": {
                "name": "getAuthenticationUrl",
                "type": "string",
                "doc": "Returns URL used to authenticate reviewers ",
                "static": true,
                "parameters": [
                    {
                        "name": "targetPage",
                        "type": "string"
                    }
                ]
            },
            "getRequestsPendingIntegratedOfferingTeamReview": {
                "name": "getRequestsPendingIntegratedOfferingTeamReview",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Review_Summary",
                "typeArray": true,
                "doc": "Retrieves a list of requests that are pending review in the specified regions ",
                "static": true,
                "limitable": true,
                "parameters": [
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "getRequestsPendingOverThresholdReview": {
                "name": "getRequestsPendingOverThresholdReview",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Review_Summary",
                "typeArray": true,
                "doc": "Retrieves a list of requests that are pending over threshold review ",
                "static": true,
                "limitable": true,
                "parameters": [
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "getReviewerAccessToken": {
                "name": "getReviewerAccessToken",
                "type": "string",
                "doc": "Exchanges a code for a token during reviewer validation. ",
                "static": true,
                "parameters": [
                    {
                        "name": "unverifiedAuthenticationCode",
                        "type": "string"
                    }
                ]
            },
            "getReviewerEmailFromAccessToken": {
                "name": "getReviewerEmailFromAccessToken",
                "type": "string",
                "doc": "Finds a reviewer's email using the access token ",
                "static": true,
                "parameters": [
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "getSubmittedRequest": {
                "name": "getSubmittedRequest",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Review",
                "doc": "Allows authorized IBMer to pull all the details of a single proof of concept account request. ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    }
                ]
            },
            "getSubmittedRequests": {
                "name": "getSubmittedRequests",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Review_Summary",
                "typeArray": true,
                "doc": "Allows authorized IBMer to retrieve a list summarizing all previously submitted proof of concept requests. \n\nNote that the proof of concept system is for internal IBM employees only and is not applicable to users outside the IBM organization. ",
                "static": true,
                "limitable": true,
                "parameters": [
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "sortOrder",
                        "type": "string",
                        "defaultValue": "desc"
                    }
                ]
            },
            "getSupportEmailAddress": {
                "name": "getSupportEmailAddress",
                "type": "string",
                "doc": "Gets email address users can use to ask for help/support ",
                "static": true
            },
            "getTotalRequestsPendingIntegratedOfferingTeamReview": {
                "name": "getTotalRequestsPendingIntegratedOfferingTeamReview",
                "type": "int",
                "static": true,
                "parameters": [
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "getTotalRequestsPendingOverThresholdReviewCount": {
                "name": "getTotalRequestsPendingOverThresholdReviewCount",
                "type": "int",
                "static": true
            },
            "isCurrentReviewer": {
                "name": "isCurrentReviewer",
                "type": "boolean",
                "doc": "Determines if the user is one of the reviewers currently able to act ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    },
                    {
                        "name": "accessToken",
                        "type": "string"
                    }
                ]
            },
            "isIntegratedOfferingTeamReviewer": {
                "name": "isIntegratedOfferingTeamReviewer",
                "type": "boolean",
                "doc": "Indicates whether or not a reviewer belongs to the integrated offering team ",
                "static": true,
                "parameters": [
                    {
                        "name": "emailAddress",
                        "type": "string"
                    }
                ]
            },
            "isOverThresholdReviewer": {
                "name": "isOverThresholdReviewer",
                "type": "boolean",
                "doc": "Indicates whether or not a reviewer belongs to the threshold team. ",
                "static": true,
                "parameters": [
                    {
                        "name": "emailAddress",
                        "type": "string"
                    }
                ]
            },
            "requestAccountTeamFundedAccount": {
                "name": "requestAccountTeamFundedAccount",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Review_Summary",
                "doc": "Allows authorized IBMer's to apply for a proof of concept account using account team funding. Requests will be reviewed by multiple internal teams before an account is created. \n\nNote that the proof of concept system is for internal IBM employees only and is not applicable to users outside the IBM organization. ",
                "static": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Container_Account_ProofOfConcept_Request_AccountFunded"
                    }
                ]
            },
            "requestGlobalFundedAccount": {
                "name": "requestGlobalFundedAccount",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Review_Summary",
                "doc": "Allows authorized IBMer's to apply for a proof of concept account using global funding. Requests will be reviewed by multiple internal teams before an account is created. \n\nNote that the proof of concept system is for internal IBM employees only and is not applicable to users outside the IBM organization. ",
                "static": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Container_Account_ProofOfConcept_Request_GlobalFunded"
                    }
                ]
            },
            "verifyReviewer": {
                "name": "verifyReviewer",
                "type": "void",
                "doc": "Verifies that a potential reviewer is an approved internal IBM employee ",
                "static": true,
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "int"
                    },
                    {
                        "name": "reviewerEmailAddress",
                        "type": "string"
                    }
                ]
            }
        }
    },
    "SoftLayer_Account_ProofOfConcept_Approver": {
        "name": "SoftLayer_Account_ProofOfConcept_Approver",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This class represents a Proof of Concept account approver. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Account_ProofOfConcept_Approver",
                "typeArray": true,
                "doc": "Retrieves a list of reviewers ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_ProofOfConcept_Approver",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This class represents a Proof of Concept account approver. ",
        "properties": {
            "role": {
                "name": "role",
                "type": "SoftLayer_Account_ProofOfConcept_Approver_Role",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Account_ProofOfConcept_Approver_Type",
                "form": "relational"
            },
            "approvalOrder": {
                "name": "approvalOrder",
                "type": "int",
                "form": "local",
                "doc": "Approval slot of the approver."
            },
            "bluepagesUid": {
                "name": "bluepagesUid",
                "type": "string",
                "form": "local",
                "doc": "Internal identifier."
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "Email of the approver."
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "First name of the approver."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a Proof of Concept account approver."
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Last name of the approver."
            },
            "regionKeyName": {
                "name": "regionKeyName",
                "type": "string",
                "form": "local",
                "doc": "SoftLayer_Account_ProofOfConcept_Approver_Region identifier of the approver."
            },
            "roleId": {
                "name": "roleId",
                "type": "int",
                "form": "local",
                "doc": "SoftLayer_Account_ProofOfConcept_Approver_Role identifier of the approver."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "SoftLayer_Account_ProofOfConcept_Approver_Type identifier of the approver."
            }
        }
    },
    "SoftLayer_Account_ProofOfConcept_Approver_Role": {
        "name": "SoftLayer_Account_ProofOfConcept_Approver_Role",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This class represents a Proof of Concept account approver role. The current roles are Primary and Backup approvers. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_ProofOfConcept_Approver_Role",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This class represents a Proof of Concept account approver type. The current roles are Primary and Backup approvers. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of a Proof of Concept account approver role."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a Proof of Concept account approver role."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Key name of a Proof of Concept account approver role."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of a Proof of Concept account approver role."
            }
        }
    },
    "SoftLayer_Account_ProofOfConcept_Approver_Type": {
        "name": "SoftLayer_Account_ProofOfConcept_Approver_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This class represents a Proof of Concept account approver type. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_ProofOfConcept_Approver_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This class represents a Proof of Concept account approver type. ",
        "properties": {
            "approvers": {
                "name": "approvers",
                "type": "SoftLayer_Account_ProofOfConcept_Approver",
                "form": "relational",
                "typeArray": true
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description for a Proof of Concept account approver type."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a Proof of Concept account approver type."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Key name for a Proof of Concept account approver type."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of a Proof of Concept account approver type."
            },
            "approverCount": {
                "name": "approverCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Account_ProofOfConcept_Campaign_Code": {
        "name": "SoftLayer_Account_ProofOfConcept_Campaign_Code",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service provides Internal IBM Proof of Concept account campaign or promotion codes. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Account_ProofOfConcept_Campaign_Code",
                "typeArray": true,
                "doc": "This method will retrieve all SoftLayer_Account_ProofOfConcept_Campaign_Code objects. Use the `code` field when submitting a request on the [[SoftLayer_Container_Account_ProofOfConcept_Request_Opportunity]] container. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_ProofOfConcept_Campaign_Code",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "A [SoftLayer_Account_ProofOfConcept_Campaign_Code] provides a `code` and an optional `description`. ",
        "properties": {
            "code": {
                "name": "code",
                "type": "string",
                "form": "local"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_ProofOfConcept_Funding_Type": {
        "name": "SoftLayer_Account_ProofOfConcept_Funding_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Account_ProofOfConcept_Funding_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_ProofOfConcept_Funding_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "approverTypes": {
                "name": "approverTypes",
                "type": "SoftLayer_Account_ProofOfConcept_Approver_Type",
                "form": "relational",
                "typeArray": true
            },
            "approvers": {
                "name": "approvers",
                "type": "SoftLayer_Account_ProofOfConcept_Approver",
                "form": "relational",
                "typeArray": true
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "approverCount": {
                "name": "approverCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "approverTypeCount": {
                "name": "approverTypeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Account_Regional_Registry_Detail": {
        "name": "SoftLayer_Account_Regional_Registry_Detail",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Regional Registry Detail objects are used to specify the information you wish to use when registering subnets with the appropriate Regional Internet Registries. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Account_Regional_Registry_Detail",
                "doc": "<style type=\"text/css\">.create_object > li > div { padding-top: .5em; padding-bottom: .5em}</style> This method will create a new SoftLayer_Account_Regional_Registry_Detail object. \n\n<b>Input</b> - [[SoftLayer_Account_Regional_Registry_Detail (type)|SoftLayer_Account_Regional_Registry_Detail]] <ul class=\"create_object\"> <li><code>detailTypeId</code> <div>The [[SoftLayer_Account_Regional_Registry_Detail_Type|type id]] of this detail object</div> <ul> <li><b>Required</b></li> <li><b>Type</b> - integer</li> </ul> </li> <li><code>regionalInternetRegistryHandleId</code> <div> The id of the [[SoftLayer_Account_Rwhois_Handle|RWhois handle]] object. This is only to be used for detailed registrations, where a subnet is registered to an organization. The associated handle will be required to be a valid organization object id at the relevant registry. In this case, the detail object will only be valid for the registry the organization belongs to. </div> <ul> <li><b>Optional</b></li> <li><b>Type</b> - integer</li> </ul> </li> </ul> ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Regional_Registry_Detail",
                        "doc": "The SoftLayer_Account_Regional_Registry_Detail object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "This method will delete an existing SoftLayer_Account_Regional_Registry_Detail object. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "This method will edit an existing SoftLayer_Account_Regional_Registry_Detail object. For more detail, see [[SoftLayer_Account_Regional_Registry_Detail::createObject|createObject]]. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Regional_Registry_Detail",
                        "doc": "A skeleton SoftLayer_Account_Regional_Registry_Detail object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Regional_Registry_Detail",
                "filterable": true,
                "maskable": true
            },
            "updateReferencedRegistrations": {
                "name": "updateReferencedRegistrations",
                "type": "SoftLayer_Container_Network_Subnet_Registration_TransactionDetails",
                "doc": "This method will create a bulk transaction to update any registrations that reference this detail object. It should only be called from a child class such as [[SoftLayer_Account_Regional_Registry_Detail_Person]] or [[SoftLayer_Account_Regional_Registry_Detail_Network]]. The registrations should be in the Open or Registration_Complete status. "
            },
            "validatePersonForAllRegistrars": {
                "name": "validatePersonForAllRegistrars",
                "type": "SoftLayer_Container_Message",
                "typeArray": true,
                "doc": "Validates this person detail against all supported external registrars (APNIC/ARIN/RIPE). The validation uses the most restrictive rules ensuring that any person detail passing this validation would be acceptable to any supported registrar. \n\nThe person detail properties are validated against - Non-emptiness - Minimum length - Maximum length - Maximum words - Supported characters - Format of data \n\nIf the person detail validation succeeds, then an empty list is returned indicating no errors were found and that this person detail would work against all three registrars during a subnet registration. \n\nIf the person detail validation fails, then an array of validation errors (SoftLayer_Container_Message[]) is returned. Each message container contains error messages grouped by property type and a message type indicating the person detail property type object which failed validation. It is possible to create a subnet registration using a person detail which does not pass this validation, but at least one registrar would reject it for being invalid. "
            }
        },
        "typeDoc": "\n\n\n\n",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that this detail object belongs to."
            },
            "detailType": {
                "name": "detailType",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Type",
                "form": "relational",
                "doc": "The associated type of this detail object."
            },
            "details": {
                "name": "details",
                "type": "SoftLayer_Network_Subnet_Registration_Details",
                "form": "relational",
                "typeArray": true,
                "doc": "References to the [[SoftLayer_Network_Subnet_Registration|registration objects]] that consume this detail object."
            },
            "properties": {
                "name": "properties",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Property",
                "form": "relational",
                "typeArray": true,
                "doc": "The individual properties that define this detail object's values."
            },
            "regionalInternetRegistryHandle": {
                "name": "regionalInternetRegistryHandle",
                "type": "SoftLayer_Account_Rwhois_Handle",
                "form": "relational",
                "doc": "The associated RWhois handle of this detail object. Used only when detailed reassignments are necessary."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The detail object's associated [[SoftLayer_Account|account]] id "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time the detail object was created "
            },
            "detailTypeId": {
                "name": "detailTypeId",
                "type": "int",
                "form": "local",
                "doc": "The detail object's associated [[SoftLayer_Account_Regional_Registry_Detail_Type|type]] id "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID of the detail object "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time the detail object was last modified "
            },
            "regionalInternetRegistryHandleId": {
                "name": "regionalInternetRegistryHandleId",
                "type": "int",
                "form": "local",
                "doc": "The detail object's associated [[SoftLayer_Account_Rwhois_Handle|RIR handle]] id "
            },
            "detailCount": {
                "name": "detailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of references to the [[SoftLayer_Network_Subnet_Registration|registration objects]] that consume this detail object."
            },
            "propertyCount": {
                "name": "propertyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the individual properties that define this detail object's values."
            }
        }
    },
    "SoftLayer_Account_Regional_Registry_Detail_Property": {
        "name": "SoftLayer_Account_Regional_Registry_Detail_Property",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The subnet registration property is used to define various attributes of [[SoftLayer_Account_Regional_Registry_Detail|detail objects]]. For more information, please see the [[SoftLayer_Account_Regional_Registry_Detail_Property (type)|type overview]]. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Property",
                "doc": "<style type=\"text/css\">.create_object > li > div { padding-top: .5em; padding-bottom: .5em}</style> This method will create a new SoftLayer_Account_Regional_Registry_Detail_Property object. \n\n<b>Input</b> - [[SoftLayer_Account_Regional_Registry_Detail_Property (type)|SoftLayer_Account_Regional_Registry_Detail_Property]] <ul class=\"create_object\"> <li><code>registrationDetailId</code> <div>The numeric ID of the [[SoftLayer_Account_Regional_Registry_Detail|detail object]] this property belongs to</div> <ul> <li><b>Required</b></li> <li><b>Type</b> - integer</li> </ul> </li> <li><code>propertyTypeId</code> <div> The numeric ID of the associated [[SoftLayer_Account_Regional_Registry_Detail_Property_Type]] object </div> <ul> <li><b>Required</b></li> <li><b>Type</b> - integer</li> </ul> </li> <li><code>sequencePosition</code> <div> When more than one property of the same type exists on a detail object, this value determines the position in that collection. This can be thought of more as a sort order. </div> <ul> <li><b>Required</b></li> <li><b>Type</b> - integer</li> </ul> </li> <li><code>value</code> <div> The actual value of the property. </div> <ul> <li><b>Required</b></li> <li><b>Type</b> - string</li> </ul> </li> </ul> ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Regional_Registry_Detail_Property",
                        "doc": "The SoftLayer_Account_Regional_Registry_Detail_Property object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Property",
                "typeArray": true,
                "doc": "Edit multiple [[SoftLayer_Account_Regional_Registry_Detail_Property]] objects. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Account_Regional_Registry_Detail_Property",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Account_Regional_Registry_Detail_Property objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "This method will delete an existing SoftLayer_Account_Regional_Registry_Detail_Property object. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "This method will edit an existing SoftLayer_Account_Regional_Registry_Detail_Property object. For more detail, see [[SoftLayer_Account_Regional_Registry_Detail_Property::createObject|createObject]]. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Regional_Registry_Detail_Property",
                        "doc": "A skeleton SoftLayer_Account_Regional_Registry_Detail_Property object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "doc": "Edit multiple [[SoftLayer_Account_Regional_Registry_Detail_Property]] objects. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Account_Regional_Registry_Detail_Property",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Account_Regional_Registry_Detail_Property objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Property",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Subnet registration properties are used to define various attributes of the [[SoftLayer_Account_Regional_Registry_Detail|detail objects]]. These properties are defined by the [[SoftLayer_Account_Regional_Registry_Detail_Property_Type]] objects, which describe the available value formats. ",
        "properties": {
            "detail": {
                "name": "detail",
                "type": "SoftLayer_Account_Regional_Registry_Detail",
                "form": "relational",
                "doc": "The [[SoftLayer_Account_Regional_Registry_Detail]] object this property belongs to"
            },
            "propertyType": {
                "name": "propertyType",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Property_Type",
                "form": "relational",
                "doc": "The [[SoftLayer_Account_Regional_Registry_Detail_Property_Type]] object this property belongs to"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID of the property object "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "propertyTypeId": {
                "name": "propertyTypeId",
                "type": "int",
                "form": "local",
                "doc": "The numeric ID of the related [[SoftLayer_Account_Regional_Registry_Detail_Property_Type|property type object]] "
            },
            "registrationDetailId": {
                "name": "registrationDetailId",
                "type": "int",
                "form": "local",
                "doc": "The numeric ID of the related [[SoftLayer_Account_Regional_Registry_Detail|detail object]] "
            },
            "sequencePosition": {
                "name": "sequencePosition",
                "type": "int",
                "form": "local",
                "doc": "When multiple properties exist for a property type, defines the position in the sequence of those properties "
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value of the property "
            }
        }
    },
    "SoftLayer_Account_Regional_Registry_Detail_Property_Type": {
        "name": "SoftLayer_Account_Regional_Registry_Detail_Property_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Property_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Property_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Subnet Registration Detail Property Type objects describe the nature of a [[SoftLayer_Account_Regional_Registry_Detail_Property]] object. These types use [http://php.net/pcre.pattern.php Perl-Compatible Regular Expressions] to validate the value of a property object. ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique numeric ID of the property type object "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Code-friendly string name of the property type "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Human-readable name of the property type "
            },
            "valueExpression": {
                "name": "valueExpression",
                "type": "string",
                "form": "local",
                "doc": "A Perl-compatible regular expression used to describe the valid format of the property "
            }
        }
    },
    "SoftLayer_Account_Regional_Registry_Detail_Type": {
        "name": "SoftLayer_Account_Regional_Registry_Detail_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Regional_Registry_Detail_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Subnet Registration Detail Type objects describe the nature of a [[SoftLayer_Account_Regional_Registry_Detail]] object. \n\nThe standard values for these objects are as follows: <ul> <li><strong>NETWORK</strong> - The detail object represents the information for a [[SoftLayer_Network_Subnet|subnet]]</li> <li><strong>NETWORK6</strong> - The detail object represents the information for an [[SoftLayer_Network_Subnet_Version6|IPv6 subnet]]</li> <li><strong>PERSON</strong> - The detail object represents the information for a customer with the RIR</li> </ul> ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique numeric ID of the detail type object "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Code-friendly string name of the detail type "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Human-readable name of the detail type "
            }
        }
    },
    "SoftLayer_Account_Regional_Registry_Detail_Version4_Person_Default": {
        "name": "SoftLayer_Account_Regional_Registry_Detail_Version4_Person_Default",
        "base": "SoftLayer_Account_Regional_Registry_Detail",
        "noservice": true,
        "typeDoc": "The SoftLayer_Account_Regional_Registry_Detail_Version4_Person_Default data type contains general information relating to a single SoftLayer RIR account. RIR account information in this type such as names, addresses, and phone numbers are assigned to the registry only and not to users belonging to the account. "
    },
    "SoftLayer_Account_Reports_Request": {
        "name": "SoftLayer_Account_Reports_Request",
        "base": "SoftLayer_Entity",
        "methods": {
            "createRequest": {
                "name": "createRequest",
                "type": "SoftLayer_Account_Reports_Request",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "recipientContact",
                        "type": "SoftLayer_Account_Contact",
                        "doc": "The external party for which the request may be created",
                        "defaultValue": null
                    },
                    {
                        "name": "reason",
                        "type": "string",
                        "doc": "The reason the external party is requesting the report",
                        "defaultValue": null
                    },
                    {
                        "name": "reportType",
                        "type": "string",
                        "doc": "type of the report customer is requesting",
                        "defaultValue": null
                    },
                    {
                        "name": "requestorContact",
                        "type": "SoftLayer_Account_Contact",
                        "doc": "The external party for who requested the report",
                        "defaultValue": null
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Account_Reports_Request",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Reports_Request",
                "filterable": true,
                "maskable": true
            },
            "getRequestByRequestKey": {
                "name": "getRequestByRequestKey",
                "type": "SoftLayer_Account_Reports_Request",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "requestKey",
                        "type": "string",
                        "doc": "Key required to retrieve a report request."
                    }
                ]
            },
            "sendReportEmail": {
                "name": "sendReportEmail",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Account_Reports_Request"
                    }
                ]
            },
            "updateTicketOnDecline": {
                "name": "updateTicketOnDecline",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Account_Reports_Request"
                    }
                ]
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "accountContact": {
                "name": "accountContact",
                "type": "SoftLayer_Account_Contact",
                "form": "relational",
                "doc": "A request's corresponding external contact, if one exists."
            },
            "reportType": {
                "name": "reportType",
                "type": "SoftLayer_Compliance_Report_Type",
                "form": "relational",
                "doc": "Type of the report customer is requesting for."
            },
            "requestorContact": {
                "name": "requestorContact",
                "type": "SoftLayer_Account_Contact",
                "form": "relational",
                "doc": "A request's corresponding requestor contact, if one exists."
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational"
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user that initiated a report request."
            },
            "accountContactId": {
                "name": "accountContactId",
                "type": "int",
                "form": "local"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "complianceReportTypeId": {
                "name": "complianceReportTypeId",
                "type": "string",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "employeeRecordId": {
                "name": "employeeRecordId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "nda": {
                "name": "nda",
                "type": "string",
                "form": "local"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local"
            },
            "report": {
                "name": "report",
                "type": "string",
                "form": "local"
            },
            "requestKey": {
                "name": "requestKey",
                "type": "string",
                "form": "local"
            },
            "requestorContactId": {
                "name": "requestorContactId",
                "type": "int",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local"
            },
            "usrRecordId": {
                "name": "usrRecordId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Rwhois_Handle": {
        "name": "SoftLayer_Account_Rwhois_Handle",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Provides a means of tracking handle identifiers at the various regional internet registries (RIRs). These objects are used by the [[SoftLayer_Network_Subnet_Registration (type)|SoftLayer_Network_Subnet_Registration]] objects to identify a customer or organization when a subnet is registered. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that this handle belongs to."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The handle object's associated [[SoftLayer_Account|account]] id "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "handle": {
                "name": "handle",
                "type": "string",
                "form": "local",
                "doc": "The handle object's unique identifier as assigned by the RIR. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID of the handle object "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Shipment": {
        "name": "SoftLayer_Account_Shipment",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's shipment service allows the user to access information pertaining to a shipment from the user to SoftLayer or from SoftLayer to the user. ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the properties of a shipment record by passing in a modified instance of a SoftLayer_Account_Shipment object. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Shipment",
                        "doc": "A skeleton SoftLayer_Account_Shipment object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAllCouriers": {
                "name": "getAllCouriers",
                "type": "SoftLayer_Auxiliary_Shipping_Courier",
                "typeArray": true,
                "doc": "Retrieve a list of available shipping couriers.",
                "static": true,
                "maskable": true
            },
            "getAllCouriersByType": {
                "name": "getAllCouriersByType",
                "type": "SoftLayer_Auxiliary_Shipping_Courier",
                "typeArray": true,
                "doc": "Retrieve a list of available shipping couriers.",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "courierTypeKeyName",
                        "type": "string",
                        "doc": "The keyName for the courier type.",
                        "defaultValue": null
                    }
                ]
            },
            "getAllShipmentStatuses": {
                "name": "getAllShipmentStatuses",
                "type": "SoftLayer_Account_Shipment_Status",
                "typeArray": true,
                "doc": "Retrieve a a list of shipment statuses.",
                "static": true,
                "maskable": true
            },
            "getAllShipmentTypes": {
                "name": "getAllShipmentTypes",
                "type": "SoftLayer_Account_Shipment_Type",
                "typeArray": true,
                "doc": "Retrieve a a list of shipment types.",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Shipment",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Account_Shipment data type contains information relating to a shipment. Basic information such as addresses, the shipment courier, and any tracking information for as shipment is accessible with this data type. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account to which the shipment belongs."
            },
            "courier": {
                "name": "courier",
                "type": "SoftLayer_Auxiliary_Shipping_Courier",
                "form": "relational",
                "doc": "The courier handling the shipment."
            },
            "createEmployee": {
                "name": "createEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "The employee who created the shipment."
            },
            "createUser": {
                "name": "createUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who created the shipment."
            },
            "currency": {
                "name": "currency",
                "type": "SoftLayer_Billing_Currency",
                "form": "relational"
            },
            "destinationAddress": {
                "name": "destinationAddress",
                "type": "SoftLayer_Account_Address",
                "form": "relational",
                "doc": "The address at which the shipment is received."
            },
            "masterTrackingData": {
                "name": "masterTrackingData",
                "type": "SoftLayer_Account_Shipment_Tracking_Data",
                "form": "relational",
                "doc": "The one master tracking data for the shipment."
            },
            "modifyEmployee": {
                "name": "modifyEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "The employee who last modified the shipment."
            },
            "modifyUser": {
                "name": "modifyUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who last modified the shipment."
            },
            "originationAddress": {
                "name": "originationAddress",
                "type": "SoftLayer_Account_Address",
                "form": "relational",
                "doc": "The address from which the shipment is sent."
            },
            "shipmentItems": {
                "name": "shipmentItems",
                "type": "SoftLayer_Account_Shipment_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The items in the shipment."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Account_Shipment_Status",
                "form": "relational",
                "doc": "The status of the shipment."
            },
            "trackingData": {
                "name": "trackingData",
                "type": "SoftLayer_Account_Shipment_Tracking_Data",
                "form": "relational",
                "typeArray": true,
                "doc": "All tracking data for the shipment and packages."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Account_Shipment_Type",
                "form": "relational",
                "doc": "The type of shipment (e.g. for Data Transfer Service or Colocation Service)."
            },
            "viaAddress": {
                "name": "viaAddress",
                "type": "SoftLayer_Account_Address",
                "form": "relational",
                "doc": "The address at which the shipment is received."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account id of the shipment."
            },
            "courierId": {
                "name": "courierId",
                "type": "int",
                "form": "local",
                "doc": "The courier id of the shipment."
            },
            "courierName": {
                "name": "courierName",
                "type": "string",
                "form": "local",
                "doc": "The courier name of the shipment."
            },
            "createUserId": {
                "name": "createUserId",
                "type": "int",
                "form": "local",
                "doc": "The create user id of the shipment."
            },
            "destinationAddressId": {
                "name": "destinationAddressId",
                "type": "int",
                "form": "local",
                "doc": "The destination address id of the shipment."
            },
            "destinationDate": {
                "name": "destinationDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The destination date of the shipment."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the shipment."
            },
            "modifyUserId": {
                "name": "modifyUserId",
                "type": "int",
                "form": "local",
                "doc": "The modify user id of the shipment."
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local",
                "doc": "The shipment note (special handling instructions)."
            },
            "originationAddressId": {
                "name": "originationAddressId",
                "type": "int",
                "form": "local",
                "doc": "The origination address id of the shipment."
            },
            "originationDate": {
                "name": "originationDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The origination date of the shipment."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The status id of the shipment."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The type id of the shipment."
            },
            "viaAddressId": {
                "name": "viaAddressId",
                "type": "int",
                "form": "local",
                "doc": "The via address id of the shipment."
            },
            "shipmentItemCount": {
                "name": "shipmentItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the items in the shipment."
            },
            "trackingDataCount": {
                "name": "trackingDataCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all tracking data for the shipment and packages."
            }
        }
    },
    "SoftLayer_Account_Shipment_Item": {
        "name": "SoftLayer_Account_Shipment_Item",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's shipment item service allows the user to access information pertaining to a shipment's item from the user to SoftLayer or from SoftLayer to the user. ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the properties of a shipment record by passing in a modified instance of a SoftLayer_Account_Shipment_Item object. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Shipment_Item",
                        "doc": "A skeleton SoftLayer_Account_Shipment_Item object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Shipment_Item",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Account_Shipment_Item data type contains information relating to a shipment's item. Basic information such as addresses, the shipment courier, and any tracking information for as shipment is accessible with this data type. ",
        "properties": {
            "shipment": {
                "name": "shipment",
                "type": "SoftLayer_Account_Shipment",
                "form": "relational",
                "doc": "The shipment to which this item belongs."
            },
            "shipmentItemType": {
                "name": "shipmentItemType",
                "type": "SoftLayer_Account_Shipment_Item_Type",
                "form": "relational",
                "doc": "The type of this shipment item."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the shipping item."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the shipping item."
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The package id of the shipping item."
            },
            "shipmentId": {
                "name": "shipmentId",
                "type": "int",
                "form": "local",
                "doc": "The shipment id of the shipping item."
            },
            "shipmentItemId": {
                "name": "shipmentItemId",
                "type": "int",
                "form": "local",
                "doc": "The item id of the shipping item."
            },
            "shipmentItemTypeId": {
                "name": "shipmentItemTypeId",
                "type": "int",
                "form": "local",
                "doc": "The item type id of the shipping item."
            }
        }
    },
    "SoftLayer_Account_Shipment_Item_Type": {
        "name": "SoftLayer_Account_Shipment_Item_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Shipment_Item_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "DEPRECATED"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Shipment_Resource_Type": {
        "name": "SoftLayer_Account_Shipment_Resource_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Shipment_Resource_Type",
                "filterable": true,
                "maskable": true
            }
        }
    },
    "SoftLayer_Account_Shipment_Status": {
        "name": "SoftLayer_Account_Shipment_Status",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Shipment_Status",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "DEPRECATED"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Shipment_Tracking_Data": {
        "name": "SoftLayer_Account_Shipment_Tracking_Data",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's tracking data service allows the user to access and manage tracking information on shipments sent from the user to SoftLayer or from SoftLayer to the user. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Account_Shipment_Tracking_Data",
                "doc": "Create a new shipment tracking data. The ''shipmentId'', ''sequence'', and ''trackingData'' properties in the templateObject parameter are required parameters to create a tracking data record. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Shipment_Tracking_Data",
                        "doc": "The SoftLayer_Account_Shipment_Tracking_Data object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Account_Shipment_Tracking_Data",
                "typeArray": true,
                "doc": "Create a new shipment tracking data. The ''shipmentId'', ''sequence'', and ''trackingData'' properties of each templateObject in the templateObjects array are required parameters to create a tracking data record. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Account_Shipment_Tracking_Data",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Account_Shipment_Tracking_Data objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "deleteObject permanently removes a shipment tracking datum (number) "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the properties of a tracking data record by passing in a modified instance of a SoftLayer_Account_Shipment_Tracking_Data object. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Account_Shipment_Tracking_Data",
                        "doc": "A skeleton SoftLayer_Account_Shipment_Tracking_Data object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Shipment_Tracking_Data",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Account_Shipment_Tracking_Data data type contains information on a single piece of tracking information pertaining to a shipment. This tracking information tracking numbers by which the shipment may be tracked through the shipping courier. ",
        "properties": {
            "createEmployee": {
                "name": "createEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "The employee who created the tracking datum."
            },
            "createUser": {
                "name": "createUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who created the tracking datum."
            },
            "modifyEmployee": {
                "name": "modifyEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "The employee who last modified the tracking datum."
            },
            "modifyUser": {
                "name": "modifyUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who last modified the tracking datum."
            },
            "shipment": {
                "name": "shipment",
                "type": "SoftLayer_Account_Shipment",
                "form": "relational",
                "doc": "The shipment of the tracking datum."
            },
            "createUserId": {
                "name": "createUserId",
                "type": "int",
                "form": "local",
                "doc": "The create user id of the tracking data."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the tracking data."
            },
            "modifyUserId": {
                "name": "modifyUserId",
                "type": "int",
                "form": "local",
                "doc": "The user id of the tracking data."
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The package id of the tracking data."
            },
            "sequence": {
                "name": "sequence",
                "type": "int",
                "form": "local",
                "doc": "The sequence of the tracking data."
            },
            "shipmentId": {
                "name": "shipmentId",
                "type": "int",
                "form": "local",
                "doc": "The shipment id of the tracking data."
            },
            "trackingData": {
                "name": "trackingData",
                "type": "string",
                "form": "local",
                "doc": "The tracking data (tracking number/reference number)."
            }
        }
    },
    "SoftLayer_Account_Shipment_Type": {
        "name": "SoftLayer_Account_Shipment_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Account_Shipment_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "DEPRECATED"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Account_Status": {
        "name": "SoftLayer_Account_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Auxiliary_Marketing_Event": {
        "name": "SoftLayer_Auxiliary_Marketing_Event",
        "base": "SoftLayer_Entity",
        "methods": {
            "getMarketingEvents": {
                "name": "getMarketingEvents",
                "type": "SoftLayer_Auxiliary_Marketing_Event",
                "typeArray": true,
                "doc": "This method will return a collection of SoftLayer_Auxiliary_Marketing_Event objects ordered in ascending order by start date. ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Marketing_Event",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "enabledFlag": {
                "name": "enabledFlag",
                "type": "int",
                "form": "local"
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local"
            },
            "location": {
                "name": "location",
                "type": "string",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local"
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local"
            },
            "url": {
                "name": "url",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Auxiliary_Network_Status": {
        "name": "SoftLayer_Auxiliary_Network_Status",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service provides a way for a SoftLayer customer to obtain current latency information from around the world to our datacenters, and segments of our network both public and private. There are a few valid targets. Currently the valid targets are as follows: \n* ALL\n* NETWORK_DALLAS\n* NETWORK_HOUSTON\n* NETWORK_SANJOSE\n* NETWORK_SEATTLE\n* NETWORK_WDC\n* NETWORK_PUBLIC\n* NETWORK_PUBLIC_DALLAS\n* NETWORK_PUBLIC_HOUSTON\n* NETWORK_PUBLIC_SANJOSE\n* NETWORK_PUBLIC_SEATTLE\n* NETWORK_PUBLIC_WDC\n* NETWORK_PRIVATE\n* NETWORK_PRIVATE_DALLAS\n* NETWORK_PRIVATE_HOUSTON\n* NETWORK_PRIVATE_SANJOSE\n* NETWORK_PRIVATE_SEATTLE\n* NETWORK_PRIVATE_WDC\nInformation ",
        "methods": {
            "getNetworkStatus": {
                "name": "getNetworkStatus",
                "type": "SoftLayer_Container_Auxiliary_Network_Status_Reading",
                "typeArray": true,
                "doc": "Return the current network status of and latency information for a given target from numerous points around the world. Valid Targets: \n* ALL\n* NETWORK_DALLAS\n* NETWORK_SEATTLE\n* NETWORK_PUBLIC\n* NETWORK_PUBLIC_DALLAS\n* NETWORK_PUBLIC_SEATTLE\n* NETWORK_PUBLIC_WDC\n* NETWORK_PRIVATE\n* NETWORK_PRIVATE_DALLAS\n* NETWORK_PRIVATE_SEATTLE\n* NETWORK_PRIVATE_WDC",
                "static": true,
                "parameters": [
                    {
                        "name": "target",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"All\">ALL</li> <li title=\"Dallas Network\">NETWORK_DALLAS</li> <li title=\"Seattle Network\">NETWORK_SEATTLE</li> - <li title=\"Public Network\">NETWORK_PUBLIC</li> <li title=\"Dallas, TX - Public Network\">NETWORK_PUBLIC_DALLAS</li> <li title=\"Seattle, WA - Public Network\">NETWORK_PUBLIC_SEATTLE</li> <li title=\"Washington, DC - Public Network\">NETWORK_PUBLIC_WDC</li> - <li title=\"Private Network\">NETWORK_PRIVATE</li> <li title=\"Dallas, TX - Private Network\">NETWORK_PRIVATE_DALLAS</li> <li title=\"Seattle, WA - Private Network\">NETWORK_PRIVATE_SEATTLE</li> <li title=\"Washington, DC - Private Network\">NETWORK_PRIVATE_WDC</li> </ul>",
                        "defaultValue": null
                    }
                ]
            }
        }
    },
    "SoftLayer_Auxiliary_Notification_Emergency": {
        "name": "SoftLayer_Auxiliary_Notification_Emergency",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Auxiliary_Notification_Emergency service is associated with all actions pertaining to the notification system.  It can be used to check for current network or service interruptions that effect SoftLayer services. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Auxiliary_Notification_Emergency",
                "typeArray": true,
                "doc": "Retrieve an array of SoftLayer_Auxiliary_Notification_Emergency data types, which contain all notification events regardless of status. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getCurrentNotifications": {
                "name": "getCurrentNotifications",
                "type": "SoftLayer_Auxiliary_Notification_Emergency",
                "typeArray": true,
                "doc": "Retrieve an array of SoftLayer_Auxiliary_Notification_Emergency data types, which contain all current notification events. ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Notification_Emergency",
                "doc": "getObject retrieves the SoftLayer_Auxiliary_Notification_Emergency object, it can be used to check for current notifications being broadcast by SoftLayer. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "A SoftLayer_Auxiliary_Notification_Emergency data object represents a notification event being broadcast to the SoftLayer customer base. It is used to provide information regarding outages or current known issues. ",
        "properties": {
            "signature": {
                "name": "signature",
                "type": "SoftLayer_Auxiliary_Notification_Emergency_Signature",
                "form": "relational",
                "doc": "The signature of the SoftLayer employee department associated with this notification."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Auxiliary_Notification_Emergency_Status",
                "form": "relational",
                "doc": "The status of this notification."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date this event was created."
            },
            "device": {
                "name": "device",
                "type": "string",
                "form": "local",
                "doc": "The device (if any) effected by this event."
            },
            "duration": {
                "name": "duration",
                "type": "string",
                "form": "local",
                "doc": "The duration of this event."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The device (if any) effected by this event."
            },
            "location": {
                "name": "location",
                "type": "string",
                "form": "local",
                "doc": "The location effected by this event."
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "A message describing this event."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last date this event was modified."
            },
            "servicesAffected": {
                "name": "servicesAffected",
                "type": "string",
                "form": "local",
                "doc": "The service(s) (if any) effected by this event."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date this event will start."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "Current status record for this event."
            }
        }
    },
    "SoftLayer_Auxiliary_Notification_Emergency_Signature": {
        "name": "SoftLayer_Auxiliary_Notification_Emergency_Signature",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Every SoftLayer_Auxiliary_Notification_Emergency has a signatureId that references a SoftLayer_Auxiliary_Notification_Emergency_Signature data type.  The signature is the user or group  responsible for the current event. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name or signature for the current Emergency Notification."
            }
        }
    },
    "SoftLayer_Auxiliary_Notification_Emergency_Status": {
        "name": "SoftLayer_Auxiliary_Notification_Emergency_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Every SoftLayer_Auxiliary_Notification_Emergency has a statusId that references a SoftLayer_Auxiliary_Notification_Emergency_Status data type.  The status is used to determine the current state of the event. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A name describing the status of the current Emergency Notification."
            }
        }
    },
    "SoftLayer_Auxiliary_Press_Release": {
        "name": "SoftLayer_Auxiliary_Press_Release",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Auxiliary_Press_Release service is associated with all actions pertaining to the press release management tool.  It can be used to obtain a single press release, all press releases, press releases for a given year and highlighted press releases. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Auxiliary_Press_Release",
                "typeArray": true,
                "doc": "Retrieve an array of SoftLayer_Auxiliary_Press_Release data types, which contain all press releases. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Press_Release",
                "doc": "getObject retrieves the SoftLayer_Auxiliary_Press_Release object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Auxiliary_Press_Release service. ",
                "filterable": true,
                "maskable": true
            },
            "getRenderedPressRelease": {
                "name": "getRenderedPressRelease",
                "type": "SoftLayer_Auxiliary_Press_Release",
                "typeArray": true,
                "doc": "Retrieve an array of SoftLayer_Auxiliary_Press_Release data types, which contain all press releases. ",
                "filterable": true,
                "maskable": true
            },
            "getRenderedPressReleases": {
                "name": "getRenderedPressReleases",
                "type": "SoftLayer_Auxiliary_Press_Release",
                "typeArray": true,
                "doc": "Retrieve an array of SoftLayer_Auxiliary_Press_Release data types, which contain all press releases for a given year and or result limit. ",
                "static": true,
                "filterable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "resultLimit",
                        "type": "string",
                        "defaultValue": null
                    },
                    {
                        "name": "year",
                        "type": "string",
                        "defaultValue": null
                    }
                ]
            },
            "getWebsiteHighlightPressReleases": {
                "name": "getWebsiteHighlightPressReleases",
                "type": "SoftLayer_Auxiliary_Press_Release",
                "typeArray": true,
                "doc": "Retrieve an array of SoftLayer_Auxiliary_Press_Release data types, which have the website highlight flag set. ",
                "static": true,
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "about": {
                "name": "about",
                "type": "SoftLayer_Auxiliary_Press_Release_About_Press_Release",
                "form": "relational",
                "typeArray": true
            },
            "contacts": {
                "name": "contacts",
                "type": "SoftLayer_Auxiliary_Press_Release_Contact_Press_Release",
                "form": "relational",
                "typeArray": true
            },
            "mediaPartners": {
                "name": "mediaPartners",
                "type": "SoftLayer_Auxiliary_Press_Release_Media_Partner_Press_Release",
                "form": "relational",
                "typeArray": true
            },
            "pressReleaseContent": {
                "name": "pressReleaseContent",
                "type": "SoftLayer_Auxiliary_Press_Release_Content",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A press release's internal identifier."
            },
            "publishDate": {
                "name": "publishDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The data a press release was published."
            },
            "releaseLocation": {
                "name": "releaseLocation",
                "type": "string",
                "form": "local",
                "doc": "A press release's location."
            },
            "subTitle": {
                "name": "subTitle",
                "type": "string",
                "form": "local",
                "doc": "A press release's sub-title."
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "A press release's title."
            },
            "websiteHighlightFlag": {
                "name": "websiteHighlightFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether or not a press release is highlighted on the SoftLayer Website."
            },
            "aboutCount": {
                "name": "aboutCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "contactCount": {
                "name": "contactCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "mediaPartnerCount": {
                "name": "mediaPartnerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Auxiliary_Press_Release_About": {
        "name": "SoftLayer_Auxiliary_Press_Release_About",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Auxiliary_Press_Release_About service provides all the about paragraphs associated to a press release. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Press_Release_About",
                "doc": "getObject retrieves the SoftLayer_Auxiliary_Press_Release_About object whose about id number corresponds to the ID number of the init parameter passed to the SoftLayer_Auxiliary_Press_Release service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "content": {
                "name": "content",
                "type": "string",
                "form": "local",
                "doc": "A press release about's content."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A press release about's internal"
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "A press release about's title."
            }
        }
    },
    "SoftLayer_Auxiliary_Press_Release_About_Press_Release": {
        "name": "SoftLayer_Auxiliary_Press_Release_About_Press_Release",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Auxiliary_Press_Release_About_Press_Release service associates a press release to one or more about paragraphs. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Press_Release_About_Press_Release",
                "doc": "getObject retrieves the SoftLayer_Auxiliary_Press_Release_About_Press_Release object whose contact id number corresponds to the ID number of the init parameter passed to the SoftLayer_Auxiliary_Press_Release service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "aboutParagraphs": {
                "name": "aboutParagraphs",
                "type": "SoftLayer_Auxiliary_Press_Release_About",
                "form": "relational",
                "typeArray": true
            },
            "pressReleases": {
                "name": "pressReleases",
                "type": "SoftLayer_Auxiliary_Press_Release",
                "form": "relational",
                "typeArray": true
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A press release about cross"
            },
            "pressReleaseAboutId": {
                "name": "pressReleaseAboutId",
                "type": "int",
                "form": "local",
                "doc": "A press release about's internal"
            },
            "pressReleaseId": {
                "name": "pressReleaseId",
                "type": "int",
                "form": "local",
                "doc": "A press release internal identifier."
            },
            "sortOrder": {
                "name": "sortOrder",
                "type": "int",
                "form": "local",
                "doc": "The number that associated an about"
            },
            "aboutParagraphCount": {
                "name": "aboutParagraphCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "pressReleaseCount": {
                "name": "pressReleaseCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Auxiliary_Press_Release_Contact": {
        "name": "SoftLayer_Auxiliary_Press_Release_Contact",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Auxiliary_Press_Release_Contact service provides all contacts associated to a press release. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Press_Release_Contact",
                "doc": "getObject retrieves the SoftLayer_Auxiliary_Press_Release_Contact object whose contact id number corresponds to the ID number of the init parameter passed to the SoftLayer_Auxiliary_Press_Release service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "A press release contact's email"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "A press release contact's first name."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A press release contact's internal"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "A press release contact's last name."
            },
            "phone": {
                "name": "phone",
                "type": "string",
                "form": "local",
                "doc": "A press release contact's phone"
            },
            "professionalTitle": {
                "name": "professionalTitle",
                "type": "string",
                "form": "local",
                "doc": "A press release contact's"
            }
        }
    },
    "SoftLayer_Auxiliary_Press_Release_Contact_Press_Release": {
        "name": "SoftLayer_Auxiliary_Press_Release_Contact_Press_Release",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Auxiliary_Press_Release_Contact_Press_Release service associates a press release to one or more contacts. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Press_Release_Contact_Press_Release",
                "doc": "getObject retrieves the SoftLayer_Auxiliary_Press_Release_Contact object whose contact id number corresponds to the ID number of the init parameter passed to the SoftLayer_Auxiliary_Press_Release service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "contacts": {
                "name": "contacts",
                "type": "SoftLayer_Auxiliary_Press_Release_Contact",
                "form": "relational",
                "typeArray": true
            },
            "pressReleases": {
                "name": "pressReleases",
                "type": "SoftLayer_Auxiliary_Press_Release",
                "form": "relational",
                "typeArray": true
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A press release contact cross"
            },
            "pressReleaseContactId": {
                "name": "pressReleaseContactId",
                "type": "int",
                "form": "local",
                "doc": "A press release contact's internal"
            },
            "pressReleaseId": {
                "name": "pressReleaseId",
                "type": "int",
                "form": "local",
                "doc": "A press release internal identifier."
            },
            "sortOrder": {
                "name": "sortOrder",
                "type": "int",
                "form": "local",
                "doc": "The number that associated a contact"
            },
            "contactCount": {
                "name": "contactCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "pressReleaseCount": {
                "name": "pressReleaseCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Auxiliary_Press_Release_Content": {
        "name": "SoftLayer_Auxiliary_Press_Release_Content",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Auxiliary_Press_Release_Content service is associated with all actions pertaining to the press release management tool.  It can be used to obtain a the press release content for a given press release. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Press_Release_Content",
                "doc": "getObject retrieves the SoftLayer_Auxiliary_Press_Release_Content object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Auxiliary_Press_Release service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "the id of a single press release"
            },
            "pressReleaseId": {
                "name": "pressReleaseId",
                "type": "int",
                "form": "local",
                "doc": "the press release id that the content"
            },
            "text": {
                "name": "text",
                "type": "string",
                "form": "local",
                "doc": "the content of a press release"
            }
        }
    },
    "SoftLayer_Auxiliary_Press_Release_Media_Partner": {
        "name": "SoftLayer_Auxiliary_Press_Release_Media_Partner",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Auxiliary_Press_Release_Media_Partner service provides all media partners associated to a press release. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Press_Release_Media_Partner",
                "doc": "getObject retrieves the SoftLayer_Auxiliary_Press_Release_Contact object whose contact id number corresponds to the ID number of the init parameter passed to the SoftLayer_Auxiliary_Press_Release service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A press release media partner's"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A press release media partner's name."
            }
        }
    },
    "SoftLayer_Auxiliary_Press_Release_Media_Partner_Press_Release": {
        "name": "SoftLayer_Auxiliary_Press_Release_Media_Partner_Press_Release",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Auxiliary_Press_Release_Media_Partner_Press_Release service associates a press release to one or more media partners. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Press_Release_Media_Partner_Press_Release",
                "doc": "getObject retrieves the SoftLayer_Auxiliary_Press_Release_Media_Partner_Press_Release object whose media partner id number corresponds to the ID number of the init parameter passed to the SoftLayer_Auxiliary_Press_Release service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "mediaPartners": {
                "name": "mediaPartners",
                "type": "SoftLayer_Auxiliary_Press_Release_Media_Partner",
                "form": "relational",
                "typeArray": true
            },
            "pressReleases": {
                "name": "pressReleases",
                "type": "SoftLayer_Auxiliary_Press_Release",
                "form": "relational",
                "typeArray": true
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A press release media partner cross"
            },
            "mediaPartnerId": {
                "name": "mediaPartnerId",
                "type": "int",
                "form": "local",
                "doc": "A press release media partner's"
            },
            "pressReleaseId": {
                "name": "pressReleaseId",
                "type": "int",
                "form": "local",
                "doc": "A press release internal identifier."
            },
            "mediaPartnerCount": {
                "name": "mediaPartnerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "pressReleaseCount": {
                "name": "pressReleaseCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Auxiliary_Shipping_Courier": {
        "name": "SoftLayer_Auxiliary_Shipping_Courier",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Auxiliary_Shipping_Courier data type contains general information relating the different (major) couriers that SoftLayer may use for shipping. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the shipping courier."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The unique keyname of the shipping courier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the shipping courier."
            },
            "url": {
                "name": "url",
                "type": "string",
                "form": "local",
                "doc": "The url to shipping courier's website."
            }
        }
    },
    "SoftLayer_Auxiliary_Shipping_Courier_Type": {
        "name": "SoftLayer_Auxiliary_Shipping_Courier_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Auxiliary_Shipping_Courier_Type",
                "filterable": true,
                "maskable": true
            },
            "getTypeByKeyName": {
                "name": "getTypeByKeyName",
                "type": "SoftLayer_Auxiliary_Shipping_Courier_Type",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "keyName",
                        "type": "string"
                    }
                ]
            }
        },
        "properties": {
            "courier": {
                "name": "courier",
                "type": "SoftLayer_Auxiliary_Shipping_Courier",
                "form": "relational",
                "typeArray": true
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "courierCount": {
                "name": "courierCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Billing_Currency": {
        "name": "SoftLayer_Billing_Currency",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Billing_Currency",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Currency",
                "filterable": true,
                "maskable": true
            },
            "getPrice": {
                "name": "getPrice",
                "type": "string",
                "parameters": [
                    {
                        "name": "price",
                        "type": "float",
                        "doc": "Price in SoftLayer's funding currency (i.e., USD)"
                    },
                    {
                        "name": "formatOptions",
                        "type": "SoftLayer_Container_Billing_Currency_Format",
                        "doc": "Optional advanced formatting options",
                        "defaultValue": null
                    }
                ]
            }
        },
        "properties": {
            "currentExchangeRate": {
                "name": "currentExchangeRate",
                "type": "SoftLayer_Billing_Currency_ExchangeRate",
                "form": "relational",
                "doc": "The current exchange rate"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Billing_Currency_Country": {
        "name": "SoftLayer_Billing_Currency_Country",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Billing_Currency_Country service provides information about what currencies a customer in a specific country is eligible to use. ",
        "methods": {
            "getCountriesWithListOfEligibleCurrencies": {
                "name": "getCountriesWithListOfEligibleCurrencies",
                "type": "SoftLayer_Container_Billing_Currency_Country",
                "typeArray": true,
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Currency_Country",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Billing_Currency_Country data type maps what currencies are valid for specific countries. US Dollars are valid from any country, but other currencies are only available to customers in certain countries. ",
        "properties": {
            "countryId": {
                "name": "countryId",
                "type": "int",
                "form": "local",
                "doc": "A unique identifier for the related country."
            },
            "currencyId": {
                "name": "currencyId",
                "type": "int",
                "form": "local",
                "doc": "A unique identifier for the related currency."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A unique identifier for a map between a country and currency."
            },
            "locale": {
                "name": "locale",
                "type": "string",
                "form": "local",
                "doc": "The country currency locale."
            }
        }
    },
    "SoftLayer_Billing_Currency_ExchangeRate": {
        "name": "SoftLayer_Billing_Currency_ExchangeRate",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllCurrencyExchangeRates": {
                "name": "getAllCurrencyExchangeRates",
                "type": "SoftLayer_Billing_Currency_ExchangeRate",
                "typeArray": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "stringDate",
                        "type": "string",
                        "doc": "the day whose data will be returned, in MM/DD/YYYY HH24:MI:SS format",
                        "defaultValue": null
                    }
                ]
            },
            "getCurrencies": {
                "name": "getCurrencies",
                "type": "SoftLayer_Billing_Currency",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getExchangeRate": {
                "name": "getExchangeRate",
                "type": "SoftLayer_Billing_Currency_ExchangeRate",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "to",
                        "type": "string",
                        "doc": "Short Name of the currency to exchange to"
                    },
                    {
                        "name": "from",
                        "type": "string",
                        "doc": "Short Name of the base currency, optional, using default funding currency if none given",
                        "defaultValue": null
                    },
                    {
                        "name": "effectiveDate",
                        "type": "dateTime",
                        "doc": "Effective Date to look up currency from, defaults to current date if none given",
                        "defaultValue": null
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Currency_ExchangeRate",
                "filterable": true,
                "maskable": true
            },
            "getPrice": {
                "name": "getPrice",
                "type": "string",
                "parameters": [
                    {
                        "name": "price",
                        "type": "float",
                        "doc": "Price in SoftLayer's funding currency (i.e., USD)"
                    },
                    {
                        "name": "formatOptions",
                        "type": "SoftLayer_Container_Billing_Currency_Format",
                        "doc": "advanced formatting options",
                        "defaultValue": null
                    }
                ]
            }
        },
        "properties": {
            "fundingCurrency": {
                "name": "fundingCurrency",
                "type": "SoftLayer_Billing_Currency",
                "form": "relational"
            },
            "localCurrency": {
                "name": "localCurrency",
                "type": "SoftLayer_Billing_Currency",
                "form": "relational"
            },
            "effectiveDate": {
                "name": "effectiveDate",
                "type": "dateTime",
                "form": "local"
            },
            "expirationDate": {
                "name": "expirationDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The id of the exchange rate record."
            },
            "rate": {
                "name": "rate",
                "type": "decimal",
                "form": "local"
            }
        }
    },
    "SoftLayer_Billing_Info": {
        "name": "SoftLayer_Billing_Info",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer billing info contains company billing information such as the last date a payment was made and the last time any billing information was update. Use the data returned by these methods with other API services to get more detailed information about your billing information. \n\nDue to the sensitivity of your billing information we don't allow changing this data through the API. Please open a sales ticket in our customer portal if you need to change this information. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Info",
                "doc": "getObject retrieves the SoftLayer_Billing_Info object whose data corresponds to the account to which your portal user is tied. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Every SoftLayer customer account has billing specific information which is kept in the SoftLayer_Billing_Info data type. This information is used by the SoftLayer accounting group when sending invoices and making billing inquiries. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account associated with this billing information."
            },
            "achInformation": {
                "name": "achInformation",
                "type": "SoftLayer_Billing_Info_Ach",
                "form": "relational",
                "typeArray": true
            },
            "currency": {
                "name": "currency",
                "type": "SoftLayer_Billing_Currency",
                "form": "relational",
                "doc": "Currency to be used by this customer account."
            },
            "currentBillingCycle": {
                "name": "currentBillingCycle",
                "type": "SoftLayer_Billing_Info_Cycle",
                "form": "relational",
                "doc": "Information related to an account's current and previous billing cycles."
            },
            "lastBillDate": {
                "name": "lastBillDate",
                "type": "dateTime",
                "form": "relational",
                "doc": "The date on which an account was last billed."
            },
            "nextBillDate": {
                "name": "nextBillDate",
                "type": "dateTime",
                "form": "relational",
                "doc": "The date on which an account will be billed next."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer account's identifier."
            },
            "anniversaryDayOfMonth": {
                "name": "anniversaryDayOfMonth",
                "type": "int",
                "form": "local",
                "doc": "The day of the month that a SoftLayer customer is billed."
            },
            "cardAccountNumber": {
                "name": "cardAccountNumber",
                "type": "string",
                "form": "local",
                "doc": "This value doesn't persist to this object. It's used as part of the account creation process only;"
            },
            "cardExpirationMonth": {
                "name": "cardExpirationMonth",
                "type": "int",
                "form": "local",
                "doc": "the expiration month of the credit card on file"
            },
            "cardExpirationYear": {
                "name": "cardExpirationYear",
                "type": "int",
                "form": "local",
                "doc": "the expiration year of the credit card on file"
            },
            "cardNickname": {
                "name": "cardNickname",
                "type": "string",
                "form": "local"
            },
            "cardType": {
                "name": "cardType",
                "type": "string",
                "form": "local",
                "doc": "the type of the credit card on file"
            },
            "cardVerificationNumber": {
                "name": "cardVerificationNumber",
                "type": "string",
                "form": "local",
                "doc": "This value doesn't persist to this object. It's used as part of the account creation process only."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a customer's billing information was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer customer's billing information identifier."
            },
            "lastFourPaymentCardDigits": {
                "name": "lastFourPaymentCardDigits",
                "type": "int",
                "form": "local",
                "doc": "The last four digits of the credit card currently on the account. This is the only portion of the card that we store. For Paypal customers, this value will be empty."
            },
            "lastPaymentDate": {
                "name": "lastPaymentDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of the last payment received by SoftLayer from the account holder."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a customer's billing information was last modified."
            },
            "paymentTerms": {
                "name": "paymentTerms",
                "type": "int",
                "form": "local",
                "doc": "The payment terms for an account."
            },
            "percentDiscountOnetime": {
                "name": "percentDiscountOnetime",
                "type": "int",
                "form": "local",
                "doc": "The percentage discount received on all one-time charges on a customer's monthly bill."
            },
            "percentDiscountRecurring": {
                "name": "percentDiscountRecurring",
                "type": "int",
                "form": "local",
                "doc": "The percentage discount received on all recurring charges on a customer's monthly bill."
            },
            "sparePoolAmount": {
                "name": "sparePoolAmount",
                "type": "int",
                "form": "local",
                "doc": "The total recurring fee amount for servers that are in the spare pool status."
            },
            "taxCertificateId": {
                "name": "taxCertificateId",
                "type": "string",
                "form": "local",
                "doc": "This property has been deprecated."
            },
            "vatId": {
                "name": "vatId",
                "type": "string",
                "form": "local"
            },
            "achInformationCount": {
                "name": "achInformationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Billing_Info_Ach": {
        "name": "SoftLayer_Billing_Info_Ach",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "accountNumber": {
                "name": "accountNumber",
                "type": "string",
                "form": "local"
            },
            "accountType": {
                "name": "accountType",
                "type": "string",
                "form": "local"
            },
            "bankTransitNumber": {
                "name": "bankTransitNumber",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            },
            "phoneNumber": {
                "name": "phoneNumber",
                "type": "string",
                "form": "local"
            },
            "postalcode": {
                "name": "postalcode",
                "type": "string",
                "form": "local"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            },
            "street1": {
                "name": "street1",
                "type": "string",
                "form": "local"
            },
            "street2": {
                "name": "street2",
                "type": "string",
                "form": "local"
            },
            "verifiedDate": {
                "name": "verifiedDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Billing_Info_Cycle": {
        "name": "SoftLayer_Billing_Info_Cycle",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Info_Cycle data type models basic information concerning a SoftLayer account's previous and current billing cycles. The information in this class is only populated for SoftLayer customers who are billed monthly. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that a current billing cycle is associated with."
            },
            "currentCycleEndDate": {
                "name": "currentCycleEndDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The ending date of an account's current billing cycle."
            },
            "currentCycleStartDate": {
                "name": "currentCycleStartDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The starting date of an account's current billing cycle."
            },
            "nextCycleStartDate": {
                "name": "nextCycleStartDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The start date of an account's next billing cycle."
            },
            "previousCycleEndDate": {
                "name": "previousCycleEndDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The ending date of an account's previous billing cycle."
            },
            "previousCycleStartDate": {
                "name": "previousCycleStartDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The starting date of an account's previous billing cycle."
            }
        }
    },
    "SoftLayer_Billing_Invoice": {
        "name": "SoftLayer_Billing_Invoice",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Billing_Invoice service controls the invoices that are created whenever a SoftLayer customer's account balance changes. Invoices exist in the following states: \n*'''OPEN''': Invoices which have not been paid yet. Invoices are created in the OPEN state.\n*'''CLOSED''': Invoices that SoftLayer has received payment for.\n*'''CLOSED_FAILED''': Invoices which were closed but were not paid for. Customers who are terminated for non-payment typically have invoices in this state.\n\n\nOnce an invoice is paid it moves from OPEN to CLOSED state. Invoices are created under varying types, which are defined in the type property of the [[SoftLayer_Invoice (type)|SoftLayer_Invoice data type]]. Invoices are created under one of the following type categories: \n*'''NEW''': An invoice for new service. A SoftLayer customer's first invoice is of the NEW type.\n*'''RECURRING''': Invoices that are generated on a SoftLayer customer's anniversary billing date for monthly services.\n*'''ONE-TIME-CHARGE''': Invoices that are generated when one-time charges are applied to an account for fees incurred from products or services procured outside of the standard purchasing processes.\n*'''CREDIT''': Invoices that are generated whenever SoftLayer applies a credit against an account's balance.\n*'''REFUND''': Account credits that are applied against a customer's account balance along with the receivables on their account. REFUND type invoices are generated whenever a customer receives a service credit on their account balance and has their invoice items changed due to the credit.\n*'''MANUAL_PAYMENT_CREDIT''': Invoice credits that are generated whenever a customer makes a manual payment.\n\n\nInvoices are created with contact information duplicated from the [[SoftLayer_Account (type)|SoftLayer_Account data type]]. We do this in order to maintain a history of an account's contact information as invoices are generated. Likewise each invoice record keeps track of an account's balance as the invoice is opened and closed. \n\nQuery the [[SoftLayer_Account]] service to get a list of invoices for your account. ",
        "methods": {
            "emailInvoices": {
                "name": "emailInvoices",
                "type": "void",
                "doc": "Create a transaction to email PDF and/or Excel invoice links to the requesting user's email address. You must have a PDF reader installed in order to view these files. ",
                "static": true,
                "parameters": [
                    {
                        "name": "options",
                        "type": "SoftLayer_Container_Billing_Invoice_Email",
                        "doc": "The options for emailing invoices"
                    }
                ]
            },
            "getExcel": {
                "name": "getExcel",
                "type": "base64Binary",
                "doc": "Retrieve a Microsoft Excel spreadsheet of a SoftLayer invoice. You must have a Microsoft Excel reader installed in order to view these invoice files. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Invoice",
                "doc": "getObject retrieves the SoftLayer_Billing_Invoice object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Billing_Invoice service. You can only retrieve invoices that are assigned to your portal user's account. ",
                "filterable": true,
                "maskable": true
            },
            "getPdf": {
                "name": "getPdf",
                "type": "base64Binary",
                "doc": "Retrieve a PDF record of a SoftLayer invoice. SoftLayer keeps PDF records of all closed invoices for customer retrieval from the portal and API. You must have a PDF reader installed in order to view these invoice files. "
            },
            "getPdfDetailed": {
                "name": "getPdfDetailed",
                "type": "base64Binary",
                "doc": "Retrieve a PDF record of a SoftLayer detailed invoice summary. SoftLayer keeps PDF records of all closed invoices for customer retrieval from the portal and API. You must have a PDF reader installed in order to view these files. "
            },
            "getPdfDetailedFilename": {
                "name": "getPdfDetailedFilename",
                "type": "string"
            },
            "getPdfFileSize": {
                "name": "getPdfFileSize",
                "type": "int",
                "doc": "Retrieve the size of a PDF record of a SoftLayer invoice. SoftLayer keeps PDF records of all closed invoices for customer retrieval from the portal and API. "
            },
            "getPdfFilename": {
                "name": "getPdfFilename",
                "type": "string"
            },
            "getPreliminaryExcel": {
                "name": "getPreliminaryExcel",
                "type": "base64Binary",
                "doc": "Retrieve a Microsoft Excel record of a SoftLayer invoice. SoftLayer generates Microsoft Excel records of all closed invoices for customer retrieval from the portal and API. You must have a Microsoft Excel reader installed in order to view these invoice files. "
            },
            "getPreliminaryPdf": {
                "name": "getPreliminaryPdf",
                "type": "base64Binary",
                "doc": "Retrieve a PDF record of a SoftLayer invoice. SoftLayer keeps PDF records of all closed invoices for customer retrieval from the portal and API. You must have a PDF reader installed in order to view these invoice files. "
            },
            "getPreliminaryPdfDetailed": {
                "name": "getPreliminaryPdfDetailed",
                "type": "base64Binary",
                "doc": "Retrieve a PDF record of the detailed version of a SoftLayer invoice. SoftLayer keeps PDF records of all closed invoices for customer retrieval from the portal and API. "
            },
            "getXlsFilename": {
                "name": "getXlsFilename",
                "type": "string"
            },
            "getZeroFeeItemCounts": {
                "name": "getZeroFeeItemCounts",
                "type": "SoftLayer_Container_Product_Item_Category_ZeroFee_Count",
                "typeArray": true
            }
        },
        "typeDoc": "The SoftLayer_Billing_Invoice data type contains general information relating to an individual invoice applied to a SoftLayer customer account. Personal information in this type such as names, addresses, and phone numbers are taken from the account's contact information at the time the invoice is generated. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that an invoice belongs to."
            },
            "amount": {
                "name": "amount",
                "type": "decimal",
                "form": "relational",
                "doc": "This is the amount of this invoice."
            },
            "brandAtInvoiceCreation": {
                "name": "brandAtInvoiceCreation",
                "type": "SoftLayer_Brand",
                "form": "relational"
            },
            "detailedPdfGeneratedFlag": {
                "name": "detailedPdfGeneratedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag that will reflect whether the detailed version of the pdf has been generated."
            },
            "invoiceTopLevelItems": {
                "name": "invoiceTopLevelItems",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of top-level invoice items that are on the currently pending invoice."
            },
            "invoiceTotalAmount": {
                "name": "invoiceTotalAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total amount of this invoice."
            },
            "invoiceTotalOneTimeAmount": {
                "name": "invoiceTotalOneTimeAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total one-time charges for this invoice. This is the sum of one-time charges + setup fees + labor fees. This does not include taxes."
            },
            "invoiceTotalOneTimeTaxAmount": {
                "name": "invoiceTotalOneTimeTaxAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "A sum of all the taxes related to one time charges for this invoice."
            },
            "invoiceTotalPreTaxAmount": {
                "name": "invoiceTotalPreTaxAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total amount of this invoice. This does not include taxes."
            },
            "invoiceTotalRecurringAmount": {
                "name": "invoiceTotalRecurringAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total Recurring amount of this invoice. This amount does not include taxes or one time charges."
            },
            "invoiceTotalRecurringTaxAmount": {
                "name": "invoiceTotalRecurringTaxAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total amount of the recurring taxes on this invoice."
            },
            "items": {
                "name": "items",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The items that belong to this invoice."
            },
            "localCurrencyExchangeRate": {
                "name": "localCurrencyExchangeRate",
                "type": "SoftLayer_Billing_Currency_ExchangeRate",
                "form": "relational",
                "doc": "Exchange rate used for billing this invoice."
            },
            "payment": {
                "name": "payment",
                "type": "decimal",
                "form": "relational",
                "doc": "This is the total payment made on this invoice."
            },
            "payments": {
                "name": "payments",
                "type": "SoftLayer_Billing_Invoice_Receivable_Payment",
                "form": "relational",
                "typeArray": true,
                "doc": "The payments for the invoice."
            },
            "sellerRegistration": {
                "name": "sellerRegistration",
                "type": "string",
                "form": "relational",
                "doc": "This is the seller's tax registration."
            },
            "taxInfo": {
                "name": "taxInfo",
                "type": "SoftLayer_Billing_Invoice_Tax_Info",
                "form": "relational",
                "doc": "This is the tax information that applies to tax auditing. This is the official tax record for this invoice."
            },
            "taxInfoHistory": {
                "name": "taxInfoHistory",
                "type": "SoftLayer_Billing_Invoice_Tax_Info",
                "form": "relational",
                "typeArray": true,
                "doc": "This is the set of tax information for any tax calculation for this invoice. Note that not all of these are necessarily official, so use the taxInfo key to get the final information."
            },
            "taxMessage": {
                "name": "taxMessage",
                "type": "string",
                "form": "relational",
                "doc": "This is a message explaining the tax treatment for this invoice."
            },
            "taxType": {
                "name": "taxType",
                "type": "SoftLayer_Billing_Invoice_Tax_Type",
                "form": "relational",
                "doc": "This is the strategy used to calculate tax on this invoice."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer customer account that an invoice belongs to."
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "The first line of an address belonging to an account at the time an invoice is created."
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "The second line of an address belonging to an account at the time an invoice is created."
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The city portion of an address belonging to an account at the time an invoice is created."
            },
            "claimedTaxExemptTxFlag": {
                "name": "claimedTaxExemptTxFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether an account was exempt from taxes on their invoices at the time an invoice is created."
            },
            "closedDate": {
                "name": "closedDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an invoice was closed. Open invoices have a null closed date."
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local",
                "doc": "The company name belonging to an account at the time an invoice is created."
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "A two-letter abbreviation of the country portion of an address belonging to an account at the time an invoice is created."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an invoice was created."
            },
            "documentsGeneratedFlag": {
                "name": "documentsGeneratedFlag",
                "type": "boolean",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "The email address belonging to an account at the time an invoice is created."
            },
            "endingBalance": {
                "name": "endingBalance",
                "type": "decimal",
                "form": "local",
                "doc": "An SoftLayer account's balance at the time an invoice is closed. This value is measured in US Dollar ($USD) currency."
            },
            "faxPhone": {
                "name": "faxPhone",
                "type": "string",
                "form": "local",
                "doc": "The fax telephone number belonging to an account at the time an invoice is created."
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "The first name of the account holder at the time an invoice is created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An invoice's internal identifier."
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "The last name of the account holder at the time an invoice is created."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an invoice was last modified."
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local",
                "doc": "The telephone number belonging to an account at the time an invoice is created."
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The postal code portion of an address belonging to an account at the time an invoice is created."
            },
            "purchaseOrderNumber": {
                "name": "purchaseOrderNumber",
                "type": "string",
                "form": "local"
            },
            "startingBalance": {
                "name": "startingBalance",
                "type": "decimal",
                "form": "local",
                "doc": "An SoftLayer account's balance at the time an invoice is created. This value is measured in US Dollar ($USD) currency."
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "A two-letter abbreviation of the state portion of an address belonging to an account at the time an invoice is created. If the account that the invoice was generated for resides outside a province then this is set to \"other\"."
            },
            "statusCode": {
                "name": "statusCode",
                "type": "string",
                "form": "local",
                "doc": "An invoice's status. The \"OPEN\" status means SoftLayer has not yet received payment for this invoice. \"CLOSED\" status means that SoftLayer has received payment and closed the invoice. The \"CLOSED_FAILED\" status code means SoftLayer closed the invoice without receiving a payment. Invoices are usually set to CLOSED_FAILED status in cases where customer accounts are terminated for non-payment. "
            },
            "taxStatusId": {
                "name": "taxStatusId",
                "type": "int",
                "form": "local"
            },
            "taxTypeId": {
                "name": "taxTypeId",
                "type": "int",
                "form": "local"
            },
            "typeCode": {
                "name": "typeCode",
                "type": "string",
                "form": "local",
                "doc": "An invoice's type. SoftLayer invoices and service credits are differentiated by their type. The \"NEW\" type code signifies an invoice for new service. A SoftLayer customer's first invoice has the NEW type code. \"RECURRING\" invoices are generated on a SoftLayer customer's anniversary billing date for monthly services. \"ONE-TIME-CHARGE\" invoices are generated when one-time charges are applied to an account. \"CREDIT\" invoices are generated whenever SoftLayer applies a credit against an account's balance. There are two special types of service credits. \"REFUND\" type credits are applied against a customer's account balance along with the receivables on their account. \"MANUAL_PAYMENT_CREDIT\" invoice credits are generated whenever a customer makes an unscheduled payment. "
            },
            "invoiceTopLevelItemCount": {
                "name": "invoiceTopLevelItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of top-level invoice items that are on the currently pending invoice."
            },
            "itemCount": {
                "name": "itemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the items that belong to this invoice."
            },
            "paymentCount": {
                "name": "paymentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the payments for the invoice."
            },
            "taxInfoHistoryCount": {
                "name": "taxInfoHistoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of this is the set of tax information for any tax calculation for this invoice. Note that not all of these are necessarily official, so use the taxInfo key to get the final information."
            }
        }
    },
    "SoftLayer_Billing_Invoice_Item": {
        "name": "SoftLayer_Billing_Invoice_Item",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every invoice item is defined in the SoftLayer_Billing_Invoice_Item service. Softlayer billing invoice items have details about the items that reside within an invoice. These items detail, for instance, the recurring and one time charges for each item billed. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Invoice_Item",
                "doc": "getObject retrieves the SoftLayer_Billing_Invoice_Item object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Billing_Invoice_Item service. You can only retrieve the items tied to the account that your portal user is assigned to. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Each billing invoice item makes up a record within an invoice. This provides you with a detailed record of everything related to an invoice item. When you are billed, our system takes active billing items and creates an invoice. These invoice items are a copy of your active billing items, and make up the contents of your invoice. ",
        "properties": {
            "associatedChildren": {
                "name": "associatedChildren",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "An Invoice Item's associated child invoice items. Only parent invoice items have associated children. For instance, a server invoice item may have associated children."
            },
            "associatedInvoiceItem": {
                "name": "associatedInvoiceItem",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "doc": "An Invoice Item's associated invoice item. If this is populated, it means this is an orphaned invoice item, but logically belongs to the associated invoice item."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "An Invoice Item's billing item, from which this item was generated."
            },
            "category": {
                "name": "category",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "doc": "This invoice item's \"item category\". "
            },
            "children": {
                "name": "children",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "An Invoice Item's child invoice items. Only parent invoice items have children. For instance, a server invoice item will have children."
            },
            "filteredAssociatedChildren": {
                "name": "filteredAssociatedChildren",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "An Invoice Item's associated child invoice items, excluding some items with a $0.00 recurring fee. Only parent invoice items have associated children. For instance, a server invoice item may have associated children."
            },
            "hourlyFlag": {
                "name": "hourlyFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicating whether this invoice item is billed on an hourly basis."
            },
            "invoice": {
                "name": "invoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "doc": "The invoice to which this item belongs."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "An invoice item's location, if one exists.'"
            },
            "nonZeroAssociatedChildren": {
                "name": "nonZeroAssociatedChildren",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "An Invoice Item's associated child invoice items, excluding ALL items with a $0.00 recurring fee. Only parent invoice items have associated children. For instance, a server invoice item may have associated children."
            },
            "parent": {
                "name": "parent",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "doc": "Every item tied to a server should have a parent invoice item which is the server line item. This is how we associate items to a server."
            },
            "product": {
                "name": "product",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The entry in the product catalog that a invoice item is based upon."
            },
            "topLevelProductGroupName": {
                "name": "topLevelProductGroupName",
                "type": "string",
                "form": "relational",
                "doc": "A string representing the name of parent level product group of an invoice item."
            },
            "totalOneTimeAmount": {
                "name": "totalOneTimeAmount",
                "type": "float",
                "form": "relational",
                "doc": "An invoice Item's total, including any child invoice items if they exist."
            },
            "totalOneTimeTaxAmount": {
                "name": "totalOneTimeTaxAmount",
                "type": "float",
                "form": "relational",
                "doc": "An invoice Item's total, including any child invoice items if they exist."
            },
            "totalRecurringAmount": {
                "name": "totalRecurringAmount",
                "type": "float",
                "form": "relational",
                "doc": "An invoice Item's total, including any child invoice items if they exist."
            },
            "totalRecurringTaxAmount": {
                "name": "totalRecurringTaxAmount",
                "type": "float",
                "form": "relational",
                "doc": "A Billing Item's total, including any child billing items if they exist.'"
            },
            "usageChargeFlag": {
                "name": "usageChargeFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicating whether this invoice item is for the usage charge."
            },
            "associatedInvoiceItemId": {
                "name": "associatedInvoiceItemId",
                "type": "int",
                "form": "local",
                "doc": "The associated invoice Item ID."
            },
            "billingItemId": {
                "name": "billingItemId",
                "type": "int",
                "form": "local",
                "doc": "The billing item from which this invoice item was generated."
            },
            "categoryCode": {
                "name": "categoryCode",
                "type": "string",
                "form": "local",
                "doc": "The item category of the invoice item being invoiced."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the invoice item was created."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The item description for this invoice item."
            },
            "domainName": {
                "name": "domainName",
                "type": "string",
                "form": "local",
                "doc": "The domain name of the invoiced item. This is only used on invoice items whose category is \"server\"."
            },
            "hostName": {
                "name": "hostName",
                "type": "string",
                "form": "local",
                "doc": "The Host name of the invoiced item. This is only used on invoice items whose category is \"server\"."
            },
            "hourlyRecurringFee": {
                "name": "hourlyRecurringFee",
                "type": "decimal",
                "form": "local",
                "doc": "The hourly recurring fee of the invoice item represented by a floating point decimal in US Dollars ($USD)"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The ID of the invoice item."
            },
            "invoiceId": {
                "name": "invoiceId",
                "type": "int",
                "form": "local",
                "doc": "The invoice to which this invoice item belongs."
            },
            "laborAfterTaxAmount": {
                "name": "laborAfterTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An invoice item's labor fee total after taxes. This does not include any child invoice items."
            },
            "laborFee": {
                "name": "laborFee",
                "type": "decimal",
                "form": "local",
                "doc": "This also a one-time fee of a special type."
            },
            "laborFeeTaxRate": {
                "name": "laborFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The tax rate at which the labor fee is taxed."
            },
            "laborTaxAmount": {
                "name": "laborTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An invoice item's labor tax amount. This does not include any child invoice items."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A note to help describe more about the item. This normally holds usernames, or some other bit of extra information."
            },
            "oneTimeAfterTaxAmount": {
                "name": "oneTimeAfterTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An invoice item's one-time fee total after taxes. This does not include any child invoice items."
            },
            "oneTimeFee": {
                "name": "oneTimeFee",
                "type": "decimal",
                "form": "local",
                "doc": "If there are any one-time charges assessed, it will show up here represented by a floating point decimal in US Dollars ($USD)"
            },
            "oneTimeFeeTaxRate": {
                "name": "oneTimeFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The rate at which the one-time fee is taxed."
            },
            "oneTimeTaxAmount": {
                "name": "oneTimeTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An invoice item's one-time tax amount. This does not include any child invoice items."
            },
            "parentId": {
                "name": "parentId",
                "type": "int",
                "form": "local",
                "doc": "The parent invoice item, usually the server invoice item."
            },
            "productItemId": {
                "name": "productItemId",
                "type": "int",
                "form": "local",
                "doc": "The entry in the product catalog that a invoice item is based upon."
            },
            "recurringAfterTaxAmount": {
                "name": "recurringAfterTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An invoice item's recurring fee total after taxes. This does not include any child invoice items."
            },
            "recurringFee": {
                "name": "recurringFee",
                "type": "decimal",
                "form": "local",
                "doc": "The recurring fee of the invoice item represented by a floating point decimal in US Dollars ($USD)"
            },
            "recurringFeeTaxRate": {
                "name": "recurringFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "the rate at which the recurring fee is taxed."
            },
            "recurringTaxAmount": {
                "name": "recurringTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An invoice item's recurring tax amount. This does not include any child invoice items."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "A unique identifier for a SoftLayer Service that is associated to an invoice item."
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local",
                "doc": "The service provider for the invoice item."
            },
            "setupAfterTaxAmount": {
                "name": "setupAfterTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An invoice item's setup fee total after taxes. This does not include any child invoice items."
            },
            "setupFee": {
                "name": "setupFee",
                "type": "decimal",
                "form": "local",
                "doc": "If there were any setup fees they will show up here. These are normally a one-time fee."
            },
            "setupFeeDeferralMonths": {
                "name": "setupFeeDeferralMonths",
                "type": "int",
                "form": "local",
                "doc": "The number of months the setup fee is being deferred."
            },
            "setupFeeTaxRate": {
                "name": "setupFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The tax rate at which the setup fee is taxed."
            },
            "setupTaxAmount": {
                "name": "setupTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An invoice item's setup tax amount. This does not include any child invoice items."
            },
            "associatedChildrenCount": {
                "name": "associatedChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an Invoice Item's associated child invoice items. Only parent invoice items have associated children. For instance, a server invoice item may have associated children."
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an Invoice Item's child invoice items. Only parent invoice items have children. For instance, a server invoice item will have children."
            },
            "filteredAssociatedChildrenCount": {
                "name": "filteredAssociatedChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an Invoice Item's associated child invoice items, excluding some items with a $0.00 recurring fee. Only parent invoice items have associated children. For instance, a server invoice item may have associated children."
            },
            "nonZeroAssociatedChildrenCount": {
                "name": "nonZeroAssociatedChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an Invoice Item's associated child invoice items, excluding ALL items with a $0.00 recurring fee. Only parent invoice items have associated children. For instance, a server invoice item may have associated children."
            }
        }
    },
    "SoftLayer_Billing_Invoice_Item_Hardware": {
        "name": "SoftLayer_Billing_Invoice_Item_Hardware",
        "base": "SoftLayer_Billing_Invoice_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Invoice_Item_Hardware data type contains a \"resource\". This resource is a link to the hardware tied to a SoftLayer_Billing_item whose category code is \"server\". ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The resource for a server invoice item."
            }
        }
    },
    "SoftLayer_Billing_Invoice_Item_Tax_Info": {
        "name": "SoftLayer_Billing_Invoice_Item_Tax_Info",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Information about the tax rates that apply to a particular invoice item. ",
        "properties": {
            "invoiceItem": {
                "name": "invoiceItem",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational"
            },
            "invoiceTaxInfo": {
                "name": "invoiceTaxInfo",
                "type": "SoftLayer_Billing_Invoice_Tax_Info",
                "form": "relational"
            },
            "toCurrency": {
                "name": "toCurrency",
                "type": "SoftLayer_Billing_Currency",
                "form": "relational",
                "doc": "This is the currency the invoice will be converted to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time the tax information was recorded."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The invoice description with special information about the invoice."
            },
            "effectiveTaxRate": {
                "name": "effectiveTaxRate",
                "type": "float",
                "form": "local",
                "doc": "The tax rate that can be multiplied by the subtotal to get the"
            },
            "exemptAmount": {
                "name": "exemptAmount",
                "type": "float",
                "form": "local",
                "doc": "The amount that is exempt from tax."
            },
            "feeProperty": {
                "name": "feeProperty",
                "type": "string",
                "form": "local",
                "doc": "The type of fee being tracked for this particular set of tax information."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An invoice item's tax information internal identifier."
            },
            "invoiceItemId": {
                "name": "invoiceItemId",
                "type": "int",
                "form": "local",
                "doc": "A reference to the related invoice item."
            },
            "invoiceTaxInfoId": {
                "name": "invoiceTaxInfoId",
                "type": "int",
                "form": "local",
                "doc": "A reference to the tax information for the parent invoice."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time the tax information was modified."
            },
            "nonTaxableBasis": {
                "name": "nonTaxableBasis",
                "type": "float",
                "form": "local",
                "doc": "The amount that is exempt from tax."
            },
            "reportedFlag": {
                "name": "reportedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "A flag to indicate whether this is the official record for this invoice item."
            },
            "sellerRegistration": {
                "name": "sellerRegistration",
                "type": "string",
                "form": "local",
                "doc": "The registration that the seller will use to report the invoice."
            },
            "taxAmount": {
                "name": "taxAmount",
                "type": "float",
                "form": "local",
                "doc": "The tax amount associated with this line item."
            },
            "taxAmountToCurrency": {
                "name": "taxAmountToCurrency",
                "type": "float",
                "form": "local",
                "doc": "The tax amount (converted to the 'to' currency) associated with this line item."
            },
            "taxRate": {
                "name": "taxRate",
                "type": "float",
                "form": "local",
                "doc": "The tax rate used. Note that this might apply to only part of the"
            },
            "taxableBasis": {
                "name": "taxableBasis",
                "type": "float",
                "form": "local",
                "doc": "The amount that is subject to tax."
            },
            "toCurrencyId": {
                "name": "toCurrencyId",
                "type": "int",
                "form": "local",
                "doc": "The currency code that the invoice is being converted to."
            }
        }
    },
    "SoftLayer_Billing_Invoice_Next": {
        "name": "SoftLayer_Billing_Invoice_Next",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Service for an account's next invoice. The \"next invoice\" is what a customer will be billed on their next invoice, assuming no changes are made. Currently this does not include Bandwidth Pooling charges. Note, this should be considered preliminary as you may add, remove, or change billing items on your account. ",
        "methods": {
            "getExcel": {
                "name": "getExcel",
                "type": "base64Binary",
                "doc": "Return an account's next invoice in a Microsoft excel format.",
                "parameters": [
                    {
                        "name": "documentCreateDate",
                        "type": "dateTime",
                        "doc": "Retrieves Excel on file created after this date. (optional)",
                        "defaultValue": null
                    }
                ]
            },
            "getPdf": {
                "name": "getPdf",
                "type": "base64Binary",
                "doc": "Return an account's next invoice in PDF format.",
                "parameters": [
                    {
                        "name": "documentCreateDate",
                        "type": "dateTime",
                        "doc": "Retrieves PDF on file created after this date. (optional)",
                        "defaultValue": null
                    }
                ]
            },
            "getPdfDetailed": {
                "name": "getPdfDetailed",
                "type": "base64Binary",
                "doc": "Return an account's next invoice detailed portion in PDF format.",
                "parameters": [
                    {
                        "name": "documentCreateDate",
                        "type": "dateTime",
                        "doc": "Retrieves PDF Details on file created after this date. (optional)",
                        "defaultValue": null
                    }
                ]
            }
        }
    },
    "SoftLayer_Billing_Invoice_Receivable_Payment": {
        "name": "SoftLayer_Billing_Invoice_Receivable_Payment",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Invoice_Receivable_Payment data type contains general information relating to payments made against invoices. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "creditCardTransaction": {
                "name": "creditCardTransaction",
                "type": "SoftLayer_Billing_Payment_Card_Transaction",
                "form": "relational"
            },
            "exchangeRate": {
                "name": "exchangeRate",
                "type": "SoftLayer_Billing_Currency_ExchangeRate",
                "form": "relational"
            },
            "invoice": {
                "name": "invoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational"
            },
            "paypalTransaction": {
                "name": "paypalTransaction",
                "type": "SoftLayer_Billing_Payment_PayPal_Transaction",
                "form": "relational"
            },
            "amount": {
                "name": "amount",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of the payment."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of the payment."
            },
            "invoiceId": {
                "name": "invoiceId",
                "type": "int",
                "form": "local",
                "doc": "The invoice that the payment is for."
            },
            "typeCode": {
                "name": "typeCode",
                "type": "string",
                "form": "local",
                "doc": "The type of payment."
            }
        }
    },
    "SoftLayer_Billing_Invoice_Tax_Info": {
        "name": "SoftLayer_Billing_Invoice_Tax_Info",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Invoice tax information contains top-level information about the taxes recorded for a particular invoice. ",
        "properties": {
            "currency": {
                "name": "currency",
                "type": "SoftLayer_Billing_Currency",
                "form": "relational",
                "doc": "This is the currency used for the invoice."
            },
            "functionalCurrency": {
                "name": "functionalCurrency",
                "type": "SoftLayer_Billing_Currency",
                "form": "relational",
                "doc": "This is the functional currency used for the invoice."
            },
            "invoice": {
                "name": "invoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "doc": "This is the related invoice for this tax-related information."
            },
            "itemWithCurrencyInfo": {
                "name": "itemWithCurrencyInfo",
                "type": "SoftLayer_Billing_Invoice_Item_Tax_Info",
                "form": "relational",
                "doc": "This tax information on the invoice item that includes currency details."
            },
            "items": {
                "name": "items",
                "type": "SoftLayer_Billing_Invoice_Item_Tax_Info",
                "form": "relational",
                "typeArray": true,
                "doc": "This is the collection of tax information for each of the related invoice items."
            },
            "totalTaxAmountToCurrency": {
                "name": "totalTaxAmountToCurrency",
                "type": "float",
                "form": "relational",
                "doc": "This the total tax amount (converted to the 'to' currency) for the invoice."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time this tax information was recorded."
            },
            "currencyId": {
                "name": "currencyId",
                "type": "int",
                "form": "local",
                "doc": "The currency code that the invoice should be recorded in."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier for this invoice tax information."
            },
            "invoiceId": {
                "name": "invoiceId",
                "type": "int",
                "form": "local",
                "doc": "A reference to the related invoice."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time this tax information was updated."
            },
            "reportedFlag": {
                "name": "reportedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "A flag to indicate whether the invoice will be auditable."
            },
            "itemCount": {
                "name": "itemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of this is the collection of tax information for each of the related invoice items."
            }
        }
    },
    "SoftLayer_Billing_Invoice_Tax_Status": {
        "name": "SoftLayer_Billing_Invoice_Tax_Status",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Invoice tax status allows the SoftLayer system to track the status of an invoice if the related tax is being calculated by a third-party service. This allows us to know when tax has been calculated and applied successfully and when it has not. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Billing_Invoice_Tax_Status",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Invoice_Tax_Status",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The invoice tax status data type models a single status or state that an invoice can reflect in regard to an integration with a third-party tax calculation service. ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Billing_Invoice_Tax_Type": {
        "name": "SoftLayer_Billing_Invoice_Tax_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Invoice tax types allows the SoftLayer system to categorize the different strategies we use to calculate the tax for any invoice. There are three basic strategies in our system: don't calculate tax at all, use a basic, location-based set of rules, or offload the tax calculation to a third party that will take all related factors into account. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Billing_Invoice_Tax_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Invoice_Tax_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The invoice tax type data type models a single strategy for handling tax calculations. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A tax type's internal identifier. Each type of tax calculation strategy has a unique ID value."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A unique string that identifies each strategy and is guaranteed to be stable over time."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A human-readable label for each tax strategy."
            }
        }
    },
    "SoftLayer_Billing_Item": {
        "name": "SoftLayer_Billing_Item",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every individual item that a SoftLayer customer is billed for is recorded in the SoftLayer_Billing_Item data type. Billing items range from server chassis to hard drives to control panels, bandwidth quota upgrades and port upgrade charges. Softlayer [[SoftLayer_Billing_Invoice|invoices]] are generated from the cost of a customer's billing items. Billing items are copied from the product catalog as they're ordered by customers to create a reference between an account and the billable items they own. \n\nBilling items exist in a tree relationship. Items are associated with each other by parent/child relationships. Component items such as CPU's, RAM, and software each have a parent billing item for the server chassis they're associated with. Billing Items with a null parent item do not have an associated parent item. ",
        "methods": {
            "cancelItem": {
                "name": "cancelItem",
                "type": "boolean",
                "doc": "Cancel the resource or service for a billing Item. By default the billing item will be canceled on the next bill date and reclaim of the resource will begin shortly after the cancellation. Setting the \"cancelImmediately\" property to true will start the cancellation immediately if the item is eligible to be canceled immediately. \n\nThe reason parameter could be from the list below: \n* \"No longer needed\"\n* \"Business closing down\"\n* \"Server / Upgrade Costs\"\n* \"Migrating to larger server\"\n* \"Migrating to smaller server\"\n* \"Migrating to a different SoftLayer datacenter\"\n* \"Network performance / latency\"\n* \"Support response / timing\"\n* \"Sales process / upgrades\"\n* \"Moving to competitor\"",
                "parameters": [
                    {
                        "name": "cancelImmediately",
                        "type": "boolean",
                        "doc": "This will trigger an immediate cancellation with a reclaim of the resource",
                        "defaultValue": false
                    },
                    {
                        "name": "cancelAssociatedBillingItems",
                        "type": "boolean",
                        "doc": "This only applies to servers and virtual servers and will",
                        "defaultValue": false
                    },
                    {
                        "name": "reason",
                        "type": "string",
                        "doc": "The cancellation reason. See the documentation overview to see some possible values.",
                        "defaultValue": null
                    },
                    {
                        "name": "customerNote",
                        "type": "string",
                        "doc": "Tracks any additional information that the customer wanted to provide.",
                        "defaultValue": null
                    }
                ]
            },
            "cancelService": {
                "name": "cancelService",
                "type": "boolean",
                "doc": "Cancel the resource or service (excluding bare metal servers) for a billing Item. The billing item will be cancelled immediately and reclaim of the resource will begin shortly. "
            },
            "cancelServiceOnAnniversaryDate": {
                "name": "cancelServiceOnAnniversaryDate",
                "type": "boolean",
                "doc": "Cancel the resource or service for a billing Item "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Item",
                "doc": "getObject retrieves the SoftLayer_Billing_Item object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Billing_Item service. You can only retrieve billing items tied to the account that your portal user is assigned to. Billing items are an account's items of billable items. There are \"parent\" billing items and \"child\" billing items. The server billing item is generally referred to as a parent billing item. The items tied to a server, such as ram, harddrives, and operating systems are considered \"child\" billing items. ",
                "filterable": true,
                "maskable": true
            },
            "getServiceBillingItemsByCategory": {
                "name": "getServiceBillingItemsByCategory",
                "type": "SoftLayer_Billing_Item",
                "typeArray": true,
                "doc": "This service returns billing items of a specified category code. This service should be used to retrieve billing items that you wish to cancel. Some billing items can be canceled via [[SoftLayer_Security_Certificate_Request|service cancellation]] service. \n\nIn order to find billing items for cancellation, use [[SoftLayer_Product_Item_Category::getValidCancelableServiceItemCategories|product categories]] service to retrieve category codes that are eligible for cancellation. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "categoryCode",
                        "type": "string",
                        "doc": "The category code of billing items you wish to retrieve."
                    },
                    {
                        "name": "includeZeroRecurringFee",
                        "type": "boolean",
                        "doc": "Indicates whether billing item with $0 recurring fee should be included or not",
                        "defaultValue": false
                    }
                ]
            },
            "removeAssociationId": {
                "name": "removeAssociationId",
                "type": "boolean",
                "doc": "Remove the association from a billing item. "
            },
            "setAssociationId": {
                "name": "setAssociationId",
                "type": "boolean",
                "doc": "Set an associated billing item to an orphan billing item. Associations allow you to tie an \"orphaned\" billing item, any non-server billing item that doesn't have a parent item such as secondary IP subnets or StorageLayer accounts, to a server billing item. You may only set an association for an orphan to a server. You cannot associate a server to an orphan if the either the server or orphan billing items have a cancellation date set. ",
                "parameters": [
                    {
                        "name": "associatedId",
                        "type": "int",
                        "doc": "the billing item to associate to this item"
                    }
                ]
            },
            "voidCancelService": {
                "name": "voidCancelService",
                "type": "boolean",
                "doc": "Void a previously made cancellation for a service "
            }
        },
        "typeDoc": "Every individual item that a SoftLayer customer is billed for is recorded in the SoftLayer_Billing_Item data type. Billing items range from server chassis to hard drives to control panels, bandwidth quota upgrades and port upgrade charges. Softlayer [[SoftLayer_Billing_Invoice|invoices]] are generated from the cost of a customer's billing items. Billing items are copied from the product catalog as they're ordered by customers to create a reference between an account and the billable items they own. \n\nBilling items exist in a tree relationship. Items are associated with each other by parent/child relationships. Component items such as CPU's, RAM, and software each have a parent billing item for the server chassis they're associated with. Billing Items with a null parent item do not have an associated parent item. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that a billing item belongs to."
            },
            "activeAgreement": {
                "name": "activeAgreement",
                "type": "SoftLayer_Account_Agreement",
                "form": "relational"
            },
            "activeAgreementFlag": {
                "name": "activeAgreementFlag",
                "type": "SoftLayer_Account_Agreement",
                "form": "relational",
                "doc": "A flag indicating that the billing item is under an active agreement."
            },
            "activeAssociatedChildren": {
                "name": "activeAssociatedChildren",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A billing item's active associated child billing items. This includes \"floating\" items that are not necessarily child items of this billing item."
            },
            "activeAssociatedGuestDiskBillingItems": {
                "name": "activeAssociatedGuestDiskBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true
            },
            "activeBundledItems": {
                "name": "activeBundledItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's active bundled billing items."
            },
            "activeCancellationItem": {
                "name": "activeCancellationItem",
                "type": "SoftLayer_Billing_Item_Cancellation_Request_Item",
                "form": "relational",
                "doc": "A service cancellation request item that corresponds to the billing item."
            },
            "activeChildren": {
                "name": "activeChildren",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's active child billing items."
            },
            "activeFlag": {
                "name": "activeFlag",
                "type": "boolean",
                "form": "relational"
            },
            "activeSparePoolAssociatedGuestDiskBillingItems": {
                "name": "activeSparePoolAssociatedGuestDiskBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true
            },
            "activeSparePoolBundledItems": {
                "name": "activeSparePoolBundledItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's spare pool bundled billing items."
            },
            "associatedBillingItem": {
                "name": "associatedBillingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "A billing item's associated parent. This is to be used for billing items that are \"floating\", and therefore are not child items of any parent billing item. If it is desired to associate an item to another, populate this with the SoftLayer_Billing_Item ID of that associated parent item."
            },
            "associatedBillingItemHistory": {
                "name": "associatedBillingItemHistory",
                "type": "SoftLayer_Billing_Item_Association_History",
                "form": "relational",
                "typeArray": true,
                "doc": "A history of billing items which a billing item has been associated with."
            },
            "associatedChildren": {
                "name": "associatedChildren",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's associated child billing items. This includes \"floating\" items that are not necessarily child billing items of this billing item."
            },
            "associatedParent": {
                "name": "associatedParent",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A billing item's associated parent billing item. This object will be the same as the parent billing item if parentId is set."
            },
            "availableMatchingVlans": {
                "name": "availableMatchingVlans",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "typeArray": true
            },
            "bandwidthAllocation": {
                "name": "bandwidthAllocation",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allocation",
                "form": "relational",
                "doc": "The bandwidth allocation for a billing item."
            },
            "billableChildren": {
                "name": "billableChildren",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A billing item's recurring child items that have once been billed and are scheduled to be billed in the future."
            },
            "bundleItems": {
                "name": "bundleItems",
                "type": "SoftLayer_Product_Item_Bundles",
                "form": "relational",
                "typeArray": true,
                "doc": "(DEPRECATED) Do not use."
            },
            "bundledItems": {
                "name": "bundledItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's bundled billing items."
            },
            "canceledChildren": {
                "name": "canceledChildren",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's active child billing items."
            },
            "cancellationReason": {
                "name": "cancellationReason",
                "type": "SoftLayer_Billing_Item_Cancellation_Reason",
                "form": "relational",
                "doc": "The billing item's cancellation reason."
            },
            "cancellationRequests": {
                "name": "cancellationRequests",
                "type": "SoftLayer_Billing_Item_Cancellation_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "This will return any cancellation requests that are associated with this billing item."
            },
            "category": {
                "name": "category",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "doc": "The item category to which the billing item's item belongs. "
            },
            "children": {
                "name": "children",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's child billing items'"
            },
            "childrenWithActiveAgreement": {
                "name": "childrenWithActiveAgreement",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's active child billing items."
            },
            "downgradeItems": {
                "name": "downgradeItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "For product items which have a downgrade path defined, this will return those product items."
            },
            "filteredNextInvoiceChildren": {
                "name": "filteredNextInvoiceChildren",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's associated child billing items, excluding some items with a $0.00 recurring fee."
            },
            "hourlyFlag": {
                "name": "hourlyFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag that will reflect whether this billing item is billed on an hourly basis or not."
            },
            "invoiceItem": {
                "name": "invoiceItem",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "doc": "Invoice items associated with this billing item"
            },
            "invoiceItems": {
                "name": "invoiceItems",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "All invoice items associated with the billing item"
            },
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The entry in the SoftLayer product catalog that a billing item is based upon."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The location of the billing item. Some billing items have physical properties such as the server itself. For items such as these, we provide location information."
            },
            "nextInvoiceChildren": {
                "name": "nextInvoiceChildren",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's child billing items and associated items'"
            },
            "nextInvoiceTotalOneTimeAmount": {
                "name": "nextInvoiceTotalOneTimeAmount",
                "type": "float",
                "form": "relational",
                "doc": "A Billing Item's total, including any child billing items if they exist.'"
            },
            "nextInvoiceTotalOneTimeTaxAmount": {
                "name": "nextInvoiceTotalOneTimeTaxAmount",
                "type": "float",
                "form": "relational",
                "doc": "A Billing Item's total, including any child billing items if they exist.'"
            },
            "nextInvoiceTotalRecurringAmount": {
                "name": "nextInvoiceTotalRecurringAmount",
                "type": "float",
                "form": "relational",
                "doc": "A Billing Item's total, including any child billing items and associated billing items if they exist.'"
            },
            "nextInvoiceTotalRecurringTaxAmount": {
                "name": "nextInvoiceTotalRecurringTaxAmount",
                "type": "float",
                "form": "relational",
                "doc": "This is deprecated and will always be zero. Because tax is calculated in real-time, previewing the next recurring invoice is pre-tax only."
            },
            "nonZeroNextInvoiceChildren": {
                "name": "nonZeroNextInvoiceChildren",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A Billing Item's associated child billing items, excluding ALL items with a $0.00 recurring fee."
            },
            "orderItem": {
                "name": "orderItem",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "doc": "A billing item's original order item. Simply a reference to the original order from which this billing item was created."
            },
            "originalLocation": {
                "name": "originalLocation",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The original physical location for this billing item--may differ from current."
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "doc": "The package under which this billing item was sold. A Package is the general grouping of products as seen on our order forms."
            },
            "parent": {
                "name": "parent",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "A billing item's parent item. If a billing item has no parent item then this value is null."
            },
            "parentVirtualGuestBillingItem": {
                "name": "parentVirtualGuestBillingItem",
                "type": "SoftLayer_Billing_Item_Virtual_Guest",
                "form": "relational",
                "doc": "A billing item's parent item. If a billing item has no parent item then this value is null."
            },
            "pendingCancellationFlag": {
                "name": "pendingCancellationFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates whether a billing item is scheduled to be canceled or not."
            },
            "pendingOrderItem": {
                "name": "pendingOrderItem",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "doc": "The new order item that will replace this billing item."
            },
            "provisionTransaction": {
                "name": "provisionTransaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "Provisioning transaction for this billing item"
            },
            "softwareDescription": {
                "name": "softwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "A friendly description of software component"
            },
            "upgradeItem": {
                "name": "upgradeItem",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "Billing items whose product item has an upgrade path defined in our system will return the next product item in the upgrade path."
            },
            "upgradeItems": {
                "name": "upgradeItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "Billing items whose product item has an upgrade path defined in our system will return all the product items in the upgrade path."
            },
            "allowCancellationFlag": {
                "name": "allowCancellationFlag",
                "type": "int",
                "form": "local",
                "doc": "Flag to check if a billing item can be cancelled. 1 = yes. 0 = no. "
            },
            "associatedBillingItemId": {
                "name": "associatedBillingItemId",
                "type": "string",
                "form": "local",
                "doc": "This is sometimes populated for orphan billing items that are not attached to servers. Billing items like secondary portable IP addresses fit into this category. A user may set an association by calling [[SoftLayer_Billing_Item::setAssociationId]]. This will cause this orphan item to appear under its associated server billing item on future invoices. You may only attach orphaned billing items to server billing items without cancellation dates set. "
            },
            "cancellationDate": {
                "name": "cancellationDate",
                "type": "dateTime",
                "form": "local",
                "doc": "A billing item's cancellation date. A billing item with a cancellation date in the past is not charged on your SoftLayer invoice. Cancellation dates in the future indicate the current billing item is active, but will be cancelled and not charged for in the future. A billing item with a null cancellation date is also considered an active billing item and is charged once every billing cycle. "
            },
            "categoryCode": {
                "name": "categoryCode",
                "type": "string",
                "form": "local",
                "doc": "The category code of this billing item. It is used to tell us the difference between a primary disk and a secondary disk, for instance."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the billing item was created. You can see this date on the invoice."
            },
            "currentHourlyCharge": {
                "name": "currentHourlyCharge",
                "type": "string",
                "form": "local",
                "doc": "This is the total charge for the billing item for this billing item. It is calculated based on the hourlyRecurringFee * hoursUsed. "
            },
            "cycleStartDate": {
                "name": "cycleStartDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last time this billing item was charged."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A brief description of a billing item."
            },
            "domainName": {
                "name": "domainName",
                "type": "string",
                "form": "local",
                "doc": "The domain name is provided for server billing items."
            },
            "hostName": {
                "name": "hostName",
                "type": "string",
                "form": "local",
                "doc": "The hostname is provided for server billing items"
            },
            "hourlyRecurringFee": {
                "name": "hourlyRecurringFee",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of money charged per hour for a billing item, if applicable. hourlyRecurringFee is measured in US Dollars ($USD). "
            },
            "hoursUsed": {
                "name": "hoursUsed",
                "type": "string",
                "form": "local",
                "doc": "This is the number of hours the hourly billing item has been in use this billing period. For virtual servers, this means running, paused or stopped. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this billing item."
            },
            "laborFee": {
                "name": "laborFee",
                "type": "decimal",
                "form": "local",
                "doc": "The labor fee, if any. This is a one time charge."
            },
            "laborFeeTaxRate": {
                "name": "laborFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The rate at which labor fees are taxed if you are a taxable customer."
            },
            "lastBillDate": {
                "name": "lastBillDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last time this billing item was charged."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a billing item was last modified."
            },
            "nextBillDate": {
                "name": "nextBillDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date on which your account will be charged for this billing item. "
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Extra information provided to help you identify this billing item. This is often a username or something to help identify items that customers have more than one of."
            },
            "oneTimeFee": {
                "name": "oneTimeFee",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of money charged as a one-time charge for a billing item, if applicable. oneTimeFee is measured in US Dollars ($USD). "
            },
            "oneTimeFeeTaxRate": {
                "name": "oneTimeFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The rate at which one time fees are taxed if you are a taxable customer."
            },
            "orderItemId": {
                "name": "orderItemId",
                "type": "int",
                "form": "local",
                "doc": "the SoftLayer_Billing_Order_Item ID. This is a reference to the original order item from which this billing item was originally created."
            },
            "parentId": {
                "name": "parentId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the parent of this billing item."
            },
            "recurringFee": {
                "name": "recurringFee",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of money charged per month for a billing item, if applicable. recurringFee is measured in US Dollars ($USD). "
            },
            "recurringFeeTaxRate": {
                "name": "recurringFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The rate at which recurring fees are taxed if you are a taxable customer."
            },
            "recurringMonths": {
                "name": "recurringMonths",
                "type": "int",
                "form": "local",
                "doc": "The number of months in which the recurring fees will be incurred."
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local",
                "doc": "This is the service provider for this billing item. "
            },
            "setupFee": {
                "name": "setupFee",
                "type": "decimal",
                "form": "local",
                "doc": "The setup fee, if any. This is a one time charge."
            },
            "setupFeeTaxRate": {
                "name": "setupFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The rate at which setup fees are taxed if you are a taxable customer."
            },
            "activeAssociatedChildrenCount": {
                "name": "activeAssociatedChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a billing item's active associated child billing items. This includes \"floating\" items that are not necessarily child items of this billing item."
            },
            "activeAssociatedGuestDiskBillingItemCount": {
                "name": "activeAssociatedGuestDiskBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "activeBundledItemCount": {
                "name": "activeBundledItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's active bundled billing items."
            },
            "activeChildrenCount": {
                "name": "activeChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's active child billing items."
            },
            "activeSparePoolAssociatedGuestDiskBillingItemCount": {
                "name": "activeSparePoolAssociatedGuestDiskBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "activeSparePoolBundledItemCount": {
                "name": "activeSparePoolBundledItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's spare pool bundled billing items."
            },
            "associatedBillingItemHistoryCount": {
                "name": "associatedBillingItemHistoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a history of billing items which a billing item has been associated with."
            },
            "associatedChildrenCount": {
                "name": "associatedChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's associated child billing items. This includes \"floating\" items that are not necessarily child billing items of this billing item."
            },
            "associatedParentCount": {
                "name": "associatedParentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a billing item's associated parent billing item. This object will be the same as the parent billing item if parentId is set."
            },
            "availableMatchingVlanCount": {
                "name": "availableMatchingVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "billableChildrenCount": {
                "name": "billableChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a billing item's recurring child items that have once been billed and are scheduled to be billed in the future."
            },
            "bundleItemCount": {
                "name": "bundleItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of (DEPRECATED) Do not use."
            },
            "bundledItemCount": {
                "name": "bundledItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's bundled billing items."
            },
            "canceledChildrenCount": {
                "name": "canceledChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's active child billing items."
            },
            "cancellationRequestCount": {
                "name": "cancellationRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of this will return any cancellation requests that are associated with this billing item."
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's child billing items'"
            },
            "childrenWithActiveAgreementCount": {
                "name": "childrenWithActiveAgreementCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's active child billing items."
            },
            "downgradeItemCount": {
                "name": "downgradeItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of for product items which have a downgrade path defined, this will return those product items."
            },
            "filteredNextInvoiceChildrenCount": {
                "name": "filteredNextInvoiceChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's associated child billing items, excluding some items with a $0.00 recurring fee."
            },
            "invoiceItemCount": {
                "name": "invoiceItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all invoice items associated with the billing item"
            },
            "nextInvoiceChildrenCount": {
                "name": "nextInvoiceChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's child billing items and associated items'"
            },
            "nonZeroNextInvoiceChildrenCount": {
                "name": "nonZeroNextInvoiceChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a Billing Item's associated child billing items, excluding ALL items with a $0.00 recurring fee."
            },
            "upgradeItemCount": {
                "name": "upgradeItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of billing items whose product item has an upgrade path defined in our system will return all the product items in the upgrade path."
            }
        }
    },
    "SoftLayer_Billing_Item_Account_Media_Data_Transfer_Request": {
        "name": "SoftLayer_Billing_Item_Account_Media_Data_Transfer_Request",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Account_Media_Data_Transfer_Request data type contains general information relating to a single SoftLayer billing item for a data transfer request. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Account_Media_Data_Transfer_Request",
                "form": "relational",
                "doc": "The data transfer request to which the billing item points."
            }
        }
    },
    "SoftLayer_Billing_Item_Association_History": {
        "name": "SoftLayer_Billing_Item_Association_History",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Association_History type keeps a record of which server billing items an \"orphan\" item has been associated with. Orphan billing items are billable items for secondary portable services (such as secondary subnets and StorageLayer accounts) that are not associated with a server and appear at the bottom of a SoftLayer invoice. The [[SoftLayer_Billing_Item::setAssociationId]] method allows you to associate these kinds of items with servers, making them appear as a child item of the server on your invoice. A SoftLayer_Billing_Item_Association_History record is created every time one of these associations are set. ",
        "properties": {
            "associatedBillingItem": {
                "name": "associatedBillingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The server billing item that an orphaned billing item was associated with."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item that was associated with a server billing item."
            },
            "associatedBillingItemId": {
                "name": "associatedBillingItemId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the server billing item that an orphaned billing item was associated with."
            },
            "billingItemId": {
                "name": "billingItemId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the billing item that was associated with a server billing item."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a billing item association was last changed."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A billing item association history's internal identifier."
            }
        }
    },
    "SoftLayer_Billing_Item_Cancellation_Reason": {
        "name": "SoftLayer_Billing_Item_Cancellation_Reason",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllCancellationReasons": {
                "name": "getAllCancellationReasons",
                "type": "SoftLayer_Billing_Item_Cancellation_Reason",
                "typeArray": true,
                "doc": "getAllCancellationReasons() retrieves a list of all cancellation reasons that a server/service may be assigned to. ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Item_Cancellation_Reason",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Billing_Item_Cancellation_Reason data type contains cancellation reasons. ",
        "properties": {
            "billingCancellationReasonCategory": {
                "name": "billingCancellationReasonCategory",
                "type": "SoftLayer_Billing_Item_Cancellation_Reason_Category",
                "form": "relational",
                "doc": "An billing cancellation reason category."
            },
            "billingItems": {
                "name": "billingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The corresponding billing items having the specific cancellation reason."
            },
            "translatedReason": {
                "name": "translatedReason",
                "type": "string",
                "form": "relational"
            },
            "billingCancelReasonCategoryId": {
                "name": "billingCancelReasonCategoryId",
                "type": "int",
                "form": "local",
                "doc": "A cancel reason category internal identifier."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A reason internal identifier."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A standardized reason internal identifier."
            },
            "reason": {
                "name": "reason",
                "type": "string",
                "form": "local",
                "doc": "The descriptoin of the reason"
            },
            "billingItemCount": {
                "name": "billingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the corresponding billing items having the specific cancellation reason."
            }
        }
    },
    "SoftLayer_Billing_Item_Cancellation_Reason_Category": {
        "name": "SoftLayer_Billing_Item_Cancellation_Reason_Category",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllCancellationReasonCategories": {
                "name": "getAllCancellationReasonCategories",
                "type": "SoftLayer_Billing_Item_Cancellation_Reason_Category",
                "typeArray": true,
                "doc": "getAllCancellationReasonCategories() retrieves a list of all cancellation reason categories ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Item_Cancellation_Reason_Category",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Billing_Item_Cancellation_Reason_Category data type contains cancellation reason categories. ",
        "properties": {
            "billingCancellationReasons": {
                "name": "billingCancellationReasons",
                "type": "SoftLayer_Billing_Item_Cancellation_Reason",
                "form": "relational",
                "typeArray": true,
                "doc": "The corresponding billing cancellation reasons having the specific billing cancellation reason category."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A category internal identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The description of the category"
            },
            "billingCancellationReasonCount": {
                "name": "billingCancellationReasonCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the corresponding billing cancellation reasons having the specific billing cancellation reason category."
            }
        }
    },
    "SoftLayer_Billing_Item_Cancellation_Request": {
        "name": "SoftLayer_Billing_Item_Cancellation_Request",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer customers can use this API to submit a cancellation request. A single service cancellation can contain multiple cancellation items which contain a billing item. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Billing_Item_Cancellation_Request",
                "doc": "This method creates a service cancellation request. \n\nYou need to have \"Cancel Services\" privilege to create a cancellation request. You have to provide at least one SoftLayer_Billing_Item_Cancellation_Request_Item in the \"items\" property. Make sure billing item's category code belongs to the cancelable product codes. You can retrieve the cancelable product category by the [[SoftLayer_Product_Item_Category::getValidCancelableServiceItemCategories|product category]] service. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Billing_Item_Cancellation_Request",
                        "doc": "The SoftLayer_Billing_Item_Cancellation_Request object that you wish to create."
                    }
                ]
            },
            "getAllCancellationRequests": {
                "name": "getAllCancellationRequests",
                "type": "SoftLayer_Billing_Item_Cancellation_Request",
                "typeArray": true,
                "doc": "This method returns all service cancellation requests. \n\nMake sure to include the \"resultLimit\" in the SOAP request header for quicker response. If there is no result limit header is passed, it will return the latest 25 results by default. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getCancellationCutoffDate": {
                "name": "getCancellationCutoffDate",
                "type": "dateTime",
                "doc": "Services can be canceled 2 or 3 days prior to your next bill date. This service returns the time by which a cancellation request submission is permitted in the current billing cycle. If the current time falls into the cut off date, this will return next earliest cancellation cut off date. \n\nAvailable category codes are: service, server ",
                "static": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "Your account id",
                        "defaultValue": null
                    },
                    {
                        "name": "categoryCode",
                        "type": "string",
                        "doc": "The category code of this billing items that you wish to cancel",
                        "defaultValue": "service"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Item_Cancellation_Request",
                "doc": "getObject retrieves the SoftLayer_Billing_Item_Cancellation_Request object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Billing_Item_Cancellation_Request service. You can only retrieve cancellation request records that are assigned to your SoftLayer account. ",
                "filterable": true,
                "maskable": true
            },
            "removeCancellationItem": {
                "name": "removeCancellationItem",
                "type": "boolean",
                "doc": "This method removes a cancellation item from a cancellation request that is in \"Pending\" or \"Approved\" status. ",
                "parameters": [
                    {
                        "name": "itemId",
                        "type": "int",
                        "doc": "A service cancellation item id"
                    }
                ]
            },
            "validateBillingItemForCancellation": {
                "name": "validateBillingItemForCancellation",
                "type": "boolean",
                "doc": "This method examined if a billing item is eligible for cancellation. It checks if the billing item you provided is already in your existing cancellation request. ",
                "static": true,
                "parameters": [
                    {
                        "name": "billingItemId",
                        "type": "int",
                        "doc": "A billing item id"
                    }
                ]
            },
            "void": {
                "name": "void",
                "type": "boolean",
                "doc": "This method voids a service cancellation request in \"Pending\" or \"Approved\" status. ",
                "parameters": [
                    {
                        "name": "closeRelatedTicketFlag",
                        "type": "boolean",
                        "doc": "This parameter will determine what we do with the corresponding",
                        "defaultValue": true
                    }
                ]
            }
        },
        "typeDoc": "SoftLayer_Billing_Item_Cancellation_Request data type is used to cancel service billing items. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer account that a service cancellation request belongs to."
            },
            "items": {
                "name": "items",
                "type": "SoftLayer_Billing_Item_Cancellation_Request_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of service cancellation items."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Billing_Item_Cancellation_Request_Status",
                "form": "relational",
                "doc": "The status of a service cancellation request."
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "doc": "The ticket that is associated with the service cancellation request."
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The user that initiated a service cancellation request."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the customer account that a service cancellation record belongs to."
            },
            "billingCancelReasonId": {
                "name": "billingCancelReasonId",
                "type": "int",
                "form": "local",
                "doc": "The last modified date."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a cancellation request was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A cancellation record's internal identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last modified date."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Brief cancellation note. "
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier of the service cancellation status that this request is associated with. When a service cancellation is submitted, it will be in \"Pending\" status until SoftLayer Sales team reviews it. The status of a cancellation request will be updated to \"Approved\" or \"Voided\" by SoftLayer Sales. \n\nIt will be updated to \"Complete\" when all services are reclaimed. "
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier of the ticket that is associated with a service cancellation request. When a service cancellation is submitted, a support ticket will be created. This ticket contains details on your service cancellation details and SoftLayer Sales team will use it to further communicate with you. "
            },
            "itemCount": {
                "name": "itemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of service cancellation items."
            }
        }
    },
    "SoftLayer_Billing_Item_Cancellation_Request_Item": {
        "name": "SoftLayer_Billing_Item_Cancellation_Request_Item",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Billing_Item_Cancellation_Request_Item data type contains a billing item for cancellation. This data type is used to harness billing items to the associated service. ",
        "properties": {
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for cancellation."
            },
            "cancellationRequest": {
                "name": "cancellationRequest",
                "type": "SoftLayer_Billing_Item_Cancellation_Request",
                "form": "relational",
                "doc": "The service cancellation request that a cancellation item belongs to."
            },
            "billingItemId": {
                "name": "billingItemId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a billing item"
            },
            "cancellationRequestId": {
                "name": "cancellationRequestId",
                "type": "int",
                "form": "local",
                "doc": "A cancellation request's internal identifier."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A cancellation request item's internal identifier."
            },
            "immediateCancellationFlag": {
                "name": "immediateCancellationFlag",
                "type": "boolean",
                "form": "local",
                "doc": "This flag indicated if a billing item should be canceled immediately or not.  Set this flag to true when creating a cancellation request."
            },
            "scheduledCancellationDate": {
                "name": "scheduledCancellationDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The scheduled cancellation date"
            },
            "serviceReclaimStatusCode": {
                "name": "serviceReclaimStatusCode",
                "type": "string",
                "form": "local",
                "doc": "The reclaim status of a service."
            }
        }
    },
    "SoftLayer_Billing_Item_Cancellation_Request_Status": {
        "name": "SoftLayer_Billing_Item_Cancellation_Request_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Billing_Item_Cancellation_Request_Status data type represents the status of a service cancellation request. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The short description of a cancellation request status"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a cancellation request status."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "status key name"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The status name"
            }
        }
    },
    "SoftLayer_Billing_Item_Ctc_Account": {
        "name": "SoftLayer_Billing_Item_Ctc_Account",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Ctc_Account data type contains general information relating to a single SoftLayer billing item for a CTC client account creation "
    },
    "SoftLayer_Billing_Item_Gateway_Appliance_Cluster": {
        "name": "SoftLayer_Billing_Item_Gateway_Appliance_Cluster",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Big_Data_Cluster data type contains general information relating to a single SoftLayer billing item for a big data cluster. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "doc": "The resource for a resource group billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Hardware": {
        "name": "SoftLayer_Billing_Item_Hardware",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Hardware data type contains general information relating to a single SoftLayer billing item for hardware. ",
        "properties": {
            "billingCycleBandwidthUsage": {
                "name": "billingCycleBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object will be returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsage": {
                "name": "billingCyclePrivateBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw private bandwidth usage data for the current billing cycle."
            },
            "billingCyclePrivateUsageIn": {
                "name": "billingCyclePrivateUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private inbound bandwidth for this hardware for the current billing cycle."
            },
            "billingCyclePrivateUsageOut": {
                "name": "billingCyclePrivateUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private outbound bandwidth for this hardware for the current billing cycle."
            },
            "billingCyclePrivateUsageTotal": {
                "name": "billingCyclePrivateUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total private bandwidth for this hardware for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsage": {
                "name": "billingCyclePublicBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw public bandwidth usage data for the current billing cycle."
            },
            "billingCyclePublicUsageIn": {
                "name": "billingCyclePublicUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public inbound bandwidth for this hardware for the current billing cycle."
            },
            "billingCyclePublicUsageOut": {
                "name": "billingCyclePublicUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth for this hardware for the current billing cycle."
            },
            "billingCyclePublicUsageTotal": {
                "name": "billingCyclePublicUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total public bandwidth for this hardware for the current billing cycle."
            },
            "lockboxNetworkStorage": {
                "name": "lockboxNetworkStorage",
                "type": "SoftLayer_Billing_Item_Network_Storage",
                "form": "relational",
                "doc": "A lockbox account associated with a server."
            },
            "monitoringBillingItems": {
                "name": "monitoringBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Hardware_Server",
                "form": "relational",
                "doc": "The resource for a server billing item."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a server billing item."
            },
            "billingCycleBandwidthUsageCount": {
                "name": "billingCycleBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object will be returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsageCount": {
                "name": "billingCyclePrivateBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw private bandwidth usage data for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsageCount": {
                "name": "billingCyclePublicBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw public bandwidth usage data for the current billing cycle."
            },
            "monitoringBillingItemCount": {
                "name": "monitoringBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Billing_Item_Hardware_Colocation": {
        "name": "SoftLayer_Billing_Item_Hardware_Colocation",
        "base": "SoftLayer_Billing_Item_Hardware",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Hardware data type contains general information relating to a single SoftLayer billing item for hardware. "
    },
    "SoftLayer_Billing_Item_Hardware_Component": {
        "name": "SoftLayer_Billing_Item_Hardware_Component",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Hardware data type contains general information relating to a single SoftLayer billing item for hardware components. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The hardware component that this billing item points to."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a server billing item."
            },
            "resourceCount": {
                "name": "resourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the hardware component that this billing item points to."
            }
        }
    },
    "SoftLayer_Billing_Item_Hardware_Security_Module": {
        "name": "SoftLayer_Billing_Item_Hardware_Security_Module",
        "base": "SoftLayer_Billing_Item_Hardware",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Hardware_Security_Module data type contains general information relating to a single SoftLayer billing item for a hardware security module. "
    },
    "SoftLayer_Billing_Item_Hardware_Server": {
        "name": "SoftLayer_Billing_Item_Hardware_Server",
        "base": "SoftLayer_Billing_Item_Hardware",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Hardware_Server data type contains billing information about a bare metal server and its relationship to a particular customer account. "
    },
    "SoftLayer_Billing_Item_Network_Application_Delivery_Controller": {
        "name": "SoftLayer_Billing_Item_Network_Application_Delivery_Controller",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Application_Delivery_Controller data type describes the billing item related to a NetScaler VPX ",
        "properties": {
            "bandwidthAllotmentDetail": {
                "name": "bandwidthAllotmentDetail",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment_Detail",
                "form": "relational",
                "doc": "The bandwidth allotment detail for a billing item."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "form": "relational",
                "doc": "The network application controller that a billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress": {
        "name": "SoftLayer_Billing_Item_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "A SoftLayer_Billing_Item_Network_Application_Delivery_Controller_LoadBalancer represents the [[SoftLayer_Billing_Item|billing item]] related to a single [[SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress|load balancer]] instance. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
                "form": "relational",
                "doc": "The load balancer that a load balancer billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_Bandwidth": {
        "name": "SoftLayer_Billing_Item_Network_Bandwidth",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Hardware data type contains general information relating to a single SoftLayer billing item for hardware. "
    },
    "SoftLayer_Billing_Item_Network_Firewall": {
        "name": "SoftLayer_Billing_Item_Network_Firewall",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Firewall data type contains general information relating to a single SoftLayer billing item whose item category code is 'firewall' ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "The VLAN firewall that a VLAN firewall billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_Firewall_Module_Context": {
        "name": "SoftLayer_Billing_Item_Network_Firewall_Module_Context",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Firewall_Module_Context data type describes the billing items related to VLAN Firewalls. ",
        "properties": {
            "billingCyclePublicUsageOut": {
                "name": "billingCyclePublicUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth for this firewall for the current billing cycle."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_Interconnect": {
        "name": "SoftLayer_Billing_Item_Network_Interconnect",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "A SoftLayer_Billing_Item_Network_Interconnect represents the [[SoftLayer_Billing_Item|billing item]] related to a network interconnect instance. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Interconnect_Tenant",
                "form": "relational",
                "doc": "The interconnect tenant that the billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_Interconnect_Routing": {
        "name": "SoftLayer_Billing_Item_Network_Interconnect_Routing",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "A SoftLayer_Billing_Item_Network_Interconnect_Routing represents the [[SoftLayer_Billing_Item|billing item]] related to a network interconnect global routing. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Interconnect_Tenant",
                "form": "relational",
                "doc": "The interconnect tenant that the billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_LoadBalancer": {
        "name": "SoftLayer_Billing_Item_Network_LoadBalancer",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "A SoftLayer_Billing_Item_Network_LoadBalancer represents the [[SoftLayer_Billing_Item|billing item]] related to a single [[SoftLayer_Network_LoadBalancer|load balancer]] instance. "
    },
    "SoftLayer_Billing_Item_Network_LoadBalancer_Global": {
        "name": "SoftLayer_Billing_Item_Network_LoadBalancer_Global",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The global load balancer service has been deprecated and is no longer available. \n\nThe SoftLayer_Billing_Item_Network_LoadBalancer_Global data type contains general information relating to a single SoftLayer billing item whose item category code is 'global_load_balancer' ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_LoadBalancer_Global_Account",
                "form": "relational",
                "doc": "The resource for a global load balancer billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_LoadBalancer_VirtualIpAddress": {
        "name": "SoftLayer_Billing_Item_Network_LoadBalancer_VirtualIpAddress",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "A SoftLayer_Billing_Item_Network_LoadBalancer_VirtualIpAddress represents the [[SoftLayer_Billing_Item|billing item]] related to a single [[SoftLayer_Network_LoadBalancer_VirtualIpAddress|load balancer]] instance. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
                "form": "relational",
                "doc": "The load balancer's virtual IP address that the billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_Message_Delivery": {
        "name": "SoftLayer_Billing_Item_Network_Message_Delivery",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Message_Delivery data describes the related billing item. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Message_Delivery",
                "form": "relational",
                "doc": "The object this billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_PerformanceStorage_Iscsi": {
        "name": "SoftLayer_Billing_Item_Network_PerformanceStorage_Iscsi",
        "base": "SoftLayer_Billing_Item_Network_Storage",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_PerformanceStorage_Iscsi data type contains general information relating to a single SoftLayer billing item whose item category code is 'performance_storage_iscsi' "
    },
    "SoftLayer_Billing_Item_Network_PerformanceStorage_Nfs": {
        "name": "SoftLayer_Billing_Item_Network_PerformanceStorage_Nfs",
        "base": "SoftLayer_Billing_Item_Network_Storage",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_PerformanceStorage_Nfs data type contains general information relating to a single SoftLayer billing item whose item category code is 'performance_storage_nfs' "
    },
    "SoftLayer_Billing_Item_Network_Storage": {
        "name": "SoftLayer_Billing_Item_Network_Storage",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Storage data type describes the billing items related to StorageLayer accounts. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "The StorageLayer account that a network storage billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_Storage_Hub": {
        "name": "SoftLayer_Billing_Item_Network_Storage_Hub",
        "base": "SoftLayer_Billing_Item_Network_Storage",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Storage_Hub models all billing items related to hub-based StorageLayer offerings, such as CloudLayer storage. "
    },
    "SoftLayer_Billing_Item_Network_Storage_Hub_Bandwidth": {
        "name": "SoftLayer_Billing_Item_Network_Storage_Hub_Bandwidth",
        "base": "SoftLayer_Billing_Item_Network_Storage",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Storage_Hub_Bandwidth data type models the billing items created when a CloudLayer storage account generates a bandwidth overage charge. "
    },
    "SoftLayer_Billing_Item_Network_Subnet": {
        "name": "SoftLayer_Billing_Item_Network_Subnet",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Subnet data type contains general information relating to a single SoftLayer billing item whose item category code is one of the following: \n* pri_ip_address\n* static_sec_ip_addresses (static secondary)\n* sov_sec_ip_addresses (secondary on vlan, also known as \"portable ips\")\n* sov_sec_ip_addresses_pub (sov_sec_ip_addresses public only)\n* sov_sec_ip_addresses_priv (sov_sec_ip_addresses private only)\n* sec_ip_addresses (old style, secondary ip addresses)\n\n\nThese item categories denote that the billing item has subnet information attached. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "The resource for a subnet-related billing item."
            },
            "resourceName": {
                "name": "resourceName",
                "type": "string",
                "form": "local",
                "doc": "The resource name for a subnet billing item."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a server billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_Subnet_IpAddress_Global": {
        "name": "SoftLayer_Billing_Item_Network_Subnet_IpAddress_Global",
        "base": "SoftLayer_Billing_Item_Network_Subnet",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Subnet_IpAddress_Global data type contains general information relating to a single SoftLayer billing item whose item category code is one of the following: \n* global_ipv4\n* global_ipv6\n\n\nThese item categories denote that the billing item has subnet information attached. "
    },
    "SoftLayer_Billing_Item_Network_Tunnel": {
        "name": "SoftLayer_Billing_Item_Network_Tunnel",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Storage data type describes the billing items related to StorageLayer accounts. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Tunnel_Module_Context",
                "form": "relational",
                "doc": "The IPsec VPN that a network tunnel billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Network_Vlan": {
        "name": "SoftLayer_Billing_Item_Network_Vlan",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Vlan data type contains general information relating to a single SoftLayer billing item whose item category code is one of the following: \n* network_vlan\n\n\nThese item categories denote that the billing item has network vlan information attached. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The network vlan resource for this billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_NewCustomerSetup": {
        "name": "SoftLayer_Billing_Item_NewCustomerSetup",
        "base": "SoftLayer_Billing_Item",
        "noservice": true
    },
    "SoftLayer_Billing_Item_Private_Cloud": {
        "name": "SoftLayer_Billing_Item_Private_Cloud",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Private_Cloud data type contains general information relating to a single billing item for a private cloud. "
    },
    "SoftLayer_Billing_Item_Software_Component": {
        "name": "SoftLayer_Billing_Item_Software_Component",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Hardware data type contains general information relating to a single SoftLayer billing item for hardware components. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "The software component that this billing item points to."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a software component billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Software_Component_Analytics_Urchin": {
        "name": "SoftLayer_Billing_Item_Software_Component_Analytics_Urchin",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Software_Component_Analytics_Urchin data type contains general information relating to a single SoftLayer billing item for Urchin software components. "
    },
    "SoftLayer_Billing_Item_Software_Component_ControlPanel": {
        "name": "SoftLayer_Billing_Item_Software_Component_ControlPanel",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Software_Component_ControlPanel data type contains general information relating to a single SoftLayer billing item for control panel software components. "
    },
    "SoftLayer_Billing_Item_Software_Component_ControlPanel_Parallels_Plesk_Billing": {
        "name": "SoftLayer_Billing_Item_Software_Component_ControlPanel_Parallels_Plesk_Billing",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Software_Component_ControlPanel data type contains general information relating to a single SoftLayer billing item for control panel software components. "
    },
    "SoftLayer_Billing_Item_Software_Component_OperatingSystem_Addon": {
        "name": "SoftLayer_Billing_Item_Software_Component_OperatingSystem_Addon",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Software_Component_OperatingSystem_Addon data type contains general information relating to a single SoftLayer billing item for operating system add-on software components. "
    },
    "SoftLayer_Billing_Item_Software_Component_OperatingSystem_Addon_Citrix_Essentials": {
        "name": "SoftLayer_Billing_Item_Software_Component_OperatingSystem_Addon_Citrix_Essentials",
        "base": "SoftLayer_Billing_Item_Software_Component_OperatingSystem_Addon",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Software_Component_OperatingSystem_Addon_Citrix_Essentials data type contains general information relating to a single SoftLayer billing item for Citrix Essentials software components. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "The Citrix Essentials software component that a billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem": {
        "name": "SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem data type contains general information relating to a single SoftLayer billing item for operating system software components on virtual machines. "
    },
    "SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem_Microsoft": {
        "name": "SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem_Microsoft",
        "base": "SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem_Microsoft data type contains general information relating to a single SoftLayer billing item for a Microsoft operating system software components on virtual machines. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Software_VirtualLicense",
                "form": "relational",
                "doc": "The software virtual license to which this billing item points."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a software virtual license billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem_Redhat": {
        "name": "SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem_Redhat",
        "base": "SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Software_Component_Virtual_OperatingSystem_Microsoft data type contains general information relating to a single SoftLayer billing item for a Microsoft operating system software components on virtual machines. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "The software component to which this billing item points."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a software component billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Software_License": {
        "name": "SoftLayer_Billing_Item_Software_License",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Software_License data type contains general information relating to a single SoftLayer billing item for a software license. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Software_AccountLicense",
                "form": "relational",
                "doc": "The resource for a software license billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Support": {
        "name": "SoftLayer_Billing_Item_Support",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Support data type contains general information relating to a premium support offering "
    },
    "SoftLayer_Billing_Item_User_Customer_External_Binding": {
        "name": "SoftLayer_Billing_Item_User_Customer_External_Binding",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Network_Application_Delivery_Controller data type describes the billing item related to an external authentication binding ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_User_Customer_External_Binding",
                "form": "relational",
                "doc": "The external authentication binding that a billing item is associated with."
            }
        }
    },
    "SoftLayer_Billing_Item_Virtual_Dedicated_Rack": {
        "name": "SoftLayer_Billing_Item_Virtual_Dedicated_Rack",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "A SoftLayer_Billing_Item_Virtual_Dedicated_Rack data type models the billing information for a single bandwidth pooling. Bandwidth pooling members share their public bandwidth allocations, and incur overage charges instead of the overages on individual rack members. Virtual rack billing items are the parent items for all of it's rack membership billing items. ",
        "properties": {
            "billingCycleBandwidthUsage": {
                "name": "billingCycleBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object is returned for each network a virtual rack is attached to."
            },
            "billingCyclePrivateBandwidthUsage": {
                "name": "billingCyclePrivateBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw private bandwidth usage data for the current billing cycle."
            },
            "billingCyclePrivateUsageIn": {
                "name": "billingCyclePrivateUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private network inbound bandwidth for this virtual rack for the current billing cycle."
            },
            "billingCyclePrivateUsageOut": {
                "name": "billingCyclePrivateUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private network outbound bandwidth for this virtual rack for the current billing cycle."
            },
            "billingCyclePrivateUsageTotal": {
                "name": "billingCyclePrivateUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total private network bandwidth for this virtual rack for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsage": {
                "name": "billingCyclePublicBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw public bandwidth usage data for the current billing cycle."
            },
            "billingCyclePublicUsageIn": {
                "name": "billingCyclePublicUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public inbound bandwidth for this virtual rack for the current billing cycle."
            },
            "billingCyclePublicUsageOut": {
                "name": "billingCyclePublicUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth for this virtual rack for the current billing cycle."
            },
            "billingCyclePublicUsageTotal": {
                "name": "billingCyclePublicUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total public bandwidth for this virtual rack for the current billing cycle."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "doc": "The virtual rack that a virtual rack billing item is associated with."
            },
            "billingCycleBandwidthUsageCount": {
                "name": "billingCycleBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object is returned for each network a virtual rack is attached to."
            },
            "billingCyclePrivateBandwidthUsageCount": {
                "name": "billingCyclePrivateBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw private bandwidth usage data for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsageCount": {
                "name": "billingCyclePublicBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw public bandwidth usage data for the current billing cycle."
            }
        }
    },
    "SoftLayer_Billing_Item_Virtual_DedicatedHost": {
        "name": "SoftLayer_Billing_Item_Virtual_DedicatedHost",
        "base": "SoftLayer_Billing_Item",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Item_Virtual_DedicatedHost",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "form": "relational",
                "doc": "The resource for a virtual dedicated host billing item."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a server billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Virtual_Disk_Image": {
        "name": "SoftLayer_Billing_Item_Virtual_Disk_Image",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Virtual_Disk_Image data type contains general information relating to a single SoftLayer billing item for disk images. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_Disk_Image",
                "form": "relational",
                "doc": "The disk image to which the billing item points."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a disk image billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Virtual_Guest": {
        "name": "SoftLayer_Billing_Item_Virtual_Guest",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Virtual_Guest data type contains general information relating to a single SoftLayer billing item for guests. ",
        "properties": {
            "billingCycleBandwidthUsage": {
                "name": "billingCycleBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object will be returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsage": {
                "name": "billingCyclePrivateBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw private bandwidth usage data for the current billing cycle."
            },
            "billingCyclePrivateUsageIn": {
                "name": "billingCyclePrivateUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private inbound bandwidth for this virtual server for the current billing cycle."
            },
            "billingCyclePrivateUsageOut": {
                "name": "billingCyclePrivateUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private outbound bandwidth for this virtual server for the current billing cycle."
            },
            "billingCyclePrivateUsageTotal": {
                "name": "billingCyclePrivateUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total private bandwidth for this virtual server for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsage": {
                "name": "billingCyclePublicBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw public bandwidth usage data for the current billing cycle."
            },
            "billingCyclePublicUsageIn": {
                "name": "billingCyclePublicUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public inbound bandwidth for this virtual server for the current billing cycle."
            },
            "billingCyclePublicUsageOut": {
                "name": "billingCyclePublicUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth for this virtual server for the current billing cycle."
            },
            "billingCyclePublicUsageTotal": {
                "name": "billingCyclePublicUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total public bandwidth for this virtual server for the current billing cycle."
            },
            "monitoringBillingItems": {
                "name": "monitoringBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The resource for a cloud server billing item."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a server billing item."
            },
            "billingCycleBandwidthUsageCount": {
                "name": "billingCycleBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object will be returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsageCount": {
                "name": "billingCyclePrivateBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw private bandwidth usage data for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsageCount": {
                "name": "billingCyclePublicBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw public bandwidth usage data for the current billing cycle."
            },
            "monitoringBillingItemCount": {
                "name": "monitoringBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Billing_Item_Virtual_Host_Usage": {
        "name": "SoftLayer_Billing_Item_Virtual_Host_Usage",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Virtual_Host_Usage data type contains general information relating to a single SoftLayer billing item for virtual machine peak usage ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The resource for a peak virtual machine usage billing item."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The resource (unique identifier) for a server billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Virtual_ReservedCapacity": {
        "name": "SoftLayer_Billing_Item_Virtual_ReservedCapacity",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup_Instance",
                "form": "relational",
                "doc": "The resource for a virtual dedicated host billing item."
            }
        }
    },
    "SoftLayer_Billing_Item_Workspace": {
        "name": "SoftLayer_Billing_Item_Workspace",
        "base": "SoftLayer_Billing_Item",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Item_Workspace data type contains general information relating to a single SoftLayer billing item whose item category code is 'workspace' "
    },
    "SoftLayer_Billing_Order": {
        "name": "SoftLayer_Billing_Order",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Billing_Order service controls the orders that are created whenever a SoftLayer customer's places a purchase. Orders exist in several states. The ones of concern are: \n*'''QUOTE_PENDING''': Orders which have not been paid yet. Orders pending approval from a Softlayer customer.\n\n\nOnce an order is paid it moves from QUOTE_PENDING to PENDING_APPROVAL state. \n\nOrders are created with contact information duplicated from the [[SoftLayer_Account (type)|SoftLayer_Account data type]] or by manual entry. We do this in order to maintain a history of an account's contact information as orders are generated. \n\nQuery the [[SoftLayer_Account]] service to get a list of orders for your account. ",
        "methods": {
            "approveModifiedOrder": {
                "name": "approveModifiedOrder",
                "type": "boolean",
                "doc": "When an order has been modified, the customer will need to approve the changes. This method will allow the customer to approve the changes. "
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Billing_Order",
                "typeArray": true,
                "doc": "This will get all billing orders for your account. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Order",
                "doc": "getObject retrieves the SoftLayer_Billing_Order object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Billing_Order service. You can only retrieve orders that are assigned to your portal user's account. ",
                "filterable": true,
                "maskable": true
            },
            "getOrderStatuses": {
                "name": "getOrderStatuses",
                "type": "SoftLayer_Container_Billing_Order_Status",
                "typeArray": true,
                "doc": "Get a list of [[SoftLayer_Container_Billing_Order_Status]] objects. ",
                "static": true
            },
            "getPdf": {
                "name": "getPdf",
                "type": "base64Binary",
                "doc": "Retrieve a PDF record of a SoftLayer quote. If the order is not a quote, an error will be thrown. "
            },
            "getPdfFilename": {
                "name": "getPdfFilename",
                "type": "string",
                "doc": "Retrieve the default filename of an order PDF. "
            },
            "getRecalculatedOrderContainer": {
                "name": "getRecalculatedOrderContainer",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "Generate an [[SoftLayer_Container_Product_Order|order container]] from a billing order. This will take into account promotions, reseller status, estimated taxes and all other standard order verification processes. ",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string",
                        "doc": "Message to return with the verified order",
                        "defaultValue": null
                    },
                    {
                        "name": "ignoreDiscountsFlag",
                        "type": "boolean",
                        "doc": "This flag is set and used internally",
                        "defaultValue": false
                    }
                ]
            },
            "getReceipt": {
                "name": "getReceipt",
                "type": "SoftLayer_Container_Product_Order_Receipt",
                "doc": "Generate a [[SoftLayer_Container_Product_Order_Receipt]] object with all the order information. "
            },
            "isPendingEditApproval": {
                "name": "isPendingEditApproval",
                "type": "boolean",
                "doc": "When an order has been modified, it will contain a status indicating so. This method checks that status and also verifies that the active user's account is the same as the account on the order. "
            }
        },
        "typeDoc": "The SoftLayer_Billing_Order data type contains general information relating to an individual order applied to a SoftLayer customer account or to a new customer. Personal information in this type such as names, addresses, and phone numbers are taken from the account's contact information at the time the order is generated for existing SoftLayer customer. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The [[SoftLayer_Account|account]] to which an order belongs."
            },
            "brand": {
                "name": "brand",
                "type": "SoftLayer_Brand",
                "form": "relational"
            },
            "cart": {
                "name": "cart",
                "type": "SoftLayer_Billing_Order_Cart",
                "form": "relational",
                "doc": "A cart is similar to a quote, except that it can be continually modified by the customer and does not have locked-in prices. Not all orders will have a cart associated with them. See [[SoftLayer_Billing_Order_Cart]] for more information."
            },
            "coreRestrictedItems": {
                "name": "coreRestrictedItems",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The [[SoftLayer_Billing_Order_Item (type)|order items]] that are core restricted"
            },
            "creditCardTransactions": {
                "name": "creditCardTransactions",
                "type": "SoftLayer_Billing_Payment_Card_Transaction",
                "form": "relational",
                "typeArray": true,
                "doc": "All credit card transactions associated with this order. If this order was not placed with a credit card, this will be empty."
            },
            "exchangeRate": {
                "name": "exchangeRate",
                "type": "SoftLayer_Billing_Currency_ExchangeRate",
                "form": "relational"
            },
            "initialInvoice": {
                "name": "initialInvoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational"
            },
            "items": {
                "name": "items",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Billing_Order_items included in an order."
            },
            "orderApprovalDate": {
                "name": "orderApprovalDate",
                "type": "dateTime",
                "form": "relational"
            },
            "orderNonServerMonthlyAmount": {
                "name": "orderNonServerMonthlyAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "An order's non-server items total monthly fee."
            },
            "orderServerMonthlyAmount": {
                "name": "orderServerMonthlyAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "An order's server items total monthly fee."
            },
            "orderTopLevelItems": {
                "name": "orderTopLevelItems",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "An order's top level items. This normally includes the server line item and any non-server additional services such as NAS or ISCSI."
            },
            "orderTotalAmount": {
                "name": "orderTotalAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "This amount represents the order's initial charge including set up fee and taxes."
            },
            "orderTotalOneTime": {
                "name": "orderTotalOneTime",
                "type": "decimal",
                "form": "relational",
                "doc": "An order's total one time amount summing all the set up fees, the labor fees and the one time fees. Taxes will be applied for non-tax-exempt. This amount represents the initial fees that will be charged."
            },
            "orderTotalOneTimeAmount": {
                "name": "orderTotalOneTimeAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "An order's total one time amount. This amount represents the initial fees before tax."
            },
            "orderTotalOneTimeTaxAmount": {
                "name": "orderTotalOneTimeTaxAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "An order's total one time tax amount. This amount represents the tax that will be applied to the total charge, if the SoftLayer_Account tied to a SoftLayer_Billing_Order is a taxable account."
            },
            "orderTotalRecurring": {
                "name": "orderTotalRecurring",
                "type": "decimal",
                "form": "relational",
                "doc": "An order's total recurring amount. Taxes will be applied for non-tax-exempt. This amount represents the fees that will be charged on a recurring (usually monthly) basis."
            },
            "orderTotalRecurringAmount": {
                "name": "orderTotalRecurringAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "An order's total recurring amount. This amount represents the fees that will be charged on a recurring (usually monthly) basis."
            },
            "orderTotalRecurringTaxAmount": {
                "name": "orderTotalRecurringTaxAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "The total tax amount of the recurring fees, if the SoftLayer_Account tied to a SoftLayer_Billing_Order is a taxable account."
            },
            "orderTotalSetupAmount": {
                "name": "orderTotalSetupAmount",
                "type": "decimal",
                "form": "relational",
                "doc": "An order's total setup fee."
            },
            "orderType": {
                "name": "orderType",
                "type": "SoftLayer_Billing_Order_Type",
                "form": "relational",
                "doc": "The type of an order. This lets you know where this order was generated from."
            },
            "paypalTransactions": {
                "name": "paypalTransactions",
                "type": "SoftLayer_Billing_Payment_PayPal_Transaction",
                "form": "relational",
                "typeArray": true,
                "doc": "All PayPal transactions associated with this order. If this order was not placed with PayPal, this will be empty."
            },
            "presaleEvent": {
                "name": "presaleEvent",
                "type": "SoftLayer_Sales_Presale_Event",
                "form": "relational"
            },
            "quote": {
                "name": "quote",
                "type": "SoftLayer_Billing_Order_Quote",
                "form": "relational",
                "doc": "The quote of an order. This quote holds information about its expiration date, creation date, name and status. This information is tied to an order having the status 'QUOTE'"
            },
            "referralPartner": {
                "name": "referralPartner",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The Referral Partner who referred this order. (Only necessary for new customer orders)"
            },
            "upgradeRequestFlag": {
                "name": "upgradeRequestFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates an order is an upgrade."
            },
            "userRecord": {
                "name": "userRecord",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The SoftLayer_User_Customer object tied to an order."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account ID to which an order belongs."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The point in time at which a billing item was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "*"
            },
            "impersonatingUserRecordId": {
                "name": "impersonatingUserRecordId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_User_Customer id of the portal or API user who impersonated the user which submitted an order."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last time an order was updated."
            },
            "orderQuoteId": {
                "name": "orderQuoteId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Billing_Order_Quote id of the quote's user who finalized an order."
            },
            "orderTypeId": {
                "name": "orderTypeId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Billing_Order_Type id of the order."
            },
            "presaleEventId": {
                "name": "presaleEventId",
                "type": "int",
                "form": "local"
            },
            "privateCloudOrderFlag": {
                "name": "privateCloudOrderFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating a private cloud solution order (Deprecated)"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "Purchaser current status e.i. Approved, Pending_Approval"
            },
            "userRecordId": {
                "name": "userRecordId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_User_Customer id of the portal or API user who submitted an order."
            },
            "coreRestrictedItemCount": {
                "name": "coreRestrictedItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the [[SoftLayer_Billing_Order_Item (type)|order items]] that are core restricted"
            },
            "creditCardTransactionCount": {
                "name": "creditCardTransactionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all credit card transactions associated with this order. If this order was not placed with a credit card, this will be empty."
            },
            "itemCount": {
                "name": "itemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Billing_Order_items included in an order."
            },
            "orderTopLevelItemCount": {
                "name": "orderTopLevelItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an order's top level items. This normally includes the server line item and any non-server additional services such as NAS or ISCSI."
            },
            "paypalTransactionCount": {
                "name": "paypalTransactionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all PayPal transactions associated with this order. If this order was not placed with PayPal, this will be empty."
            }
        }
    },
    "SoftLayer_Billing_Order_Cart": {
        "name": "SoftLayer_Billing_Order_Cart",
        "base": "SoftLayer_Billing_Order_Quote",
        "serviceDoc": "The [[SoftLayer_Billing_Order_Cart]] service allows customers to save their order in a state that can be continually modified. The difference between a cart and a quote is that a quote has locked-in prices while a cart does not. This allows customers to save their order configuration for up to 30 days. After 30 days, the cart is deleted and cannot be retrieved again. ",
        "methods": {
            "createCart": {
                "name": "createCart",
                "type": "int",
                "doc": "When creating a new cart, the order data is sent through SoftLayer_Product_Order::verifyOrder to make sure that the cart contains valid data. If an issue is found with the order, an exception will be thrown and you will receive the same response as if SoftLayer_Product_Order::verifyOrder were called directly. Once the order verification is complete, the cart will be created. \n\nThe response is the new cart id. ",
                "static": true,
                "parameters": [
                    {
                        "name": "orderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "The order data to save as a cart"
                    }
                ]
            },
            "deleteCart": {
                "name": "deleteCart",
                "type": "boolean",
                "doc": "If a cart is no longer needed, it can be deleted using this service. Once a cart has been deleted, it cannot be retrieved again. "
            },
            "getCartByCartKey": {
                "name": "getCartByCartKey",
                "type": "SoftLayer_Billing_Order_Cart",
                "doc": "Retrieve a valid cart record of a SoftLayer order. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "cartKey",
                        "type": "string",
                        "doc": "Key required to retrieve a cart."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Order_Cart",
                "filterable": true,
                "maskable": true
            },
            "getPdf": {
                "name": "getPdf",
                "type": "base64Binary",
                "doc": "Retrieve a PDF copy of the cart. "
            },
            "getRecalculatedOrderContainer": {
                "name": "getRecalculatedOrderContainer",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "This method allows the customer to retrieve a saved cart and put it in a format that's suitable to be sent to SoftLayer_Billing_Order_Cart::createCart to create a new cart or to SoftLayer_Billing_Order_Cart::updateCart to update an existing cart. ",
                "parameters": [
                    {
                        "name": "orderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "Details for an order",
                        "defaultValue": null
                    },
                    {
                        "name": "orderBeingPlacedFlag",
                        "type": "boolean",
                        "doc": "Determines if an order is actually being placed",
                        "defaultValue": false
                    }
                ]
            },
            "updateCart": {
                "name": "updateCart",
                "type": "int",
                "doc": "Like SoftLayer_Billing_Order_Cart::createCart, the order data will be sent through SoftLayer_Product_Order::verifyOrder to make sure that the updated cart information is valid. Once it has been verified, the new order data will be saved. \n\nThis will return the cart id. ",
                "parameters": [
                    {
                        "name": "orderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "The order data to save as a cart"
                    }
                ]
            }
        }
    },
    "SoftLayer_Billing_Order_Item": {
        "name": "SoftLayer_Billing_Order_Item",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Billing_Order_Item datatype provides information regarding a single ordered item. When a server order or any other order is placed, the information about that order is stored as SoftLayer_Billing_Order_items. \n\nThis also provides information about software or hardware related to an ordered item,what package the item is in, and all pricing information related to this ordered item. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Order_Item",
                "doc": "getObject retrieves the SoftLayer_Billing_Item object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Billing_Item service. You can only retrieve billing items tied to the account that your portal user is assigned to. Billing items are an account's items of billable items. There are \"parent\" billing items and \"child\" billing items. The server billing item is generally referred to as a parent billing item. The items tied to a server, such as ram, harddrives, and operating systems are considered \"child\" billing items. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Every individual item that a SoftLayer customer is billed for is recorded in the SoftLayer_Billing_Item data type. Billing items range from server chassis to hard drives to control panels, bandwidth quota upgrades and port upgrade charges. SoftLayer [[SoftLayer_Billing_Invoice|invoices]] are generated from the cost of a customer's billing items. Billing items are copied from the product catalog as they're ordered by customers to create a reference between an account and the billable items they own. \n\nBilling items exist in a tree relationship. Items are associated with each other by parent/child relationships. Component items such as CPU's, RAM, and software each have a parent billing item for the server chassis they're associated with. Billing Items with a null parent item do not have an associated parent item. ",
        "properties": {
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The SoftLayer_Billing_Item tied to the order item."
            },
            "bundledItems": {
                "name": "bundledItems",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The other items included with an ordered item."
            },
            "category": {
                "name": "category",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "doc": "The item category tied to an order item."
            },
            "children": {
                "name": "children",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The child order items for an order item. All server order items should have children. These children are considered a part of the server."
            },
            "globalIdentifier": {
                "name": "globalIdentifier",
                "type": "string",
                "form": "relational",
                "doc": "A hardware's universally unique identifier."
            },
            "hardwareGenericComponent": {
                "name": "hardwareGenericComponent",
                "type": "SoftLayer_Hardware_Component_Model_Generic",
                "form": "relational",
                "doc": "The component type tied to an order item. All hardware-specific items should have a generic hardware component."
            },
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The SoftLayer_Product_Item tied to an order item. The item is the actual definition of the product being sold."
            },
            "itemCategoryAnswers": {
                "name": "itemCategoryAnswers",
                "type": "SoftLayer_Billing_Order_Item_Category_Answer",
                "form": "relational",
                "typeArray": true,
                "doc": "This is an item's category answers."
            },
            "itemPrice": {
                "name": "itemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "doc": "The SoftLayer_Product_Item_Price tied to an order item. The item price object describes the cost of an item."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The location of an ordered item. This is usually the same as the server it is being ordered with. Otherwise it describes the location of the additional service being ordered."
            },
            "nextOrderChildren": {
                "name": "nextOrderChildren",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "typeArray": true
            },
            "oldBillingItem": {
                "name": "oldBillingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "This is only populated when an upgrade order is placed. The old billing item represents what the billing was before the upgrade happened."
            },
            "order": {
                "name": "order",
                "type": "SoftLayer_Billing_Order",
                "form": "relational",
                "doc": "The order to which this item belongs. The order contains all the information related to the items included in an order"
            },
            "orderApprovalDate": {
                "name": "orderApprovalDate",
                "type": "dateTime",
                "form": "relational"
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "doc": "The SoftLayer_Product_Package an order item is a part of."
            },
            "parent": {
                "name": "parent",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "doc": "The parent order item ID for an item. Items that are associated with a server will have a parent. The parent will be the server item itself."
            },
            "preset": {
                "name": "preset",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "relational",
                "doc": "The SoftLayer_Product_Package_Preset related to this order item."
            },
            "promoCode": {
                "name": "promoCode",
                "type": "SoftLayer_Product_Promotion",
                "form": "relational"
            },
            "redundantPowerSupplyCount": {
                "name": "redundantPowerSupplyCount",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "A count of power supplies contained within this SoftLayer_Billing_Order"
            },
            "softwareDescription": {
                "name": "softwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "For ordered items that are software items, a full description of that software can be found with this property. "
            },
            "storageGroups": {
                "name": "storageGroups",
                "type": "SoftLayer_Configuration_Storage_Group_Order",
                "form": "relational",
                "typeArray": true,
                "doc": "The drive storage groups that are attached to this billing order item."
            },
            "totalRecurringAmount": {
                "name": "totalRecurringAmount",
                "type": "float",
                "form": "relational",
                "doc": "The recurring fee of an ordered item. This amount represents the fees that will be charged on a recurring (usually monthly) basis."
            },
            "upgradeItem": {
                "name": "upgradeItem",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The next SoftLayer_Product_Item in the upgrade path for this order item."
            },
            "categoryCode": {
                "name": "categoryCode",
                "type": "string",
                "form": "local",
                "doc": "The category code for the order item."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "friendly description of purchase item."
            },
            "domainName": {
                "name": "domainName",
                "type": "string",
                "form": "local",
                "doc": "The domain name of the server as designated by the purchaser at the time of order placement."
            },
            "hostName": {
                "name": "hostName",
                "type": "string",
                "form": "local",
                "doc": "The hostname of the server as designated by the purchaser at the time of order placement."
            },
            "hourlyRecurringFee": {
                "name": "hourlyRecurringFee",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of money charged per hourly for an order item, if applicable, and only if it was ordered this day. hourlyRecurringFee is measured in US Dollars ($USD). "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Product_Item ID for this order item."
            },
            "itemPriceId": {
                "name": "itemPriceId",
                "type": "decimal",
                "form": "local",
                "doc": "the item price id (SoftLayer_Product_Item_Price->id) of the ordered item."
            },
            "laborAfterTaxAmount": {
                "name": "laborAfterTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An order item's labor fee total after taxes. This does not include any child invoice items."
            },
            "laborFee": {
                "name": "laborFee",
                "type": "decimal",
                "form": "local",
                "doc": "The labor fee, if any. This is a one time charge."
            },
            "laborFeeTaxRate": {
                "name": "laborFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The rate at which labor fees are taxed if you are a taxable customer."
            },
            "laborTaxAmount": {
                "name": "laborTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An order item's labor tax amount. This does not include any child invoice items."
            },
            "oneTimeAfterTaxAmount": {
                "name": "oneTimeAfterTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An order item's one-time fee total after taxes. This does not include any child invoice items."
            },
            "oneTimeFee": {
                "name": "oneTimeFee",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of money charged as a one-time charge for an order item, if applicable. oneTimeFee is measured in US Dollars ($USD). "
            },
            "oneTimeFeeTaxRate": {
                "name": "oneTimeFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The rate at which one time fees are taxed if you are a taxable customer."
            },
            "oneTimeTaxAmount": {
                "name": "oneTimeTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An order item's one-time tax amount. This does not include any child invoice items."
            },
            "parentId": {
                "name": "parentId",
                "type": "int",
                "form": "local"
            },
            "presetId": {
                "name": "presetId",
                "type": "int",
                "form": "local",
                "doc": "The id for the preset configuration ordered."
            },
            "promoCodeId": {
                "name": "promoCodeId",
                "type": "int",
                "form": "local"
            },
            "quantity": {
                "name": "quantity",
                "type": "int",
                "form": "local",
                "doc": "the quantity of the ordered item in a quote."
            },
            "recurringAfterTaxAmount": {
                "name": "recurringAfterTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An order item's recurring fee total after taxes. This does not include any child invoice items."
            },
            "recurringFee": {
                "name": "recurringFee",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of money charged per month for an order item, if applicable. recurringFee is measured in US Dollars ($USD). "
            },
            "recurringTaxAmount": {
                "name": "recurringTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An order item's recurring tax amount. This does not include any child invoice items."
            },
            "setupAfterTaxAmount": {
                "name": "setupAfterTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An order item's setup fee total after taxes. This does not include any child invoice items."
            },
            "setupFee": {
                "name": "setupFee",
                "type": "decimal",
                "form": "local",
                "doc": "The setup fee, if any. This is a one time charge."
            },
            "setupFeeDeferralMonths": {
                "name": "setupFeeDeferralMonths",
                "type": "int",
                "form": "local",
                "doc": "The month set up fee deferral."
            },
            "setupFeeTaxRate": {
                "name": "setupFeeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The rate at which setup fees are taxed if you are a taxable customer."
            },
            "setupTaxAmount": {
                "name": "setupTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "An order item's setup tax amount. This does not include any child invoice items."
            },
            "bundledItemCount": {
                "name": "bundledItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the other items included with an ordered item."
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the child order items for an order item. All server order items should have children. These children are considered a part of the server."
            },
            "itemCategoryAnswerCount": {
                "name": "itemCategoryAnswerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of this is an item's category answers."
            },
            "nextOrderChildrenCount": {
                "name": "nextOrderChildrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "storageGroupCount": {
                "name": "storageGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the drive storage groups that are attached to this billing order item."
            }
        }
    },
    "SoftLayer_Billing_Order_Item_Category_Answer": {
        "name": "SoftLayer_Billing_Order_Item_Category_Answer",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Order_Item_Category_Answer data type represents a single answer to an item category question. ",
        "properties": {
            "orderItem": {
                "name": "orderItem",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "doc": "The billing order item that the answer is for."
            },
            "question": {
                "name": "question",
                "type": "SoftLayer_Product_Item_Category_Question",
                "form": "relational",
                "doc": "The question that is being answered."
            },
            "answer": {
                "name": "answer",
                "type": "string",
                "form": "local",
                "doc": "The answer to the question."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the answer was created."
            },
            "questionId": {
                "name": "questionId",
                "type": "int",
                "form": "local",
                "doc": "The identifier for the question that the answer belongs to."
            }
        }
    },
    "SoftLayer_Billing_Order_Quote": {
        "name": "SoftLayer_Billing_Order_Quote",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Billing_Order_Quote service controls the quoted orders that are created whenever a SoftLayer customer's places a purchase. Quotes exist in several states. The ones of concern are: \n*'''PENDING''': Quotes which have not been paid yet. Quotes pending approval from a Softlayer customer.\n\n\nOnce an order is placed from a quote it moves from PENDING to EXPIRED state 2 days after its creation and it is removed from the system after 5 days unless otherwise the SoftLayer customer saved the quote. \n\nQuotes could are created with contact information duplicated from the [[SoftLayer_Account (type)|SoftLayer_Account data type]] or by manual entry. We do this in order to maintain a history of an account's contact information as quotes are generated. \n\nQuery the [[SoftLayer_Account]] service to get a list of quotes for your account. ",
        "methods": {
            "claim": {
                "name": "claim",
                "type": "SoftLayer_Billing_Order_Quote",
                "doc": "This method is used to transfer an anonymous quote to the active user and associated account. An anonymous quote is one that was created by a user without being authenticated. If a quote was created anonymously and then the customer attempts to access that anonymous quote via the API (which requires authentication), the customer will be unable to retrieve the quote due to the security restrictions in place. By providing the ability for a customer to claim a quote, s/he will be able to pull the anonymous quote onto his/her account and successfully view the quote. \n\nTo claim a quote, both the quote id and the quote key (the 32-character random string) must be provided. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "quoteKey",
                        "type": "string",
                        "doc": "The 32-character random string generated when the quote was created"
                    },
                    {
                        "name": "quoteId",
                        "type": "int",
                        "doc": "The quote's unique identifier (id) property"
                    }
                ]
            },
            "deleteQuote": {
                "name": "deleteQuote",
                "type": "SoftLayer_Billing_Order_Quote",
                "doc": "Account master users and sub-users in the SoftLayer customer portal can delete the quote of an order. ",
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Billing_Order_Quote",
                "doc": "getObject retrieves the SoftLayer_Billing_Order_Quote object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Billing_Order_Quote service. You can only retrieve quotes that are assigned to your portal user's account. ",
                "filterable": true,
                "maskable": true
            },
            "getPdf": {
                "name": "getPdf",
                "type": "base64Binary",
                "doc": "Retrieve a PDF record of a SoftLayer quoted order. SoftLayer keeps PDF records of all quoted orders for customer retrieval from the portal and API. You must have a PDF reader installed in order to view these quoted order files. "
            },
            "getQuoteByQuoteKey": {
                "name": "getQuoteByQuoteKey",
                "type": "SoftLayer_Billing_Order_Quote",
                "doc": "This method will return a [[SoftLayer_Billing_Order_Quote]] that is identified by the quote key specified. If you do not have access to the quote or it does not exist, an exception will be thrown indicating so. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "quoteKey",
                        "type": "string",
                        "doc": "Key required to retrieve a quote."
                    }
                ]
            },
            "getRecalculatedOrderContainer": {
                "name": "getRecalculatedOrderContainer",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "Generate an [[SoftLayer_Container_Product_Order|order container]] from the previously-created quote. This will take into account promotions, reseller status, estimated taxes and all other standard order verification processes. ",
                "parameters": [
                    {
                        "name": "userOrderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "User supplied order data",
                        "defaultValue": null
                    },
                    {
                        "name": "orderBeingPlacedFlag",
                        "type": "boolean",
                        "doc": "This flag is set and used internally",
                        "defaultValue": false
                    }
                ]
            },
            "placeOrder": {
                "name": "placeOrder",
                "type": "SoftLayer_Container_Product_Order_Receipt",
                "doc": "Use this method for placing server orders and additional services orders. The same applies for this as with verifyOrder. Send in the SoftLayer_Container_Product_Order_Hardware_Server for server orders. In addition to verifying the order, placeOrder() also makes an initial authorization on the SoftLayer_Account tied to this order, if a credit card is on file. If the account tied to this order is a paypal customer, an URL will also be returned to the customer. After placing the order, you must go to this URL to finish the authorization process. This tells paypal that you indeed want to place the order. After going to this URL, it will direct you back to a SoftLayer webpage that tells us you have finished the process. After this, it will go to sales for final approval. ",
                "parameters": [
                    {
                        "name": "orderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "Details required to order."
                    }
                ]
            },
            "placeQuote": {
                "name": "placeQuote",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "Use this method for placing server quotes and additional services quotes. The same applies for this as with verifyOrder. Send in the SoftLayer_Container_Product_Order_Hardware_Server for server quotes. In addition to verifying the quote, placeQuote() also makes an initial authorization on the SoftLayer_Account tied to this order, if a credit card is on file. If the account tied to this order is a paypal customer, an URL will also be returned to the customer. After placing the order, you must go to this URL to finish the authorization process. This tells paypal that you indeed want to place the order. After going to this URL, it will direct you back to a SoftLayer webpage that tells us you have finished the process. ",
                "parameters": [
                    {
                        "name": "orderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "Details required to order."
                    }
                ]
            },
            "saveQuote": {
                "name": "saveQuote",
                "type": "SoftLayer_Billing_Order_Quote",
                "doc": "Account master users and sub-users in the SoftLayer customer portal can save the quote of an order to avoid its deletion after 5 days or its expiration after 2 days. ",
                "maskable": true
            },
            "verifyOrder": {
                "name": "verifyOrder",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "Use this method for placing server orders and additional services orders. The same applies for this as with verifyOrder. Send in the SoftLayer_Container_Product_Order_Hardware_Server for server orders. In addition to verifying the order, placeOrder() also makes an initial authorization on the SoftLayer_Account tied to this order, if a credit card is on file. If the account tied to this order is a paypal customer, an URL will also be returned to the customer. After placing the order, you must go to this URL to finish the authorization process. This tells paypal that you indeed want to place the order. After going to this URL, it will direct you back to a SoftLayer webpage that tells us you have finished the process. After this, it will go to sales for final approval. ",
                "parameters": [
                    {
                        "name": "orderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "Details required to order."
                    }
                ]
            },
            "withdrawGdprAcceptance": {
                "name": "withdrawGdprAcceptance",
                "type": "void",
                "doc": "Withdraws the users acceptance of the GDPR terms. "
            }
        },
        "typeDoc": "The SoftLayer_Billing_Oder_Quote data type contains general information relating to an individual order applied to a SoftLayer customer account or to a new customer. Personal information in this type such as names, addresses, and phone numbers are taken from the account's contact information at the time the quote is generated for existing SoftLayer customer. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "A quote's corresponding account."
            },
            "doNotContactFlag": {
                "name": "doNotContactFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates whether the owner of the quote chosen to no longer be contacted."
            },
            "order": {
                "name": "order",
                "type": "SoftLayer_Billing_Order",
                "form": "relational",
                "doc": "This order contains the records for which products were selected for this quote."
            },
            "ordersFromQuote": {
                "name": "ordersFromQuote",
                "type": "SoftLayer_Billing_Order",
                "form": "relational",
                "typeArray": true,
                "doc": "These are all the orders that were created from this quote."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "Identification Number of the account record tied to the quote"
            },
            "completedPurchaseDataId": {
                "name": "completedPurchaseDataId",
                "type": "int",
                "form": "local",
                "doc": "Identification Number of the order record tied to the quote."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Holds the date the quote record was created"
            },
            "expirationDate": {
                "name": "expirationDate",
                "type": "dateTime",
                "form": "local",
                "doc": "This property holds the date of expiration of a quote, after that date the quote would be deem expired"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The id use to identify a quote."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Holds the date when the quote record was modified with reference to its creation date"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name given to quote by the initiator"
            },
            "publicNote": {
                "name": "publicNote",
                "type": "string",
                "form": "local",
                "doc": "This property Holds system generated notes. In our case if a quote is tied to an order where one of the order item has an inactive promotion code, the quote will be considered invalid."
            },
            "quoteKey": {
                "name": "quoteKey",
                "type": "string",
                "form": "local",
                "doc": "Holds system generated hash password for the Quote"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "This property Holds the current status of a Quote: pending,expired, saved or deleted"
            },
            "ordersFromQuoteCount": {
                "name": "ordersFromQuoteCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of these are all the orders that were created from this quote."
            }
        }
    },
    "SoftLayer_Billing_Order_Type": {
        "name": "SoftLayer_Billing_Order_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Oder_Type data type contains general information relating to all the different types of orders that exist. This data pertains only to where an order was generated from, from any of the SoftLayer websites with ordering interfaces or directly through the SoftLayer API. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A brief description of where a SoftLayer order originated from. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer order type's internal identifier. "
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "A simple keyname stating where a SoftLayer order originated from. "
            }
        }
    },
    "SoftLayer_Billing_Payment_Card_ChangeRequest": {
        "name": "SoftLayer_Billing_Payment_Card_ChangeRequest",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Payment_Card_ChangeRequest data type contains general information relating to attempted credit card information changes. This supports enablement of 3D Secure via Cardinal Cruise implementation that allows for credit card authentication and is currently limited to specified merchants. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "authorizedCreditCardTransaction": {
                "name": "authorizedCreditCardTransaction",
                "type": "SoftLayer_Billing_Payment_Card_Transaction",
                "form": "relational",
                "doc": "The SoftLayer_Billing_Payment_Card_Transaction tied to the authorization performed as part of this change request."
            },
            "captureCreditCardTransaction": {
                "name": "captureCreditCardTransaction",
                "type": "SoftLayer_Billing_Payment_Card_Transaction",
                "form": "relational",
                "doc": "The SoftLayer_Billing_Payment_Card_Transaction tied to the capture of funds performed as part of this change request."
            },
            "ticketAttachmentReferences": {
                "name": "ticketAttachmentReferences",
                "type": "SoftLayer_Ticket_Attachment",
                "form": "relational",
                "typeArray": true,
                "doc": "These are tickets tied to a credit card change request."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account ID to which the credit card and billing information is associated with."
            },
            "amount": {
                "name": "amount",
                "type": "decimal",
                "form": "local",
                "doc": "The total amount of the attempted transaction, represented in decimal format as US Dollars ($USD)."
            },
            "billingAddressLine1": {
                "name": "billingAddressLine1",
                "type": "string",
                "form": "local",
                "doc": "The physical street address. Reserve information such as \"apartment #123\" or \"Suite 2\" for line 1."
            },
            "billingAddressLine2": {
                "name": "billingAddressLine2",
                "type": "string",
                "form": "local",
                "doc": "The second line in the address. Information such as suite number goes here."
            },
            "billingCity": {
                "name": "billingCity",
                "type": "string",
                "form": "local",
                "doc": "The city in which a customer's account resides."
            },
            "billingCountryCode": {
                "name": "billingCountryCode",
                "type": "string",
                "form": "local",
                "doc": "The 2-character Country code for an account's address. (i.e. US)"
            },
            "billingEmail": {
                "name": "billingEmail",
                "type": "string",
                "form": "local",
                "doc": "The email address associated with a customer account."
            },
            "billingNameCompany": {
                "name": "billingNameCompany",
                "type": "string",
                "form": "local",
                "doc": "the company name for an account."
            },
            "billingNameFirst": {
                "name": "billingNameFirst",
                "type": "string",
                "form": "local",
                "doc": "The first name of the customer account owner."
            },
            "billingNameLast": {
                "name": "billingNameLast",
                "type": "string",
                "form": "local",
                "doc": "The last name of the customer account owner"
            },
            "billingPhoneFax": {
                "name": "billingPhoneFax",
                "type": "string",
                "form": "local",
                "doc": "The fax number associated with a customer account."
            },
            "billingPhoneVoice": {
                "name": "billingPhoneVoice",
                "type": "string",
                "form": "local",
                "doc": "The phone number associated with a customer account."
            },
            "billingPostalCode": {
                "name": "billingPostalCode",
                "type": "string",
                "form": "local",
                "doc": "The Zip or Postal Code for the billing address on an account."
            },
            "billingState": {
                "name": "billingState",
                "type": "string",
                "form": "local",
                "doc": "The State for the account."
            },
            "cardAccountLast4": {
                "name": "cardAccountLast4",
                "type": "string",
                "form": "local",
                "doc": "The last 4 digits of a customer's credit card."
            },
            "cardAccountNumber": {
                "name": "cardAccountNumber",
                "type": "string",
                "form": "local",
                "doc": "The card number submitted in the change request."
            },
            "cardExpirationMonth": {
                "name": "cardExpirationMonth",
                "type": "string",
                "form": "local",
                "doc": "The month (MM) in which a customer's payment card will expire."
            },
            "cardExpirationYear": {
                "name": "cardExpirationYear",
                "type": "string",
                "form": "local",
                "doc": "The year (YYYY) in which a customer's payment card will expire."
            },
            "cardNickname": {
                "name": "cardNickname",
                "type": "string",
                "form": "local"
            },
            "cardType": {
                "name": "cardType",
                "type": "string",
                "form": "local",
                "doc": "The type of payment card a customer has. (i.e. Visa, MasterCard, American Express)."
            },
            "creditCardVerificationNumber": {
                "name": "creditCardVerificationNumber",
                "type": "string",
                "form": "local",
                "doc": "The credit card verification number submitted in the change request."
            },
            "currencyShortName": {
                "name": "currencyShortName",
                "type": "string",
                "form": "local",
                "doc": "Describes the currency selected for payment"
            },
            "deviceFingerprintId": {
                "name": "deviceFingerprintId",
                "type": "string",
                "form": "local",
                "doc": "Device Fingerprint Identifier - Used internally and can safely be ignored."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for a single change request."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "the notes stored about a customer's payment card."
            },
            "payerAuthenticationEnrollmentReferenceId": {
                "name": "payerAuthenticationEnrollmentReferenceId",
                "type": "string",
                "form": "local",
                "doc": "The purpose of this property is to allow enablement of 3D Secure (3DS). This is the Reference ID that corresponds to the device data for Payer Authentication. In order to properly enable 3DS, this will require implementation of Cardinal Cruise Hybrid. \n\nPlease refer to https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/360668/Cardinal+Cruise+Hybrid and view section under \"DFReferenceId / ReferenceId\" to populate this property accordingly. "
            },
            "payerAuthenticationWebToken": {
                "name": "payerAuthenticationWebToken",
                "type": "string",
                "form": "local",
                "doc": "\"Continue with Consumer Authentication\" decoded response JWT (JSON Web Token) after successful authentication. The response is part of the implementation of Cardinal Cruise Hybrid. \n\nPlease refer to https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/360668/Cardinal+Cruise+Hybrid and view section under \"Continue with Consumer Authentication\" to populate this property accordingly based on the CCA response. "
            },
            "paymentRoleId": {
                "name": "paymentRoleId",
                "type": "int",
                "form": "local"
            },
            "paymentType": {
                "name": "paymentType",
                "type": "string",
                "form": "local",
                "doc": "The description of the type of payment sent in a change transaction."
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for a ticket discussing the switch between payment methods."
            },
            "ticketAttachmentReferenceCount": {
                "name": "ticketAttachmentReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of these are tickets tied to a credit card change request."
            }
        }
    },
    "SoftLayer_Billing_Payment_Card_ManualPayment": {
        "name": "SoftLayer_Billing_Payment_Card_ManualPayment",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Payment_Card_ManualPayment data type contains general information related to requesting a manual payment. This supports enablement of 3D Secure via Cardinal Cruise implementation that allows for credit card authentication and is currently limited to specified merchants. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "authorizedCreditCardTransaction": {
                "name": "authorizedCreditCardTransaction",
                "type": "SoftLayer_Billing_Payment_Card_Transaction",
                "form": "relational",
                "doc": "This is the credit card transaction data tied to a credit card manual payment."
            },
            "authorizedPayPalTransaction": {
                "name": "authorizedPayPalTransaction",
                "type": "SoftLayer_Billing_Payment_PayPal_Transaction",
                "form": "relational",
                "doc": "This is the PayPal transaction data tied to a PayPal manual payment."
            },
            "captureCreditCardTransaction": {
                "name": "captureCreditCardTransaction",
                "type": "SoftLayer_Billing_Payment_Card_Transaction",
                "form": "relational",
                "doc": "The SoftLayer_Billing_Payment_Card_Transaction tied to the capture performed as part of this manual payment. This will only exist if the manual payment was performed with a credit card."
            },
            "capturePayPalTransaction": {
                "name": "capturePayPalTransaction",
                "type": "SoftLayer_Billing_Payment_PayPal_Transaction",
                "form": "relational",
                "doc": "The SoftLayer_Billing_Payment_PayPal_Transaction tied to the capture performed as part of this manual payment. This will only exist if the manual payment was performed via PayPal."
            },
            "ticketAttachmentReferences": {
                "name": "ticketAttachmentReferences",
                "type": "SoftLayer_Ticket_Attachment",
                "form": "relational",
                "typeArray": true,
                "doc": "These are tickets tied to a credit card manual payment."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account ID to which the credit card and billing information is associated with."
            },
            "amount": {
                "name": "amount",
                "type": "decimal",
                "form": "local",
                "doc": "The total amount of the attempted transaction, represented in decimal format as US Dollars ($USD)."
            },
            "authorizedCreditCardTransactionId": {
                "name": "authorizedCreditCardTransactionId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of an attempted credit card transaction."
            },
            "authorizedPayPalTransactionId": {
                "name": "authorizedPayPalTransactionId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of an attempted PayPal transaction."
            },
            "billingAddressLine1": {
                "name": "billingAddressLine1",
                "type": "string",
                "form": "local",
                "doc": "The physical street address. Reserve information such as \"apartment #123\" or \"Suite 2\" for line 1."
            },
            "billingAddressLine2": {
                "name": "billingAddressLine2",
                "type": "string",
                "form": "local",
                "doc": "The second line in the address. Information such as suite number goes here."
            },
            "billingCity": {
                "name": "billingCity",
                "type": "string",
                "form": "local",
                "doc": "The city in which a customer's account resides."
            },
            "billingCountryCode": {
                "name": "billingCountryCode",
                "type": "string",
                "form": "local",
                "doc": "The 2-character Country code for an account's address. (i.e. US)"
            },
            "billingEmail": {
                "name": "billingEmail",
                "type": "string",
                "form": "local",
                "doc": "The email address associated with a customer account."
            },
            "billingNameCompany": {
                "name": "billingNameCompany",
                "type": "string",
                "form": "local",
                "doc": "the company name for an account."
            },
            "billingNameFirst": {
                "name": "billingNameFirst",
                "type": "string",
                "form": "local",
                "doc": "The first name of the customer account owner."
            },
            "billingNameLast": {
                "name": "billingNameLast",
                "type": "string",
                "form": "local",
                "doc": "The last name of the customer account owner."
            },
            "billingPhoneFax": {
                "name": "billingPhoneFax",
                "type": "string",
                "form": "local",
                "doc": "The fax number associated with a customer account."
            },
            "billingPhoneVoice": {
                "name": "billingPhoneVoice",
                "type": "string",
                "form": "local",
                "doc": "The phone number associated with a customer account."
            },
            "billingPostalCode": {
                "name": "billingPostalCode",
                "type": "string",
                "form": "local",
                "doc": "The Zip or Postal Code for the billing address on an account."
            },
            "billingState": {
                "name": "billingState",
                "type": "string",
                "form": "local",
                "doc": "The State for the account."
            },
            "cancelUrl": {
                "name": "cancelUrl",
                "type": "string",
                "form": "local",
                "doc": "The cancel URL is the page to which PayPal redirects if payment is not approved."
            },
            "cardAccountHash": {
                "name": "cardAccountHash",
                "type": "string",
                "form": "local",
                "doc": "A hash value of the credit card number."
            },
            "cardAccountLast4": {
                "name": "cardAccountLast4",
                "type": "string",
                "form": "local",
                "doc": "The last 4 digits of a customer's credit card."
            },
            "cardAccountNumber": {
                "name": "cardAccountNumber",
                "type": "string",
                "form": "local",
                "doc": "The card number submitted in the change request."
            },
            "cardExpirationMonth": {
                "name": "cardExpirationMonth",
                "type": "string",
                "form": "local",
                "doc": "The month (MM) in which a customer's payment card will expire."
            },
            "cardExpirationYear": {
                "name": "cardExpirationYear",
                "type": "string",
                "form": "local",
                "doc": "The year (YYYY) in which a customer's payment card will expire."
            },
            "cardType": {
                "name": "cardType",
                "type": "string",
                "form": "local",
                "doc": "The method key of the type payment issued (Visa - 001, Mastercard - 002, American Express - 003, Discover - 004, PayPal - paypal)."
            },
            "creditCardVerificationNumber": {
                "name": "creditCardVerificationNumber",
                "type": "string",
                "form": "local",
                "doc": "The credit card verification number submitted in the change request."
            },
            "currencyShortName": {
                "name": "currencyShortName",
                "type": "string",
                "form": "local",
                "doc": "Describes the currency selected for payment"
            },
            "deviceFingerprintId": {
                "name": "deviceFingerprintId",
                "type": "string",
                "form": "local",
                "doc": "Device Fingerprint Identifier - Used internally and can safely be ignored."
            },
            "fromIpAddress": {
                "name": "fromIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address from which the transaction originates."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for a single manual payment request."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Notes generated as a result of the payment request."
            },
            "payerAuthenticationEnrollmentReferenceId": {
                "name": "payerAuthenticationEnrollmentReferenceId",
                "type": "string",
                "form": "local",
                "doc": "The purpose of this property is to allow enablement of 3D Secure (3DS). This is the Reference ID that corresponds to the device data for Payer Authentication. In order to properly enable 3DS, this will require implementation of Cardinal Cruise Hybrid. \n\nPlease refer to https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/360668/Cardinal+Cruise+Hybrid and view section under \"DFReferenceId / ReferenceId\" to populate this property accordingly. "
            },
            "payerAuthenticationWebToken": {
                "name": "payerAuthenticationWebToken",
                "type": "string",
                "form": "local",
                "doc": "\"Continue with Consumer Authentication\" decoded response JWT (JSON Web Token) after successful authentication. The response is part of the implementation of Cardinal Cruise Hybrid. \n\nPlease refer to https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/360668/Cardinal+Cruise+Hybrid and view section under \"Continue with Consumer Authentication\" to populate this property accordingly based on the CCA response. "
            },
            "paymentType": {
                "name": "paymentType",
                "type": "string",
                "form": "local",
                "doc": "The description of the type of payment sent in a change transaction."
            },
            "returnUrl": {
                "name": "returnUrl",
                "type": "string",
                "form": "local",
                "doc": "The return URL is the page to which PayPal redirects after payment is approved."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "Describes the type of manual payment (PAYPAL or CREDIT_CARD)."
            },
            "ticketAttachmentReferenceCount": {
                "name": "ticketAttachmentReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of these are tickets tied to a credit card manual payment."
            }
        }
    },
    "SoftLayer_Billing_Payment_Card_Transaction": {
        "name": "SoftLayer_Billing_Payment_Card_Transaction",
        "base": "SoftLayer_Billing_Payment_Transaction",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Payment_Card_Transaction data type contains general information relating to attempted credit card transactions. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account to which a transaction belongs."
            },
            "order": {
                "name": "order",
                "type": "SoftLayer_Billing_Order",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account ID to which the credit card and billing information is associated with."
            },
            "amount": {
                "name": "amount",
                "type": "decimal",
                "form": "local",
                "doc": "The total amount of the attempted transaction, represented in decimal format as US Dollars ($USD)."
            },
            "billingAddressLine1": {
                "name": "billingAddressLine1",
                "type": "string",
                "form": "local",
                "doc": "The physical street address. Reserve information such as \"apartment #123\" or \"Suite 2\" for line 1."
            },
            "billingAddressLine2": {
                "name": "billingAddressLine2",
                "type": "string",
                "form": "local",
                "doc": "The second line in the address. Information such as suite number goes here."
            },
            "billingCity": {
                "name": "billingCity",
                "type": "string",
                "form": "local",
                "doc": "The city in which a customer's account resides."
            },
            "billingCountryCode": {
                "name": "billingCountryCode",
                "type": "string",
                "form": "local",
                "doc": "The 2-character Country code for an account's address. (i.e. US)"
            },
            "billingEmail": {
                "name": "billingEmail",
                "type": "string",
                "form": "local",
                "doc": "The email address associated with a customer account."
            },
            "billingNameCompany": {
                "name": "billingNameCompany",
                "type": "string",
                "form": "local",
                "doc": "the company name for an account."
            },
            "billingNameFirst": {
                "name": "billingNameFirst",
                "type": "string",
                "form": "local",
                "doc": "The first name of the customer account owner."
            },
            "billingNameLast": {
                "name": "billingNameLast",
                "type": "string",
                "form": "local",
                "doc": "The last name of the customer account owner."
            },
            "billingPhoneFax": {
                "name": "billingPhoneFax",
                "type": "string",
                "form": "local",
                "doc": "The fax number associated with a customer account."
            },
            "billingPhoneVoice": {
                "name": "billingPhoneVoice",
                "type": "string",
                "form": "local",
                "doc": "The phone number associated with a customer account."
            },
            "billingPostalCode": {
                "name": "billingPostalCode",
                "type": "string",
                "form": "local",
                "doc": "The Zip or Postal Code for the billing address on an account."
            },
            "billingState": {
                "name": "billingState",
                "type": "string",
                "form": "local",
                "doc": "The State for the account."
            },
            "cardAccountLast4": {
                "name": "cardAccountLast4",
                "type": "int",
                "form": "local",
                "doc": "The last 4 digits of a customer's credit card."
            },
            "cardExpirationMonth": {
                "name": "cardExpirationMonth",
                "type": "int",
                "form": "local",
                "doc": "The month (MM) in which a customer's payment card will expire."
            },
            "cardExpirationYear": {
                "name": "cardExpirationYear",
                "type": "int",
                "form": "local",
                "doc": "The year (YYYY) in which a customer's payment card will expire."
            },
            "cardType": {
                "name": "cardType",
                "type": "string",
                "form": "local",
                "doc": "The type of payment issued (i.e. Visa, MasterCard, American Express)."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the transaction was attempted."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for a single credit card transaction request."
            },
            "invoiceId": {
                "name": "invoiceId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the invoice to which funds will be applied."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the transaction was modified."
            },
            "orderFromIpAddress": {
                "name": "orderFromIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address from which the transaction originates."
            },
            "referenceCode": {
                "name": "referenceCode",
                "type": "string",
                "form": "local",
                "doc": "A code used by the financial institution to refer to the requested transaction."
            },
            "requestId": {
                "name": "requestId",
                "type": "string",
                "form": "local",
                "doc": "The unique identifier of the request submitted to the financial institution."
            },
            "returnStatus": {
                "name": "returnStatus",
                "type": "int",
                "form": "local",
                "doc": "The status code returned from the financial institution."
            },
            "serializedReply": {
                "name": "serializedReply",
                "type": "string",
                "form": "local",
                "doc": "A serialized, delimited string of the transaction request sent to the financial institution."
            },
            "serializedRequest": {
                "name": "serializedRequest",
                "type": "string",
                "form": "local",
                "doc": "A serialized, delimited string of the transaction request sent to the financial institution."
            }
        }
    },
    "SoftLayer_Billing_Payment_PayPal_Transaction": {
        "name": "SoftLayer_Billing_Payment_PayPal_Transaction",
        "base": "SoftLayer_Billing_Payment_Transaction",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Payment_PayPal_Transaction data type contains general information relating to attempted PayPal transactions. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account to which a transaction belongs."
            },
            "order": {
                "name": "order",
                "type": "SoftLayer_Billing_Order",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account ID to which the PayPal and billing information is associated with."
            },
            "addressCityName": {
                "name": "addressCityName",
                "type": "string",
                "form": "local",
                "doc": "City given in the address of the PayPal user."
            },
            "addressCountry": {
                "name": "addressCountry",
                "type": "string",
                "form": "local",
                "doc": "Country given in the named address of the PayPal user."
            },
            "addressName": {
                "name": "addressName",
                "type": "string",
                "form": "local",
                "doc": "Name given to the address provided for the PayPal user."
            },
            "addressPostalCode": {
                "name": "addressPostalCode",
                "type": "string",
                "form": "local",
                "doc": "Postal Code of the address of the PayPal user."
            },
            "addressStateProvence": {
                "name": "addressStateProvence",
                "type": "string",
                "form": "local",
                "doc": "State or Province in the address of the PayPal user."
            },
            "addressStatus": {
                "name": "addressStatus",
                "type": "string",
                "form": "local",
                "doc": "PayPal defined status of the address of the PayPal user."
            },
            "addressStreet1": {
                "name": "addressStreet1",
                "type": "string",
                "form": "local",
                "doc": "First line of the street address of the PayPal user."
            },
            "addressStreet2": {
                "name": "addressStreet2",
                "type": "string",
                "form": "local",
                "doc": "Second line of the street address of the PayPal user."
            },
            "contactPhone": {
                "name": "contactPhone",
                "type": "string",
                "form": "local",
                "doc": "Phone number provided for the PayPal user."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the transaction was attempted."
            },
            "exchangeRate": {
                "name": "exchangeRate",
                "type": "string",
                "form": "local",
                "doc": "Exchange rate imposed on the payment amount."
            },
            "feeAmount": {
                "name": "feeAmount",
                "type": "decimal",
                "form": "local",
                "doc": "PayPal fee applied to the payment."
            },
            "grossAmount": {
                "name": "grossAmount",
                "type": "decimal",
                "form": "local",
                "doc": "The total amount of the payment executed by PayPal, represented in decimal format as US Dollars ($USD)."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for a single PayPal transaction request."
            },
            "invoiceId": {
                "name": "invoiceId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the invoice to which funds will be applied."
            },
            "lastPaypalCommand": {
                "name": "lastPaypalCommand",
                "type": "string",
                "form": "local",
                "doc": "The name of the command issued to PayPal with regards to the attempted transaction."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the transaction was modified."
            },
            "orderFromIpAddress": {
                "name": "orderFromIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address from where the PayPal payment request originated."
            },
            "orderTotal": {
                "name": "orderTotal",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of the payment submitted through the SoftLayer interface, represented in decimal format as US Dollars ($USD)."
            },
            "payer": {
                "name": "payer",
                "type": "string",
                "form": "local",
                "doc": "The PayPal user account name (email address) associated with the customer account."
            },
            "payerBusiness": {
                "name": "payerBusiness",
                "type": "string",
                "form": "local",
                "doc": "The name of the business associated with the PayPal user."
            },
            "payerCountry": {
                "name": "payerCountry",
                "type": "string",
                "form": "local",
                "doc": "Country given in the address of the PayPal user."
            },
            "payerFirstName": {
                "name": "payerFirstName",
                "type": "string",
                "form": "local",
                "doc": "First name of the PayPal user."
            },
            "payerId": {
                "name": "payerId",
                "type": "string",
                "form": "local",
                "doc": "Unique PayPal user account identifier."
            },
            "payerLastName": {
                "name": "payerLastName",
                "type": "string",
                "form": "local",
                "doc": "Last name of the PayPal user."
            },
            "payerStatus": {
                "name": "payerStatus",
                "type": "string",
                "form": "local",
                "doc": "Current PayPal status associated with the user account."
            },
            "paymentDate": {
                "name": "paymentDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date that the payment was confirmed in PayPal by the user."
            },
            "paymentStatus": {
                "name": "paymentStatus",
                "type": "string",
                "form": "local",
                "doc": "PayPal defined status of the attempted payment."
            },
            "paymentType": {
                "name": "paymentType",
                "type": "string",
                "form": "local",
                "doc": "PayPal defined code used to identify the type of payment.  Provided in a PayPal response."
            },
            "pendingReason": {
                "name": "pendingReason",
                "type": "string",
                "form": "local",
                "doc": "Reason provided by PayPal for a payment given a pending status."
            },
            "serializedReply": {
                "name": "serializedReply",
                "type": "string",
                "form": "local",
                "doc": "A serialized, delimited string of the reply received from PayPal."
            },
            "serializedRequest": {
                "name": "serializedRequest",
                "type": "string",
                "form": "local",
                "doc": "A serialized, delimited string of the request submitted to PayPal."
            },
            "settleAmount": {
                "name": "settleAmount",
                "type": "decimal",
                "form": "local",
                "doc": "PayPal defined fee."
            },
            "taxAmount": {
                "name": "taxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "Tax applied by PayPal to the payment amount."
            },
            "token": {
                "name": "token",
                "type": "string",
                "form": "local",
                "doc": "Value issued by PayPal for referencing the attempted transaction."
            },
            "transactionId": {
                "name": "transactionId",
                "type": "string",
                "form": "local",
                "doc": "Unique transaction ID provided in a PayPal response."
            },
            "transactionType": {
                "name": "transactionType",
                "type": "string",
                "form": "local",
                "doc": "PayPal defined code used to identify the type of transaction.  Provided in a PayPal response."
            }
        }
    },
    "SoftLayer_Billing_Payment_Processor": {
        "name": "SoftLayer_Billing_Payment_Processor",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "brandAssignments": {
                "name": "brandAssignments",
                "type": "SoftLayer_Brand_Payment_Processor",
                "form": "relational",
                "typeArray": true
            },
            "ownerAccount": {
                "name": "ownerAccount",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "paymentMethods": {
                "name": "paymentMethods",
                "type": "SoftLayer_Billing_Payment_Processor_Method",
                "form": "relational",
                "typeArray": true
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Billing_Payment_Processor_Type",
                "form": "relational"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "brandAssignmentCount": {
                "name": "brandAssignmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "paymentMethodCount": {
                "name": "paymentMethodCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Billing_Payment_Processor_Method": {
        "name": "SoftLayer_Billing_Payment_Processor_Method",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "paymentProcessor": {
                "name": "paymentProcessor",
                "type": "SoftLayer_Billing_Payment_Processor",
                "form": "relational"
            },
            "paymentType": {
                "name": "paymentType",
                "type": "SoftLayer_Billing_Payment_Type",
                "form": "relational"
            },
            "methodKey": {
                "name": "methodKey",
                "type": "string",
                "form": "local"
            },
            "multipleCurrencyFlag": {
                "name": "multipleCurrencyFlag",
                "type": "boolean",
                "form": "local"
            }
        }
    },
    "SoftLayer_Billing_Payment_Processor_Type": {
        "name": "SoftLayer_Billing_Payment_Processor_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "paymentProcessors": {
                "name": "paymentProcessors",
                "type": "SoftLayer_Billing_Payment_Processor",
                "form": "relational",
                "typeArray": true
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "paymentProcessorCount": {
                "name": "paymentProcessorCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Billing_Payment_Transaction": {
        "name": "SoftLayer_Billing_Payment_Transaction",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Implementation for payment transactions. "
    },
    "SoftLayer_Billing_Payment_Type": {
        "name": "SoftLayer_Billing_Payment_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Brand": {
        "name": "SoftLayer_Brand",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every IBM Cloud Infrastructure customer account is associated to a brand. \n\nIBM Cloud Infrastructure customers are unable to change their brand information in the portal or the API. ",
        "methods": {
            "createCustomerAccount": {
                "name": "createCustomerAccount",
                "type": "SoftLayer_Account",
                "doc": "Create a new customer account record. By default, the newly created account will be associated to a platform (PaaS) account. To skip the automatic creation and linking to a new platform account, set the <em>bluemixLinkedFlag</em> to <strong>false</strong> on the account template. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "account",
                        "type": "SoftLayer_Account",
                        "doc": "The template of the account object to be created."
                    },
                    {
                        "name": "bypassDuplicateAccountCheck",
                        "type": "boolean",
                        "doc": "Bypass validation for duplicate account(s).",
                        "defaultValue": false
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Brand",
                "doc": "\ncreateObject() allows the creation of a new brand. This will also create an `account` \nto serve as the owner of the brand. \n\n\nIn order to create a brand, a template object must be sent in with several required values. \n\n\n### Input [[SoftLayer_Brand]]\n\n\n\n- `name` \n    + Name of brand \n    + Required \n    + Type: string \n- `keyName` \n    + Reference key name \n    + Required \n    + Type: string \n- `longName` \n    + More descriptive name of brand \n    + Required \n    + Type: string \n- `account.firstName` \n    + First Name of account contact \n    + Required \n    + Type: string \n- `account.lastName` \n    + Last Name of account contact \n    + Required \n    + Type: string \n- `account.address1` \n    + Street Address of company \n    + Required \n    + Type: string \n- `account.address2` \n    + Street Address of company \n    + Optional \n    + Type: string \n- `account.city` \n    + City of company \n    + Required \n    + Type: string \n- `account.state` \n    + State of company (if applicable) \n    + Conditionally Required \n    + Type: string \n- `account.postalCode` \n    + Postal Code of company \n    + Required \n    + Type: string \n- `account.country` \n    + Country of company \n    + Required \n    + Type: string \n- `account.officePhone` \n    + Office Phone number of Company \n    + Required \n    + Type: string \n- `account.alternatePhone` \n    + Alternate Phone number of Company \n    + Optional \n    + Type: string \n- `account.companyName` \n    + Name of company \n    + Required \n    + Type: string \n- `account.email` \n    + Email address of account contact \n    + Required \n    + Type: string \n\n\nREST Example: \n``` \ncurl -X POST -d '{ \n    \"parameters\":[{ \n        \"name\": \"Brand Corp\", \n        \"keyName\": \"BRAND_CORP\", \n        \"longName\": \"Brand Corporation\", \n        \"account\": { \n            \"firstName\": \"Gloria\", \n            \"lastName\": \"Brand\", \n            \"address1\": \"123 Drive\", \n            \"city\": \"Boston\", \n            \"state\": \"MA\", \n            \"postalCode\": \"02107\", \n            \"country\": \"US\", \n            \"companyName\": \"Brand Corp\", \n            \"officePhone\": \"857-111-1111\", \n            \"email\": \"noreply@example.com\" \n        } \n    }] \n}' https://api.softlayer.com/rest/v3.1/SoftLayer_Brand/createObject.json \n``` ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Brand",
                        "doc": "The SoftLayer_Brand object that you wish to create."
                    }
                ]
            },
            "disableAccount": {
                "name": "disableAccount",
                "type": "void",
                "doc": "Disable an account associated with this Brand.  Anything that would disqualify the account from being disabled will cause an exception to be raised. ",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int"
                    }
                ]
            },
            "getAllTicketSubjects": {
                "name": "getAllTicketSubjects",
                "type": "SoftLayer_Ticket_Subject",
                "typeArray": true,
                "doc": "(DEPRECATED) Use [[SoftLayer_Ticket_Subject::getAllObjects]] method. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "account",
                        "type": "SoftLayer_Account",
                        "doc": "Deprecated. Account is no longer required",
                        "defaultValue": null
                    }
                ]
            },
            "getContactInformation": {
                "name": "getContactInformation",
                "type": "SoftLayer_Brand_Contact",
                "typeArray": true,
                "doc": "Retrieve the contact information for the brand such as the corporate or support contact.  This will include the contact name, telephone number, fax number, email address, and mailing address of the contact. ",
                "maskable": true
            },
            "getMerchantName": {
                "name": "getMerchantName",
                "type": "string",
                "doc": "Get the payment processor merchant name."
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Brand",
                "filterable": true,
                "maskable": true
            },
            "getToken": {
                "name": "getToken",
                "type": "string",
                "doc": "(DEPRECATED) Use [[SoftLayer_User_Customer::getImpersonationToken]] method. ",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "int"
                    }
                ]
            },
            "isIbmSlicBrand": {
                "name": "isIbmSlicBrand",
                "type": "boolean",
                "doc": "Check if the brand is IBM SLIC top level brand or sub brand. "
            },
            "isPlatformServicesBrand": {
                "name": "isPlatformServicesBrand",
                "type": "boolean",
                "doc": "Check if the alternate billing system of brand is Bluemix. "
            },
            "reactivateAccount": {
                "name": "reactivateAccount",
                "type": "void",
                "doc": "Reactivate an account associated with this Brand.  Anything that would disqualify the account from being reactivated will cause an exception to be raised. ",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int"
                    }
                ]
            },
            "verifyCanDisableAccount": {
                "name": "verifyCanDisableAccount",
                "type": "void",
                "doc": "Verify that an account may be disabled by a Brand Agent.  Anything that would disqualify the account from being disabled will cause an exception to be raised. ",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int"
                    }
                ]
            },
            "verifyCanReactivateAccount": {
                "name": "verifyCanReactivateAccount",
                "type": "void",
                "doc": "Verify that an account may be reactivated by a Brand Agent.  Anything that would disqualify the account from being reactivated will cause an exception to be raised. ",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Brand data type contains brand information relating to the single SoftLayer customer account. \n\nIBM Cloud Infrastructure customers are unable to change their brand information in the portal or the API. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "allOwnedAccounts": {
                "name": "allOwnedAccounts",
                "type": "SoftLayer_Account",
                "form": "relational",
                "typeArray": true,
                "doc": "All accounts owned by the brand."
            },
            "allowAccountCreationFlag": {
                "name": "allowAccountCreationFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates if creation of accounts is allowed."
            },
            "businessPartner": {
                "name": "businessPartner",
                "type": "SoftLayer_Brand_Business_Partner",
                "form": "relational",
                "doc": "Business Partner details for the brand. Country Enterprise Code, Channel, Segment, Reseller Level."
            },
            "businessPartnerFlag": {
                "name": "businessPartnerFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Flag indicating if the brand is a business partner."
            },
            "catalog": {
                "name": "catalog",
                "type": "SoftLayer_Product_Catalog",
                "form": "relational",
                "doc": "The Product Catalog for the Brand"
            },
            "contacts": {
                "name": "contacts",
                "type": "SoftLayer_Brand_Contact",
                "form": "relational",
                "typeArray": true,
                "doc": "The contacts for the brand."
            },
            "customerCountryLocationRestrictions": {
                "name": "customerCountryLocationRestrictions",
                "type": "SoftLayer_Brand_Restriction_Location_CustomerCountry",
                "form": "relational",
                "typeArray": true,
                "doc": "This references relationship between brands, locations and countries associated with a user's account that are ineligible when ordering products. For example, the India datacenter may not be available on this brand for customers that live in Great Britain."
            },
            "distributor": {
                "name": "distributor",
                "type": "SoftLayer_Brand",
                "form": "relational"
            },
            "distributorChildFlag": {
                "name": "distributorChildFlag",
                "type": "boolean",
                "form": "relational"
            },
            "distributorFlag": {
                "name": "distributorFlag",
                "type": "string",
                "form": "relational"
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated hardware objects."
            },
            "hasAgentAdvancedSupportFlag": {
                "name": "hasAgentAdvancedSupportFlag",
                "type": "boolean",
                "form": "relational"
            },
            "hasAgentSupportFlag": {
                "name": "hasAgentSupportFlag",
                "type": "boolean",
                "form": "relational"
            },
            "openTickets": {
                "name": "openTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true
            },
            "ownedAccounts": {
                "name": "ownedAccounts",
                "type": "SoftLayer_Account",
                "form": "relational",
                "typeArray": true,
                "doc": "Active accounts owned by the brand."
            },
            "securityLevel": {
                "name": "securityLevel",
                "type": "SoftLayer_Security_Level",
                "form": "relational"
            },
            "ticketGroups": {
                "name": "ticketGroups",
                "type": "SoftLayer_Ticket_Group",
                "form": "relational",
                "typeArray": true
            },
            "tickets": {
                "name": "tickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true
            },
            "users": {
                "name": "users",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true
            },
            "virtualGuests": {
                "name": "virtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "An account's associated virtual guest objects."
            },
            "catalogId": {
                "name": "catalogId",
                "type": "int",
                "form": "local",
                "doc": "ID of the Catalog used by this Brand"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The brand key name."
            },
            "longName": {
                "name": "longName",
                "type": "string",
                "form": "local",
                "doc": "The brand long name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The brand name."
            },
            "allOwnedAccountCount": {
                "name": "allOwnedAccountCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all accounts owned by the brand."
            },
            "contactCount": {
                "name": "contactCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the contacts for the brand."
            },
            "customerCountryLocationRestrictionCount": {
                "name": "customerCountryLocationRestrictionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of this references relationship between brands, locations and countries associated with a user's account that are ineligible when ordering products. For example, the India datacenter may not be available on this brand for customers that live in Great Britain."
            },
            "hardwareCount": {
                "name": "hardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated hardware objects."
            },
            "openTicketCount": {
                "name": "openTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "ownedAccountCount": {
                "name": "ownedAccountCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of active accounts owned by the brand."
            },
            "ticketCount": {
                "name": "ticketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "ticketGroupCount": {
                "name": "ticketGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "userCount": {
                "name": "userCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "virtualGuestCount": {
                "name": "virtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an account's associated virtual guest objects."
            }
        }
    },
    "SoftLayer_Brand_Attribute": {
        "name": "SoftLayer_Brand_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "brand": {
                "name": "brand",
                "type": "SoftLayer_Brand",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Brand_Business_Partner": {
        "name": "SoftLayer_Brand_Business_Partner",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Brand_Business_Partner",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Contains business partner details associated with a brand. Country Enterprise Identifier (CEID), Channel ID, Segment ID and Reseller Level. ",
        "properties": {
            "brand": {
                "name": "brand",
                "type": "SoftLayer_Brand",
                "form": "relational",
                "doc": "Brand associated with the business partner data"
            },
            "channel": {
                "name": "channel",
                "type": "SoftLayer_Business_Partner_Channel",
                "form": "relational",
                "doc": "Channel indicator used to categorize business partner revenue."
            },
            "segment": {
                "name": "segment",
                "type": "SoftLayer_Business_Partner_Segment",
                "form": "relational",
                "doc": "Segment indicator used to categorize business partner revenue."
            },
            "channelId": {
                "name": "channelId",
                "type": "int",
                "form": "local",
                "doc": "Brand business partner channel identifier "
            },
            "countryEnterpriseCode": {
                "name": "countryEnterpriseCode",
                "type": "string",
                "form": "local",
                "doc": "Brand business partner country enterprise code "
            },
            "resellerLevel": {
                "name": "resellerLevel",
                "type": "int",
                "form": "local",
                "doc": "Reseller level of a brand business partner "
            },
            "segmentId": {
                "name": "segmentId",
                "type": "int",
                "form": "local",
                "doc": "Brand business partner segment identifier "
            }
        }
    },
    "SoftLayer_Brand_Contact": {
        "name": "SoftLayer_Brand_Contact",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Brand_Contact contains the contact information for the brand such as Corporate or Support contact information ",
        "properties": {
            "brand": {
                "name": "brand",
                "type": "SoftLayer_Brand",
                "form": "relational"
            },
            "brandContactType": {
                "name": "brandContactType",
                "type": "SoftLayer_Brand_Contact_Type",
                "form": "relational"
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "The contact's address 1."
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "The contact's address 2."
            },
            "alternatePhone": {
                "name": "alternatePhone",
                "type": "string",
                "form": "local",
                "doc": "The contact's alternate phone number."
            },
            "brandContactTypeId": {
                "name": "brandContactTypeId",
                "type": "int",
                "form": "local",
                "doc": "The contact's type identifier."
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The contact's city."
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "The contact's country."
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "The contact's email address."
            },
            "faxPhone": {
                "name": "faxPhone",
                "type": "string",
                "form": "local",
                "doc": "The contact's fax number."
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "The contact's first name."
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "The contact's last name."
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local",
                "doc": "The contact's phone number."
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The contact's postal code."
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "The contact's state."
            }
        }
    },
    "SoftLayer_Brand_Contact_Type": {
        "name": "SoftLayer_Brand_Contact_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Brand_Contact_Type contains the contact type information for the brand contacts such as Corporate or Support contact type ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Contact type description."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Contact type key name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Contact type name."
            }
        }
    },
    "SoftLayer_Brand_Payment_Processor": {
        "name": "SoftLayer_Brand_Payment_Processor",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "brand": {
                "name": "brand",
                "type": "SoftLayer_Brand",
                "form": "relational"
            },
            "paymentProcessor": {
                "name": "paymentProcessor",
                "type": "SoftLayer_Billing_Payment_Processor",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Brand_Restriction_Location_CustomerCountry": {
        "name": "SoftLayer_Brand_Restriction_Location_CustomerCountry",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The [[SoftLayer_Brand_Restriction_Location_CustomerCountry]] service defines the relationship between brands, locations and countries associated with a user's account that are ineligible when ordering products. For example, the India datacenter may not be available on the SoftLayer US brand for customers that live in Great Britain. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Brand_Restriction_Location_CustomerCountry",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Brand_Restriction_Location_CustomerCountry",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The [[SoftLayer_Brand_Restriction_Location_CustomerCountry]] data type defines the relationship between brands, locations and countries associated with a user's account that are ineligible when ordering products. For example, the India datacenter may not be available on the SoftLayer US brand for customers that live in Great Britain. ",
        "properties": {
            "brand": {
                "name": "brand",
                "type": "SoftLayer_Brand",
                "form": "relational",
                "doc": "This references the brand that has a brand-location-country restriction setup."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "This references the datacenter that has a brand-location-country restriction setup. For example, if a datacenter is listed with a restriction for Canada, a Canadian customer may not be eligible to order services at that location."
            },
            "brandId": {
                "name": "brandId",
                "type": "int",
                "form": "local",
                "doc": "The brand associated with customer's account."
            },
            "customerCountryCode": {
                "name": "customerCountryCode",
                "type": "string",
                "form": "local",
                "doc": "country code associated with customer's account."
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "The id for datacenter location."
            }
        }
    },
    "SoftLayer_Business_Partner_Channel": {
        "name": "SoftLayer_Business_Partner_Channel",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Business_Partner_Channel",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Contains business partner channel information ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Business partner channel description "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Business partner channel name "
            }
        }
    },
    "SoftLayer_Business_Partner_Segment": {
        "name": "SoftLayer_Business_Partner_Segment",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Business_Partner_Segment",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Contains business partner segment information ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Business partner segment description "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Business partner segment name "
            }
        }
    },
    "SoftLayer_Catalyst_Affiliate": {
        "name": "SoftLayer_Catalyst_Affiliate",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "skipCreditCardVerificationFlag": {
                "name": "skipCreditCardVerificationFlag",
                "type": "boolean",
                "form": "local"
            }
        }
    },
    "SoftLayer_Catalyst_Company_Type": {
        "name": "SoftLayer_Catalyst_Company_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Catalyst_Company_Type",
                "typeArray": true,
                "doc": "<<<EOT",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Catalyst_Company_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Catalyst_Enrollment": {
        "name": "SoftLayer_Catalyst_Enrollment",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAffiliates": {
                "name": "getAffiliates",
                "type": "SoftLayer_Catalyst_Affiliate",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getCompanyTypes": {
                "name": "getCompanyTypes",
                "type": "SoftLayer_Catalyst_Company_Type",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getEnrollmentRequestAnnualRevenueOptions": {
                "name": "getEnrollmentRequestAnnualRevenueOptions",
                "type": "SoftLayer_Catalyst_Enrollment_Request_Container_AnswerOption",
                "typeArray": true,
                "static": true
            },
            "getEnrollmentRequestUserCountOptions": {
                "name": "getEnrollmentRequestUserCountOptions",
                "type": "SoftLayer_Catalyst_Enrollment_Request_Container_AnswerOption",
                "typeArray": true,
                "static": true
            },
            "getEnrollmentRequestYearsInOperationOptions": {
                "name": "getEnrollmentRequestYearsInOperationOptions",
                "type": "SoftLayer_Catalyst_Enrollment_Request_Container_AnswerOption",
                "typeArray": true,
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Catalyst_Enrollment",
                "filterable": true,
                "maskable": true
            },
            "requestManualEnrollment": {
                "name": "requestManualEnrollment",
                "type": "void",
                "static": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Container_Catalyst_ManualEnrollmentRequest"
                    }
                ]
            },
            "requestSelfEnrollment": {
                "name": "requestSelfEnrollment",
                "type": "SoftLayer_Account",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "enrollmentRequest",
                        "type": "SoftLayer_Catalyst_Enrollment_Request"
                    }
                ]
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "affiliate": {
                "name": "affiliate",
                "type": "SoftLayer_Catalyst_Affiliate",
                "form": "relational"
            },
            "companyType": {
                "name": "companyType",
                "type": "SoftLayer_Catalyst_Company_Type",
                "form": "relational"
            },
            "isActiveFlag": {
                "name": "isActiveFlag",
                "type": "boolean",
                "form": "relational"
            },
            "representative": {
                "name": "representative",
                "type": "SoftLayer_User_Employee",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "affiliateId": {
                "name": "affiliateId",
                "type": "int",
                "form": "local"
            },
            "agreementCompleteFlag": {
                "name": "agreementCompleteFlag",
                "type": "int",
                "form": "local"
            },
            "companyDescription": {
                "name": "companyDescription",
                "type": "string",
                "form": "local"
            },
            "companyTypeId": {
                "name": "companyTypeId",
                "type": "int",
                "form": "local"
            },
            "enrollmentDate": {
                "name": "enrollmentDate",
                "type": "dateTime",
                "form": "local"
            },
            "graduationDate": {
                "name": "graduationDate",
                "type": "dateTime",
                "form": "local"
            },
            "monthlyCreditAmount": {
                "name": "monthlyCreditAmount",
                "type": "decimal",
                "form": "local"
            },
            "representativeEmployeeId": {
                "name": "representativeEmployeeId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Catalyst_Enrollment_Request": {
        "name": "SoftLayer_Catalyst_Enrollment_Request",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Contains user information for Catalyst self-enrollment. ",
        "properties": {
            "affiliate": {
                "name": "affiliate",
                "type": "SoftLayer_Catalyst_Affiliate",
                "form": "relational"
            },
            "companyType": {
                "name": "companyType",
                "type": "SoftLayer_Catalyst_Company_Type",
                "form": "relational"
            },
            "marketingConsent": {
                "name": "marketingConsent",
                "type": "SoftLayer_Catalyst_Enrollment_Request_MarketingConsent",
                "form": "relational"
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "Applicant's address"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "Additional field for extended address"
            },
            "affiliateId": {
                "name": "affiliateId",
                "type": "int",
                "form": "local",
                "doc": "Id of the affiliate who referred applicant's"
            },
            "agreementCompleteFlag": {
                "name": "agreementCompleteFlag",
                "type": "boolean",
                "form": "local"
            },
            "applyToGepFlag": {
                "name": "applyToGepFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Determines whether or not to also apply to the GEP program"
            },
            "cardAccountNumber": {
                "name": "cardAccountNumber",
                "type": "string",
                "form": "local"
            },
            "cardExpirationMonth": {
                "name": "cardExpirationMonth",
                "type": "string",
                "form": "local"
            },
            "cardExpirationYear": {
                "name": "cardExpirationYear",
                "type": "string",
                "form": "local"
            },
            "cardType": {
                "name": "cardType",
                "type": "string",
                "form": "local"
            },
            "cardVerificationNumber": {
                "name": "cardVerificationNumber",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "Applicant's city"
            },
            "companyDescription": {
                "name": "companyDescription",
                "type": "string",
                "form": "local",
                "doc": "Brief description of Startup's product and key differentiators"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local",
                "doc": "Name of the applicant's company"
            },
            "companyTypeId": {
                "name": "companyTypeId",
                "type": "int",
                "form": "local",
                "doc": "Id of the company type which best describes applicant's company"
            },
            "companyUrl": {
                "name": "companyUrl",
                "type": "string",
                "form": "local",
                "doc": "URL to the Startup's site"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "Applicant's country code"
            },
            "currentUserChoice": {
                "name": "currentUserChoice",
                "type": "int",
                "form": "local",
                "doc": "Index of answer chosen for how many current users question"
            },
            "deviceFingerprintId": {
                "name": "deviceFingerprintId",
                "type": "string",
                "form": "local",
                "doc": "Id of the fingerprint"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "Applicant's email address"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "Applicant's first name"
            },
            "futureUserChoice": {
                "name": "futureUserChoice",
                "type": "int",
                "form": "local",
                "doc": "Index of answer chosen for how many future users question"
            },
            "ibmIdUsername": {
                "name": "ibmIdUsername",
                "type": "string",
                "form": "local",
                "doc": "Master user's IBMId username"
            },
            "incubatorName": {
                "name": "incubatorName",
                "type": "string",
                "form": "local",
                "doc": "Name of accelerator or incubator startup belongs to, if any"
            },
            "investorName": {
                "name": "investorName",
                "type": "string",
                "form": "local",
                "doc": "Name of the investor, if any"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Applicant's last name"
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local",
                "doc": "Applicant's primary phone number"
            },
            "overFiveYearsOldFlag": {
                "name": "overFiveYearsOldFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether or not the startup has been operating for more than five years"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "Applicant's postal code"
            },
            "referralCode": {
                "name": "referralCode",
                "type": "string",
                "form": "local",
                "doc": "IBM referral code, if any"
            },
            "revenueOverOneMillionFlag": {
                "name": "revenueOverOneMillionFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether or not the startup has over one million in annual revenue"
            },
            "skipCatalystApplicationFlag": {
                "name": "skipCatalystApplicationFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Determines whether or not to apply to the Catalyst program"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "Applicant's state/region code"
            },
            "vatId": {
                "name": "vatId",
                "type": "string",
                "form": "local",
                "doc": "Applicant's vatId, if one exists"
            }
        }
    },
    "SoftLayer_Catalyst_Enrollment_Request_Container_AnswerOption": {
        "name": "SoftLayer_Catalyst_Enrollment_Request_Container_AnswerOption",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "answer": {
                "name": "answer",
                "type": "string",
                "form": "local"
            },
            "index": {
                "name": "index",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Catalyst_Enrollment_Request_MarketingConsent": {
        "name": "SoftLayer_Catalyst_Enrollment_Request_MarketingConsent",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Contains user marketing consent information for Catalyst self-enrollment. ",
        "properties": {
            "request": {
                "name": "request",
                "type": "SoftLayer_Catalyst_Enrollment_Request",
                "form": "relational"
            },
            "marketingByEmailFlag": {
                "name": "marketingByEmailFlag",
                "type": "boolean",
                "form": "local"
            },
            "marketingByPostalMailFlag": {
                "name": "marketingByPostalMailFlag",
                "type": "boolean",
                "form": "local"
            },
            "marketingByTelephoneFlag": {
                "name": "marketingByTelephoneFlag",
                "type": "boolean",
                "form": "local"
            }
        }
    },
    "SoftLayer_Compliance_Report_Type": {
        "name": "SoftLayer_Compliance_Report_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Compliance_Report_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Compliance_Report_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Configuration_Storage_Filesystem_Type": {
        "name": "SoftLayer_Configuration_Storage_Filesystem_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Configuration_Storage_Group": {
        "name": "SoftLayer_Configuration_Storage_Group",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This class describes the base Storage Group for a Complex Drive Configuration ",
        "properties": {
            "ancestorGroups": {
                "name": "ancestorGroups",
                "type": "SoftLayer_Configuration_Storage_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "This class represents a storage groups ancestors"
            },
            "arrayType": {
                "name": "arrayType",
                "type": "SoftLayer_Configuration_Storage_Group_Array_Type",
                "form": "relational",
                "doc": "This class represents a storage group disk array type"
            },
            "captureEnabledFlag": {
                "name": "captureEnabledFlag",
                "type": "SoftLayer_Container_Hardware_CaptureEnabled",
                "form": "relational",
                "doc": "Determine if the storage group is able to be image captured. If unable to image capture the reasons will be provided."
            },
            "createEmployee": {
                "name": "createEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational"
            },
            "descendantGroups": {
                "name": "descendantGroups",
                "type": "SoftLayer_Configuration_Storage_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "This class represents a storage groups descendants"
            },
            "hardDrives": {
                "name": "hardDrives",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The hard drives contained within this storage group."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Storage group description "
            },
            "diskSpace": {
                "name": "diskSpace",
                "type": "decimal",
                "form": "local",
                "doc": "Storage group disk space "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Storage group type id "
            },
            "lvmFlag": {
                "name": "lvmFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate if the storage group is setup for lvm "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Storage group name "
            },
            "units": {
                "name": "units",
                "type": "string",
                "form": "local",
                "doc": "Storage group disk size units "
            },
            "ancestorGroupCount": {
                "name": "ancestorGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of this class represents a storage groups ancestors"
            },
            "descendantGroupCount": {
                "name": "descendantGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of this class represents a storage groups descendants"
            },
            "hardDriveCount": {
                "name": "hardDriveCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the hard drives contained within this storage group."
            }
        }
    },
    "SoftLayer_Configuration_Storage_Group_Array_Type": {
        "name": "SoftLayer_Configuration_Storage_Group_Array_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Supported hardware raid modes ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Configuration_Storage_Group_Array_Type",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Storage_Group_Array_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Supported hardware raid modes ",
        "properties": {
            "hardwareComponentModels": {
                "name": "hardwareComponentModels",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational",
                "typeArray": true
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "driveMultiplier": {
                "name": "driveMultiplier",
                "type": "int",
                "form": "local"
            },
            "hotspareAllow": {
                "name": "hotspareAllow",
                "type": "boolean",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "maximumDrives": {
                "name": "maximumDrives",
                "type": "int",
                "form": "local"
            },
            "minimumDrives": {
                "name": "minimumDrives",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "hardwareComponentModelCount": {
                "name": "hardwareComponentModelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Configuration_Storage_Group_Order": {
        "name": "SoftLayer_Configuration_Storage_Group_Order",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Single storage group(array) used for a hardware server order. \n\nIf a raid configuration is required this object will describe a single array that will be configured on the server. If the server requires more than one array, a storage group will need to be created for each array. ",
        "properties": {
            "arrayType": {
                "name": "arrayType",
                "type": "SoftLayer_Configuration_Storage_Group_Array_Type",
                "form": "relational",
                "doc": "Raid mode for the storage group."
            },
            "billingOrderItem": {
                "name": "billingOrderItem",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "doc": "The order item that relates to this storage group."
            },
            "arrayNumber": {
                "name": "arrayNumber",
                "type": "int",
                "form": "local"
            },
            "arraySize": {
                "name": "arraySize",
                "type": "decimal",
                "form": "local"
            },
            "arrayTypeId": {
                "name": "arrayTypeId",
                "type": "int",
                "form": "local"
            },
            "billingOrderItemId": {
                "name": "billingOrderItemId",
                "type": "int",
                "form": "local"
            },
            "controller": {
                "name": "controller",
                "type": "int",
                "form": "local"
            },
            "hardDrives": {
                "name": "hardDrives",
                "type": "int",
                "form": "local",
                "typeArray": true
            },
            "hotSpareDrives": {
                "name": "hotSpareDrives",
                "type": "int",
                "form": "local",
                "typeArray": true
            },
            "lvmFlag": {
                "name": "lvmFlag",
                "type": "boolean",
                "form": "local"
            },
            "partitionData": {
                "name": "partitionData",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Configuration_Storage_Group_Template_Group": {
        "name": "SoftLayer_Configuration_Storage_Group_Template_Group",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Single storage group(array) used in a storage group template. \n\nIf a server configuration requires a raid configuration this object will describe a single array to be configured. ",
        "properties": {
            "type": {
                "name": "type",
                "type": "SoftLayer_Configuration_Storage_Group_Array_Type",
                "form": "relational"
            },
            "diskControllerIndex": {
                "name": "diskControllerIndex",
                "type": "int",
                "form": "local",
                "doc": "The disk controller for the array."
            },
            "grow": {
                "name": "grow",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to use all available space."
            },
            "hardDrivesString": {
                "name": "hardDrivesString",
                "type": "string",
                "form": "local",
                "doc": "Comma delimited integers of drive indexes for the array. This can also be the string 'all' to specify all drives in the server "
            },
            "hotSpareDrivesString": {
                "name": "hotSpareDrivesString",
                "type": "string",
                "form": "local",
                "doc": "Comma delimited integers of drive indexes for hot spares on the array. "
            },
            "orderIndex": {
                "name": "orderIndex",
                "type": "int",
                "form": "local",
                "doc": "The order of the arrays in the template."
            },
            "size": {
                "name": "size",
                "type": "decimal",
                "form": "local",
                "doc": "Size of array. Must be within limitations of the smallest drive and raid mode"
            }
        }
    },
    "SoftLayer_Configuration_Template": {
        "name": "SoftLayer_Configuration_Template",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Configuration template class encapsulated an arbitrary configuration values for various resources. ",
        "methods": {
            "copyTemplate": {
                "name": "copyTemplate",
                "type": "SoftLayer_Configuration_Template",
                "doc": "Copy a configuration template and returns a newly created template copy ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Configuration_Template",
                        "doc": "Template object."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Deletes a customer configuration template. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the object by passing in a modified instance of the object. Use this method to modify configuration template name or description. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Configuration_Template",
                        "doc": "A skeleton SoftLayer_Configuration_Template object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Configuration_Template",
                "typeArray": true,
                "doc": "Retrieves all available configuration templates ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template",
                "filterable": true,
                "maskable": true
            },
            "updateDefaultValues": {
                "name": "updateDefaultValues",
                "type": "boolean",
                "doc": "Updates default configuration values. ",
                "parameters": [
                    {
                        "name": "configurationValues",
                        "type": "SoftLayer_Configuration_Template_Section_Definition_Value",
                        "typeArray": true,
                        "doc": "Configuration values.",
                        "defaultValue": []
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Configuration_Template data type contains general information of an arbitrary resource. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "configurationSections": {
                "name": "configurationSections",
                "type": "SoftLayer_Configuration_Template_Section",
                "form": "relational",
                "typeArray": true
            },
            "defaultValues": {
                "name": "defaultValues",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Value",
                "form": "relational",
                "typeArray": true
            },
            "definitions": {
                "name": "definitions",
                "type": "SoftLayer_Configuration_Template_Section_Definition",
                "form": "relational",
                "typeArray": true
            },
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational"
            },
            "linkedSectionReferences": {
                "name": "linkedSectionReferences",
                "type": "SoftLayer_Configuration_Template_Section_Reference",
                "form": "relational"
            },
            "parent": {
                "name": "parent",
                "type": "SoftLayer_Configuration_Template",
                "form": "relational"
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a SoftLayer account that this configuration template belongs to"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Created date"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Configuration template description"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration template."
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a product item that this configuration template is associated with"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Last modified date"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Configuration template name"
            },
            "parentId": {
                "name": "parentId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of the parent configuration template"
            },
            "userRecordId": {
                "name": "userRecordId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a user that last modified this configuration template"
            },
            "configurationSectionCount": {
                "name": "configurationSectionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "defaultValueCount": {
                "name": "defaultValueCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "definitionCount": {
                "name": "definitionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Configuration_Template_Attribute": {
        "name": "SoftLayer_Configuration_Template_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Configuration template attribute class contains supplementary information for a configuration template. ",
        "properties": {
            "configurationTemplate": {
                "name": "configurationTemplate",
                "type": "SoftLayer_Configuration_Template",
                "form": "relational"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "Value of a configuration template attribute"
            }
        }
    },
    "SoftLayer_Configuration_Template_Section": {
        "name": "SoftLayer_Configuration_Template_Section",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Configuration section allow you to divide a large configuration values into a smaller pieces. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template_Section",
                "filterable": true,
                "maskable": true
            },
            "hasSubSections": {
                "name": "hasSubSections",
                "type": "boolean",
                "doc": "Returns true if the object has sub-sections "
            }
        },
        "typeDoc": "The SoftLayer_Configuration_Template_Section data type contains information of a configuration section. \n\nConfiguration can contain sub-sections. ",
        "properties": {
            "definitions": {
                "name": "definitions",
                "type": "SoftLayer_Configuration_Template_Section_Definition",
                "form": "relational",
                "typeArray": true
            },
            "disallowedDeletionFlag": {
                "name": "disallowedDeletionFlag",
                "type": "boolean",
                "form": "relational"
            },
            "linkedTemplate": {
                "name": "linkedTemplate",
                "type": "SoftLayer_Configuration_Template",
                "form": "relational"
            },
            "linkedTemplateReference": {
                "name": "linkedTemplateReference",
                "type": "SoftLayer_Configuration_Template_Section_Reference",
                "form": "relational"
            },
            "profiles": {
                "name": "profiles",
                "type": "SoftLayer_Configuration_Template_Section_Profile",
                "form": "relational",
                "typeArray": true
            },
            "sectionType": {
                "name": "sectionType",
                "type": "SoftLayer_Configuration_Template_Section_Type",
                "form": "relational"
            },
            "sectionTypeName": {
                "name": "sectionTypeName",
                "type": "string",
                "form": "relational"
            },
            "subSections": {
                "name": "subSections",
                "type": "SoftLayer_Configuration_Template_Section",
                "form": "relational",
                "typeArray": true
            },
            "template": {
                "name": "template",
                "type": "SoftLayer_Configuration_Template",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Created date"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Configuration section description"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration section."
            },
            "linkedTemplateId": {
                "name": "linkedTemplateId",
                "type": "string",
                "form": "local",
                "doc": "Internal identifier of a sub configuration template that this section points to. Use this property if you wish to create a reference to a sub configuration template when creating a linked section. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Last modified date"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Configuration section name"
            },
            "parentId": {
                "name": "parentId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of the parent configuration section"
            },
            "sort": {
                "name": "sort",
                "type": "int",
                "form": "local",
                "doc": "Sort order"
            },
            "templateId": {
                "name": "templateId",
                "type": "string",
                "form": "local",
                "doc": "Internal identifier of a configuration template that this section belongs to"
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of the configuration section type"
            },
            "definitionCount": {
                "name": "definitionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "profileCount": {
                "name": "profileCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "subSectionCount": {
                "name": "subSectionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Attribute": {
        "name": "SoftLayer_Configuration_Template_Section_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Configuration section attribute class contains supplementary information for a configuration section. ",
        "properties": {
            "configurationSection": {
                "name": "configurationSection",
                "type": "SoftLayer_Configuration_Template_Section",
                "form": "relational"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "Value of a configuration section attribute"
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Definition": {
        "name": "SoftLayer_Configuration_Template_Section_Definition",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Configuration definition gives you details of the value that you're setting. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template_Section_Definition",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Configuration definition gives you details of the value that you're setting. \n\nIf value type is defined as \"Resource Specific Values\", you will have to make an additional API call to retrieve your system specific values. \n\n",
        "properties": {
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "defaultValue": {
                "name": "defaultValue",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Value",
                "form": "relational"
            },
            "group": {
                "name": "group",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Group",
                "form": "relational"
            },
            "monitoringDataFlag": {
                "name": "monitoringDataFlag",
                "type": "boolean",
                "form": "relational"
            },
            "section": {
                "name": "section",
                "type": "SoftLayer_Configuration_Template_Section",
                "form": "relational"
            },
            "valueType": {
                "name": "valueType",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Type",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Created date"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of a configuration definition."
            },
            "enumerationValues": {
                "name": "enumerationValues",
                "type": "string",
                "form": "local",
                "doc": "Enumeration values separated by comma."
            },
            "groupId": {
                "name": "groupId",
                "type": "string",
                "form": "local",
                "doc": "Definition group id."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration definition."
            },
            "maximumValue": {
                "name": "maximumValue",
                "type": "string",
                "form": "local",
                "doc": "Maximum value of a configuration definition."
            },
            "minimumValue": {
                "name": "minimumValue",
                "type": "string",
                "form": "local",
                "doc": "Minimum value of a configuration definition."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Last modify date"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Configuration definition name."
            },
            "path": {
                "name": "path",
                "type": "string",
                "form": "local",
                "doc": "Definition path."
            },
            "requireValueFlag": {
                "name": "requireValueFlag",
                "type": "int",
                "form": "local",
                "doc": "Indicates if a configuration value is required for this definition."
            },
            "sectionId": {
                "name": "sectionId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration section."
            },
            "shortName": {
                "name": "shortName",
                "type": "string",
                "form": "local",
                "doc": "Shortened configuration definition name."
            },
            "sort": {
                "name": "sort",
                "type": "int",
                "form": "local",
                "doc": "Sort order"
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration definition type."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Definition_Attribute": {
        "name": "SoftLayer_Configuration_Template_Section_Definition_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Configuration definition attribute class contains supplementary information for a configuration definition. ",
        "properties": {
            "attributeType": {
                "name": "attributeType",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Attribute_Type",
                "form": "relational"
            },
            "configurationDefinition": {
                "name": "configurationDefinition",
                "type": "SoftLayer_Configuration_Template_Section_Definition",
                "form": "relational"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "Value of a configuration definition attribute"
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Definition_Attribute_Type": {
        "name": "SoftLayer_Configuration_Template_Section_Definition_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Configuration_Template_Attribute_Type models the type of attribute that can be assigned to a configuration definition. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of a definition attribute type"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of a definition attribute type"
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Definition_Group": {
        "name": "SoftLayer_Configuration_Template_Section_Definition_Group",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Configuration definition groups help categorize definitions. ",
        "methods": {
            "getAllGroups": {
                "name": "getAllGroups",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Group",
                "typeArray": true,
                "doc": "Get all configuration definition group objects. \n\n''getAllGroups'' returns an array of SoftLayer_Configuration_Template_Section_Definition_Group objects upon success. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Group",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Configuration definition group gives you details of the definition and allows extra functionality. \n\n",
        "properties": {
            "parent": {
                "name": "parent",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Group",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Created date"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Internal Description of a definition group."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a definition group."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Internal Definition group name."
            },
            "sortOrder": {
                "name": "sortOrder",
                "type": "int",
                "form": "local",
                "doc": "Sort order"
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Definition_Type": {
        "name": "SoftLayer_Configuration_Template_Section_Definition_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Configuration_Template_Section_Definition_Type further defines the value of a configuration definition. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Configuration_Template_Section_Definition_Type further defines the value of a configuration definition. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of a configuration value type"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration value type"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of a configuration value type"
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Definition_Value": {
        "name": "SoftLayer_Configuration_Template_Section_Definition_Value",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Configuration_Section_Value is used to set the value for a configuration definition ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template_Section_Definition_Value",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Configuration_Section_Value is used to set the value for a configuration definition ",
        "properties": {
            "definition": {
                "name": "definition",
                "type": "SoftLayer_Configuration_Template_Section_Definition",
                "form": "relational"
            },
            "template": {
                "name": "template",
                "type": "SoftLayer_Configuration_Template",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Created date"
            },
            "definitionId": {
                "name": "definitionId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration definition that this configuration value if defined by"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Internal Last modified date"
            },
            "templateId": {
                "name": "templateId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration template that this configuration value belongs to"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "Internal Configuration value"
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Profile": {
        "name": "SoftLayer_Configuration_Template_Section_Profile",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Configuration_Template_Section_Profile help you keep track of custom configuration profiles. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template_Section_Profile",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Some configuration templates let you create a unique configuration profiles. \n\nFor example, you can create multiple configuration profiles to monitor multiple hard drives with \"CPU/Memory/Disk Monitoring Agent\". SoftLayer_Configuration_Template_Section_Profile help you keep track of custom configuration profiles. ",
        "properties": {
            "configurationSection": {
                "name": "configurationSection",
                "type": "SoftLayer_Configuration_Template_Section",
                "form": "relational"
            },
            "agentId": {
                "name": "agentId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a monitoring agent this profile belongs to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Created date"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration profile."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of a configuration profile"
            },
            "sectionId": {
                "name": "sectionId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration section that this profile belongs to."
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Reference": {
        "name": "SoftLayer_Configuration_Template_Section_Reference",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Configuration section reference allow you to reuse a configuration section from another configuration template. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template_Section_Reference",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Configuration_Template_Section_Reference data type contains information of a configuration section and its associated configuration template. ",
        "properties": {
            "section": {
                "name": "section",
                "type": "SoftLayer_Configuration_Template_Section",
                "form": "relational"
            },
            "template": {
                "name": "template",
                "type": "SoftLayer_Configuration_Template",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Created date"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration section reference."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Modified date"
            },
            "sectionId": {
                "name": "sectionId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration section."
            },
            "templateId": {
                "name": "templateId",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration template."
            }
        }
    },
    "SoftLayer_Configuration_Template_Section_Type": {
        "name": "SoftLayer_Configuration_Template_Section_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Configuration section type ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template_Section_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Configuration_Template_Section_Type data type contains information of a configuration section type. \n\nConfiguration can contain sub-sections. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Configuration section type description"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration section type"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Configuration section type name"
            }
        }
    },
    "SoftLayer_Configuration_Template_Type": {
        "name": "SoftLayer_Configuration_Template_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Configuration_Template_Type defines the types of configuration template. \n\nTemplate types can be custom, default and so on. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Configuration_Template_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Configuration_Template_Type data type contains configuration template type information. ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Created date. This is deprecated now."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of a configuration template"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a configuration template type"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of a configuration template type"
            }
        }
    },
    "SoftLayer_Container_Disk_Image_Capture_Template": {
        "name": "SoftLayer_Container_Disk_Image_Capture_Template",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "summary": {
                "name": "summary",
                "type": "string",
                "form": "local"
            },
            "volumes": {
                "name": "volumes",
                "type": "SoftLayer_Container_Disk_Image_Capture_Template_Volume",
                "form": "local",
                "typeArray": true
            }
        }
    },
    "SoftLayer_Container_Disk_Image_Capture_Template_Volume": {
        "name": "SoftLayer_Container_Disk_Image_Capture_Template_Volume",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "bootVolumeFlag": {
                "name": "bootVolumeFlag",
                "type": "boolean",
                "form": "local",
                "doc": "A customer provided flag to indicate that the current volume is the boot drive "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "partitions": {
                "name": "partitions",
                "type": "SoftLayer_Container_Disk_Image_Capture_Template_Volume_Partition",
                "form": "local",
                "typeArray": true
            },
            "storageGroupId": {
                "name": "storageGroupId",
                "type": "int",
                "form": "local",
                "doc": "The storage group to capture "
            }
        }
    },
    "SoftLayer_Container_Disk_Image_Capture_Template_Volume_Partition": {
        "name": "SoftLayer_Container_Disk_Image_Capture_Template_Volume_Partition",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader data type contains information for specific responses from the modify response header API. ",
        "properties": {
            "delimiter": {
                "name": "delimiter",
                "type": "string",
                "form": "local",
                "doc": "Specifies the delimiter to be used when indicating multiple values for a header. Valid delimiter is, a <space>, , (comma), ; (semicolon), ,<space> (comma and space), or ;<space> (semicolon and space). "
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of modify response header. "
            },
            "headers": {
                "name": "headers",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "A collection of key value pairs that specify the headers and associated values to be modified. The header name and header value must be separated by colon (:). Example: ['header1:value1','header2:Value2'] "
            },
            "modResHeaderUniqueId": {
                "name": "modResHeaderUniqueId",
                "type": "string",
                "form": "local",
                "doc": "The uniqueId of the modify response header to which the existing behavior belongs. "
            },
            "path": {
                "name": "path",
                "type": "string",
                "form": "local",
                "doc": "The path, relative to the domain that is accessed via modify response header. "
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of the modify response header, could be append/modify/delete. Set this to append to add a given header value to a header name set in the headerList. Set this to delete to remove a given header value from a header name set in the headerList. Set this to overwrite to match on a specified header name and replace its existing header value with a new one you specify. "
            },
            "uniqueId": {
                "name": "uniqueId",
                "type": "string",
                "form": "local",
                "doc": "The uniqueId of the mapping to which the existing behavior belongs. "
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_TokenAuth": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_TokenAuth",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_TokenAuth data type contains information for specific responses from the Token Authentication API. ",
        "properties": {
            "aclDelimiter": {
                "name": "aclDelimiter",
                "type": "string",
                "form": "local",
                "doc": "Specifies a single character to separate access control list (ACL) fields. The default value is '!'. "
            },
            "escapeTokenInputs": {
                "name": "escapeTokenInputs",
                "type": "string",
                "form": "local",
                "doc": "Possible values '0' and '1'. If set to '1', input values are escaped before adding them to the token. Default value is '1'. "
            },
            "hmacAlgorithm": {
                "name": "hmacAlgorithm",
                "type": "string",
                "form": "local",
                "doc": "Specifies the algorithm to use for the token's hash-based message authentication code (HMAC) field. Valid entries are 'SHA256', 'SHA1', or 'MD5'. The default value is 'SHA256'. "
            },
            "ignoreQueryString": {
                "name": "ignoreQueryString",
                "type": "string",
                "form": "local",
                "doc": "Possible values '0' and '1'. If set to '1', query strings are removed from a URL when computing the token's HMAC algorithm. Default value is '0'. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The token name. If this value is empty, then it is set to the default value '__token__'. "
            },
            "path": {
                "name": "path",
                "type": "string",
                "form": "local",
                "doc": "The path, relative to the domain that is accessed via token authentication. "
            },
            "tokenDelimiter": {
                "name": "tokenDelimiter",
                "type": "string",
                "form": "local",
                "doc": "Specifies a single character to separate the individual token fields. The default value is '~'. "
            },
            "tokenKey": {
                "name": "tokenKey",
                "type": "string",
                "form": "local",
                "doc": "The token encryption key, which specifies an even number of hex digits for the token key. An entry can be up to 64 characters in length. "
            },
            "transitionKey": {
                "name": "transitionKey",
                "type": "string",
                "form": "local",
                "doc": "The token transition key, which specifies an even number of hex digits for the token transition key. An entry can be up to 64 characters in length. "
            },
            "uniqueId": {
                "name": "uniqueId",
                "type": "string",
                "form": "local",
                "doc": "The uniqueId of the mapping to which the existing behavior belongs. "
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_Purge": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_Purge",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "date": {
                "name": "date",
                "type": "string",
                "form": "local"
            },
            "path": {
                "name": "path",
                "type": "string",
                "form": "local"
            },
            "saved": {
                "name": "saved",
                "type": "string",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroup": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroup",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroup data type contains information for specific responses from the Purge Group API. Each of the Purge Group APIs returns a collection of this type ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date in which record is created "
            },
            "groupUniqueId": {
                "name": "groupUniqueId",
                "type": "string",
                "form": "local",
                "doc": "A identifier that is unique to purge group. "
            },
            "lastPurgeDate": {
                "name": "lastPurgeDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The Unix timestamp of the last purge. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Purge Group name. The favorite group name must be unique, but non-favorite groups do not have this limitation "
            },
            "option": {
                "name": "option",
                "type": "int",
                "form": "local",
                "doc": "The following options are available to create a Purge Group: option 1: only purge the paths in the group, but don't save as favorite. option 2: only save the purge group as favorite, but don't purge paths. option 3: save the purge group as favorite and also purge paths. "
            },
            "pathCount": {
                "name": "pathCount",
                "type": "int",
                "form": "local",
                "doc": "Total number of purge paths. "
            },
            "paths": {
                "name": "paths",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "A collection of purge paths. "
            },
            "purgeStatus": {
                "name": "purgeStatus",
                "type": "string",
                "form": "local",
                "doc": "The purge's status when the input option field is 1 or 3. Status can be SUCCESS, FAILED, or IN_PROGRESS. "
            },
            "saved": {
                "name": "saved",
                "type": "string",
                "form": "local",
                "doc": "Type of the Purge Group, currently SAVED or UNSAVED. "
            },
            "uniqueId": {
                "name": "uniqueId",
                "type": "string",
                "form": "local",
                "doc": "A identifier that is unique to domain mapping. "
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroupHistory": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroupHistory",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroupHistory data type contains information for specific responses from the Purge Group API and Purge History API. ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date in which record is created "
            },
            "groupName": {
                "name": "groupName",
                "type": "string",
                "form": "local",
                "doc": "Purge Group name. The favorite group name must be unique, but un-favorite groups do not have this limitation "
            },
            "groupUniqueId": {
                "name": "groupUniqueId",
                "type": "string",
                "form": "local",
                "doc": "Purge group unique ID "
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "The purge's status. Status can be SUCCESS, FAILED, or IN_PROGRESS. "
            },
            "uniqueId": {
                "name": "uniqueId",
                "type": "string",
                "form": "local",
                "doc": "Domain mapping unique ID. "
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "bucketName": {
                "name": "bucketName",
                "type": "string",
                "form": "local"
            },
            "cacheKeyQueryRule": {
                "name": "cacheKeyQueryRule",
                "type": "string",
                "form": "local"
            },
            "certificateType": {
                "name": "certificateType",
                "type": "string",
                "form": "local"
            },
            "cname": {
                "name": "cname",
                "type": "string",
                "form": "local"
            },
            "domain": {
                "name": "domain",
                "type": "string",
                "form": "local"
            },
            "dynamicContentAcceleration": {
                "name": "dynamicContentAcceleration",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Performance_DynamicContentAcceleration",
                "form": "local"
            },
            "fileExtension": {
                "name": "fileExtension",
                "type": "string",
                "form": "local"
            },
            "geoblockingRule": {
                "name": "geoblockingRule",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking",
                "form": "local"
            },
            "header": {
                "name": "header",
                "type": "string",
                "form": "local"
            },
            "hotlinkProtection": {
                "name": "hotlinkProtection",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_HotlinkProtection",
                "form": "local"
            },
            "httpPort": {
                "name": "httpPort",
                "type": "int",
                "form": "local"
            },
            "httpsPort": {
                "name": "httpsPort",
                "type": "int",
                "form": "local"
            },
            "oldPath": {
                "name": "oldPath",
                "type": "string",
                "form": "local",
                "doc": "Used by the following method: updateOriginPath(). This property will store the path of the path record to be saved. The $path attribute stores the new path. "
            },
            "origin": {
                "name": "origin",
                "type": "string",
                "form": "local"
            },
            "originType": {
                "name": "originType",
                "type": "string",
                "form": "local"
            },
            "path": {
                "name": "path",
                "type": "string",
                "form": "local"
            },
            "performanceConfiguration": {
                "name": "performanceConfiguration",
                "type": "string",
                "form": "local"
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local"
            },
            "respectHeaders": {
                "name": "respectHeaders",
                "type": "string",
                "form": "local"
            },
            "serveStale": {
                "name": "serveStale",
                "type": "string",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            },
            "uniqueId": {
                "name": "uniqueId",
                "type": "string",
                "form": "local"
            },
            "vendorName": {
                "name": "vendorName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "akamaiCname": {
                "name": "akamaiCname",
                "type": "string",
                "form": "local"
            },
            "bucketName": {
                "name": "bucketName",
                "type": "string",
                "form": "local"
            },
            "cacheKeyQueryRule": {
                "name": "cacheKeyQueryRule",
                "type": "string",
                "form": "local"
            },
            "certificateType": {
                "name": "certificateType",
                "type": "string",
                "form": "local"
            },
            "cname": {
                "name": "cname",
                "type": "string",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "domain": {
                "name": "domain",
                "type": "string",
                "form": "local"
            },
            "dynamicContentAcceleration": {
                "name": "dynamicContentAcceleration",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Performance_DynamicContentAcceleration",
                "form": "local"
            },
            "fileExtension": {
                "name": "fileExtension",
                "type": "string",
                "form": "local"
            },
            "header": {
                "name": "header",
                "type": "string",
                "form": "local"
            },
            "httpPort": {
                "name": "httpPort",
                "type": "int",
                "form": "local"
            },
            "httpsChallengeRedirectUrl": {
                "name": "httpsChallengeRedirectUrl",
                "type": "string",
                "form": "local"
            },
            "httpsChallengeResponse": {
                "name": "httpsChallengeResponse",
                "type": "string",
                "form": "local"
            },
            "httpsChallengeUrl": {
                "name": "httpsChallengeUrl",
                "type": "string",
                "form": "local"
            },
            "httpsPort": {
                "name": "httpsPort",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "originHost": {
                "name": "originHost",
                "type": "string",
                "form": "local"
            },
            "originType": {
                "name": "originType",
                "type": "string",
                "form": "local"
            },
            "path": {
                "name": "path",
                "type": "string",
                "form": "local"
            },
            "performanceConfiguration": {
                "name": "performanceConfiguration",
                "type": "string",
                "form": "local"
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local"
            },
            "respectHeaders": {
                "name": "respectHeaders",
                "type": "boolean",
                "form": "local"
            },
            "serveStale": {
                "name": "serveStale",
                "type": "boolean",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            },
            "uniqueId": {
                "name": "uniqueId",
                "type": "string",
                "form": "local"
            },
            "vendorName": {
                "name": "vendorName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping_Path": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping_Path",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "bucketName": {
                "name": "bucketName",
                "type": "string",
                "form": "local"
            },
            "cacheKeyQueryRule": {
                "name": "cacheKeyQueryRule",
                "type": "string",
                "form": "local"
            },
            "dynamicContentAcceleration": {
                "name": "dynamicContentAcceleration",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Performance_DynamicContentAcceleration",
                "form": "local"
            },
            "fileExtension": {
                "name": "fileExtension",
                "type": "string",
                "form": "local"
            },
            "header": {
                "name": "header",
                "type": "string",
                "form": "local"
            },
            "httpPort": {
                "name": "httpPort",
                "type": "int",
                "form": "local"
            },
            "httpsPort": {
                "name": "httpsPort",
                "type": "int",
                "form": "local"
            },
            "mappingUniqueId": {
                "name": "mappingUniqueId",
                "type": "string",
                "form": "local"
            },
            "origin": {
                "name": "origin",
                "type": "string",
                "form": "local"
            },
            "originType": {
                "name": "originType",
                "type": "string",
                "form": "local"
            },
            "path": {
                "name": "path",
                "type": "string",
                "form": "local"
            },
            "performanceConfiguration": {
                "name": "performanceConfiguration",
                "type": "string",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Configuration_Performance_DynamicContentAcceleration": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Performance_DynamicContentAcceleration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "detectionPath": {
                "name": "detectionPath",
                "type": "string",
                "form": "local",
                "doc": "The detectionPath is used by CDN edge servers to find the best optimized route from edge to the origin server. The Akamai edge servers fetch the test object from the origin to know the network condition to your origin server, and then calculate the best optimized route with the network condition. The best path to origin must be known at the time a user\u2019s request arrives at an edge server, since any in-line analysis or probing would defeat the purpose of speeding things up. "
            },
            "mobileImageCompressionEnabled": {
                "name": "mobileImageCompressionEnabled",
                "type": "boolean",
                "form": "local",
                "doc": "Serving compressed images reduces the amount of content required to load a page. This feature helps offset less robust connections, such as those formed with mobile devices. Basically, if your site visitors have slow network speeds, MobileImageCompression technology can automatically increase compression of JPEG images to speed up loading. On the other hand, this feature results in lossy compression or irreversible compression, and may affect the quality of the images on your site. \n\nJPG supported file extensions: .jpg, .jpeg, .jpe, .jig, .jgig, .jgi The default is enabled. "
            },
            "prefetchEnabled": {
                "name": "prefetchEnabled",
                "type": "boolean",
                "form": "local",
                "doc": "Inspects HTML responses and prefetches embedded objects in HTML files. Prefetching works on any page that includes <img>, <script>, or <link> tags that specify relative paths. It also works when the resource hostname matches the request domain in the HTML file, and it is part of a fully qualified URI. When set to true, edge servers prefetch objects with the following file extensions: \n\naif, aiff, au, avi, bin, bmp, cab, carb, cct, cdf, class, css, doc, dcr, dtd, exe, flv, gcf, gff, gif, grv, hdml, hqx, ico, ini, jpeg, jpg, js, mov, mp3, nc, pct, pdf, png, ppc, pws, swa, swf, txt, vbs, w32, wav, wbmp, wml, wmlc, wmls, wmlsc, xsd, and zip. \n\nThe default is enabled. "
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Metrics": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "descriptions": {
                "name": "descriptions",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "names": {
                "name": "names",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "percentage": {
                "name": "percentage",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "time": {
                "name": "time",
                "type": "int",
                "form": "local",
                "typeArray": true
            },
            "totals": {
                "name": "totals",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local"
            },
            "xaxis": {
                "name": "xaxis",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis1": {
                "name": "yaxis1",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis10": {
                "name": "yaxis10",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis11": {
                "name": "yaxis11",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis12": {
                "name": "yaxis12",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis13": {
                "name": "yaxis13",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis14": {
                "name": "yaxis14",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis15": {
                "name": "yaxis15",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis16": {
                "name": "yaxis16",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis17": {
                "name": "yaxis17",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis18": {
                "name": "yaxis18",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis19": {
                "name": "yaxis19",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis2": {
                "name": "yaxis2",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis20": {
                "name": "yaxis20",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis3": {
                "name": "yaxis3",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis4": {
                "name": "yaxis4",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis5": {
                "name": "yaxis5",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis6": {
                "name": "yaxis6",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis7": {
                "name": "yaxis7",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis8": {
                "name": "yaxis8",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "yaxis9": {
                "name": "yaxis9",
                "type": "string",
                "form": "local",
                "typeArray": true
            }
        }
    },
    "SoftLayer_Container_Network_CdnMarketplace_Vendor": {
        "name": "SoftLayer_Container_Network_CdnMarketplace_Vendor",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "featureSummary": {
                "name": "featureSummary",
                "type": "string",
                "form": "local"
            },
            "features": {
                "name": "features",
                "type": "string",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            },
            "vendorName": {
                "name": "vendorName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_DataCenterLimits_VolumeCountLimitContainer": {
        "name": "SoftLayer_Container_Network_Storage_DataCenterLimits_VolumeCountLimitContainer",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "datacenterName": {
                "name": "datacenterName",
                "type": "string",
                "form": "local"
            },
            "maximumAvailableCount": {
                "name": "maximumAvailableCount",
                "type": "int",
                "form": "local"
            },
            "provisionedCount": {
                "name": "provisionedCount",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange": {
        "name": "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "account_id": {
                "name": "account_id",
                "type": "string",
                "form": "local"
            },
            "context": {
                "name": "context",
                "type": "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange_Context",
                "form": "local"
            },
            "event_id": {
                "name": "event_id",
                "type": "string",
                "form": "local"
            },
            "event_properties": {
                "name": "event_properties",
                "type": "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange_EventProperties",
                "form": "local"
            },
            "event_type": {
                "name": "event_type",
                "type": "string",
                "form": "local"
            },
            "publisher": {
                "name": "publisher",
                "type": "string",
                "form": "local"
            },
            "timestamp": {
                "name": "timestamp",
                "type": "string",
                "form": "local"
            },
            "version": {
                "name": "version",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange_Context": {
        "name": "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange_Context",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "previous_values": {
                "name": "previous_values",
                "type": "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange_EventProperties",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange_EventProperties": {
        "name": "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange_EventProperties",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "allowed_ip_addresses": {
                "name": "allowed_ip_addresses",
                "type": "string",
                "form": "local"
            },
            "altphonenumber": {
                "name": "altphonenumber",
                "type": "string",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local"
            },
            "firstname": {
                "name": "firstname",
                "type": "string",
                "form": "local"
            },
            "iam_id": {
                "name": "iam_id",
                "type": "string",
                "form": "local"
            },
            "language": {
                "name": "language",
                "type": "string",
                "form": "local"
            },
            "lastname": {
                "name": "lastname",
                "type": "string",
                "form": "local"
            },
            "notification_language": {
                "name": "notification_language",
                "type": "string",
                "form": "local"
            },
            "origin": {
                "name": "origin",
                "type": "string",
                "form": "local"
            },
            "phonenumber": {
                "name": "phonenumber",
                "type": "string",
                "form": "local"
            },
            "photo": {
                "name": "photo",
                "type": "string",
                "form": "local"
            },
            "realm": {
                "name": "realm",
                "type": "string",
                "form": "local"
            },
            "self_manage": {
                "name": "self_manage",
                "type": "boolean",
                "form": "local"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            },
            "substate": {
                "name": "substate",
                "type": "string",
                "form": "local"
            },
            "user_id": {
                "name": "user_id",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Dns_Domain": {
        "name": "SoftLayer_Dns_Domain",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer customers have the option of hosting DNS domains on the SoftLayer name servers. Individual domains hosted on the SoftLayer name servers are handled through the SoftLayer_Dns_Domain service. \n\nDomain changes are applied automatically by our nameservers, but changes may not be received by the other name servers on the Internet for 72 hours after your change. The SoftLayer_Dns_Domain service does not apply to customers who run their own nameservers on servers purchased from SoftLayer. \n\nSoftLayer provides secondary DNS hosting services if you wish to maintain DNS records on your name server, but have records replicated on SoftLayer's name servers. Use the [[SoftLayer_Dns_Secondary]] service to manage secondary DNS zones and transfers. ",
        "methods": {
            "createARecord": {
                "name": "createARecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_AType",
                "doc": "Create an A record on a SoftLayer domain. This is a shortcut method, meant to take the work out of creating a SoftLayer_Dns_Domain_ResourceRecord if you already have a domain record available. createARecord returns the newly created SoftLayer_Dns_Domain_ResourceRecord_AType. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "host",
                        "type": "string",
                        "doc": "The resource record's name"
                    },
                    {
                        "name": "data",
                        "type": "string",
                        "doc": "The resource record's value"
                    },
                    {
                        "name": "ttl",
                        "type": "int",
                        "doc": "The resource record's time-to-live value.",
                        "defaultValue": 86400
                    }
                ]
            },
            "createAaaaRecord": {
                "name": "createAaaaRecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_AaaaType",
                "doc": "Create an AAAA record on a SoftLayer domain. This is a shortcut method, meant to take the work out of creating a SoftLayer_Dns_Domain_ResourceRecord if you already have a domain record available. createARecord returns the newly created SoftLayer_Dns_Domain_ResourceRecord_AaaaType. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "host",
                        "type": "string",
                        "doc": "The resource record's name"
                    },
                    {
                        "name": "data",
                        "type": "string",
                        "doc": "The resource record's value"
                    },
                    {
                        "name": "ttl",
                        "type": "int",
                        "doc": "The resource record's time-to-live value.",
                        "defaultValue": 86400
                    }
                ]
            },
            "createCnameRecord": {
                "name": "createCnameRecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_CnameType",
                "doc": "Create a CNAME record on a SoftLayer domain. This is a shortcut method, meant to take the work out of creating a SoftLayer_Dns_Domain_ResourceRecord if you already have a domain record available. createCnameRecord returns the newly created SoftLayer_Dns_Domain_ResourceRecord_CnameType. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "host",
                        "type": "string",
                        "doc": "The resource record's name"
                    },
                    {
                        "name": "data",
                        "type": "string",
                        "doc": "The resource record's value"
                    },
                    {
                        "name": "ttl",
                        "type": "int",
                        "doc": "The resource record's time-to-live value.",
                        "defaultValue": 86400
                    }
                ]
            },
            "createMxRecord": {
                "name": "createMxRecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_MxType",
                "doc": "Create an MX record on a SoftLayer domain. This is a shortcut method, meant to take the work out of creating a SoftLayer_Dns_Domain_ResourceRecord if you already have a domain record available. MX records are created with a default priority of 10. createMxRecord returns the newly created SoftLayer_Dns_Domain_ResourceRecord_MxType. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "host",
                        "type": "string",
                        "doc": "The resource record's name"
                    },
                    {
                        "name": "data",
                        "type": "string",
                        "doc": "The resource record's value"
                    },
                    {
                        "name": "ttl",
                        "type": "int",
                        "doc": "The resource record's time-to-live value.",
                        "defaultValue": 86400
                    },
                    {
                        "name": "mxPriority",
                        "type": "int",
                        "doc": "The priority this MX record has for mail delivery. Lower priority MTAs are contacted first.",
                        "defaultValue": 10
                    }
                ]
            },
            "createNsRecord": {
                "name": "createNsRecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_NsType",
                "doc": "Create an NS record on a SoftLayer domain. This is a shortcut method, meant to take the work out of creating a SoftLayer_Dns_Domain_ResourceRecord if you already have a domain record available. createNsRecord returns the newly created SoftLayer_Dns_Domain_ResourceRecord_NsType. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "host",
                        "type": "string",
                        "doc": "The resource record's name"
                    },
                    {
                        "name": "data",
                        "type": "string",
                        "doc": "The resource record's value"
                    },
                    {
                        "name": "ttl",
                        "type": "int",
                        "doc": "The resource record's time-to-live value.",
                        "defaultValue": 86400
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Dns_Domain",
                "doc": "Create a new domain on the SoftLayer name servers. The SoftLayer_Dns_Domain object passed to this function must have at least one A or AAAA resource record. \n\ncreateObject creates a default SOA record with the data: \n* '''host''': \"@\"\n* '''data''': \"ns1.softlayer.com.\"\n* '''responsible person''': \"root.[your domain name].\"\n* '''expire''': 604800 seconds\n* '''refresh''': 3600 seconds\n* '''retry''': 300 seconds\n* '''minimum''': 3600 seconds\n\n\nIf your new domain uses the .de top-level domain then SOA refresh is set to 10000 seconds, retry is set to 1800 seconds, and minimum to 10000 seconds. \n\nIf your domain doesn't contain NS resource records for ns1.softlayer.com or ns2.softlayer.com then ''createObject'' will create them for you. \n\n''createObject'' returns a Boolean ''true'' on successful object creation or ''false'' if your domain was unable to be created.. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Dns_Domain",
                        "doc": "The SoftLayer_Dns_Domain object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Dns_Domain",
                "typeArray": true,
                "doc": "Create multiple domains on the SoftLayer name servers. Each domain record passed to ''createObjects'' follows the logic in the SoftLayer_Dns_Domain ''createObject'' method. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Dns_Domain objects that you wish to create."
                    }
                ]
            },
            "createPtrRecord": {
                "name": "createPtrRecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord",
                "doc": "setPtrRecordForIpAddress() sets a single reverse DNS record for a single IP address and returns the newly created or edited [[SoftLayer_Dns_Domain_ResourceRecord]] record. Currently this method only supports IPv4 addresses and performs no operation when given an IPv6 address. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The IP address whose PTR record you wish to set."
                    },
                    {
                        "name": "ptrRecord",
                        "type": "string",
                        "doc": "The PTR record you wish to set."
                    },
                    {
                        "name": "ttl",
                        "type": "int",
                        "doc": "The time-to-live value of the PTR record.",
                        "defaultValue": 86400
                    }
                ]
            },
            "createSpfRecord": {
                "name": "createSpfRecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_SpfType",
                "doc": "Create an SPF record on a SoftLayer domain. This is a shortcut method, meant to take the work out of creating a SoftLayer_Dns_Domain_ResourceRecord if you already have a domain record available. createARecord returns the newly created SoftLayer_Dns_Domain_ResourceRecord_SpfType. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "host",
                        "type": "string",
                        "doc": "The resource record's name"
                    },
                    {
                        "name": "data",
                        "type": "string",
                        "doc": "The resource record's value"
                    },
                    {
                        "name": "ttl",
                        "type": "int",
                        "doc": "The resource record's time-to-live value.",
                        "defaultValue": 86400
                    }
                ]
            },
            "createTxtRecord": {
                "name": "createTxtRecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_TxtType",
                "doc": "Create a TXT record on a SoftLayer domain. This is a shortcut method, meant to take the work out of creating a SoftLayer_Dns_Domain_ResourceRecord if you already have a domain record available. createARecord returns the newly created SoftLayer_Dns_Domain_ResourceRecord_TxtType. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "host",
                        "type": "string",
                        "doc": "The resource record's name"
                    },
                    {
                        "name": "data",
                        "type": "string",
                        "doc": "The resource record's value"
                    },
                    {
                        "name": "ttl",
                        "type": "int",
                        "doc": "The resource record's time-to-live value.",
                        "defaultValue": 86400
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "deleteObject permanently removes a domain and all of it's associated resource records from the softlayer name servers. '''This cannot be undone.''' Be wary of running this method. If you remove a domain in error you will need to re-create it by creating a new SoftLayer_Dns_Domain object. "
            },
            "getByDomainName": {
                "name": "getByDomainName",
                "type": "SoftLayer_Dns_Domain",
                "typeArray": true,
                "doc": "Search for [[SoftLayer_Dns_Domain]] records by domain name. getByDomainName() performs an inclusive search for domain records, returning multiple records based on partial name matches. Use this method to locate domain records if you don't have access to their id numbers. ",
                "static": true,
                "filterable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "doc": "The portion of the domain name you wish to search for."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Dns_Domain",
                "doc": "getObject retrieves the SoftLayer_Dns_Domain object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Dns_Domain service. You can only retrieve domains that are assigned to your SoftLayer account. ",
                "filterable": true,
                "maskable": true
            },
            "getZoneFileContents": {
                "name": "getZoneFileContents",
                "type": "string",
                "doc": "Return a SoftLayer hosted domain and resource records' data formatted as zone file. "
            }
        },
        "typeDoc": "The SoftLayer_Dns_Domain data type represents a single DNS domain record hosted on the SoftLayer nameservers. Domains contain general information about the domain name such as name and serial. Individual records such as A, AAAA, CTYPE, and MX records are stored in the domain's associated [[SoftLayer_Dns_Domain_ResourceRecord (type)|SoftLayer_Dns_Domain_ResourceRecord]] records. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account that owns a domain."
            },
            "managedResourceFlag": {
                "name": "managedResourceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that the dns domain record is a managed resource."
            },
            "resourceRecords": {
                "name": "resourceRecords",
                "type": "SoftLayer_Dns_Domain_ResourceRecord",
                "form": "relational",
                "typeArray": true,
                "doc": "The individual records contained within a domain record. These include but are not limited to A, AAAA, MX, CTYPE, SPF and TXT records."
            },
            "secondary": {
                "name": "secondary",
                "type": "SoftLayer_Dns_Secondary",
                "form": "relational",
                "doc": "The secondary DNS record that defines this domain as being managed through zone transfers."
            },
            "soaResourceRecord": {
                "name": "soaResourceRecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_SoaType",
                "form": "relational",
                "doc": "The start of authority (SOA) record contains authoritative and propagation details for a DNS zone. This property is not considered in requests to createObject and editObject."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A domain record's internal identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A domain's name including top-level domain, for example \"example.com\"."
            },
            "serial": {
                "name": "serial",
                "type": "int",
                "form": "local",
                "doc": "A unique number denoting the latest revision of a domain. Whenever a domain is changed its corresponding serial number is also changed. Serial numbers typically follow the format yyyymmdd## where yyyy is the current year, mm is the current month, dd is the current day of the month, and ## is the number of the revision for that day. A domain's serial number is automatically updated when edited via the API. "
            },
            "updateDate": {
                "name": "updateDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that this domain record was last updated."
            },
            "resourceRecordCount": {
                "name": "resourceRecordCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the individual records contained within a domain record. These include but are not limited to A, AAAA, MX, CTYPE, SPF and TXT records."
            }
        }
    },
    "SoftLayer_Dns_Domain_Forward": {
        "name": "SoftLayer_Dns_Domain_Forward",
        "base": "SoftLayer_Dns_Domain",
        "noservice": true,
        "typeDoc": "The SoftLayer_Dns_Domain_Forward data type represents a single DNS domain record hosted on the SoftLayer nameservers. Domains contain general information about the domain name such as name and serial. Individual records such as A, AAAA, CTYPE, and MX records are stored in the domain's associated [[SoftLayer_Dns_Domain_ResourceRecord (type)|SoftLayer_Dns_Domain_ResourceRecord]] records. "
    },
    "SoftLayer_Dns_Domain_Registration": {
        "name": "SoftLayer_Dns_Domain_Registration",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Registration and management of domain names and domain related services. ",
        "methods": {
            "addNameserversToDomain": {
                "name": "addNameserversToDomain",
                "type": "boolean",
                "doc": "The addNameserversToDomain method adds nameservers to a domain for a domain that already has nameservers assigned to it. This method does not create a nameserver; the nameserver must already exist. ",
                "parameters": [
                    {
                        "name": "nameservers",
                        "type": "string",
                        "typeArray": true,
                        "doc": "Array of fully qualified name of the nameservers"
                    }
                ]
            },
            "deleteRegisteredNameserver": {
                "name": "deleteRegisteredNameserver",
                "type": "boolean",
                "doc": "The deleteRegisteredNameserver method deletes a nameserver that was registered, provided it is not currently serving a domain ",
                "parameters": [
                    {
                        "name": "nameserver",
                        "type": "string",
                        "doc": "The fully qualified name of the nameserver"
                    }
                ]
            },
            "getAuthenticationCode": {
                "name": "getAuthenticationCode",
                "type": "string",
                "doc": "The getAuthenticationCode method retrieves the authentication code for the domain. "
            },
            "getDomainInformation": {
                "name": "getDomainInformation",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Information",
                "doc": "The getDomainInformation method retrieves all the information for a domain. "
            },
            "getDomainNameservers": {
                "name": "getDomainNameservers",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Nameserver",
                "typeArray": true,
                "doc": "The getDomainNameservers method retrieve nameservers information for domain. "
            },
            "getExtendedAttributes": {
                "name": "getExtendedAttributes",
                "type": "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute",
                "typeArray": true,
                "doc": "The getExtendedAttributes method determines if a country code top level domain requires extended attributes. ",
                "static": true,
                "parameters": [
                    {
                        "name": "domainName",
                        "type": "string",
                        "doc": "The domain name (i.e. example.us)."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Dns_Domain_Registration",
                "doc": "getObject retrieves the SoftLayer_Dns_Domain_Registration object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Dns_Domain_Registration service. ",
                "filterable": true,
                "maskable": true
            },
            "getRegisteredNameserver": {
                "name": "getRegisteredNameserver",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Nameserver",
                "doc": "The getRegisteredNameserver method retrieves registered nameservers. "
            },
            "getRegistrantVerificationStatusDetail": {
                "name": "getRegistrantVerificationStatusDetail",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Registrant_Verification_StatusDetail",
                "doc": "When a domain is registered or transferred, or when the registrant contact information is changed, the registrant must reply to an email requesting them to confirm that the submitted contact information is correct. This method returns the current state of the verification request. "
            },
            "getTransferInformation": {
                "name": "getTransferInformation",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Transfer_Information",
                "doc": "The getTransferInformation method checks to see if the domain can be transferred and also can be used to check the status of the last transfer request. ",
                "static": true,
                "parameters": [
                    {
                        "name": "domainName",
                        "type": "string",
                        "doc": "Domain Name"
                    }
                ]
            },
            "lockDomain": {
                "name": "lockDomain",
                "type": "boolean",
                "doc": "The lockDomain method locks a domain to prevent unauthorized, unwanted or accidental changes to the domain name. When set, the following actions are prohibited: \n* Transferring of the domain name\n* Deletion of the domain name"
            },
            "lookupDomain": {
                "name": "lookupDomain",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Lookup",
                "typeArray": true,
                "doc": "The lookupDomain method checks whether a specified domain name is available for registration in TLD's, and suggests other similar domain names, and checks whether they are available as well. ",
                "static": true,
                "parameters": [
                    {
                        "name": "domainName",
                        "type": "string",
                        "doc": "The domain name (i.e. example.com)."
                    }
                ]
            },
            "modifyContact": {
                "name": "modifyContact",
                "type": "boolean",
                "doc": "The modifyContact method modifies contact information (admin, billing, owner, technical) for a domain. ",
                "parameters": [
                    {
                        "name": "contact",
                        "type": "SoftLayer_Container_Dns_Domain_Registration_Contact",
                        "doc": "Contact information"
                    }
                ]
            },
            "modifyRegisteredNameserver": {
                "name": "modifyRegisteredNameserver",
                "type": "boolean",
                "doc": "The modifyRegisteredNameserver method modifies a nameserver that was registered. ",
                "parameters": [
                    {
                        "name": "oldNameserver",
                        "type": "string",
                        "doc": "The old, fully qualified domain name of the nameserver"
                    },
                    {
                        "name": "newNameserver",
                        "type": "string",
                        "doc": "The new, fully qualified domain name for the nameserver"
                    },
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The IP Address of the nameserver"
                    }
                ]
            },
            "registerNameserver": {
                "name": "registerNameserver",
                "type": "boolean",
                "doc": "The registerNameserver method creates a nameserver for the domain. ",
                "parameters": [
                    {
                        "name": "nameserver",
                        "type": "string",
                        "doc": "The fully qualified name of the nameserver"
                    },
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The IP Address of the nameserver"
                    }
                ]
            },
            "removeNameserversFromDomain": {
                "name": "removeNameserversFromDomain",
                "type": "boolean",
                "doc": "The removeNameserversFromDomain method removes nameservers from a domain for a domain that already has nameservers assigned to it. ",
                "parameters": [
                    {
                        "name": "nameservers",
                        "type": "string",
                        "typeArray": true,
                        "doc": "Array of fully qualified name of the nameservers"
                    }
                ]
            },
            "sendAuthenticationCode": {
                "name": "sendAuthenticationCode",
                "type": "boolean",
                "doc": "The sendAuthenticationCode method sends the authentication code to the administrative contact for the domain. "
            },
            "sendRegistrantVerificationEmail": {
                "name": "sendRegistrantVerificationEmail",
                "type": "boolean",
                "doc": "When a domain is registered or transferred, or when the registrant contact information is changed, the registrant must reply to an email requesting them to confirm that the submitted contact information is correct. This method sends the verification email to the registrant. "
            },
            "sendTransferApprovalEmail": {
                "name": "sendTransferApprovalEmail",
                "type": "boolean",
                "doc": "The sendTransferApprovalEmail method resends a transfer approval email message for a transfer that is in 'pending owner approval' state, to the admin contact listed for the domain at the time that the transfer request was submitted "
            },
            "setAuthenticationCode": {
                "name": "setAuthenticationCode",
                "type": "boolean",
                "doc": "The setAuthenticationCode method sets the authentication code for the domain. The authentication code is a transfer key and provides an extra level of security, safeguarding domain names from unauthorized transfers. ",
                "parameters": [
                    {
                        "name": "authenticationCode",
                        "type": "string",
                        "doc": "Authentication Code"
                    }
                ]
            },
            "unlockDomain": {
                "name": "unlockDomain",
                "type": "boolean",
                "doc": "The unlockDomain method unlocks a domain "
            }
        },
        "typeDoc": "The SoftLayer_Dns_Domain_Registration data type represents a domain registration record. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account that the domain is registered to."
            },
            "domainRegistrationStatus": {
                "name": "domainRegistrationStatus",
                "type": "SoftLayer_Dns_Domain_Registration_Status",
                "form": "relational",
                "doc": "The domain registration status."
            },
            "registrantVerificationStatus": {
                "name": "registrantVerificationStatus",
                "type": "SoftLayer_Dns_Domain_Registration_Registrant_Verification_Status",
                "form": "relational",
                "doc": "The registrant verification status."
            },
            "serviceProvider": {
                "name": "serviceProvider",
                "type": "SoftLayer_Service_Provider",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "domainRegistrationStatusId": {
                "name": "domainRegistrationStatusId",
                "type": "int",
                "form": "local"
            },
            "expireDate": {
                "name": "expireDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the domain registration will expire."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A domain record's internal identifier."
            },
            "lockedFlag": {
                "name": "lockedFlag",
                "type": "int",
                "form": "local",
                "doc": "Indicates whether a domain is locked or unlocked."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A domain's name, for example \"example.com\"."
            },
            "registrantVerificationStatusId": {
                "name": "registrantVerificationStatusId",
                "type": "int",
                "form": "local"
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Dns_Domain_Registration_Registrant_Verification_Status": {
        "name": "SoftLayer_Dns_Domain_Registration_Registrant_Verification_Status",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Dns_Domain_Registration_Registrant_Verification_Status",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Dns_Domain_Registration_Registrant_Verification_Status",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Dns_Domain_Registration_Registrant_Verification_Status models the state of the registrant. Here are the following status codes: \n\n\n*'''Admin Reviewing''': The registrant data has been submitted and being reviewed by compliance team.\n*'''Pending''': The verification process has been inititated, and verification email will be sent.\n*'''Suspended''': The registrant has failed verification and the domain has been suspended.\n*'''Verified''': The registrant has been validated.\n*'''Verifying''': The verification process has been initiated and is waiting for registrant response.\n*'''Unverified''': The verification process has not been inititated.\n\n",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the registrant verification status."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the registrant verification status"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The unique keyname of the registrant verification status."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the registrant verification status."
            }
        }
    },
    "SoftLayer_Dns_Domain_Registration_Status": {
        "name": "SoftLayer_Dns_Domain_Registration_Status",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Dns_Domain_Registration_Status",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Dns_Domain_Registration_Status",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Dns_Domain_Registration_Status models the state of domain name. Here are the following status codes: \n\n\n*'''Active''': This domain name is active.\n*'''Pending Owner Approval''': Pending owner approval for completion of transfer.\n*'''Pending Admin Review''': Pending admin review for transfer.\n*'''Pending Registry''': Pending registry for transfer.\n*'''Expired''': Domain name has expired.\n\n",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the domain registration status names."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the domain registration status"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The unique keyname of the domain registration status."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the domain registration status."
            }
        }
    },
    "SoftLayer_Dns_Domain_ResourceRecord": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every domain record hosted on the SoftLayer name servers is comprised of a series or resource records that control how the domain operates, translates host names, and translates service location. Each of those resource records is controlled by the SoftLayer_Dns_Domain_ResourceRecord service. SoftLayer domains have the following resource records: \n* A single SOA record\n* A records\n* AAAA records\n* Optional CNAME records\n* At least one MX record\n* NS records for ns1.softlayer.com and ns2.softlayer.com\n* Optional TXT records\n* Optional SPF records\n\n\nThe SoftLayer_Dns_Domain_ResourceRecords service also controls the records contained in reverse DNS records. SoftLayer_Dns_Domain_Reverse records contain multiple PTR type resource records. \n\nAs with domain changes, resource record changes happen immediately, but may take up to 72 hours to propagate to the rest of the Internet's name servers. The SoftLayer_Dns_Domain_ResourceRecord service only applies to domains hosted on the SoftLayer name servers. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Dns_Domain_ResourceRecord",
                "doc": "createObject creates a new domain resource record. The ''host'' property of the templateObject parameter is scrubbed to remove all non-alpha numeric characters except for \"@\", \"_\", \".\", \"*\", and \"-\". The ''data'' property of the templateObject parameter is scrubbed to remove all non-alphanumeric characters for \".\" and \"-\". Creating a resource record updates the serial number of the domain the resource record is associated with. \n\n''createObject'' returns Boolean ''true'' on successful create or ''false'' if it was unable to create a resource record. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord",
                        "doc": "The SoftLayer_Dns_Domain_ResourceRecord object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Dns_Domain_ResourceRecord",
                "typeArray": true,
                "doc": "Create multiple resource records on a domain. This follows the same logic as ''createObject'. The serial number of the domain associated with this resource record is updated upon creation. \n\n''createObjects'' returns Boolean ''true'' on successful creation or ''false'' if it was unable to create a resource record. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Dns_Domain_ResourceRecord objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a domain's resource record. '''This cannot be undone.''' Be wary of running this method. If you remove a resource record in error you will need to re-create it by creating a new SoftLayer_Dns_Domain_ResourceRecord object. The serial number of the domain associated with this resource record is updated upon deletion. You may not delete SOA, NS, or PTR resource records. \n\n''deleteObject'' returns Boolean ''true'' on successful deletion or ''false'' if it was unable to remove a resource record. "
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Remove multiple resource records from a domain. This follows the same logic as ''deleteObject'' and '''cannot be undone'''. The serial number of the domain associated with this resource record is updated upon deletion. You may not delete SOA records, PTR records, or NS resource records that point to ns1.softlayer.com or ns2.softlayer.com. \n\n''deleteObjects'' returns Boolean ''true'' on successful deletion or ''false'' if it was unable to remove a resource record. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Dns_Domain_ResourceRecord objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "editObject edits an existing domain resource record. The ''host'' property of the templateObject parameter is scrubbed to remove all non-alpha numeric characters except for \"@\", \"_\", \".\", \"*\", and \"-\". The ''data'' property of the templateObject parameter is scrubbed to remove all non-alphanumeric characters for \".\" and \"-\". Editing a resource record updates the serial number of the domain the resource record is associated with. \n\n''editObject'' returns Boolean ''true'' on a successful edit or ''false'' if it was unable to edit the resource record. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord",
                        "doc": "A skeleton SoftLayer_Dns_Domain_ResourceRecord object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "doc": "Edit multiple resource records on a domain. This follows the same logic as ''createObject'. The serial number of the domain associated with this resource record is updated upon creation. \n\n''createObjects'' returns Boolean ''true'' on successful creation or ''false'' if it was unable to create a resource record. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Dns_Domain_ResourceRecord objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Dns_Domain_ResourceRecord",
                "doc": "getObject retrieves the SoftLayer_Dns_Domain_ResourceRecord object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Dns_Domain_ResourceRecord service. You can only retrieve resource records belonging to domains that are assigned to your SoftLayer account. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Dns_Domain_ResourceRecord data type represents a single resource record entry in a SoftLayer hosted domain. Each resource record contains a ''host'' and ''data'' property, defining a resource's name and it's target data. Domains contain multiple types of resource records. The ''type'' property separates out resource records by type. ''Type'' can take one of the following values: \n* '''\"a\"''' for [[SoftLayer_Dns_Domain_ResourceRecord_AType|address]] records\n* '''\"aaaa\"''' for [[SoftLayer_Dns_Domain_ResourceRecord_AaaaType|address]] records\n* '''\"cname\"''' for [[SoftLayer_Dns_Domain_ResourceRecord_CnameType|canonical name]] records\n* '''\"mx\"''' for [[SoftLayer_Dns_Domain_ResourceRecord_MxType|mail exchanger]] records\n* '''\"ns\"''' for [[SoftLayer_Dns_Domain_ResourceRecord_NsType|name server]] records\n* '''\"ptr\"''' for [[SoftLayer_Dns_Domain_ResourceRecord_PtrType|pointer]] records in reverse domains\n* '''\"soa\"''' for a domain's [[SoftLayer_Dns_Domain_ResourceRecord_SoaType|start of authority]] record\n* '''\"spf\"''' for [[SoftLayer_Dns_Domain_ResourceRecord_SpfType|sender policy framework]] records\n* '''\"srv\"''' for [[SoftLayer_Dns_Domain_ResourceRecord_SrvType|service]] records\n* '''\"txt\"''' for [[SoftLayer_Dns_Domain_ResourceRecord_TxtType|text]] records\n\n\nAs ''SoftLayer_Dns_Domain_ResourceRecord'' objects are created and loaded, the API verifies the ''type'' property and casts the object as the appropriate type. ",
        "properties": {
            "domain": {
                "name": "domain",
                "type": "SoftLayer_Dns_Domain",
                "form": "relational",
                "doc": "The domain that a resource record belongs to."
            },
            "data": {
                "name": "data",
                "type": "string",
                "form": "local",
                "doc": "The value of a domain's resource record. This can be an IP address or a hostname. Fully qualified host and domain name data must end with the \".\" character. "
            },
            "domainId": {
                "name": "domainId",
                "type": "int",
                "form": "local",
                "doc": "An identifier belonging to the domain that a resource record is associated with."
            },
            "expire": {
                "name": "expire",
                "type": "int",
                "form": "local",
                "doc": "The amount of time in seconds that a secondary name server (or servers) will hold a zone before it is no longer considered authoritative. "
            },
            "host": {
                "name": "host",
                "type": "string",
                "form": "local",
                "doc": "The host defined by a resource record. A value of \"@\" denotes a wildcard."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A domain resource record's internal identifier."
            },
            "minimum": {
                "name": "minimum",
                "type": "int",
                "form": "local",
                "doc": "The amount of time in seconds that a domain's resource records are valid. This is also known as a minimum TTL, and can be overridden by an individual resource record's TTL. "
            },
            "mxPriority": {
                "name": "mxPriority",
                "type": "int",
                "form": "local",
                "doc": "Useful in cases where a domain has more than one mail exchanger, the priority property is the priority of the MTA that delivers mail for a domain. A lower number denotes a higher priority, and mail will attempt to deliver through that MTA before moving to lower priority mail servers. Priority is defaulted to 10 upon resource record creation. "
            },
            "refresh": {
                "name": "refresh",
                "type": "int",
                "form": "local",
                "doc": "The amount of time in seconds that a secondary name server should wait to check for a new copy of a DNS zone from the domain's primary name server. If a zone file has changed then the secondary DNS server will update it's copy of the zone to match the primary DNS server's zone. "
            },
            "responsiblePerson": {
                "name": "responsiblePerson",
                "type": "string",
                "form": "local",
                "doc": "The email address of the person responsible for a domain, with the \"@\" replaced with a \".\". For instance, if root@example.org is responsible for example.org, then example.org's SOA responsibility is \"root.example.org.\". "
            },
            "retry": {
                "name": "retry",
                "type": "int",
                "form": "local",
                "doc": "The amount of time in seconds that a domain's primary name server (or servers) should wait if an attempt to refresh by a secondary name server failed before attempting to refresh a domain's zone with that secondary name server again. "
            },
            "ttl": {
                "name": "ttl",
                "type": "int",
                "form": "local",
                "doc": "The Time To Live value of a resource record, measured in seconds. TTL is used by a name server to determine how long to cache a resource record. An SOA record's TTL value defines the domain's overall TTL. "
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "A domain resource record's type. A value of \"a\" denotes an A (address) record, \"aaaa\" denotes an AAAA (IPv6 address) record, \"cname\" denotes a CNAME (canonical name) record, \"mx\" denotes an MX (mail exchanger) record, \"ns\" denotes an NS (nameserver) record, \"ptr\" denotes a PTR (pointer/reverse) record, \"soa\" denotes the SOA (start of authority) record, \"spf\" denotes a SPF (sender policy framework) record, and \"txt\" denotes a TXT (text) record. A domain record's type also denotes which class in the SoftLayer API is a best match for extending a resource record. "
            }
        }
    },
    "SoftLayer_Dns_Domain_ResourceRecord_AType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_AType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord",
        "noservice": true,
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_AType is a SoftLayer_Dns_Domain_ResourceRecord object whose ''type'' property is set to \"a\" and defines a DNS A record on a SoftLayer hosted domain. An A record directs a host name to an IP address. For instance if the A record for \"host.example.org\" points to the IP address 10.0.0.1 then the ''host'' property for the A record equals \"host\" and the ''data'' property equals \"10.0.0.1\". "
    },
    "SoftLayer_Dns_Domain_ResourceRecord_AaaaType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_AaaaType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord",
        "noservice": true,
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_AaaaType is a SoftLayer_Dns_Domain_ResourceRecord object whose ''type'' property is set to \"aaaa\" and defines a DNS AAAA record on a SoftLayer hosted domain. An AAAA record directs a host name to an IPv6 address. For instance if the AAAA record for \"host.example.org\" points to the IPv6 address \"fe80:0:0:0:0:0:a00:0\" then the ''host'' property for the AAAA record equals \"host\" and the ''data'' property equals \"fe80:0:0:0:0:0:a00:0\". "
    },
    "SoftLayer_Dns_Domain_ResourceRecord_CnameType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_CnameType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord",
        "noservice": true,
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_CnameType is a SoftLayer_Dns_Domain_ResourceRecord object whose ''type'' property is set to \"cname\" and defines a DNS CNAME record on a SoftLayer hosted domain. A CNAME record directs a host name to another host. For instance, if the CNAME record for \"alias.example.org\" points to the host \"host.example.org\" then the ''host'' property equals \"alias\" and the ''data'' property equals \"host.example.org.\". \n\nDNS entries defined by CNAME should not be used as the data field for an MX record. "
    },
    "SoftLayer_Dns_Domain_ResourceRecord_MxType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_MxType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord",
        "serviceDoc": "The SoftLayer_Dns_Domain_ResourceRecord_MxType service controls the creation, modification, and deletion of MX records within a domain hosted on SoftLayer's DNS servers. It exists separately from the SoftLayer_Dns_Domain_ResourceRecord to provide control for MX priority in addition to host, data, and time-to-live. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_MxType",
                "doc": "createObject creates a new MX record. The ''host'' property of the templateObject parameter is scrubbed to remove all non-alpha numeric characters except for \"@\", \"_\", \".\", \"*\", and \"-\". The ''data'' property of the templateObject parameter is scrubbed to remove all non-alphanumeric characters for \".\" and \"-\". Creating an MX record updates the serial number of the domain the resource record is associated with. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord_MxType",
                        "doc": "The SoftLayer_Dns_Domain_ResourceRecord_MxType object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Dns_Domain_ResourceRecord",
                "typeArray": true,
                "doc": "Create multiple MX records on a domain. This follows the same logic as ''createObject'. The serial number of the domain associated with this MX record is updated upon creation. \n\n''createObjects'' returns Boolean ''true'' on successful creation or ''false'' if it was unable to create a resource record. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Dns_Domain_ResourceRecord objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a domain's MX record. '''This cannot be undone.''' Be wary of running this method. If you remove a resource record in error you will need to re-create it by creating a new SoftLayer_Dns_Domain_ResourceRecord_MxType object. The serial number of the domain associated with this MX record is updated upon deletion. \n\n''deleteObject'' returns Boolean ''true'' on successful deletion or ''false'' if it was unable to remove a resource record. "
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Remove multiple MX records from a domain. This follows the same logic as ''deleteObject'' and '''cannot be undone'''. The serial number of the domain associated with this MX record is updated upon deletion. \n\n''deleteObjects'' returns Boolean ''true'' on successful deletion or ''false'' if it was unable to remove a resource record. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord_MxType",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Dns_Domain_ResourceRecord_MxType objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "editObject edits an existing MX resource record. The ''host'' property of the templateObject parameter is scrubbed to remove all non-alpha numeric characters except for \"@\", \"_\", \".\", \"*\", and \"-\". The ''data'' property of the templateObject parameter is scrubbed to remove all non-alphanumeric characters for \".\" and \"-\". Editing an MX record updates the serial number of the domain the record is associated with. \n\n''editObject'' returns Boolean ''true'' on a successful edit or ''false'' if it was unable to edit the resource record. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord_MxType",
                        "doc": "A skeleton SoftLayer_Dns_Domain_ResourceRecord_MxType object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "doc": "Edit multiple MX records on a domain. This follows the same logic as ''createObject'. The serial number of the domain associated with this MX record is updated upon creation. \n\n''createObjects'' returns Boolean ''true'' on successful creation or ''false'' if it was unable to create a resource record. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord_MxType",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Dns_Domain_ResourceRecord_MxType objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_MxType",
                "doc": "getObject retrieves the SoftLayer_Dns_Domain_ResourceRecord_MxType object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Dns_Domain_ResourceRecord_MxType service. You can only retrieve resource records belonging to domains that are assigned to your SoftLayer account. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_MxType is a SoftLayer_Dns_Domain_ResourceRecord object whose ''type'' property is set to \"mx\" and used to describe MX resource records. MX records control which hosts are responsible as mail exchangers for a domain. For instance, in the domain example.org, an MX record whose host is \"@\" and data is \"mail\" says that the host \"mail.example.org\" is responsible for handling mail for example.org. That means mail sent to users @example.org are delivered to mail.example.org. \n\nDomains can have more than one MX record if it uses more than one server to send mail through. Multiple MX records are denoted by their priority, defined by the mxPriority property. \n\nMX records must be defined for hosts with accompanying A or AAAA resource records. They may not point mail towards a host defined by a CNAME record. "
    },
    "SoftLayer_Dns_Domain_ResourceRecord_NsType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_NsType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord",
        "noservice": true,
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_NsType is a SoftLayer_Dns_Domain_ResourceRecord object whose ''type'' property is set to \"ns\" and defines a DNS NS record on a SoftLayer hosted domain. An NS record defines the authoritative name server for a domain. All SoftLayer hosted domains contain NS records for \"ns1.softlayer.com\" and \"ns2.softlayer.com\" . For instance, if example.org is hosted on ns1.softlayer.com, then example.org contains an NS record whose ''host'' property equals \"@\" and whose ''data'' property equals \"ns1.example.org\". \n\nNS resource records pointing to ns1.softlayer.com or ns2.softlayer.com many not be removed from a SoftLayer hosted domain. "
    },
    "SoftLayer_Dns_Domain_ResourceRecord_PtrType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_PtrType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord",
        "noservice": true,
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_PtrType is a SoftLayer_Dns_Domain_ResourceRecord object whose ''type'' property is set to \"ptr\" and defines a reverse DNS PTR record on the SoftLayer name servers. \n\nThe format for a reverse DNS PTR record varies based on whether it is for an IPv4 or IPv6 address. \n\nFor an IPv4 address the ''host'' property for every PTR record is the last octet of the IP address that the PTR record belongs to, while the ''data'' property is the canonical name of the host that the reverse lookup resolves to. Every PTR record belongs to a domain on the SoftLayer name servers named by the first three octets of an IP address in reverse order followed by \".in-addr.arpa\". \n\nFor instance, if the reverse DNS record for 10.0.0.1 is \"host.example.org\" then it's corresponding SoftLayer_Dns_Domain_ResourceRecord_PtrType host is \"1\", while it's data property equals \"host.example.org\". The full name of the reverse record for host.example.org including the domain name is \"1.0.0.10.in-addr.arpa\". \n\nFor an IPv6 address the ''host'' property for every PTR record is the last four octets of the IP address that the PTR record belongs to.  The last four octets need to be in reversed order and each digit separated by a period.  The ''data'' property is the canonical name of the host that the reverse lookup resolves to.  Every PTR record belongs to a domain on the SoftLayer name servers named by the first four octets of an IP address in reverse order, split up by digit with a period, and followed by \".ip6.arpa\". \n\nFor instance, if the reverse DNS record for fe80:0000:0000:0000:0000:0000:0a00:0001 is \"host.example.org\" then it's corresponding SoftLayer_Dns_Domain_ResourceRecord_PtrType host is \"1.0.0.0.0.0.a.0.0.0.0.0.0.0.0.0\", while it's data property equals \"host.example.org\". The full name of the reverse record for host.example.org including the domain name is \"1.0.0.0.0.0.a.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\". \n\nPTR record host names may not be changed by [[SoftLayer_Dns_Domain_ResourceRecord::editObject]] or [[SoftLayer_Dns_Domain_ResourceRecord::editObjects]]. ",
        "properties": {
            "isGatewayAddress": {
                "name": "isGatewayAddress",
                "type": "boolean",
                "form": "local",
                "doc": "Whether the address associated with a PTR record is the gateway address of a subnet."
            }
        }
    },
    "SoftLayer_Dns_Domain_ResourceRecord_SoaType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_SoaType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord",
        "noservice": true,
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_SoaType defines a domains' Start of Authority (or SOA) resource record. A domain's SOA record contains a domain's general and propagation information. Every domain must have one SOA record, and it is not possible to remove a domain's SOA record. \n\nSOA records typically contain a domain's serial number, but the SoftLayer API associates a domain's serial number directly with it's SoftLayer_Dns_Domain record. "
    },
    "SoftLayer_Dns_Domain_ResourceRecord_SpfType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_SpfType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord_TxtType",
        "noservice": true,
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_SpfType is a SoftLayer_Dns_Domain_ResourceRecord object whose ''type'' property is set to \"spf\" and defines a DNS SPF record on a SoftLayer hosted domain. An SPF record provides sender policy framework data for a host. For instance, if defining the SPF record \"v=spf1 mx:mail.example.org ~all\" for \"host.example.org\". then the ''host'' property equals \"host\" and the ''data'' property equals \"v=spf1 mx:mail.example.org ~all\". \n\nSPF records are commonly used in email verification methods such as Sender Policy Framework. "
    },
    "SoftLayer_Dns_Domain_ResourceRecord_SrvType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_SrvType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord",
        "serviceDoc": "The SoftLayer_Dns_Domain_ResourceRecord_SrvType service controls the creation, modification, and deletion of SRV records within a domain hosted on SoftLayer's DNS servers. It exists separately from the SoftLayer_Dns_Domain_ResourceRecord to provide control for SRV priority, port, protocol, service, and weight in addition to host, data, and time-to-live. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_SrvType",
                "doc": "createObject creates a new SRV record. The ''host'' property of the templateObject parameter is scrubbed to remove all non-alpha numeric characters except for \"@\", \"_\", \".\", \"*\", and \"-\". The ''data'' property of the templateObject parameter is scrubbed to remove all non-alphanumeric characters for \".\" and \"-\". Creating an SRV record updates the serial number of the domain the resource record is associated with. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord_SrvType",
                        "doc": "The SoftLayer_Dns_Domain_ResourceRecord_SrvType object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Dns_Domain_ResourceRecord",
                "typeArray": true,
                "doc": "Create multiple SRV records on a domain. This follows the same logic as ''createObject'. The serial number of the domain associated with this SRV record is updated upon creation. \n\n''createObjects'' returns Boolean ''true'' on successful creation or ''false'' if it was unable to create a resource record. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Dns_Domain_ResourceRecord objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a domain's SRV record. '''This cannot be undone.''' Be wary of running this method. If you remove a resource record in error you will need to re-create it by creating a new SoftLayer_Dns_Domain_ResourceRecord_SrvType object. The serial number of the domain associated with this SRV record is updated upon deletion. \n\n''deleteObject'' returns Boolean ''true'' on successful deletion or ''false'' if it was unable to remove a resource record. "
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Remove multiple SRV records from a domain. This follows the same logic as ''deleteObject'' and '''cannot be undone'''. The serial number of the domain associated with this SRV record is updated upon deletion. \n\n''deleteObjects'' returns Boolean ''true'' on successful deletion or ''false'' if it was unable to remove a resource record. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord_SrvType",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Dns_Domain_ResourceRecord_SrvType objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "editObject edits an existing SRV resource record. The ''host'' property of the templateObject parameter is scrubbed to remove all non-alpha numeric characters except for \"@\", \"_\", \".\", \"*\", and \"-\". The ''data'' property of the templateObject parameter is scrubbed to remove all non-alphanumeric characters for \".\" and \"-\". Editing an SRV record updates the serial number of the domain the record is associated with. \n\n''editObject'' returns Boolean ''true'' on a successful edit or ''false'' if it was unable to edit the resource record. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord_SrvType",
                        "doc": "A skeleton SoftLayer_Dns_Domain_ResourceRecord_SrvType object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "doc": "Edit multiple SRV records on a domain. This follows the same logic as ''createObject'. The serial number of the domain associated with this SRV record is updated upon creation. \n\n''createObjects'' returns Boolean ''true'' on successful creation or ''false'' if it was unable to create a resource record. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Domain_ResourceRecord_SrvType",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Dns_Domain_ResourceRecord_SrvType objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Dns_Domain_ResourceRecord_SrvType",
                "doc": "getObject retrieves the SoftLayer_Dns_Domain_ResourceRecord_SrvType object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Dns_Domain_ResourceRecord_SrvType service. You can only retrieve resource records belonging to domains that are assigned to your SoftLayer account. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_SrvType is a SoftLayer_Dns_Domain_ResourceRecord object whose ''type'' property is set to \"srv\" and defines a DNS SRV record on a SoftLayer hosted domain. ",
        "properties": {
            "port": {
                "name": "port",
                "type": "int",
                "form": "local",
                "doc": "The TCP or UDP port on which the service is to be found."
            },
            "priority": {
                "name": "priority",
                "type": "int",
                "form": "local",
                "doc": "The priority of the target host, lower value means more preferred."
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "The protocol of the desired service; this is usually either TCP or UDP."
            },
            "service": {
                "name": "service",
                "type": "string",
                "form": "local",
                "doc": "The symbolic name of the desired service"
            },
            "weight": {
                "name": "weight",
                "type": "int",
                "form": "local",
                "doc": "A relative weight for records with the same priority."
            }
        }
    },
    "SoftLayer_Dns_Domain_ResourceRecord_TxtType": {
        "name": "SoftLayer_Dns_Domain_ResourceRecord_TxtType",
        "base": "SoftLayer_Dns_Domain_ResourceRecord",
        "noservice": true,
        "typeDoc": "SoftLayer_Dns_Domain_ResourceRecord_TxtType is a SoftLayer_Dns_Domain_ResourceRecord object whose ''type'' property is set to \"txt\" and defines a DNS TXT record on a SoftLayer hosted domain. A TXT record provides a text description for a host. For instance, if defining the TXT record \"My test host\" for \"host.example.org\". then the ''host'' property equals \"host\" and the ''data'' property equals \"My test host\". \n\nTXT records are commonly used in email verification methods such as Sender Policy Framework. "
    },
    "SoftLayer_Dns_Domain_Reverse": {
        "name": "SoftLayer_Dns_Domain_Reverse",
        "base": "SoftLayer_Dns_Domain",
        "noservice": true,
        "typeDoc": "The SoftLayer_Dns_Domain_Reverse data type represents a reverse IP address record. ",
        "properties": {
            "networkAddress": {
                "name": "networkAddress",
                "type": "string",
                "form": "local",
                "doc": "Network address the domain is associated with."
            }
        }
    },
    "SoftLayer_Dns_Domain_Reverse_Version4": {
        "name": "SoftLayer_Dns_Domain_Reverse_Version4",
        "base": "SoftLayer_Dns_Domain_Reverse",
        "noservice": true,
        "typeDoc": "The SoftLayer_Dns_Domain_Reverse_Version4 data type represents a reverse IPv4 address record. "
    },
    "SoftLayer_Dns_Domain_Reverse_Version6": {
        "name": "SoftLayer_Dns_Domain_Reverse_Version6",
        "base": "SoftLayer_Dns_Domain_Reverse",
        "noservice": true,
        "typeDoc": "The SoftLayer_Dns_Domain_Reverse_Version6 data type represents a reverse IPv6 address record. "
    },
    "SoftLayer_Dns_Message": {
        "name": "SoftLayer_Dns_Message",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Dns_Message data type contains information for a single message generated by the SoftLayer DNS system. SoftLayer_Dns_Messages are typically created during the secondary DNS transfer process. ",
        "properties": {
            "domain": {
                "name": "domain",
                "type": "SoftLayer_Dns_Domain",
                "form": "relational",
                "doc": "The domain that is associated with a message."
            },
            "resourceRecord": {
                "name": "resourceRecord",
                "type": "SoftLayer_Dns_Domain_ResourceRecord",
                "form": "relational",
                "doc": "The resource record that is associated with a message."
            },
            "secondary": {
                "name": "secondary",
                "type": "SoftLayer_Dns_Secondary",
                "form": "relational",
                "doc": "The secondary DNS record that a message belongs to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the message was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier for a DNS message."
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "The message text."
            },
            "priority": {
                "name": "priority",
                "type": "string",
                "form": "local",
                "doc": "The priority level for a DNS message.  The possible levels are 'notice' and 'error'."
            }
        }
    },
    "SoftLayer_Dns_Secondary": {
        "name": "SoftLayer_Dns_Secondary",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's secondary DNS service allows you to use SoftLayer's name servers as a secondary server to your domain's name servers. This is accomplished through the use of zone transfers. Each record created within the secondary DNS service defines which zone is transferred, what server it is transferred from, and the frequency that zone transfers occur at. Zone transfers are performed automatically based on the transfer frequency set on the secondary DNS record. Domains created via zone transfer may not be modified by the SoftLayer portal or API. \n\nThe secondary DNS service also provides the ability to manually initiate a zone transfer through the [[SoftLayer_Dns_Secondary::transferNow]] method. The daemon that performs zone transfers runs once a minute, therefore it could take a full minute for the zone transfer to be completed. \n\nSecondary DNS transfers may periodically generate notification or error messages. Please use the [[SoftLayer_Dns_Message]] service to retrieve these notifications. ",
        "methods": {
            "convertToPrimary": {
                "name": "convertToPrimary",
                "type": "boolean",
                "doc": "A secondary DNS record may be converted to a primary DNS record. By converting a secondary DNS record, the SoftLayer name servers will be the authoritative nameserver for this domain and will be directly editable in the SoftLayer API and Portal. \n\nPrimary DNS record conversion performs the following steps: \n* The SOA record is updated with SoftLayer's primary name server.\n* All NS records are removed and replaced with SoftLayer's NS records.\n* The secondary DNS record is removed.\n\n\nAfter the DNS records are converted, the following restrictions will apply to the new domain record: \n* You will need to manage the zone record using the [[SoftLayer_Dns_Domain]] service.\n* You may not edit the SOA or NS records.\n* You may only edit the following resource records: A, AAAA, CNAME, MX, TX, SRV.\n\n\nThis change can not be undone, and the record can not be converted back into a secondary DNS record once the conversion is complete. "
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Dns_Secondary",
                "doc": "Create a secondary DNS record. The ''zoneName'', ''masterIpAddress'', and ''transferFrequency'' properties in the templateObject parameter are required parameters to create a secondary DNS record. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Dns_Secondary",
                        "doc": "The SoftLayer_Dns_Secondary object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Dns_Secondary",
                "typeArray": true,
                "doc": "Create multiple secondary DNS records. Each record passed to ''createObjects'' follows the logic in the SoftLayer_Dns_Secondary [[SoftLayer_Dns_Secondary::createObject|createObject]] method. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Dns_Secondary",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Dns_Secondary objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a secondary DNS Record. This will also remove any associated domain records and resource records on the SoftLayer nameservers that were created as a result of the zone transfers. This action cannot be undone. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the properties of a secondary DNS record by passing in a modified instance of a SoftLayer_Dns_Secondary object. You may only edit the ''masterIpAddress'' and ''transferFrequency'' properties of your secondary DNS record. ''ZoneName'' may not be altered after a secondary DNS record has been created.  Please remove and re-create the record if you need to make changes to your zone name. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Dns_Secondary",
                        "doc": "A skeleton SoftLayer_Dns_Secondary object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getByDomainName": {
                "name": "getByDomainName",
                "type": "SoftLayer_Dns_Secondary",
                "typeArray": true,
                "doc": "Search for [[SoftLayer_Dns_Secondary]] records by domain name. getByDomainName() performs an inclusive search for secondary domain records, returning multiple records based on partial name matches. Use this method to locate secondary domain records if you don't have access to their id numbers. ",
                "static": true,
                "filterable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "doc": "The portion of the domain name you wish to search for."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Dns_Secondary",
                "doc": "getObject retrieves the SoftLayer_Dns_Secondary object whose ID number corresponds to the ID number of the init paramater passed to the SoftLayer_Dns_Secondary service. You can only retrieve a secondary DNS record that is assigned to your SoftLayer customer account. ",
                "filterable": true,
                "maskable": true
            },
            "transferNow": {
                "name": "transferNow",
                "type": "boolean",
                "doc": "Force a secondary DNS zone transfer by setting it's status \"Transfer Now\".  A zone transfer will be initiated within a minute of receiving this API call. "
            }
        },
        "typeDoc": "The SoftLayer_Dns_Secondary data type contains information on a single secondary DNS zone which is managed through SoftLayer's zone transfer service. Domains created via zone transfer may not be modified by the SoftLayer portal or API. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer account that owns a secondary DNS record."
            },
            "domain": {
                "name": "domain",
                "type": "SoftLayer_Dns_Domain",
                "form": "relational",
                "doc": "The domain record created by zone transfer from a secondary DNS record."
            },
            "errorMessages": {
                "name": "errorMessages",
                "type": "SoftLayer_Dns_Message",
                "form": "relational",
                "typeArray": true,
                "doc": "The error messages created during secondary DNS record transfer."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Dns_Status",
                "form": "relational",
                "doc": "The current status of the secondary DNS zone."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a secondary DNS record was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier for a secondary DNS record."
            },
            "lastUpdate": {
                "name": "lastUpdate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date when the most recent secondary DNS zone transfer took place."
            },
            "masterIpAddress": {
                "name": "masterIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address of the master name server where a secondary DNS zone is transferred from."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The current status of a secondary DNS record.  The status may be one of the following: \n:*'''0''': Disabled\n:*'''1''': Active\n:*'''2''': Transfer Now\n:*'''3''': An error occurred that prevented the zone transfer from being completed."
            },
            "statusText": {
                "name": "statusText",
                "type": "string",
                "form": "local",
                "doc": "The textual representation of a secondary DNS zone's status."
            },
            "transferFrequency": {
                "name": "transferFrequency",
                "type": "int",
                "form": "local",
                "doc": "How often a secondary DNS zone should be transferred in minutes."
            },
            "zoneName": {
                "name": "zoneName",
                "type": "string",
                "form": "local",
                "doc": "The name of the zone that is transferred."
            },
            "errorMessageCount": {
                "name": "errorMessageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the error messages created during secondary DNS record transfer."
            }
        }
    },
    "SoftLayer_Dns_Status": {
        "name": "SoftLayer_Dns_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Dns_Status data type contains information for a DNS status ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a DNS status"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Monitoring DNS status name"
            }
        }
    },
    "SoftLayer_Email_Subscription": {
        "name": "SoftLayer_Email_Subscription",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer customers can use this service to manage or view all of the available email subscriptions that they can suppress. ",
        "methods": {
            "disable": {
                "name": "disable",
                "type": "boolean"
            },
            "enable": {
                "name": "enable",
                "type": "boolean"
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Email_Subscription",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Email_Subscription",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "enabled": {
                "name": "enabled",
                "type": "boolean",
                "form": "relational"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Brief description of the purpose of the email."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Email template name."
            }
        }
    },
    "SoftLayer_Email_Subscription_Group": {
        "name": "SoftLayer_Email_Subscription_Group",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer customers can use this service to view the parent groups of the email subscriptions ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Email_Subscription_Group",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Email_Subscription_Group",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "subscriptions": {
                "name": "subscriptions",
                "type": "SoftLayer_Email_Subscription",
                "form": "relational",
                "typeArray": true,
                "doc": "All email subscriptions associated with this group."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Email subscription group name."
            },
            "subscriptionCount": {
                "name": "subscriptionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all email subscriptions associated with this group."
            }
        }
    },
    "SoftLayer_Email_Subscription_Suppression_User": {
        "name": "SoftLayer_Email_Subscription_Suppression_User",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "subscription": {
                "name": "subscription",
                "type": "SoftLayer_Email_Subscription",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Event_Log": {
        "name": "SoftLayer_Event_Log",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Event Log service lets you find interesting events related to various SoftLayer products and services such as hardware, virtual server or DNS. ",
        "methods": {
            "getAllEventNames": {
                "name": "getAllEventNames",
                "type": "string",
                "typeArray": true,
                "doc": "This all indexed event names. ",
                "static": true,
                "parameters": [
                    {
                        "name": "objectName",
                        "type": "string",
                        "doc": "Object name."
                    }
                ]
            },
            "getAllEventObjectNames": {
                "name": "getAllEventObjectNames",
                "type": "string",
                "typeArray": true,
                "doc": "This all indexed event object names. ",
                "static": true
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Event_Log",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getAllUserTypes": {
                "name": "getAllUserTypes",
                "type": "string",
                "typeArray": true,
                "static": true
            }
        },
        "typeDoc": "The SoftLayer_Event_Log data type contains an event detail occurred upon various SoftLayer resources. ",
        "properties": {
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "Account id with which the event is associated "
            },
            "eventCreateDate": {
                "name": "eventCreateDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Event creation date in millisecond precision "
            },
            "eventName": {
                "name": "eventName",
                "type": "string",
                "form": "local",
                "doc": "Event name such as \"reboot\", \"cancel\", \"update host\" and so on. "
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local",
                "doc": "The remote IP Address that made the request "
            },
            "label": {
                "name": "label",
                "type": "string",
                "form": "local",
                "doc": "Label or description of the event object "
            },
            "metaData": {
                "name": "metaData",
                "type": "json",
                "form": "local",
                "doc": "Meta data for an event in JSON string "
            },
            "objectId": {
                "name": "objectId",
                "type": "int",
                "form": "local",
                "doc": "Event object id "
            },
            "objectName": {
                "name": "objectName",
                "type": "string",
                "form": "local",
                "doc": "Event object name such as \"server\", \"dns\" and so on. "
            },
            "openIdConnectUserName": {
                "name": "openIdConnectUserName",
                "type": "string",
                "form": "local",
                "doc": "OpenIdConnectUserName of the customer who initiated the event "
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Entity",
                "form": "local",
                "doc": "A resource object that is associated with the event"
            },
            "traceId": {
                "name": "traceId",
                "type": "string",
                "form": "local",
                "doc": "A unique trace id. Multiple event can be grouped by a trace id. "
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "Id of customer who initiated the event "
            },
            "userType": {
                "name": "userType",
                "type": "string",
                "form": "local",
                "doc": "Type of user that triggered the event. User type can be CUSTOMER, EMPLOYEE or SYSTEM. "
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "Customer username who initiated the event "
            }
        }
    },
    "SoftLayer_FlexibleCredit_Affiliate": {
        "name": "SoftLayer_FlexibleCredit_Affiliate",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "flexibleCreditProgram": {
                "name": "flexibleCreditProgram",
                "type": "SoftLayer_FlexibleCredit_Program",
                "form": "relational",
                "doc": "Flexible Credit Program the affiliate belongs to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Primary ID for the affiliate"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of this affiliate"
            }
        }
    },
    "SoftLayer_FlexibleCredit_Company_Type": {
        "name": "SoftLayer_FlexibleCredit_Company_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of the company type"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Primary ID for the company type"
            }
        }
    },
    "SoftLayer_FlexibleCredit_Enrollment": {
        "name": "SoftLayer_FlexibleCredit_Enrollment",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "Account the enrollment belongs to"
            },
            "affiliate": {
                "name": "affiliate",
                "type": "SoftLayer_FlexibleCredit_Affiliate",
                "form": "relational",
                "doc": "Affiliate associated with the account enrollment"
            },
            "companyType": {
                "name": "companyType",
                "type": "SoftLayer_FlexibleCredit_Company_Type",
                "form": "relational",
                "doc": "Category which best describes the company"
            },
            "flexibleCreditProgram": {
                "name": "flexibleCreditProgram",
                "type": "SoftLayer_FlexibleCredit_Program",
                "form": "relational",
                "doc": "Discount program the enrollment belongs to"
            },
            "isActiveFlag": {
                "name": "isActiveFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Flag indicating whether an enrollment is active (true) or inactive (false)"
            },
            "representative": {
                "name": "representative",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "Employee overseeing the enrollment"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "Account ID associated with this enrollment"
            },
            "affiliateId": {
                "name": "affiliateId",
                "type": "int",
                "form": "local",
                "doc": "ID of the corresponding Flexible Credit Program Affiliate"
            },
            "agreementCompleteFlag": {
                "name": "agreementCompleteFlag",
                "type": "int",
                "form": "local",
                "doc": "Indicates signing of Flexible Credit agreement (independent from MSA)"
            },
            "companyDescription": {
                "name": "companyDescription",
                "type": "string",
                "form": "local",
                "doc": "Brief description of the company"
            },
            "companyTypeId": {
                "name": "companyTypeId",
                "type": "int",
                "form": "local",
                "doc": "ID of the Flexible Credit Program Company classification for this enrollment"
            },
            "enrollmentDate": {
                "name": "enrollmentDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date when participation in the Flexible Credit program began"
            },
            "graduationDate": {
                "name": "graduationDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date Flexible Credit Program benefits end."
            },
            "monthlyCreditAmount": {
                "name": "monthlyCreditAmount",
                "type": "decimal",
                "form": "local",
                "doc": "Amount of monthly credit (USD) given to the account"
            },
            "representativeEmployeeId": {
                "name": "representativeEmployeeId",
                "type": "int",
                "form": "local",
                "doc": "ID of the employee representing this account."
            }
        }
    },
    "SoftLayer_FlexibleCredit_Program": {
        "name": "SoftLayer_FlexibleCredit_Program",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAffiliatesAvailableForSelfEnrollmentByVerificationType": {
                "name": "getAffiliatesAvailableForSelfEnrollmentByVerificationType",
                "type": "SoftLayer_FlexibleCredit_Affiliate",
                "typeArray": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "verificationTypeKeyName",
                        "type": "string",
                        "doc": "keyName of the verification type whose affiliates should be returned.",
                        "defaultValue": null
                    }
                ]
            },
            "getCompanyTypes": {
                "name": "getCompanyTypes",
                "type": "SoftLayer_FlexibleCredit_Company_Type",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_FlexibleCredit_Program",
                "filterable": true,
                "maskable": true
            },
            "selfEnrollNewAccount": {
                "name": "selfEnrollNewAccount",
                "type": "SoftLayer_Account",
                "maskable": true,
                "parameters": [
                    {
                        "name": "accountTemplate",
                        "type": "SoftLayer_Account",
                        "doc": "Contains new account, billing, and enrollment information"
                    }
                ]
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Primary ID of the Flexible Credit Program"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Unique name for the Flexible Credit Program"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of the Flexible Credit Program."
            }
        }
    },
    "SoftLayer_Hardware": {
        "name": "SoftLayer_Hardware",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every SoftLayer hardware is defined in the SoftLayer_Hardware service. SoftLayer hardware has network components, software, monitoring services such as network monitoring, and hardware components such as hard drives. The SoftLayer_Hardware service is a convenient way to obtain general information about your SoftLayer hardware. Use the data returned by these methods with other API services to get more detailed information about your services and to make changes to your servers and services. ",
        "methods": {
            "allowAccessToNetworkStorage": {
                "name": "allowAccessToNetworkStorage",
                "type": "boolean",
                "doc": "This method is used to allow access to a SoftLayer_Network_Storage volume that supports host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObject",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            },
            "allowAccessToNetworkStorageList": {
                "name": "allowAccessToNetworkStorageList",
                "type": "boolean",
                "doc": "This method is used to allow access to multiple SoftLayer_Network_Storage volumes that support host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObjects",
                        "type": "SoftLayer_Network_Storage",
                        "typeArray": true
                    }
                ]
            },
            "captureImage": {
                "name": "captureImage",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "doc": "Captures an Image of the hard disk on the physical machine, based on the capture template parameter. Returns the image template group containing the disk image. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "captureTemplate",
                        "type": "SoftLayer_Container_Disk_Image_Capture_Template"
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Hardware",
                "doc": "\n<style type=\"text/css\">.create_object > li > div { padding-top: .5em; padding-bottom: .5em}</style> \ncreateObject() enables the creation of servers on an account. This \nmethod is a simplified alternative to interacting with the ordering system directly. \n\n\nIn order to create a server, a template object must be sent in with a few required \nvalues. \n\n\nWhen this method returns an order will have been placed for a server of the specified configuration. \n\n\nTo determine when the server is available you can poll the server via [[SoftLayer_Hardware/getObject|getObject]], \nchecking the <code>provisionDate</code> property. \nWhen <code>provisionDate</code> is not null, the server will be ready. Be sure to use the <code>globalIdentifier</code> \nas your initialization parameter. \n\n\n<b>Warning:</b> Servers created via this method will incur charges on your account. For testing input parameters see [[SoftLayer_Hardware/generateOrderTemplate|generateOrderTemplate]]. \n\n\n<b>Input</b> - [[SoftLayer_Hardware (type)|SoftLayer_Hardware]] \n<ul class=\"create_object\"> \n    <li><code>hostname</code> \n        <div>Hostname for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>domain</code> \n        <div>Domain for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>processorCoreAmount</code> \n        <div>The number of logical CPU cores to allocate.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - int</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>memoryCapacity</code> \n        <div>The amount of memory to allocate in gigabytes.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - int</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>hourlyBillingFlag</code> \n        <div>Specifies the billing type for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - boolean</li> \n            <li>When true the server will be billed on hourly usage, otherwise it will be billed on a monthly basis.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>operatingSystemReferenceCode</code> \n        <div>An identifier for the operating system to provision the server with.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>datacenter.name</code> \n        <div>Specifies which datacenter the server is to be provisioned in.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n            <li>The <code>datacenter</code> property is a [[SoftLayer_Location (type)|location]] structure with the <code>name</code> field set.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"datacenter\": { \n        \"name\": \"dal05\" \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>networkComponents.maxSpeed</code> \n        <div>Specifies the connection speed for the server's network components.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Default</b> - The highest available zero cost port speed will be used.</li> \n            <li><b>Description</b> - The <code>networkComponents</code> property is an array with a single [[SoftLayer_Network_Component (type)|network component]] structure. The <code>maxSpeed</code> property must be set to specify the network uplink speed, in megabits per second, of the server.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n            <http title=\"Example\">{ \n    \"networkComponents\": [ \n        { \n            \"maxSpeed\": 1000 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>networkComponents.redundancyEnabledFlag</code> \n        <div>Specifies whether or not the server's network components should be in redundancy groups.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - bool</li> \n            <li><b>Default</b> - <code>false</code></li> \n            <li><b>Description</b> - The <code>networkComponents</code> property is an array with a single [[SoftLayer_Network_Component (type)|network component]] structure. When the <code>redundancyEnabledFlag</code> property is true the server's network components will be in redundancy groups.</li> \n        </ul> \n            <http title=\"Example\">{ \n    \"networkComponents\": [ \n        { \n            \"redundancyEnabledFlag\": false \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>privateNetworkOnlyFlag</code> \n        <div>Specifies whether or not the server only has access to the private network</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - boolean</li> \n            <li><b>Default</b> - <code>false</code></li> \n            <li>When true this flag specifies that a server is to only have access to the private network.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>primaryNetworkComponent.networkVlan.id</code> \n        <div>Specifies the network vlan which is to be used for the frontend interface of the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Description</b> - The <code>primaryNetworkComponent</code> property is a [[SoftLayer_Network_Component (type)|network component]] structure with the <code>networkVlan</code> property populated with a [[SoftLayer_Network_Vlan (type)|vlan]] structure. The <code>id</code> property must be set to specify the frontend network vlan of the server.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"primaryNetworkComponent\": { \n        \"networkVlan\": { \n            \"id\": 1 \n        } \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>primaryBackendNetworkComponent.networkVlan.id</code> \n        <div>Specifies the network vlan which is to be used for the backend interface of the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Description</b> - The <code>primaryBackendNetworkComponent</code> property is a [[SoftLayer_Network_Component (type)|network component]] structure with the <code>networkVlan</code> property populated with a [[SoftLayer_Network_Vlan (type)|vlan]] structure. The <code>id</code> property must be set to specify the backend network vlan of the server.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"primaryBackendNetworkComponent\": { \n        \"networkVlan\": { \n            \"id\": 2 \n        } \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>fixedConfigurationPreset.keyName</code> \n        <div></div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n            <li><b>Description</b> - The <code>fixedConfigurationPreset</code> property is a [[SoftLayer_Product_Package_Preset (type)|fixed configuration preset]] structure. The <code>keyName</code> property must be set to specify preset to use.</li> \n            <li>If a fixed configuration preset is used <code>processorCoreAmount</code>, <code>memoryCapacity</code> and <code>hardDrives</code> properties must not be set.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"fixedConfigurationPreset\": { \n        \"keyName\": \"SOME_KEY_NAME\" \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>userData.value</code> \n        <div>Arbitrary data to be made available to the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n            <li><b>Description</b> - The <code>userData</code> property is an array with a single [[SoftLayer_Hardware_Attribute (type)|attribute]] structure with the <code>value</code> property set to an arbitrary value.</li> \n            <li>This value can be retrieved via the [[SoftLayer_Resource_Metadata/getUserMetadata|getUserMetadata]] method from a request originating from the server. This is primarily useful for providing data to software that may be on the server and configured to execute upon first boot.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"userData\": [ \n        { \n            \"value\": \"someValue\" \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>hardDrives</code> \n        <div>Hard drive settings for the server</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - SoftLayer_Hardware_Component</li> \n            <li><b>Default</b> - The largest available capacity for a zero cost primary disk will be used.</li> \n            <li><b>Description</b> - The <code>hardDrives</code> property is an array of [[SoftLayer_Hardware_Component (type)|hardware component]] structures.</i> \n            <li>Each hard drive must specify the <code>capacity</code> property.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"hardDrives\": [ \n        { \n            \"capacity\": 500 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li id=\"hardware-create-object-ssh-keys\"><code>sshKeys</code> \n        <div>SSH keys to install on the server upon provisioning.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - array of [[SoftLayer_Security_Ssh_Key (type)|SoftLayer_Security_Ssh_Key]]</li> \n            <li><b>Description</b> - The <code>sshKeys</code> property is an array of [[SoftLayer_Security_Ssh_Key (type)|SSH Key]] structures with the <code>id</code> property set to the value of an existing SSH key.</li> \n            <li>To create a new SSH key, call [[SoftLayer_Security_Ssh_Key/createObject|createObject]] on the [[SoftLayer_Security_Ssh_Key]] service.</li> \n            <li>To obtain a list of existing SSH keys, call [[SoftLayer_Account/getSshKeys|getSshKeys]] on the [[SoftLayer_Account]] service. \n        </ul> \n        <http title=\"Example\">{ \n    \"sshKeys\": [ \n        { \n            \"id\": 123 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>postInstallScriptUri</code> \n        <div>Specifies the uri location of the script to be downloaded and run after installation is complete.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n</ul> \n\n\n<h1>REST Example</h1> \n<http title=\"Request\">curl -X POST -d '{ \n \"parameters\":[ \n     { \n         \"hostname\": \"host1\", \n         \"domain\": \"example.com\", \n         \"processorCoreAmount\": 2, \n         \"memoryCapacity\": 2, \n         \"hourlyBillingFlag\": true, \n         \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\" \n     } \n ] \n}' https://api.softlayer.com/rest/v3/SoftLayer_Hardware.json \n</http> \n<http title=\"Response\">HTTP/1.1 201 Created \nLocation: https://api.softlayer.com/rest/v3/SoftLayer_Hardware/f5a3fcff-db1d-4b7c-9fa0-0349e41c29c5/getObject \n\n\n{ \n    \"accountId\": 232298, \n    \"bareMetalInstanceFlag\": null, \n    \"domain\": \"example.com\", \n    \"hardwareStatusId\": null, \n    \"hostname\": \"host1\", \n    \"id\": null, \n    \"serviceProviderId\": null, \n    \"serviceProviderResourceId\": null, \n    \"globalIdentifier\": \"f5a3fcff-db1d-4b7c-9fa0-0349e41c29c5\", \n    \"hourlyBillingFlag\": true, \n    \"memoryCapacity\": 2, \n    \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\", \n    \"processorCoreAmount\": 2 \n} \n</http> ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Hardware",
                        "doc": "The SoftLayer_Hardware object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "\nThis method will cancel a server effective immediately. For servers billed hourly, the charges will stop immediately after the method returns. "
            },
            "deleteSoftwareComponentPasswords": {
                "name": "deleteSoftwareComponentPasswords",
                "type": "boolean",
                "doc": "Delete software component passwords. ",
                "parameters": [
                    {
                        "name": "softwareComponentPasswords",
                        "type": "SoftLayer_Software_Component_Password",
                        "typeArray": true
                    }
                ]
            },
            "deleteTag": {
                "name": "deleteTag",
                "type": "boolean",
                "doc": "Delete an existing tag.  If there are any references on the tag, an exception will be thrown. ",
                "parameters": [
                    {
                        "name": "tagName",
                        "type": "string",
                        "doc": "The name of the tag to delete."
                    }
                ]
            },
            "editSoftwareComponentPasswords": {
                "name": "editSoftwareComponentPasswords",
                "type": "boolean",
                "doc": "Edit the properties of a software component password such as the username, password, and notes. ",
                "parameters": [
                    {
                        "name": "softwareComponentPasswords",
                        "type": "SoftLayer_Software_Component_Password",
                        "typeArray": true
                    }
                ]
            },
            "executeRemoteScript": {
                "name": "executeRemoteScript",
                "type": "void",
                "doc": "Download and run remote script from uri on the hardware.",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string",
                        "doc": "Location of the remote script"
                    }
                ]
            },
            "findByIpAddress": {
                "name": "findByIpAddress",
                "type": "SoftLayer_Hardware",
                "doc": "The '''findByIpAddress''' method finds hardware using its primary public or private IP address. IP addresses that have a secondary subnet tied to the hardware will not return the hardware. If no hardware is found, no errors are generated and no data is returned. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "An IP (ipv4) address by which to search for hardware"
                    }
                ]
            },
            "generateOrderTemplate": {
                "name": "generateOrderTemplate",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "\nObtain an [[SoftLayer_Container_Product_Order_Hardware_Server (type)|order container]] that can be sent to [[SoftLayer_Product_Order/verifyOrder|verifyOrder]] or [[SoftLayer_Product_Order/placeOrder|placeOrder]]. \n\n\nThis is primarily useful when there is a necessity to confirm the price which will be charged for an order. \n\n\nSee [[SoftLayer_Hardware/createObject|createObject]] for specifics on the requirements of the template object parameter. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Hardware"
                    }
                ]
            },
            "getAttachedNetworkStorages": {
                "name": "getAttachedNetworkStorages",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "This method is retrieve a list of SoftLayer_Network_Storage volumes that are authorized access to this SoftLayer_Hardware. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "nasType",
                        "type": "string",
                        "doc": "either 'ISCSI', 'NAS', or '*' for both",
                        "defaultValue": "*"
                    }
                ]
            },
            "getAvailableBillingTermChangePrices": {
                "name": "getAvailableBillingTermChangePrices",
                "type": "SoftLayer_Product_Item_Price",
                "typeArray": true,
                "doc": "Retrieves a list of available term prices to this hardware. Currently, price terms are only available for increasing term length to monthly billed servers. ",
                "maskable": true
            },
            "getAvailableNetworkStorages": {
                "name": "getAvailableNetworkStorages",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "This method retrieves a list of SoftLayer_Network_Storage volumes that can be authorized to this SoftLayer_Hardware. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "nasType",
                        "type": "string",
                        "doc": "either 'ISCSI', 'NAS', or '*' for both",
                        "defaultValue": "*"
                    }
                ]
            },
            "getBackendIncomingBandwidth": {
                "name": "getBackendIncomingBandwidth",
                "type": "float",
                "doc": "The '''getBackendIncomingBandwidth''' method retrieves the amount of incoming private network traffic used between the given start date and end date parameters. When entering start and end dates, only the month, day and year are used to calculate bandwidth totals - the time (HH:MM:SS) is ignored and defaults to midnight. The amount of bandwidth retrieved is measured in gigabytes. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The start date for the range of bandwidth to retrieve."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The end date for the range of bandwidth to retrieve."
                    }
                ]
            },
            "getBackendOutgoingBandwidth": {
                "name": "getBackendOutgoingBandwidth",
                "type": "float",
                "doc": "The '''getBackendOutgoingBandwidth''' method retrieves the amount of outgoing private network traffic used between the given start date and end date parameters. When entering start and end dates, only the month, day and year are used to calculate bandwidth totals - the time (HH:MM:SS) is ignored and defaults to midnight. The amount of bandwidth retrieved is measured in gigabytes. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The start date for the range of bandwidth to retrieve."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The end date for the range of bandwidth to retrieve."
                    }
                ]
            },
            "getComponentDetailsXML": {
                "name": "getComponentDetailsXML",
                "type": "string"
            },
            "getCreateObjectOptions": {
                "name": "getCreateObjectOptions",
                "type": "SoftLayer_Container_Hardware_Configuration",
                "doc": "\nThere are many options that may be provided while ordering a server, this method can be used to determine what these options are. \n\n\nDetailed information on the return value can be found on the data type page for [[SoftLayer_Container_Hardware_Configuration (type)]]. ",
                "static": true
            },
            "getCurrentBillingDetail": {
                "name": "getCurrentBillingDetail",
                "type": "SoftLayer_Billing_Item",
                "typeArray": true,
                "doc": "Get the billing detail for this hardware for the current billing period. This does not include bandwidth usage. ",
                "maskable": true
            },
            "getCurrentBillingTotal": {
                "name": "getCurrentBillingTotal",
                "type": "decimal",
                "doc": "Get the total bill amount in US Dollars ($) for this hardware in the current billing period. This includes all bandwidth used up to the point the method is called on the hardware. "
            },
            "getDailyAverage": {
                "name": "getDailyAverage",
                "type": "float",
                "doc": "The '''getDailyAverage''' method calculates the average daily network traffic used by the selected server. Using the required parameter ''dateTime'' to enter a start and end date, the user retrieves this average, measure in gigabytes (GB) for the specified date range. When entering parameters, only the month, day and year are required - time entries are omitted as this method defaults the time to midnight in order to account for the entire day. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The start date for the range of bandwidth a customer wishes to view."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The end date for the range of bandwidth a customer wishes to view."
                    }
                ]
            },
            "getFrontendIncomingBandwidth": {
                "name": "getFrontendIncomingBandwidth",
                "type": "float",
                "doc": "The '''getFrontendIncomingBandwidth''' method retrieves the amount of incoming public network traffic used by a server between the given start and end date parameters. When entering the ''dateTime'' parameter, only the month, day and year of the start and end dates are required - the time (hour, minute and second) are set to midnight by default and cannot be changed. The amount of bandwidth retrieved is measured in gigabytes (GB). ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The start date for the range of bandwidth to retrieve."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The end date for the range of bandwidth to retrieve."
                    }
                ]
            },
            "getFrontendOutgoingBandwidth": {
                "name": "getFrontendOutgoingBandwidth",
                "type": "float",
                "doc": "The '''getFrontendOutgoingBandwidth''' method retrieves the amount of outgoing public network traffic used by a server between the given start and end date parameters. The ''dateTime'' parameter requires only the day, month and year to be entered - the time (hour, minute and second) are set to midnight be default in order to gather the data for the entire start and end date indicated in the parameter. The amount of bandwidth retrieved is measured in gigabytes (GB). ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The start date for the range of bandwidth to retrieve."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The end date for the range of bandwidth to retrieve."
                    }
                ]
            },
            "getHourlyBandwidth": {
                "name": "getHourlyBandwidth",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "The '''getHourlyBandwidth''' method retrieves all bandwidth updates hourly for the specified hardware. Because the potential number of data points can become excessive, the method limits the user to obtain data in 24-hour intervals. The required ''dateTime'' parameter is used as the starting point for the query and will be calculated for the 24-hour period starting with the specified date and time. For example, entering a parameter of \n\n'02/01/2008 0:00' \n\nresults in a return of all bandwidth data for the entire day of February 1, 2008, as 0:00 specifies a midnight start date. Please note that the time entered should be completed using a 24-hour clock (military time, astronomical time). \n\nFor data spanning more than a single 24-hour period, refer to the getBandwidthData function on the metricTrackingObject for the piece of hardware. ",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "string",
                        "doc": "Specifies the 'public' or 'private' port for this server.",
                        "defaultValue": "public"
                    },
                    {
                        "name": "day",
                        "type": "dateTime",
                        "doc": "A date and time formatted as 'MM/DD/YYYY HH:00'",
                        "defaultValue": null
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware",
                "doc": "getObject retrieves the SoftLayer_Hardware object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Hardware service. You can only retrieve the account that your portal user is assigned to. ",
                "filterable": true,
                "maskable": true
            },
            "getPrivateBandwidthData": {
                "name": "getPrivateBandwidthData",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve a graph of a server's private network bandwidth usage over the specified timeframe. If no timeframe is specified then getPublicBandwidthGraphImage retrieves the last 24 hours of public bandwidth usage. getPrivateBandwidthGraphImage returns a PNG image measuring 827 pixels by 293 pixels. ",
                "parameters": [
                    {
                        "name": "startTime",
                        "type": "int",
                        "doc": "The starting point to retrieve bandwidth data from, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    },
                    {
                        "name": "endTime",
                        "type": "int",
                        "doc": "The end point to retrieve bandwidth data to, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    }
                ]
            },
            "getPublicBandwidthData": {
                "name": "getPublicBandwidthData",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve a graph of a server's public network bandwidth usage over the specified timeframe. If no timeframe is specified then getPublicBandwidthGraphImage retrieves the last 24 hours of public bandwidth usage. getPublicBandwidthGraphImage returns a PNG image measuring 827 pixels by 293 pixels. ",
                "parameters": [
                    {
                        "name": "startTime",
                        "type": "int",
                        "doc": "The starting point to retrieve bandwidth data from, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    },
                    {
                        "name": "endTime",
                        "type": "int",
                        "doc": "The end point to retrieve bandwidth data to, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    }
                ]
            },
            "getSensorData": {
                "name": "getSensorData",
                "type": "SoftLayer_Container_RemoteManagement_SensorReading",
                "typeArray": true,
                "doc": "The '''getSensorData''' method retrieves a server's hardware state via its internal sensors. Remote sensor data is transmitted to the SoftLayer API by way of the server's remote management card. Sensor data measures various information, including system temperatures, voltages and other local server settings. Sensor data is cached for 30 second; calls made to this method for the same server within 30 seconds of each other will result in the same data being returned. To ensure that the data retrieved retrieves snapshot of varied data, make calls greater than 30 seconds apart. "
            },
            "getSensorDataWithGraphs": {
                "name": "getSensorDataWithGraphs",
                "type": "SoftLayer_Container_RemoteManagement_SensorReadingsWithGraphs",
                "doc": "The '''getSensorDataWithGraphs''' method retrieves the raw data returned from the server's remote management card. Along with raw data, graphs for the CPU and system temperatures and fan speeds are also returned. For more details on what information is returned, refer to the ''getSensorData'' method. "
            },
            "getServerFanSpeedGraphs": {
                "name": "getServerFanSpeedGraphs",
                "type": "SoftLayer_Container_RemoteManagement_Graphs_SensorSpeed",
                "typeArray": true,
                "doc": "The '''getServerFanSpeedGraphs''' method retrieves the server's fan speeds and displays the speeds using tachometer graphs. data used to construct these graphs is retrieved from the server's remote management card. Each graph returned will have an associated title. "
            },
            "getServerPowerState": {
                "name": "getServerPowerState",
                "type": "string",
                "doc": "The '''getPowerState''' method retrieves the power state for the selected server. The server's power status is retrieved from its remote management card. This method returns \"on\", for a server that has been powered on, or \"off\" for servers powered off. "
            },
            "getServerTemperatureGraphs": {
                "name": "getServerTemperatureGraphs",
                "type": "SoftLayer_Container_RemoteManagement_Graphs_SensorTemperature",
                "typeArray": true,
                "doc": "The '''getServerTemperatureGraphs''' retrieves the server's temperatures and displays the various temperatures using thermometer graphs. Temperatures retrieved are CPU temperature(s) and system temperatures. Data used to construct the graphs is retrieved from the server's remote management card. All graphs returned will have an associated title. "
            },
            "getTransactionHistory": {
                "name": "getTransactionHistory",
                "type": "SoftLayer_Provisioning_Version1_Transaction_History",
                "typeArray": true,
                "doc": "\nThis method will query transaction history for a piece of hardware. ",
                "limitable": true,
                "maskable": true
            },
            "getUpgradeItemPrices": {
                "name": "getUpgradeItemPrices",
                "type": "SoftLayer_Product_Item_Price",
                "typeArray": true,
                "doc": "Retrieve a list of upgradeable items available to this piece of hardware. Currently, getUpgradeItemPrices retrieves upgrades available for a server's memory, hard drives, network port speed, bandwidth allocation and GPUs. ",
                "maskable": true
            },
            "importVirtualHost": {
                "name": "importVirtualHost",
                "type": "SoftLayer_Virtual_Host",
                "doc": "The '''importVirtualHost''' method attempts to import the host record for the virtualization platform running on a server.",
                "maskable": true
            },
            "isPingable": {
                "name": "isPingable",
                "type": "boolean",
                "doc": "The '''isPingable''' method issues a ping command to the selected server and returns the result of the ping command. This boolean return value displays ''true'' upon successful ping or ''false'' for a failed ping. "
            },
            "ping": {
                "name": "ping",
                "type": "string",
                "doc": "Issues a ping command to the server and returns the ping response. "
            },
            "powerCycle": {
                "name": "powerCycle",
                "type": "boolean",
                "doc": "The '''powerCycle''' method completes a power off and power on of the server successively in one command. The power cycle command is equivalent to unplugging the server from the power strip and then plugging the server back in. '''This method should only be used when all other options have been exhausted'''. Additional remote management commands may not be executed if this command was successfully issued within the last 20 minutes to avoid server failure. Remote management commands include: \n\nrebootSoft rebootHard powerOn powerOff powerCycle \n\n"
            },
            "powerOff": {
                "name": "powerOff",
                "type": "boolean",
                "doc": "This method will power off the server via the server's remote management card. "
            },
            "powerOn": {
                "name": "powerOn",
                "type": "boolean",
                "doc": "The '''powerOn''' method powers on a server via its remote management card. This boolean return value returns ''true'' upon successful execution and ''false'' if unsuccessful. Other remote management commands may not be issued in this command was successfully completed within the last 20 minutes to avoid server failure. Remote management commands include: \n\nrebootSoft rebootHard powerOn powerOff powerCycle \n\n"
            },
            "rebootDefault": {
                "name": "rebootDefault",
                "type": "boolean",
                "doc": "The '''rebootDefault''' method attempts to reboot the server by issuing a soft reboot, or reset, command to the server's remote management card. if the reset attempt is unsuccessful, a power cycle command will be issued via the power strip. The power cycle command is equivalent to unplugging the server from the power strip and then plugging the server back in. If the reset was successful within the last 20 minutes, another remote management command cannot be completed to avoid server failure. Remote management commands include: \n\nrebootSoft rebootHard powerOn powerOff powerCycle \n\n"
            },
            "rebootHard": {
                "name": "rebootHard",
                "type": "boolean",
                "doc": "The '''rebootHard''' method reboots the server by issuing a cycle command to the server's remote management card. A hard reboot is equivalent to pressing the ''Reset'' button on a server - it is issued immediately and will not allow processes to shut down prior to the reboot. Completing a hard reboot may initiate system disk checks upon server reboot, causing the boot up to take longer than normally expected. \n\nRemote management commands are unable to be executed if a reboot has been issued successfully within the last 20 minutes to avoid server failure. Remote management commands include: \n\nrebootSoft rebootHard powerOn powerOff powerCycle \n\n"
            },
            "rebootSoft": {
                "name": "rebootSoft",
                "type": "boolean",
                "doc": "The '''rebootSoft''' method reboots the server by issuing a reset command to the server's remote management card via soft reboot. When executing a soft reboot, servers allow all processes to shut down completely before rebooting. Remote management commands are unable to be issued within 20 minutes of issuing a successful soft reboot in order to avoid server failure. Remote management commands include: \n\nrebootSoft rebootHard powerOn powerOff powerCycle \n\n"
            },
            "removeAccessToNetworkStorage": {
                "name": "removeAccessToNetworkStorage",
                "type": "boolean",
                "doc": "This method is used to remove access to s SoftLayer_Network_Storage volumes that supports host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObject",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            },
            "removeAccessToNetworkStorageList": {
                "name": "removeAccessToNetworkStorageList",
                "type": "boolean",
                "doc": "This method is used to allow access to multiple SoftLayer_Network_Storage volumes that support host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObjects",
                        "type": "SoftLayer_Network_Storage",
                        "typeArray": true
                    }
                ]
            },
            "removeTags": {
                "name": "removeTags",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "comma separated list of tags inputted by user"
                    }
                ]
            },
            "setTags": {
                "name": "setTags",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "comma separated list of tags inputted by user"
                    }
                ]
            },
            "updateIpmiPassword": {
                "name": "updateIpmiPassword",
                "type": "boolean",
                "doc": "This method will update the root IPMI password on this SoftLayer_Hardware. ",
                "parameters": [
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "An alpha-numeric password"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Hardware data type contains general information relating to a single SoftLayer hardware. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account associated with a piece of hardware."
            },
            "activeComponents": {
                "name": "activeComponents",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A piece of hardware's active physical components."
            },
            "activeNetworkMonitorIncident": {
                "name": "activeNetworkMonitorIncident",
                "type": "SoftLayer_Network_Monitor_Version1_Incident",
                "form": "relational",
                "typeArray": true,
                "doc": "A piece of hardware's active network monitoring incidents."
            },
            "allPowerComponents": {
                "name": "allPowerComponents",
                "type": "SoftLayer_Hardware_Power_Component",
                "form": "relational",
                "typeArray": true
            },
            "allowedHost": {
                "name": "allowedHost",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "form": "relational",
                "doc": "The SoftLayer_Network_Storage_Allowed_Host information to connect this server to Network Storage volumes that require access control lists."
            },
            "allowedNetworkStorage": {
                "name": "allowedNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage objects that this SoftLayer_Hardware has access to."
            },
            "allowedNetworkStorageReplicas": {
                "name": "allowedNetworkStorageReplicas",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage objects whose Replica that this SoftLayer_Hardware has access to."
            },
            "antivirusSpywareSoftwareComponent": {
                "name": "antivirusSpywareSoftwareComponent",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "Information regarding an antivirus/spyware software component object."
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Hardware_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's specific attributes."
            },
            "averageDailyPublicBandwidthUsage": {
                "name": "averageDailyPublicBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The average daily public bandwidth usage for the current billing cycle."
            },
            "backendNetworkComponents": {
                "name": "backendNetworkComponents",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A piece of hardware's back-end or private network components."
            },
            "backendRouters": {
                "name": "backendRouters",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "A hardware's backend or private router."
            },
            "bandwidthAllocation": {
                "name": "bandwidthAllocation",
                "type": "decimal",
                "form": "relational",
                "doc": "A hardware's allotted bandwidth (measured in GB)."
            },
            "bandwidthAllotmentDetail": {
                "name": "bandwidthAllotmentDetail",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment_Detail",
                "form": "relational",
                "doc": "A hardware's allotted detail record. Allotment details link bandwidth allocation with allotments."
            },
            "benchmarkCertifications": {
                "name": "benchmarkCertifications",
                "type": "SoftLayer_Hardware_Benchmark_Certification",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's benchmark certifications."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item_Hardware",
                "form": "relational",
                "doc": "Information regarding the billing item for a server."
            },
            "billingItemFlag": {
                "name": "billingItemFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that a billing item exists."
            },
            "blockCancelBecauseDisconnectedFlag": {
                "name": "blockCancelBecauseDisconnectedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Determines whether the hardware is ineligible for cancellation because it is disconnected."
            },
            "businessContinuanceInsuranceFlag": {
                "name": "businessContinuanceInsuranceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Status indicating whether or not a piece of hardware has business continuance insurance."
            },
            "childrenHardware": {
                "name": "childrenHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "Child hardware."
            },
            "components": {
                "name": "components",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A piece of hardware's components."
            },
            "continuousDataProtectionSoftwareComponent": {
                "name": "continuousDataProtectionSoftwareComponent",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "A continuous data protection/server backup software component object."
            },
            "currentBillableBandwidthUsage": {
                "name": "currentBillableBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The current billable public outbound bandwidth for this hardware for the current billing cycle."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "Information regarding the datacenter in which a piece of hardware resides."
            },
            "datacenterName": {
                "name": "datacenterName",
                "type": "string",
                "form": "relational",
                "doc": "The name of the datacenter in which a piece of hardware resides."
            },
            "daysInSparePool": {
                "name": "daysInSparePool",
                "type": "int",
                "form": "relational",
                "doc": "Number of day(s) a server have been in spare pool."
            },
            "downlinkHardware": {
                "name": "downlinkHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware that has uplink network connections to a piece of hardware."
            },
            "downlinkNetworkHardware": {
                "name": "downlinkNetworkHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware that has uplink network connections to a piece of hardware."
            },
            "downlinkServers": {
                "name": "downlinkServers",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding all servers attached to a piece of network hardware."
            },
            "downlinkVirtualGuests": {
                "name": "downlinkVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding all virtual guests attached to a piece of network hardware."
            },
            "downstreamHardwareBindings": {
                "name": "downstreamHardwareBindings",
                "type": "SoftLayer_Network_Component_Uplink_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All hardware downstream from a network device."
            },
            "downstreamNetworkHardware": {
                "name": "downstreamNetworkHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All network hardware downstream from the selected piece of hardware."
            },
            "downstreamNetworkHardwareWithIncidents": {
                "name": "downstreamNetworkHardwareWithIncidents",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All network hardware with monitoring warnings or errors that are downstream from the selected piece of hardware."
            },
            "downstreamServers": {
                "name": "downstreamServers",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding all servers attached downstream to a piece of network hardware."
            },
            "downstreamVirtualGuests": {
                "name": "downstreamVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding all virtual guests attached to a piece of network hardware."
            },
            "driveControllers": {
                "name": "driveControllers",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The drive controllers contained within a piece of hardware."
            },
            "evaultNetworkStorage": {
                "name": "evaultNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's associated EVault network storage service account."
            },
            "firewallServiceComponent": {
                "name": "firewallServiceComponent",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "Information regarding a piece of hardware's firewall services."
            },
            "fixedConfigurationPreset": {
                "name": "fixedConfigurationPreset",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "relational",
                "doc": "Defines the fixed components in a fixed configuration bare metal server."
            },
            "frontendNetworkComponents": {
                "name": "frontendNetworkComponents",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A piece of hardware's front-end or public network components."
            },
            "frontendRouters": {
                "name": "frontendRouters",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "A hardware's frontend or public router."
            },
            "futureBillingItem": {
                "name": "futureBillingItem",
                "type": "SoftLayer_Billing_Item_Hardware",
                "form": "relational",
                "doc": "Information regarding the future billing item for a server."
            },
            "globalIdentifier": {
                "name": "globalIdentifier",
                "type": "string",
                "form": "relational",
                "doc": "A hardware's universally unique identifier."
            },
            "hardDrives": {
                "name": "hardDrives",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The hard drives contained within a piece of hardware."
            },
            "hardwareChassis": {
                "name": "hardwareChassis",
                "type": "SoftLayer_Hardware_Chassis",
                "form": "relational",
                "doc": "The chassis that a piece of hardware is housed in."
            },
            "hardwareFunction": {
                "name": "hardwareFunction",
                "type": "SoftLayer_Hardware_Function",
                "form": "relational",
                "doc": "A hardware's function."
            },
            "hardwareFunctionDescription": {
                "name": "hardwareFunctionDescription",
                "type": "string",
                "form": "relational",
                "doc": "A hardware's function."
            },
            "hardwareStatus": {
                "name": "hardwareStatus",
                "type": "SoftLayer_Hardware_Status",
                "form": "relational",
                "doc": "A hardware's status."
            },
            "hasTrustedPlatformModuleBillingItemFlag": {
                "name": "hasTrustedPlatformModuleBillingItemFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Determine in hardware object has TPM enabled."
            },
            "hostIpsSoftwareComponent": {
                "name": "hostIpsSoftwareComponent",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "Information regarding a host IPS software component object."
            },
            "hourlyBillingFlag": {
                "name": "hourlyBillingFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A server's hourly billing status."
            },
            "inboundBandwidthUsage": {
                "name": "inboundBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The sum of all the inbound network traffic data for the last 30 days."
            },
            "inboundPublicBandwidthUsage": {
                "name": "inboundPublicBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public inbound bandwidth for this hardware for the current billing cycle."
            },
            "isBillingTermChangeAvailableFlag": {
                "name": "isBillingTermChangeAvailableFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not this hardware object is eligible to change to term billing."
            },
            "lastTransaction": {
                "name": "lastTransaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "Information regarding the last transaction a server performed."
            },
            "latestNetworkMonitorIncident": {
                "name": "latestNetworkMonitorIncident",
                "type": "SoftLayer_Network_Monitor_Version1_Incident",
                "form": "relational",
                "doc": "A piece of hardware's latest network monitoring incident."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "Where a piece of hardware is located within SoftLayer's location hierarchy."
            },
            "locationPathString": {
                "name": "locationPathString",
                "type": "string",
                "form": "relational"
            },
            "lockboxNetworkStorage": {
                "name": "lockboxNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "Information regarding a lockbox account associated with a server."
            },
            "managedResourceFlag": {
                "name": "managedResourceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that the hardware is a managed resource."
            },
            "memory": {
                "name": "memory",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's memory."
            },
            "memoryCapacity": {
                "name": "memoryCapacity",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The amount of memory a piece of hardware has, measured in gigabytes."
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object_HardwareServer",
                "form": "relational",
                "doc": "A piece of hardware's metric tracking object."
            },
            "modules": {
                "name": "modules",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true
            },
            "monitoringRobot": {
                "name": "monitoringRobot",
                "type": "SoftLayer_Monitoring_Robot",
                "form": "relational"
            },
            "monitoringServiceComponent": {
                "name": "monitoringServiceComponent",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host_Stratum",
                "form": "relational",
                "doc": "Information regarding a piece of hardware's network monitoring services."
            },
            "monitoringServiceEligibilityFlag": {
                "name": "monitoringServiceEligibilityFlag",
                "type": "boolean",
                "form": "relational"
            },
            "motherboard": {
                "name": "motherboard",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "doc": "Information regarding a piece of hardware's motherboard."
            },
            "networkCards": {
                "name": "networkCards",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's network cards."
            },
            "networkComponents": {
                "name": "networkComponents",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "Returns a hardware's network components."
            },
            "networkGatewayMember": {
                "name": "networkGatewayMember",
                "type": "SoftLayer_Network_Gateway_Member",
                "form": "relational",
                "doc": "The gateway member if this device is part of a network gateway."
            },
            "networkGatewayMemberFlag": {
                "name": "networkGatewayMemberFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not this device is part of a network gateway."
            },
            "networkManagementIpAddress": {
                "name": "networkManagementIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "A piece of hardware's network management IP address."
            },
            "networkMonitorAttachedDownHardware": {
                "name": "networkMonitorAttachedDownHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All servers with failed monitoring that are attached downstream to a piece of hardware."
            },
            "networkMonitorAttachedDownVirtualGuests": {
                "name": "networkMonitorAttachedDownVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "Virtual guests that are attached downstream to a hardware that have failed monitoring"
            },
            "networkMonitorIncidents": {
                "name": "networkMonitorIncidents",
                "type": "SoftLayer_Network_Monitor_Version1_Incident",
                "form": "relational",
                "typeArray": true,
                "doc": "The status of all of a piece of hardware's network monitoring incidents."
            },
            "networkMonitors": {
                "name": "networkMonitors",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's network monitors."
            },
            "networkStatus": {
                "name": "networkStatus",
                "type": "string",
                "form": "relational",
                "doc": "The value of a hardware's network status attribute."
            },
            "networkStatusAttribute": {
                "name": "networkStatusAttribute",
                "type": "SoftLayer_Hardware_Attribute",
                "form": "relational",
                "doc": "The hardware's related network status attribute."
            },
            "networkStorage": {
                "name": "networkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's associated network storage service account."
            },
            "networkVlans": {
                "name": "networkVlans",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "The network virtual LANs (VLANs) associated with a piece of hardware's network components."
            },
            "nextBillingCycleBandwidthAllocation": {
                "name": "nextBillingCycleBandwidthAllocation",
                "type": "decimal",
                "form": "relational",
                "doc": "A hardware's allotted bandwidth for the next billing cycle (measured in GB)."
            },
            "notesHistory": {
                "name": "notesHistory",
                "type": "SoftLayer_Hardware_Note",
                "form": "relational",
                "typeArray": true
            },
            "nvRamCapacity": {
                "name": "nvRamCapacity",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The amount of non-volatile memory a piece of hardware has, measured in gigabytes."
            },
            "nvRamComponentModels": {
                "name": "nvRamComponentModels",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational",
                "typeArray": true
            },
            "operatingSystem": {
                "name": "operatingSystem",
                "type": "SoftLayer_Software_Component_OperatingSystem",
                "form": "relational",
                "doc": "Information regarding a piece of hardware's operating system."
            },
            "operatingSystemReferenceCode": {
                "name": "operatingSystemReferenceCode",
                "type": "string",
                "form": "relational",
                "doc": "A hardware's operating system software description."
            },
            "outboundBandwidthUsage": {
                "name": "outboundBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The sum of all the outbound network traffic data for the last 30 days."
            },
            "outboundPublicBandwidthUsage": {
                "name": "outboundPublicBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth for this hardware for the current billing cycle."
            },
            "parentBay": {
                "name": "parentBay",
                "type": "SoftLayer_Hardware_Blade",
                "form": "relational",
                "doc": "Blade Bay"
            },
            "parentHardware": {
                "name": "parentHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "Parent Hardware."
            },
            "pointOfPresenceLocation": {
                "name": "pointOfPresenceLocation",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "Information regarding the Point of Presence (PoP) location in which a piece of hardware resides."
            },
            "powerComponents": {
                "name": "powerComponents",
                "type": "SoftLayer_Hardware_Power_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The power components for a hardware object."
            },
            "powerSupply": {
                "name": "powerSupply",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's power supply."
            },
            "primaryBackendIpAddress": {
                "name": "primaryBackendIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "The hardware's primary private IP address."
            },
            "primaryBackendNetworkComponent": {
                "name": "primaryBackendNetworkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "Information regarding the hardware's primary back-end network component."
            },
            "primaryIpAddress": {
                "name": "primaryIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "The hardware's primary public IP address."
            },
            "primaryNetworkComponent": {
                "name": "primaryNetworkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "Information regarding the hardware's primary public network component."
            },
            "privateNetworkOnlyFlag": {
                "name": "privateNetworkOnlyFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether the hardware only has access to the private network."
            },
            "processorCoreAmount": {
                "name": "processorCoreAmount",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total number of processor cores, summed from all processors that are attached to a piece of hardware"
            },
            "processorPhysicalCoreAmount": {
                "name": "processorPhysicalCoreAmount",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total number of physical processor cores, summed from all processors that are attached to a piece of hardware"
            },
            "processors": {
                "name": "processors",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's processors."
            },
            "rack": {
                "name": "rack",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "raidControllers": {
                "name": "raidControllers",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The RAID controllers contained within a piece of hardware."
            },
            "recentEvents": {
                "name": "recentEvents",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "form": "relational",
                "typeArray": true,
                "doc": "Recent events that impact this hardware."
            },
            "remoteManagementAccounts": {
                "name": "remoteManagementAccounts",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_User",
                "form": "relational",
                "typeArray": true,
                "doc": "User credentials to issue commands and/or interact with the server's remote management card."
            },
            "remoteManagementComponent": {
                "name": "remoteManagementComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "A hardware's associated remote management component. This is normally IPMI."
            },
            "resourceConfigurations": {
                "name": "resourceConfigurations",
                "type": "SoftLayer_Hardware_Resource_Configuration",
                "form": "relational",
                "typeArray": true
            },
            "resourceGroupMemberReferences": {
                "name": "resourceGroupMemberReferences",
                "type": "SoftLayer_Resource_Group_Member",
                "form": "relational",
                "typeArray": true
            },
            "resourceGroupRoles": {
                "name": "resourceGroupRoles",
                "type": "SoftLayer_Resource_Group_Role",
                "form": "relational",
                "typeArray": true
            },
            "resourceGroups": {
                "name": "resourceGroups",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "The resource groups in which this hardware is a member."
            },
            "routers": {
                "name": "routers",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "A hardware's routers."
            },
            "scaleAssets": {
                "name": "scaleAssets",
                "type": "SoftLayer_Scale_Asset",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of scale assets this hardware corresponds to."
            },
            "securityScanRequests": {
                "name": "securityScanRequests",
                "type": "SoftLayer_Network_Security_Scanner_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's vulnerability scan requests."
            },
            "serverRoom": {
                "name": "serverRoom",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "Information regarding the server room in which the hardware is located."
            },
            "serviceProvider": {
                "name": "serviceProvider",
                "type": "SoftLayer_Service_Provider",
                "form": "relational",
                "doc": "Information regarding the piece of hardware's service provider."
            },
            "softwareComponents": {
                "name": "softwareComponents",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's installed software."
            },
            "sparePoolBillingItem": {
                "name": "sparePoolBillingItem",
                "type": "SoftLayer_Billing_Item_Hardware",
                "form": "relational",
                "doc": "Information regarding the billing item for a spare pool server."
            },
            "sshKeys": {
                "name": "sshKeys",
                "type": "SoftLayer_Security_Ssh_Key",
                "form": "relational",
                "typeArray": true,
                "doc": "SSH keys to be installed on the server during provisioning or an OS reload."
            },
            "storageGroups": {
                "name": "storageGroups",
                "type": "SoftLayer_Configuration_Storage_Group",
                "form": "relational",
                "typeArray": true
            },
            "storageNetworkComponents": {
                "name": "storageNetworkComponents",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A piece of hardware's private storage network components. [Deprecated]"
            },
            "tagReferences": {
                "name": "tagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true
            },
            "topLevelLocation": {
                "name": "topLevelLocation",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "upgradeRequest": {
                "name": "upgradeRequest",
                "type": "SoftLayer_Product_Upgrade_Request",
                "form": "relational",
                "doc": "An account's associated upgrade request object, if any."
            },
            "uplinkHardware": {
                "name": "uplinkHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The network device connected to a piece of hardware."
            },
            "uplinkNetworkComponents": {
                "name": "uplinkNetworkComponents",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding the network component that is one level higher than a piece of hardware on the network infrastructure."
            },
            "userData": {
                "name": "userData",
                "type": "SoftLayer_Hardware_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "An array containing a single string of custom user data for a hardware order. Max size is 16 kb."
            },
            "virtualChassis": {
                "name": "virtualChassis",
                "type": "SoftLayer_Hardware_Group",
                "form": "relational",
                "doc": "Information regarding the virtual chassis for a piece of hardware."
            },
            "virtualChassisSiblings": {
                "name": "virtualChassisSiblings",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding the virtual chassis siblings for a piece of hardware."
            },
            "virtualHost": {
                "name": "virtualHost",
                "type": "SoftLayer_Virtual_Host",
                "form": "relational",
                "doc": "A piece of hardware's virtual host record."
            },
            "virtualLicenses": {
                "name": "virtualLicenses",
                "type": "SoftLayer_Software_VirtualLicense",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding a piece of hardware's virtual software licenses."
            },
            "virtualRack": {
                "name": "virtualRack",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "doc": "Information regarding the bandwidth allotment to which a piece of hardware belongs."
            },
            "virtualRackId": {
                "name": "virtualRackId",
                "type": "int",
                "form": "relational",
                "doc": "The name of the bandwidth allotment belonging to a piece of hardware."
            },
            "virtualRackName": {
                "name": "virtualRackName",
                "type": "string",
                "form": "relational",
                "doc": "The name of the bandwidth allotment belonging to a piece of hardware."
            },
            "virtualizationPlatform": {
                "name": "virtualizationPlatform",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "A piece of hardware's virtualization platform software."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A hardware's associated [[SoftLayer_Account|account]] id."
            },
            "bareMetalInstanceFlag": {
                "name": "bareMetalInstanceFlag",
                "type": "int",
                "form": "local",
                "doc": "When true, this flag specifies that a hardware is Bare Metal Server. Bare Metal Servers are physical bare metal servers that are billed with the same options as Virtual Servers, with monthly and hourly rates.  Bare Metal instances are ordered based on processor core count and ram amount. "
            },
            "domain": {
                "name": "domain",
                "type": "string",
                "form": "local",
                "doc": "A piece of hardware's local network domain name."
            },
            "fullyQualifiedDomainName": {
                "name": "fullyQualifiedDomainName",
                "type": "string",
                "form": "local",
                "doc": "A name reflecting the hostname and domain of the hardware. This is created from the combined values of the hardware's hostname and domain name automatically, and thus should not be edited directly. "
            },
            "hardwareStatusId": {
                "name": "hardwareStatusId",
                "type": "int",
                "form": "local",
                "doc": "A number reflecting the state of a hardware"
            },
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local",
                "doc": "A hardware's hostname"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware's internal identification number"
            },
            "manufacturerSerialNumber": {
                "name": "manufacturerSerialNumber",
                "type": "string",
                "form": "local",
                "doc": "A hardware's serial number that is supplied by the manufacturer."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A small note about a piece of hardware to use at your discretion."
            },
            "postInstallScriptUri": {
                "name": "postInstallScriptUri",
                "type": "string",
                "form": "local",
                "doc": "URI of the script to be downloaded and executed after installation is complete."
            },
            "provisionDate": {
                "name": "provisionDate",
                "type": "dateTime",
                "form": "local"
            },
            "serialNumber": {
                "name": "serialNumber",
                "type": "string",
                "form": "local",
                "doc": "A hardware's serial number that is supplied by SoftLayer."
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local"
            },
            "serviceProviderResourceId": {
                "name": "serviceProviderResourceId",
                "type": "int",
                "form": "local",
                "doc": "A hardware's internal identification number at its service provider"
            },
            "activeComponentCount": {
                "name": "activeComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a piece of hardware's active physical components."
            },
            "activeNetworkMonitorIncidentCount": {
                "name": "activeNetworkMonitorIncidentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a piece of hardware's active network monitoring incidents."
            },
            "allPowerComponentCount": {
                "name": "allPowerComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "allowedNetworkStorageCount": {
                "name": "allowedNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage objects that this SoftLayer_Hardware has access to."
            },
            "allowedNetworkStorageReplicaCount": {
                "name": "allowedNetworkStorageReplicaCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage objects whose Replica that this SoftLayer_Hardware has access to."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's specific attributes."
            },
            "backendNetworkComponentCount": {
                "name": "backendNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a piece of hardware's back-end or private network components."
            },
            "backendRouterCount": {
                "name": "backendRouterCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a hardware's backend or private router."
            },
            "benchmarkCertificationCount": {
                "name": "benchmarkCertificationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's benchmark certifications."
            },
            "childrenHardwareCount": {
                "name": "childrenHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of child hardware."
            },
            "componentCount": {
                "name": "componentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a piece of hardware's components."
            },
            "downlinkHardwareCount": {
                "name": "downlinkHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware that has uplink network connections to a piece of hardware."
            },
            "downlinkNetworkHardwareCount": {
                "name": "downlinkNetworkHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware that has uplink network connections to a piece of hardware."
            },
            "downlinkServerCount": {
                "name": "downlinkServerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding all servers attached to a piece of network hardware."
            },
            "downlinkVirtualGuestCount": {
                "name": "downlinkVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding all virtual guests attached to a piece of network hardware."
            },
            "downstreamHardwareBindingCount": {
                "name": "downstreamHardwareBindingCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all hardware downstream from a network device."
            },
            "downstreamNetworkHardwareCount": {
                "name": "downstreamNetworkHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all network hardware downstream from the selected piece of hardware."
            },
            "downstreamNetworkHardwareWithIncidentCount": {
                "name": "downstreamNetworkHardwareWithIncidentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all network hardware with monitoring warnings or errors that are downstream from the selected piece of hardware."
            },
            "downstreamServerCount": {
                "name": "downstreamServerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding all servers attached downstream to a piece of network hardware."
            },
            "downstreamVirtualGuestCount": {
                "name": "downstreamVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding all virtual guests attached to a piece of network hardware."
            },
            "driveControllerCount": {
                "name": "driveControllerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the drive controllers contained within a piece of hardware."
            },
            "evaultNetworkStorageCount": {
                "name": "evaultNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's associated EVault network storage service account."
            },
            "frontendNetworkComponentCount": {
                "name": "frontendNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a piece of hardware's front-end or public network components."
            },
            "frontendRouterCount": {
                "name": "frontendRouterCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a hardware's frontend or public router."
            },
            "hardDriveCount": {
                "name": "hardDriveCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the hard drives contained within a piece of hardware."
            },
            "memoryCount": {
                "name": "memoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's memory."
            },
            "moduleCount": {
                "name": "moduleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "networkCardCount": {
                "name": "networkCardCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's network cards."
            },
            "networkComponentCount": {
                "name": "networkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of returns a hardware's network components."
            },
            "networkMonitorAttachedDownHardwareCount": {
                "name": "networkMonitorAttachedDownHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all servers with failed monitoring that are attached downstream to a piece of hardware."
            },
            "networkMonitorAttachedDownVirtualGuestCount": {
                "name": "networkMonitorAttachedDownVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of virtual guests that are attached downstream to a hardware that have failed monitoring"
            },
            "networkMonitorCount": {
                "name": "networkMonitorCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's network monitors."
            },
            "networkMonitorIncidentCount": {
                "name": "networkMonitorIncidentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the status of all of a piece of hardware's network monitoring incidents."
            },
            "networkStorageCount": {
                "name": "networkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's associated network storage service account."
            },
            "networkVlanCount": {
                "name": "networkVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the network virtual LANs (VLANs) associated with a piece of hardware's network components."
            },
            "notesHistoryCount": {
                "name": "notesHistoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "nvRamComponentModelCount": {
                "name": "nvRamComponentModelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "powerComponentCount": {
                "name": "powerComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the power components for a hardware object."
            },
            "powerSupplyCount": {
                "name": "powerSupplyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's power supply."
            },
            "processorCount": {
                "name": "processorCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's processors."
            },
            "raidControllerCount": {
                "name": "raidControllerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the RAID controllers contained within a piece of hardware."
            },
            "recentEventCount": {
                "name": "recentEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of recent events that impact this hardware."
            },
            "remoteManagementAccountCount": {
                "name": "remoteManagementAccountCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of user credentials to issue commands and/or interact with the server's remote management card."
            },
            "resourceConfigurationCount": {
                "name": "resourceConfigurationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "resourceGroupCount": {
                "name": "resourceGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the resource groups in which this hardware is a member."
            },
            "resourceGroupMemberReferenceCount": {
                "name": "resourceGroupMemberReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "resourceGroupRoleCount": {
                "name": "resourceGroupRoleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "routerCount": {
                "name": "routerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a hardware's routers."
            },
            "scaleAssetCount": {
                "name": "scaleAssetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of scale assets this hardware corresponds to."
            },
            "securityScanRequestCount": {
                "name": "securityScanRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's vulnerability scan requests."
            },
            "softwareComponentCount": {
                "name": "softwareComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's installed software."
            },
            "sshKeyCount": {
                "name": "sshKeyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of sSH keys to be installed on the server during provisioning or an OS reload."
            },
            "storageGroupCount": {
                "name": "storageGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "storageNetworkComponentCount": {
                "name": "storageNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a piece of hardware's private storage network components. [Deprecated]"
            },
            "tagReferenceCount": {
                "name": "tagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "uplinkNetworkComponentCount": {
                "name": "uplinkNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding the network component that is one level higher than a piece of hardware on the network infrastructure."
            },
            "userDataCount": {
                "name": "userDataCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an array containing a single string of custom user data for a hardware order. Max size is 16 kb."
            },
            "virtualChassisSiblingCount": {
                "name": "virtualChassisSiblingCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding the virtual chassis siblings for a piece of hardware."
            },
            "virtualLicenseCount": {
                "name": "virtualLicenseCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding a piece of hardware's virtual software licenses."
            }
        }
    },
    "SoftLayer_Hardware_Attribute": {
        "name": "SoftLayer_Hardware_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Attribute type contains general information for a hardware attribute. Hardware attributes can be assigned to specific hardware objects to describe relatively arbitrary information. ",
        "properties": {
            "hardwareAttributeType": {
                "name": "hardwareAttributeType",
                "type": "SoftLayer_Hardware_Attribute_Type",
                "form": "relational",
                "doc": "The type of hardware attribute that this represents."
            },
            "hardwareAttributeTypeId": {
                "name": "hardwareAttributeTypeId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a hardware attribute's type."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware attribute's unique identifier."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A hardware attribute's value."
            }
        }
    },
    "SoftLayer_Hardware_Attribute_Type": {
        "name": "SoftLayer_Hardware_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Retrieve attributes associated with a hardware object. ",
        "properties": {
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "The attribute type key name or code."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The attribute type name."
            }
        }
    },
    "SoftLayer_Hardware_Attribute_UserData": {
        "name": "SoftLayer_Hardware_Attribute_UserData",
        "base": "SoftLayer_Hardware_Attribute",
        "noservice": true
    },
    "SoftLayer_Hardware_Benchmark_Certification": {
        "name": "SoftLayer_Hardware_Benchmark_Certification",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This certification is used to indicate the date, time and validity of the benchmark certification process. The certification process includes running a battery of tests on all major sub-systems of a server in order to verify that all components of the server are functioning up to specification. Only after a server has passed each and every hardware and configuration test will it be provisioned for a customer. The \"SoftLayer_Hardware_Benchmark_Certification\" class is used to indicate the date, time and validity of the benchmark certification process. This process includes running a battery of tests on all major sub-systems of a server to verify that all components of the server are functioning according to their specifications. Once each server has passed all hardware and configurations tests, it is provisioned to a SoftLayer customer. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware_Benchmark_Certification",
                "doc": "getObject retrieves the SoftLayer_Hardware_Benchmark_Certification object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Hardware_Benchmark_Certification service. ",
                "filterable": true,
                "maskable": true
            },
            "getResultFile": {
                "name": "getResultFile",
                "type": "base64Binary",
                "doc": "Attempt to retrieve the file associated with a benchmark certification result, if such a file exists.  If there is no file for this benchmark certification result, calling this method throws an exception. The \"getResultFile\" method attempts to retrieve the file associated with a benchmark certification result, if such a file exists. If no file exists for the benchmark certification, an exception is thrown. "
            }
        },
        "typeDoc": "The SoftLayer_Hardware_Benchmark_Certification data type contains general information relating to a single SoftLayer hardware benchmark certification document. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "Information regarding a benchmark certification result's associated SoftLayer customer account."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "Information regarding the piece of hardware on which a benchmark certification test was performed."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the SoftLayer customer account associated with a benchmark certification result."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a benchmark certification result was generated."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "A benchmark certification results's associated hardware's internal identification number."
            }
        }
    },
    "SoftLayer_Hardware_Blade": {
        "name": "SoftLayer_Hardware_Blade",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Hardware_Blade service provides specific information about blade servers. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware_Blade",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "hardwareChild": {
                "name": "hardwareChild",
                "type": "SoftLayer_Hardware",
                "form": "relational"
            },
            "hardwareParent": {
                "name": "hardwareParent",
                "type": "SoftLayer_Hardware",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "disabled": {
                "name": "disabled",
                "type": "int",
                "form": "local"
            },
            "hardwareChildId": {
                "name": "hardwareChildId",
                "type": "int",
                "form": "local"
            },
            "hardwareParentId": {
                "name": "hardwareParentId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of this blade as referenced by the operating system."
            }
        }
    },
    "SoftLayer_Hardware_Chassis": {
        "name": "SoftLayer_Hardware_Chassis",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Every piece of hardware in SoftLayer's datacenters, including customer servers, are housed in one of many hardware chassis. The SoftLayer_Hardware_Chassis data type defines these chassis. ",
        "properties": {
            "backplaneCapacity": {
                "name": "backplaneCapacity",
                "type": "string",
                "form": "relational"
            },
            "bayCapacity": {
                "name": "bayCapacity",
                "type": "string",
                "form": "relational"
            },
            "driveCapacity": {
                "name": "driveCapacity",
                "type": "string",
                "form": "relational"
            },
            "driveControllerCapacity": {
                "name": "driveControllerCapacity",
                "type": "string",
                "form": "relational"
            },
            "gpuCapacity": {
                "name": "gpuCapacity",
                "type": "string",
                "form": "relational"
            },
            "hardwareFunction": {
                "name": "hardwareFunction",
                "type": "SoftLayer_Hardware_Function",
                "form": "relational",
                "doc": "A hardware's function."
            },
            "moduleCapacity": {
                "name": "moduleCapacity",
                "type": "string",
                "form": "relational"
            },
            "powerCapacity": {
                "name": "powerCapacity",
                "type": "string",
                "form": "relational"
            },
            "u2Capacity": {
                "name": "u2Capacity",
                "type": "string",
                "form": "relational"
            },
            "formFactorId": {
                "name": "formFactorId",
                "type": "int",
                "form": "local",
                "doc": "A hardware form factor internal identifier."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware chassis' internal identifier."
            },
            "manufacturer": {
                "name": "manufacturer",
                "type": "string",
                "form": "local",
                "doc": "A hardware chassis' manufacturer."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A hardware chassis' name."
            },
            "unitSize": {
                "name": "unitSize",
                "type": "int",
                "form": "local",
                "doc": "The physical size of a hardware chassis.  Currently this relates to the 'U' size of a chassis buy default."
            },
            "version": {
                "name": "version",
                "type": "string",
                "form": "local",
                "doc": "A hardware chassis' revision number."
            }
        }
    },
    "SoftLayer_Hardware_Component": {
        "name": "SoftLayer_Hardware_Component",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component data type abstracts information related to a hardware component. ",
        "properties": {
            "capacity": {
                "name": "capacity",
                "type": "decimal",
                "form": "relational",
                "doc": "A component's capacity."
            },
            "children": {
                "name": "children",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A components sub components. Devices that are usually integrated or in some way attached to a component."
            },
            "componentRevision": {
                "name": "componentRevision",
                "type": "string",
                "form": "relational",
                "doc": "A component's Revision."
            },
            "downlinkHardwareComponents": {
                "name": "downlinkHardwareComponents",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware object that this component belongs to."
            },
            "hardwareComponentModel": {
                "name": "hardwareComponentModel",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational",
                "doc": "The general group of component models."
            },
            "hardwareComponentType": {
                "name": "hardwareComponentType",
                "type": "SoftLayer_Hardware_Component_Type",
                "form": "relational",
                "doc": "A components type."
            },
            "isChildModule": {
                "name": "isChildModule",
                "type": "boolean",
                "form": "relational"
            },
            "logicalVolumeStorageGroups": {
                "name": "logicalVolumeStorageGroups",
                "type": "SoftLayer_Configuration_Storage_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "Returns the associated logic volume storage groups for the hardware component."
            },
            "m2SataSlotCapacity": {
                "name": "m2SataSlotCapacity",
                "type": "string",
                "form": "relational",
                "doc": "A component's M.2 SATA capacity."
            },
            "moduleComponents": {
                "name": "moduleComponents",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The module's hardware components"
            },
            "moduleHardwareComponents": {
                "name": "moduleHardwareComponents",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The module's hardware components"
            },
            "moduleNetworkComponents": {
                "name": "moduleNetworkComponents",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The module's network components"
            },
            "modules": {
                "name": "modules",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true
            },
            "networkComponents": {
                "name": "networkComponents",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The components local ethernet and remote management interfaces"
            },
            "owner": {
                "name": "owner",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account this component belongs to."
            },
            "parent": {
                "name": "parent",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "doc": "A components parent. Devices that are usually integrated or in some way attached to a component."
            },
            "parentModule": {
                "name": "parentModule",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational"
            },
            "prefixAttribute": {
                "name": "prefixAttribute",
                "type": "SoftLayer_Hardware_Component_Model_Generic_Attribute",
                "form": "relational"
            },
            "raidMode": {
                "name": "raidMode",
                "type": "string",
                "form": "relational",
                "doc": "A RAID controllers RAID mode."
            },
            "revision": {
                "name": "revision",
                "type": "SoftLayer_Hardware_Component_Revision",
                "form": "relational",
                "doc": "The component revision designation."
            },
            "serviceProvider": {
                "name": "serviceProvider",
                "type": "SoftLayer_Service_Provider",
                "form": "relational"
            },
            "uplinkHardwareComponents": {
                "name": "uplinkHardwareComponents",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true
            },
            "hardwareComponentModelId": {
                "name": "hardwareComponentModelId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a hardware component's component model."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the hardware that a hardware component resides inside."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware component's internal identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a hardware component was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of this component as referenced by the operating system."
            },
            "serialNumber": {
                "name": "serialNumber",
                "type": "string",
                "form": "local",
                "doc": "The component serial number."
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local",
                "doc": "A hardware's internal identification number at its service provider"
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a components sub components. Devices that are usually integrated or in some way attached to a component."
            },
            "downlinkHardwareComponentCount": {
                "name": "downlinkHardwareComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "logicalVolumeStorageGroupCount": {
                "name": "logicalVolumeStorageGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of returns the associated logic volume storage groups for the hardware component."
            },
            "moduleComponentCount": {
                "name": "moduleComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the module's hardware components"
            },
            "moduleCount": {
                "name": "moduleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "moduleHardwareComponentCount": {
                "name": "moduleHardwareComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the module's hardware components"
            },
            "moduleNetworkComponentCount": {
                "name": "moduleNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the module's network components"
            },
            "networkComponentCount": {
                "name": "networkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the components local ethernet and remote management interfaces"
            },
            "uplinkHardwareComponentCount": {
                "name": "uplinkHardwareComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Hardware_Component_Attribute": {
        "name": "SoftLayer_Hardware_Component_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Attribute data type contains general information relating to a single hardware setting or attribute for a component model. For Example: A RAID controller may be setup for many different RAID configurations.  A RAID controller with a configuration of RAID-1 will have a single attribute for this RAID setting. ",
        "properties": {
            "hardwareComponent": {
                "name": "hardwareComponent",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "doc": "A hardware component attribute's associated [[SoftLayer_Hardware_Component|Hardware Component]]."
            },
            "hardwareComponentAttributeType": {
                "name": "hardwareComponentAttributeType",
                "type": "SoftLayer_Hardware_Component_Attribute_Type",
                "form": "relational",
                "doc": "A hardware component attribute's associated [[SoftLayer_Hardware_Component_Attribute_Type|type]]."
            },
            "hardwareComponentAttributeTypeId": {
                "name": "hardwareComponentAttributeTypeId",
                "type": "int",
                "form": "local",
                "doc": "A hardware component attribute's associated [[SoftLayer_Hardware_Component_Attribute_Type|type]] Id."
            },
            "hardwareComponentId": {
                "name": "hardwareComponentId",
                "type": "int",
                "form": "local",
                "doc": "A hardware component attribute's associated [[SoftLayer_Hardware_Component|hardware component]] Id."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A hardware component attribute's value.  A value can have many different values depending on the attributes [[SoftLayer_Hardware_Component_Attribute_Type|type]]."
            }
        }
    },
    "SoftLayer_Hardware_Component_Attribute_Type": {
        "name": "SoftLayer_Hardware_Component_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Attribute_Type data type contains general information for the type of an attribute for a hardware component. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description for the date that a hardware component attribute type's [[SoftLayer_Hardware_Component_Attribute|Attribute]] contains."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware component attribute type's Id."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A hardware component attribute type's unique name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A hardware component attribute type's name."
            }
        }
    },
    "SoftLayer_Hardware_Component_DriveController": {
        "name": "SoftLayer_Hardware_Component_DriveController",
        "base": "SoftLayer_Hardware_Component",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_DriveController data type abstracts information related to a drive controller. "
    },
    "SoftLayer_Hardware_Component_Firmware": {
        "name": "SoftLayer_Hardware_Component_Firmware",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Hardware_Component_Firmware_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "hardwareComponentModel": {
                "name": "hardwareComponentModel",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational",
                "doc": "The Hardware Component Model this Firmware applies to."
            },
            "qualificationType": {
                "name": "qualificationType",
                "type": "SoftLayer_Hardware_Component_Firmware_QualificationTypes",
                "form": "relational"
            },
            "revisions": {
                "name": "revisions",
                "type": "SoftLayer_Hardware_Component_Revision",
                "form": "relational",
                "typeArray": true,
                "doc": "All revisions of this firmware."
            },
            "buildDate": {
                "name": "buildDate",
                "type": "dateTime",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "hardwareComponentModelId": {
                "name": "hardwareComponentModelId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "isQualified": {
                "name": "isQualified",
                "type": "int",
                "form": "local"
            },
            "releaseNotes": {
                "name": "releaseNotes",
                "type": "string",
                "form": "local"
            },
            "severity": {
                "name": "severity",
                "type": "int",
                "form": "local"
            },
            "version": {
                "name": "version",
                "type": "string",
                "form": "local"
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "revisionCount": {
                "name": "revisionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all revisions of this firmware."
            }
        }
    },
    "SoftLayer_Hardware_Component_Firmware_Attribute": {
        "name": "SoftLayer_Hardware_Component_Firmware_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Firmware_Attribute data type contains general information for a hardware model's firmware. ",
        "properties": {
            "firmware": {
                "name": "firmware",
                "type": "SoftLayer_Hardware_Component_Firmware",
                "form": "relational",
                "doc": "A hardware component firmware attribute's associated [[SoftLayer_Hardware_Component_Firmware|firmware]]."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Hardware_Component_Firmware_Attribute_Type",
                "form": "relational",
                "doc": "A hardware component firmware attribute's associated [[SoftLayer_Hardware_Component_Firmware_Attribute_Type|type]]."
            },
            "firmwareId": {
                "name": "firmwareId",
                "type": "int",
                "form": "local",
                "doc": "A hardware component firmware attribute's firmware Id."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware component firmware attribute's Id."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "A hardware component firmware attribute's type Id."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A hardware component firmware attribute's value."
            }
        }
    },
    "SoftLayer_Hardware_Component_Firmware_Attribute_Type": {
        "name": "SoftLayer_Hardware_Component_Firmware_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Firmware_Attribute_Type data type defines attribute types for a hardware component model's firmware. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description for the date that a hardware component attribute type's [[SoftLayer_Hardware_Component_Attribute|Attribute]] contains."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware component firmware attribute type's Id."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A hardware component firmware attribute type's unique name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A hardware component firmware attribute type's name."
            }
        }
    },
    "SoftLayer_Hardware_Component_Firmware_QualificationTypes": {
        "name": "SoftLayer_Hardware_Component_Firmware_QualificationTypes",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Firmware_QualificationTypes data type describes the current qualification status for a particular firmware. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A description about the qualificationType."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The Id of the qualificationType."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "KeyName representation for the qualificationType."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The qualificationType name."
            }
        }
    },
    "SoftLayer_Hardware_Component_HardDrive": {
        "name": "SoftLayer_Hardware_Component_HardDrive",
        "base": "SoftLayer_Hardware_Component",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_HardDrive data type abstracts information related to a hard drive. ",
        "properties": {
            "partitions": {
                "name": "partitions",
                "type": "SoftLayer_Hardware_Component_Partition",
                "form": "relational",
                "typeArray": true,
                "doc": "The attached component partitions."
            },
            "psid": {
                "name": "psid",
                "type": "string",
                "form": "relational",
                "doc": "A hard drives physical security ID."
            },
            "partitionCount": {
                "name": "partitionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the attached component partitions."
            }
        }
    },
    "SoftLayer_Hardware_Component_Locator": {
        "name": "SoftLayer_Hardware_Component_Locator",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer public API to determine the availability of generic hardware component models at data centers ",
        "methods": {
            "getGenericComponentModelAvailability": {
                "name": "getGenericComponentModelAvailability",
                "type": "SoftLayer_Hardware_Component_Locator_Result",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "genericComponentModelIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "An array of generic component model ids"
                    }
                ]
            },
            "getPackageItemsAvailability": {
                "name": "getPackageItemsAvailability",
                "type": "SoftLayer_Hardware_Component_Locator_Result",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "packageId",
                        "type": "int",
                        "doc": "Id of SoftLayer_Product_Package"
                    }
                ]
            },
            "getServerPackageAvailability": {
                "name": "getServerPackageAvailability",
                "type": "SoftLayer_Hardware_Component_Locator_Result",
                "typeArray": true,
                "static": true
            }
        }
    },
    "SoftLayer_Hardware_Component_Locator_Result": {
        "name": "SoftLayer_Hardware_Component_Locator_Result",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This object holds a generic component model id and the list of datacenter names where it is available. ",
        "properties": {
            "datacenters": {
                "name": "datacenters",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "array of datacenter names where generic component model is available"
            },
            "genericComponentModelId": {
                "name": "genericComponentModelId",
                "type": "int",
                "form": "local",
                "doc": "generic component model id"
            },
            "serverPackageId": {
                "name": "serverPackageId",
                "type": "int",
                "form": "local",
                "doc": "Id of SoftLayer_Product_Package_Server"
            }
        }
    },
    "SoftLayer_Hardware_Component_Model": {
        "name": "SoftLayer_Hardware_Component_Model",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every hardware component is associated with a model. A hardware component model defines the type of hardware component to which it is associated. The '''SoftLayer_Hardware_Component_Model''' class provides detailed information regarding the hardware component. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware_Component_Model",
                "doc": "getObject retrieves the SoftLayer_Hardware_Component_Model object. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Hardware_Component_Model data type contains general information relating to a single SoftLayer component model.  A component model represents a vendor specific representation of a hardware component.  Every piece of hardware on a server will have a specific hardware component model. ",
        "properties": {
            "architectureType": {
                "name": "architectureType",
                "type": "SoftLayer_Hardware_Component_Model_Architecture_Type",
                "form": "relational"
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Hardware_Component_Model_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "compatibleArrayTypes": {
                "name": "compatibleArrayTypes",
                "type": "SoftLayer_Configuration_Storage_Group_Array_Type",
                "form": "relational",
                "typeArray": true
            },
            "compatibleChildComponentModels": {
                "name": "compatibleChildComponentModels",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational",
                "typeArray": true,
                "doc": "All the component models that are compatible with a hardware component model."
            },
            "compatibleParentComponentModels": {
                "name": "compatibleParentComponentModels",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational",
                "typeArray": true,
                "doc": "All the component models that a hardware component model is compatible with."
            },
            "firmwareQuantity": {
                "name": "firmwareQuantity",
                "type": "unsignedInt",
                "form": "relational"
            },
            "firmwares": {
                "name": "firmwares",
                "type": "SoftLayer_Hardware_Component_Firmware",
                "form": "relational",
                "typeArray": true
            },
            "hardwareComponents": {
                "name": "hardwareComponents",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A hardware component model's physical components in inventory."
            },
            "hardwareGenericComponentModel": {
                "name": "hardwareGenericComponentModel",
                "type": "SoftLayer_Hardware_Component_Model_Generic",
                "form": "relational",
                "doc": "The non-vendor specific generic component model for a hardware component model."
            },
            "infinibandCompatibleAttribute": {
                "name": "infinibandCompatibleAttribute",
                "type": "SoftLayer_Hardware_Component_Model_Attribute",
                "form": "relational"
            },
            "isFlexSkuCompatible": {
                "name": "isFlexSkuCompatible",
                "type": "boolean",
                "form": "relational"
            },
            "isInfinibandCompatible": {
                "name": "isInfinibandCompatible",
                "type": "boolean",
                "form": "relational"
            },
            "rebootTime": {
                "name": "rebootTime",
                "type": "SoftLayer_Hardware_Component_Motherboard_Reboot_Time",
                "form": "relational",
                "doc": "A motherboard's average reboot time."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "relational",
                "doc": "A hardware component model's type."
            },
            "validAttributeTypes": {
                "name": "validAttributeTypes",
                "type": "SoftLayer_Hardware_Component_Model_Attribute_Type",
                "form": "relational",
                "typeArray": true,
                "doc": "The types of attributes that are allowed for a given hardware component model."
            },
            "architectureTypeId": {
                "name": "architectureTypeId",
                "type": "string",
                "form": "local"
            },
            "capacity": {
                "name": "capacity",
                "type": "decimal",
                "form": "local",
                "doc": "A component model's capacity. The capacity of a component model depends on the model itself.  For Example: Hard drives have a capacity that reflects the amount of data that hard drive can store. "
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A colon delimited list of hardware component model attributes."
            },
            "hardwareGenericComponentModelId": {
                "name": "hardwareGenericComponentModelId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the generic component model for a component model."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware component model's internal identifier number."
            },
            "longDescription": {
                "name": "longDescription",
                "type": "string",
                "form": "local"
            },
            "manufacturer": {
                "name": "manufacturer",
                "type": "string",
                "form": "local",
                "doc": "A hardware component model's manufacturer."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The model name of a hardware component model."
            },
            "version": {
                "name": "version",
                "type": "string",
                "form": "local",
                "doc": "The model number or model description of a hardware component model."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "compatibleArrayTypeCount": {
                "name": "compatibleArrayTypeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "compatibleChildComponentModelCount": {
                "name": "compatibleChildComponentModelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all the component models that are compatible with a hardware component model."
            },
            "compatibleParentComponentModelCount": {
                "name": "compatibleParentComponentModelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all the component models that a hardware component model is compatible with."
            },
            "firmwareCount": {
                "name": "firmwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "validAttributeTypeCount": {
                "name": "validAttributeTypeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the types of attributes that are allowed for a given hardware component model."
            }
        }
    },
    "SoftLayer_Hardware_Component_Model_Architecture_Type": {
        "name": "SoftLayer_Hardware_Component_Model_Architecture_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "children": {
                "name": "children",
                "type": "SoftLayer_Hardware_Component_Model_Architecture_Type",
                "form": "relational",
                "typeArray": true
            },
            "parent": {
                "name": "parent",
                "type": "SoftLayer_Hardware_Component_Model_Architecture_Type",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "parentId": {
                "name": "parentId",
                "type": "string",
                "form": "local"
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Hardware_Component_Model_Attribute": {
        "name": "SoftLayer_Hardware_Component_Model_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component__Model_Attribute data type contains general information relating to a single hardware setting or attribute for a component model. ",
        "properties": {
            "hardwareComponent": {
                "name": "hardwareComponent",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational"
            },
            "hardwareComponentAttributeType": {
                "name": "hardwareComponentAttributeType",
                "type": "SoftLayer_Hardware_Component_Model_Attribute_Type",
                "form": "relational"
            },
            "attributeTypeId": {
                "name": "attributeTypeId",
                "type": "int",
                "form": "local",
                "doc": "A hardware component model attribute's associated [[SoftLayer_Hardware_Component_Model_Attribute_Type|type]] Id."
            },
            "hardwareComponentModelId": {
                "name": "hardwareComponentModelId",
                "type": "int",
                "form": "local",
                "doc": "A hardware component model attribute's associated [[SoftLayer_Hardware_Component_Model|hardware component model]] Id."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A hardware component model attribute's value.  A value can have many different values depending on the attributes [[SoftLayer_Hardware_Component_Model_Attribute_Type|type]]."
            }
        }
    },
    "SoftLayer_Hardware_Component_Model_Attribute_Type": {
        "name": "SoftLayer_Hardware_Component_Model_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Model_Attribute_Type data type contains general information for the type of an attribute for a hardware component model. ",
        "properties": {
            "validComponentTypes": {
                "name": "validComponentTypes",
                "type": "SoftLayer_Hardware_Component_Type",
                "form": "relational",
                "typeArray": true
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description for the data that a hardware component model type's [[SoftLayer_Hardware_Component_Model_Attribute|Attribute]] contains."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware component model attribute type's Id."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A hardware component model attribute type's unique name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A hardware component model attribute type's name."
            },
            "validComponentTypeCount": {
                "name": "validComponentTypeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Hardware_Component_Model_Generic": {
        "name": "SoftLayer_Hardware_Component_Model_Generic",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Model_Generic data type contains general information relating to a single SoftLayer generic component model.  A generic component model represents a non-vendor specific representation of a hardware component.  Frequently SoftLayer utilizes components from various vendors in the servers they provision. For Example: Several different vendors produce 6GB DDR2 memory.  The generic component model for the 6GB stick of RAM encompasses every instance of this component regardless of make and model. ",
        "properties": {
            "hardwareComponentModels": {
                "name": "hardwareComponentModels",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational",
                "typeArray": true,
                "doc": "A generic component model's hardware component model."
            },
            "hardwareComponentType": {
                "name": "hardwareComponentType",
                "type": "SoftLayer_Hardware_Component_Type",
                "form": "relational",
                "doc": "A generic component model's type."
            },
            "marketingFeatures": {
                "name": "marketingFeatures",
                "type": "SoftLayer_Hardware_Component_Model_Generic_MarketingFeature",
                "form": "relational",
                "doc": "A list of features that a generic component model can provide."
            },
            "capacity": {
                "name": "capacity",
                "type": "decimal",
                "form": "local",
                "doc": "A generic component model's capacity. The capacity of a generic component model depends on the model itself.  For Example: Hard drives have a capacity that reflects the amount of data that hard drive can store. "
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A brief description for a generic component model that typically defines it's function. "
            },
            "hardwareComponentTypeId": {
                "name": "hardwareComponentTypeId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the component type for a generic component model. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A generic component model's internal identification number."
            },
            "units": {
                "name": "units",
                "type": "string",
                "form": "local",
                "doc": "The unit of measurement for the capacity of a generic component model. "
            },
            "upgradePriority": {
                "name": "upgradePriority",
                "type": "int",
                "form": "local",
                "doc": "A generic component model's upgrade priority. The upgrade priority indicates the order a generic component model should be considered over other generic component models. A higher number indicates that a generic component model receives a higher upgrade preference in comparison to a generic component model with a lower priority number. "
            },
            "hardwareComponentModelCount": {
                "name": "hardwareComponentModelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a generic component model's hardware component model."
            }
        }
    },
    "SoftLayer_Hardware_Component_Model_Generic_Attribute": {
        "name": "SoftLayer_Hardware_Component_Model_Generic_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Model_Generic_Attribute data type contains information relating to a single SoftLayer generic component model.  Generic component model attributes can hold any information to describe functionality of the model. For Example: The number of cores that a processor has. ",
        "properties": {
            "hardwareGenericComponentModel": {
                "name": "hardwareGenericComponentModel",
                "type": "SoftLayer_Hardware_Component_Model_Generic",
                "form": "relational",
                "doc": "An attributes generic component model."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A generic component model attribute's value."
            }
        }
    },
    "SoftLayer_Hardware_Component_Model_Generic_MarketingFeature": {
        "name": "SoftLayer_Hardware_Component_Model_Generic_MarketingFeature",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Model_Generic_MarketingFeature data type contains general information relating to all the advertising features of a single SoftLayer hardware generic component model. ",
        "properties": {
            "hardwareGenericComponentModel": {
                "name": "hardwareGenericComponentModel",
                "type": "SoftLayer_Hardware_Component_Model_Generic",
                "form": "relational",
                "doc": "The generic component model for a list of advertising or marketing features"
            },
            "features": {
                "name": "features",
                "type": "string",
                "form": "local",
                "doc": "An html formatted list of all features."
            },
            "price": {
                "name": "price",
                "type": "string",
                "form": "local",
                "doc": "A hardware component's upgrade price."
            }
        }
    },
    "SoftLayer_Hardware_Component_Motherboard": {
        "name": "SoftLayer_Hardware_Component_Motherboard",
        "base": "SoftLayer_Hardware_Component",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_DriveController data type abstracts information related to a motherboard. "
    },
    "SoftLayer_Hardware_Component_Motherboard_Reboot_Time": {
        "name": "SoftLayer_Hardware_Component_Motherboard_Reboot_Time",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Motherboard_Reboot_Time contains the average reboot times for motherboards. There are two types of average times.  One is for motherboards without raid, and the other is for motherboards with raid.  These times are based on averages and have been gathered through numerous test cases. ",
        "properties": {
            "hardwareComponentModel": {
                "name": "hardwareComponentModel",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational",
                "doc": "Motherboard's specifications (manufacturer, version, etc....)"
            },
            "withRaid": {
                "name": "withRaid",
                "type": "int",
                "form": "local",
                "doc": "Average reboot time in seconds for the motherboard when raid is installed."
            },
            "withoutRaid": {
                "name": "withoutRaid",
                "type": "int",
                "form": "local",
                "doc": "Average reboot time in seconds for the motherboard when NO raid is installed."
            }
        }
    },
    "SoftLayer_Hardware_Component_NetworkCard": {
        "name": "SoftLayer_Hardware_Component_NetworkCard",
        "base": "SoftLayer_Hardware_Component",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_NetworkCard data type abstracts information related to a network card. "
    },
    "SoftLayer_Hardware_Component_PSID_Xref": {
        "name": "SoftLayer_Hardware_Component_PSID_Xref",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_PSID_Xref data type holds physical security ID information for hard drives ",
        "properties": {
            "component": {
                "name": "component",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "doc": "The hardware component the PSID belongs to."
            },
            "componentId": {
                "name": "componentId",
                "type": "int",
                "form": "local"
            },
            "psid": {
                "name": "psid",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Hardware_Component_Partition": {
        "name": "SoftLayer_Hardware_Component_Partition",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Partition data type contains general information relating to a single hard drive partition. ",
        "properties": {
            "hardwareComponent": {
                "name": "hardwareComponent",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "doc": "A hardware component partitions's associated [[SoftLayer_Hardware_Component|Hardware Component]]. Likely to be a [[SoftLayer_Hardware_Component_HardDrive|Hard Drive]]"
            },
            "diskNumber": {
                "name": "diskNumber",
                "type": "int",
                "form": "local",
                "doc": "A hardware component partition's order in the [[SoftLayer_Hardware_Server]]."
            },
            "grow": {
                "name": "grow",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating if a partition is the grow partition. The grow partition will grow to fill all remaining space on a disk.  There can only be one. "
            },
            "hardwareComponentId": {
                "name": "hardwareComponentId",
                "type": "int",
                "form": "local",
                "doc": "A hardware component partition's associated [[SoftLayer_Hardware_Component|hardware component]] Id."
            },
            "minimumSize": {
                "name": "minimumSize",
                "type": "decimal",
                "form": "local",
                "doc": "A hardware component partition's minimum size(GB)."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A hardware component partition's name. On a server with windows this may be 'C' and on Linux this may be '/var' "
            }
        }
    },
    "SoftLayer_Hardware_Component_Partition_OperatingSystem": {
        "name": "SoftLayer_Hardware_Component_Partition_OperatingSystem",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every SoftLayer Operating System Partition Template is defined in the '''SoftLayer_Hardware_Component_Partition_OperatingSystem''' service. SoftLayer Operating System Partition Templates indicate which operating system a partition template may be used with to configure a hard drive. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Hardware_Component_Partition_OperatingSystem",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getByDescription": {
                "name": "getByDescription",
                "type": "SoftLayer_Hardware_Component_Partition_OperatingSystem",
                "doc": "The '''getByDescription''' method retrieves all possible partition templates based on the description (required parameter) entered when calling the method. The description is typically the operating system's name. Current recognized values include 'linux', 'windows', 'freebsd', and 'Debian'. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "description",
                        "type": "string",
                        "doc": "The description of the operating system"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware_Component_Partition_OperatingSystem",
                "doc": "getObject retrieves the SoftLayer_Hardware_Component_Partition_OperatingSystem object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Hardware_Component_Partition_OperatingSystem service.s ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Hardware_Component_Partition_OperatingSystem data type contains general information relating to a single SoftLayer Operating System Partition Template. ",
        "properties": {
            "partitionTemplates": {
                "name": "partitionTemplates",
                "type": "SoftLayer_Hardware_Component_Partition_Template",
                "form": "relational",
                "typeArray": true,
                "doc": "Information regarding an operating system's [[SoftLayer_Hardware_Component_Partition_Template|Partition Templates]]."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A partition template operating system's description.  Typically the title of the Operating System."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A partition template operating system's id."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Information about the kinds of partition templates assigned to this operating system."
            },
            "partitionTemplateCount": {
                "name": "partitionTemplateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of information regarding an operating system's [[SoftLayer_Hardware_Component_Partition_Template|Partition Templates]]."
            }
        }
    },
    "SoftLayer_Hardware_Component_Partition_Template": {
        "name": "SoftLayer_Hardware_Component_Partition_Template",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every SoftLayer Partition Template is defined in the SoftLayer_Hardware_Component_Partition_Template service. The '''SoftLayer_Hardware_Component_Partition_Template''' service defines all SoftLayer Partition Templates that exist. SoftLayer Partition Templates group together several partitions that define a configuration of templates for a particular hard drive. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware_Component_Partition_Template",
                "doc": "getObject retrieves the SoftLayer_Hardware_Component_Partition_Template object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Hardware_Component_Partition_Template service. You can only retrieve the partition templates that your account created or the templates predefined by SoftLayer. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Hardware_Component_Partition_Template data type contains general information relating to a single SoftLayer partition template.  Partition templates group 1 or more partition configurations that can be used to predefine how a hard drive's partitions will be configured. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "A partition template's associated [[SoftLayer_Account|Account]]."
            },
            "data": {
                "name": "data",
                "type": "SoftLayer_Hardware_Component_Partition_Template_Partition",
                "form": "relational",
                "typeArray": true,
                "doc": "An individual partition for a partition template. This is identical to 'partitionTemplatePartition' except this will sort unix partitions."
            },
            "expireDate": {
                "name": "expireDate",
                "type": "string",
                "form": "relational"
            },
            "partitionOperatingSystem": {
                "name": "partitionOperatingSystem",
                "type": "SoftLayer_Hardware_Component_Partition_OperatingSystem",
                "form": "relational",
                "doc": "A partition template's associated [[SoftLayer_Hardware_Component_Partition_OperatingSystem|Operating System]]."
            },
            "partitionTemplatePartition": {
                "name": "partitionTemplatePartition",
                "type": "SoftLayer_Hardware_Component_Partition_Template_Partition",
                "form": "relational",
                "typeArray": true,
                "doc": "An individual partition for a partition template."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A partition template's owner. The [[SoftLayer_Account|Account]] that a template was created by."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A partition template's description."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A partition template's id."
            },
            "partitionOperatingSystemId": {
                "name": "partitionOperatingSystemId",
                "type": "int",
                "form": "local",
                "doc": "A partition template's associated [[SoftLayer_Hardware_Component_Partition_OperatingSystem|Operating System]] Id."
            },
            "statusCode": {
                "name": "statusCode",
                "type": "string",
                "form": "local",
                "doc": "A partition template's status code. ACTIVE ,INACTIVE."
            },
            "templateType": {
                "name": "templateType",
                "type": "string",
                "form": "local",
                "doc": "A partition template's Type. SYSTEM - template generated by softlayer.  CUSTOM - templates generated by SoftLayer customers."
            },
            "dataCount": {
                "name": "dataCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an individual partition for a partition template. This is identical to 'partitionTemplatePartition' except this will sort unix partitions."
            },
            "partitionTemplatePartitionCount": {
                "name": "partitionTemplatePartitionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an individual partition for a partition template."
            }
        }
    },
    "SoftLayer_Hardware_Component_Partition_Template_Partition": {
        "name": "SoftLayer_Hardware_Component_Partition_Template_Partition",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Partition_Template_Partition data type contains general information relating to a single SoftLayer Template Partition. ",
        "properties": {
            "filesystemType": {
                "name": "filesystemType",
                "type": "SoftLayer_Configuration_Storage_Filesystem_Type",
                "form": "relational",
                "doc": "The filesystem type of a partition"
            },
            "partitionTemplate": {
                "name": "partitionTemplate",
                "type": "SoftLayer_Hardware_Component_Partition_Template",
                "form": "relational",
                "doc": "A partition's [[SoftLayer_Hardware_Component_Partition_Template|Partition Template]]."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A partition's id."
            },
            "isGrow": {
                "name": "isGrow",
                "type": "boolean",
                "form": "local",
                "doc": "A flag indication if a partition will be the grow partition.  The grow partition will have its size adjusted to fill all available space on a hard drive. "
            },
            "partitionName": {
                "name": "partitionName",
                "type": "string",
                "form": "local",
                "doc": "A partition's default name."
            },
            "partitionSize": {
                "name": "partitionSize",
                "type": "decimal",
                "form": "local",
                "doc": "A partition's default size."
            },
            "partitionTemplateId": {
                "name": "partitionTemplateId",
                "type": "int",
                "form": "local",
                "doc": "A partition's associated [[SoftLayer_Hardware_Component_Partition_Template|Partition Template]] Id."
            },
            "volumeNumber": {
                "name": "volumeNumber",
                "type": "int",
                "form": "local",
                "doc": "The volume the partition will be put on"
            }
        }
    },
    "SoftLayer_Hardware_Component_Processor": {
        "name": "SoftLayer_Hardware_Component_Processor",
        "base": "SoftLayer_Hardware_Component",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Processor data type abstracts information related to a processor. "
    },
    "SoftLayer_Hardware_Component_Ram": {
        "name": "SoftLayer_Hardware_Component_Ram",
        "base": "SoftLayer_Hardware_Component",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Ram data type abstracts information related to RAM. "
    },
    "SoftLayer_Hardware_Component_RemoteManagement": {
        "name": "SoftLayer_Hardware_Component_RemoteManagement",
        "base": "SoftLayer_Hardware_Component",
        "noservice": true,
        "typeDoc": "This class adds functionality to the base SoftLayer_Hardware class for web servers (all server hardware) ",
        "properties": {
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "A network component data type."
            }
        }
    },
    "SoftLayer_Hardware_Component_RemoteManagement_Command": {
        "name": "SoftLayer_Hardware_Component_RemoteManagement_Command",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Storage_Evault_Version6 contains the names of the remote management commands.  Currently, only the reboot and power commands for the remote management card exist. ",
        "properties": {
            "requests": {
                "name": "requests",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_Command_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "All requests issued for the remote management command."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The name of the remote management command."
            },
            "requestCount": {
                "name": "requestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all requests issued for the remote management command."
            }
        }
    },
    "SoftLayer_Hardware_Component_RemoteManagement_Command_Request": {
        "name": "SoftLayer_Hardware_Component_RemoteManagement_Command_Request",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_RemoteManagement_Command_Request contains details for remote management commands issued to a server's remote management card.  Details for remote management commands such as powerOn, powerOff, powerCycle, rebootDefault, rebootSoft, rebootHard can be retrieved.  Details such as the user who issued the command, the id of the remote management card the command was issued, when the command was issued may be retrieved. ",
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The id of the hardware to perform the remote management or powerstrip command on."
            },
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "A hardware's network components. Network components are hardware components such as IPMI cards or Ethernet cards."
            },
            "remoteManagementCommand": {
                "name": "remoteManagementCommand",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_Command",
                "form": "relational",
                "doc": "The remote management command issued."
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "Information regarding the user who issued the remote management command."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The timestamp the remote management command was issued."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The hardware id the command was issued for."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The timestamp recorded when the remote management command returned a status of the command issued."
            },
            "processed": {
                "name": "processed",
                "type": "boolean",
                "form": "local",
                "doc": "Execution status of the remote management command.  True is successful.  False is failure."
            }
        }
    },
    "SoftLayer_Hardware_Component_RemoteManagement_User": {
        "name": "SoftLayer_Hardware_Component_RemoteManagement_User",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The credentials used for remote management such as username, password, etc... ",
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational"
            },
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational"
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "The password used for this remote management command."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username used for this remote management command."
            }
        }
    },
    "SoftLayer_Hardware_Component_Revision": {
        "name": "SoftLayer_Hardware_Component_Revision",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "biosDate": {
                "name": "biosDate",
                "type": "dateTime",
                "form": "relational",
                "doc": "The firmware build date"
            },
            "firmware": {
                "name": "firmware",
                "type": "SoftLayer_Hardware_Component_Firmware",
                "form": "relational",
                "doc": "The Firmware installed on this record's Hardware Component."
            },
            "hardwareComponent": {
                "name": "hardwareComponent",
                "type": "SoftLayer_Hardware_Component",
                "form": "relational",
                "doc": "The Hardware Component this revision record applies to."
            },
            "revision": {
                "name": "revision",
                "type": "string",
                "form": "relational",
                "doc": "The firmware revision"
            },
            "firmwareVersionId": {
                "name": "firmwareVersionId",
                "type": "int",
                "form": "local"
            },
            "hardwareComponentId": {
                "name": "hardwareComponentId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Hardware_Component_SecurityDevice": {
        "name": "SoftLayer_Hardware_Component_SecurityDevice",
        "base": "SoftLayer_Hardware_Component",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_SecurityDevice is used to determine the security devices attached to the hardware component. "
    },
    "SoftLayer_Hardware_Component_SecurityDevice_Infineon": {
        "name": "SoftLayer_Hardware_Component_SecurityDevice_Infineon",
        "base": "SoftLayer_Hardware_Component_SecurityDevice",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_SecurityDevice_Infineon is used to determine the Infineon security device attached to the hardware component. "
    },
    "SoftLayer_Hardware_Component_Type": {
        "name": "SoftLayer_Hardware_Component_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Component_Type data type provides details on the type of component requested ",
        "properties": {
            "hardwareGenericComponentModels": {
                "name": "hardwareGenericComponentModels",
                "type": "SoftLayer_Hardware_Component_Model_Generic",
                "form": "relational",
                "typeArray": true,
                "doc": "The generic component model description for this component type object."
            },
            "typeParent": {
                "name": "typeParent",
                "type": "SoftLayer_Hardware_Component_Type",
                "form": "relational",
                "doc": "The parent generic component model object for this generic component model object."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The ID associated with this component type."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The hardware component type key name or code."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type associated with this component type."
            },
            "typeParentId": {
                "name": "typeParentId",
                "type": "int",
                "form": "local",
                "doc": "The parent id associated with this component type."
            },
            "hardwareGenericComponentModelCount": {
                "name": "hardwareGenericComponentModelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the generic component model description for this component type object."
            }
        }
    },
    "SoftLayer_Hardware_Firewall": {
        "name": "SoftLayer_Hardware_Firewall",
        "base": "SoftLayer_Hardware_Switch",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Firewall data type contains general information relating to a single SoftLayer firewall. ",
        "properties": {
            "users": {
                "name": "users",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of users that have access to this hardware firewall."
            },
            "userCount": {
                "name": "userCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of users that have access to this hardware firewall."
            }
        }
    },
    "SoftLayer_Hardware_Function": {
        "name": "SoftLayer_Hardware_Function",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Function data type contains a generic object type for a piece of hardware, like switch, firewall, server, etc.. ",
        "properties": {
            "code": {
                "name": "code",
                "type": "string",
                "form": "local",
                "doc": "The code associated with this hardware function."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description for a hardware function."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The id associated with a hardware function."
            }
        }
    },
    "SoftLayer_Hardware_Group": {
        "name": "SoftLayer_Hardware_Group",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "downlinkServers": {
                "name": "downlinkServers",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All servers attached to a network hardware."
            },
            "downlinkVirtualGuests": {
                "name": "downlinkVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All virtual guests attached to a network hardware."
            },
            "downstreamNetworkHardware": {
                "name": "downstreamNetworkHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All network hardware downstream from this hardware."
            },
            "downstreamNetworkHardwareWithIncidents": {
                "name": "downstreamNetworkHardwareWithIncidents",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All network hardware with monitoring warnings or errors downstream from this hardware."
            },
            "hardwareChassis": {
                "name": "hardwareChassis",
                "type": "SoftLayer_Hardware_Chassis",
                "form": "relational",
                "doc": "The chassis that a piece of hardware is housed in."
            },
            "networkMonitorAttachedDownHardware": {
                "name": "networkMonitorAttachedDownHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All servers attached downstream to a hardware that have failed monitoring"
            },
            "networkMonitorAttachedDownVirtualGuests": {
                "name": "networkMonitorAttachedDownVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "Virtual guests that are attached downstream to a hardware that have failed monitoring"
            },
            "networkStatus": {
                "name": "networkStatus",
                "type": "string",
                "form": "relational",
                "doc": "The value of a hardware's network status attribute."
            },
            "domain": {
                "name": "domain",
                "type": "string",
                "form": "local"
            },
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "downlinkServerCount": {
                "name": "downlinkServerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all servers attached to a network hardware."
            },
            "downlinkVirtualGuestCount": {
                "name": "downlinkVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all virtual guests attached to a network hardware."
            },
            "downstreamNetworkHardwareCount": {
                "name": "downstreamNetworkHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all network hardware downstream from this hardware."
            },
            "downstreamNetworkHardwareWithIncidentCount": {
                "name": "downstreamNetworkHardwareWithIncidentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all network hardware with monitoring warnings or errors downstream from this hardware."
            },
            "networkMonitorAttachedDownHardwareCount": {
                "name": "networkMonitorAttachedDownHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all servers attached downstream to a hardware that have failed monitoring"
            },
            "networkMonitorAttachedDownVirtualGuestCount": {
                "name": "networkMonitorAttachedDownVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of virtual guests that are attached downstream to a hardware that have failed monitoring"
            }
        }
    },
    "SoftLayer_Hardware_LoadBalancer": {
        "name": "SoftLayer_Hardware_LoadBalancer",
        "base": "SoftLayer_Hardware",
        "noservice": true,
        "properties": {
            "modelFamily": {
                "name": "modelFamily",
                "type": "string",
                "form": "relational"
            },
            "users": {
                "name": "users",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of users that have access to this hardware load balancer."
            },
            "userCount": {
                "name": "userCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of users that have access to this hardware load balancer."
            }
        }
    },
    "SoftLayer_Hardware_Note": {
        "name": "SoftLayer_Hardware_Note",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "employee": {
                "name": "employee",
                "type": "SoftLayer_User_Employee",
                "form": "relational"
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Hardware_Note_Type",
                "form": "relational"
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local"
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local"
            },
            "userRecordId": {
                "name": "userRecordId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Hardware_Note_Type": {
        "name": "SoftLayer_Hardware_Note_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Hardware_Power_Component": {
        "name": "SoftLayer_Hardware_Power_Component",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational"
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Hardware_Resource_Configuration": {
        "name": "SoftLayer_Hardware_Resource_Configuration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational"
            },
            "properties": {
                "name": "properties",
                "type": "SoftLayer_Hardware_Resource_Configuration_Property",
                "form": "relational",
                "typeArray": true
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Hardware_Resource_Configuration_Type",
                "form": "relational"
            },
            "configurationTypeId": {
                "name": "configurationTypeId",
                "type": "int",
                "form": "local"
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local"
            },
            "propertyCount": {
                "name": "propertyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Hardware_Resource_Configuration_Property": {
        "name": "SoftLayer_Hardware_Resource_Configuration_Property",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "configuration": {
                "name": "configuration",
                "type": "SoftLayer_Hardware_Resource_Configuration",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Hardware_Resource_Configuration_Property_Type",
                "form": "relational"
            },
            "configurationId": {
                "name": "configurationId",
                "type": "int",
                "form": "local"
            },
            "configurationPropertyTypeId": {
                "name": "configurationPropertyTypeId",
                "type": "int",
                "form": "local"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Hardware_Resource_Configuration_Property_Type": {
        "name": "SoftLayer_Hardware_Resource_Configuration_Property_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "properties": {
                "name": "properties",
                "type": "SoftLayer_Hardware_Resource_Configuration_Property",
                "form": "relational",
                "typeArray": true
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "unit": {
                "name": "unit",
                "type": "string",
                "form": "local"
            },
            "propertyCount": {
                "name": "propertyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Hardware_Resource_Configuration_Type": {
        "name": "SoftLayer_Hardware_Resource_Configuration_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Hardware_Router": {
        "name": "SoftLayer_Hardware_Router",
        "base": "SoftLayer_Hardware_Switch",
        "serviceDoc": "This service provides access to the device responsible for routing a particular SoftLayer Router. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware_Router",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Hardware_Router data type contains general information relating to a single SoftLayer router. ",
        "properties": {
            "boundSubnets": {
                "name": "boundSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "Associated subnets for a router object."
            },
            "localDiskStorageCapabilityFlag": {
                "name": "localDiskStorageCapabilityFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that a VLAN on the router can be assigned to a host that has local disk functionality."
            },
            "sanStorageCapabilityFlag": {
                "name": "sanStorageCapabilityFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that a VLAN on the router can be assigned to a host that has SAN disk functionality."
            },
            "boundSubnetCount": {
                "name": "boundSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of associated subnets for a router object."
            }
        }
    },
    "SoftLayer_Hardware_Router_Backend": {
        "name": "SoftLayer_Hardware_Router_Backend",
        "base": "SoftLayer_Hardware_Router",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Router_Backend data type contains general information relating to a single SoftLayer router item for hardware. "
    },
    "SoftLayer_Hardware_Router_Frontend": {
        "name": "SoftLayer_Hardware_Router_Frontend",
        "base": "SoftLayer_Hardware_Router",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Router_Frontend data type contains general information relating to a single SoftLayer router item for hardware. "
    },
    "SoftLayer_Hardware_SecurityModule": {
        "name": "SoftLayer_Hardware_SecurityModule",
        "base": "SoftLayer_Hardware_Server",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Hardware_SecurityModule",
                "doc": "\n<style type=\"text/css\">.create_object > li > div { padding-top: .5em; padding-bottom: .5em}</style> \ncreateObject() enables the creation of servers on an account. This \nmethod is a simplified alternative to interacting with the ordering system directly. \n\n\nIn order to create a server, a template object must be sent in with a few required \nvalues. \n\n\nWhen this method returns an order will have been placed for a server of the specified configuration. \n\n\nTo determine when the server is available you can poll the server via [[SoftLayer_Hardware/getObject|getObject]], \nchecking the <code>provisionDate</code> property. \nWhen <code>provisionDate</code> is not null, the server will be ready. Be sure to use the <code>globalIdentifier</code> \nas your initialization parameter. \n\n\n<b>Warning:</b> Servers created via this method will incur charges on your account. For testing input parameters see [[SoftLayer_Hardware/generateOrderTemplate|generateOrderTemplate]]. \n\n\n<b>Input</b> - [[SoftLayer_Hardware (type)|SoftLayer_Hardware]] \n<ul class=\"create_object\"> \n    <li><code>hostname</code> \n        <div>Hostname for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>domain</code> \n        <div>Domain for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>processorCoreAmount</code> \n        <div>The number of logical CPU cores to allocate.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - int</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>memoryCapacity</code> \n        <div>The amount of memory to allocate in gigabytes.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - int</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>hourlyBillingFlag</code> \n        <div>Specifies the billing type for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - boolean</li> \n            <li>When true the server will be billed on hourly usage, otherwise it will be billed on a monthly basis.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>operatingSystemReferenceCode</code> \n        <div>An identifier for the operating system to provision the server with.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>datacenter.name</code> \n        <div>Specifies which datacenter the server is to be provisioned in.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n            <li>The <code>datacenter</code> property is a [[SoftLayer_Location (type)|location]] structure with the <code>name</code> field set.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"datacenter\": { \n        \"name\": \"dal05\" \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>networkComponents.maxSpeed</code> \n        <div>Specifies the connection speed for the server's network components.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Default</b> - The highest available zero cost port speed will be used.</li> \n            <li><b>Description</b> - The <code>networkComponents</code> property is an array with a single [[SoftLayer_Network_Component (type)|network component]] structure. The <code>maxSpeed</code> property must be set to specify the network uplink speed, in megabits per second, of the server.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n            <http title=\"Example\">{ \n    \"networkComponents\": [ \n        { \n            \"maxSpeed\": 1000 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>networkComponents.redundancyEnabledFlag</code> \n        <div>Specifies whether or not the server's network components should be in redundancy groups.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - bool</li> \n            <li><b>Default</b> - <code>false</code></li> \n            <li><b>Description</b> - The <code>networkComponents</code> property is an array with a single [[SoftLayer_Network_Component (type)|network component]] structure. When the <code>redundancyEnabledFlag</code> property is true the server's network components will be in redundancy groups.</li> \n        </ul> \n            <http title=\"Example\">{ \n    \"networkComponents\": [ \n        { \n            \"redundancyEnabledFlag\": false \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>privateNetworkOnlyFlag</code> \n        <div>Specifies whether or not the server only has access to the private network</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - boolean</li> \n            <li><b>Default</b> - <code>false</code></li> \n            <li>When true this flag specifies that a server is to only have access to the private network.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>primaryNetworkComponent.networkVlan.id</code> \n        <div>Specifies the network vlan which is to be used for the frontend interface of the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Description</b> - The <code>primaryNetworkComponent</code> property is a [[SoftLayer_Network_Component (type)|network component]] structure with the <code>networkVlan</code> property populated with a [[SoftLayer_Network_Vlan (type)|vlan]] structure. The <code>id</code> property must be set to specify the frontend network vlan of the server.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"primaryNetworkComponent\": { \n        \"networkVlan\": { \n            \"id\": 1 \n        } \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>primaryBackendNetworkComponent.networkVlan.id</code> \n        <div>Specifies the network vlan which is to be used for the backend interface of the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Description</b> - The <code>primaryBackendNetworkComponent</code> property is a [[SoftLayer_Network_Component (type)|network component]] structure with the <code>networkVlan</code> property populated with a [[SoftLayer_Network_Vlan (type)|vlan]] structure. The <code>id</code> property must be set to specify the backend network vlan of the server.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"primaryBackendNetworkComponent\": { \n        \"networkVlan\": { \n            \"id\": 2 \n        } \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>fixedConfigurationPreset.keyName</code> \n        <div></div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n            <li><b>Description</b> - The <code>fixedConfigurationPreset</code> property is a [[SoftLayer_Product_Package_Preset (type)|fixed configuration preset]] structure. The <code>keyName</code> property must be set to specify preset to use.</li> \n            <li>If a fixed configuration preset is used <code>processorCoreAmount</code>, <code>memoryCapacity</code> and <code>hardDrives</code> properties must not be set.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"fixedConfigurationPreset\": { \n        \"keyName\": \"SOME_KEY_NAME\" \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>userData.value</code> \n        <div>Arbitrary data to be made available to the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n            <li><b>Description</b> - The <code>userData</code> property is an array with a single [[SoftLayer_Hardware_Attribute (type)|attribute]] structure with the <code>value</code> property set to an arbitrary value.</li> \n            <li>This value can be retrieved via the [[SoftLayer_Resource_Metadata/getUserMetadata|getUserMetadata]] method from a request originating from the server. This is primarily useful for providing data to software that may be on the server and configured to execute upon first boot.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"userData\": [ \n        { \n            \"value\": \"someValue\" \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>hardDrives</code> \n        <div>Hard drive settings for the server</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - SoftLayer_Hardware_Component</li> \n            <li><b>Default</b> - The largest available capacity for a zero cost primary disk will be used.</li> \n            <li><b>Description</b> - The <code>hardDrives</code> property is an array of [[SoftLayer_Hardware_Component (type)|hardware component]] structures.</i> \n            <li>Each hard drive must specify the <code>capacity</code> property.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"hardDrives\": [ \n        { \n            \"capacity\": 500 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li id=\"hardware-create-object-ssh-keys\"><code>sshKeys</code> \n        <div>SSH keys to install on the server upon provisioning.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - array of [[SoftLayer_Security_Ssh_Key (type)|SoftLayer_Security_Ssh_Key]]</li> \n            <li><b>Description</b> - The <code>sshKeys</code> property is an array of [[SoftLayer_Security_Ssh_Key (type)|SSH Key]] structures with the <code>id</code> property set to the value of an existing SSH key.</li> \n            <li>To create a new SSH key, call [[SoftLayer_Security_Ssh_Key/createObject|createObject]] on the [[SoftLayer_Security_Ssh_Key]] service.</li> \n            <li>To obtain a list of existing SSH keys, call [[SoftLayer_Account/getSshKeys|getSshKeys]] on the [[SoftLayer_Account]] service. \n        </ul> \n        <http title=\"Example\">{ \n    \"sshKeys\": [ \n        { \n            \"id\": 123 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>postInstallScriptUri</code> \n        <div>Specifies the uri location of the script to be downloaded and run after installation is complete.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n</ul> \n\n\n<h1>REST Example</h1> \n<http title=\"Request\">curl -X POST -d '{ \n \"parameters\":[ \n     { \n         \"hostname\": \"host1\", \n         \"domain\": \"example.com\", \n         \"processorCoreAmount\": 2, \n         \"memoryCapacity\": 2, \n         \"hourlyBillingFlag\": true, \n         \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\" \n     } \n ] \n}' https://api.softlayer.com/rest/v3/SoftLayer_Hardware.json \n</http> \n<http title=\"Response\">HTTP/1.1 201 Created \nLocation: https://api.softlayer.com/rest/v3/SoftLayer_Hardware/f5a3fcff-db1d-4b7c-9fa0-0349e41c29c5/getObject \n\n\n{ \n    \"accountId\": 232298, \n    \"bareMetalInstanceFlag\": null, \n    \"domain\": \"example.com\", \n    \"hardwareStatusId\": null, \n    \"hostname\": \"host1\", \n    \"id\": null, \n    \"serviceProviderId\": null, \n    \"serviceProviderResourceId\": null, \n    \"globalIdentifier\": \"f5a3fcff-db1d-4b7c-9fa0-0349e41c29c5\", \n    \"hourlyBillingFlag\": true, \n    \"memoryCapacity\": 2, \n    \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\", \n    \"processorCoreAmount\": 2 \n} \n</http> ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Hardware_SecurityModule",
                        "doc": "The SoftLayer_Hardware_SecurityModule object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware_SecurityModule",
                "filterable": true,
                "maskable": true
            }
        }
    },
    "SoftLayer_Hardware_SecurityModule750": {
        "name": "SoftLayer_Hardware_SecurityModule750",
        "base": "SoftLayer_Hardware_SecurityModule",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Hardware_SecurityModule750",
                "doc": "\n<style type=\"text/css\">.create_object > li > div { padding-top: .5em; padding-bottom: .5em}</style> \ncreateObject() enables the creation of servers on an account. This \nmethod is a simplified alternative to interacting with the ordering system directly. \n\n\nIn order to create a server, a template object must be sent in with a few required \nvalues. \n\n\nWhen this method returns an order will have been placed for a server of the specified configuration. \n\n\nTo determine when the server is available you can poll the server via [[SoftLayer_Hardware/getObject|getObject]], \nchecking the <code>provisionDate</code> property. \nWhen <code>provisionDate</code> is not null, the server will be ready. Be sure to use the <code>globalIdentifier</code> \nas your initialization parameter. \n\n\n<b>Warning:</b> Servers created via this method will incur charges on your account. For testing input parameters see [[SoftLayer_Hardware/generateOrderTemplate|generateOrderTemplate]]. \n\n\n<b>Input</b> - [[SoftLayer_Hardware (type)|SoftLayer_Hardware]] \n<ul class=\"create_object\"> \n    <li><code>hostname</code> \n        <div>Hostname for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>domain</code> \n        <div>Domain for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>processorCoreAmount</code> \n        <div>The number of logical CPU cores to allocate.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - int</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>memoryCapacity</code> \n        <div>The amount of memory to allocate in gigabytes.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - int</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>hourlyBillingFlag</code> \n        <div>Specifies the billing type for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - boolean</li> \n            <li>When true the server will be billed on hourly usage, otherwise it will be billed on a monthly basis.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>operatingSystemReferenceCode</code> \n        <div>An identifier for the operating system to provision the server with.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>datacenter.name</code> \n        <div>Specifies which datacenter the server is to be provisioned in.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n            <li>The <code>datacenter</code> property is a [[SoftLayer_Location (type)|location]] structure with the <code>name</code> field set.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"datacenter\": { \n        \"name\": \"dal05\" \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>networkComponents.maxSpeed</code> \n        <div>Specifies the connection speed for the server's network components.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Default</b> - The highest available zero cost port speed will be used.</li> \n            <li><b>Description</b> - The <code>networkComponents</code> property is an array with a single [[SoftLayer_Network_Component (type)|network component]] structure. The <code>maxSpeed</code> property must be set to specify the network uplink speed, in megabits per second, of the server.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n            <http title=\"Example\">{ \n    \"networkComponents\": [ \n        { \n            \"maxSpeed\": 1000 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>networkComponents.redundancyEnabledFlag</code> \n        <div>Specifies whether or not the server's network components should be in redundancy groups.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - bool</li> \n            <li><b>Default</b> - <code>false</code></li> \n            <li><b>Description</b> - The <code>networkComponents</code> property is an array with a single [[SoftLayer_Network_Component (type)|network component]] structure. When the <code>redundancyEnabledFlag</code> property is true the server's network components will be in redundancy groups.</li> \n        </ul> \n            <http title=\"Example\">{ \n    \"networkComponents\": [ \n        { \n            \"redundancyEnabledFlag\": false \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>privateNetworkOnlyFlag</code> \n        <div>Specifies whether or not the server only has access to the private network</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - boolean</li> \n            <li><b>Default</b> - <code>false</code></li> \n            <li>When true this flag specifies that a server is to only have access to the private network.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>primaryNetworkComponent.networkVlan.id</code> \n        <div>Specifies the network vlan which is to be used for the frontend interface of the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Description</b> - The <code>primaryNetworkComponent</code> property is a [[SoftLayer_Network_Component (type)|network component]] structure with the <code>networkVlan</code> property populated with a [[SoftLayer_Network_Vlan (type)|vlan]] structure. The <code>id</code> property must be set to specify the frontend network vlan of the server.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"primaryNetworkComponent\": { \n        \"networkVlan\": { \n            \"id\": 1 \n        } \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>primaryBackendNetworkComponent.networkVlan.id</code> \n        <div>Specifies the network vlan which is to be used for the backend interface of the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Description</b> - The <code>primaryBackendNetworkComponent</code> property is a [[SoftLayer_Network_Component (type)|network component]] structure with the <code>networkVlan</code> property populated with a [[SoftLayer_Network_Vlan (type)|vlan]] structure. The <code>id</code> property must be set to specify the backend network vlan of the server.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"primaryBackendNetworkComponent\": { \n        \"networkVlan\": { \n            \"id\": 2 \n        } \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>fixedConfigurationPreset.keyName</code> \n        <div></div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n            <li><b>Description</b> - The <code>fixedConfigurationPreset</code> property is a [[SoftLayer_Product_Package_Preset (type)|fixed configuration preset]] structure. The <code>keyName</code> property must be set to specify preset to use.</li> \n            <li>If a fixed configuration preset is used <code>processorCoreAmount</code>, <code>memoryCapacity</code> and <code>hardDrives</code> properties must not be set.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"fixedConfigurationPreset\": { \n        \"keyName\": \"SOME_KEY_NAME\" \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>userData.value</code> \n        <div>Arbitrary data to be made available to the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n            <li><b>Description</b> - The <code>userData</code> property is an array with a single [[SoftLayer_Hardware_Attribute (type)|attribute]] structure with the <code>value</code> property set to an arbitrary value.</li> \n            <li>This value can be retrieved via the [[SoftLayer_Resource_Metadata/getUserMetadata|getUserMetadata]] method from a request originating from the server. This is primarily useful for providing data to software that may be on the server and configured to execute upon first boot.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"userData\": [ \n        { \n            \"value\": \"someValue\" \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>hardDrives</code> \n        <div>Hard drive settings for the server</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - SoftLayer_Hardware_Component</li> \n            <li><b>Default</b> - The largest available capacity for a zero cost primary disk will be used.</li> \n            <li><b>Description</b> - The <code>hardDrives</code> property is an array of [[SoftLayer_Hardware_Component (type)|hardware component]] structures.</i> \n            <li>Each hard drive must specify the <code>capacity</code> property.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"hardDrives\": [ \n        { \n            \"capacity\": 500 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li id=\"hardware-create-object-ssh-keys\"><code>sshKeys</code> \n        <div>SSH keys to install on the server upon provisioning.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - array of [[SoftLayer_Security_Ssh_Key (type)|SoftLayer_Security_Ssh_Key]]</li> \n            <li><b>Description</b> - The <code>sshKeys</code> property is an array of [[SoftLayer_Security_Ssh_Key (type)|SSH Key]] structures with the <code>id</code> property set to the value of an existing SSH key.</li> \n            <li>To create a new SSH key, call [[SoftLayer_Security_Ssh_Key/createObject|createObject]] on the [[SoftLayer_Security_Ssh_Key]] service.</li> \n            <li>To obtain a list of existing SSH keys, call [[SoftLayer_Account/getSshKeys|getSshKeys]] on the [[SoftLayer_Account]] service. \n        </ul> \n        <http title=\"Example\">{ \n    \"sshKeys\": [ \n        { \n            \"id\": 123 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>postInstallScriptUri</code> \n        <div>Specifies the uri location of the script to be downloaded and run after installation is complete.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n</ul> \n\n\n<h1>REST Example</h1> \n<http title=\"Request\">curl -X POST -d '{ \n \"parameters\":[ \n     { \n         \"hostname\": \"host1\", \n         \"domain\": \"example.com\", \n         \"processorCoreAmount\": 2, \n         \"memoryCapacity\": 2, \n         \"hourlyBillingFlag\": true, \n         \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\" \n     } \n ] \n}' https://api.softlayer.com/rest/v3/SoftLayer_Hardware.json \n</http> \n<http title=\"Response\">HTTP/1.1 201 Created \nLocation: https://api.softlayer.com/rest/v3/SoftLayer_Hardware/f5a3fcff-db1d-4b7c-9fa0-0349e41c29c5/getObject \n\n\n{ \n    \"accountId\": 232298, \n    \"bareMetalInstanceFlag\": null, \n    \"domain\": \"example.com\", \n    \"hardwareStatusId\": null, \n    \"hostname\": \"host1\", \n    \"id\": null, \n    \"serviceProviderId\": null, \n    \"serviceProviderResourceId\": null, \n    \"globalIdentifier\": \"f5a3fcff-db1d-4b7c-9fa0-0349e41c29c5\", \n    \"hourlyBillingFlag\": true, \n    \"memoryCapacity\": 2, \n    \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\", \n    \"processorCoreAmount\": 2 \n} \n</http> ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Hardware_SecurityModule750",
                        "doc": "The SoftLayer_Hardware_SecurityModule750 object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware_SecurityModule750",
                "filterable": true,
                "maskable": true
            }
        }
    },
    "SoftLayer_Hardware_Server": {
        "name": "SoftLayer_Hardware_Server",
        "base": "SoftLayer_Hardware",
        "serviceDoc": "Every SoftLayer server is defined in the SoftLayer_Hardware_Server service. SoftLayer servers have all the functionality of SoftLayer_Hardware with the of server specific data and functionality such as Operating System reload dates and motherboard components. The SoftLayer_Hardware service is a convenient way to obtain general information about your SoftLayer server. Use the data returned by these methods with other API services to get more detailed information about your services and to make changes to your servers and services. ",
        "methods": {
            "activatePrivatePort": {
                "name": "activatePrivatePort",
                "type": "boolean",
                "doc": "Activate a server's private network interface to the maximum available speed. This operation is an alias for [[SoftLayer_Hardware_Server/setPrivateNetworkInterfaceSpeed]] with a $newSpeed of -1 and a $redundancy of \"redundant\" or unspecified (which results in the best available redundancy state). \n\nReceipt of a response does not indicate completion of the configuration change. Any subsequent attempts to request the interface change speed or state, while changes are pending, will result in a busy error. \n\nA response of true indicates a change was required to activate the interface; thus changes are pending. A response of false indicates the interface was already active, and thus no changes are pending. "
            },
            "activatePublicPort": {
                "name": "activatePublicPort",
                "type": "boolean",
                "doc": "Activate a server's public network interface to the maximum available speed. This operation is an alias for [[SoftLayer_Hardware_Server/setPublicNetworkInterfaceSpeed]] with a $newSpeed of -1 and a $redundancy of \"redundant\" or unspecified (which results in the best available redundancy state). \n\nReceipt of a response does not indicate completion of the configuration change. Any subsequent attempts to request the interface change speed or state, while changes are pending, will result in a busy error. \n\nA response of true indicates a change was required to activate the interface; thus changes are pending. A response of false indicates the interface was already active, and thus no changes are pending. "
            },
            "bootToRescueLayer": {
                "name": "bootToRescueLayer",
                "type": "boolean",
                "doc": "The Rescue Kernel is designed to provide you with the ability to bring a server online in order to troubleshoot system problems that would normally only be resolved by an OS Reload. The correct Rescue Kernel will be selected based upon the currently installed operating system. When the rescue kernel process is initiated, the server will shutdown and reboot on to the public network with the same IP's assigned to the server to allow for remote connections. It will bring your server offline for approximately 10 minutes while the rescue is in progress. The root/administrator password will be the same as what is listed in the portal for the server. ",
                "parameters": [
                    {
                        "name": "noOsBootEnvironment",
                        "type": "string",
                        "doc": "Optionally specify which rescue environment to boot into (currently accepts LINUX or WINDOWS). Only applies to No-OS Servers. Defaults to LINUX.",
                        "defaultValue": null
                    }
                ]
            },
            "createFirmwareReflashTransaction": {
                "name": "createFirmwareReflashTransaction",
                "type": "boolean",
                "doc": "You can launch firmware reflash by selecting from your server list. It will bring your server offline for approximately 60 minutes while the flashes are in progress. \n\nIn the event of a hardware failure during this our datacenter engineers will be notified of the problem automatically. They will then replace any failed components to bring your server back online, and will be contacting you to ensure that impact on your server is minimal. ",
                "parameters": [
                    {
                        "name": "ipmi",
                        "type": "int",
                        "doc": "reflash ipmi firmware",
                        "defaultValue": null
                    },
                    {
                        "name": "raidController",
                        "type": "int",
                        "doc": "reflash raid controller firmware",
                        "defaultValue": null
                    },
                    {
                        "name": "bios",
                        "type": "int",
                        "doc": "reflash bios firmware",
                        "defaultValue": null
                    }
                ]
            },
            "createFirmwareUpdateTransaction": {
                "name": "createFirmwareUpdateTransaction",
                "type": "boolean",
                "doc": "You can launch firmware updates by selecting from your server list. It will bring your server offline for approximately 20 minutes while the updates are in progress. \n\nIn the event of a hardware failure during this test our datacenter engineers will be notified of the problem automatically. They will then replace any failed components to bring your server back online, and will be contacting you to ensure that impact on your server is minimal. ",
                "parameters": [
                    {
                        "name": "ipmi",
                        "type": "int",
                        "doc": "update ipmi firmware",
                        "defaultValue": null
                    },
                    {
                        "name": "raidController",
                        "type": "int",
                        "doc": "update raid controller firmware",
                        "defaultValue": null
                    },
                    {
                        "name": "bios",
                        "type": "int",
                        "doc": "update bios firmware",
                        "defaultValue": null
                    },
                    {
                        "name": "harddrive",
                        "type": "int",
                        "doc": "update hard drive firmware",
                        "defaultValue": null
                    }
                ]
            },
            "createHyperThreadingUpdateTransaction": {
                "name": "createHyperThreadingUpdateTransaction",
                "type": "boolean",
                "doc": "You can launch hyper-threading update by selecting from your server list. It will bring your server offline for approximately 60 minutes while the update is in progress. \n\nIn the event of a hardware failure during this our datacenter engineers will be notified of the problem automatically. They will then replace any failed components to bring your server back online, and will be contacting you to ensure that impact on your server is minimal. ",
                "parameters": [
                    {
                        "name": "disableHyperthreading",
                        "type": "int",
                        "doc": "disable hyper-threading",
                        "defaultValue": null
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Hardware_Server",
                "doc": "\n<style type=\"text/css\">.create_object > li > div { padding-top: .5em; padding-bottom: .5em}</style> \ncreateObject() enables the creation of servers on an account. This \nmethod is a simplified alternative to interacting with the ordering system directly. \n\n\nIn order to create a server, a template object must be sent in with a few required \nvalues. \n\n\nWhen this method returns an order will have been placed for a server of the specified configuration. \n\n\nTo determine when the server is available you can poll the server via [[SoftLayer_Hardware/getObject|getObject]], \nchecking the <code>provisionDate</code> property. \nWhen <code>provisionDate</code> is not null, the server will be ready. Be sure to use the <code>globalIdentifier</code> \nas your initialization parameter. \n\n\n<b>Warning:</b> Servers created via this method will incur charges on your account. For testing input parameters see [[SoftLayer_Hardware/generateOrderTemplate|generateOrderTemplate]]. \n\n\n<b>Input</b> - [[SoftLayer_Hardware (type)|SoftLayer_Hardware]] \n<ul class=\"create_object\"> \n    <li><code>hostname</code> \n        <div>Hostname for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>domain</code> \n        <div>Domain for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>processorCoreAmount</code> \n        <div>The number of logical CPU cores to allocate.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - int</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>memoryCapacity</code> \n        <div>The amount of memory to allocate in gigabytes.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - int</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>hourlyBillingFlag</code> \n        <div>Specifies the billing type for the server.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - boolean</li> \n            <li>When true the server will be billed on hourly usage, otherwise it will be billed on a monthly basis.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>operatingSystemReferenceCode</code> \n        <div>An identifier for the operating system to provision the server with.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>datacenter.name</code> \n        <div>Specifies which datacenter the server is to be provisioned in.</div><ul> \n            <li><b>Required</b></li> \n            <li><b>Type</b> - string</li> \n            <li>The <code>datacenter</code> property is a [[SoftLayer_Location (type)|location]] structure with the <code>name</code> field set.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"datacenter\": { \n        \"name\": \"dal05\" \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>networkComponents.maxSpeed</code> \n        <div>Specifies the connection speed for the server's network components.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Default</b> - The highest available zero cost port speed will be used.</li> \n            <li><b>Description</b> - The <code>networkComponents</code> property is an array with a single [[SoftLayer_Network_Component (type)|network component]] structure. The <code>maxSpeed</code> property must be set to specify the network uplink speed, in megabits per second, of the server.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n            <http title=\"Example\">{ \n    \"networkComponents\": [ \n        { \n            \"maxSpeed\": 1000 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>networkComponents.redundancyEnabledFlag</code> \n        <div>Specifies whether or not the server's network components should be in redundancy groups.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - bool</li> \n            <li><b>Default</b> - <code>false</code></li> \n            <li><b>Description</b> - The <code>networkComponents</code> property is an array with a single [[SoftLayer_Network_Component (type)|network component]] structure. When the <code>redundancyEnabledFlag</code> property is true the server's network components will be in redundancy groups.</li> \n        </ul> \n            <http title=\"Example\">{ \n    \"networkComponents\": [ \n        { \n            \"redundancyEnabledFlag\": false \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>privateNetworkOnlyFlag</code> \n        <div>Specifies whether or not the server only has access to the private network</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - boolean</li> \n            <li><b>Default</b> - <code>false</code></li> \n            <li>When true this flag specifies that a server is to only have access to the private network.</li> \n        </ul> \n        <br /> \n    </li> \n    <li><code>primaryNetworkComponent.networkVlan.id</code> \n        <div>Specifies the network vlan which is to be used for the frontend interface of the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Description</b> - The <code>primaryNetworkComponent</code> property is a [[SoftLayer_Network_Component (type)|network component]] structure with the <code>networkVlan</code> property populated with a [[SoftLayer_Network_Vlan (type)|vlan]] structure. The <code>id</code> property must be set to specify the frontend network vlan of the server.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"primaryNetworkComponent\": { \n        \"networkVlan\": { \n            \"id\": 1 \n        } \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>primaryBackendNetworkComponent.networkVlan.id</code> \n        <div>Specifies the network vlan which is to be used for the backend interface of the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - int</li> \n            <li><b>Description</b> - The <code>primaryBackendNetworkComponent</code> property is a [[SoftLayer_Network_Component (type)|network component]] structure with the <code>networkVlan</code> property populated with a [[SoftLayer_Network_Vlan (type)|vlan]] structure. The <code>id</code> property must be set to specify the backend network vlan of the server.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"primaryBackendNetworkComponent\": { \n        \"networkVlan\": { \n            \"id\": 2 \n        } \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>fixedConfigurationPreset.keyName</code> \n        <div></div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n            <li><b>Description</b> - The <code>fixedConfigurationPreset</code> property is a [[SoftLayer_Product_Package_Preset (type)|fixed configuration preset]] structure. The <code>keyName</code> property must be set to specify preset to use.</li> \n            <li>If a fixed configuration preset is used <code>processorCoreAmount</code>, <code>memoryCapacity</code> and <code>hardDrives</code> properties must not be set.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"fixedConfigurationPreset\": { \n        \"keyName\": \"SOME_KEY_NAME\" \n    } \n}</http> \n        <br /> \n    </li> \n    <li><code>userData.value</code> \n        <div>Arbitrary data to be made available to the server.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n            <li><b>Description</b> - The <code>userData</code> property is an array with a single [[SoftLayer_Hardware_Attribute (type)|attribute]] structure with the <code>value</code> property set to an arbitrary value.</li> \n            <li>This value can be retrieved via the [[SoftLayer_Resource_Metadata/getUserMetadata|getUserMetadata]] method from a request originating from the server. This is primarily useful for providing data to software that may be on the server and configured to execute upon first boot.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"userData\": [ \n        { \n            \"value\": \"someValue\" \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>hardDrives</code> \n        <div>Hard drive settings for the server</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - SoftLayer_Hardware_Component</li> \n            <li><b>Default</b> - The largest available capacity for a zero cost primary disk will be used.</li> \n            <li><b>Description</b> - The <code>hardDrives</code> property is an array of [[SoftLayer_Hardware_Component (type)|hardware component]] structures.</i> \n            <li>Each hard drive must specify the <code>capacity</code> property.</li> \n            <li>See [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] for available options.</li> \n        </ul> \n        <http title=\"Example\">{ \n    \"hardDrives\": [ \n        { \n            \"capacity\": 500 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li id=\"hardware-create-object-ssh-keys\"><code>sshKeys</code> \n        <div>SSH keys to install on the server upon provisioning.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - array of [[SoftLayer_Security_Ssh_Key (type)|SoftLayer_Security_Ssh_Key]]</li> \n            <li><b>Description</b> - The <code>sshKeys</code> property is an array of [[SoftLayer_Security_Ssh_Key (type)|SSH Key]] structures with the <code>id</code> property set to the value of an existing SSH key.</li> \n            <li>To create a new SSH key, call [[SoftLayer_Security_Ssh_Key/createObject|createObject]] on the [[SoftLayer_Security_Ssh_Key]] service.</li> \n            <li>To obtain a list of existing SSH keys, call [[SoftLayer_Account/getSshKeys|getSshKeys]] on the [[SoftLayer_Account]] service. \n        </ul> \n        <http title=\"Example\">{ \n    \"sshKeys\": [ \n        { \n            \"id\": 123 \n        } \n    ] \n}</http> \n        <br /> \n    </li> \n    <li><code>postInstallScriptUri</code> \n        <div>Specifies the uri location of the script to be downloaded and run after installation is complete.</div><ul> \n            <li><b>Optional</b></li> \n            <li><b>Type</b> - string</li> \n        </ul> \n        <br /> \n    </li> \n</ul> \n\n\n<h1>REST Example</h1> \n<http title=\"Request\">curl -X POST -d '{ \n \"parameters\":[ \n     { \n         \"hostname\": \"host1\", \n         \"domain\": \"example.com\", \n         \"processorCoreAmount\": 2, \n         \"memoryCapacity\": 2, \n         \"hourlyBillingFlag\": true, \n         \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\" \n     } \n ] \n}' https://api.softlayer.com/rest/v3/SoftLayer_Hardware.json \n</http> \n<http title=\"Response\">HTTP/1.1 201 Created \nLocation: https://api.softlayer.com/rest/v3/SoftLayer_Hardware/f5a3fcff-db1d-4b7c-9fa0-0349e41c29c5/getObject \n\n\n{ \n    \"accountId\": 232298, \n    \"bareMetalInstanceFlag\": null, \n    \"domain\": \"example.com\", \n    \"hardwareStatusId\": null, \n    \"hostname\": \"host1\", \n    \"id\": null, \n    \"serviceProviderId\": null, \n    \"serviceProviderResourceId\": null, \n    \"globalIdentifier\": \"f5a3fcff-db1d-4b7c-9fa0-0349e41c29c5\", \n    \"hourlyBillingFlag\": true, \n    \"memoryCapacity\": 2, \n    \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\", \n    \"processorCoreAmount\": 2 \n} \n</http> ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Hardware_Server",
                        "doc": "The SoftLayer_Hardware_Server object that you wish to create."
                    }
                ]
            },
            "createPostSoftwareInstallTransaction": {
                "name": "createPostSoftwareInstallTransaction",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "installCodes",
                        "type": "string",
                        "typeArray": true,
                        "doc": "comma separated string of install codes"
                    },
                    {
                        "name": "returnBoolean",
                        "type": "boolean",
                        "doc": "return a true/false or an exception and a transaction",
                        "defaultValue": false
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit a server's properties ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Hardware_Server",
                        "doc": "A skeleton SoftLayer_Hardware_Server object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getBackendBandwidthUsage": {
                "name": "getBackendBandwidthUsage",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Use this method to return an array of private bandwidth utilization records between a given date range. \n\nThis method represents the NEW version of getFrontendBandwidthUse ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "Date from which to begin retrieving bandwidth data (inclusive)."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "Date at which to stop retrieving bandwidth data (inclusive)."
                    }
                ]
            },
            "getBackendBandwidthUse": {
                "name": "getBackendBandwidthUse",
                "type": "SoftLayer_Network_Bandwidth_Version1_Usage_Detail",
                "typeArray": true,
                "doc": "Use this method to return an array of private bandwidth utilization records between a given date range. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "Date from which to begin retrieving bandwidth data (inclusive)."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "Date at which to stop retrieving bandwidth data (inclusive)."
                    }
                ]
            },
            "getBandwidthForDateRange": {
                "name": "getBandwidthForDateRange",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve a collection of bandwidth data from an individual public or private network tracking object. Data is ideal if you with to employ your own traffic storage and graphing systems. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The starting date of the range of data you wish to collect."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The ending date of the range of data you wish to collect."
                    }
                ]
            },
            "getBandwidthImage": {
                "name": "getBandwidthImage",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Use this method when needing a bandwidth image for a single server.  It will gather the correct input parameters for the generic graphing utility automatically based on the snapshot specified.  Use the $draw flag to suppress the generation of the actual binary PNG image. ",
                "parameters": [
                    {
                        "name": "networkType",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"public\">public</li> <li title=\"private\">private</li> </ul>"
                    },
                    {
                        "name": "snapshotRange",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"day\">day</li> <li title=\"week\">week</li> <li title=\"30day\">30day</li> <li title=\"previous_calendar_month\">previous_calendar_month</li> <li title=\"current_calendar_month\">current_calendar_month</li> <li title=\"current_billing_cycle\">current_billing_cycle</li> <li title=\"previous_billing_cycle\">previous_billing_cycle</li> <li title=\"specified_day\">specified_day</li> <li title=\"specified_range\">specified_range</li> </ul>"
                    },
                    {
                        "name": "draw",
                        "type": "boolean",
                        "doc": "TRUE to generate binary image otherwise just return text",
                        "defaultValue": true
                    },
                    {
                        "name": "dateSpecified",
                        "type": "dateTime",
                        "doc": "Include this parameter when snapshot is 'specified_day' or 'specified_range'.  Needs to be formatted as: 'MM/DD/YYYY'",
                        "defaultValue": null
                    },
                    {
                        "name": "dateSpecifiedEnd",
                        "type": "dateTime",
                        "doc": "Include this parameter when snapshotRange is 'specified_range'.  Also formatted as 'MM/DD/YYYY'.",
                        "defaultValue": null
                    }
                ]
            },
            "getBootModeOptions": {
                "name": "getBootModeOptions",
                "type": "string",
                "typeArray": true,
                "doc": "Retrieve the valid boot modes for this server "
            },
            "getCurrentBenchmarkCertificationResultFile": {
                "name": "getCurrentBenchmarkCertificationResultFile",
                "type": "base64Binary",
                "doc": "Attempt to retrieve the file associated with the current benchmark certification result, if such a file exists.  If there is no file for this benchmark certification result, calling this method throws an exception. "
            },
            "getCustomBandwidthDataByDate": {
                "name": "getCustomBandwidthDataByDate",
                "type": "SoftLayer_Container_Graph",
                "doc": "Retrieve bandwidth graph by date. ",
                "parameters": [
                    {
                        "name": "graphData",
                        "type": "SoftLayer_Container_Graph"
                    }
                ]
            },
            "getFirewallProtectableSubnets": {
                "name": "getFirewallProtectableSubnets",
                "type": "SoftLayer_Network_Subnet",
                "typeArray": true,
                "doc": "Get the subnets associated with this server that are protectable by a network component firewall. ",
                "maskable": true
            },
            "getFrontendBandwidthUsage": {
                "name": "getFrontendBandwidthUsage",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Use this method to return an array of public bandwidth utilization records between a given date range. \n\nThis method represents the NEW version of getFrontendBandwidthUse ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "Date from which to begin retrieving bandwidth data (inclusive)."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "Date at which to stop retrieving bandwidth data (inclusive)."
                    }
                ]
            },
            "getFrontendBandwidthUse": {
                "name": "getFrontendBandwidthUse",
                "type": "SoftLayer_Network_Bandwidth_Version1_Usage_Detail",
                "typeArray": true,
                "doc": "Use this method to return an array of public bandwidth utilization records between a given date range. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "Date from which to begin retrieving bandwidth data (inclusive)."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "Date at which to stop retrieving bandwidth data (inclusive)."
                    }
                ]
            },
            "getHardwareByIpAddress": {
                "name": "getHardwareByIpAddress",
                "type": "SoftLayer_Hardware_Server",
                "doc": "Retrieve a server by searching for the primary IP address. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The IP address for the server you would like to locate."
                    }
                ]
            },
            "getItemPricesFromSoftwareDescriptions": {
                "name": "getItemPricesFromSoftwareDescriptions",
                "type": "SoftLayer_Product_Item",
                "typeArray": true,
                "doc": "Return a collection of SoftLayer_Item_Price objects from a collection of SoftLayer_Software_Description",
                "maskable": true,
                "parameters": [
                    {
                        "name": "softwareDescriptions",
                        "type": "SoftLayer_Software_Description",
                        "typeArray": true,
                        "doc": "The software that the item prices will be returned for."
                    },
                    {
                        "name": "includeTranslationsFlag",
                        "type": "boolean",
                        "doc": "The flag to specify whether software translations should be considered when looking at the software descriptions.",
                        "defaultValue": false
                    },
                    {
                        "name": "returnAllPricesFlag",
                        "type": "boolean",
                        "doc": "The flag to specify whether all item prices or just the first price for the software descriptions.",
                        "defaultValue": false
                    }
                ]
            },
            "getManagementNetworkComponent": {
                "name": "getManagementNetworkComponent",
                "type": "SoftLayer_Network_Component",
                "doc": "Retrieve the remote management network component attached with this server. ",
                "maskable": true
            },
            "getNetworkComponentFirewallProtectableIpAddresses": {
                "name": "getNetworkComponentFirewallProtectableIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "typeArray": true,
                "doc": "Get the IP addresses associated with this server that are protectable by a network component firewall. Note, this may not return all values for IPv6 subnets for this server. Please use getFirewallProtectableSubnets to get all protectable subnets. ",
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Hardware_Server",
                "doc": "getObject retrieves the SoftLayer_Hardware_Server object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Hardware service. You can only retrieve servers from the account that your portal user is assigned to. ",
                "filterable": true,
                "maskable": true
            },
            "getPMInfo": {
                "name": "getPMInfo",
                "type": "SoftLayer_Container_RemoteManagement_PmInfo",
                "typeArray": true,
                "doc": "Retrieve a server's hardware state via its internal sensors. Remote sensor data is transmitted to the SoftLayer API by way of the server's remote management card. Sensor data measures system temperatures, voltages, and other local server settings. Sensor data is cached for 30 seconds. Calls made to getSensorData for the same server within 30 seconds of each other will return the same data. Subsequent calls will return new data once the cache expires. "
            },
            "getPrimaryDriveSize": {
                "name": "getPrimaryDriveSize",
                "type": "int"
            },
            "getPrivateBandwidthDataSummary": {
                "name": "getPrivateBandwidthDataSummary",
                "type": "SoftLayer_Container_Network_Bandwidth_Data_Summary",
                "doc": "Retrieve a brief summary of a server's private network bandwidth usage. getPrivateBandwidthDataSummary retrieves a server's bandwidth allocation for its billing period, its estimated usage during its billing period, and an estimation of how much bandwidth it will use during its billing period based on its current usage. A server's projected bandwidth usage increases in accuracy as it progresses through its billing period. "
            },
            "getPrivateBandwidthGraphImage": {
                "name": "getPrivateBandwidthGraphImage",
                "type": "base64Binary",
                "doc": "Retrieve a graph of a server's private network bandwidth usage over the specified time frame. If no time frame is specified then getPublicBandwidthGraphImage retrieves the last 24 hours of public bandwidth usage. getPublicBandwidthGraphImage returns a PNG image ",
                "parameters": [
                    {
                        "name": "startTime",
                        "type": "string",
                        "doc": "The starting point to retrieve bandwidth data from, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    },
                    {
                        "name": "endTime",
                        "type": "string",
                        "doc": "The end point to retrieve bandwidth data to, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    }
                ]
            },
            "getPrivateNetworkComponent": {
                "name": "getPrivateNetworkComponent",
                "type": "SoftLayer_Network_Component",
                "doc": "Retrieve the private network component attached with this server. ",
                "maskable": true
            },
            "getPrivateVlan": {
                "name": "getPrivateVlan",
                "type": "SoftLayer_Network_Vlan",
                "doc": "Retrieve the backend VLAN for the primary IP address of the server ",
                "maskable": true
            },
            "getPrivateVlanByIpAddress": {
                "name": "getPrivateVlanByIpAddress",
                "type": "SoftLayer_Network_Vlan",
                "doc": "\n*** DEPRECATED ***\nRetrieve a backend network VLAN by searching for an IP address ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The server's IP address you are searching for."
                    }
                ]
            },
            "getProvisionDate": {
                "name": "getProvisionDate",
                "type": "dateTime"
            },
            "getPublicBandwidthDataSummary": {
                "name": "getPublicBandwidthDataSummary",
                "type": "SoftLayer_Container_Network_Bandwidth_Data_Summary",
                "doc": "Retrieve a brief summary of a server's public network bandwidth usage. getPublicBandwidthDataSummary retrieves a server's bandwidth allocation for its billing period, its estimated usage during its billing period, and an estimation of how much bandwidth it will use during its billing period based on its current usage. A server's projected bandwidth usage increases in accuracy as it progresses through its billing period. "
            },
            "getPublicBandwidthGraphImage": {
                "name": "getPublicBandwidthGraphImage",
                "type": "base64Binary",
                "doc": "Retrieve a graph of a server's public network bandwidth usage over the specified time frame. If no time frame is specified then getPublicBandwidthGraphImage retrieves the last 24 hours of public bandwidth usage. getPublicBandwidthGraphImage returns a PNG image measuring 827 pixels by 293 pixels.  THIS METHOD GENERATES GRAPHS BASED ON THE NEW DATA WAREHOUSE REPOSITORY. ",
                "parameters": [
                    {
                        "name": "startTime",
                        "type": "dateTime",
                        "doc": "The starting point to retrieve bandwidth data from, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    },
                    {
                        "name": "endTime",
                        "type": "dateTime",
                        "doc": "The end point to retrieve bandwidth data to, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    }
                ]
            },
            "getPublicBandwidthTotal": {
                "name": "getPublicBandwidthTotal",
                "type": "unsignedLong",
                "doc": "Retrieve the total number of bytes used by a server over a specified time period via the data warehouse tracking objects for this hardware. ",
                "parameters": [
                    {
                        "name": "startTime",
                        "type": "int",
                        "doc": "The starting point to retrieve bandwidth data from, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    },
                    {
                        "name": "endTime",
                        "type": "int",
                        "doc": "The end point to retrieve bandwidth data to, specified as a [[dateTime|date]].",
                        "defaultValue": 0
                    }
                ]
            },
            "getPublicNetworkComponent": {
                "name": "getPublicNetworkComponent",
                "type": "SoftLayer_Network_Component",
                "doc": "Retrieve a SoftLayer server's public network component. Some servers are only connected to the private network and may not have a public network component. In that case getPublicNetworkComponent returns a null object. ",
                "maskable": true
            },
            "getPublicVlan": {
                "name": "getPublicVlan",
                "type": "SoftLayer_Network_Vlan",
                "doc": "Retrieve the frontend VLAN for the primary IP address of the server ",
                "maskable": true
            },
            "getPublicVlanByHostname": {
                "name": "getPublicVlanByHostname",
                "type": "SoftLayer_Network_Vlan",
                "doc": "Retrieve the frontend network Vlan by searching the hostname of a server ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "hostname",
                        "type": "string",
                        "doc": "The hostname for a server, example: www.server.com"
                    }
                ]
            },
            "getReverseDomainRecords": {
                "name": "getReverseDomainRecords",
                "type": "SoftLayer_Dns_Domain",
                "typeArray": true,
                "doc": "Retrieve the reverse domain records associated with this server. ",
                "maskable": true
            },
            "getSensorData": {
                "name": "getSensorData",
                "type": "SoftLayer_Container_RemoteManagement_SensorReading",
                "typeArray": true,
                "doc": "Retrieve a server's hardware state via its internal sensors. Remote sensor data is transmitted to the SoftLayer API by way of the server's remote management card. Sensor data measures system temperatures, voltages, and other local server settings. Sensor data is cached for 30 seconds. Calls made to getSensorData for the same server within 30 seconds of each other will return the same data. Subsequent calls will return new data once the cache expires. "
            },
            "getSensorDataWithGraphs": {
                "name": "getSensorDataWithGraphs",
                "type": "SoftLayer_Container_RemoteManagement_SensorReadingsWithGraphs",
                "doc": "Retrieves the raw data returned from the server's remote management card.  For more details of what is returned please refer to the getSensorData method.  Along with the raw data, graphs for the cpu and system temperatures and fan speeds are also returned. "
            },
            "getServerDetails": {
                "name": "getServerDetails",
                "type": "SoftLayer_Container_Hardware_Server_Details",
                "doc": "Retrieve a server's hardware components, software, and network components. getServerDetails is an aggregation function that combines the results of [[SoftLayer_Hardware_Server::getComponents]], [[SoftLayer_Hardware_Server::getSoftware]], and [[SoftLayer_Hardware_Server::getNetworkComponents]] in a single container. "
            },
            "getServerFanSpeedGraphs": {
                "name": "getServerFanSpeedGraphs",
                "type": "SoftLayer_Container_RemoteManagement_Graphs_SensorSpeed",
                "typeArray": true,
                "doc": "Retrieve the server's fan speeds and displays them using tachometer graphs.  Data used to construct graphs is retrieved from the server's remote management card.  All graphs returned will have a title associated with it. "
            },
            "getServerPowerState": {
                "name": "getServerPowerState",
                "type": "string",
                "doc": "Retrieves the power state for the server.  The server's power status is retrieved from its remote management card.  This will return 'on' or 'off'. "
            },
            "getServerTemperatureGraphs": {
                "name": "getServerTemperatureGraphs",
                "type": "SoftLayer_Container_RemoteManagement_Graphs_SensorTemperature",
                "typeArray": true,
                "doc": "Retrieve the server's temperature and displays them using thermometer graphs.  Temperatures retrieved are CPU(s) and system temperatures.  Data used to construct graphs is retrieved from the server's remote management card.  All graphs returned will have a title associated with it. "
            },
            "getValidBlockDeviceTemplateGroups": {
                "name": "getValidBlockDeviceTemplateGroups",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "typeArray": true,
                "doc": "This method will return the list of block device template groups that are valid to the host. For instance, it will only retrieve FLEX images. ",
                "limitable": true,
                "filterable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "visibility",
                        "type": "string",
                        "doc": "whether to return the private, public or all image templates.  possible values are: private, public, all",
                        "defaultValue": "all"
                    }
                ]
            },
            "getWindowsUpdateAvailableUpdates": {
                "name": "getWindowsUpdateAvailableUpdates",
                "type": "SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_UpdateItem",
                "typeArray": true,
                "doc": "Retrieve a list of Windows updates available for a server from the local SoftLayer Windows Server Update Services (WSUS) server. Windows servers provisioned by SoftLayer are configured to use the local WSUS server via the private network by default. "
            },
            "getWindowsUpdateInstalledUpdates": {
                "name": "getWindowsUpdateInstalledUpdates",
                "type": "SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_UpdateItem",
                "typeArray": true,
                "doc": "Retrieve a list of Windows updates installed on a server as reported by the local SoftLayer Windows Server Update Services (WSUS) server. Windows servers provisioned by SoftLayer are configured to use the local WSUS server via the private network by default. "
            },
            "getWindowsUpdateStatus": {
                "name": "getWindowsUpdateStatus",
                "type": "SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_Status",
                "doc": "This method returns an update status record for this server.  That record will specify if the server is missing updates, or has updates that must be reinstalled or require a reboot to go into affect. "
            },
            "initiateIderaBareMetalRestore": {
                "name": "initiateIderaBareMetalRestore",
                "type": "boolean",
                "doc": "Idera Bare Metal Server Restore is a backup agent designed specifically for making full system restores made with Idera Server Backup. "
            },
            "initiateR1SoftBareMetalRestore": {
                "name": "initiateR1SoftBareMetalRestore",
                "type": "boolean",
                "doc": "R1Soft Bare Metal Server Restore is an R1Soft disk agent designed specifically for making full system restores made with R1Soft CDP Server backup. "
            },
            "isBackendPingable": {
                "name": "isBackendPingable",
                "type": "boolean",
                "doc": "Issues a ping command and returns the success (true) or failure (false) of the ping command. "
            },
            "isPingable": {
                "name": "isPingable",
                "type": "boolean",
                "doc": "Issues a ping command and returns the success (true) or failure (false) of the ping command. "
            },
            "isWindowsServer": {
                "name": "isWindowsServer",
                "type": "boolean",
                "doc": "Determine if the server runs any version of the Microsoft Windows operating systems. Return ''true'' if it does and ''false if otherwise. "
            },
            "massFirmwareReflash": {
                "name": "massFirmwareReflash",
                "type": "SoftLayer_Container_Hardware_Server_Request",
                "typeArray": true,
                "doc": "You can launch firmware reflashes by selecting from your server list. It will bring your server offline for approximately 60 minutes while the reflashes are in progress. \n\nIn the event of a hardware failure during this test our datacenter engineers will be notified of the problem automatically. They will then replace any failed components to bring your server back online. They will be contact you to ensure that impact on your server is minimal. ",
                "static": true,
                "parameters": [
                    {
                        "name": "hardwareIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "List of hardware ids to have firmware reflashed.",
                        "defaultValue": []
                    },
                    {
                        "name": "ipmi",
                        "type": "boolean",
                        "doc": "Flag to determine whether IPMI firmware reflash should occur.",
                        "defaultValue": 0
                    },
                    {
                        "name": "raidController",
                        "type": "boolean",
                        "doc": "Flag to determine whether raid controller firmware reflash should occur.",
                        "defaultValue": 0
                    },
                    {
                        "name": "bios",
                        "type": "boolean",
                        "doc": "Flag to determine whether BIOS firmware reflash should occur.",
                        "defaultValue": 0
                    }
                ]
            },
            "massFirmwareUpdate": {
                "name": "massFirmwareUpdate",
                "type": "SoftLayer_Container_Hardware_Server_Request",
                "typeArray": true,
                "doc": "You can launch firmware updates by selecting from your server list. It will bring your server offline for approximately 20 minutes while the updates are in progress. \n\nIn the event of a hardware failure during this test our datacenter engineers will be notified of the problem automatically. They will then replace any failed components to bring your server back online, and will be contacting you to ensure that impact on your server is minimal. ",
                "static": true,
                "parameters": [
                    {
                        "name": "hardwareIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "List of hardware ids to have firmware updated.",
                        "defaultValue": []
                    },
                    {
                        "name": "ipmi",
                        "type": "boolean",
                        "doc": "Flag to determine whether IPMI firmware update should occur.",
                        "defaultValue": 0
                    },
                    {
                        "name": "raidController",
                        "type": "boolean",
                        "doc": "Flag to determine whether raid controller firmware update should occur.",
                        "defaultValue": 0
                    },
                    {
                        "name": "bios",
                        "type": "boolean",
                        "doc": "Flag to determine whether BIOS firmware update should occur.",
                        "defaultValue": 0
                    },
                    {
                        "name": "harddrive",
                        "type": "boolean",
                        "doc": "Flag to determine whether hard drive firmware update should occur.",
                        "defaultValue": 0
                    }
                ]
            },
            "massHyperThreadingUpdate": {
                "name": "massHyperThreadingUpdate",
                "type": "SoftLayer_Container_Hardware_Server_Request",
                "typeArray": true,
                "doc": "You can launch hyper-threading update by selecting from your server list. It will bring your server offline for approximately 60 minutes while the updates are in progress. \n\nIn the event of a hardware failure during this update our datacenter engineers will be notified of the problem automatically. They will then replace any failed components to bring your server back online. They will be in contact with you to ensure that impact on your server is minimal. ",
                "static": true,
                "parameters": [
                    {
                        "name": "hardwareIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "List of hardware ids to update hyper-threading.",
                        "defaultValue": []
                    },
                    {
                        "name": "disableHyperthreading",
                        "type": "boolean",
                        "doc": "Flag to determine whether to disable or enable hyper-threading.",
                        "defaultValue": 0
                    }
                ]
            },
            "massReloadOperatingSystem": {
                "name": "massReloadOperatingSystem",
                "type": "string",
                "doc": "Reloads current or customer specified operating system configuration. \n\nThis service has a confirmation protocol for proceeding with the reload. To proceed with the reload without confirmation, simply pass in 'FORCE' as the token parameter. To proceed with the reload with confirmation, simply call the service with no parameter. A token string will be returned by this service. The token will remain active for 10 minutes. Use this token as the parameter to confirm that a reload is to be performed for the server. \n\nAs a precaution, we strongly  recommend backing up all data before reloading the operating system. The reload will format the primary disk and will reconfigure the server to the current specifications on record. \n\nThe reload will take AT MINIMUM 66 minutes. ",
                "static": true,
                "parameters": [
                    {
                        "name": "hardwareIds",
                        "type": "string",
                        "typeArray": true,
                        "doc": "List of hardware ids for operating system reload.",
                        "defaultValue": []
                    },
                    {
                        "name": "token",
                        "type": "string",
                        "doc": "The token returned by this service as a confirmation to proceed with the reload.",
                        "defaultValue": null
                    },
                    {
                        "name": "config",
                        "type": "SoftLayer_Container_Hardware_Server_Configuration",
                        "doc": "The new server configuration for the reload.",
                        "defaultValue": null
                    }
                ]
            },
            "massSparePool": {
                "name": "massSparePool",
                "type": "SoftLayer_Container_Hardware_Server_Request",
                "typeArray": true,
                "doc": "The ability to place multiple bare metal servers in a state where they are powered down and ports closed yet still allocated to the customer as a part of the Spare Pool program. ",
                "static": true,
                "parameters": [
                    {
                        "name": "hardwareIds",
                        "type": "string",
                        "typeArray": true,
                        "doc": "List of hardware ids to be added/removed from spare pool",
                        "defaultValue": []
                    },
                    {
                        "name": "action",
                        "type": "string",
                        "doc": "Action to 'add' server to spare pool or remove (use 'activate') from spare pool"
                    },
                    {
                        "name": "newOrder",
                        "type": "boolean",
                        "doc": "Set to true if a Spare Pool Server was ordered; otherwise false",
                        "defaultValue": false
                    }
                ]
            },
            "ping": {
                "name": "ping",
                "type": "string",
                "doc": "Issues a ping command to the server and returns the ping response. "
            },
            "populateServerRam": {
                "name": "populateServerRam",
                "type": "void",
                "parameters": [
                    {
                        "name": "ramSerialString",
                        "type": "string",
                        "doc": "Ram serial numbers separated by commas"
                    }
                ]
            },
            "powerCycle": {
                "name": "powerCycle",
                "type": "boolean",
                "doc": "Power off then power on the server via powerstrip.  The power cycle command is equivalent to unplugging the server from the powerstrip and then plugging the server back into the powerstrip.  This should only be used as a last resort.  If a reboot command has been issued successfully in the past 20 minutes, another remote management command (rebootSoft, rebootHard, powerOn, powerOff and powerCycle) will not be allowed. This is to avoid any type of server failures. "
            },
            "powerOff": {
                "name": "powerOff",
                "type": "boolean",
                "doc": "This method will power off the server via the server's remote management card. "
            },
            "powerOn": {
                "name": "powerOn",
                "type": "boolean",
                "doc": "Power on server via its remote management card.  If a reboot command has been issued successfully in the past 20 minutes, another remote management command (rebootSoft, rebootHard, powerOn, powerOff and powerCycle) will not be allowed.  This is to avoid any type of server failures. "
            },
            "rebootDefault": {
                "name": "rebootDefault",
                "type": "boolean",
                "doc": "Attempts to reboot the server by issuing a reset (soft reboot) command to the server's remote management card. If the reset (soft reboot) attempt is unsuccessful, a power cycle command will be issued via the powerstrip. The power cycle command is equivalent to unplugging the server from the powerstrip and then plugging the server back into the powerstrip.  If a reboot command has been issued successfully in the past 20 minutes, another remote management command (rebootSoft, rebootHard, powerOn, powerOff and powerCycle) will not be allowed.  This is to avoid any type of server failures. "
            },
            "rebootHard": {
                "name": "rebootHard",
                "type": "boolean",
                "doc": "Reboot the server by issuing a cycle command to the server's remote management card.  This is equivalent to pressing the 'Reset' button on the server.  This command is issued immediately and will not wait for processes to shutdown. After this command is issued, the server may take a few moments to boot up as server may run system disks checks. If a reboot command has been issued successfully in the past 20 minutes, another remote management command (rebootSoft, rebootHard, powerOn, powerOff and powerCycle) will not be allowed.  This is to avoid any type of server failures. "
            },
            "rebootSoft": {
                "name": "rebootSoft",
                "type": "boolean",
                "doc": "Reboot the server by issuing a reset command to the server's remote management card.  This is a graceful reboot. The servers will allow all process to shutdown gracefully before rebooting.  If a reboot command has been issued successfully in the past 20 minutes, another remote management command (rebootSoft, rebootHard, powerOn, powerOff and powerCycle) will not be allowed.  This is to avoid any type of server failures. "
            },
            "reloadCurrentOperatingSystemConfiguration": {
                "name": "reloadCurrentOperatingSystemConfiguration",
                "type": "string",
                "doc": "Reloads current operating system configuration. \n\nThis service has a confirmation protocol for proceeding with the reload. To proceed with the reload without confirmation, simply pass in 'FORCE' as the token parameter. To proceed with the reload with confirmation, simply call the service with no parameter. A token string will be returned by this service. The token will remain active for 10 minutes. Use this token as the parameter to confirm that a reload is to be performed for the server. \n\nAs a precaution, we strongly  recommend backing up all data before reloading the operating system. The reload will format the primary disk and will reconfigure the server to the current specifications on record. \n\nThe reload will take AT MINIMUM 66 minutes. ",
                "parameters": [
                    {
                        "name": "token",
                        "type": "string",
                        "doc": "The token returned by this service as a confirmation to proceed with the reload.",
                        "defaultValue": null
                    }
                ]
            },
            "reloadOperatingSystem": {
                "name": "reloadOperatingSystem",
                "type": "string",
                "doc": "Reloads current or customer specified operating system configuration. \n\nThis service has a confirmation protocol for proceeding with the reload. To proceed with the reload without confirmation, simply pass in 'FORCE' as the token parameter. To proceed with the reload with confirmation, simply call the service with no parameter. A token string will be returned by this service. The token will remain active for 10 minutes. Use this token as the parameter to confirm that a reload is to be performed for the server. \n\nAs a precaution, we strongly  recommend backing up all data before reloading the operating system. The reload will format the primary disk and will reconfigure the server to the current specifications on record. \n\nThe reload will take AT MINIMUM 66 minutes. ",
                "parameters": [
                    {
                        "name": "token",
                        "type": "string",
                        "doc": "The token returned by this service as a confirmation to proceed with the reload.",
                        "defaultValue": null
                    },
                    {
                        "name": "config",
                        "type": "SoftLayer_Container_Hardware_Server_Configuration",
                        "doc": "The new server configuration for the reload.",
                        "defaultValue": null
                    }
                ]
            },
            "runPassmarkCertificationBenchmark": {
                "name": "runPassmarkCertificationBenchmark",
                "type": "boolean",
                "doc": "You can launch a new Passmark hardware test by selecting from your server list. It will bring your server offline for approximately 20 minutes while the testing is in progress, and will publish a certificate with the results to your hardware details page. \n\nWhile the hard drives are tested for the initial deployment, the Passmark Certificate utility will not test the hard drives on your live server. This is to ensure that no data is overwritten. If you would like to test the server's hard drives, you can have the full Passmark suite installed to your server free of charge through a new Support ticket. \n\nWhile the test itself does not overwrite any data on the server, it is recommended that you make full off-server backups of all data prior to launching the test. The Passmark hardware test is designed to force any latent hardware issues to the surface, so hardware failure is possible. \n\nIn the event of a hardware failure during this test our datacenter engineers will be notified of the problem automatically. They will then replace any failed components to bring your server back online, and will be contacting you to ensure that impact on your server is minimal. "
            },
            "setOperatingSystemPassword": {
                "name": "setOperatingSystemPassword",
                "type": "boolean",
                "doc": "Changes the password that we have stored in our database for a servers' Operating System",
                "parameters": [
                    {
                        "name": "newPassword",
                        "type": "string",
                        "doc": "The password to be set for the administrator/root of the operating system."
                    }
                ]
            },
            "setPrivateNetworkInterfaceSpeed": {
                "name": "setPrivateNetworkInterfaceSpeed",
                "type": "boolean",
                "doc": "Set the private network interface speed and redundancy configuration. \n\nPossible $newSpeed values are -1 (maximum available), 0 (disconnect), 10, 100, 1000, and 10000; not all values are available to every server. The maximum speed is limited by the speed requested during provisioning. All intermediate speeds are limited by the capability of the pod the server is deployed in. No guarantee is made that a speed other than what was requested during provisioning will be available. \n\nIf specified, possible $redundancy values are either \"redundant\" or \"degraded\". Not specifying a redundancy mode will use the best possible redundancy available to the server. However, specifying a redundacy mode that is not available to the server will result in an error. \"redundant\" indicates all available interfaces should be active. \"degraded\" indicates only the primary interface should be active. Irrespective of the number of interfaces available to a server, it is only possible to have either a single interface or all interfaces active. \n\nReceipt of a response does not indicate completion of the configuration change. Any subsequent attempts to request the interface change speed or state, while changes are pending, will result in a busy error. \n\nA response of true indicates a change was required to achieve the desired interface configuration; thus changes are pending. A response of false indicates the current interface configuration matches the desired configuration, and thus no changes are pending. \n\n<h4>Backwards Compatibility Until February 27th, 2019</h4> \n\nIn order to provide a period of transition to the new API, some backwards compatible behaviors will be active during this period. <ul> <li> A \"doubled\" (eg. 200) speed value will be translated to a redundancy value of \"redundant\". If a redundancy value is specified, it is assumed no translation is needed and will result in an error due to doubled speeds no longer being valid.</li> <li> A non-doubled (eg. 100) speed value <i>without</i> a redundancy value will be translated to a redundancy value of \"degraded\".</li> </ul> After the compatibility period, a doubled speed value will result in an error, and a non-doubled speed value without a redundancy value specified will result in the best available redundancy state. An exception is made for the new relative speed value -1. When using -1 without a redundancy value, the best possible redundancy will be used. Please transition away from using doubled speed values in favor of specifying redundancy (when applicable) or using relative speed values 0 and -1. ",
                "parameters": [
                    {
                        "name": "newSpeed",
                        "type": "int",
                        "doc": "Desired speed or -1 for maximum available, 0 for disconnect"
                    },
                    {
                        "name": "redundancy",
                        "type": "string",
                        "doc": "The desired state of redundancy for the interface(s)",
                        "defaultValue": null
                    }
                ]
            },
            "setPublicNetworkInterfaceSpeed": {
                "name": "setPublicNetworkInterfaceSpeed",
                "type": "boolean",
                "doc": "Set the public network interface speed and redundancy configuration. \n\nPossible $newSpeed values are -1 (maximum available), 0 (disconnect), 10, 100, 1000, and 10000; not all values are available to every server. The maximum speed is limited by the speed requested during provisioning. All intermediate speeds are limited by the capability of the pod the server is deployed in. No guarantee is made that a speed other than what was requested during provisioning will be available. \n\nIf specified, possible $redundancy values are either \"redundant\" or \"degraded\". Not specifying a redundancy mode will use the best possible redundancy available to the server. However, specifying a redundacy mode that is not available to the server will result in an error. \"redundant\" indicates all available interfaces should be active. \"degraded\" indicates only the primary interface should be active. Irrespective of the number of interfaces available to a server, it is only possible to have either a single interface or all interfaces active. \n\nReceipt of a response does not indicate completion of the configuration change. Any subsequent attempts to request the interface change speed or state, while changes are pending, will result in a busy error. \n\nA response of true indicates a change was required to achieve the desired interface configuration; thus changes are pending. A response of false indicates the current interface configuration matches the desired configuration, and thus no changes are pending. \n\n<h4>Backwards Compatibility Until February 27th, 2019</h4> \n\nIn order to provide a period of transition to the new API, some backwards compatible behaviors will be active during this period. <ul> <li> A \"doubled\" (eg. 200) speed value will be translated to a redundancy value of \"redundant\". If a redundancy value is specified, it is assumed no translation is needed and will result in an error due to doubled speeds no longer being valid.</li> <li> A non-doubled (eg. 100) speed value <i>without</i> a redundancy value will be translated to a redundancy value of \"degraded\".</li> </ul> After the compatibility period, a doubled speed value will result in an error, and a non-doubled speed value without a redundancy value specified will result in the best available redundancy state. An exception is made for the new relative speed value -1. When using -1 without a redundancy value, the best possible redundancy will be used. Please transition away from using doubled speed values in favor of specifying redundancy (when applicable) or using relative speed values 0 and -1. ",
                "parameters": [
                    {
                        "name": "newSpeed",
                        "type": "int",
                        "doc": "Desired speed or -1 for maximum available, 0 for disconnect"
                    },
                    {
                        "name": "redundancy",
                        "type": "string",
                        "doc": "The desired state of redundancy for the interface(s)",
                        "defaultValue": null
                    }
                ]
            },
            "setUserMetadata": {
                "name": "setUserMetadata",
                "type": "SoftLayer_Hardware_Attribute",
                "typeArray": true,
                "doc": "Sets the data that will be written to the configuration drive. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "metadata",
                        "type": "string",
                        "typeArray": true,
                        "doc": "base64 encoded strings that will be written to the configuration drive",
                        "defaultValue": []
                    }
                ]
            },
            "shutdownPrivatePort": {
                "name": "shutdownPrivatePort",
                "type": "boolean",
                "doc": "Disconnect a server's private network interface. This operation is an alias for calling [[SoftLayer_Hardware_Server/setPrivateNetworkInterfaceSpeed]] with a $newSpeed of 0 and unspecified $redundancy. \n\nReceipt of a response does not indicate completion of the configuration change. Any subsequent attempts to request the interface change speed or state, while changes are pending, will result in a busy error. \n\nA response of true indicates a change was required to disconnect the interface; thus changes are pending. A response of false indicates the interface was already disconnected, and thus no changes are pending. "
            },
            "shutdownPublicPort": {
                "name": "shutdownPublicPort",
                "type": "boolean",
                "doc": "Disconnect a server's public network interface. This operation is an alias for [[SoftLayer_Hardware_Server/setPublicNetworkInterfaceSpeed]] with a $newSpeed of 0 and unspecified $redundancy. \n\nReceipt of a response does not indicate completion of the configuration change. Any subsequent attempts to request the interface change speed or state, while changes are pending, will result in a busy error. \n\nA response of true indicates a change was required to disconnect the interface; thus changes are pending. A response of false indicates the interface was already disconnected, and thus no changes are pending. "
            },
            "sparePool": {
                "name": "sparePool",
                "type": "boolean",
                "doc": "The ability to place bare metal servers in a state where they are powered down, and ports closed yet still allocated to the customer as a part of the Spare Pool program. ",
                "parameters": [
                    {
                        "name": "action",
                        "type": "string",
                        "doc": "Action to 'add' server to spare pool or remove (use 'activate') from spare pool"
                    },
                    {
                        "name": "newOrder",
                        "type": "boolean",
                        "doc": "Set to true if a Spare Pool Server was ordered; otherwise false",
                        "defaultValue": false
                    }
                ]
            },
            "testRaidAlertService": {
                "name": "testRaidAlertService",
                "type": "boolean",
                "doc": "Test the RAID Alert service by sending the service a request to store a test email for this server. The server must have an account ID and MAC address.  A RAID controller must also be installed. "
            },
            "toggleManagementInterface": {
                "name": "toggleManagementInterface",
                "type": "boolean",
                "doc": "Attempt to toggle the IPMI interface.  If there is an active transaction on the server, it will throw an exception. This method creates a transaction to toggle the interface.  It is not instant. ",
                "parameters": [
                    {
                        "name": "enabled",
                        "type": "boolean",
                        "doc": "Whether to enable or disable the interface."
                    }
                ]
            },
            "updateIpmiPassword": {
                "name": "updateIpmiPassword",
                "type": "boolean",
                "doc": "This method will update the root IPMI password on this SoftLayer_Hardware. ",
                "parameters": [
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "An alpha-numeric password"
                    }
                ]
            },
            "validatePartitionsForOperatingSystem": {
                "name": "validatePartitionsForOperatingSystem",
                "type": "boolean",
                "doc": "Validates a collection of partitions for an operating system",
                "static": true,
                "parameters": [
                    {
                        "name": "operatingSystem",
                        "type": "SoftLayer_Software_Description",
                        "doc": "The operating system that is to be verified against."
                    },
                    {
                        "name": "partitions",
                        "type": "SoftLayer_Hardware_Component_Partition",
                        "typeArray": true,
                        "doc": "The partitions that are to be used with the operating system."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Hardware_Server data type contains general information relating to a single SoftLayer server. ",
        "properties": {
            "activeNetworkFirewallBillingItem": {
                "name": "activeNetworkFirewallBillingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for a server's attached network firewall."
            },
            "activeTickets": {
                "name": "activeTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true
            },
            "activeTransaction": {
                "name": "activeTransaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "Transaction currently running for server."
            },
            "activeTransactions": {
                "name": "activeTransactions",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "typeArray": true,
                "doc": "Any active transaction(s) that are currently running for the server (example: os reload)."
            },
            "availableMonitoring": {
                "name": "availableMonitoring",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host_Stratum",
                "form": "relational",
                "typeArray": true,
                "doc": "An object that stores the maximum level for the monitoring query types and response types."
            },
            "averageDailyBandwidthUsage": {
                "name": "averageDailyBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The average daily total bandwidth usage for the current billing cycle."
            },
            "averageDailyPrivateBandwidthUsage": {
                "name": "averageDailyPrivateBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The average daily private bandwidth usage for the current billing cycle."
            },
            "billingCycleBandwidthUsage": {
                "name": "billingCycleBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object will be returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsage": {
                "name": "billingCyclePrivateBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "The raw private bandwidth usage data for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsage": {
                "name": "billingCyclePublicBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "The raw public bandwidth usage data for the current billing cycle."
            },
            "biosPasswordNullFlag": {
                "name": "biosPasswordNullFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Determine if BIOS password should be left as null."
            },
            "captureEnabledFlag": {
                "name": "captureEnabledFlag",
                "type": "SoftLayer_Container_Hardware_CaptureEnabled",
                "form": "relational",
                "doc": "Determine if the server is able to be image captured. If unable to image capture a reason will be provided."
            },
            "containsSolidStateDrivesFlag": {
                "name": "containsSolidStateDrivesFlag",
                "type": "boolean",
                "form": "relational"
            },
            "controlPanel": {
                "name": "controlPanel",
                "type": "SoftLayer_Software_Component_ControlPanel",
                "form": "relational",
                "doc": "A server's control panel."
            },
            "cost": {
                "name": "cost",
                "type": "float",
                "form": "relational",
                "doc": "The total cost of a server, measured in US Dollars ($USD)."
            },
            "currentBandwidthSummary": {
                "name": "currentBandwidthSummary",
                "type": "SoftLayer_Metric_Tracking_Object_Bandwidth_Summary",
                "form": "relational",
                "doc": "An object that provides commonly used bandwidth summary components for the current billing cycle."
            },
            "customerInstalledOperatingSystemFlag": {
                "name": "customerInstalledOperatingSystemFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates if a server has a Customer Installed OS"
            },
            "customerOwnedFlag": {
                "name": "customerOwnedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates if a server is a customer owned device."
            },
            "hasSingleRootVirtualizationBillingItemFlag": {
                "name": "hasSingleRootVirtualizationBillingItemFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Determine if hardware has Single Root IO VIrtualization (SR-IOV) billing item."
            },
            "inboundPrivateBandwidthUsage": {
                "name": "inboundPrivateBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private inbound bandwidth for this hardware for the current billing cycle."
            },
            "isCloudReadyNodeCertified": {
                "name": "isCloudReadyNodeCertified",
                "type": "boolean",
                "form": "relational",
                "doc": "Determine if hardware object has the IBM_CLOUD_READY_NODE_CERTIFIED attribute."
            },
            "isIpmiDisabled": {
                "name": "isIpmiDisabled",
                "type": "boolean",
                "form": "relational",
                "doc": "Determine if remote management has been disabled due to port speed."
            },
            "isVirtualPrivateCloudNode": {
                "name": "isVirtualPrivateCloudNode",
                "type": "boolean",
                "form": "relational",
                "doc": "Determine if hardware object is a Virtual Private Cloud node."
            },
            "lastOperatingSystemReload": {
                "name": "lastOperatingSystemReload",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "The last transaction that a server's operating system was loaded."
            },
            "logicalVolumeStorageGroups": {
                "name": "logicalVolumeStorageGroups",
                "type": "SoftLayer_Configuration_Storage_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "Returns a list of logical volumes on the physical machine."
            },
            "metricTrackingObjectId": {
                "name": "metricTrackingObjectId",
                "type": "int",
                "form": "relational",
                "doc": "The metric tracking object id for this server."
            },
            "monitoringUserNotification": {
                "name": "monitoringUserNotification",
                "type": "SoftLayer_User_Customer_Notification_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The monitoring notification objects for this hardware. Each object links this hardware instance to a user account that will be notified if monitoring on this hardware object fails"
            },
            "openCancellationTicket": {
                "name": "openCancellationTicket",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "doc": "An open ticket requesting cancellation of this server, if one exists."
            },
            "outboundPrivateBandwidthUsage": {
                "name": "outboundPrivateBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private outbound bandwidth for this hardware for the current billing cycle."
            },
            "overBandwidthAllocationFlag": {
                "name": "overBandwidthAllocationFlag",
                "type": "int",
                "form": "relational",
                "doc": "Whether the bandwidth usage for this hardware for the current billing cycle exceeds the allocation."
            },
            "partitions": {
                "name": "partitions",
                "type": "SoftLayer_Hardware_Server_Partition",
                "form": "relational",
                "typeArray": true
            },
            "privateIpAddress": {
                "name": "privateIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "A server's primary private IP address."
            },
            "projectedOverBandwidthAllocationFlag": {
                "name": "projectedOverBandwidthAllocationFlag",
                "type": "int",
                "form": "relational",
                "doc": "Whether the bandwidth usage for this hardware for the current billing cycle is projected to exceed the allocation."
            },
            "projectedPublicBandwidthUsage": {
                "name": "projectedPublicBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The projected public outbound bandwidth for this hardware for the current billing cycle."
            },
            "readyNodeFlag": {
                "name": "readyNodeFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Determine if hardware object is vSan Ready Node."
            },
            "recentRemoteManagementCommands": {
                "name": "recentRemoteManagementCommands",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_Command_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "The last five commands issued to the server's remote management card."
            },
            "regionalInternetRegistry": {
                "name": "regionalInternetRegistry",
                "type": "SoftLayer_Network_Regional_Internet_Registry",
                "form": "relational"
            },
            "remoteManagement": {
                "name": "remoteManagement",
                "type": "SoftLayer_Hardware_Component_RemoteManagement",
                "form": "relational",
                "doc": "A server's remote management card."
            },
            "remoteManagementUsers": {
                "name": "remoteManagementUsers",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_User",
                "form": "relational",
                "typeArray": true,
                "doc": "User(s) who have access to issue commands and/or interact with the server's remote management card."
            },
            "softwareGuardExtensionEnabled": {
                "name": "softwareGuardExtensionEnabled",
                "type": "boolean",
                "form": "relational",
                "doc": "Determine if hardware object has Software Guard Extension (SGX) enabled."
            },
            "statisticsRemoteManagement": {
                "name": "statisticsRemoteManagement",
                "type": "SoftLayer_Hardware_Component_RemoteManagement",
                "form": "relational",
                "doc": "A server's remote management card used for statistics."
            },
            "uefiBootFlag": {
                "name": "uefiBootFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether to use UEFI boot instead of BIOS."
            },
            "users": {
                "name": "users",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of users that have access to this computing instance."
            },
            "virtualGuests": {
                "name": "virtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "A hardware server's virtual servers."
            },
            "activeTicketCount": {
                "name": "activeTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "activeTransactionCount": {
                "name": "activeTransactionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of any active transaction(s) that are currently running for the server (example: os reload)."
            },
            "availableMonitoringCount": {
                "name": "availableMonitoringCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an object that stores the maximum level for the monitoring query types and response types."
            },
            "billingCycleBandwidthUsageCount": {
                "name": "billingCycleBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object will be returned for each network this server is attached to."
            },
            "logicalVolumeStorageGroupCount": {
                "name": "logicalVolumeStorageGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of returns a list of logical volumes on the physical machine."
            },
            "monitoringUserNotificationCount": {
                "name": "monitoringUserNotificationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the monitoring notification objects for this hardware. Each object links this hardware instance to a user account that will be notified if monitoring on this hardware object fails"
            },
            "partitionCount": {
                "name": "partitionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "recentRemoteManagementCommandCount": {
                "name": "recentRemoteManagementCommandCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the last five commands issued to the server's remote management card."
            },
            "remoteManagementUserCount": {
                "name": "remoteManagementUserCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of user(s) who have access to issue commands and/or interact with the server's remote management card."
            },
            "userCount": {
                "name": "userCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of users that have access to this computing instance."
            },
            "virtualGuestCount": {
                "name": "virtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a hardware server's virtual servers."
            }
        }
    },
    "SoftLayer_Hardware_Server_Partition": {
        "name": "SoftLayer_Hardware_Server_Partition",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational"
            },
            "networkComponentAttributes": {
                "name": "networkComponentAttributes",
                "type": "SoftLayer_Hardware_Server_Partition_Network_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local"
            },
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "macAddress": {
                "name": "macAddress",
                "type": "string",
                "form": "local"
            },
            "networkComponentAttributeCount": {
                "name": "networkComponentAttributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Hardware_Server_Partition_Network_Attribute": {
        "name": "SoftLayer_Hardware_Server_Partition_Network_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local"
            },
            "macAddress": {
                "name": "macAddress",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "partitionId": {
                "name": "partitionId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Hardware_State": {
        "name": "SoftLayer_Hardware_State",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_State type contains general information about the current state of it's associated hardware, including the current power state (i.e. Running or Stopped), and it's current transitioning state (e.g. Provisioning, Reloading). ",
        "properties": {
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The hardware this state is assigned to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware state's unique identifier."
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "Represents the current state of the assigned hardware."
            }
        }
    },
    "SoftLayer_Hardware_Status": {
        "name": "SoftLayer_Hardware_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Hardware_Status models the inventory state of any piece of hardware in SoftLayer's inventory. Most of these statuses are used by SoftLayer while a server is not provisioned or undergoing provisioning. SoftLayer uses the following status codes: \n\n\n*'''ACTIVE''': This server is active and in use.\n*'''DEPLOY''': Used during server provisioning.\n*'''DEPLOY2''': Used during server provisioning.\n*'''MACWAIT''': Used during server provisioning.\n*'''RECLAIM''': This server has been reclaimed by SoftLayer and is awaiting de-provisioning.\n\n\nServers in production and in use should stay in the ACTIVE state. If a server's status ever reads anything else then please contact SoftLayer support. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A hardware status' internal identifier."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "A hardware's status code. See the SoftLayer_Hardware_Status Overview for ''status''' possible values."
            }
        }
    },
    "SoftLayer_Hardware_Switch": {
        "name": "SoftLayer_Hardware_Switch",
        "base": "SoftLayer_Hardware",
        "noservice": true,
        "typeDoc": "The SoftLayer_Hardware_Switch object extends the base functionality of the SoftLayer_Hardware service. "
    },
    "SoftLayer_Layout_Container": {
        "name": "SoftLayer_Layout_Container",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Layout containers are used in the customization of the Portal 4 customer experience. \n\nA single page in the portal can be thought of as a layout container. The container houses individual [[SoftLayer_Layout_Item|layout items]], which are the elements of the page (e.g., Ticket list). Layout containers can be added to [[SoftLayer_Layout_Profile|layout profiles]], allowing for full customization of the container's related items. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Layout_Container",
                "typeArray": true,
                "doc": "Use this method to retrieve all active layout containers that can be customized. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Layout_Container",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Layout_Container contains definitions for default page layouts ",
        "properties": {
            "layoutContainerType": {
                "name": "layoutContainerType",
                "type": "SoftLayer_Layout_Container_Type",
                "form": "relational",
                "doc": "The type of the layout container object"
            },
            "layoutItems": {
                "name": "layoutItems",
                "type": "SoftLayer_Layout_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The layout items assigned to this layout container"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a layout container"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "The unique key name of the layout container, used primarily for programmatic purposes"
            },
            "layoutContainerTypeId": {
                "name": "layoutContainerTypeId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the related [[SoftLayer_Layout_Container_Type]]"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly name of the layout container"
            },
            "layoutItemCount": {
                "name": "layoutItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the layout items assigned to this layout container"
            }
        }
    },
    "SoftLayer_Layout_Container_Type": {
        "name": "SoftLayer_Layout_Container_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Layout_Container_Type contains definitions for container types ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the container type"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "The unique key name of the container type, used primarily for programmatic purposes"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly name of the container type"
            }
        }
    },
    "SoftLayer_Layout_Item": {
        "name": "SoftLayer_Layout_Item",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Layout items are used in the customization of the Portal 4 customer experience. \n\nEach [[SoftLayer_Layout_Container|container]] in the portal contains one or more layout items. These are used to describe elements such as ticket lists. Layout items typically have [[SoftLayer_Layout_Preference|default preferences]], which can be customized once the container is added to a [[SoftLayer_Layout_Profile|layout profile]]. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Layout_Item",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Layout_Item contains definitions for default layout items ",
        "properties": {
            "layoutItemPreferences": {
                "name": "layoutItemPreferences",
                "type": "SoftLayer_Layout_Preference",
                "form": "relational",
                "typeArray": true,
                "doc": "The layout preferences assigned to this layout item"
            },
            "layoutItemType": {
                "name": "layoutItemType",
                "type": "SoftLayer_Layout_Item_Type",
                "form": "relational",
                "doc": "The type of the layout item object"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a layout item"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "The unique key name of the layout item, used primarily for programmatic purposes"
            },
            "layoutItemTypeId": {
                "name": "layoutItemTypeId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the related [[SoftLayer_Layout_Item_Type]]"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly name of the layout item"
            },
            "layoutItemPreferenceCount": {
                "name": "layoutItemPreferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the layout preferences assigned to this layout item"
            }
        }
    },
    "SoftLayer_Layout_Item_Type": {
        "name": "SoftLayer_Layout_Item_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Layout_Item_Type contains definitions for item types ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the item type"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "The unique key name of the item type, used primarily for programmatic purposes"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly name of the item type"
            }
        }
    },
    "SoftLayer_Layout_Preference": {
        "name": "SoftLayer_Layout_Preference",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Layout_Preference contains definitions for default layout item preferences ",
        "properties": {
            "layoutPreferenceType": {
                "name": "layoutPreferenceType",
                "type": "SoftLayer_Layout_Preference_Type",
                "form": "relational",
                "doc": "The type of the preference object"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a layout preference"
            },
            "layoutPreferenceTypeId": {
                "name": "layoutPreferenceTypeId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the related [[SoftLayer_Layout_Preference_Type]]"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The default value of the preference"
            }
        }
    },
    "SoftLayer_Layout_Preference_Type": {
        "name": "SoftLayer_Layout_Preference_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Layout_Preference_Type contains definitions for preference types ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the item type"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "The unique key name of the item type, used primarily for programmatic purposes"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly name of the item type"
            },
            "valueExpression": {
                "name": "valueExpression",
                "type": "string",
                "form": "local",
                "doc": "A regular expression used to validate the related [[SoftLayer_Layout_Preference]]"
            }
        }
    },
    "SoftLayer_Layout_Profile": {
        "name": "SoftLayer_Layout_Profile",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Layout profiles are the primary object used to tie customized portal experiences to the [[SoftLayer_User_Customer|user account]]. \n\nIn order to take full advantage of the flexible customization of the portal, each user must be given one or more layout profiles. Each layout profile is then assigned one of the [[SoftLayer_Layout_Container|layout containers]], thereby giving the user all [[SoftLayer_Layout_Item|items]] and associated [[SoftLayer_Layout_Profile_Preferences|default preferences]]. These default preferences can be modified via the [[SoftLayer_Layout_Profile::modifyPreference()]] method, giving the user their own customized configuration. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "boolean",
                "doc": "This method creates a new layout profile object. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Layout_Profile",
                        "doc": "The SoftLayer_Layout_Profile object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "This method deletes an existing layout profile and associated custom preferences "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "This method edits an existing layout profile object by passing in a modified instance of the object. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Layout_Profile",
                        "doc": "A skeleton SoftLayer_Layout_Profile object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Layout_Profile",
                "filterable": true,
                "maskable": true
            },
            "modifyPreference": {
                "name": "modifyPreference",
                "type": "SoftLayer_Layout_Profile_Preference",
                "doc": "This method modifies an existing associated [[SoftLayer_Layout_Profile_Preference]] object. If the preference object being modified is a default value object, a new record is created to override the default value. \n\nOnly preferences that are assigned to a profile may be updated. Attempts to update a non-existent preference object will result in an exception being thrown. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Layout_Profile_Preference",
                        "doc": "The object whose preference is being modified."
                    }
                ]
            },
            "modifyPreferences": {
                "name": "modifyPreferences",
                "type": "SoftLayer_Layout_Profile_Preference",
                "typeArray": true,
                "doc": "Using this method, multiple [[SoftLayer_Layout_Profile_Preference]] objects may be updated at once. \n\nRefer to [[SoftLayer_Layout_Profile::modifyPreference()]] for more information. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "layoutPreferenceObjects",
                        "type": "SoftLayer_Layout_Profile_Preference",
                        "typeArray": true,
                        "doc": "All the preferences to modify."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Layout_Profile contains the definition of the layout profile ",
        "properties": {
            "layoutContainers": {
                "name": "layoutContainers",
                "type": "SoftLayer_Layout_Container",
                "form": "relational",
                "typeArray": true
            },
            "layoutPreferences": {
                "name": "layoutPreferences",
                "type": "SoftLayer_Layout_Profile_Preference",
                "form": "relational",
                "typeArray": true
            },
            "activeFlag": {
                "name": "activeFlag",
                "type": "int",
                "form": "local",
                "doc": "Active status of the layout profile"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of when the layout profile was created"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a layout profile"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of when the layout profile was last updated"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly name of the layout profile"
            },
            "userRecordId": {
                "name": "userRecordId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_User_Customer]] owning this layout profile"
            },
            "layoutContainerCount": {
                "name": "layoutContainerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "layoutPreferenceCount": {
                "name": "layoutPreferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Layout_Profile_Containers": {
        "name": "SoftLayer_Layout_Profile_Containers",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Layout_Profile_Containers",
                        "doc": "The SoftLayer_Layout_Profile_Containers object that you wish to create."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Layout_Profile_Containers",
                        "doc": "A skeleton SoftLayer_Layout_Profile_Containers object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Layout_Profile_Containers",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "layoutContainerType": {
                "name": "layoutContainerType",
                "type": "SoftLayer_Layout_Container",
                "form": "relational",
                "doc": "The container to be contained"
            },
            "layoutProfile": {
                "name": "layoutProfile",
                "type": "SoftLayer_Layout_Profile",
                "form": "relational",
                "doc": "The profile containing this container"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of when the reference was created"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the container reference"
            },
            "layoutContainerId": {
                "name": "layoutContainerId",
                "type": "int",
                "form": "local",
                "doc": "The id of the referenced [[SoftLayer_Layout_Container]]"
            },
            "layoutProfileId": {
                "name": "layoutProfileId",
                "type": "int",
                "form": "local",
                "doc": "The id of the referenced [[SoftLayer_Layout_Profile]]"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of when the reference was last updated"
            }
        }
    },
    "SoftLayer_Layout_Profile_Customer": {
        "name": "SoftLayer_Layout_Profile_Customer",
        "base": "SoftLayer_Layout_Profile",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Layout_Profile_Customer",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "userRecord": {
                "name": "userRecord",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Layout_Profile_Preference": {
        "name": "SoftLayer_Layout_Profile_Preference",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The profile preferences are an aggregation of the default preferences and the customized preferences. \n\nFor each [[SoftLayer_Layout_Profile_Containers|associated container]] on a [[SoftLayer_Layout_Profile|profile]], the [[SoftLayer_Layout_Preference|default preferences]] are inherited through the profile preferences. However, any one of these may be overridden through the [[SoftLayer_Layout_Profile::modifyPreference()]] method. Rather than maintaining two different sets of preferences, all preferences are grouped together through the profile preferences, presenting the customized preferences in place of the default preferences they are overriding. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Layout_Profile_Preference",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Layout_Profile_Preference contains definitions for layout preferences ",
        "properties": {
            "layoutContainer": {
                "name": "layoutContainer",
                "type": "SoftLayer_Layout_Container",
                "form": "relational"
            },
            "layoutItem": {
                "name": "layoutItem",
                "type": "SoftLayer_Layout_Item",
                "form": "relational"
            },
            "layoutPreference": {
                "name": "layoutPreference",
                "type": "SoftLayer_Layout_Preference",
                "form": "relational"
            },
            "layoutProfile": {
                "name": "layoutProfile",
                "type": "SoftLayer_Layout_Profile",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of when the preference was created"
            },
            "defaultValueFlag": {
                "name": "defaultValueFlag",
                "type": "int",
                "form": "local",
                "doc": "Indicates whether this is a default value or not"
            },
            "layoutContainerId": {
                "name": "layoutContainerId",
                "type": "int",
                "form": "local",
                "doc": "The id of the related [[SoftLayer_Layout_Container]]"
            },
            "layoutItemId": {
                "name": "layoutItemId",
                "type": "int",
                "form": "local",
                "doc": "The id of the related [[SoftLayer_Layout_Item]]"
            },
            "layoutPreferenceId": {
                "name": "layoutPreferenceId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the overridden [[SoftLayer_Layout_Preference]]"
            },
            "layoutProfileId": {
                "name": "layoutProfileId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the related [[SoftLayer_Layout_Profile]]"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of when the preference was last updated"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value overriding the default value"
            }
        }
    },
    "SoftLayer_Legal_RegulatedWorkload": {
        "name": "SoftLayer_Legal_RegulatedWorkload",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Legal_RegulatedWorkload_Type",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "enabledFlag": {
                "name": "enabledFlag",
                "type": "boolean",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "workloadTypeId": {
                "name": "workloadTypeId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Legal_RegulatedWorkload_Type": {
        "name": "SoftLayer_Legal_RegulatedWorkload_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Locale": {
        "name": "SoftLayer_Locale",
        "base": "SoftLayer_Entity",
        "methods": {
            "getClosestToLanguageTag": {
                "name": "getClosestToLanguageTag",
                "type": "SoftLayer_Locale",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "languageTag",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Locale",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "friendlyName": {
                "name": "friendlyName",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identification number of a locale"
            },
            "languageTag": {
                "name": "languageTag",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Locale name"
            }
        }
    },
    "SoftLayer_Locale_Country": {
        "name": "SoftLayer_Locale_Country",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service provides methods to retrieve country locale information. ",
        "methods": {
            "getAllVatCountryCodesAndVatIdRegexes": {
                "name": "getAllVatCountryCodesAndVatIdRegexes",
                "type": "SoftLayer_Container_Collection_Locale_VatCountryCodeAndFormat",
                "typeArray": true,
                "doc": "This method is to get the collection of VAT country codes and VAT ID Regexes. ",
                "static": true
            },
            "getAvailableCountries": {
                "name": "getAvailableCountries",
                "type": "SoftLayer_Locale_Country",
                "typeArray": true,
                "doc": "Use this method to retrieve a list of countries and locale information available to the current user. ",
                "static": true,
                "maskable": true
            },
            "getCountries": {
                "name": "getCountries",
                "type": "SoftLayer_Locale_Country",
                "typeArray": true,
                "doc": "Use this method to retrieve a list of countries and locale information such as country code and state/provinces. ",
                "static": true,
                "maskable": true
            },
            "getCountriesAndStates": {
                "name": "getCountriesAndStates",
                "type": "SoftLayer_Container_Collection_Locale_CountryCode",
                "typeArray": true,
                "doc": "This method will return a collection of [[SoftLayer_Container_Collection_Locale_CountryCode]] objects. If the country has states, a [[SoftLayer_Container_Collection_Locale_StateCode]] collection will be provided with the country. ",
                "static": true,
                "parameters": [
                    {
                        "name": "usFirstFlag",
                        "type": "boolean",
                        "defaultValue": true
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Locale_Country",
                "filterable": true,
                "maskable": true
            },
            "getPostalCodeRequiredCountryCodes": {
                "name": "getPostalCodeRequiredCountryCodes",
                "type": "string",
                "typeArray": true,
                "doc": "This method will return an array of country codes that require postal code ",
                "static": true
            },
            "getVatCountries": {
                "name": "getVatCountries",
                "type": "string",
                "typeArray": true,
                "doc": "This method will return an array of ISO 3166 Alpha-2 country codes that use a Value-Added Tax (VAT) ID. Note the difference between [[SoftLayer_Locale_Country/getVatRequiredCountryCodes]] - this method will provide <strong>all</strong> country codes that use VAT ID, including those which are required. ",
                "static": true
            },
            "getVatRequiredCountryCodes": {
                "name": "getVatRequiredCountryCodes",
                "type": "string",
                "typeArray": true,
                "doc": "This method will return an array of ISO 3166 Alpha-2 country codes that use a Value-Added Tax (VAT) ID. Note the difference between [[SoftLayer_Locale_Country/getVatCountries]] - this method will provide country codes where a VAT ID is required for onboarding to IBM Cloud. ",
                "static": true
            },
            "isEuropeanUnionCountry": {
                "name": "isEuropeanUnionCountry",
                "type": "boolean",
                "doc": "Returns true if the country code is in the European Union (EU), false otherwise. ",
                "static": true,
                "parameters": [
                    {
                        "name": "iso2CountryCode",
                        "type": "string",
                        "doc": "Two-letter country code (ISO 3166-1 alpha-2)"
                    }
                ]
            }
        },
        "properties": {
            "states": {
                "name": "states",
                "type": "SoftLayer_Locale_StateProvince",
                "form": "relational",
                "typeArray": true,
                "doc": "States that belong to this country."
            },
            "isEuropeanUnionFlag": {
                "name": "isEuropeanUnionFlag",
                "type": "int",
                "form": "local",
                "doc": "Binary flag denoting if this country is part of the European Union"
            },
            "isoCodeAlphaThree": {
                "name": "isoCodeAlphaThree",
                "type": "string",
                "form": "local"
            },
            "longName": {
                "name": "longName",
                "type": "string",
                "form": "local"
            },
            "postalCodeFormat": {
                "name": "postalCodeFormat",
                "type": "string",
                "form": "local"
            },
            "postalCodeRequiredFlag": {
                "name": "postalCodeRequiredFlag",
                "type": "int",
                "form": "local"
            },
            "shortName": {
                "name": "shortName",
                "type": "string",
                "form": "local"
            },
            "vatIdRegex": {
                "name": "vatIdRegex",
                "type": "string",
                "form": "local"
            },
            "vatIdRequiredFlag": {
                "name": "vatIdRequiredFlag",
                "type": "boolean",
                "form": "local"
            },
            "stateCount": {
                "name": "stateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of states that belong to this country."
            }
        }
    },
    "SoftLayer_Locale_StateProvince": {
        "name": "SoftLayer_Locale_StateProvince",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This object represents a state or province for a country. ",
        "properties": {
            "longName": {
                "name": "longName",
                "type": "string",
                "form": "local"
            },
            "shortName": {
                "name": "shortName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Locale_Timezone": {
        "name": "SoftLayer_Locale_Timezone",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Each User is assigned a timezone allowing for a precise local timestamp.",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Locale_Timezone",
                "typeArray": true,
                "doc": "Retrieve all timezone objects.",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Locale_Timezone",
                "doc": "getObject retrieves the SoftLayer_Locale_Timezone object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Locale_Timezone service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Each User is assigned a timezone allowing for a precise local timestamp.",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A timezone's identifying number."
            },
            "longName": {
                "name": "longName",
                "type": "string",
                "form": "local",
                "doc": "A timezone's long name. For example, \"(GMT-06:00) America/Dallas - CST\"."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A timezone's name. For example, \"America/Dallas\"."
            },
            "offset": {
                "name": "offset",
                "type": "string",
                "form": "local",
                "doc": "A timezone's offset based on the GMT standard. For example, Central Standard Time's offset is \"-0600\" from GMT=0000."
            },
            "shortName": {
                "name": "shortName",
                "type": "string",
                "form": "local",
                "doc": "A timezone's common abbreviation. For example, Central Standard Time's abbreviation is \"CST\"."
            }
        }
    },
    "SoftLayer_Location": {
        "name": "SoftLayer_Location",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Location API service queries SoftLayer's location tree to find locations for all softlayer resources including bare metal servers, virtual servers, storage repositories, datacenters, points of presence, network backbones, and many more. ",
        "methods": {
            "getAvailableObjectStorageDatacenters": {
                "name": "getAvailableObjectStorageDatacenters",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "Object Storage is only available in select datacenters. This method will return all the datacenters where object storage is available. ",
                "static": true,
                "maskable": true
            },
            "getDatacenters": {
                "name": "getDatacenters",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "Retrieve all datacenter locations. SoftLayer's datacenters exist in various cities and each contain one or more server rooms which house network and server infrastructure. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getDatacentersWithVirtualImageStoreServiceResourceRecord": {
                "name": "getDatacentersWithVirtualImageStoreServiceResourceRecord",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Location",
                "filterable": true,
                "maskable": true
            },
            "getViewableDatacenters": {
                "name": "getViewableDatacenters",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "Retrieve all datacenter locations. SoftLayer's datacenters exist in various cities and each contain one or more server rooms which house network and server infrastructure. ",
                "static": true,
                "maskable": true
            },
            "getViewablePopsAndDataCenters": {
                "name": "getViewablePopsAndDataCenters",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "Retrieve all viewable pop and datacenter locations. ",
                "static": true,
                "maskable": true
            },
            "getViewablepointOfPresence": {
                "name": "getViewablepointOfPresence",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "Retrieve all viewable network locations. ",
                "static": true,
                "maskable": true
            },
            "getpointOfPresence": {
                "name": "getpointOfPresence",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "Retrieve all point of presence locations. ",
                "static": true,
                "maskable": true
            }
        },
        "typeDoc": "Every piece of hardware and network connection owned by SoftLayer is tracked physically by location and stored in the SoftLayer_Location data type. SoftLayer locations exist in parent/child relationships, a convenient way to track equipment from it's city, datacenter, server room, rack, then slot. Network backbones are tied to datacenters only, not to a room, rack, or slot. ",
        "properties": {
            "activePresaleEvents": {
                "name": "activePresaleEvents",
                "type": "SoftLayer_Sales_Presale_Event",
                "form": "relational",
                "typeArray": true
            },
            "backboneDependents": {
                "name": "backboneDependents",
                "type": "SoftLayer_Network_Backbone_Location_Dependent",
                "form": "relational",
                "typeArray": true
            },
            "bnppCompliantFlag": {
                "name": "bnppCompliantFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating whether or not the datacenter/location is BNPP compliant."
            },
            "euCompliantFlag": {
                "name": "euCompliantFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating whether or not the datacenter/location is EU compliant."
            },
            "groups": {
                "name": "groups",
                "type": "SoftLayer_Location_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "A location can be a member of 1 or more groups. This will show which groups to which a location belongs."
            },
            "hardwareFirewalls": {
                "name": "hardwareFirewalls",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true
            },
            "locationAddress": {
                "name": "locationAddress",
                "type": "SoftLayer_Account_Address",
                "form": "relational",
                "doc": "A location's physical address."
            },
            "locationAddresses": {
                "name": "locationAddresses",
                "type": "SoftLayer_Account_Address",
                "form": "relational",
                "typeArray": true,
                "doc": "A location's physical addresses."
            },
            "locationReservationMember": {
                "name": "locationReservationMember",
                "type": "SoftLayer_Location_Reservation_Rack_Member",
                "form": "relational",
                "doc": "A location's Dedicated Rack member"
            },
            "locationStatus": {
                "name": "locationStatus",
                "type": "SoftLayer_Location_Status",
                "form": "relational",
                "doc": "The current locations status."
            },
            "networkConfigurationAttribute": {
                "name": "networkConfigurationAttribute",
                "type": "SoftLayer_Hardware_Attribute",
                "form": "relational"
            },
            "onlineSslVpnUserCount": {
                "name": "onlineSslVpnUserCount",
                "type": "int",
                "form": "relational",
                "doc": "The total number of users online using SoftLayer's SSL VPN service for a location."
            },
            "pathString": {
                "name": "pathString",
                "type": "string",
                "form": "relational"
            },
            "priceGroups": {
                "name": "priceGroups",
                "type": "SoftLayer_Location_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "A location can be a member of 1 or more Price Groups. This will show which groups to which a location belongs."
            },
            "regions": {
                "name": "regions",
                "type": "SoftLayer_Location_Region",
                "form": "relational",
                "typeArray": true,
                "doc": "A location can be a member of 1 or more regions. This will show which regions to which a location belongs."
            },
            "timezone": {
                "name": "timezone",
                "type": "SoftLayer_Locale_Timezone",
                "form": "relational"
            },
            "vdrGroup": {
                "name": "vdrGroup",
                "type": "SoftLayer_Location_Group_Location_CrossReference",
                "form": "relational",
                "doc": "A location can be a member of 1 Bandwidth Pooling Group. This will show which group to which a location belongs."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a specific location."
            },
            "longName": {
                "name": "longName",
                "type": "string",
                "form": "local",
                "doc": "A longer location description."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A short location description."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local"
            },
            "activePresaleEventCount": {
                "name": "activePresaleEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "backboneDependentCount": {
                "name": "backboneDependentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "groupCount": {
                "name": "groupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a location can be a member of 1 or more groups. This will show which groups to which a location belongs."
            },
            "hardwareFirewallCount": {
                "name": "hardwareFirewallCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "locationAddressCount": {
                "name": "locationAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a location's physical addresses."
            },
            "priceGroupCount": {
                "name": "priceGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a location can be a member of 1 or more Price Groups. This will show which groups to which a location belongs."
            },
            "regionCount": {
                "name": "regionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a location can be a member of 1 or more regions. This will show which regions to which a location belongs."
            }
        }
    },
    "SoftLayer_Location_Datacenter": {
        "name": "SoftLayer_Location_Datacenter",
        "base": "SoftLayer_Location",
        "serviceDoc": "SoftLayer_Location_Datacenter exposes functionality to access datacenter-specific portions of SoftLayer's backend network. SoftLayer maintains datacenters within it's location hierarchy. Datacenters are located in city locations and each contain server room locations, racks, then slots. Each slot location houses a piece of SoftLayer hardware. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Location_Datacenter",
                "filterable": true,
                "maskable": true
            },
            "getStatisticsGraphImage": {
                "name": "getStatisticsGraphImage",
                "type": "base64Binary",
                "doc": "Retrieve a graph of a SoftLayer datacenter's last 48 hours of network activity. Statistics graphs show traffic outbound from a datacenter on top and inbound traffic on the bottom followed by a legend of the network services tracked in the graph. getStatisticsGraphImage returns a PNG image of variable width and height depending on the number of services reported in the image. "
            }
        },
        "typeDoc": "SoftLayer_Location_Datacenter extends the [[SoftLayer_Location]] data type to include datacenter-specific properties. ",
        "properties": {
            "activeItemPresaleEvents": {
                "name": "activeItemPresaleEvents",
                "type": "SoftLayer_Sales_Presale_Event",
                "form": "relational",
                "typeArray": true
            },
            "backendHardwareRouters": {
                "name": "backendHardwareRouters",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true
            },
            "boundSubnets": {
                "name": "boundSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "Subnets which are directly bound to one or more routers in a given datacenter, and currently allow routing."
            },
            "brandCountryRestrictions": {
                "name": "brandCountryRestrictions",
                "type": "SoftLayer_Brand_Restriction_Location_CustomerCountry",
                "form": "relational",
                "typeArray": true,
                "doc": "This references relationship between brands, locations and countries associated with a user's account that are ineligible when ordering products. For example, the India datacenter may not be available on this brand for customers that live in Great Britain."
            },
            "frontendHardwareRouters": {
                "name": "frontendHardwareRouters",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true
            },
            "hardwareRouters": {
                "name": "hardwareRouters",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true
            },
            "presaleEvents": {
                "name": "presaleEvents",
                "type": "SoftLayer_Sales_Presale_Event",
                "form": "relational",
                "typeArray": true
            },
            "regionalGroup": {
                "name": "regionalGroup",
                "type": "SoftLayer_Location_Group_Regional",
                "form": "relational",
                "doc": "The regional group this datacenter belongs to."
            },
            "regionalInternetRegistry": {
                "name": "regionalInternetRegistry",
                "type": "SoftLayer_Network_Regional_Internet_Registry",
                "form": "relational"
            },
            "routableBoundSubnets": {
                "name": "routableBoundSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "Retrieve all subnets that are eligible to be routed; those which the account has permission to associate with a vlan."
            },
            "activeItemPresaleEventCount": {
                "name": "activeItemPresaleEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "backendHardwareRouterCount": {
                "name": "backendHardwareRouterCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "boundSubnetCount": {
                "name": "boundSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of subnets which are directly bound to one or more routers in a given datacenter, and currently allow routing."
            },
            "brandCountryRestrictionCount": {
                "name": "brandCountryRestrictionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of this references relationship between brands, locations and countries associated with a user's account that are ineligible when ordering products. For example, the India datacenter may not be available on this brand for customers that live in Great Britain."
            },
            "frontendHardwareRouterCount": {
                "name": "frontendHardwareRouterCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "hardwareRouterCount": {
                "name": "hardwareRouterCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "presaleEventCount": {
                "name": "presaleEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "routableBoundSubnetCount": {
                "name": "routableBoundSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of retrieve all subnets that are eligible to be routed; those which the account has permission to associate with a vlan."
            }
        }
    },
    "SoftLayer_Location_Group": {
        "name": "SoftLayer_Location_Group",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Location_Group",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Location_Group",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "locationGroupType": {
                "name": "locationGroupType",
                "type": "SoftLayer_Location_Group_Type",
                "form": "relational",
                "doc": "The type for this location group."
            },
            "locations": {
                "name": "locations",
                "type": "SoftLayer_Location",
                "form": "relational",
                "typeArray": true,
                "doc": "The locations in a group."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "locationGroupTypeId": {
                "name": "locationGroupTypeId",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "securityLevelId": {
                "name": "securityLevelId",
                "type": "int",
                "form": "local"
            },
            "locationCount": {
                "name": "locationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the locations in a group."
            }
        }
    },
    "SoftLayer_Location_Group_Location_CrossReference": {
        "name": "SoftLayer_Location_Group_Location_CrossReference",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "locationGroup": {
                "name": "locationGroup",
                "type": "SoftLayer_Location_Group",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "locationGroupId": {
                "name": "locationGroupId",
                "type": "int",
                "form": "local"
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local"
            },
            "priority": {
                "name": "priority",
                "type": "int",
                "form": "local",
                "doc": "If set, this is the priority of this cross reference record in the group. "
            }
        }
    },
    "SoftLayer_Location_Group_Pricing": {
        "name": "SoftLayer_Location_Group_Pricing",
        "base": "SoftLayer_Location_Group",
        "serviceDoc": "A pricing location group relates a set of [[SoftLayer_Product_Item_Price|prices]] to only be available to a set of [[SoftLayer_Location|locations]] when used for [[SoftLayer_Product_Order|ordering]]. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Location_Group",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Location_Group_Pricing",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "prices": {
                "name": "prices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "typeArray": true,
                "doc": "The prices that this pricing location group limits. All of these prices will only be available in the locations defined by this pricing location group."
            },
            "priceCount": {
                "name": "priceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the prices that this pricing location group limits. All of these prices will only be available in the locations defined by this pricing location group."
            }
        }
    },
    "SoftLayer_Location_Group_Regional": {
        "name": "SoftLayer_Location_Group_Regional",
        "base": "SoftLayer_Location_Group",
        "serviceDoc": "A regional location group is a collection of datacenters for a region. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Location_Group",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Location_Group_Regional",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "datacenters": {
                "name": "datacenters",
                "type": "SoftLayer_Location",
                "form": "relational",
                "typeArray": true,
                "doc": "The datacenters in a group."
            },
            "preferredDatacenter": {
                "name": "preferredDatacenter",
                "type": "SoftLayer_Location_Datacenter",
                "form": "relational",
                "doc": "The preferred datacenters of a group."
            },
            "datacenterCount": {
                "name": "datacenterCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the datacenters in a group."
            }
        }
    },
    "SoftLayer_Location_Group_Type": {
        "name": "SoftLayer_Location_Group_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Location_Inventory_Room": {
        "name": "SoftLayer_Location_Inventory_Room",
        "base": "SoftLayer_Location",
        "noservice": true,
        "typeDoc": "SoftLayer_Location_Inventory_Room extends the [[SoftLayer_Location]] data type to include inventory room-specific properties. "
    },
    "SoftLayer_Location_Network_Operations_Center": {
        "name": "SoftLayer_Location_Network_Operations_Center",
        "base": "SoftLayer_Location",
        "noservice": true,
        "typeDoc": "SoftLayer_Location_Network_Operations_Center extends the [[SoftLayer_Location]] data type to include network operation center-specific properties. "
    },
    "SoftLayer_Location_Office": {
        "name": "SoftLayer_Location_Office",
        "base": "SoftLayer_Location",
        "noservice": true,
        "typeDoc": "SoftLayer_Location_Office extends the [[SoftLayer_Location]] data type to include office-specific properties. "
    },
    "SoftLayer_Location_Rack": {
        "name": "SoftLayer_Location_Rack",
        "base": "SoftLayer_Location",
        "noservice": true,
        "typeDoc": "SoftLayer_Location_Rack extends the [[SoftLayer_Location]] data type to include rack-specific properties. "
    },
    "SoftLayer_Location_Region": {
        "name": "SoftLayer_Location_Region",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A region is made up of a keyname and a description of that region. A region keyname can be used as part of an order. Check the SoftLayer_Product_Order service for more details. ",
        "properties": {
            "location": {
                "name": "location",
                "type": "SoftLayer_Location_Region_Location",
                "form": "relational",
                "doc": "Each region can have many locations tied to it. However, this is the location we currently provision to for a region. This location is the current valid location for a region. (Deprecated, use 'locations')"
            },
            "locations": {
                "name": "locations",
                "type": "SoftLayer_Location_Region_Location",
                "form": "relational",
                "typeArray": true,
                "doc": "The locations (like datacenters or PoPs) in this region."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A short description of a region's name. This description is seen on the order forms. "
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "A unique key name for a region. Provided for easy debugging. This is to be sent in with an order. "
            },
            "sortOrder": {
                "name": "sortOrder",
                "type": "int",
                "form": "local",
                "doc": "An integer representing the order in which this element is displayed."
            },
            "locationCount": {
                "name": "locationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the locations (like datacenters or PoPs) in this region."
            }
        }
    },
    "SoftLayer_Location_Region_Location": {
        "name": "SoftLayer_Location_Region_Location",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Location_Region_Location is very specific to the location where services will actually be provisioned. When accessed through a package, this location is the top priority location for a region. All new servers and services are provisioned at this location. When a server is ordered and a region is selected, this is the location within that region where the server will actually exist and have software/services installed. ",
        "properties": {
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The SoftLayer_Location tied to a region's location. This provides more information about the location, including specific datacenter information."
            },
            "locationPackageDetails": {
                "name": "locationPackageDetails",
                "type": "SoftLayer_Product_Package_Locations",
                "form": "relational",
                "typeArray": true,
                "doc": "A region's location also has delivery information as well as other information to be determined. For now, availability is provided and could weigh into the decision as to where to decide to have a server provisioned.'"
            },
            "region": {
                "name": "region",
                "type": "SoftLayer_Location_Region",
                "form": "relational",
                "doc": "The region to which this location belongs."
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local"
            },
            "locationPackageDetailCount": {
                "name": "locationPackageDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a region's location also has delivery information as well as other information to be determined. For now, availability is provided and could weigh into the decision as to where to decide to have a server provisioned.'"
            }
        }
    },
    "SoftLayer_Location_Reservation": {
        "name": "SoftLayer_Location_Reservation",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAccountReservations": {
                "name": "getAccountReservations",
                "type": "SoftLayer_Location_Reservation",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Location_Reservation",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that a billing item belongs to."
            },
            "allotment": {
                "name": "allotment",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "doc": "The bandwidth allotment that the reservation belongs to."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The bandwidth allotment that the reservation belongs to."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The datacenter location that the reservation belongs to."
            },
            "locationReservationRack": {
                "name": "locationReservationRack",
                "type": "SoftLayer_Location_Reservation_Rack",
                "form": "relational",
                "doc": "Rack information for the reservation"
            },
            "allotmentId": {
                "name": "allotmentId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Location_Reservation_Rack": {
        "name": "SoftLayer_Location_Reservation_Rack",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Location_Reservation_Rack",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "allotment": {
                "name": "allotment",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "doc": "The bandwidth allotment that the reservation belongs to."
            },
            "children": {
                "name": "children",
                "type": "SoftLayer_Location_Reservation_Rack_Member",
                "form": "relational",
                "typeArray": true,
                "doc": "Members of the rack."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "locationReservation": {
                "name": "locationReservation",
                "type": "SoftLayer_Location_Reservation",
                "form": "relational"
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local"
            },
            "locationReservationId": {
                "name": "locationReservationId",
                "type": "int",
                "form": "local"
            },
            "networkConnectionCapacity": {
                "name": "networkConnectionCapacity",
                "type": "int",
                "form": "local"
            },
            "networkConnectionReservation": {
                "name": "networkConnectionReservation",
                "type": "int",
                "form": "local"
            },
            "powerConnectionCapacity": {
                "name": "powerConnectionCapacity",
                "type": "int",
                "form": "local"
            },
            "powerConnectionReservation": {
                "name": "powerConnectionReservation",
                "type": "int",
                "form": "local"
            },
            "slotCapacity": {
                "name": "slotCapacity",
                "type": "int",
                "form": "local"
            },
            "slotReservation": {
                "name": "slotReservation",
                "type": "int",
                "form": "local"
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of members of the rack."
            }
        }
    },
    "SoftLayer_Location_Reservation_Rack_Member": {
        "name": "SoftLayer_Location_Reservation_Rack_Member",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Location_Reservation_Rack_Member",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "Location relation for the rack member"
            },
            "locationReservationRack": {
                "name": "locationReservationRack",
                "type": "SoftLayer_Location_Reservation_Rack",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Location_Root": {
        "name": "SoftLayer_Location_Root",
        "base": "SoftLayer_Location",
        "noservice": true,
        "typeDoc": "SoftLayer_Location_Root extends the [[SoftLayer_Location]] data type to include root-specific properties. "
    },
    "SoftLayer_Location_Server_Room": {
        "name": "SoftLayer_Location_Server_Room",
        "base": "SoftLayer_Location",
        "noservice": true,
        "typeDoc": "SoftLayer_Location_Server_Room extends the [[SoftLayer_Location]] data type to include server room-specific properties. "
    },
    "SoftLayer_Location_Slot": {
        "name": "SoftLayer_Location_Slot",
        "base": "SoftLayer_Location",
        "noservice": true,
        "typeDoc": "SoftLayer_Location_Slot extends the [[SoftLayer_Location]] data type to include slot-specific properties. "
    },
    "SoftLayer_Location_Status": {
        "name": "SoftLayer_Location_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Location_Status models the state of any location. SoftLayer uses the following status codes: \n\n\n*'''ACTIVE''': The location is currently active and available for public usage.\n*'''PLANNED''': Used when a location is planned but not yet active.\n*'''RETIRED''': Used when a location has been retired and no longer active.\n\n\nLocations in use should stay in the ACTIVE state. If a locations status ever reads anything else and contains active hardware then please contact SoftLayer support. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A locations status's internal identifier."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "A Location's status code. See the SoftLayer_Locaiton_Status Overview for ''status''' possible values."
            }
        }
    },
    "SoftLayer_Location_Storage_Room": {
        "name": "SoftLayer_Location_Storage_Room",
        "base": "SoftLayer_Location",
        "noservice": true,
        "typeDoc": "SoftLayer_Location_Storage_Room extends the [[SoftLayer_Location]] data type to include storage room-specific properties. "
    },
    "SoftLayer_Marketplace_EmailDistribution": {
        "name": "SoftLayer_Marketplace_EmailDistribution",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "email": {
                "name": "email",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Marketplace_Partner": {
        "name": "SoftLayer_Marketplace_Partner",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Marketplace_Partner",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getAllPublishedPartners": {
                "name": "getAllPublishedPartners",
                "type": "SoftLayer_Marketplace_Partner",
                "typeArray": true,
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "searchTerm",
                        "type": "string",
                        "doc": "Search on a subset of the partners"
                    }
                ]
            },
            "getFeaturedPartners": {
                "name": "getFeaturedPartners",
                "type": "SoftLayer_Marketplace_Partner",
                "typeArray": true,
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "non",
                        "type": "boolean",
                        "doc": "If true, return non featured partners",
                        "defaultValue": false
                    }
                ]
            },
            "getFile": {
                "name": "getFile",
                "type": "SoftLayer_Marketplace_Partner_File",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "doc": "The name of the file"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Marketplace_Partner",
                "filterable": true,
                "maskable": true
            },
            "getPartnerByUrlIdentifier": {
                "name": "getPartnerByUrlIdentifier",
                "type": "SoftLayer_Marketplace_Partner",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "urlIdentifier",
                        "type": "string",
                        "doc": "The name of the urlIdentifier"
                    }
                ]
            }
        },
        "properties": {
            "attachments": {
                "name": "attachments",
                "type": "SoftLayer_Marketplace_Partner_Attachment",
                "form": "relational",
                "typeArray": true
            },
            "logoMedium": {
                "name": "logoMedium",
                "type": "SoftLayer_Marketplace_Partner_Attachment",
                "form": "relational"
            },
            "logoMediumTemp": {
                "name": "logoMediumTemp",
                "type": "SoftLayer_Marketplace_Partner_Attachment",
                "form": "relational"
            },
            "logoSmall": {
                "name": "logoSmall",
                "type": "SoftLayer_Marketplace_Partner_Attachment",
                "form": "relational"
            },
            "logoSmallTemp": {
                "name": "logoSmallTemp",
                "type": "SoftLayer_Marketplace_Partner_Attachment",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "attachedFiles": {
                "name": "attachedFiles",
                "type": "SoftLayer_Marketplace_Partner_Attachment",
                "form": "local",
                "typeArray": true
            },
            "companyDescription": {
                "name": "companyDescription",
                "type": "string",
                "form": "local"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local"
            },
            "headlineDescription": {
                "name": "headlineDescription",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "linkFreeTrial": {
                "name": "linkFreeTrial",
                "type": "string",
                "form": "local"
            },
            "linkOrderPage": {
                "name": "linkOrderPage",
                "type": "string",
                "form": "local"
            },
            "linkWebsite": {
                "name": "linkWebsite",
                "type": "string",
                "form": "local"
            },
            "metaDescription": {
                "name": "metaDescription",
                "type": "string",
                "form": "local"
            },
            "metaKeywords": {
                "name": "metaKeywords",
                "type": "string",
                "form": "local"
            },
            "productBenefits": {
                "name": "productBenefits",
                "type": "string",
                "form": "local"
            },
            "productCategoryId": {
                "name": "productCategoryId",
                "type": "int",
                "form": "local"
            },
            "productDescriptionLong": {
                "name": "productDescriptionLong",
                "type": "string",
                "form": "local"
            },
            "productDescriptionShort": {
                "name": "productDescriptionShort",
                "type": "string",
                "form": "local"
            },
            "productFeatures": {
                "name": "productFeatures",
                "type": "string",
                "form": "local"
            },
            "productName": {
                "name": "productName",
                "type": "string",
                "form": "local"
            },
            "productTitle": {
                "name": "productTitle",
                "type": "string",
                "form": "local"
            },
            "urlIdentifier": {
                "name": "urlIdentifier",
                "type": "string",
                "form": "local"
            },
            "attachmentCount": {
                "name": "attachmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Marketplace_Partner_Attachment": {
        "name": "SoftLayer_Marketplace_Partner_Attachment",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "attachmentType": {
                "name": "attachmentType",
                "type": "SoftLayer_Marketplace_Partner_Attachment_Type",
                "form": "relational"
            },
            "attachmentTypeId": {
                "name": "attachmentTypeId",
                "type": "int",
                "form": "local"
            },
            "baseName": {
                "name": "baseName",
                "type": "string",
                "form": "local"
            },
            "displayName": {
                "name": "displayName",
                "type": "string",
                "form": "local"
            },
            "fileName": {
                "name": "fileName",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "marketplacePartnerId": {
                "name": "marketplacePartnerId",
                "type": "int",
                "form": "local"
            },
            "saveAsName": {
                "name": "saveAsName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Marketplace_Partner_Attachment_Type": {
        "name": "SoftLayer_Marketplace_Partner_Attachment_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Marketplace_Partner_File": {
        "name": "SoftLayer_Marketplace_Partner_File",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Marketplace_Partner_File_Attributes",
                "form": "local"
            },
            "contents": {
                "name": "contents",
                "type": "base64Binary",
                "form": "local"
            }
        }
    },
    "SoftLayer_Marketplace_Partner_File_Attributes": {
        "name": "SoftLayer_Marketplace_Partner_File_Attributes",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "bits": {
                "name": "bits",
                "type": "int",
                "form": "local"
            },
            "channels": {
                "name": "channels",
                "type": "int",
                "form": "local"
            },
            "height": {
                "name": "height",
                "type": "int",
                "form": "local"
            },
            "htmlAttributes": {
                "name": "htmlAttributes",
                "type": "string",
                "form": "local"
            },
            "imageType": {
                "name": "imageType",
                "type": "int",
                "form": "local"
            },
            "isImage": {
                "name": "isImage",
                "type": "boolean",
                "form": "local"
            },
            "mimeType": {
                "name": "mimeType",
                "type": "string",
                "form": "local"
            },
            "width": {
                "name": "width",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Metric_Tracking_Object": {
        "name": "SoftLayer_Metric_Tracking_Object",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Metric tracking objects provides a common interface to all metrics provided by SoftLayer. These metrics range from network component traffic for a server to aggregated Bandwidth Pooling traffic and more. Every object within SoftLayer's range of objects that has data that can be tracked over time has an associated tracking object. \n\nThe SoftLayer_Metric_Tracking_Object service contains methods that allow users to retrieve data from these tracking objects in raw and graph form. ",
        "methods": {
            "getBackboneBandwidthGraph": {
                "name": "getBackboneBandwidthGraph",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "[DEPRECATED] Retrieve a PNG image of the last 24 hours of bandwidth usage of one of SoftLayer's network backbones. ",
                "parameters": [
                    {
                        "name": "graphTitle",
                        "type": "string",
                        "doc": "An optional name to override a backbone graph image's title"
                    }
                ]
            },
            "getBandwidthData": {
                "name": "getBandwidthData",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve a collection of raw bandwidth data from an individual public or private network tracking object. Raw data is ideal if you with to employ your own traffic storage and graphing systems. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "The starting date of the range of data you wish to collect.",
                        "defaultValue": null
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "The ending date of the range of data you wish to collect.",
                        "defaultValue": null
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "The type type of the bandwidth data you wish to retrieve, either \"public\" or \"private\".",
                        "defaultValue": "PUBLIC"
                    },
                    {
                        "name": "rollupSeconds",
                        "type": "int",
                        "doc": "The amount of rollup seconds to segregate data in. Rollup seconds enable you to retrieve the average amount of bandwidth used per individual delta in your date range. For instance, a rollupSeconds value of 3600 will return data averaged over every hour.",
                        "defaultValue": 0
                    }
                ]
            },
            "getBandwidthGraph": {
                "name": "getBandwidthGraph",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Retrieve a PNG image of a bandwidth graph representing the bandwidth usage over time recorded by SofTLayer's bandwidth pollers. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "The starting date of the range of graph data you wish to retrieve.",
                        "defaultValue": null
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "The ending date of the range of graph data you wish to retrieve.",
                        "defaultValue": null
                    },
                    {
                        "name": "graphType",
                        "type": "string",
                        "doc": "$graphType The type type of the bandwidth graph you wish to retrieve, either \"public\" or \"private\".",
                        "defaultValue": null
                    },
                    {
                        "name": "fontSize",
                        "type": "int",
                        "doc": "$fontSize Size to draw the font on the graph labels and legend.",
                        "defaultValue": 8
                    },
                    {
                        "name": "graphWidth",
                        "type": "int",
                        "doc": "$graphWidth Number of pixel wide you would like to draw the graph.",
                        "defaultValue": 827
                    },
                    {
                        "name": "graphHeight",
                        "type": "int",
                        "doc": "$graphHeight Number of pixel high you would like to draw the graph.",
                        "defaultValue": 273
                    },
                    {
                        "name": "doNotShowTimeZone",
                        "type": "boolean",
                        "doc": "$doNotShowTimeZone Whether or not you'd like the timezone printed on the graph margin.",
                        "defaultValue": false
                    }
                ]
            },
            "getBandwidthTotal": {
                "name": "getBandwidthTotal",
                "type": "unsignedLong",
                "doc": "Retrieve the total amount of bandwidth recorded by a tracking object within the given date range. This method will only work on SoftLayer_Metric_Tracking_Object for SoftLayer_Hardware objects, and SoftLayer_Virtual_Guest objects. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "The starting date of the range of data you wish to collect.",
                        "defaultValue": null
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "The ending date of the range of data you wish to collect.",
                        "defaultValue": null
                    },
                    {
                        "name": "direction",
                        "type": "string",
                        "doc": "The direction of data flow that you wish to retrieve totals for, either \"in\", \"out\", or \"both\".",
                        "defaultValue": "BOTH"
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "The type type of the bandwidth data you wish to retrieve totals for, either \"public\" or \"private\", or \"both\".",
                        "defaultValue": "PUBLIC"
                    }
                ]
            },
            "getCustomGraphData": {
                "name": "getCustomGraphData",
                "type": "SoftLayer_Container_Graph",
                "doc": "Returns a graph container instance that is populated with metric data for the tracking object. ",
                "parameters": [
                    {
                        "name": "graphContainer",
                        "type": "SoftLayer_Container_Graph"
                    }
                ]
            },
            "getDetailsForDateRange": {
                "name": "getDetailsForDateRange",
                "type": "SoftLayer_Container_Metric_Tracking_Object_Details",
                "typeArray": true,
                "doc": "Retrieve a collection of detailed metric data over a date range. Ideal if you want to employ your own graphing systems.  Note not all metrics support this method.  Those that do not return null. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The starting date of the range of data you wish to collect."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The ending date of the range of data you wish to collect."
                    },
                    {
                        "name": "graphType",
                        "type": "string",
                        "typeArray": true,
                        "doc": "The type of metric to gather data for (InstanceCount, HostMemoryUsage, HostReservedMemoryUsage).",
                        "defaultValue": null
                    }
                ]
            },
            "getGraph": {
                "name": "getGraph",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Retrieve a PNG image of a metric in graph form. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "timestamp of the starting date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "timestamp of the ending date of the graph"
                    },
                    {
                        "name": "graphType",
                        "type": "string",
                        "typeArray": true,
                        "doc": "type of the graph (\"public\" or \"private\" for bandwidth, \"InstanceCount\" or \"HostMemoryUsage\" or \"HostReservedMemoryUsage\" for virtual hosts)",
                        "defaultValue": null
                    }
                ]
            },
            "getMetricDataTypes": {
                "name": "getMetricDataTypes",
                "type": "SoftLayer_Container_Metric_Data_Type",
                "typeArray": true,
                "doc": "Returns a collection of metric data types that can be retrieved for a metric tracking object. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Metric_Tracking_Object",
                "doc": "getObject retrieves the SoftLayer_Metric_Tracking_Object object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Metric_Tracking_Object service. You can only tracking objects that are associated with your SoftLayer account or services. ",
                "filterable": true,
                "maskable": true
            },
            "getSummary": {
                "name": "getSummary",
                "type": "SoftLayer_Container_Metric_Tracking_Object_Summary",
                "doc": "Retrieve a metric summary. Ideal if you want to employ your own graphing systems.  Note not all metric types contain a summary.  These return null. ",
                "parameters": [
                    {
                        "name": "graphType",
                        "type": "string",
                        "doc": "The type of metric to gather data for (InstanceCount, HostMemoryUsage, HostReservedMemoryUsage).",
                        "defaultValue": null
                    }
                ]
            },
            "getSummaryData": {
                "name": "getSummaryData",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Returns summarized metric data for the date range, metric type and summary period provided. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime"
                    },
                    {
                        "name": "validTypes",
                        "type": "SoftLayer_Container_Metric_Data_Type",
                        "typeArray": true
                    },
                    {
                        "name": "summaryPeriod",
                        "type": "int",
                        "doc": "300, 600, 1800, 3600, 43200 or 86400 seconds"
                    }
                ]
            }
        },
        "typeDoc": "Metric tracking objects provides a common interface to all metrics provided by SoftLayer. These metrics range from network component traffic for a server to aggregated Bandwidth Pooling traffic and more. Every object within SoftLayer's range of objects that has data that can be tracked over time has an associated tracking object. Use the [[SoftLayer_Metric_Tracking_Object]] service to retrieve raw and graph data from a tracking object. ",
        "properties": {
            "type": {
                "name": "type",
                "type": "SoftLayer_Metric_Tracking_Object_Type",
                "form": "relational",
                "doc": "The type of data that a tracking object polls."
            },
            "data": {
                "name": "data",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "form": "local",
                "typeArray": true,
                "doc": "The data recorded by a tracking object. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A tracking object's internal identifier. "
            },
            "label": {
                "name": "label",
                "type": "string",
                "form": "local",
                "doc": "Tracking object label "
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the existing resource this object is attempting to track. "
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date this tracker began tracking this particular resource. "
            }
        }
    },
    "SoftLayer_Metric_Tracking_Object_Abstract": {
        "name": "SoftLayer_Metric_Tracking_Object_Abstract",
        "base": "SoftLayer_Metric_Tracking_Object",
        "noservice": true,
        "typeDoc": "SoftLayer_Metric_Tracking_Object_Abstract models a generic tracking object type. Typically a tracking object with a specific purpose has it's own data type defined within the SoftLayer API. "
    },
    "SoftLayer_Metric_Tracking_Object_Bandwidth_Summary": {
        "name": "SoftLayer_Metric_Tracking_Object_Bandwidth_Summary",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Metric_Tracking_Object_Bandwidth_Summary",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This data type provides commonly used bandwidth summary components for the current billing cycle. ",
        "properties": {
            "allocationAmount": {
                "name": "allocationAmount",
                "type": "float",
                "form": "local",
                "doc": "This is the amount of bandwidth (measured in gigabytes) allocated for this tracking object. "
            },
            "allocationId": {
                "name": "allocationId",
                "type": "int",
                "form": "local"
            },
            "amountOut": {
                "name": "amountOut",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of outbound bandwidth (measured in gigabytes) currently used this billing period. Same as $outboundBandwidthAmount. Aliased for backward compatability. "
            },
            "averageDailyUsage": {
                "name": "averageDailyUsage",
                "type": "float",
                "form": "local",
                "doc": "The daily average amount of outbound bandwidth usage. "
            },
            "currentlyOverAllocationFlag": {
                "name": "currentlyOverAllocationFlag",
                "type": "int",
                "form": "local",
                "doc": "A flag that tells whether or not this tracking object's bandwidth usage is already over the allocation. 1 means yes, 0 means no. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The metric tracking id for this resource. "
            },
            "outboundBandwidthAmount": {
                "name": "outboundBandwidthAmount",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of outbound bandwidth (measured in gigabytes) currently used this billing period "
            },
            "projectedBandwidthUsage": {
                "name": "projectedBandwidthUsage",
                "type": "float",
                "form": "local",
                "doc": "The amount of bandwidth (measured in gigabytes) of projected usage, using a basic average calculation of daily usage. "
            },
            "projectedOverAllocationFlag": {
                "name": "projectedOverAllocationFlag",
                "type": "int",
                "form": "local",
                "doc": "A flag that tells whether or not this tracking object's bandwidth usage is projected to go over the allocation, based on daily average usage. 1 means yes, 0 means no. "
            }
        }
    },
    "SoftLayer_Metric_Tracking_Object_Data": {
        "name": "SoftLayer_Metric_Tracking_Object_Data",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Metric_Tracking_Object_Data models an individual unit of data tracked by a SoftLayer tracking object, including the type of data polled, the date it was polled at, and the counter value that was measured at polling time. ",
        "properties": {
            "counter": {
                "name": "counter",
                "type": "float",
                "form": "local",
                "doc": "The value stored for a data record. "
            },
            "dateTime": {
                "name": "dateTime",
                "type": "dateTime",
                "form": "local",
                "doc": "The time a data record was stored. "
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of data held in a record. "
            }
        }
    },
    "SoftLayer_Metric_Tracking_Object_HardwareServer": {
        "name": "SoftLayer_Metric_Tracking_Object_HardwareServer",
        "base": "SoftLayer_Metric_Tracking_Object_Abstract",
        "noservice": true,
        "typeDoc": "SoftLayer_Metric_Tracking_Object_HardwareServer models tracking objects specific to physical hardware and the data that are recorded by those servers. ",
        "properties": {
            "billingCycleBandwidthUsage": {
                "name": "billingCycleBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsage": {
                "name": "billingCyclePrivateBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            },
            "billingCyclePrivateUsageIn": {
                "name": "billingCyclePrivateUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private inbound bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePrivateUsageOut": {
                "name": "billingCyclePrivateUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private outbound bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePrivateUsageTotal": {
                "name": "billingCyclePrivateUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total private bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsage": {
                "name": "billingCyclePublicBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "The raw public bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            },
            "billingCyclePublicUsageIn": {
                "name": "billingCyclePublicUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public inbound bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePublicUsageOut": {
                "name": "billingCyclePublicUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePublicUsageTotal": {
                "name": "billingCyclePublicUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total public bandwidth for this item's resource for the current billing cycle."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Hardware_Server",
                "form": "relational",
                "doc": "The server that this tracking object tracks."
            },
            "billingCycleBandwidthUsageCount": {
                "name": "billingCycleBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsageCount": {
                "name": "billingCyclePrivateBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            }
        }
    },
    "SoftLayer_Metric_Tracking_Object_Type": {
        "name": "SoftLayer_Metric_Tracking_Object_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer [[SoftLayer_Metric_Tracking_Object|tracking objects]] can model various kinds of measured data, from server and virtual server bandwidth usage to CPU use to remote storage usage. SoftLayer_Metric_Tracking_Object_Type models one of these types and is referred to in tracking objects to reflect what type of data they track. ",
        "properties": {
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "Description A tracking object type's key name. This is a shorter description of what kind of data a tracking object group is polling. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Description A tracking object type's name. This describes what kind of data a tracking object group is polling. "
            }
        }
    },
    "SoftLayer_Metric_Tracking_Object_Virtual_Storage_Repository": {
        "name": "SoftLayer_Metric_Tracking_Object_Virtual_Storage_Repository",
        "base": "SoftLayer_Metric_Tracking_Object_Abstract",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_Storage_Repository",
                "form": "relational",
                "doc": "The virtual storage repository that this tracking object tracks."
            }
        }
    },
    "SoftLayer_Metric_Tracking_Object_VirtualDedicatedRack": {
        "name": "SoftLayer_Metric_Tracking_Object_VirtualDedicatedRack",
        "base": "SoftLayer_Metric_Tracking_Object_Abstract",
        "noservice": true,
        "typeDoc": "SoftLayer_Metric_Tracking_Object_VirtualDedicatedRack models tracking objects specific to virtual dedicated racks. Bandwidth Pooling aggregate the bandwidth used by multiple servers within the rack. ",
        "properties": {
            "billingCycleBandwidthUsage": {
                "name": "billingCycleBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsage": {
                "name": "billingCyclePrivateBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            },
            "billingCyclePrivateUsageIn": {
                "name": "billingCyclePrivateUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private inbound bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePrivateUsageOut": {
                "name": "billingCyclePrivateUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private outbound bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePrivateUsageTotal": {
                "name": "billingCyclePrivateUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total private bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsage": {
                "name": "billingCyclePublicBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "The raw bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            },
            "billingCyclePublicUsageIn": {
                "name": "billingCyclePublicUsageIn",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public inbound bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePublicUsageOut": {
                "name": "billingCyclePublicUsageOut",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth for this item's resource for the current billing cycle."
            },
            "billingCyclePublicUsageTotal": {
                "name": "billingCyclePublicUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total public bandwidth for this item's resource for the current billing cycle."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "doc": "The virtual rack that this tracking object tracks."
            },
            "billingCycleBandwidthUsageCount": {
                "name": "billingCycleBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsageCount": {
                "name": "billingCyclePrivateBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object is returned for each network this server is attached to."
            }
        }
    },
    "SoftLayer_Monitoring_Robot": {
        "name": "SoftLayer_Monitoring_Robot",
        "base": "SoftLayer_Entity",
        "serviceDoc": "DEPRECATED. ",
        "methods": {
            "checkConnection": {
                "name": "checkConnection",
                "type": "boolean",
                "doc": "DEPRECATED. Checks if a monitoring robot can communicate with SoftLayer monitoring management system via the private network. \n\nTCP port 48000 - 48002 must be open on your server or your virtual server in order for this test to succeed. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Monitoring_Robot",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "DEPRECATED. The SoftLayer_Monitoring_Robot data type contains general information relating to a monitoring robot. ",
        "properties": {
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. Internal identifier of a SoftLayer account that this robot belongs to"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. Internal identifier of a monitoring robot"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "DEPRECATED. Robot name"
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. Internal identifier of a monitoring robot status"
            }
        }
    },
    "SoftLayer_Monitoring_Robot_Status": {
        "name": "SoftLayer_Monitoring_Robot_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "DEPRECATED. Your monitoring robot will be in \"Active\" status under normal circumstances. If you perform an OS reload, your robot will be in \"Reclaim\" status until it's reloaded on your server or virtual server. \n\nAdvanced monitoring system requires \"Nimsoft Monitoring (Advanced)\" service running and TCP ports 48000 - 48020 to be open on your server or virtual server. Monitoring agents cannot be managed nor can the usage data be updated if these ports are closed. Your monitoring robot will be in \"Limited Connectivity\" status if our monitoring management system cannot communicate with your system. \n\nSee [[SoftLayer_Monitoring_Robot::resetStatus|resetStatus]] service for more details. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "DEPRECATED. Monitoring robot status description"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. Internal identifier of a monitoring robot status"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "DEPRECATED. Monitoring robot status name"
            }
        }
    },
    "SoftLayer_Network": {
        "name": "SoftLayer_Network",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Provides services oriented to network-centric discovery and manipulation. ",
        "methods": {
            "connectPrivateEndpointService": {
                "name": "connectPrivateEndpointService",
                "type": "boolean",
                "doc": "Initiate the automated process to establish connectivity granting the account private back-end network access to the services available through IBM Cloud Service Endpoint. Once initiated, the configuration process occurs asynchronously in the background. \n\n\n\n<h2>Responses</h2> \n\n<code>True</code> The request to connect was successfully initiated. \n\n<code>False</code> The account and Service Endpoint networks are already connected. \n\n\n\n<h2>Exceptions</h2> \n\n<code>SoftLayer_Exception_NotReady</code> Thrown when the current network configuration will not support connection alteration. \n\n\n\n",
                "static": true
            },
            "disconnectPrivateEndpointService": {
                "name": "disconnectPrivateEndpointService",
                "type": "boolean",
                "doc": "Initiate the automated process to revoke mutual connectivity from the account network and IBM Cloud Service Endpoint network. Once initiated, the configuration process occurs asynchronously in the background. \n\n\n\n<h2>Responses</h2> \n\n<code>True</code> The request to disconnect was successfully initiated. \n\n<code>False</code> The account and Service Endpoint networks are already disconnected. \n\n\n\n<h2>Exceptions</h2> \n\n<code>SoftLayer_Exception_NotReady</code> Thrown when the current network configuration will not support connection alteration. \n\n\n\n",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network",
                "filterable": true,
                "maskable": true
            },
            "isConnectedToPrivateEndpointService": {
                "name": "isConnectedToPrivateEndpointService",
                "type": "boolean",
                "doc": "Accessing select IBM Cloud services attached to the private back-end network is made possible by establishing a network relationship between an account's private network and the Service Endpoint network. \n\n\n\n<h2>Responses</h2> \n\n<code>True</code> The account and Service Endpoint networks are currently connected. \n\n<code>False</code> The account and Service Endpoint networks are not connected; both networks are properly configured to connect. \n\n\n\n<h2>Exceptions</h2> \n\n<code>SoftLayer_Exception_NotReady</code> Thrown when the current network configuration will not support connection alteration. \n\n\n\n",
                "static": true
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller": {
        "name": "SoftLayer_Network_Application_Delivery_Controller",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Network_Application_Delivery_Controller controls a single instance of SoftLayer's application delivery controller offerings. Application delivery controllers are capable of application filtering, layer 4 and layer 7 load balancing, and many other functions. Currently SoftLayer employs them as high power load balancers. Load balancing is accomplished similarly to SoftLayer's other load balancer options, through a collection of virtual IP address interfaces. \n\nApplication delivery controllers support an \"advanced\" configuration scheme, enabling access directly to the controller's backend management interface. Enable access to this interface via the [[SoftLayer_Network_Application_Delivery_Controller::enableAdvancedView|enableAdvancedView]] method in this service. Use the username \"root\" and password retrieved from this service along with the management IP address retrieved from this service. Be warned that direct access to the application delivery controller exposes a high degree of functionality. Be careful when directly editing your service to avoid interruption via misconfiguration. ",
        "methods": {
            "createLiveLoadBalancer": {
                "name": "createLiveLoadBalancer",
                "type": "boolean",
                "doc": "Create or add to an application delivery controller based load balancer service. The loadBalancer parameter must have its ''name'', ''type'', ''sourcePort'', and ''virtualIpAddress'' properties populated. Changes are reflected immediately in the application delivery controller. ",
                "parameters": [
                    {
                        "name": "loadBalancer",
                        "type": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
                        "doc": "The virtual IP address interface you wish to attach to the load balancer service"
                    }
                ]
            },
            "deleteLiveLoadBalancer": {
                "name": "deleteLiveLoadBalancer",
                "type": "boolean",
                "doc": "Remove a virtual IP address from an application delivery controller based load balancer. Only the ''name'' property in the loadBalancer parameter must be populated. Changes are reflected immediately in the application delivery controller. ",
                "parameters": [
                    {
                        "name": "loadBalancer",
                        "type": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
                        "doc": "The virtual IP address interface you wish to remove"
                    }
                ]
            },
            "deleteLiveLoadBalancerService": {
                "name": "deleteLiveLoadBalancerService",
                "type": "boolean",
                "doc": "Remove an entire load balancer service, including all virtual IP addresses, from and application delivery controller based load balancer. The ''name'' property the and ''name'' property within the ''vip'' property of the service parameter must be provided. Changes are reflected immediately in the application delivery controller. ",
                "parameters": [
                    {
                        "name": "service",
                        "type": "SoftLayer_Network_LoadBalancer_Service",
                        "doc": "The load balancer service you wish to remove with at least one ''vip'' property populated."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit an applications delivery controller record. Currently only a controller's notes property is editable. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Application_Delivery_Controller",
                        "doc": "A skeleton SoftLayer_Network_Application_Delivery_Controller object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getBandwidthDataByDate": {
                "name": "getBandwidthDataByDate",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    },
                    {
                        "name": "networkType",
                        "type": "string",
                        "doc": "$networkType   type of the graph, either \"public\" or \"private\""
                    }
                ]
            },
            "getBandwidthImageByDate": {
                "name": "getBandwidthImageByDate",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Use this method when needing a bandwidth image for a single application delivery controller. It will gather the correct input parameters for the generic graphing utility based on the date ranges ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    },
                    {
                        "name": "networkType",
                        "type": "string",
                        "doc": "$networkType   type of the graph, either \"public\" or \"private\""
                    }
                ]
            },
            "getCustomBandwidthDataByDate": {
                "name": "getCustomBandwidthDataByDate",
                "type": "SoftLayer_Container_Graph",
                "doc": "Retrieve bandwidth graph by date. ",
                "parameters": [
                    {
                        "name": "graphData",
                        "type": "SoftLayer_Container_Graph"
                    }
                ]
            },
            "getLiveLoadBalancerServiceGraphImage": {
                "name": "getLiveLoadBalancerServiceGraphImage",
                "type": "base64Binary",
                "doc": "Get the graph image for an application delivery controller service based on the supplied graph type and metric.  The available graph types are: 'connections' and 'status', and the available metrics are: 'day', 'week' and 'month'. \n\nThis method returns the raw binary image data. ",
                "parameters": [
                    {
                        "name": "service",
                        "type": "SoftLayer_Network_LoadBalancer_Service",
                        "doc": "The load balancer object you wish to retrieve a graph for"
                    },
                    {
                        "name": "graphType",
                        "type": "string",
                        "doc": "The string \"connections\" or \"status\" depending on the type of graph you wish to retrieve"
                    },
                    {
                        "name": "metric",
                        "type": "string",
                        "doc": "The string \"day\", \"week\", or \"month\" depending on the duration of data you wish to retrieve in your graph"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "doc": "getObject retrieves the SoftLayer_Network_Application_Delivery_Controller object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Application_Delivery_Controller service. You can only retrieve application delivery controllers that are associated with your SoftLayer customer account. ",
                "filterable": true,
                "maskable": true
            },
            "restoreBaseConfiguration": {
                "name": "restoreBaseConfiguration",
                "type": "boolean",
                "doc": "Restore an application delivery controller's base configuration state. The configuration will be set to what it was when initially provisioned. "
            },
            "restoreConfiguration": {
                "name": "restoreConfiguration",
                "type": "boolean",
                "doc": "Restore an application delivery controller's configuration state. ",
                "parameters": [
                    {
                        "name": "configurationHistoryId",
                        "type": "int",
                        "doc": "The id of a SoftLayer_Network_Application_Delivery_Controller_Configuration_History record to restore."
                    }
                ]
            },
            "saveCurrentConfiguration": {
                "name": "saveCurrentConfiguration",
                "type": "SoftLayer_Network_Application_Delivery_Controller_Configuration_History",
                "doc": "Save an application delivery controller's configuration state. The notes property for this method is optional. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "notes",
                        "type": "string",
                        "doc": "A note to identify a saved configuration at a later date."
                    }
                ]
            },
            "updateLiveLoadBalancer": {
                "name": "updateLiveLoadBalancer",
                "type": "boolean",
                "doc": "Update the the virtual IP address interface within an application delivery controller based load balancer identified by the ''name'' property in the loadBalancer parameter. You only need to set the properties in the loadBalancer parameter that you wish to change. Any virtual IP properties omitted or left empty are ignored. Changes are reflected immediately in the application delivery controller. ",
                "parameters": [
                    {
                        "name": "loadBalancer",
                        "type": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
                        "doc": "The updated virtual IP address interface record"
                    }
                ]
            },
            "updateNetScalerLicense": {
                "name": "updateNetScalerLicense",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "Update the NetScaler VPX License. \n\nThis service will create a transaction to update a NetScaler VPX License.  After the license is updated the load balancer will reboot in order to apply the newly issued license \n\nThe load balancer will be unavailable during the reboot. ",
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Application_Delivery_Controller data type models a single instance of an application delivery controller. Local properties are read only, except for a ''notes'' property, which can be used to describe your application delivery controller service. The type's relational properties provide more information to the service's function and login information to the controller's backend management if advanced view is enabled. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account that owns an application delivery controller record."
            },
            "averageDailyPublicBandwidthUsage": {
                "name": "averageDailyPublicBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The average daily public bandwidth usage for the current billing cycle."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item_Network_Application_Delivery_Controller",
                "form": "relational",
                "doc": "The billing item for a Application Delivery Controller."
            },
            "configurationHistory": {
                "name": "configurationHistory",
                "type": "SoftLayer_Network_Application_Delivery_Controller_Configuration_History",
                "form": "relational",
                "typeArray": true,
                "doc": "Previous configurations for an Application Delivery Controller."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The datacenter that the application delivery controller resides in."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "relational",
                "doc": "A brief description of an application delivery controller record."
            },
            "licenseExpirationDate": {
                "name": "licenseExpirationDate",
                "type": "dateTime",
                "form": "relational",
                "doc": "The date in which the license for this application delivery controller will expire."
            },
            "loadBalancers": {
                "name": "loadBalancers",
                "type": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "The virtual IP address records that belong to an application delivery controller based load balancer."
            },
            "managedResourceFlag": {
                "name": "managedResourceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that this Application Delivery Controller is a managed resource."
            },
            "managementIpAddress": {
                "name": "managementIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "An application delivery controller's management ip address."
            },
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The network VLAN that an application delivery controller resides on."
            },
            "networkVlans": {
                "name": "networkVlans",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "The network VLANs that an application delivery controller resides on."
            },
            "outboundPublicBandwidthUsage": {
                "name": "outboundPublicBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth for the current billing cycle."
            },
            "password": {
                "name": "password",
                "type": "SoftLayer_Software_Component_Password",
                "form": "relational",
                "doc": "The password used to connect to an application delivery controller's management interface when it is operating in advanced view mode."
            },
            "primaryIpAddress": {
                "name": "primaryIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "An application delivery controller's primary public IP address."
            },
            "projectedPublicBandwidthUsage": {
                "name": "projectedPublicBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The projected public outbound bandwidth for the current billing cycle."
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "A network application controller's subnets. A subnet is a group of IP addresses"
            },
            "tagReferences": {
                "name": "tagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Application_Delivery_Controller_Type",
                "form": "relational"
            },
            "virtualIpAddresses": {
                "name": "virtualIpAddresses",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
                "form": "relational",
                "typeArray": true
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the SoftLayer customer account that owns an application delivery controller record"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that an application delivery controller record was created"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An application delivery controller's unique identifier"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that an application delivery controller record was last modified"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "An application delivery controller's name"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Editable notes used to describe an application delivery controller's function"
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local"
            },
            "configurationHistoryCount": {
                "name": "configurationHistoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of previous configurations for an Application Delivery Controller."
            },
            "loadBalancerCount": {
                "name": "loadBalancerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the virtual IP address records that belong to an application delivery controller based load balancer."
            },
            "networkVlanCount": {
                "name": "networkVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the network VLANs that an application delivery controller resides on."
            },
            "subnetCount": {
                "name": "subnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a network application controller's subnets. A subnet is a group of IP addresses"
            },
            "tagReferenceCount": {
                "name": "tagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "virtualIpAddressCount": {
                "name": "virtualIpAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_Configuration_History": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_Configuration_History",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Network_Application_Delivery_Controller_Configuration_History provides access to view or delete existing configuration history records. Configuration content may not be viewed as it may contain sensitive information. The configuration history entries are used to support creating backups of an application delivery controller's configuration state in order to restore them later if needed. ",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "deleteObject permanently removes a configuration history record "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_Configuration_History",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Application_Delivery_Controller_Configuration_History data type models a single instance of a configuration history entry for an application delivery controller. The configuration history entries are used to support creating backups of an application delivery controller's configuration state in order to restore them later if needed. ",
        "properties": {
            "controller": {
                "name": "controller",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "form": "relational",
                "doc": "The application delivery controller that a configuration history record belongs to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a configuration history record was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An configuration history record's unique identifier"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Editable notes used to describe a configuration history record"
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Attribute": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Attribute",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Attribute",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "healthCheck": {
                "name": "healthCheck",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Attribute_Type",
                "form": "relational"
            },
            "healthAttributeTypeId": {
                "name": "healthAttributeTypeId",
                "type": "int",
                "form": "local"
            },
            "healthCheckId": {
                "name": "healthCheckId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Attribute_Type": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Attribute_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Attribute_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Attribute_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "valueExpression": {
                "name": "valueExpression",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "scaleLoadBalancers": {
                "name": "scaleLoadBalancers",
                "type": "SoftLayer_Scale_LoadBalancer",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of scale load balancers that use this health check."
            },
            "services": {
                "name": "services",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service",
                "form": "relational",
                "typeArray": true
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check_Type",
                "form": "relational"
            },
            "healthCheckTypeId": {
                "name": "healthCheckTypeId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local"
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "scaleLoadBalancerCount": {
                "name": "scaleLoadBalancerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of scale load balancers that use this health check."
            },
            "serviceCount": {
                "name": "serviceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check_Type": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Method": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Method",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Method",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Method",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Type": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service",
        "base": "SoftLayer_Entity",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "getGraphImage": {
                "name": "getGraphImage",
                "type": "base64Binary",
                "doc": "Get the graph image for a load balancer service based on the supplied graph type and metric.  The available graph types are: 'connections' and 'status', and the available metrics are: 'day', 'week' and 'month'. \n\nThis method returns the raw binary image data. ",
                "parameters": [
                    {
                        "name": "graphType",
                        "type": "string",
                        "doc": "The graph type can be either 'connections' or 'status'."
                    },
                    {
                        "name": "metric",
                        "type": "string",
                        "doc": "The metric can be 'day', 'week', or 'month'."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service",
                "filterable": true,
                "maskable": true
            },
            "toggleStatus": {
                "name": "toggleStatus",
                "type": "boolean"
            }
        },
        "properties": {
            "groupReferences": {
                "name": "groupReferences",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group_CrossReference",
                "form": "relational",
                "typeArray": true
            },
            "groups": {
                "name": "groups",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group",
                "form": "relational",
                "typeArray": true
            },
            "healthCheck": {
                "name": "healthCheck",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check",
                "form": "relational"
            },
            "healthChecks": {
                "name": "healthChecks",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check",
                "form": "relational",
                "typeArray": true
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational"
            },
            "serviceGroup": {
                "name": "serviceGroup",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group",
                "form": "relational"
            },
            "enabled": {
                "name": "enabled",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "ipAddressId": {
                "name": "ipAddressId",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local"
            },
            "port": {
                "name": "port",
                "type": "int",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            },
            "groupCount": {
                "name": "groupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "groupReferenceCount": {
                "name": "groupReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "healthCheckCount": {
                "name": "healthCheckCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group",
        "base": "SoftLayer_Entity",
        "methods": {
            "getGraphImage": {
                "name": "getGraphImage",
                "type": "base64Binary",
                "doc": "Get the graph image for a load balancer service group based on the supplied graph type and metric.  The only available graph type currently is: 'connections', and the available metrics are: 'day', 'week' and 'month'. \n\nThis method returns the raw binary image data. ",
                "parameters": [
                    {
                        "name": "graphType",
                        "type": "string",
                        "doc": "The graph type can currently only be 'connections'."
                    },
                    {
                        "name": "metric",
                        "type": "string",
                        "doc": "The metric can be 'day', 'week', or 'month'."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group",
                "filterable": true,
                "maskable": true
            },
            "kickAllConnections": {
                "name": "kickAllConnections",
                "type": "boolean"
            }
        },
        "properties": {
            "routingMethod": {
                "name": "routingMethod",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Method",
                "form": "relational"
            },
            "routingType": {
                "name": "routingType",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Type",
                "form": "relational"
            },
            "serviceReferences": {
                "name": "serviceReferences",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group_CrossReference",
                "form": "relational",
                "typeArray": true
            },
            "services": {
                "name": "services",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service",
                "form": "relational",
                "typeArray": true
            },
            "virtualServer": {
                "name": "virtualServer",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer",
                "form": "relational"
            },
            "virtualServers": {
                "name": "virtualServers",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer",
                "form": "relational",
                "typeArray": true
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local"
            },
            "routingMethodId": {
                "name": "routingMethodId",
                "type": "int",
                "form": "local"
            },
            "routingTypeId": {
                "name": "routingTypeId",
                "type": "int",
                "form": "local"
            },
            "timeout": {
                "name": "timeout",
                "type": "int",
                "form": "local",
                "doc": "The timeout value for connections from remote clients to the load balancer. Timeout values are only valid for HTTP service groups. "
            },
            "serviceCount": {
                "name": "serviceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "serviceReferenceCount": {
                "name": "serviceReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "virtualServerCount": {
                "name": "virtualServerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group_CrossReference": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group_CrossReference",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "service": {
                "name": "service",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service",
                "form": "relational"
            },
            "serviceGroup": {
                "name": "serviceGroup",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group",
                "form": "relational"
            },
            "serviceGroupId": {
                "name": "serviceGroupId",
                "type": "int",
                "form": "local"
            },
            "serviceId": {
                "name": "serviceId",
                "type": "int",
                "form": "local"
            },
            "weight": {
                "name": "weight",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
        "base": "SoftLayer_Entity",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Like any other API object, the load balancers can have their exposed properties edited by passing in a modified version of the object.  The load balancer object also can modify its services in this way.  Simply request the load balancer object you wish to edit, then modify the objects in the services array and pass the modified object to this function.  WARNING:  Services cannot be deleted in this manner, you must call deleteObject() on the service to physically remove them from the load balancer. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
                        "doc": "A skeleton SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAvailableSecureTransportCiphers": {
                "name": "getAvailableSecureTransportCiphers",
                "type": "SoftLayer_Security_SecureTransportCipher",
                "typeArray": true,
                "doc": "Yields a list of the SSL/TLS encryption ciphers that are currently supported on this virtual IP address instance. "
            },
            "getAvailableSecureTransportProtocols": {
                "name": "getAvailableSecureTransportProtocols",
                "type": "SoftLayer_Security_SecureTransportProtocol",
                "typeArray": true,
                "doc": "Yields a list of the secure communication protocols that are currently supported on this virtual IP address instance. The list of supported ciphers for each protocol is culled to match availability. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
                "filterable": true,
                "maskable": true
            },
            "startSsl": {
                "name": "startSsl",
                "type": "boolean",
                "doc": "Start SSL acceleration on all SSL virtual services (those with a type of HTTPS). This action should be taken only after configuring an SSL certificate for the virtual IP. "
            },
            "stopSsl": {
                "name": "stopSsl",
                "type": "boolean",
                "doc": "Stop SSL acceleration on all SSL virtual services (those with a type of HTTPS). "
            },
            "upgradeConnectionLimit": {
                "name": "upgradeConnectionLimit",
                "type": "boolean",
                "doc": "Upgrades the connection limit on the Virtual IP to Address to the next, higher connection limit of the same product. "
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "applicationDeliveryController": {
                "name": "applicationDeliveryController",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "form": "relational",
                "doc": "A virtual IP address's associated application delivery controller."
            },
            "applicationDeliveryControllers": {
                "name": "applicationDeliveryControllers",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "form": "relational",
                "typeArray": true,
                "doc": "A virtual IP address's associated application delivery controllers."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The current billing item for the load balancer virtual IP. This is only valid when dedicatedFlag is false. This is an independent virtual IP, and if canceled, will only affect the associated virtual IP."
            },
            "dedicatedBillingItem": {
                "name": "dedicatedBillingItem",
                "type": "SoftLayer_Billing_Item_Network_LoadBalancer",
                "form": "relational",
                "doc": "The current billing item for the load balancing device housing the virtual IP. This billing item represents a device which could contain other virtual IPs. Caution should be taken when canceling. This is only valid when dedicatedFlag is true."
            },
            "highAvailabilityFlag": {
                "name": "highAvailabilityFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Denotes whether the virtual IP is configured within a high availability cluster."
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational"
            },
            "loadBalancerHardware": {
                "name": "loadBalancerHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true
            },
            "managedResourceFlag": {
                "name": "managedResourceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that the load balancer is a managed resource."
            },
            "secureTransportCiphers": {
                "name": "secureTransportCiphers",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress_SecureTransportCipher",
                "form": "relational",
                "typeArray": true,
                "doc": "The list of security ciphers enabled for this virtual IP address"
            },
            "secureTransportProtocols": {
                "name": "secureTransportProtocols",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress_SecureTransportProtocol",
                "form": "relational",
                "typeArray": true,
                "doc": "The list of secure transport protocols enabled for this virtual IP address"
            },
            "securityCertificate": {
                "name": "securityCertificate",
                "type": "SoftLayer_Security_Certificate",
                "form": "relational",
                "doc": "The SSL certificate currently associated with the VIP."
            },
            "securityCertificateEntry": {
                "name": "securityCertificateEntry",
                "type": "SoftLayer_Security_Certificate_Entry",
                "form": "relational",
                "doc": "The SSL certificate currently associated with the VIP. Provides chosen certificate visibility to unprivileged users."
            },
            "virtualServers": {
                "name": "virtualServers",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer",
                "form": "relational",
                "typeArray": true
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the SoftLayer customer account that owns the virtual IP address "
            },
            "connectionLimit": {
                "name": "connectionLimit",
                "type": "int",
                "form": "local",
                "doc": "The connection limit for this virtual IP address "
            },
            "connectionLimitUnits": {
                "name": "connectionLimitUnits",
                "type": "string",
                "form": "local",
                "doc": "The units for the connection limit "
            },
            "dedicatedFlag": {
                "name": "dedicatedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "A flag that determines if a VIP is dedicated or not. This is used to override the connection limit and use an unlimited value. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the virtual IP address record "
            },
            "ipAddressId": {
                "name": "ipAddressId",
                "type": "int",
                "form": "local",
                "doc": "ID of the IP address this virtual IP utilizes "
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "User-created notes for this load balancer virtual IP address "
            },
            "securityCertificateId": {
                "name": "securityCertificateId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the Security Certificate to be utilized when SSL support is enabled. "
            },
            "sslActiveFlag": {
                "name": "sslActiveFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Determines if the VIP currently has SSL acceleration enabled "
            },
            "sslEnabledFlag": {
                "name": "sslEnabledFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Determines if the VIP is _allowed_ to utilize SSL acceleration "
            },
            "applicationDeliveryControllerCount": {
                "name": "applicationDeliveryControllerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a virtual IP address's associated application delivery controllers."
            },
            "loadBalancerHardwareCount": {
                "name": "loadBalancerHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "secureTransportCipherCount": {
                "name": "secureTransportCipherCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the list of security ciphers enabled for this virtual IP address"
            },
            "secureTransportProtocolCount": {
                "name": "secureTransportProtocolCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the list of secure transport protocols enabled for this virtual IP address"
            },
            "virtualServerCount": {
                "name": "virtualServerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress_SecureTransportCipher": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress_SecureTransportCipher",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A single cipher configured for a load balancer virtual IP address instance. Instances of this class are immutable and should reflect a cipher that is configurable on a load balancer device. ",
        "properties": {
            "virtualIpAddress": {
                "name": "virtualIpAddress",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for the cipher instance"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Identifier for the associated encryption algorithm"
            },
            "virtualIpAddressId": {
                "name": "virtualIpAddressId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for the associated [[SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress (type)|virtual IP address]] instance "
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress_SecureTransportProtocol": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress_SecureTransportProtocol",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Links a SSL transport protocol with a virtual IP address instance. Instances of this class are immutable and should reflect a protocol that is configurable on a load balancer device. ",
        "properties": {
            "virtualIpAddress": {
                "name": "virtualIpAddress",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for the protocol instance"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Identifier for the associated communication protocol"
            },
            "virtualIpAddressId": {
                "name": "virtualIpAddressId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for the associated [[SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress (type)|virtual IP address]] instance "
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer",
        "base": "SoftLayer_Entity",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer",
                "filterable": true,
                "maskable": true
            },
            "startSsl": {
                "name": "startSsl",
                "type": "boolean",
                "doc": "Start SSL acceleration on all SSL virtual services (those with a type of HTTPS). This action should be taken only after configuring an SSL certificate for the virtual IP. "
            },
            "stopSsl": {
                "name": "stopSsl",
                "type": "boolean",
                "doc": "Stop SSL acceleration on all SSL virtual services (those with a type of HTTPS). "
            }
        },
        "properties": {
            "routingMethod": {
                "name": "routingMethod",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Method",
                "form": "relational"
            },
            "scaleLoadBalancers": {
                "name": "scaleLoadBalancers",
                "type": "SoftLayer_Scale_LoadBalancer",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of scale load balancers this virtual server applies to."
            },
            "serviceGroups": {
                "name": "serviceGroups",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Service_Group",
                "form": "relational",
                "typeArray": true
            },
            "virtualIpAddress": {
                "name": "virtualIpAddress",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
                "form": "relational"
            },
            "allocation": {
                "name": "allocation",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local"
            },
            "port": {
                "name": "port",
                "type": "int",
                "form": "local"
            },
            "routingMethodId": {
                "name": "routingMethodId",
                "type": "int",
                "form": "local"
            },
            "virtualIpAddressId": {
                "name": "virtualIpAddressId",
                "type": "int",
                "form": "local"
            },
            "scaleLoadBalancerCount": {
                "name": "scaleLoadBalancerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of scale load balancers this virtual server applies to."
            },
            "serviceGroupCount": {
                "name": "serviceGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Application_Delivery_Controller_Type": {
        "name": "SoftLayer_Network_Application_Delivery_Controller_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Backbone": {
        "name": "SoftLayer_Network_Backbone",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A SoftLayer_Network_Backbone represents a single backbone connection from SoftLayer to the public Internet, from the Internet to the SoftLayer private network, or a link that connects the private networks between SoftLayer's datacenters. The SoftLayer_Network_Backbone service is unique in that it is not referenced by any of the other SoftLayer API services. ",
        "methods": {
            "getAllBackbones": {
                "name": "getAllBackbones",
                "type": "SoftLayer_Network_Backbone",
                "typeArray": true,
                "doc": "Retrieve a list of all SoftLayer backbone connections. Use this method if you need all backbones or don't know the id number of a specific backbone. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getBackbonesForLocationName": {
                "name": "getBackbonesForLocationName",
                "type": "SoftLayer_Network_Backbone",
                "typeArray": true,
                "doc": "Retrieve a list of all SoftLayer backbone connections for a location name. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "locationName",
                        "type": "string",
                        "doc": "name for the location address"
                    }
                ]
            },
            "getGraphImage": {
                "name": "getGraphImage",
                "type": "base64Binary",
                "doc": "[DEPRECATED] Retrieve a graph of a SoftLayer backbone's last 24 hours of activity. getGraphImage returns a PNG image measuring 827 pixels by 293 pixels."
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Backbone",
                "doc": "Retrieve an individual SoftLayer_Network_Backbone record. Use the getAllBackbones() method to retrieve a list of all SoftLayer network backbones.",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "A SoftLayer_Network_Backbone represents a single backbone connection from SoftLayer to the public Internet, from the Internet to the SoftLayer private network, or a link that connects the private networks between SoftLayer's datacenters. The SoftLayer_Network_Backbone data type is a collection of data associated with one of those connections. ",
        "properties": {
            "health": {
                "name": "health",
                "type": "string",
                "form": "relational",
                "doc": "A backbone's status."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "Which of the SoftLayer datacenters a backbone is connected to."
            },
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "A backbone's primary network component."
            },
            "capacity": {
                "name": "capacity",
                "type": "int",
                "form": "local",
                "doc": "The numeric portion of the bandwidth capacity of a SoftLayer backbone. For instance, if a backbone is rated at \"1 GigE\" capacity then the capacity property of the backbone is 1. "
            },
            "capacityUnits": {
                "name": "capacityUnits",
                "type": "string",
                "form": "local",
                "doc": "The unit portion of the bandwidth capacity of a SoftLayer backbone. For instance, if a backbone is rated at \"10 G\" capacity then the capacityUnits property of the backbone is \"G\". "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A backbone's internal identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A backbone's name. This is usually the name of the backbone's network provider followed by a number in case SoftLayer uses more than one backbone from a provider. Backbone provider numbers start with the number one and increment from there. "
            },
            "networkComponentId": {
                "name": "networkComponentId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the network component that backbone is connected to. "
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "Whether a SoftLayer backbone connects to the public Internet, to the private network, or connecting the private networks of SoftLayer's datacenters. Type is either the string \"public\", \"private\", or \"private-interconnect\". "
            }
        }
    },
    "SoftLayer_Network_Backbone_Location_Dependent": {
        "name": "SoftLayer_Network_Backbone_Location_Dependent",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Backbone_Location_Dependent",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Backbone_Location_Dependent",
                "filterable": true,
                "maskable": true
            },
            "getSourceDependentsByName": {
                "name": "getSourceDependentsByName",
                "type": "SoftLayer_Location",
                "static": true,
                "filterable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "locationName",
                        "type": "string"
                    }
                ]
            }
        },
        "properties": {
            "dependentLocation": {
                "name": "dependentLocation",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "sourceLocation": {
                "name": "sourceLocation",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "dependentLocationId": {
                "name": "dependentLocationId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "sourceLocationId": {
                "name": "sourceLocationId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Usage": {
        "name": "SoftLayer_Network_Bandwidth_Usage",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Bandwidth_Usage data type contains specific information relating to bandwidth utilization at a specific point in time on a given network interface. ",
        "properties": {
            "trackingObject": {
                "name": "trackingObject",
                "type": "SoftLayer_Metric_Tracking_Object",
                "form": "relational",
                "doc": "The tracking object this bandwidth usage record describes."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Bandwidth_Version1_Usage_Detail_Type",
                "form": "relational",
                "doc": "In and out bandwidth utilization for a specified time stamp."
            },
            "amountIn": {
                "name": "amountIn",
                "type": "decimal",
                "form": "local",
                "doc": "Incoming bandwidth utilization."
            },
            "amountOut": {
                "name": "amountOut",
                "type": "decimal",
                "form": "local",
                "doc": "Outgoing bandwidth utilization."
            },
            "bandwidthUsageDetailTypeId": {
                "name": "bandwidthUsageDetailTypeId",
                "type": "decimal",
                "form": "local",
                "doc": "ID of the bandwidth usage detail type for this record."
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Version1_Allocation": {
        "name": "SoftLayer_Network_Bandwidth_Version1_Allocation",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Bandwidth_Version1_Allocation data type contains general information relating to a single bandwidth allocation record. ",
        "properties": {
            "allotmentDetail": {
                "name": "allotmentDetail",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment_Detail",
                "form": "relational",
                "doc": "A bandwidth allotment detail."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item_Hardware",
                "form": "relational",
                "doc": "Billing item associated with this hardware allocation."
            },
            "amount": {
                "name": "amount",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of bandwidth allocated."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal ID associated with this allocation."
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Version1_Allotment": {
        "name": "SoftLayer_Network_Bandwidth_Version1_Allotment",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every SoftLayer Bandwidth Pooling, Virtual Datacenter, Virtual Private Rack(VPR) is defined in the SoftLayer_Network_Bandwidth_Version1_Allotment service as an allotment. SoftLayer allotments are a collection of servers that share all of the servers allocated bandwidth together. \n\nVirtual Private Rack Each server is by default a part of your Virtual Private Rack. Bandwidth overages are billed individually per server for all hardware in your Virtual Private Rack. If any one server uses more bandwidth than it is allocated, an overage charge will result. \n\nBandwidth Pooling Bandwidth Pooling allow you to optimize your bandwidth usage by \"pooling\" all of the bandwidth together for servers in a Bandwidth Pooling. Bandwidth overages for servers in a Bandwidth Pooling are summed up as a whole and overages are calculated only if the total bandwidth of all servers exceeds the total allocated bandwidth for all servers. \n\nFor example, if you had 5 servers, each with 2000 GB of bandwidth, and one server used 3000 GB of bandwidth while the other used only 1500 GB of bandwidth, you would not be billed for an overage because your total usage would be 9000 GB and your total allocated would be 10000 GB. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "doc": "Create a allotment for servers to pool bandwidth and avoid overages in billing if they use more than there allocated bandwidth. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                        "doc": "The SoftLayer_Network_Bandwidth_Version1_Allotment object that you wish to create."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit a bandwidth allotment's local properties. Currently you may only change an allotment's name. Use the [[SoftLayer_Network_Bandwidth_Version1_Allotment::reassignServers|reassignServers()]] and [[SoftLayer_Network_Bandwidth_Version1_Allotment::unassignServers|unassignServers()]] methods to move servers in and out of your allotments. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                        "doc": "A skeleton SoftLayer_Network_Bandwidth_Version1_Allotment object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getBackendBandwidthByHour": {
                "name": "getBackendBandwidthByHour",
                "type": "SoftLayer_Container_Network_Bandwidth_Version1_Usage",
                "typeArray": true,
                "doc": "[DEPRECATED] This method recurses through all servers on a Bandwidth Pool for 24 hour time span starting at a given date/time. To get the private data set for all servers on a Bandwidth Pool from midnight Feb 1st, 2008 to 23:59 on Feb 1st, you would pass a parameter of '02/01/2008 0:00'.  The ending date / time is calculated for you to prevent requesting data from the server for periods larger than 24 hours as this method requires processing a lot of data records and can get slow at times. ",
                "parameters": [
                    {
                        "name": "date",
                        "type": "dateTime",
                        "doc": "The date at which you wish to start a 24 hour snapshot formatted as 'MM/DD/YYYY HH:00'."
                    }
                ]
            },
            "getBackendBandwidthUse": {
                "name": "getBackendBandwidthUse",
                "type": "SoftLayer_Network_Bandwidth_Version1_Usage_Detail",
                "typeArray": true,
                "doc": "This method recurses through all servers on a Bandwidth Pool between the given start and end dates to retrieve public bandwidth data. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "Start date formatted as: 'MM/DD/YY'."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "End date formatted as: 'MM/DD/YY'."
                    }
                ]
            },
            "getBandwidthForDateRange": {
                "name": "getBandwidthForDateRange",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve a collection of bandwidth data from an individual public or private network tracking object. Data is ideal if you with to employ your own traffic storage and graphing systems. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The starting date of the range of data you wish to collect."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The ending date of the range of data you wish to collect."
                    }
                ]
            },
            "getBandwidthImage": {
                "name": "getBandwidthImage",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "This method recurses through all servers on a Bandwidth Pool for a given snapshot range, gathers the necessary parameters, and then calls the bandwidth graphing server.  The return result is a container that includes the min and max dates for all servers to be used in the query, as well as an image in PNG format.  This method uses the new and improved drawing routines which should return in a reasonable time frame now that the new backend data warehouse is used. ",
                "parameters": [
                    {
                        "name": "networkType",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"public\">public</li> <li title=\"private\">private</li> </ul>"
                    },
                    {
                        "name": "snapshotRange",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"day\">day</li> <li title=\"week\">week</li> <li title=\"30day\">30day</li> <li title=\"previous_calendar_month\">previous_calendar_month</li> <li title=\"current_calendar_month\">current_calendar_month</li> <li title=\"current_billing_cycle\">current_billing_cycle</li> <li title=\"previous_billing_cycle\">previous_billing_cycle</li> <li title=\"specified_day\">specified_day</li> <li title=\"specified_range\">specified_range</li> </ul>"
                    },
                    {
                        "name": "draw",
                        "type": "boolean",
                        "doc": "TRUE to generate binary image otherwise just return text.  Deprecated, images return fast enough now.",
                        "defaultValue": true
                    },
                    {
                        "name": "dateSpecified",
                        "type": "dateTime",
                        "doc": "Include this parameter when snapshot is 'specified_day' or 'specified_range'.  Needs to be formatted as: 'MM/DD/YYYY'",
                        "defaultValue": null
                    },
                    {
                        "name": "dateSpecifiedEnd",
                        "type": "dateTime",
                        "doc": "Include this parameter when snapshotRange is 'specified_range'.  Also formatted as 'MM/DD/YYYY'",
                        "defaultValue": null
                    }
                ]
            },
            "getCustomBandwidthDataByDate": {
                "name": "getCustomBandwidthDataByDate",
                "type": "SoftLayer_Container_Graph",
                "doc": "Retrieve bandwidth graph by date. ",
                "parameters": [
                    {
                        "name": "graphData",
                        "type": "SoftLayer_Container_Graph"
                    }
                ]
            },
            "getFrontendBandwidthByHour": {
                "name": "getFrontendBandwidthByHour",
                "type": "SoftLayer_Container_Network_Bandwidth_Version1_Usage",
                "typeArray": true,
                "doc": "[DEPRECATED] This method recurses through all servers on a Bandwidth Pool for 24 hour time span starting at a given date/time. To get the public data set for all servers on a Bandwidth Pool from midnight Feb 1st, 2008 to 23:59 on Feb 1st, you would pass a parameter of '02/01/2008 0:00'.  The ending date / time is calculated for you to prevent requesting data from the server for periods larger than 24 hours as this method requires processing a lot of data records and can get slow at times. ",
                "parameters": [
                    {
                        "name": "date",
                        "type": "dateTime",
                        "doc": "The date at which you wish to start a 24 hour snapshot formatted as 'MM/DD/YYYY HH:00'."
                    }
                ]
            },
            "getFrontendBandwidthUse": {
                "name": "getFrontendBandwidthUse",
                "type": "SoftLayer_Network_Bandwidth_Version1_Usage_Detail",
                "typeArray": true,
                "doc": "This method recurses through all servers on a Bandwidth Pool between the given start and end dates to retrieve private bandwidth data. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "Start date formatted as: 'MM/DD/YY'."
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "End date formatted as: 'MM/DD/YY'."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "doc": "getObject retrieves the SoftLayer_Network_Bandwidth_Version1_Allotment object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Hardware service. You can only retrieve an allotment associated with the account that your portal user is assigned to. ",
                "filterable": true,
                "maskable": true
            },
            "getVdrMemberRecurringFee": {
                "name": "getVdrMemberRecurringFee",
                "type": "float",
                "doc": "Gets the monthly recurring fee of a pooled server. "
            },
            "reassignServers": {
                "name": "reassignServers",
                "type": "boolean",
                "doc": "This method will reassign a collection of SoftLayer hardware to a bandwidth allotment Bandwidth Pool. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true,
                        "doc": "A collection of servers to be reassigned to a new allotment",
                        "defaultValue": []
                    },
                    {
                        "name": "newAllotmentId",
                        "type": "int",
                        "doc": "The id of the allotment that the objects will be reassigned to",
                        "defaultValue": null
                    }
                ]
            },
            "requestVdrCancellation": {
                "name": "requestVdrCancellation",
                "type": "boolean",
                "doc": "This will remove a bandwidth pooling from a customer's allotments by cancelling the billing item.  All servers in that allotment will get moved to the account's vpr. "
            },
            "requestVdrContentUpdates": {
                "name": "requestVdrContentUpdates",
                "type": "boolean",
                "doc": "This will move servers into a bandwidth pool, removing them from their previous bandwidth pool and optionally remove the bandwidth pool on completion. ",
                "parameters": [
                    {
                        "name": "hardwareToAdd",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true,
                        "doc": "A collection of servers to be assigned to a bandwidth pool.",
                        "defaultValue": []
                    },
                    {
                        "name": "hardwareToRemove",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true,
                        "doc": "A collection of servers to be unassigned from an allotment and assigned to the virtual private rack",
                        "defaultValue": []
                    },
                    {
                        "name": "cloudsToAdd",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true,
                        "doc": "A collection of virtual servers to be assigned to a bandwidth pool.",
                        "defaultValue": []
                    },
                    {
                        "name": "cloudsToRemove",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true,
                        "doc": "A collection of virtual server to be unassigned from an allotment and assigned to the virtual private rack",
                        "defaultValue": []
                    },
                    {
                        "name": "optionalAllotmentId",
                        "type": "int",
                        "doc": "The bandwidth pool to move the servers to.  Provided only for backwards compatibility.",
                        "defaultValue": null
                    },
                    {
                        "name": "adcToAdd",
                        "type": "SoftLayer_Network_Application_Delivery_Controller",
                        "typeArray": true,
                        "doc": "A collection of application delivery controllers to be assigned to a bandwidth pool.",
                        "defaultValue": []
                    },
                    {
                        "name": "adcToRemove",
                        "type": "SoftLayer_Network_Application_Delivery_Controller",
                        "typeArray": true,
                        "doc": "A collection of application delivery controllers to be unassigned from an allotment and assigned to the virtual private rack",
                        "defaultValue": []
                    }
                ]
            },
            "setVdrContent": {
                "name": "setVdrContent",
                "type": "boolean",
                "doc": "This will update the bandwidth pool to the servers provided.  Servers currently in the bandwidth pool not provided on update will be removed. Servers provided on update not currently in the bandwidth pool will be added. If all servers are removed, this removes the bandwidth pool on completion. ",
                "parameters": [
                    {
                        "name": "hardware",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true,
                        "doc": "A collection of servers that will be used to set the bandwidth pool.",
                        "defaultValue": []
                    },
                    {
                        "name": "bareMetalServers",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true,
                        "doc": "A collection of bare metal servers that will be used to set the bandwidth pool.",
                        "defaultValue": []
                    },
                    {
                        "name": "virtualServerInstance",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true,
                        "doc": "A collection of virtual server that will be used to set the bandwidth pool.",
                        "defaultValue": []
                    },
                    {
                        "name": "adc",
                        "type": "SoftLayer_Network_Application_Delivery_Controller",
                        "typeArray": true,
                        "doc": "A collection of application delivery controllers that will be used to set the bandwidth pool.",
                        "defaultValue": []
                    },
                    {
                        "name": "optionalAllotmentId",
                        "type": "int",
                        "doc": "The bandwidth pool to move the servers to.  Provided only for backwards compatibility.",
                        "defaultValue": null
                    }
                ]
            },
            "unassignServers": {
                "name": "unassignServers",
                "type": "boolean",
                "doc": "This method will reassign a collection of SoftLayer hardware to the virtual private rack ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true,
                        "doc": "A collection of servers to be unassigned from an allotment and assigned to the virtual private rack",
                        "defaultValue": []
                    }
                ]
            },
            "voidPendingServerMove": {
                "name": "voidPendingServerMove",
                "type": "boolean",
                "doc": "This method will void a pending server removal from this bandwidth pooling. Pass in the id of the hardware object or virtual guest you wish to update. Assuming that object is currently pending removal from the bandwidth pool at the start of the next billing cycle, the bandwidth pool member status will be restored and the pending cancellation removed. ",
                "parameters": [
                    {
                        "name": "id",
                        "type": "int",
                        "doc": "The id number of the server or computing instance you wish to void moving to a virtual rack."
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "The string \"SoftLayer_Hardware\" or \"SoftLayer_Virtual_Guest\" depending on the what you were moving to a virtual rack."
                    }
                ]
            },
            "voidPendingVdrCancellation": {
                "name": "voidPendingVdrCancellation",
                "type": "boolean",
                "doc": "This method will void a pending cancellation on a bandwidth pool. Note however any servers that belonged to the rack will have to be restored individually using the method voidPendingServerMove($id, $type). "
            }
        },
        "typeDoc": "The SoftLayer_Network_Bandwidth_Version1_Allotment class provides methods and data structures necessary to work with an array of hardware objects associated with a single Bandwidth Pooling. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account associated with this virtual rack."
            },
            "activeDetails": {
                "name": "activeDetails",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment_Detail",
                "form": "relational",
                "typeArray": true,
                "doc": "The bandwidth allotment detail records associated with this virtual rack."
            },
            "applicationDeliveryControllers": {
                "name": "applicationDeliveryControllers",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "form": "relational",
                "typeArray": true,
                "doc": "The Application Delivery Controller contained within a virtual rack."
            },
            "averageDailyPublicBandwidthUsage": {
                "name": "averageDailyPublicBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The average daily public bandwidth usage for the current billing cycle."
            },
            "bandwidthAllotmentType": {
                "name": "bandwidthAllotmentType",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment_Type",
                "form": "relational",
                "doc": "The bandwidth allotment type of this virtual rack."
            },
            "bareMetalInstances": {
                "name": "bareMetalInstances",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The bare metal server instances contained within a virtual rack."
            },
            "billingCycleBandwidthUsage": {
                "name": "billingCycleBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "A virtual rack's raw bandwidth usage data for an account's current billing cycle. One object is returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsage": {
                "name": "billingCyclePrivateBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "A virtual rack's raw private network bandwidth usage data for an account's current billing cycle."
            },
            "billingCyclePublicBandwidthUsage": {
                "name": "billingCyclePublicBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "A virtual rack's raw public network bandwidth usage data for an account's current billing cycle."
            },
            "billingCyclePublicUsageTotal": {
                "name": "billingCyclePublicUsageTotal",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total public bandwidth used in this virtual rack for an account's current billing cycle."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "A virtual rack's billing item."
            },
            "currentBandwidthSummary": {
                "name": "currentBandwidthSummary",
                "type": "SoftLayer_Metric_Tracking_Object_Bandwidth_Summary",
                "form": "relational",
                "doc": "An object that provides commonly used bandwidth summary components for the current billing cycle."
            },
            "details": {
                "name": "details",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment_Detail",
                "form": "relational",
                "typeArray": true,
                "doc": "The bandwidth allotment detail records associated with this virtual rack."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The hardware contained within a virtual rack."
            },
            "inboundPublicBandwidthUsage": {
                "name": "inboundPublicBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public inbound bandwidth used in this virtual rack for an account's current billing cycle."
            },
            "locationGroup": {
                "name": "locationGroup",
                "type": "SoftLayer_Location_Group",
                "form": "relational",
                "doc": "The location group associated with this virtual rack."
            },
            "managedBareMetalInstances": {
                "name": "managedBareMetalInstances",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The managed bare metal server instances contained within a virtual rack."
            },
            "managedHardware": {
                "name": "managedHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The managed hardware contained within a virtual rack."
            },
            "managedVirtualGuests": {
                "name": "managedVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The managed Virtual Server contained within a virtual rack."
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object_VirtualDedicatedRack",
                "form": "relational",
                "doc": "A virtual rack's metric tracking object. This object records all periodic polled data available to this rack."
            },
            "metricTrackingObjectId": {
                "name": "metricTrackingObjectId",
                "type": "int",
                "form": "relational",
                "doc": "The metric tracking object id for this allotment."
            },
            "outboundPublicBandwidthUsage": {
                "name": "outboundPublicBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth used in this virtual rack for an account's current billing cycle."
            },
            "overBandwidthAllocationFlag": {
                "name": "overBandwidthAllocationFlag",
                "type": "int",
                "form": "relational",
                "doc": "Whether the bandwidth usage for this bandwidth pool for the current billing cycle exceeds the allocation."
            },
            "privateNetworkOnlyHardware": {
                "name": "privateNetworkOnlyHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The private network only hardware contained within a virtual rack."
            },
            "projectedOverBandwidthAllocationFlag": {
                "name": "projectedOverBandwidthAllocationFlag",
                "type": "int",
                "form": "relational",
                "doc": "Whether the bandwidth usage for this bandwidth pool for the current billing cycle is projected to exceed the allocation."
            },
            "projectedPublicBandwidthUsage": {
                "name": "projectedPublicBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The projected public outbound bandwidth for this virtual server for the current billing cycle."
            },
            "serviceProvider": {
                "name": "serviceProvider",
                "type": "SoftLayer_Service_Provider",
                "form": "relational"
            },
            "totalBandwidthAllocated": {
                "name": "totalBandwidthAllocated",
                "type": "unsignedLong",
                "form": "relational",
                "doc": "The combined allocated bandwidth for all servers in a virtual rack."
            },
            "virtualGuests": {
                "name": "virtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The Virtual Server contained within a virtual rack."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The user account identifier associated with this allotment."
            },
            "bandwidthAllotmentTypeId": {
                "name": "bandwidthAllotmentTypeId",
                "type": "int",
                "form": "local",
                "doc": "An identifier marking this allotment as a virtual private rack (1) or a bandwidth pooling(2)."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Creation date for an allotment."
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "End date for an allotment."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A virtual rack's internal identifier."
            },
            "locationGroupId": {
                "name": "locationGroupId",
                "type": "int",
                "form": "local",
                "doc": "Location Group Id for an allotment"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Text A virtual rack's name."
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local",
                "doc": "Service Provider Id for an allotment"
            },
            "activeDetailCount": {
                "name": "activeDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the bandwidth allotment detail records associated with this virtual rack."
            },
            "applicationDeliveryControllerCount": {
                "name": "applicationDeliveryControllerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the Application Delivery Controller contained within a virtual rack."
            },
            "bareMetalInstanceCount": {
                "name": "bareMetalInstanceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the bare metal server instances contained within a virtual rack."
            },
            "billingCycleBandwidthUsageCount": {
                "name": "billingCycleBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a virtual rack's raw bandwidth usage data for an account's current billing cycle. One object is returned for each network this server is attached to."
            },
            "detailCount": {
                "name": "detailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the bandwidth allotment detail records associated with this virtual rack."
            },
            "hardwareCount": {
                "name": "hardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the hardware contained within a virtual rack."
            },
            "managedBareMetalInstanceCount": {
                "name": "managedBareMetalInstanceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the managed bare metal server instances contained within a virtual rack."
            },
            "managedHardwareCount": {
                "name": "managedHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the managed hardware contained within a virtual rack."
            },
            "managedVirtualGuestCount": {
                "name": "managedVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the managed Virtual Server contained within a virtual rack."
            },
            "privateNetworkOnlyHardwareCount": {
                "name": "privateNetworkOnlyHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the private network only hardware contained within a virtual rack."
            },
            "virtualGuestCount": {
                "name": "virtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the Virtual Server contained within a virtual rack."
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Version1_Allotment_Detail": {
        "name": "SoftLayer_Network_Bandwidth_Version1_Allotment_Detail",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Bandwidth_Version1_Allotment_Detail data type contains specific information relating to a single bandwidth allotment record. ",
        "properties": {
            "allocation": {
                "name": "allocation",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allocation",
                "form": "relational",
                "doc": "Allocated bandwidth."
            },
            "bandwidthAllotment": {
                "name": "bandwidthAllotment",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "doc": "The parent Bandwidth Pool."
            },
            "bandwidthUsage": {
                "name": "bandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Version1_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "Bandwidth used."
            },
            "allocationId": {
                "name": "allocationId",
                "type": "int",
                "form": "local",
                "doc": "Allocated bandwidth."
            },
            "bandwidthAllotmentId": {
                "name": "bandwidthAllotmentId",
                "type": "int",
                "form": "local",
                "doc": "Bandwidth Pool associated with this detail."
            },
            "effectiveDate": {
                "name": "effectiveDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Beginning this date the bandwidth allotment is active. "
            },
            "endEffectiveDate": {
                "name": "endEffectiveDate",
                "type": "dateTime",
                "form": "local",
                "doc": "From this date the bandwidth allotment is no longer active. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal ID associated with this allotment detail."
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local",
                "doc": "Service Provider Id for an allotment"
            },
            "bandwidthUsageCount": {
                "name": "bandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of bandwidth used."
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Version1_Allotment_Type": {
        "name": "SoftLayer_Network_Bandwidth_Version1_Allotment_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Bandwidth_Version1_Allotment_Type contains a description of the associated SoftLayer_Network_Bandwidth_Version1_Allotment object. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "shortDescription": {
                "name": "shortDescription",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Version1_Host": {
        "name": "SoftLayer_Network_Bandwidth_Version1_Host",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "[DEPRECATED] The SoftLayer_Network_Bandwidth_Version1_Host type contains general information used to the route a server to its pod. ",
        "properties": {
            "podId": {
                "name": "podId",
                "type": "int",
                "form": "local",
                "doc": "Pod ID for this host device."
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Version1_Interface": {
        "name": "SoftLayer_Network_Bandwidth_Version1_Interface",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "[DEPRECATED] All bandwidth tracking is maintained through the switch that the bandwidth is used through.  All bandwidth is stored in a \"pod\" repository.  An interface links the hardware switch with the pod repository identification number. This is only relevant to bandwidth data.  It is not common to use this. ",
        "properties": {
            "host": {
                "name": "host",
                "type": "SoftLayer_Network_Bandwidth_Version1_Host",
                "form": "relational",
                "doc": "[DEPRECATED] The host for an interface. This is not to be confused with SoftLayer Hardware"
            },
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "[DEPRECATED] The switch for an interface."
            },
            "hostId": {
                "name": "hostId",
                "type": "int",
                "form": "local",
                "doc": "A interface's host.  The host stores the pod number for the bandwidth data."
            },
            "networkComponentId": {
                "name": "networkComponentId",
                "type": "int",
                "form": "local",
                "doc": "The network component for this interface."
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Version1_Usage": {
        "name": "SoftLayer_Network_Bandwidth_Version1_Usage",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Bandwidth_Version1_Usage data type contains general information relating to a single bandwidth usage record. ",
        "properties": {
            "bandwidthAllotmentDetail": {
                "name": "bandwidthAllotmentDetail",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment_Detail",
                "form": "relational",
                "doc": "Bandwidth allotment detail for this hardware."
            },
            "bandwidthUsageDetail": {
                "name": "bandwidthUsageDetail",
                "type": "SoftLayer_Network_Bandwidth_Version1_Usage_Detail",
                "form": "relational",
                "typeArray": true,
                "doc": "Bandwidth usage details for this hardware."
            },
            "bandwidthUsageDetailCount": {
                "name": "bandwidthUsageDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of bandwidth usage details for this hardware."
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Version1_Usage_Detail": {
        "name": "SoftLayer_Network_Bandwidth_Version1_Usage_Detail",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Bandwidth_Version1_Usage_Detail data type contains specific information relating to bandwidth utilization at a specific point in time on a given network interface. ",
        "properties": {
            "bandwidthUsage": {
                "name": "bandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Version1_Usage",
                "form": "relational",
                "doc": "In and out bandwidth utilization for a specified time stamp."
            },
            "bandwidthUsageDetailType": {
                "name": "bandwidthUsageDetailType",
                "type": "SoftLayer_Network_Bandwidth_Version1_Usage_Detail_Type",
                "form": "relational",
                "doc": "Describes this bandwidth utilization record as on the public or private network interface."
            },
            "amountIn": {
                "name": "amountIn",
                "type": "decimal",
                "form": "local",
                "doc": "Incoming bandwidth utilization ."
            },
            "amountOut": {
                "name": "amountOut",
                "type": "decimal",
                "form": "local",
                "doc": "Outgoing bandwidth utilization ."
            },
            "day": {
                "name": "day",
                "type": "dateTime",
                "form": "local",
                "doc": "Day and time this bandwidth utilization event was recorded."
            }
        }
    },
    "SoftLayer_Network_Bandwidth_Version1_Usage_Detail_Type": {
        "name": "SoftLayer_Network_Bandwidth_Version1_Usage_Detail_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Bandwidth_Version1_Usage_Detail_Type data type contains generic information relating to the types of bandwidth records available, currently just public and private. ",
        "properties": {
            "alias": {
                "name": "alias",
                "type": "string",
                "form": "local",
                "doc": "Database key associated with this bandwidth detail type."
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Account": {
        "name": "SoftLayer_Network_CdnMarketplace_Account",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_CdnMarketplace_Account service allows customers to create, and delete CDN accounts. A SoftLayer_Network_CdnMarketplace_Account record is created when the customer configures a CDN account for the first time. A customer will be able to create multiple CDN accounts, but each account will be bound to a single vendor. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Account",
                "filterable": true,
                "maskable": true
            },
            "verifyCdnAccountExists": {
                "name": "verifyCdnAccountExists",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "vendorName",
                        "type": "string"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_CdnMarketplace_Account data type models an individual CDN account. CDN accounts contain the SoftLayer account ID of the customer, the vendor ID the account belongs to, the customer ID provided by the vendor, and a CDN account's status. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "SoftLayer account to which the CDN account belongs."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "An associated parent billing item which is active."
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking",
        "base": "SoftLayer_Entity",
        "methods": {
            "createGeoblocking": {
                "name": "createGeoblocking",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            },
            "deleteGeoblocking": {
                "name": "deleteGeoblocking",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            },
            "getGeoblocking": {
                "name": "getGeoblocking",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            },
            "getGeoblockingAllowedTypesAndRegions": {
                "name": "getGeoblockingAllowedTypesAndRegions",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking_Type",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking",
                "filterable": true,
                "maskable": true
            },
            "updateGeoblocking": {
                "name": "updateGeoblocking",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            }
        },
        "properties": {
            "accessType": {
                "name": "accessType",
                "type": "string",
                "form": "local"
            },
            "regionType": {
                "name": "regionType",
                "type": "string",
                "form": "local"
            },
            "regions": {
                "name": "regions",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking_Type": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_Geoblocking_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "accessType": {
                "name": "accessType",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "continent": {
                "name": "continent",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "countryOrRegion": {
                "name": "countryOrRegion",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "regionType": {
                "name": "regionType",
                "type": "string",
                "form": "local",
                "typeArray": true
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_HotlinkProtection": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_HotlinkProtection",
        "base": "SoftLayer_Entity",
        "methods": {
            "createHotlinkProtection": {
                "name": "createHotlinkProtection",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_HotlinkProtection",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            },
            "deleteHotlinkProtection": {
                "name": "deleteHotlinkProtection",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_HotlinkProtection",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            },
            "getHotlinkProtection": {
                "name": "getHotlinkProtection",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_HotlinkProtection",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_HotlinkProtection",
                "filterable": true,
                "maskable": true
            },
            "updateHotlinkProtection": {
                "name": "updateHotlinkProtection",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_HotlinkProtection",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            }
        },
        "properties": {
            "protectionType": {
                "name": "protectionType",
                "type": "string",
                "form": "local"
            },
            "refererValues": {
                "name": "refererValues",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service manages the modify response headers for domain mapping configurations. ",
        "methods": {
            "createModifyResponseHeader": {
                "name": "createModifyResponseHeader",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader",
                "static": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader"
                    }
                ]
            },
            "deleteModifyResponseHeader": {
                "name": "deleteModifyResponseHeader",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "modResHeaderUniqueId",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader",
                "filterable": true,
                "maskable": true
            },
            "listModifyResponseHeader": {
                "name": "listModifyResponseHeader",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "updateModifyResponseHeader": {
                "name": "updateModifyResponseHeader",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_ModifyResponseHeader"
                    }
                ]
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_TokenAuth": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_TokenAuth",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service manages the paths for domain mapping configurations. ",
        "methods": {
            "createTokenAuthPath": {
                "name": "createTokenAuthPath",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_TokenAuth",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_TokenAuth"
                    }
                ]
            },
            "deleteTokenAuthPath": {
                "name": "deleteTokenAuthPath",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Behavior_TokenAuth",
                "filterable": true,
                "maskable": true
            },
            "listTokenAuthPath": {
                "name": "listTokenAuthPath",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_TokenAuth",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "updateTokenAuthPath": {
                "name": "updateTokenAuthPath",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_TokenAuth",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Behavior_TokenAuth"
                    }
                ]
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Cache_Purge": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Cache_Purge",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service manages purges associated with a CDN mapping Configuration. ",
        "methods": {
            "createPurge": {
                "name": "createPurge",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_Purge",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Cache_Purge",
                "filterable": true,
                "maskable": true
            },
            "getPurgeHistoryPerMapping": {
                "name": "getPurgeHistoryPerMapping",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_Purge",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "saved",
                        "type": "int",
                        "defaultValue": 2
                    }
                ]
            },
            "getPurgeStatus": {
                "name": "getPurgeStatus",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_Purge",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "type": "string"
                    }
                ]
            },
            "saveOrUnsavePurgePath": {
                "name": "saveOrUnsavePurgePath",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_Purge",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "saveOrUnsave",
                        "type": "int"
                    }
                ]
            }
        },
        "typeDoc": "This data type models a purge event that occurs in caching server. It contains a reference to a mapping configuration, the path to execute the purge on, the status of the purge, and flag that enables saving the purge information for future use. "
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Cache_PurgeGroup": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Cache_PurgeGroup",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service manages purge group associated with a CDN mapping Configuration. ",
        "methods": {
            "createPurgeGroup": {
                "name": "createPurgeGroup",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroup",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string",
                        "doc": "Domain mapping uniqueID"
                    },
                    {
                        "name": "groupName",
                        "type": "string",
                        "doc": "Name of purge group"
                    },
                    {
                        "name": "paths",
                        "type": "string",
                        "typeArray": true,
                        "doc": "Array of paths"
                    },
                    {
                        "name": "option",
                        "type": "int"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Cache_PurgeGroup",
                "filterable": true,
                "maskable": true
            },
            "getPurgeGroupByGroupId": {
                "name": "getPurgeGroupByGroupId",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroup",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string",
                        "doc": "Domain mapping uniqueID"
                    },
                    {
                        "name": "groupUniqueId",
                        "type": "string",
                        "doc": "Purge group uniqueID"
                    }
                ]
            },
            "getPurgeGroupQuota": {
                "name": "getPurgeGroupQuota",
                "type": "int",
                "static": true
            },
            "listFavoriteGroup": {
                "name": "listFavoriteGroup",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroup",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string",
                        "doc": "Domain mapping uniqueID"
                    }
                ]
            },
            "listUnfavoriteGroup": {
                "name": "listUnfavoriteGroup",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroup",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string",
                        "doc": "Domain mapping uniqueID"
                    }
                ]
            },
            "purgeByGroupIds": {
                "name": "purgeByGroupIds",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroupHistory",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string",
                        "doc": "Domain mapping uniqueID"
                    },
                    {
                        "name": "groupUniqueIds",
                        "type": "string",
                        "typeArray": true,
                        "doc": "Array of purge group uniqueID"
                    }
                ]
            },
            "removePurgeGroupFromFavorite": {
                "name": "removePurgeGroupFromFavorite",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroup",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string",
                        "doc": "Domain mapping uniqueID"
                    },
                    {
                        "name": "groupUniqueId",
                        "type": "string",
                        "doc": "Purge group uniqueID"
                    }
                ]
            },
            "savePurgeGroupAsFavorite": {
                "name": "savePurgeGroupAsFavorite",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroup",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string",
                        "doc": "Domain mapping uniqueID"
                    },
                    {
                        "name": "groupUniqueId",
                        "type": "string",
                        "doc": "Purge group uniqueID"
                    }
                ]
            }
        },
        "typeDoc": "This data type models a purge group event that occurs in caching server. It contains a reference to a mapping configuration and the path to execute the purge on. "
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Cache_PurgeHistory": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Cache_PurgeHistory",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service manages purge history associated with a CDN mapping Configuration. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Cache_PurgeHistory",
                "filterable": true,
                "maskable": true
            },
            "listPurgeGroupHistory": {
                "name": "listPurgeGroupHistory",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Cache_PurgeGroupHistory",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string",
                        "doc": "Domain mapping uniqueID"
                    }
                ]
            }
        },
        "typeDoc": "This data type models a purge history event that occurs in caching server. The purge group history will be deleted after 15 days. The possible purge status of each history can be 'SUCCESS', \"FAILED\" or \"IN_PROGRESS\". "
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Cache_TimeToLive": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Cache_TimeToLive",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service manages Times To Live (TTLs) associated with a CDN mapping Configuration. A time to live represents the time a purge will occur at a given path. ",
        "methods": {
            "createTimeToLive": {
                "name": "createTimeToLive",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "pathName",
                        "type": "string"
                    },
                    {
                        "name": "ttl",
                        "type": "string"
                    }
                ]
            },
            "deleteTimeToLive": {
                "name": "deleteTimeToLive",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "pathName",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Cache_TimeToLive",
                "filterable": true,
                "maskable": true
            },
            "listTimeToLive": {
                "name": "listTimeToLive",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Cache_TimeToLive",
                "typeArray": true,
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "updateTimeToLive": {
                "name": "updateTimeToLive",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "oldPath",
                        "type": "string"
                    },
                    {
                        "name": "newPath",
                        "type": "string"
                    },
                    {
                        "name": "oldTtl",
                        "type": "string"
                    },
                    {
                        "name": "newTtl",
                        "type": "string"
                    }
                ]
            }
        },
        "typeDoc": "This data type models a purge event that occurs repetitively and automatically in caching server after a set interval of time. A time to live instance contains a reference to a mapping configuration, the path to execute the purge on, the result of the purge, and the time interval after which the purge will be executed. ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "date record is created "
            },
            "path": {
                "name": "path",
                "type": "string",
                "form": "local",
                "doc": "Path where purge will be executed after TTL "
            },
            "timeToLive": {
                "name": "timeToLive",
                "type": "int",
                "form": "local",
                "doc": "Time interval after which purge will occur repeatedly "
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Mapping": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Mapping",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service manages domain mapping configurations for enabling CDN services. ",
        "methods": {
            "createDomainMapping": {
                "name": "createDomainMapping",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            },
            "deleteDomainMapping": {
                "name": "deleteDomainMapping",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Mapping",
                "filterable": true,
                "maskable": true
            },
            "listDomainMappingByUniqueId": {
                "name": "listDomainMappingByUniqueId",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "listDomainMappings": {
                "name": "listDomainMappings",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
                "typeArray": true,
                "static": true
            },
            "retryHttpsActionRequest": {
                "name": "retryHttpsActionRequest",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "startDomainMapping": {
                "name": "startDomainMapping",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "stopDomainMapping": {
                "name": "stopDomainMapping",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "updateDomainMapping": {
                "name": "updateDomainMapping",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            },
            "verifyCname": {
                "name": "verifyCname",
                "type": "boolean",
                "doc": "Verifies the CNAME is Unique in the domain. The method will return true if CNAME is unique else returns false ",
                "static": true,
                "parameters": [
                    {
                        "name": "cname",
                        "type": "string"
                    }
                ]
            },
            "verifyDomainMapping": {
                "name": "verifyDomainMapping",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping",
                "typeArray": true,
                "doc": "Verifies the status of the domain mapping by calling the rest api; will update the status, cname, and vendorCName if necessary and will return the updated values. ",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "int"
                    }
                ]
            }
        },
        "typeDoc": "This data type represents the mapping Configuration settings for enabling CDN services. Each instance contains a reference to a CDN account, and CDN configuration properties such as a domain, an origin host and its port, a cname we generate, a cname the vendor generates, and a status. Other properties include the type of content to be cached (static or dynamic), the origin type (a host server or an object storage account), and the protocol to be used for caching. "
    },
    "SoftLayer_Network_CdnMarketplace_Configuration_Mapping_Path": {
        "name": "SoftLayer_Network_CdnMarketplace_Configuration_Mapping_Path",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service manages the paths for domain mapping configurations. ",
        "methods": {
            "createOriginPath": {
                "name": "createOriginPath",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping_Path",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            },
            "deleteOriginPath": {
                "name": "deleteOriginPath",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Configuration_Mapping_Path",
                "filterable": true,
                "maskable": true
            },
            "listOriginPath": {
                "name": "listOriginPath",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping_Path",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "uniqueId",
                        "type": "string"
                    }
                ]
            },
            "updateOriginPath": {
                "name": "updateOriginPath",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Mapping_Path",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "input",
                        "type": "SoftLayer_Container_Network_CdnMarketplace_Configuration_Input"
                    }
                ]
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Metrics": {
        "name": "SoftLayer_Network_CdnMarketplace_Metrics",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This Service class will describe in detail each Simple Object Access Protocol (SOAP) API call used in the Content Delivery Network (CDN) metrics. These APIs will allow callers to collect metrics for the CDN service. ",
        "methods": {
            "getCustomerInvoicingMetrics": {
                "name": "getCustomerInvoicingMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "vendorName",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "type": "int",
                        "doc": "The start data timestamp(UTC+0), the date can not be earlier than 93 days ago"
                    },
                    {
                        "name": "endDate",
                        "type": "int",
                        "doc": "The end data timestamp(UTC+0), the date can not be later than 3 days ago"
                    },
                    {
                        "name": "frequency",
                        "type": "string",
                        "doc": "The frequency for query, supported type 'day', 'aggregate'",
                        "defaultValue": "aggregate"
                    }
                ]
            },
            "getCustomerRealTimeMetrics": {
                "name": "getCustomerRealTimeMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "vendorName",
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "type": "int"
                    },
                    {
                        "name": "endTime",
                        "type": "int"
                    },
                    {
                        "name": "timeInterval",
                        "type": "int",
                        "defaultValue": null
                    }
                ]
            },
            "getCustomerUsageMetrics": {
                "name": "getCustomerUsageMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "vendorName",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "type": "int"
                    },
                    {
                        "name": "endDate",
                        "type": "int"
                    },
                    {
                        "name": "frequency",
                        "type": "string"
                    }
                ]
            },
            "getMappingBandwidthByRegionMetrics": {
                "name": "getMappingBandwidthByRegionMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "mappingUniqueId",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "type": "int"
                    },
                    {
                        "name": "endDate",
                        "type": "int"
                    },
                    {
                        "name": "frequency",
                        "type": "string",
                        "defaultValue": "aggregate"
                    }
                ]
            },
            "getMappingBandwidthMetrics": {
                "name": "getMappingBandwidthMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "mappingUniqueId",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "type": "int"
                    },
                    {
                        "name": "endDate",
                        "type": "int"
                    },
                    {
                        "name": "frequency",
                        "type": "string"
                    }
                ]
            },
            "getMappingHitsByTypeMetrics": {
                "name": "getMappingHitsByTypeMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "mappingUniqueId",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "type": "int"
                    },
                    {
                        "name": "endDate",
                        "type": "int"
                    },
                    {
                        "name": "frequency",
                        "type": "string",
                        "defaultValue": "aggregate"
                    }
                ]
            },
            "getMappingHitsMetrics": {
                "name": "getMappingHitsMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "mappingUniqueId",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "type": "int"
                    },
                    {
                        "name": "endDate",
                        "type": "int"
                    },
                    {
                        "name": "frequency",
                        "type": "string",
                        "defaultValue": "aggregate"
                    }
                ]
            },
            "getMappingIntegratedMetrics": {
                "name": "getMappingIntegratedMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "mappingUniqueId",
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "type": "int"
                    },
                    {
                        "name": "endTime",
                        "type": "int"
                    },
                    {
                        "name": "frequency",
                        "type": "string",
                        "defaultValue": "day"
                    }
                ]
            },
            "getMappingRealTimeMetrics": {
                "name": "getMappingRealTimeMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "mappingUniqueId",
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "type": "int"
                    },
                    {
                        "name": "endTime",
                        "type": "int"
                    },
                    {
                        "name": "timeInterval",
                        "type": "int",
                        "defaultValue": null
                    }
                ]
            },
            "getMappingUsageMetrics": {
                "name": "getMappingUsageMetrics",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Metrics",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "mappingUniqueId",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "type": "int"
                    },
                    {
                        "name": "endDate",
                        "type": "int"
                    },
                    {
                        "name": "frequency",
                        "type": "string",
                        "defaultValue": "aggregate"
                    }
                ]
            }
        },
        "typeDoc": "This Metrics class provides methods to get CDN metrics based on account or mapping unique id. "
    },
    "SoftLayer_Network_CdnMarketplace_Utils_Response": {
        "name": "SoftLayer_Network_CdnMarketplace_Utils_Response",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "code": {
                "name": "code",
                "type": "int",
                "form": "local"
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_CdnMarketplace_Vendor": {
        "name": "SoftLayer_Network_CdnMarketplace_Vendor",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service allows internal users to create, read, update, and delete\u2028 vendor instances. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_CdnMarketplace_Vendor",
                "filterable": true,
                "maskable": true
            },
            "listVendors": {
                "name": "listVendors",
                "type": "SoftLayer_Container_Network_CdnMarketplace_Vendor",
                "typeArray": true,
                "static": true
            }
        },
        "typeDoc": "The SoftLayer_Network_CdnMarketplace_Vendor contains information regarding\u2028 a CDN Vendor. This class is associated with\u2028 SoftLayer_Network_CdnMarketplace_Vendor_Attribute class.\u2028 "
    },
    "SoftLayer_Network_Component": {
        "name": "SoftLayer_Network_Component",
        "base": "SoftLayer_Entity",
        "methods": {
            "addNetworkVlanTrunks": {
                "name": "addNetworkVlanTrunks",
                "type": "SoftLayer_Network_Vlan",
                "typeArray": true,
                "doc": "Add VLANs as trunks to a network component. The VLANs given must be assigned to your account, and on the router to which this network component is connected. The current native VLAN (networkVlanId/networkVlan) cannot be added as a trunk. This method should be called on a network component attached directly to customer assigned hardware, though all trunking operations will occur on the uplinkComponent. A current list of VLAN trunks for a network component on a customer server can be found at 'uplinkComponent->networkVlanTrunks'. \n\nThis method returns an array of SoftLayer_Network_Vlans which were added as trunks. Any requested trunks which are already trunked will be silently ignored, and will not be returned. \n\nConfiguration of network hardware is done asynchronously, do not depend on the return of this call as an indication that the newly trunked VLANs will be accessible. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "networkVlans",
                        "type": "SoftLayer_Network_Vlan",
                        "typeArray": true,
                        "doc": "An array of Network_Vlan objects with the 'id' or 'vlanNumber'"
                    }
                ]
            },
            "clearNetworkVlanTrunks": {
                "name": "clearNetworkVlanTrunks",
                "type": "SoftLayer_Network_Vlan",
                "typeArray": true,
                "doc": "This method will remove all VLANs trunked to this network component. The native VLAN (networkVlanId/networkVlan) will remain active, and cannot be removed via the API. Returns a list of SoftLayer_Network_Vlan objects for which the trunks were removed. ",
                "maskable": true
            },
            "getCustomBandwidthDataByDate": {
                "name": "getCustomBandwidthDataByDate",
                "type": "SoftLayer_Container_Graph",
                "doc": "Retrieve bandwidth graph by date. ",
                "parameters": [
                    {
                        "name": "graphData",
                        "type": "SoftLayer_Container_Graph"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Component",
                "filterable": true,
                "maskable": true
            },
            "getPortStatistics": {
                "name": "getPortStatistics",
                "type": "SoftLayer_Container_Network_Port_Statistic",
                "doc": "\n**DEPRECATED - This operation will cease to function after April 4th, 2016 and will be removed from v3.2**\nRetrieve various network statistics.  The network statistics are retrieved from the network device using snmpget. Below is a list of statistics retrieved: \n* Administrative Status\n* Operational Status\n* Maximum Transmission Unit\n* In Octets\n* Out Octets\n* In Unicast Packets\n* Out Unicast Packets\n* In Multicast Packets\n* Out Multicast Packets"
            },
            "removeNetworkVlanTrunks": {
                "name": "removeNetworkVlanTrunks",
                "type": "SoftLayer_Network_Vlan",
                "typeArray": true,
                "doc": "Remove one or more VLANs currently attached to the uplinkComponent of this networkComponent. The VLANs given must be assigned to your account, and on the router the network component is connected to. If any VLANs not currently trunked are given, they will be silently ignored. \n\nThis method should be called on a network component attached directly to customer assigned hardware, though all trunking operations will occur on the uplinkComponent. A current list of VLAN trunks for a network component on a customer server can be found at 'uplinkComponent->networkVlanTrunks'. \n\nConfiguration of network hardware is done asynchronously, do not depend on the return of this call as an indication that the removed VLANs will be inaccessible. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "networkVlans",
                        "type": "SoftLayer_Network_Vlan",
                        "typeArray": true,
                        "doc": "An array of Network_Vlan"
                    }
                ]
            }
        },
        "typeDoc": "Every piece of hardware running in SoftLayer's datacenters connected to the public, private, or management networks (where applicable) have a corresponding network component. These network components are modeled by the SoftLayer_Network_Component data type. These data types reflect the servers' local ethernet and remote management interfaces. ",
        "properties": {
            "activeCommand": {
                "name": "activeCommand",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_Command_Request",
                "form": "relational",
                "doc": "Reboot/power (rebootDefault, rebootSoft, rebootHard, powerOn, powerOff and powerCycle) command currently executing by the server's remote management card."
            },
            "downlinkComponent": {
                "name": "downlinkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "The network component linking this object to a child device"
            },
            "duplexMode": {
                "name": "duplexMode",
                "type": "SoftLayer_Network_Component_Duplex_Mode",
                "form": "relational",
                "doc": "The duplex mode of a network component."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware that a network component resides in."
            },
            "highAvailabilityFirewallFlag": {
                "name": "highAvailabilityFirewallFlag",
                "type": "boolean",
                "form": "relational"
            },
            "interface": {
                "name": "interface",
                "type": "SoftLayer_Network_Bandwidth_Version1_Interface",
                "form": "relational",
                "doc": "[DEPRECATED] A hardware switch's interface to the bandwidth pod."
            },
            "ipAddressBindings": {
                "name": "ipAddressBindings",
                "type": "SoftLayer_Network_Component_IpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "The records of all IP addresses bound to a network component."
            },
            "ipAddresses": {
                "name": "ipAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true
            },
            "lastCommand": {
                "name": "lastCommand",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_Command_Request",
                "form": "relational",
                "doc": "Last reboot/power (rebootDefault, rebootSoft, rebootHard, powerOn, powerOff and powerCycle) command issued to the server's remote management card."
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object",
                "form": "relational",
                "doc": "The metric tracking object for this network component."
            },
            "networkComponentFirewall": {
                "name": "networkComponentFirewall",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "The upstream network component firewall."
            },
            "networkComponentGroup": {
                "name": "networkComponentGroup",
                "type": "SoftLayer_Network_Component_Group",
                "form": "relational",
                "doc": "A network component's associated group."
            },
            "networkHardware": {
                "name": "networkHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All network devices in SoftLayer's network hierarchy that this device is connected to."
            },
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The VLAN that a network component's subnet is associated with."
            },
            "networkVlanTrunks": {
                "name": "networkVlanTrunks",
                "type": "SoftLayer_Network_Component_Network_Vlan_Trunk",
                "form": "relational",
                "typeArray": true,
                "doc": "The VLANs that are trunked to this network component."
            },
            "primaryIpAddressRecord": {
                "name": "primaryIpAddressRecord",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The primary IPv4 Address record for a network component."
            },
            "primarySubnet": {
                "name": "primarySubnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "The subnet of the primary IP address assigned to this network component."
            },
            "primaryVersion6IpAddressRecord": {
                "name": "primaryVersion6IpAddressRecord",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The primary IPv6 Address record for a network component."
            },
            "recentCommands": {
                "name": "recentCommands",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_Command_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "The last five reboot/power (rebootDefault, rebootSoft, rebootHard, powerOn, powerOff and powerCycle) commands issued to the server's remote management card."
            },
            "redundancyCapableFlag": {
                "name": "redundancyCapableFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates whether the network component is participating in a group of two or more components capable of being operationally redundant, if enabled."
            },
            "redundancyEnabledFlag": {
                "name": "redundancyEnabledFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates whether the network component is participating in a group of two or more components which is actively providing link redundancy."
            },
            "remoteManagementUsers": {
                "name": "remoteManagementUsers",
                "type": "SoftLayer_Hardware_Component_RemoteManagement_User",
                "form": "relational",
                "typeArray": true,
                "doc": "User(s) credentials to issue commands and/or interact with the server's remote management card."
            },
            "router": {
                "name": "router",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "A network component's routers."
            },
            "storageNetworkFlag": {
                "name": "storageNetworkFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether a network component's primary ip address is from a storage network subnet or not. [Deprecated]"
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "A network component's subnets. A subnet is a group of IP addresses"
            },
            "uplinkComponent": {
                "name": "uplinkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "The network component linking this object to parent"
            },
            "uplinkDuplexMode": {
                "name": "uplinkDuplexMode",
                "type": "SoftLayer_Network_Component_Duplex_Mode",
                "form": "relational",
                "doc": "The duplex mode of the uplink network component linking to this object"
            },
            "duplexModeId": {
                "name": "duplexModeId",
                "type": "string",
                "form": "local",
                "doc": "A network component's Duplex mode. "
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the hardware that a network component belongs to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A network component's internal identifier."
            },
            "ipmiIpAddress": {
                "name": "ipmiIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address of an IPMI-based management network component."
            },
            "ipmiMacAddress": {
                "name": "ipmiMacAddress",
                "type": "string",
                "form": "local",
                "doc": "The MAC address of an IPMI-based management network component."
            },
            "macAddress": {
                "name": "macAddress",
                "type": "string",
                "form": "local",
                "doc": "A network component's unique MAC address. IPMI-based management network interfaces may not have a MAC address."
            },
            "maxSpeed": {
                "name": "maxSpeed",
                "type": "int",
                "form": "local",
                "doc": "A network component's maximum allowed speed, measured in Mbit per second. ''maxSpeed'' is determined by the capabilities of the network interface and the port speed purchased on your SoftLayer server. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a network component was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A network component's short name. For most servers this is the string \"eth\" for ethernet ports or \"mgmt\" for remote management ports. Use this in conjunction with the ''port'' property to identify a network component. For instance, the \"eth0\" interface on a server has the network component name \"eth\" and port 0. "
            },
            "networkVlanId": {
                "name": "networkVlanId",
                "type": "int",
                "form": "local",
                "doc": "The unique internal id of the network VLAN that the port belongs to."
            },
            "port": {
                "name": "port",
                "type": "int",
                "form": "local",
                "doc": "A network component's port number. Most hardware has more than one network interface. The port property separates these interfaces. Use this in conjunction with the ''name'' property to identify a network component. For instance, the \"eth0\" interface on a server has the network component name \"eth\" and port 0. "
            },
            "primaryIpAddress": {
                "name": "primaryIpAddress",
                "type": "string",
                "form": "local",
                "doc": "A network component's primary IP address. IPMI-based management network interfaces may not have an IP address."
            },
            "speed": {
                "name": "speed",
                "type": "int",
                "form": "local",
                "doc": "A network component's speed, measured in Mbit per second."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "A network component's status. This can take one of four possible values: \"ACTIVE\", \"DISABLE\", \"USER_OFF\", or \"MACWAIT\". \"ACTIVE\" network components are enabled and in use on a servers. \"DISABLE\" status components have been administratively disabled by SoftLayer accounting or abuse. \"USER_OFF\" components have been administratively disabled by you, the user. \"MACWAIT\" components only exist on network components that have not been provisioned. You should never see a network interface in MACWAIT state. If you happen to see one please contact SoftLayer support. "
            },
            "ipAddressBindingCount": {
                "name": "ipAddressBindingCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the records of all IP addresses bound to a network component."
            },
            "ipAddressCount": {
                "name": "ipAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "networkHardwareCount": {
                "name": "networkHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all network devices in SoftLayer's network hierarchy that this device is connected to."
            },
            "networkVlanTrunkCount": {
                "name": "networkVlanTrunkCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the VLANs that are trunked to this network component."
            },
            "recentCommandCount": {
                "name": "recentCommandCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the last five reboot/power (rebootDefault, rebootSoft, rebootHard, powerOn, powerOff and powerCycle) commands issued to the server's remote management card."
            },
            "remoteManagementUserCount": {
                "name": "remoteManagementUserCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of user(s) credentials to issue commands and/or interact with the server's remote management card."
            },
            "subnetCount": {
                "name": "subnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a network component's subnets. A subnet is a group of IP addresses"
            }
        }
    },
    "SoftLayer_Network_Component_Duplex_Mode": {
        "name": "SoftLayer_Network_Component_Duplex_Mode",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Duplex Mode allows finer grained control over networking options and settings. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Component_Firewall": {
        "name": "SoftLayer_Network_Component_Firewall",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_Component_Firewall service accesses general information relating to a single SoftLayer network component firewall.  This is the object which ties the running rules to a specific downstream server. The current running rule set can be pulled from this service. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Component_Firewall",
                "doc": "getObject returns a SoftLayer_Network_Firewall_Module_Context_Interface_AccessControlList_Network_Component object. You can only get objects for servers attached to your account that have a network firewall enabled. ",
                "filterable": true,
                "maskable": true
            },
            "hasActiveTransactions": {
                "name": "hasActiveTransactions",
                "type": "boolean",
                "doc": "Check for active transactions for the shared Firewall. "
            }
        },
        "typeDoc": "The SoftLayer_Network_Component_Firewall data type contains general information relating to a single SoftLayer network component firewall. This is the object which ties the running rules to a specific downstream server. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "properties": {
            "applyServerRuleSubnets": {
                "name": "applyServerRuleSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "The additional subnets linked to this network component firewall, that inherit rules from the host that the context slot is attached to."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for a Hardware Firewall (Dedicated)."
            },
            "guestNetworkComponent": {
                "name": "guestNetworkComponent",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "doc": "The network component of the guest virtual server that this network component firewall belongs to."
            },
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "The network component of the switch interface that this network component firewall belongs to."
            },
            "networkFirewallUpdateRequest": {
                "name": "networkFirewallUpdateRequest",
                "type": "SoftLayer_Network_Firewall_Update_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "The update requests made for this firewall."
            },
            "rules": {
                "name": "rules",
                "type": "SoftLayer_Network_Component_Firewall_Rule",
                "form": "relational",
                "typeArray": true,
                "doc": "The currently running rule set of this network component firewall."
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "The additional subnets linked to this network component firewall."
            },
            "guestNetworkComponentId": {
                "name": "guestNetworkComponentId",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for the network component of the switch interface that this network component firewall is attached to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for the network component firewall."
            },
            "networkComponentId": {
                "name": "networkComponentId",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for the network component of the switch interface that this network component firewall is attached to."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "Current status of the network component firewall."
            },
            "applyServerRuleSubnetCount": {
                "name": "applyServerRuleSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the additional subnets linked to this network component firewall, that inherit rules from the host that the context slot is attached to."
            },
            "networkFirewallUpdateRequestCount": {
                "name": "networkFirewallUpdateRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the update requests made for this firewall."
            },
            "ruleCount": {
                "name": "ruleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the currently running rule set of this network component firewall."
            },
            "subnetCount": {
                "name": "subnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the additional subnets linked to this network component firewall."
            }
        }
    },
    "SoftLayer_Network_Component_Firewall_Rule": {
        "name": "SoftLayer_Network_Component_Firewall_Rule",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A SoftLayer_Network_Component_Firewall_Rule object type represents a currently running firewall rule and contains relative information. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. ",
        "properties": {
            "networkComponentFirewall": {
                "name": "networkComponentFirewall",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "The network component firewall that this rule belongs to."
            },
            "action": {
                "name": "action",
                "type": "string",
                "form": "local",
                "doc": "The action that the rule is to take [permit or deny]."
            },
            "destinationIpAddress": {
                "name": "destinationIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The destination IP address considered for determining rule application."
            },
            "destinationIpCidr": {
                "name": "destinationIpCidr",
                "type": "int",
                "form": "local",
                "doc": "The CIDR is used for determining rule application. This value will"
            },
            "destinationIpSubnetMask": {
                "name": "destinationIpSubnetMask",
                "type": "string",
                "form": "local",
                "doc": "The destination IP subnet mask considered for determining rule application."
            },
            "destinationPortRangeEnd": {
                "name": "destinationPortRangeEnd",
                "type": "int",
                "form": "local",
                "doc": "The ending (upper end of range) destination port considered for determining rule application."
            },
            "destinationPortRangeStart": {
                "name": "destinationPortRangeStart",
                "type": "int",
                "form": "local",
                "doc": "The starting (lower end of range) destination port considered for determining rule application."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The rule's internal identifier."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "The notes field for the rule."
            },
            "orderValue": {
                "name": "orderValue",
                "type": "int",
                "form": "local",
                "doc": "The numeric value describing the order in which the rule should be applied."
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "The protocol considered for determining rule application."
            },
            "sourceIpAddress": {
                "name": "sourceIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The source IP address considered for determining rule application."
            },
            "sourceIpCidr": {
                "name": "sourceIpCidr",
                "type": "int",
                "form": "local",
                "doc": "The CIDR is used for determining rule application. This value will"
            },
            "sourceIpSubnetMask": {
                "name": "sourceIpSubnetMask",
                "type": "string",
                "form": "local",
                "doc": "The source IP subnet mask considered for determining rule application."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "Current status of the network component firewall."
            },
            "version": {
                "name": "version",
                "type": "int",
                "form": "local",
                "doc": "Whether this rule is an IPv4 rule or an IPv6 rule. If"
            }
        }
    },
    "SoftLayer_Network_Component_Firewall_Subnets": {
        "name": "SoftLayer_Network_Component_Firewall_Subnets",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A SoftLayer_Network_Component_Firewall_Subnets object type represents the current linked subnets and contains relative information. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. ",
        "properties": {
            "networkComponentFirewall": {
                "name": "networkComponentFirewall",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "The network component firewall that write rules for this subnet."
            },
            "subnet": {
                "name": "subnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "The subnet that this link binds to the network component firewall."
            },
            "applyServerRulesFlag": {
                "name": "applyServerRulesFlag",
                "type": "boolean",
                "form": "local",
                "doc": "A boolean flag that indicates whether the subnet should receive all the rules intended for the host on this context slot."
            },
            "subnetId": {
                "name": "subnetId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the subnet being linked to the network component firewall."
            }
        }
    },
    "SoftLayer_Network_Component_Group": {
        "name": "SoftLayer_Network_Component_Group",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "membersDescription": {
                "name": "membersDescription",
                "type": "string",
                "form": "relational",
                "doc": "A succinct label describing the members of this grouping."
            },
            "networkComponents": {
                "name": "networkComponents",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A network component group's associated network components."
            },
            "groupTypeId": {
                "name": "groupTypeId",
                "type": "int",
                "form": "local"
            },
            "networkComponentCount": {
                "name": "networkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a network component group's associated network components."
            }
        }
    },
    "SoftLayer_Network_Component_IpAddress": {
        "name": "SoftLayer_Network_Component_IpAddress",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Component_IpAddress data type contains general information relating to the binding of a single network component to a single SoftLayer IP address. ",
        "properties": {
            "ipAddress": {
                "name": "ipAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The IP address associated with this object's network component."
            },
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "The network component associated with this object's IP address."
            }
        }
    },
    "SoftLayer_Network_Component_Network_Vlan_Trunk": {
        "name": "SoftLayer_Network_Component_Network_Vlan_Trunk",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Represents the association between a Network_Component and Network_Vlan in the manner of a 'trunk'. Trunking a VLAN to a port allows that ports to receive and send packets tagged with the corresponding VLAN number. ",
        "properties": {
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "The network component that the VLAN is being trunked to."
            },
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The VLAN that is being trunked to the network component."
            },
            "networkComponentId": {
                "name": "networkComponentId",
                "type": "int",
                "form": "local",
                "doc": "The network component's identifier."
            },
            "networkVlanId": {
                "name": "networkVlanId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the network VLAN that is a trunk on the network component."
            }
        }
    },
    "SoftLayer_Network_Component_RemoteManagement": {
        "name": "SoftLayer_Network_Component_RemoteManagement",
        "base": "SoftLayer_Network_Component",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Component_RemoteManagement data type contains general information relating to a single SoftLayer remote management network component. "
    },
    "SoftLayer_Network_Component_Uplink_Hardware": {
        "name": "SoftLayer_Network_Component_Uplink_Hardware",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Component_Uplink_Hardware data type abstracts information related to network connections between SoftLayer hardware and SoftLayer network components. \n\nIt is populated via triggers on the network_connection table (SoftLayer_Network_Connection), so you shouldn't have to delete or insert records into this table, ever. \n\n",
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "A network component uplink's connected [[SoftLayer_Hardware|Hardware]]."
            },
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "The [[SoftLayer_Network_Component|Network Component]] that a uplink connection belongs to.."
            }
        }
    },
    "SoftLayer_Network_Customer_Subnet": {
        "name": "SoftLayer_Network_Customer_Subnet",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every Customer subnet is defined in the SoftLayer_Network_Customer_Subnet service. SoftLayer keeps track of subnets outside of the SoftLayer Network that are associated to SoftLayer subnets or systems. \n\nFor example, customer subnets are tracked for proper management of network tunnels.  This service allows for managing subnets on the remote end of the network tunnel. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Customer_Subnet",
                "doc": "For IPSec network tunnels, customers can create their local subnets using this method.  After the customer is created successfully, the customer subnet can then be added to the IPSec network tunnel. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Customer_Subnet",
                        "doc": "The SoftLayer_Network_Customer_Subnet object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Customer_Subnet",
                "doc": "getObject retrieves the SoftLayer_Network_Customer_Subnet object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Customer_Subnet service. You can only retrieve the subnet whose account matches the account that your portal user is assigned to. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Customer_Subnet data type contains general information relating to a single customer subnet (remote). ",
        "properties": {
            "ipAddresses": {
                "name": "ipAddresses",
                "type": "SoftLayer_Network_Customer_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "All ip addresses associated with a subnet."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account id a customer subnet belongs to."
            },
            "cidr": {
                "name": "cidr",
                "type": "int",
                "form": "local",
                "doc": "A subnet's Classless Inter-Domain Routing prefix. This is a number between 0 and 32 signifying the number of bits in a subnet's netmask. These bits separate a subnet's network address from it's host addresses. It performs the same function as the ''netmask'' property, but is represented as an integer. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A customer subnet's unique identifier."
            },
            "netmask": {
                "name": "netmask",
                "type": "string",
                "form": "local",
                "doc": "A bitmask in dotted-quad format that is used to separate a subnet's network address from it's host addresses. This performs the same function as the ''cidr'' property, but is expressed in a string format. "
            },
            "networkIdentifier": {
                "name": "networkIdentifier",
                "type": "string",
                "form": "local",
                "doc": "A subnet's network identifier. This is the first IP address of a subnet. "
            },
            "totalIpAddresses": {
                "name": "totalIpAddresses",
                "type": "int",
                "form": "local",
                "doc": "The total number of ip addresses in a subnet."
            },
            "ipAddressCount": {
                "name": "ipAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all ip addresses associated with a subnet."
            }
        }
    },
    "SoftLayer_Network_Customer_Subnet_IpAddress": {
        "name": "SoftLayer_Network_Customer_Subnet_IpAddress",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Customer_Subnet_IpAddress data type contains general information relating to a single Customer Subnet (Remote) IPv4 address. ",
        "properties": {
            "subnet": {
                "name": "subnet",
                "type": "SoftLayer_Network_Customer_Subnet",
                "form": "relational",
                "doc": "The customer subnet (remote) that the ip address belongs to."
            },
            "translations": {
                "name": "translations",
                "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                "form": "relational",
                "typeArray": true,
                "doc": "All the address translations that are tied to an IP address."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for an ip address."
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local",
                "doc": "An IP address expressed in dotted quad format."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "An IP address' user defined note."
            },
            "subnetId": {
                "name": "subnetId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for the customer subnet (remote) the ip address belongs to."
            },
            "translationCount": {
                "name": "translationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all the address translations that are tied to an IP address."
            }
        }
    },
    "SoftLayer_Network_DirectLink_Location": {
        "name": "SoftLayer_Network_DirectLink_Location",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_DirectLink_Location service allows users to create, update, delete, get details of a Direct Link location and retrieve all existing details. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_DirectLink_Location",
                "typeArray": true,
                "doc": "Return all existing Direct Link location. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_DirectLink_Location",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_DirectLink_Location presents a structure containing attributes of a Direct Link location, and its related object SoftLayer location. ",
        "properties": {
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The location of Direct Link facility."
            },
            "provider": {
                "name": "provider",
                "type": "SoftLayer_Network_DirectLink_Provider",
                "form": "relational",
                "doc": "The Id of Direct Link provider."
            },
            "serviceType": {
                "name": "serviceType",
                "type": "SoftLayer_Network_DirectLink_ServiceType",
                "form": "relational",
                "doc": "The Id of Direct Link service type."
            },
            "buildingColocationOwner": {
                "name": "buildingColocationOwner",
                "type": "string",
                "form": "local",
                "doc": "The Direct Link specific location owner for POP/DC facilities. Like Equinix, Pacnet, Verizon etc. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a Direct Link location."
            },
            "isRedundantXcr": {
                "name": "isRedundantXcr",
                "type": "boolean",
                "form": "local",
                "doc": "Specifies if The Direct Link specific location has Redundancy:secondary XCR availability. "
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "The Direct Link specific location ie. Data Center & Network POP facility. Refer to location object Like Dallas in US, London in England etc. "
            },
            "marketGeography": {
                "name": "marketGeography",
                "type": "string",
                "form": "local",
                "doc": "The Direct Link Market location used in Direct Link Order. Like Europe, North America, Asia pacific etc. "
            }
        }
    },
    "SoftLayer_Network_DirectLink_Provider": {
        "name": "SoftLayer_Network_DirectLink_Provider",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_DirectLink_Provider service allows users to create, update, delete, get details of a Direct Link provider and retrieve all existing details. Provider like \"Equinix\", \"Telestra\" etc. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_DirectLink_Provider",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_DirectLink_Provider presents a structure containing attributes of a Direct Link provider. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_DirectLink_ServiceType": {
        "name": "SoftLayer_Network_DirectLink_ServiceType",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_DirectLink_ServiceType service allows users to create, update, delete, get details of a Direct Link Service Type and retrieve all existing details. Service Types can be EXCHANGE, NSP, COLO or CONNECT ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_DirectLink_ServiceType",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_DirectLink_ServiceType presents a structure containing attributes of a Direct Link Service Type. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_FbDbChangeRequestHistory": {
        "name": "SoftLayer_Network_FbDbChangeRequestHistory",
        "base": "SoftLayer_Entity",
        "noservice": true
    },
    "SoftLayer_Network_Firewall_AccessControlList": {
        "name": "SoftLayer_Network_Firewall_AccessControlList",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_Firewall_AccessControlList service accesses general information relating to a single SoftLayer firewall access control list.  This is the object which ties the running rules to a specific context. The current running rule set can be pulled from this service. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Firewall_AccessControlList",
                "doc": "getObject returns a SoftLayer_Network_Firewall_AccessControlList object. You can only get objects for servers attached to your account that have a network firewall enabled. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Firewall_AccessControlList data type contains general information relating to a single SoftLayer firewall access to controll list. This is the object which ties the running rules to a specific context. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "properties": {
            "networkFirewallUpdateRequests": {
                "name": "networkFirewallUpdateRequests",
                "type": "SoftLayer_Network_Firewall_Update_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "The update requests made for this firewall."
            },
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational"
            },
            "rules": {
                "name": "rules",
                "type": "SoftLayer_Network_Vlan_Firewall_Rule",
                "form": "relational",
                "typeArray": true,
                "doc": "The currently running rule set of this context access control list firewall."
            },
            "direction": {
                "name": "direction",
                "type": "string",
                "form": "local"
            },
            "firewallContextInterfaceId": {
                "name": "firewallContextInterfaceId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "networkFirewallUpdateRequestCount": {
                "name": "networkFirewallUpdateRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the update requests made for this firewall."
            },
            "ruleCount": {
                "name": "ruleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the currently running rule set of this context access control list firewall."
            }
        }
    },
    "SoftLayer_Network_Firewall_Interface": {
        "name": "SoftLayer_Network_Firewall_Interface",
        "base": "SoftLayer_Network_Firewall_Module_Context_Interface",
        "serviceDoc": "The SoftLayer_Network_Firewall_Interface service accesses general information relating to a single SoftLayer firewall interface.  This is the object which ties the firewall context access control list to a firewall. The current running rule set can be pulled from this service. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Firewall_Interface",
                "doc": "getObject returns a SoftLayer_Network_Firewall_Interface object. You can only get objects for servers attached to your account that have a network firewall enabled. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Firewall_Interface data type contains general information relating to a single SoftLayer firewall interface. This is the object which ties the firewall context access control list to a firewall. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. "
    },
    "SoftLayer_Network_Firewall_Module_Context_Interface": {
        "name": "SoftLayer_Network_Firewall_Module_Context_Interface",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Firewall_Module_Context_Interface",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "firewallContextAccessControlLists": {
                "name": "firewallContextAccessControlLists",
                "type": "SoftLayer_Network_Firewall_AccessControlList",
                "form": "relational",
                "typeArray": true
            },
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "firewallContextAccessControlListCount": {
                "name": "firewallContextAccessControlListCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Firewall_Template": {
        "name": "SoftLayer_Network_Firewall_Template",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_Firewall_Template service can be used to retrieve recommended SoftLayer network firewall templates and template rules. \n\nThe provided firewall templates are recommend rule sets for use with SoftLayer Hardware Firewall (Dedicated).  These optimized templates are designed to balance security restriction with application availability.  The templates given may be altered to provide custom network security, or may be used as-is for basic security. At least one rule set MUST be applied for the firewall to block traffic. Use the [[SoftLayer Network Component Firewall]] service to view current rules. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Firewall_Template",
                "typeArray": true,
                "doc": "Get all available firewall template objects. \n\n''getAllObjects'' returns an array of SoftLayer_Network_Firewall_Template objects upon success. ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Firewall_Template",
                "doc": "getObject returns a SoftLayer_Network_Firewall_Template object. You can retrieve all available firewall templates. getAllObjects returns an array of all available SoftLayer_Network_Firewall_Template objects. You can use these templates to generate a [[SoftLayer Network Firewall Update Request]]. \n\n@SLDNDocumentation Service See Also SoftLayer_Network_Firewall_Update_Request ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Firewall_Template type contains general information for a SoftLayer network firewall template. \n\nFirewall templates are recommend rule sets for use with SoftLayer Hardware Firewall (Dedicated).  These optimized templates are designed to balance security restriction with application availability.  The templates given may be altered to provide custom network security, or may be used as-is for basic security. At least one rule set MUST be applied for the firewall to block traffic. Use the [[SoftLayer Network Component Firewall]] service to view current rules. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "properties": {
            "rules": {
                "name": "rules",
                "type": "SoftLayer_Network_Firewall_Template_Rule",
                "form": "relational",
                "typeArray": true,
                "doc": "The rule set that belongs to this firewall rules template."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A Firewall template's internal identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the firewall rules template."
            },
            "ruleCount": {
                "name": "ruleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the rule set that belongs to this firewall rules template."
            }
        }
    },
    "SoftLayer_Network_Firewall_Template_Rule": {
        "name": "SoftLayer_Network_Firewall_Template_Rule",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Component_Firewall_Rule type contains general information relating to a single SoftLayer firewall template rule. Use the [[SoftLayer Network Component Firewall]] service to view current rules. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "properties": {
            "firewallTemplate": {
                "name": "firewallTemplate",
                "type": "SoftLayer_Network_Firewall_Template",
                "form": "relational",
                "doc": "The firewall template that this rule is attached to."
            },
            "action": {
                "name": "action",
                "type": "string",
                "form": "local",
                "doc": "The action that this template rule is to take [permit or deny]."
            },
            "destinationIpAddress": {
                "name": "destinationIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The destination IP address considered for determining rule application."
            },
            "destinationIpSubnetMask": {
                "name": "destinationIpSubnetMask",
                "type": "string",
                "form": "local",
                "doc": "The destination IP subnet mask considered for determining rule application."
            },
            "destinationPortRangeEnd": {
                "name": "destinationPortRangeEnd",
                "type": "int",
                "form": "local",
                "doc": "The ending (upper end of range) destination port considered for determining rule application."
            },
            "destinationPortRangeStart": {
                "name": "destinationPortRangeStart",
                "type": "int",
                "form": "local",
                "doc": "The starting (lower end of range) destination port considered for determining rule application."
            },
            "firewallTemplateId": {
                "name": "firewallTemplateId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the firewall template that a firewall template rule is associated with."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A Firewall template rule's internal identifier."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "The notes field for the firewall template rule."
            },
            "orderValue": {
                "name": "orderValue",
                "type": "int",
                "form": "local",
                "doc": "The numeric value describing the order in which the rule set should be applied."
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "The protocol considered for determining rule application."
            },
            "sourceIpAddress": {
                "name": "sourceIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The source IP address considered for determining rule application."
            },
            "sourceIpSubnetMask": {
                "name": "sourceIpSubnetMask",
                "type": "string",
                "form": "local",
                "doc": "The source IP subnet mask considered for determining rule application."
            }
        }
    },
    "SoftLayer_Network_Firewall_Update_Request": {
        "name": "SoftLayer_Network_Firewall_Update_Request",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_Firewall_Update_Request service can be used to create SoftLayer network component firewall rules update requests.  Update requests are added to a transaction queue and are typically posted in about 60 seconds.  After they are posted, they are listed as current rules via the [[SoftLayer Network Component Firewall]] service. Use the [[SoftLayer Network Component Firewall]] service to view current rules. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Firewall_Update_Request",
                "doc": "Create a new firewall update request. The SoftLayer_Network_Firewall_Update_Request object passed to this function must have at least one rule. \n\n''createObject'' returns a Boolean ''true'' on successful object creation or ''false'' if your firewall update request was unable to be created. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Firewall_Update_Request",
                        "doc": "The SoftLayer_Network_Firewall_Update_Request object that you wish to create."
                    }
                ]
            },
            "getFirewallUpdateRequestRuleAttributes": {
                "name": "getFirewallUpdateRequestRuleAttributes",
                "type": "SoftLayer_Container_Utility_Network_Firewall_Rule_Attribute",
                "doc": "Get the possible attribute values for a firewall update request rule.  These are the valid values which may be submitted as rule parameters for a firewall update request. \n\n''getFirewallUpdateRequestRuleAttributes'' returns a SoftLayer_Container_Utility_Network_Firewall_Rule_Attribute object upon success. ",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Firewall_Update_Request",
                "doc": "''getObject'' returns a SoftLayer_Network_Firewall_Update_Request object. You can only get historical objects for servers attached to your account that have a network firewall enabled. ''createObject'' inserts a new SoftLayer_Network_Firewall_Update_Request object. You can only insert requests for servers attached to your account that have a network firewall enabled. ''getFirewallUpdateRequestRuleAttributes'' Get the possible attribute values for a firewall update request rule. ",
                "filterable": true,
                "maskable": true
            },
            "updateRuleNote": {
                "name": "updateRuleNote",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "fwRule",
                        "type": "SoftLayer_Network_Component_Firewall_Rule"
                    },
                    {
                        "name": "note",
                        "type": "string"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_Firewall_Update_Request data type contains information relating to a SoftLayer network firewall update request. Use the [[SoftLayer Network Component Firewall]] service to view current rules. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. ",
        "properties": {
            "authorizingUser": {
                "name": "authorizingUser",
                "type": "SoftLayer_User_Interface",
                "form": "relational",
                "doc": "The user that authorized this firewall update request."
            },
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The downstream virtual server that the rule set will be applied to."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The downstream server that the rule set will be applied to."
            },
            "networkComponentFirewall": {
                "name": "networkComponentFirewall",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "The network component firewall that the rule set will be applied to."
            },
            "rules": {
                "name": "rules",
                "type": "SoftLayer_Network_Firewall_Update_Request_Rule",
                "form": "relational",
                "typeArray": true,
                "doc": "The group of rules contained within the update request."
            },
            "applyDate": {
                "name": "applyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of when the rules from the update request were applied to the firewall."
            },
            "authorizingUserId": {
                "name": "authorizingUserId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the user that authorized the update request."
            },
            "authorizingUserType": {
                "name": "authorizingUserType",
                "type": "string",
                "form": "local",
                "doc": "The type of user that authorized the update request [EMP or USR]."
            },
            "bypassFlag": {
                "name": "bypassFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating whether the request is for a rule bypass configuration [0 or 1]."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of the creation of the record."
            },
            "firewallContextAccessControlListId": {
                "name": "firewallContextAccessControlListId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the firewall access control list that the rule set is destined for."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the server that the rule set is destined to protect."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the firewall update request."
            },
            "networkComponentFirewallId": {
                "name": "networkComponentFirewallId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the network component firewall that the rule set is destined for."
            },
            "ruleCount": {
                "name": "ruleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the group of rules contained within the update request."
            }
        }
    },
    "SoftLayer_Network_Firewall_Update_Request_Customer": {
        "name": "SoftLayer_Network_Firewall_Update_Request_Customer",
        "base": "SoftLayer_Network_Firewall_Update_Request",
        "noservice": true,
        "typeDoc": "A SoftLayer_Ticket_Update_Customer is a single update made by a customer to a ticket. "
    },
    "SoftLayer_Network_Firewall_Update_Request_Employee": {
        "name": "SoftLayer_Network_Firewall_Update_Request_Employee",
        "base": "SoftLayer_Network_Firewall_Update_Request",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Firewall_Update_Request_Employee data type returns a user object for the SoftLayer employee that created the request. "
    },
    "SoftLayer_Network_Firewall_Update_Request_Rule": {
        "name": "SoftLayer_Network_Firewall_Update_Request_Rule",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_Firewall_Update_Request_Rule service accesses information relating to a SoftLayer network firewall update request rule. This rule is a member of a [[SoftLayer Network Firewall Update Request]]. Use the [[SoftLayer Network Component Firewall]] service to view current rules. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Firewall_Update_Request_Rule",
                "doc": "Create a new firewall update request. The SoftLayer_Network_Firewall_Update_Request object passed to this function must have at least one rule. \n\n''createObject'' returns a Boolean ''true'' on successful object creation or ''false'' if your firewall update request was unable to be created.. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Firewall_Update_Request_Rule",
                        "doc": "The SoftLayer_Network_Firewall_Update_Request_Rule object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Firewall_Update_Request_Rule",
                "doc": "getObject returns a SoftLayer_Network_Firewall_Update_Request_Rule object. You can only get historical objects for servers attached to your account that have a network firewall enabled. createObject inserts a new SoftLayer_Network_Firewall_Update_Request_Rule object. Use the SoftLayer_Network_Firewall_Update_Request to create groups of rules for an update request. ",
                "filterable": true,
                "maskable": true
            },
            "validateRule": {
                "name": "validateRule",
                "type": "void",
                "doc": "Validate the supplied firewall request rule against the object it will apply to. For IPv4 rules, pass in an instance of SoftLayer_Network_Firewall_Update_Request_Rule. for IPv6 rules, pass in an instance of SoftLayer_Network_Firewall_Update_Request_Rule_Version6. The ID of the applied to object can either be applyToComponentId (an ID of a SoftLayer_Network_Component_Firewall) or applyToAclId (an ID of a SoftLayer_Network_Firewall_Module_Context_Interface_AccessControlList). One, and only one, of applyToComponentId and applyToAclId can be specified. \n\nIf validation is successful, nothing is returned. If validation is unsuccessful, an exception is thrown explaining the nature of the validation error. ",
                "static": true,
                "parameters": [
                    {
                        "name": "rule",
                        "type": "SoftLayer_Network_Firewall_Update_Request_Rule",
                        "doc": "The rule to validate"
                    },
                    {
                        "name": "applyToComponentId",
                        "type": "int",
                        "doc": "The ID of a SoftLayer_Network_Component_Firewall this rule will apply to.",
                        "defaultValue": null
                    },
                    {
                        "name": "applyToAclId",
                        "type": "int",
                        "doc": "The ID of a SoftLayer_Network_Firewall_Module_Context_Interface_AccessControlList this rule will apply to.",
                        "defaultValue": null
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_Firewall_Update_Request_Rule type contains information relating to a SoftLayer network firewall update request rule. This rule is a member of a [[SoftLayer Network Firewall Update Request]]. Use the [[SoftLayer Network Component Firewall]] service to view current rules. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. ",
        "properties": {
            "firewallUpdateRequest": {
                "name": "firewallUpdateRequest",
                "type": "SoftLayer_Network_Firewall_Update_Request",
                "form": "relational",
                "doc": "The update request that this rule belongs to."
            },
            "action": {
                "name": "action",
                "type": "string",
                "form": "local",
                "doc": "The action that this update request rule is to take [permit or deny]."
            },
            "destinationIpAddress": {
                "name": "destinationIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The destination IP address considered for determining rule application."
            },
            "destinationIpCidr": {
                "name": "destinationIpCidr",
                "type": "int",
                "form": "local",
                "doc": "The CIDR is used for determining rule application. This value will"
            },
            "destinationIpSubnetMask": {
                "name": "destinationIpSubnetMask",
                "type": "string",
                "form": "local",
                "doc": "The destination IP subnet mask considered for determining rule application."
            },
            "destinationPortRangeEnd": {
                "name": "destinationPortRangeEnd",
                "type": "int",
                "form": "local",
                "doc": "The ending (upper end of range) destination port considered for determining rule application."
            },
            "destinationPortRangeStart": {
                "name": "destinationPortRangeStart",
                "type": "int",
                "form": "local",
                "doc": "The starting (lower end of range) destination port considered for determining rule application."
            },
            "firewallUpdateRequestId": {
                "name": "firewallUpdateRequestId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the firewall update request that a firewall update request rule is associated with."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A Firewall update request rule's internal identifier."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "The notes field for the firewall update request rule."
            },
            "orderValue": {
                "name": "orderValue",
                "type": "int",
                "form": "local",
                "doc": "The numeric value describing the order in which the rule should be applied."
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "The protocol considered for determining rule application."
            },
            "sourceIpAddress": {
                "name": "sourceIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The source IP address considered for determining rule application."
            },
            "sourceIpCidr": {
                "name": "sourceIpCidr",
                "type": "int",
                "form": "local",
                "doc": "The CIDR is used for determining rule application. This value will"
            },
            "sourceIpSubnetMask": {
                "name": "sourceIpSubnetMask",
                "type": "string",
                "form": "local",
                "doc": "The source IP subnet mask considered for determining rule application."
            },
            "version": {
                "name": "version",
                "type": "int",
                "form": "local",
                "doc": "Whether this rule is an IPv4 rule or an IPv6 rule. If"
            }
        }
    },
    "SoftLayer_Network_Firewall_Update_Request_Rule_Version6": {
        "name": "SoftLayer_Network_Firewall_Update_Request_Rule_Version6",
        "base": "SoftLayer_Network_Firewall_Update_Request_Rule",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Firewall_Update_Request_Rule_Version6 type contains information relating to a SoftLayer network firewall update request rule for IPv6. This rule is a member of a [[SoftLayer Network Firewall Update Request]]. Use the [[SoftLayer Network Component Firewall]] service to view current rules. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. "
    },
    "SoftLayer_Network_Gateway": {
        "name": "SoftLayer_Network_Gateway",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A network gateway is a set of members which have a configurable set of VLANs trunked through them. This is helpful for creating proxies. Each network gateway can have a configurable set of hardware and VLANs within the same pod routed to it. Gateways can be bypassed or unbypassed either as a whole or for specific VLANs. They are also provided gateway VLANs for management that are never bypassed. Members cannot be simply removed once attached to a gateway, they must be reclaimed. ",
        "methods": {
            "bypassAllVlans": {
                "name": "bypassAllVlans",
                "type": "void",
                "doc": "Start the asynchronous process to bypass all VLANs. Any VLANs that are already bypassed will be ignored. The status field can be checked for progress. "
            },
            "bypassVlans": {
                "name": "bypassVlans",
                "type": "void",
                "doc": "Start the asynchronous process to bypass the provided VLANs. The VLANs must already be attached. Any VLANs that are already bypassed will be ignored. The status field can be checked for progress. ",
                "parameters": [
                    {
                        "name": "vlans",
                        "type": "SoftLayer_Network_Gateway_Vlan",
                        "typeArray": true
                    }
                ]
            },
            "changeGatewayVersion": {
                "name": "changeGatewayVersion",
                "type": "boolean",
                "doc": "Used to create a transaction to upgrade or rollback the vSRX version for Juniper gateway. \n\n",
                "parameters": [
                    {
                        "name": "versionId",
                        "type": "int",
                        "doc": "Id of upgrade record in SoftLayer_Network_Gateway_VersionUpgrade"
                    },
                    {
                        "name": "rollbackVersion",
                        "type": "boolean",
                        "doc": "[optional] [default false] If true, then rollback version.  If false, then Upgrade version",
                        "defaultValue": false
                    }
                ]
            },
            "checkAccountWhiteList": {
                "name": "checkAccountWhiteList",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int"
                    },
                    {
                        "name": "category",
                        "type": "string"
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Gateway",
                "doc": "Create and return a new gateway. This object can be created with any number of members or VLANs, but they all must be in the same pod. By creating a gateway with members and/or VLANs attached, it is the equivalent of individually calling their createObject methods except this will start a single asynchronous process to setup the gateway. The status of this process can be checked using the status field. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Gateway",
                        "doc": "The SoftLayer_Network_Gateway object that you wish to create."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit this gateway. Currently, the only value that can be edited is the name. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Gateway",
                        "doc": "A skeleton SoftLayer_Network_Gateway object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "forceRebuildvSRXCluster": {
                "name": "forceRebuildvSRXCluster",
                "type": "boolean",
                "doc": "Purpose is to rebuild the target Gateway cluster with the specified OS price id. Method will remove the current OS and apply the default vSRX configuration settings. This will result in an extended OUTAGE!! Any custom configuration settings must be re-applied after the forced rebuild is completed. This is a DESTRUCTIVE action, use with caution. \n\n",
                "parameters": [
                    {
                        "name": "osPriceId",
                        "type": "int",
                        "doc": "Price Id of the OS to use for rebuild"
                    }
                ]
            },
            "getAllowedOsPriceIds": {
                "name": "getAllowedOsPriceIds",
                "type": "int",
                "typeArray": true,
                "doc": "Used to get a list of OS prices (ids) which are allowed for the Gateway. \n\n",
                "parameters": [
                    {
                        "name": "memberId",
                        "type": "int"
                    }
                ]
            },
            "getCapacity": {
                "name": "getCapacity",
                "type": "string",
                "doc": "Returns the Gbps capacity of the gateway object \n\n"
            },
            "getManufacturer": {
                "name": "getManufacturer",
                "type": "string",
                "doc": "Returns manufacturer name for a given gateway object. \n\n",
                "parameters": [
                    {
                        "name": "checkSameOs",
                        "type": "boolean",
                        "defaultValue": false
                    },
                    {
                        "name": "checkOsReloadMember",
                        "type": "boolean",
                        "defaultValue": false
                    }
                ]
            },
            "getMemberGatewayImagesMatch": {
                "name": "getMemberGatewayImagesMatch",
                "type": "boolean",
                "doc": "Returns true if no mismatch is found, gateway is not Juniper vSRX or SA gateway \n\n"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Gateway",
                "filterable": true,
                "maskable": true
            },
            "getPossibleInsideVlans": {
                "name": "getPossibleInsideVlans",
                "type": "SoftLayer_Network_Vlan",
                "typeArray": true,
                "doc": "Get all VLANs that can become inside VLANs on this gateway. This means the VLAN must not already be an inside VLAN, on the same router as this gateway, not a gateway transit VLAN, and not firewalled. ",
                "maskable": true
            },
            "getRollbackSupport": {
                "name": "getRollbackSupport",
                "type": "string",
                "doc": "Returns the following statuses SUPPORTED - rollback is supported and perform automatically UNSUPPORTED - rollback is not supported MANUAL - rollback can be performed but \n\n"
            },
            "getUpgradeItemPrices": {
                "name": "getUpgradeItemPrices",
                "type": "SoftLayer_Product_Item_Price",
                "typeArray": true,
                "doc": "Retrieve a list of upgradable items available for network gateways. ",
                "maskable": true
            },
            "isAccountWhiteListed": {
                "name": "isAccountWhiteListed",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "category",
                        "type": "string"
                    }
                ]
            },
            "isLicenseServerAllowed": {
                "name": "isLicenseServerAllowed",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "licenseKeyName",
                        "type": "string"
                    }
                ]
            },
            "isRollbackAllowed": {
                "name": "isRollbackAllowed",
                "type": "boolean",
                "doc": "Returns true if rollback is allowed. \n\n"
            },
            "rebuildvSRXHACluster": {
                "name": "rebuildvSRXHACluster",
                "type": "boolean",
                "doc": "Rebuild a vSRX gateway with HA cluster by destroying existing vSRX and installing new vSRX on both gateway servers, then creating HA cluster between 2 vSRX. This is a destructive process which will remove existing vSRX configuration and stop all gateway capabilities. vSRX will need to be re-configured after this operation. \n\n"
            },
            "refreshGatewayLicense": {
                "name": "refreshGatewayLicense",
                "type": "boolean",
                "doc": "Used to refresh the license for the Juniper Gateway, requires License readiness check has passed. \n\n"
            },
            "setGatewayPassword": {
                "name": "setGatewayPassword",
                "type": "boolean",
                "doc": "Returns true if password change is successful, false if not successful \n\n",
                "parameters": [
                    {
                        "name": "password",
                        "type": "string"
                    }
                ]
            },
            "unbypassAllVlans": {
                "name": "unbypassAllVlans",
                "type": "void",
                "doc": "Start the asynchronous process to unbypass all VLANs. Any VLANs that are already unbypassed will be ignored. The status field can be checked for progress. "
            },
            "unbypassVlans": {
                "name": "unbypassVlans",
                "type": "void",
                "doc": "Start the asynchronous process to unbypass the provided VLANs. The VLANs must already be attached. Any VLANs that are already unbypassed will be ignored. The status field can be checked for progress. ",
                "parameters": [
                    {
                        "name": "vlans",
                        "type": "SoftLayer_Network_Gateway_Vlan",
                        "typeArray": true
                    }
                ]
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account for this gateway."
            },
            "insideVlans": {
                "name": "insideVlans",
                "type": "SoftLayer_Network_Gateway_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "All VLANs trunked to this gateway."
            },
            "members": {
                "name": "members",
                "type": "SoftLayer_Network_Gateway_Member",
                "form": "relational",
                "typeArray": true,
                "doc": "The members for this gateway."
            },
            "networkFirewall": {
                "name": "networkFirewall",
                "type": "SoftLayer_Network_Vlan_Firewall",
                "form": "relational",
                "doc": "The firewall associated with this gateway, if any."
            },
            "networkFirewallFlag": {
                "name": "networkFirewallFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not there is a firewall associated with this gateway."
            },
            "privateIpAddress": {
                "name": "privateIpAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The private gateway IP address."
            },
            "privateVlan": {
                "name": "privateVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The private VLAN for accessing this gateway."
            },
            "publicIpAddress": {
                "name": "publicIpAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The public gateway IP address."
            },
            "publicIpv6Address": {
                "name": "publicIpv6Address",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The public gateway IPv6 address."
            },
            "publicVlan": {
                "name": "publicVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The public VLAN for accessing this gateway."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Network_Gateway_Status",
                "form": "relational",
                "doc": "The current status of the gateway."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the account assigned to this gateway. "
            },
            "groupNumber": {
                "name": "groupNumber",
                "type": "int",
                "form": "local",
                "doc": "The VRRP group number for this gateway. This is set internally and cannot be provided on create. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A gateway's internal identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A gateway's name. This is required on create and can be no more than 255 characters. "
            },
            "networkSpace": {
                "name": "networkSpace",
                "type": "string",
                "form": "local",
                "doc": "A gateway's network space. Currently, only 'private'  or 'both' is allowed. When this value is 'private', it is a backend gateway only. Otherwise, it is a gateway for both frontend and backend traffic. "
            },
            "privateIpAddressId": {
                "name": "privateIpAddressId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the private IP address for this gateway. "
            },
            "privateVlanId": {
                "name": "privateVlanId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the private VLAN for this gateway. "
            },
            "publicIpAddressId": {
                "name": "publicIpAddressId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the public IP address for this gateway. "
            },
            "publicIpv6AddressId": {
                "name": "publicIpv6AddressId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the public IPv6 address for this gateway. "
            },
            "publicVlanId": {
                "name": "publicVlanId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the public VLAN for this gateway. This is set internally and cannot be provided on create. "
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The current status of this gateway. This is always active unless there is a process running to change the gateway. This can not be set on creation. "
            },
            "insideVlanCount": {
                "name": "insideVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all VLANs trunked to this gateway."
            },
            "memberCount": {
                "name": "memberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the members for this gateway."
            }
        }
    },
    "SoftLayer_Network_Gateway_Member": {
        "name": "SoftLayer_Network_Gateway_Member",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A network gateway member is a device that serves as a gateway. Once the hardware becomes a member of the gateway, only a reclaim can remove it. A reclaim on the last member of the gateway triggers a reclaim of the entire gateway. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Gateway_Member",
                "doc": "Create a new hardware member on the gateway. This also asynchronously sets up the network for this member. Progress of this process can be monitored via the gateway status. All members created with this object must have no VLANs attached. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Gateway_Member",
                        "doc": "The SoftLayer_Network_Gateway_Member object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Network_Gateway_Member",
                "typeArray": true,
                "doc": "Create multiple new hardware members on the gateway. This also asynchronously sets up the network for the members. Progress of this process can be monitored via the gateway status. All members created with this object must have no VLANs attached. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Gateway_Member",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Network_Gateway_Member objects that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Gateway_Member",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Network_Gateway_Member_Attribute",
                "form": "relational",
                "doc": "The attributes for this member."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The device for this member."
            },
            "networkGateway": {
                "name": "networkGateway",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "doc": "The gateway this member belongs to."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the hardware for this member. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A gateway member's internal identifier. "
            },
            "networkGatewayId": {
                "name": "networkGatewayId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the gateway this member belongs to. "
            },
            "priority": {
                "name": "priority",
                "type": "int",
                "form": "local",
                "doc": "The priority for this gateway member. This is set internally and cannot be provided on create. "
            }
        }
    },
    "SoftLayer_Network_Gateway_Member_Attribute": {
        "name": "SoftLayer_Network_Gateway_Member_Attribute",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A network gateway member attribute is the attributes associated with a network gateway member. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Gateway_Member_Attribute",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "gatewayMember": {
                "name": "gatewayMember",
                "type": "SoftLayer_Network_Gateway_Member",
                "form": "relational",
                "doc": "The gateway member has these attributes."
            },
            "sshKey": {
                "name": "sshKey",
                "type": "SoftLayer_Security_Ssh_Key",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A gateway member's internal identifier. "
            },
            "isUpgraded": {
                "name": "isUpgraded",
                "type": "int",
                "form": "local",
                "doc": "Indicates if the member has been upgraded. "
            },
            "lastvSRXVersion": {
                "name": "lastvSRXVersion",
                "type": "string",
                "form": "local",
                "doc": "The previous vSRX version of the gateway software "
            },
            "licenseExpirationDate": {
                "name": "licenseExpirationDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp for the expiration date of the license key "
            },
            "licenseKey": {
                "name": "licenseKey",
                "type": "string",
                "form": "local"
            },
            "memberId": {
                "name": "memberId",
                "type": "int",
                "form": "local",
                "doc": "The gateway member for this attribute. "
            },
            "networkModel": {
                "name": "networkModel",
                "type": "string",
                "form": "local",
                "doc": "Network model of the gateway."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "Password of the user name."
            },
            "sshKeyId": {
                "name": "sshKeyId",
                "type": "int",
                "form": "local",
                "doc": "The SSH key id of key assigned to Gateway. "
            },
            "upgradedDate": {
                "name": "upgradedDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp when this gateway member was last upgraded "
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "Username associated with the gateway."
            },
            "vSRXVersion": {
                "name": "vSRXVersion",
                "type": "string",
                "form": "local",
                "doc": "The vSRX version of the gateway software "
            }
        }
    },
    "SoftLayer_Network_Gateway_Precheck": {
        "name": "SoftLayer_Network_Gateway_Precheck",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A network gateway precheck is the precheck codes for member(s) of a gateway ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Gateway_Precheck",
                "filterable": true,
                "maskable": true
            },
            "getPrecheckStatus": {
                "name": "getPrecheckStatus",
                "type": "SoftLayer_Network_Gateway_Precheck",
                "typeArray": true,
                "doc": "Get the precheck status for all Juniper Gateway Action categories which require a readiness check before executing. Reference cloud.ibm.com documentation for more details. \n\nPossible precheck readiness values include: \n\nReady (0): The member or Gateway category is ready. The only state that will be allowed to execute the Action. Not Ready (1): The member or Gateway category is not ready. This could occur because of several reasons. Either a precheck error occur, or the precheck has not run within the precheck timeout window. Check the returnCode for details on the specific error. Reference the cloud.ibm.com documentation for recovery details. Running (2): The precheck is currently running with no errors. Incomplete (3): The other member in the Gateway failed, therefore the current member could not complete it's precheck. Unsupported (4): The category is unsupported for the given member or Gateway. Expired (5) : The precheck record has expired so will need to be run again. Unchecked (6) : The precheck for the category has never been run. Current (7) : The gateway state is current so running precheck is not required.  This commonly relates to version upgrade if gateway is in most update version. \n\nReturn Values: Array of objects \n\nObject Definition: \n\ncategory : String : The precheck category which corresponds to one or more executeable actions. \n\nCurrent categories include: upgrade_precheck : Required for major and minor upgrade version actions. license_precheck : Required for license upgrade and downgrade actions. reload_precheck : Required for OS Reload action. rollback_precheck : Optional and related to upgrade_precheck.  Only returned if getRollbackPrecheck is provided and set to True (1). \n\n\n\nmemberId : Integer : The softlayer member id. memberReadinessValue : String : The precheck readiness state for the member. See possible readiness values above. gatewayReadinessValue : String : The precheck readiness state for the gateway : See possible readiness values above. returnCode : Integer : The return code. 0 if no error. Reference cloud.ibm.com documentation for details. \n\n",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "gatewayId",
                        "type": "int",
                        "doc": "Id of Gateway for the precheck request."
                    },
                    {
                        "name": "getRollbackPrecheck",
                        "type": "boolean",
                        "doc": "[optional] [default false] If true, then rollback precheck will be included in returned data.",
                        "defaultValue": false
                    }
                ]
            },
            "licenseManagementPrecheck": {
                "name": "licenseManagementPrecheck",
                "type": "boolean",
                "doc": "Used to create a License Management Network Gateway Precheck transaction. \n\n",
                "static": true,
                "parameters": [
                    {
                        "name": "gatewayId",
                        "type": "int"
                    }
                ]
            },
            "osReloadPrecheck": {
                "name": "osReloadPrecheck",
                "type": "boolean",
                "doc": "Create an OS Reload Network Gateway Precheck transaction. \n\n",
                "static": true,
                "parameters": [
                    {
                        "name": "gatewayId",
                        "type": "int"
                    }
                ]
            },
            "upgradePrecheck": {
                "name": "upgradePrecheck",
                "type": "boolean",
                "doc": "Create a Upgrade Network Gateway Precheck transaction. \n\n",
                "static": true,
                "parameters": [
                    {
                        "name": "gatewayId",
                        "type": "int"
                    }
                ]
            }
        },
        "properties": {
            "category": {
                "name": "category",
                "type": "string",
                "form": "local",
                "doc": "Category name "
            },
            "gatewayReadinessValue": {
                "name": "gatewayReadinessValue",
                "type": "string",
                "form": "local",
                "doc": "Gateway precheck status "
            },
            "memberId": {
                "name": "memberId",
                "type": "int",
                "form": "local",
                "doc": "The gateway member for this precheck. "
            },
            "memberReadinessValue": {
                "name": "memberReadinessValue",
                "type": "string",
                "form": "local",
                "doc": "Gateway precheck status "
            },
            "returnCode": {
                "name": "returnCode",
                "type": "int",
                "form": "local",
                "doc": "The precheck error status of the member "
            }
        }
    },
    "SoftLayer_Network_Gateway_Status": {
        "name": "SoftLayer_Network_Gateway_Status",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A network gateway status is a value representing the state of a network gateway. The possible values are \"ACTIVE\" for when the gateway is ready for normal use and \"UPDATING\" for when the gateway is being updated. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Gateway_Status",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A gateway status's description. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A gateway status's internal identifier. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A gateway status's programmatic name. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A gateway status's human-friendly name. "
            }
        }
    },
    "SoftLayer_Network_Gateway_VersionUpgrade": {
        "name": "SoftLayer_Network_Gateway_VersionUpgrade",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A gateway software version upgrade reference provides pairing for possible upgrades from a given versin. ",
        "methods": {
            "getAllByUpgradePkgUrlId": {
                "name": "getAllByUpgradePkgUrlId",
                "type": "SoftLayer_Network_Gateway_VersionUpgrade",
                "typeArray": true,
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "upgradePkgUrlId",
                        "type": "int",
                        "doc": "- upgradePkgUrlId to search for matching records."
                    }
                ]
            },
            "getAllUpgradesByGatewayId": {
                "name": "getAllUpgradesByGatewayId",
                "type": "SoftLayer_Network_Gateway_VersionUpgrade",
                "typeArray": true,
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "gatewayId",
                        "type": "int"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Gateway_VersionUpgrade",
                "filterable": true,
                "maskable": true
            },
            "getVsrxOrdersAllowedOS": {
                "name": "getVsrxOrdersAllowedOS",
                "type": "SoftLayer_Product_Package_Item_Prices",
                "typeArray": true,
                "doc": "Used to get a list per package of prices ids for allowed vSRX OS-es for new orders. \n\n",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int"
                    },
                    {
                        "name": "validate",
                        "type": "boolean"
                    }
                ]
            },
            "validateVersionChange": {
                "name": "validateVersionChange",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "gatewayId",
                        "type": "int",
                        "doc": "- id of gateway having version change"
                    },
                    {
                        "name": "versionUpgradeId",
                        "type": "int",
                        "doc": "-  id of VersionUpgrade record to use."
                    }
                ]
            }
        },
        "properties": {
            "fromVersion": {
                "name": "fromVersion",
                "type": "string",
                "form": "local",
                "doc": "Gateway version being upgraded from. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A gateway status's internal identifier. "
            },
            "osReloadRequired": {
                "name": "osReloadRequired",
                "type": "int",
                "form": "local",
                "doc": "Is OS Reload required after version upgrade?. "
            },
            "toVersion": {
                "name": "toVersion",
                "type": "string",
                "form": "local",
                "doc": "Gateway version available for upgrade. "
            }
        }
    },
    "SoftLayer_Network_Gateway_Vlan": {
        "name": "SoftLayer_Network_Gateway_Vlan",
        "base": "SoftLayer_Entity",
        "serviceDoc": "An inside VLAN is a VLAN which is attached to a network gateway and can be routed or bypassed. ",
        "methods": {
            "bypass": {
                "name": "bypass",
                "type": "void",
                "doc": "Start the asynchronous process to bypass/unroute the VLAN from this gateway. "
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Gateway_Vlan",
                "doc": "Create a new VLAN attachment. If the bypassFlag is false, this will also create an asynchronous process to route the VLAN through the gateway. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Gateway_Vlan",
                        "doc": "The SoftLayer_Network_Gateway_Vlan object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Network_Gateway_Vlan",
                "typeArray": true,
                "doc": "Create multiple new VLAN attachments. If the bypassFlag is false, this will also create an asynchronous process to route the VLANs through the gateway. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Gateway_Vlan",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Network_Gateway_Vlan objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "void",
                "doc": "Start the asynchronous process to detach this VLANs from the gateway. "
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Detach several VLANs. This will not detach them right away, but rather start an asynchronous process to detach. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Gateway_Vlan",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Network_Gateway_Vlan objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Gateway_Vlan",
                "filterable": true,
                "maskable": true
            },
            "unbypass": {
                "name": "unbypass",
                "type": "void",
                "doc": "Start the asynchronous process to route the VLAN to this gateway. "
            }
        },
        "properties": {
            "networkGateway": {
                "name": "networkGateway",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "doc": "The gateway this VLAN is attached to."
            },
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The network VLAN record."
            },
            "bypassFlag": {
                "name": "bypassFlag",
                "type": "boolean",
                "form": "local",
                "doc": "If true, this VLAN is bypassed. If false, it is routed through the gateway. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A gateway VLAN's internal identifier. "
            },
            "networkGatewayId": {
                "name": "networkGatewayId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the gateway this VLAN is attached to. "
            },
            "networkVlanId": {
                "name": "networkVlanId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the network VLAN. "
            }
        }
    },
    "SoftLayer_Network_Interconnect_Tenant": {
        "name": "SoftLayer_Network_Interconnect_Tenant",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A network interconnect tenant defines an IP routing path through a network interconnect. Each network interconnect requires a single primary tenant, indicated by the primaryFlag ",
        "methods": {
            "allowDeleteConnection": {
                "name": "allowDeleteConnection",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "serviceKey",
                        "type": "string"
                    }
                ]
            },
            "createConnection": {
                "name": "createConnection",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Interconnect_Tenant"
                    }
                ]
            },
            "deleteConnection": {
                "name": "deleteConnection",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "receivedObject",
                        "type": "SoftLayer_Network_Interconnect_Tenant"
                    }
                ]
            },
            "editConnection": {
                "name": "editConnection",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "receivedObject",
                        "type": "SoftLayer_Network_Interconnect_Tenant"
                    }
                ]
            },
            "getAllConnections": {
                "name": "getAllConnections",
                "type": "string",
                "static": true
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Interconnect_Tenant",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getAllPortLabelsWithCurrentUsage": {
                "name": "getAllPortLabelsWithCurrentUsage",
                "type": "string",
                "typeArray": true,
                "static": true,
                "parameters": [
                    {
                        "name": "directLinkLocationId",
                        "type": "int"
                    }
                ]
            },
            "getBgpIpRange": {
                "name": "getBgpIpRange",
                "type": "string",
                "static": true
            },
            "getConnection": {
                "name": "getConnection",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "serviceKey",
                        "type": "string"
                    },
                    {
                        "name": "provider",
                        "type": "string"
                    }
                ]
            },
            "getDirectLinkSpeeds": {
                "name": "getDirectLinkSpeeds",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "offeringType",
                        "type": "string"
                    }
                ]
            },
            "getNetworkZones": {
                "name": "getNetworkZones",
                "type": "string",
                "typeArray": true,
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Interconnect_Tenant",
                "filterable": true,
                "maskable": true
            },
            "getPorts": {
                "name": "getPorts",
                "type": "string",
                "static": true,
                "parameters": [
                    {
                        "name": "provider",
                        "type": "string"
                    }
                ]
            },
            "isAdnAccount": {
                "name": "isAdnAccount",
                "type": "boolean",
                "static": true
            },
            "rejectApprovalRequests": {
                "name": "rejectApprovalRequests",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "serviceKey",
                        "type": "string"
                    }
                ]
            },
            "updateConnectionStatus": {
                "name": "updateConnectionStatus",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "tenantId",
                        "type": "int"
                    }
                ]
            }
        },
        "properties": {
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item_Network_Interconnect",
                "form": "relational",
                "doc": "The active billing item for a network interconnect."
            },
            "datacenterName": {
                "name": "datacenterName",
                "type": "string",
                "form": "relational"
            },
            "portLabel": {
                "name": "portLabel",
                "type": "string",
                "form": "relational"
            },
            "serviceType": {
                "name": "serviceType",
                "type": "SoftLayer_Network_DirectLink_ServiceType",
                "form": "relational"
            },
            "vendorName": {
                "name": "vendorName",
                "type": "string",
                "form": "relational"
            },
            "zoneName": {
                "name": "zoneName",
                "type": "string",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "bgpAsn": {
                "name": "bgpAsn",
                "type": "int",
                "form": "local",
                "doc": "Specifies ASN used for BGP."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "errorMessage": {
                "name": "errorMessage",
                "type": "string",
                "form": "local"
            },
            "globalRoutingFlag": {
                "name": "globalRoutingFlag",
                "type": "boolean",
                "form": "local",
                "doc": "The Direct Link connectivity to all SoftLayer data centers if globalRoutingFlag = 1 and local connectivity if globalRoutingFlag = 0. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "interconnectType": {
                "name": "interconnectType",
                "type": "string",
                "form": "local"
            },
            "linkSpeed": {
                "name": "linkSpeed",
                "type": "int",
                "form": "local",
                "doc": "Link speed of a Direct Link connection."
            },
            "localIpAddress": {
                "name": "localIpAddress",
                "type": "string",
                "form": "local",
                "doc": "IP address (v4 or v6) of \"near\" router serial interface. No check/update of IP Address table. "
            },
            "location": {
                "name": "location",
                "type": "string",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Specifies the Interconnect connection name."
            },
            "newGlobalRoutingFlag": {
                "name": "newGlobalRoutingFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Direct Link provider can request change to existing routing, Customer can approve the change. newGlobalRoutingFlag = 1 gives connectivity to all IBM data centers, and if newGlobalRoutingFlag = 0, it gives local connectivity. "
            },
            "newLinkSpeed": {
                "name": "newLinkSpeed",
                "type": "int",
                "form": "local",
                "doc": "Updated Link speed of a Direct Link connection."
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local",
                "doc": "This field will have the ticket id if the tenant workflow fails "
            },
            "peerLinkSpeed": {
                "name": "peerLinkSpeed",
                "type": "int",
                "form": "local",
                "doc": "Link speed of a Direct Link connection on Equinix Side."
            },
            "port": {
                "name": "port",
                "type": "string",
                "form": "local"
            },
            "provider": {
                "name": "provider",
                "type": "string",
                "form": "local"
            },
            "providerAccountId": {
                "name": "providerAccountId",
                "type": "int",
                "form": "local"
            },
            "redundancyFlag": {
                "name": "redundancyFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Specifies redundant connection is available if 1."
            },
            "remoteIpAddress": {
                "name": "remoteIpAddress",
                "type": "string",
                "form": "local"
            },
            "serviceKey": {
                "name": "serviceKey",
                "type": "string",
                "form": "local",
                "doc": "Service key for Interconnect connection."
            },
            "serviceTypeId": {
                "name": "serviceTypeId",
                "type": "int",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "The direct link connection status. IN_PROGRESS, PROVISIONING, CONNECTION_UP, CONNECTION_DOWN "
            },
            "vlanId": {
                "name": "vlanId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_LBaaS_HealthMonitor": {
        "name": "SoftLayer_Network_LBaaS_HealthMonitor",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LBaaS_HealthMonitor",
                "filterable": true,
                "maskable": true
            },
            "updateLoadBalancerHealthMonitors": {
                "name": "updateLoadBalancerHealthMonitors",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Update load balancers health monitor and return load balancer object with listeners (frontend), pools (backend), health monitor server instances (members) and datacenter populated ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string"
                    },
                    {
                        "name": "healthMonitorConfigurations",
                        "type": "SoftLayer_Network_LBaaS_LoadBalancerHealthMonitorConfiguration",
                        "typeArray": true
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_LBaaS_HealthMonitor type presents a structure containing attributes of a health monitor object associated with load balancer instance. Note that the relationship between backend (pool) and health monitor is N-to-1, especially that the pools object associated with a health monitor must have the same pair of protocol and port. Example: frontend FA: http, 80   - backend BA: tcp, 3456 - healthmonitor HM_tcp3456 frontend FB: https, 443 - backend BB: tcp, 3456 - healthmonitor HM_tcp3456 In above example both backends BA and BB share the same healthmonitor HM_tcp3456 ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Create date of the health monitor instance"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Health monitor's identifier"
            },
            "interval": {
                "name": "interval",
                "type": "int",
                "form": "local",
                "doc": "Interval in seconds to perform health check"
            },
            "maxRetries": {
                "name": "maxRetries",
                "type": "int",
                "form": "local",
                "doc": "Maximum number of health check retries in case of failure"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Modify date of the health monitor instance"
            },
            "monitorType": {
                "name": "monitorType",
                "type": "string",
                "form": "local",
                "doc": "Type of health check, valid values are \"TCP\", \"HTTP\" and \"HTTPS\""
            },
            "provisioningStatus": {
                "name": "provisioningStatus",
                "type": "string",
                "form": "local",
                "doc": "Provisioning status of the health monitor, supported values are \"CREATE_PENDING\","
            },
            "timeout": {
                "name": "timeout",
                "type": "int",
                "form": "local",
                "doc": "Timeout in seconds to wait for health checks response"
            },
            "urlPath": {
                "name": "urlPath",
                "type": "string",
                "form": "local",
                "doc": "If monitorType is \"HTTP\" this specifies the whole URL path"
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "Health monitor's UUID"
            }
        }
    },
    "SoftLayer_Network_LBaaS_L7HealthMonitor": {
        "name": "SoftLayer_Network_LBaaS_L7HealthMonitor",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_LBaaS_L7HealthMonitor type presents a structure containing attributes of a health monitor object associated with a L7 pool instance. Note that the relationship between backend (L7 pool) and health monitor is 1-to-1, pools object associated with a health monitor must have the same pair of protocol and port. Example: frontend FA: http, 80   - backend BA: http, 3456 - healthmonitor HM_http3456 frontend FB: https, 443 - backend BB: http, 3456 - healthmonitor HM_http3456 \n\n\n\n",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "interval": {
                "name": "interval",
                "type": "int",
                "form": "local"
            },
            "maxRetries": {
                "name": "maxRetries",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "monitorType": {
                "name": "monitorType",
                "type": "string",
                "form": "local"
            },
            "provisioningStatus": {
                "name": "provisioningStatus",
                "type": "string",
                "form": "local"
            },
            "timeout": {
                "name": "timeout",
                "type": "int",
                "form": "local"
            },
            "urlPath": {
                "name": "urlPath",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_LBaaS_L7Member": {
        "name": "SoftLayer_Network_LBaaS_L7Member",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_LBaaS_L7Member service allows consumers to manage (backend) members for L7 pools. A load balancer may have one or more L7 backend pools. A member can be added to one or more L7 backend pools. Deleting a backend member from one L7 pool will not remove it from other L7 pools to which it is associated. Weight of the backend member is a value between 1 and 256 but only applicable when the load balancing method configured is \"Weighted Round Robin\". ",
        "methods": {
            "addL7PoolMembers": {
                "name": "addL7PoolMembers",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Add server instances as members to a L7pool and return the LoadBalancer Object with listeners, pools and members populated ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "l7PoolUuid",
                        "type": "string"
                    },
                    {
                        "name": "memberInstances",
                        "type": "SoftLayer_Network_LBaaS_L7Member",
                        "typeArray": true
                    }
                ]
            },
            "deleteL7PoolMembers": {
                "name": "deleteL7PoolMembers",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Delete given members from load balancer and return load balancer object with listeners, pools and members populated ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "l7PoolUuid",
                        "type": "string"
                    },
                    {
                        "name": "memberUuids",
                        "type": "string",
                        "typeArray": true
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LBaaS_L7Member",
                "filterable": true,
                "maskable": true
            },
            "updateL7PoolMembers": {
                "name": "updateL7PoolMembers",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Update L7 members weight and port. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "l7PoolUuid",
                        "type": "string"
                    },
                    {
                        "name": "members",
                        "type": "SoftLayer_Network_LBaaS_L7Member",
                        "typeArray": true
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_LBaaS_L7Member represents the backend member for a L7 pool. It can be either a virtual server or a bare metal machine. ",
        "properties": {
            "address": {
                "name": "address",
                "type": "string",
                "form": "local",
                "doc": "The IP address of a L7 pool member."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "<<< EOT Specifies when a L7 pool member"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The ID of a L7 pool member."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "<<< EOT Specifies when a L7 Pool"
            },
            "port": {
                "name": "port",
                "type": "int",
                "form": "local",
                "doc": "Backends protocol port"
            },
            "provisioningStatus": {
                "name": "provisioningStatus",
                "type": "string",
                "form": "local",
                "doc": "<<< EOT The provisioning status of a L7 pool member."
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "The UUID of a L7 pool member."
            },
            "weight": {
                "name": "weight",
                "type": "int",
                "form": "local",
                "doc": "The weight of a L7 pool member."
            }
        }
    },
    "SoftLayer_Network_LBaaS_L7Policy": {
        "name": "SoftLayer_Network_LBaaS_L7Policy",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_LBaaS_L7Policy service allows consumers to manage the Policies associated with a Listener. A Listener can have multiple policies. Polices are associated with priorities. The priorities indicate the order in which policies are evaluated. Each policy is configured with an action which is applied when http traffic matches rules associated with the policy. A policy can be configured with one of the following actions: redirect to pool, redirect to url, or reject. Policies configured with reject are always evaluated first irrespective of the priority followed by redirect to url, after which policies with action set to redirect to pool are evaluated. if policies are configured with redirect to https and reject also, then reject always evaluated first. Polices have multiple rules, each rule is evaluated to true or false. If all the rules of the policy evaluate to true then the action associated with that policy is applied to the request. ",
        "methods": {
            "addL7Policies": {
                "name": "addL7Policies",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "This function creates multiple policies with rules for the given listener. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "listenerUuid",
                        "type": "string"
                    },
                    {
                        "name": "policiesRules",
                        "type": "SoftLayer_Network_LBaaS_PolicyRule",
                        "typeArray": true
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Deletes a l7 policy instance and the rules associated with the policy ",
                "maskable": true
            },
            "editObject": {
                "name": "editObject",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Edit a l7 policy instance's properties ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_LBaaS_L7Policy",
                        "doc": "A skeleton SoftLayer_Network_LBaaS_L7Policy object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LBaaS_L7Policy",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_LBaaS_L7Policy represents the policy for a listener. ",
        "properties": {
            "l7Rules": {
                "name": "l7Rules",
                "type": "SoftLayer_Network_LBaaS_L7Rule",
                "form": "relational",
                "typeArray": true
            },
            "action": {
                "name": "action",
                "type": "string",
                "form": "local",
                "doc": "The Action to take if the rules belonging to this policy match. It can be set to any of the following values: REDIRECT_URL, REDIRECT_POOL, REDIRECT_HTTPS, REJECT. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when a L7 Policy was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a policy."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when a L7 Policy was updated previously."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of a Policy."
            },
            "priority": {
                "name": "priority",
                "type": "int",
                "form": "local",
                "doc": "The order in which the policy is evaluated. Each policy should have a unique priority "
            },
            "redirectL7PoolId": {
                "name": "redirectL7PoolId",
                "type": "int",
                "form": "local",
                "doc": "The L7 pool id to which traffic is redirected "
            },
            "redirectL7PoolUuid": {
                "name": "redirectL7PoolUuid",
                "type": "string",
                "form": "local",
                "doc": "The UUID of the L7 pool object referenced by the policy when the policy action is set to REDIRECT_POOL "
            },
            "redirectUrl": {
                "name": "redirectUrl",
                "type": "string",
                "form": "local",
                "doc": "The URL to which traffic is redirected when the action is set to REDIRECT_URL. Or the port to which listener traffic is redirected to when the action is set to REDIRECT_HTTPS. "
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "The UUID of a Policy."
            },
            "l7RuleCount": {
                "name": "l7RuleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_LBaaS_L7Pool": {
        "name": "SoftLayer_Network_LBaaS_L7Pool",
        "base": "SoftLayer_Entity",
        "methods": {
            "createL7Pool": {
                "name": "createL7Pool",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Create a backend to be used for L7 load balancing. This L7 pool has backend protocol, L7 members, L7 health monitor and session affinity. L7 pool is associated with L7 policies. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string"
                    },
                    {
                        "name": "l7Pool",
                        "type": "SoftLayer_Network_LBaaS_L7Pool"
                    },
                    {
                        "name": "l7Members",
                        "type": "SoftLayer_Network_LBaaS_L7Member",
                        "typeArray": true
                    },
                    {
                        "name": "l7HealthMonitor",
                        "type": "SoftLayer_Network_LBaaS_L7HealthMonitor"
                    },
                    {
                        "name": "l7SessionAffinity",
                        "type": "SoftLayer_Network_LBaaS_L7SessionAffinity"
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Deletes an existing L7 pool along with L7 members, L7 health monitor, and L7 session affinity. ",
                "maskable": true
            },
            "getL7PoolMemberHealth": {
                "name": "getL7PoolMemberHealth",
                "type": "SoftLayer_Network_LBaaS_L7PoolMembersHealth",
                "typeArray": true,
                "doc": "Returns the health of all L7 pool's members which are created under load balancer. L7 members health status is available only after a L7 pool is associated with the L7 policy and that L7 policy has at least one L7 rule. ",
                "static": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LBaaS_L7Pool",
                "filterable": true,
                "maskable": true
            },
            "updateL7Pool": {
                "name": "updateL7Pool",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Updates an existing L7 pool, L7 health monitor and L7 session affinity. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "l7PoolUuid",
                        "type": "string"
                    },
                    {
                        "name": "l7Pool",
                        "type": "SoftLayer_Network_LBaaS_L7Pool",
                        "defaultValue": null
                    },
                    {
                        "name": "l7HealthMonitor",
                        "type": "SoftLayer_Network_LBaaS_L7HealthMonitor",
                        "defaultValue": null
                    },
                    {
                        "name": "l7SessionAffinity",
                        "type": "SoftLayer_Network_LBaaS_L7SessionAffinity",
                        "defaultValue": null
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_LBaaS_L7Pool type presents a structure containing attributes of a load balancer's L7 pool such as the protocol, and the load balancing algorithm used. L7 pool is used for redirect_pool action of the L7 policy and is different from the default pool ",
        "properties": {
            "l7HealthMonitor": {
                "name": "l7HealthMonitor",
                "type": "SoftLayer_Network_LBaaS_L7HealthMonitor",
                "form": "relational"
            },
            "l7Members": {
                "name": "l7Members",
                "type": "SoftLayer_Network_LBaaS_L7Member",
                "form": "relational",
                "typeArray": true
            },
            "l7Policies": {
                "name": "l7Policies",
                "type": "SoftLayer_Network_LBaaS_L7Policy",
                "form": "relational",
                "typeArray": true
            },
            "l7SessionAffinity": {
                "name": "l7SessionAffinity",
                "type": "SoftLayer_Network_LBaaS_L7SessionAffinity",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Create date of the L7 pool instance"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "loadBalancingAlgorithm": {
                "name": "loadBalancingAlgorithm",
                "type": "string",
                "form": "local",
                "doc": "Load balancing algorithm: \"ROUNDROBIN\", \"WEIGHTED_RR\", \"LEASTCONNECTION\""
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Last updated date of the L7 pool"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of the L7 pool."
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "Backends protocol, supported protocol is, \"HTTP\""
            },
            "provisioningStatus": {
                "name": "provisioningStatus",
                "type": "string",
                "form": "local",
                "doc": "Provisioning status of a load balancer's L7 pool."
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "Instance uuid of the L7 pool"
            },
            "l7MemberCount": {
                "name": "l7MemberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "l7PolicyCount": {
                "name": "l7PolicyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_LBaaS_L7PoolMembersHealth": {
        "name": "SoftLayer_Network_LBaaS_L7PoolMembersHealth",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_L7PoolMembersHealth provides statistics of members belonging to a particular L7 pool. ",
        "properties": {
            "l7PoolUuid": {
                "name": "l7PoolUuid",
                "type": "string",
                "form": "local",
                "doc": "Instance uuid of the L7 pool"
            },
            "membersHealth": {
                "name": "membersHealth",
                "type": "SoftLayer_Network_LBaaS_MemberHealth",
                "form": "local",
                "typeArray": true,
                "doc": "Members statistics of the L7 pool"
            }
        }
    },
    "SoftLayer_Network_LBaaS_L7Rule": {
        "name": "SoftLayer_Network_LBaaS_L7Rule",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_LBaaS_L7Rule service allows consumers to manage the Rules associated with a Policy.Polices have multiple rules, each rule is evaluated to true or false. If all the rules of the policies are evaluated to true then action of that policy will be applied to the request. Rules have types, which can be HOST_NAME, FILE_TYPE, HEADER, COOKIE, PATH and rules also have a comparison type which indicates how how rules are evaluated. Rules can have following comparison types: REGEX, STARTS_WITH, ENDS_WITH, CONTAINS, and EQUAL_TO. ",
        "methods": {
            "addL7Rules": {
                "name": "addL7Rules",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "This function creates and adds multiple Rules to a given L7 policy with all the details provided for rules ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "policyUuid",
                        "type": "string"
                    },
                    {
                        "name": "rules",
                        "type": "SoftLayer_Network_LBaaS_L7Rule",
                        "typeArray": true
                    }
                ]
            },
            "deleteL7Rules": {
                "name": "deleteL7Rules",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "This function deletes multiple rules aassociated with the same policy. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "policyUuid",
                        "type": "string"
                    },
                    {
                        "name": "ruleUuids",
                        "type": "string",
                        "typeArray": true
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LBaaS_L7Rule",
                "filterable": true,
                "maskable": true
            },
            "updateL7Rules": {
                "name": "updateL7Rules",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "This function updates multiple Rules to a given policy with all the details for rules. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "policyUuid",
                        "type": "string"
                    },
                    {
                        "name": "rules",
                        "type": "SoftLayer_Network_LBaaS_L7Rule",
                        "typeArray": true
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_LBaaS_L7Rule represents the Rules that can be attached to a a L7 policy. ",
        "properties": {
            "comparisonType": {
                "name": "comparisonType",
                "type": "string",
                "form": "local",
                "doc": "Comparision type for the Rule, It should any of the following values : REGEX, STARTS_WITH, ENDS_WITH, CONTAINS, EQUAL_TO. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when a Rule was created"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The ID of a Rule."
            },
            "invert": {
                "name": "invert",
                "type": "int",
                "form": "local",
                "doc": "Inverts the result of the value if set, i.e. True will be inverted to False and vice-versa "
            },
            "key": {
                "name": "key",
                "type": "string",
                "form": "local",
                "doc": "Key for Rule type HEADER and COOKIE."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when a Rule was updated previously."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "Type of the Rule. It  should have any of the following values: HOST_NAME, FILE_TYPE, HEADER, COOKIE, PATH. "
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "The UUID of a Rule."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "Value for Rule . For type HEADER and COOKIE, this value is compared against the value of the key from HEADER or COOKIE. "
            }
        }
    },
    "SoftLayer_Network_LBaaS_L7SessionAffinity": {
        "name": "SoftLayer_Network_LBaaS_L7SessionAffinity",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_L7SessionAffinity represents the session affinity, aka session persistence, configuration for a load balancer backend L7 pool. ",
        "properties": {
            "l7Pool": {
                "name": "l7Pool",
                "type": "SoftLayer_Network_LBaaS_L7Pool",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "Type of the session persistence"
            }
        }
    },
    "SoftLayer_Network_LBaaS_Listener": {
        "name": "SoftLayer_Network_LBaaS_Listener",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_LBaaS_Listener API service allows consumers to add, edit and delete load balancers protocols for front- and backends. In order to retrieve list of front- and backends protocols please refer to [[SoftLayer_Network_LBaaS_LoadBalancer]] service. A listener object specifies the protocol and port of allowed incoming network requests and the maximum number of accepted connections. It has references to its associated load balancer and default pool object. ",
        "methods": {
            "deleteLoadBalancerProtocols": {
                "name": "deleteLoadBalancerProtocols",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Delete load balancers front- and backend protocols and return load balancer object with listeners (frontend), pools (backend), server instances (members) and datacenter populated. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string",
                        "doc": "$loadBalancerUuid"
                    },
                    {
                        "name": "listenerUuids",
                        "type": "string",
                        "typeArray": true
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LBaaS_Listener",
                "filterable": true,
                "maskable": true
            },
            "updateLoadBalancerProtocols": {
                "name": "updateLoadBalancerProtocols",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Update (create) load balancers front- and backend protocols and return load balancer object with listeners (frontend), pools (backend), server instances (members) and datacenter populated. Note if a protocolConfiguration has no listenerUuid set, this function will create the specified front- and backend accordingly. Otherwise the given front- and backend will be updated with the new protocol and port. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string"
                    },
                    {
                        "name": "protocolConfigurations",
                        "type": "SoftLayer_Network_LBaaS_LoadBalancerProtocolConfiguration",
                        "typeArray": true
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_LBaaS_Listener type presents a data structure for a load balancers listener, also called frontend. ",
        "properties": {
            "defaultPool": {
                "name": "defaultPool",
                "type": "SoftLayer_Network_LBaaS_Pool",
                "form": "relational"
            },
            "l7Policies": {
                "name": "l7Policies",
                "type": "SoftLayer_Network_LBaaS_L7Policy",
                "form": "relational",
                "typeArray": true
            },
            "clientTimeout": {
                "name": "clientTimeout",
                "type": "int",
                "form": "local",
                "doc": "maximum idle time in seconds(Range: 1 to 7200), after which the load balancer brings down the"
            },
            "connectionLimit": {
                "name": "connectionLimit",
                "type": "int",
                "form": "local",
                "doc": "Limit of connections a listener can accept"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when the listener was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when the listener was updated previously."
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "Listeners protocol, one of \"TCP\", \"HTTP\", \"HTTPS\"."
            },
            "protocolPort": {
                "name": "protocolPort",
                "type": "int",
                "form": "local",
                "doc": "Listeners protocol port number."
            },
            "provisioningStatus": {
                "name": "provisioningStatus",
                "type": "string",
                "form": "local",
                "doc": "The provisioning status of listener."
            },
            "serverTimeout": {
                "name": "serverTimeout",
                "type": "int",
                "form": "local",
                "doc": "maximum idle time in seconds(Range: 1 to 7200), after which the load balancer brings down the"
            },
            "tlsCertificateId": {
                "name": "tlsCertificateId",
                "type": "int",
                "form": "local",
                "doc": "This references to SSL/TLS certificate (optional) for a listener"
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "The UUID of a listener."
            },
            "l7PolicyCount": {
                "name": "l7PolicyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_LBaaS_LoadBalancer": {
        "name": "SoftLayer_Network_LBaaS_LoadBalancer",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_LBaaS_LoadBalancer service allows customers to create, edit, delete, get details of a load balancer instance and retrieve all existing load balancer instances. The most common use case of a load balancer instance is to improve performance and high availability of customers application services by distributing the incoming requests across multiple servers. Thus, clients using customers application services will only need to know the load balancer instances host name respective IP address in order to submit their requests. Note that SoftLayer_Network_LBaaS_LoadBalancer provides the load balancing functionality only, while it is customers responsibility to implement their application services and deploy them to respective servers, typically virtual servers or bare metal systems hosted by IBM SoftLayer. Conceptually a load balancer instance consists of a set of listeners, also called frontends, pools, also called backends, and members (application servers). A listener (frontend) represents basically the network protocol and port for requests coming from clients applications and is always associated with a pool (backend) defined by a network protocol, port and load balancing algorithm. The pools network protocol and port specify how incoming requests will be forwarded to application servers, while the load balancing algorithm (round-robin, weighted round-robin or least connections) determines the distribution scheme of incoming requests among the members, ie application servers. Note that members of a load balancer instance are assigned implicitly to all pools (backends) of that load balancer. ",
        "methods": {
            "cancelLoadBalancer": {
                "name": "cancelLoadBalancer",
                "type": "boolean",
                "doc": "Cancel a load balancer with the given uuid. The billing system will execute the deletion of load balancer and all objects associated with it such as load balancer appliances, listeners, pools and members in the background. ",
                "static": true,
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    }
                ]
            },
            "enableOrDisableDataLogs": {
                "name": "enableOrDisableDataLogs",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "When enabled, data log would be forwarded to logging service. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    },
                    {
                        "name": "enabled",
                        "type": "boolean"
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "typeArray": true,
                "doc": "Return all existing load balancers ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getListenerTimeSeriesData": {
                "name": "getListenerTimeSeriesData",
                "type": "SoftLayer_Network_LBaaS_LoadBalancerMonitoringMetricDataPoint",
                "typeArray": true,
                "doc": "Return listener time series datapoints. The time series data is available for Throughput, ConnectionRate and ActiveConnections. Throughput is in bits per second. The values are an average over the time range. The time series data is available for 1hour, 6hours, 12hours, 1day, 1week or 2weeks. \n\n",
                "static": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string"
                    },
                    {
                        "name": "metricName",
                        "type": "string",
                        "doc": "Values are Throughput, ConnectionRate, ActiveConnections"
                    },
                    {
                        "name": "timeRange",
                        "type": "string",
                        "doc": "Values are 1hour, 6hours, 12hours, 24hours, 1week, 2weeks"
                    },
                    {
                        "name": "listenerUuid",
                        "type": "string",
                        "defaultValue": null
                    }
                ]
            },
            "getLoadBalancer": {
                "name": "getLoadBalancer",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Get the load balancer object with given uuid. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    }
                ]
            },
            "getLoadBalancerMemberHealth": {
                "name": "getLoadBalancerMemberHealth",
                "type": "SoftLayer_Network_LBaaS_PoolMembersHealth",
                "typeArray": true,
                "doc": "Return load balancer members health ",
                "static": true,
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    }
                ]
            },
            "getLoadBalancerStatistics": {
                "name": "getLoadBalancerStatistics",
                "type": "SoftLayer_Network_LBaaS_LoadBalancerStatistics",
                "doc": "Return load balancers statistics such as total number of current sessions and total number of accumulated connections. ",
                "static": true,
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "filterable": true,
                "maskable": true
            },
            "serviceLoadBalancer": {
                "name": "serviceLoadBalancer",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "data",
                        "type": "string"
                    }
                ]
            },
            "updateLoadBalancer": {
                "name": "updateLoadBalancer",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Update load balancer's description, and return the load balancer object containing all listeners, pools, members and datacenter. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    },
                    {
                        "name": "newDescription",
                        "type": "string"
                    }
                ]
            },
            "updateSslCiphers": {
                "name": "updateSslCiphers",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Updates the load balancer with the new cipher list. All new connections going forward will use the new set of ciphers selected by the user. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string"
                    },
                    {
                        "name": "cipherList",
                        "type": "int",
                        "typeArray": true
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_LBaaS_LoadBalancer type presents a structure containing attributes of a load balancer, and its related objects including listeners, pools and members. ",
        "properties": {
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "Datacenter, where load balancer is located."
            },
            "healthMonitors": {
                "name": "healthMonitors",
                "type": "SoftLayer_Network_LBaaS_HealthMonitor",
                "form": "relational",
                "typeArray": true,
                "doc": "Health monitors for the backend members."
            },
            "l7Pools": {
                "name": "l7Pools",
                "type": "SoftLayer_Network_LBaaS_L7Pool",
                "form": "relational",
                "typeArray": true,
                "doc": "L7Pools for load balancer."
            },
            "listeners": {
                "name": "listeners",
                "type": "SoftLayer_Network_LBaaS_Listener",
                "form": "relational",
                "typeArray": true,
                "doc": "Listeners assigned to load balancer."
            },
            "members": {
                "name": "members",
                "type": "SoftLayer_Network_LBaaS_Member",
                "form": "relational",
                "typeArray": true,
                "doc": "Members assigned to load balancer."
            },
            "sslCiphers": {
                "name": "sslCiphers",
                "type": "SoftLayer_Network_LBaaS_SSLCipher",
                "form": "relational",
                "typeArray": true,
                "doc": "list of preferred custom ciphers configured for the load balancer."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account this load balancer belongs to."
            },
            "address": {
                "name": "address",
                "type": "string",
                "form": "local",
                "doc": "Address (Host name) of a load balancer."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when a load balancer was created."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of a load balancer."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a load balancer."
            },
            "isDataLogEnabled": {
                "name": "isDataLogEnabled",
                "type": "int",
                "form": "local",
                "doc": "Specifies whether the data log is enabled for the load balancer. "
            },
            "isPublic": {
                "name": "isPublic",
                "type": "int",
                "form": "local",
                "doc": "Specifies whether the load balancer is a public or internal load balancer. "
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "This references to location with type datacenter"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when a load balancer was updated last."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The load balancer's name."
            },
            "operatingStatus": {
                "name": "operatingStatus",
                "type": "string",
                "form": "local",
                "doc": "The operation status \"ONLINE\" or \"OFFLINE\" of a load balancer."
            },
            "previousErrorText": {
                "name": "previousErrorText",
                "type": "string",
                "form": "local",
                "doc": "Error message of previous API call in case of failure"
            },
            "provisioningStatus": {
                "name": "provisioningStatus",
                "type": "string",
                "form": "local",
                "doc": "The provisioning status of a load balancer."
            },
            "type": {
                "name": "type",
                "type": "int",
                "form": "local",
                "doc": "Specifies the type of load balancer. "
            },
            "useSystemPublicIpPool": {
                "name": "useSystemPublicIpPool",
                "type": "int",
                "form": "local",
                "doc": "Applicable for public load balancer only. It specifies whether the public IP addresses are allocated from system public IP pool (1, default) or public subnet (null | 0) from the account ordering the load balancer. For internal load balancer, useSystemPublicIpPool will be ignored, and it always defaults to 1. "
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "The UUID of a load balancer."
            },
            "healthMonitorCount": {
                "name": "healthMonitorCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of health monitors for the backend members."
            },
            "l7PoolCount": {
                "name": "l7PoolCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of l7Pools for load balancer."
            },
            "listenerCount": {
                "name": "listenerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of listeners assigned to load balancer."
            },
            "memberCount": {
                "name": "memberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of members assigned to load balancer."
            },
            "sslCipherCount": {
                "name": "sslCipherCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of list of preferred custom ciphers configured for the load balancer."
            }
        }
    },
    "SoftLayer_Network_LBaaS_LoadBalancerHealthMonitorConfiguration": {
        "name": "SoftLayer_Network_LBaaS_LoadBalancerHealthMonitorConfiguration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_LoadBalancerHealthMonitorConfiguration specifies the check method to be used for health monitoring backend members. ",
        "properties": {
            "backendPort": {
                "name": "backendPort",
                "type": "int",
                "form": "local",
                "doc": "Backends port"
            },
            "backendProtocol": {
                "name": "backendProtocol",
                "type": "string",
                "form": "local",
                "doc": "Backends protocol. Valid values are \"TCP\", \"HTTP\" "
            },
            "healthMonitorUuid": {
                "name": "healthMonitorUuid",
                "type": "string",
                "form": "local",
                "doc": "Health Monitor UUID, required for update only"
            },
            "interval": {
                "name": "interval",
                "type": "int",
                "form": "local",
                "doc": "<<< EOT Interval in seconds to perform"
            },
            "maxRetries": {
                "name": "maxRetries",
                "type": "int",
                "form": "local",
                "doc": "Max number of retries until the member is considered as DOWN "
            },
            "timeout": {
                "name": "timeout",
                "type": "int",
                "form": "local",
                "doc": "Health check methods timeout in"
            },
            "urlPath": {
                "name": "urlPath",
                "type": "string",
                "form": "local",
                "doc": "If monitor is \"HTTP\", this specifies URL path"
            }
        }
    },
    "SoftLayer_Network_LBaaS_LoadBalancerMonitoringMetricDataPoint": {
        "name": "SoftLayer_Network_LBaaS_LoadBalancerMonitoringMetricDataPoint",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_LoadBalancerMonitoringMetricDataPoint is a collection of datapoints retrieved from a load balancer instance. The available metrics are: <ul> <li>The metric value </li> <li>The timestamp when the metric value was obtained </li> </ul> ",
        "properties": {
            "epochTimestamp": {
                "name": "epochTimestamp",
                "type": "int",
                "form": "local",
                "doc": "Epoch Time"
            },
            "value": {
                "name": "value",
                "type": "decimal",
                "form": "local",
                "doc": "a value"
            }
        }
    },
    "SoftLayer_Network_LBaaS_LoadBalancerProtocolConfiguration": {
        "name": "SoftLayer_Network_LBaaS_LoadBalancerProtocolConfiguration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_LoadBalancerProtocolConfiguration specifies the protocol, port, maximum number of allowed connections and session stickiness for load balancer's front- and backend. ",
        "properties": {
            "backendPort": {
                "name": "backendPort",
                "type": "int",
                "form": "local",
                "doc": "Backends port"
            },
            "backendProtocol": {
                "name": "backendProtocol",
                "type": "string",
                "form": "local",
                "doc": "Backends protocol. Valid values are \"TCP\", \"HTTP\" "
            },
            "clientTimeout": {
                "name": "clientTimeout",
                "type": "int",
                "form": "local",
                "doc": "maximum idle time in seconds(Range: 1 to 7200), after which the load balancer brings down the client-side connection"
            },
            "frontendPort": {
                "name": "frontendPort",
                "type": "int",
                "form": "local",
                "doc": "Frontends port"
            },
            "frontendProtocol": {
                "name": "frontendProtocol",
                "type": "string",
                "form": "local",
                "doc": "Frontends protocol. Valid values are \"TCP\", \"HTTP\" and \"HTTPS\" "
            },
            "listenerUuid": {
                "name": "listenerUuid",
                "type": "string",
                "form": "local",
                "doc": "Listeners UUID, required for update only"
            },
            "loadBalancingMethod": {
                "name": "loadBalancingMethod",
                "type": "string",
                "form": "local",
                "doc": "Load balancing method. Valid values are \"ROUNDROBIN\", \"WEIGHTED_RR\" and \"LEASTCONNECTION\" "
            },
            "maxConn": {
                "name": "maxConn",
                "type": "int",
                "form": "local",
                "doc": "Maximum number of allowed connections"
            },
            "serverTimeout": {
                "name": "serverTimeout",
                "type": "int",
                "form": "local",
                "doc": "maximum idle time in seconds(Range: 1 to 7200), after which the load balancer brings down the server-side connection"
            },
            "sessionCookieName": {
                "name": "sessionCookieName",
                "type": "string",
                "form": "local",
                "doc": "Sessions cookie name"
            },
            "sessionType": {
                "name": "sessionType",
                "type": "string",
                "form": "local",
                "doc": "Session stickiness type. Valid values are \"SOURCE_IP\" \"HTTP_COOKIE\""
            },
            "tlsCertificateId": {
                "name": "tlsCertificateId",
                "type": "int",
                "form": "local",
                "doc": "ssl/tls certificate id"
            }
        }
    },
    "SoftLayer_Network_LBaaS_LoadBalancerServerInstanceInfo": {
        "name": "SoftLayer_Network_LBaaS_LoadBalancerServerInstanceInfo",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_LoadBalancerServerInstanceInfo specifies the application server, usually an IBM SoftLayer virtual server or bare metal system, to be assigned to a load balancer. ",
        "properties": {
            "privateIpAddress": {
                "name": "privateIpAddress",
                "type": "string",
                "form": "local",
                "doc": "Servers private IP address"
            },
            "publicIpAddress": {
                "name": "publicIpAddress",
                "type": "string",
                "form": "local",
                "doc": "Servers public IP address"
            },
            "weight": {
                "name": "weight",
                "type": "int",
                "form": "local",
                "doc": "Load balancing weight for a server"
            }
        }
    },
    "SoftLayer_Network_LBaaS_LoadBalancerStatistics": {
        "name": "SoftLayer_Network_LBaaS_LoadBalancerStatistics",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_LoadBalancerStatistics is a collection of metrics retrieved from a load balancer instance. The available metrics are: <ul> <li>NUmber of members up</li> <li>Number of members down</li> <li>Total number of active connections</li> <li>Throughput</li> <li>Data processed by month</li> <li>Connection rate</li> </ul> ",
        "properties": {
            "connectionRate": {
                "name": "connectionRate",
                "type": "int",
                "form": "local",
                "doc": "Number of connections seen at the"
            },
            "dataProcessedByMonth": {
                "name": "dataProcessedByMonth",
                "type": "int",
                "form": "local",
                "doc": "Data processed by month is the total of bin and bout"
            },
            "numberOfMembersDown": {
                "name": "numberOfMembersDown",
                "type": "int",
                "form": "local",
                "doc": "Number of members in DOWN health state"
            },
            "numberOfMembersUp": {
                "name": "numberOfMembersUp",
                "type": "int",
                "form": "local",
                "doc": "Number of members in UP health state"
            },
            "throughput": {
                "name": "throughput",
                "type": "float",
                "form": "local",
                "doc": "Throughput measures the total number of bits"
            },
            "totalConnections": {
                "name": "totalConnections",
                "type": "int",
                "form": "local",
                "doc": "Number of total active established connections"
            }
        }
    },
    "SoftLayer_Network_LBaaS_Member": {
        "name": "SoftLayer_Network_LBaaS_Member",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_LBaaS_Member service allows consumers to manage (backend) members for a given load balancer. A load balancer may have one or more backend pools. Adding a backend member to the load balancer will add that member to all the backend pools. Similarly, deleting a backend member from the load balancer will remove that member from all associated backend pools. Weight of the backend member is a value between 1 and 256 but only applicable when the load balancing method configured is \"Weighted Round Robin\". ",
        "methods": {
            "addLoadBalancerMembers": {
                "name": "addLoadBalancerMembers",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Add server instances as members to load balancer and return it with listeners, pools and members populated ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string"
                    },
                    {
                        "name": "serverInstances",
                        "type": "SoftLayer_Network_LBaaS_LoadBalancerServerInstanceInfo",
                        "typeArray": true
                    }
                ]
            },
            "deleteLoadBalancerMembers": {
                "name": "deleteLoadBalancerMembers",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Delete given members from load balancer and return load balancer object with listeners, pools and members populated ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string"
                    },
                    {
                        "name": "memberUuids",
                        "type": "string",
                        "typeArray": true
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LBaaS_Member",
                "filterable": true,
                "maskable": true
            },
            "updateLoadBalancerMembers": {
                "name": "updateLoadBalancerMembers",
                "type": "SoftLayer_Network_LBaaS_LoadBalancer",
                "doc": "Update members weight and return load balancer object with listeners, pools and members populated ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "loadBalancerUuid",
                        "type": "string"
                    },
                    {
                        "name": "members",
                        "type": "SoftLayer_Network_LBaaS_Member",
                        "typeArray": true
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_LBaaS_Member represents the backend member for a load balancer. It can be either a virtual server or a bare metal machine. ",
        "properties": {
            "address": {
                "name": "address",
                "type": "string",
                "form": "local",
                "doc": "The IP address of a load balancer member."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when a load balancers"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Specifies when a load balancers"
            },
            "provisioningStatus": {
                "name": "provisioningStatus",
                "type": "string",
                "form": "local",
                "doc": "The provisioning status of a load balancer member."
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "The UUID of a load balancer member."
            },
            "weight": {
                "name": "weight",
                "type": "int",
                "form": "local",
                "doc": "The weight of a load balancer member."
            }
        }
    },
    "SoftLayer_Network_LBaaS_MemberHealth": {
        "name": "SoftLayer_Network_LBaaS_MemberHealth",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_MemberHealth is a collection member metrics retrieved from a LBaaS VSI instance. The available metrics are: <ul> <li>Name of the member</li> <li>Status of the member up or down</li> <li>Uuid of the member</li> </ul> ",
        "properties": {
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "Members status (UP/DOWN)."
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "Members UUID."
            }
        }
    },
    "SoftLayer_Network_LBaaS_PolicyRule": {
        "name": "SoftLayer_Network_LBaaS_PolicyRule",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_PolicyRule \n\nThis class contains layer 7 policy specifications and an array of associated rules An array of objects of this class must be passed to the API in order to create a policy and its associated rules. <ul> <li>The layer 7 policy object </li> <li>An array of layer 7 rules </li> </ul> ",
        "properties": {
            "l7Policy": {
                "name": "l7Policy",
                "type": "SoftLayer_Network_LBaaS_L7Policy",
                "form": "local",
                "doc": "L7 Policy"
            },
            "l7Rules": {
                "name": "l7Rules",
                "type": "SoftLayer_Network_LBaaS_L7Rule",
                "form": "local",
                "typeArray": true,
                "doc": "L7 Rules"
            }
        }
    },
    "SoftLayer_Network_LBaaS_Pool": {
        "name": "SoftLayer_Network_LBaaS_Pool",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_LBaaS_Pool type presents a structure containing attributes of a load balancer pool such as the protocol, protocol port and the load balancing algorithm used. ",
        "properties": {
            "healthMonitor": {
                "name": "healthMonitor",
                "type": "SoftLayer_Network_LBaaS_HealthMonitor",
                "form": "relational"
            },
            "members": {
                "name": "members",
                "type": "SoftLayer_Network_LBaaS_Member",
                "form": "relational",
                "typeArray": true
            },
            "sessionAffinity": {
                "name": "sessionAffinity",
                "type": "SoftLayer_Network_LBaaS_SessionAffinity",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Create date of the pool instance"
            },
            "loadBalancingAlgorithm": {
                "name": "loadBalancingAlgorithm",
                "type": "string",
                "form": "local",
                "doc": "Load balancing algorithm: \"ROUNDROBIN\", \"WEIGHTED_RR\", \"LEASTCONNECTION\""
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Last updated date of the pool"
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "Backends protocol, supported protocols are \"TCP\", \"HTTP\" and \"HTTPS\""
            },
            "protocolPort": {
                "name": "protocolPort",
                "type": "int",
                "form": "local",
                "doc": "Backends protocol port"
            },
            "provisioningStatus": {
                "name": "provisioningStatus",
                "type": "string",
                "form": "local",
                "doc": "Provisioning status of a load balancer pool."
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "Instance uuid of the pool"
            },
            "memberCount": {
                "name": "memberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_LBaaS_PoolMembersHealth": {
        "name": "SoftLayer_Network_LBaaS_PoolMembersHealth",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_PoolMembersHealth provides statistics of members belonging to a particular pool. ",
        "properties": {
            "membersHealth": {
                "name": "membersHealth",
                "type": "SoftLayer_Network_LBaaS_MemberHealth",
                "form": "local",
                "typeArray": true,
                "doc": "Members statistics of the pool"
            },
            "poolUuid": {
                "name": "poolUuid",
                "type": "string",
                "form": "local",
                "doc": "Instance uuid of the pool"
            }
        }
    },
    "SoftLayer_Network_LBaaS_SSLCipher": {
        "name": "SoftLayer_Network_LBaaS_SSLCipher",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_LBaaS_SSLCipher",
                "typeArray": true,
                "doc": "Returns all supported cipher list ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LBaaS_SSLCipher",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_LBaaS_SSLCipher type presents a structure that contains attributes of load balancer cipher suites. \n\n",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Cipher identifier"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of the cipher"
            }
        }
    },
    "SoftLayer_Network_LBaaS_SessionAffinity": {
        "name": "SoftLayer_Network_LBaaS_SessionAffinity",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Network_LBaaS_SessionAffinity represents the session affinity, aka session persistence, configuration for a load balancer backend pool. ",
        "properties": {
            "pool": {
                "name": "pool",
                "type": "SoftLayer_Network_LBaaS_Pool",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "Type of the session persistence"
            }
        }
    },
    "SoftLayer_Network_LoadBalancer_Global_Account": {
        "name": "SoftLayer_Network_LoadBalancer_Global_Account",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The global load balancer service has been deprecated and is no longer available. \n\nA global load balancer account enables you to load balance traffic between servers that are in geographically diverse locations.  SoftLayer's global load balancers act as a highly modified DNS server.  SoftLayer's global load balancers work by accepting DNS requests for a specific hostname, choosing a host from a load balancing pool using the load balance method specified, and returning a destination IP address through a DNS response. ",
        "methods": {
            "addNsRecord": {
                "name": "addNsRecord",
                "type": "boolean",
                "doc": "The global load balancer service has been deprecated and is no longer available. \n\nIf your globally load balanced domain is hosted on the SoftLayer nameservers this method will add the required NS resource record to your DNS zone file and remove any A records that match the host portion of a global load balancer account hostname. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "The global load balancer service has been deprecated and is no longer available. \n\nEdit the properties of a global load balancer account by passing in a modified instance of the object. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_LoadBalancer_Global_Account",
                        "doc": "A skeleton SoftLayer_Network_LoadBalancer_Global_Account object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LoadBalancer_Global_Account",
                "doc": "The global load balancer service has been deprecated and is no longer available. ",
                "filterable": true,
                "maskable": true
            },
            "removeNsRecord": {
                "name": "removeNsRecord",
                "type": "boolean",
                "doc": "The global load balancer service has been deprecated and is no longer available. \n\nIf your globally load balanced domain is hosted on the SoftLayer nameservers this method will remove the NS resource record from your DNS zone file. "
            }
        },
        "typeDoc": "The global load balancer service has been deprecated and is no longer available. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "Your SoftLayer customer account."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The current billing item for a Global Load Balancer account."
            },
            "hosts": {
                "name": "hosts",
                "type": "SoftLayer_Network_LoadBalancer_Global_Host",
                "form": "relational",
                "typeArray": true,
                "doc": "The hosts in the load balancing pool for a global load balancer account."
            },
            "loadBalanceType": {
                "name": "loadBalanceType",
                "type": "SoftLayer_Network_LoadBalancer_Global_Type",
                "form": "relational",
                "doc": "The load balance method of a global load balancer account"
            },
            "managedResourceFlag": {
                "name": "managedResourceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that the global load balancer is a managed resource."
            },
            "allowedNumberOfHosts": {
                "name": "allowedNumberOfHosts",
                "type": "int",
                "form": "local",
                "doc": "The maximum number of hosts that a global load balancer account is allowed to have."
            },
            "averageConnectionsPerSecond": {
                "name": "averageConnectionsPerSecond",
                "type": "float",
                "form": "local",
                "doc": "The average amount of connections per second used within the current billing cycle.  This number is updated daily."
            },
            "connectionsPerSecond": {
                "name": "connectionsPerSecond",
                "type": "int",
                "form": "local",
                "doc": "The amount of connections per second a global load balancer account may use within a billing cycle without being billed for an overage."
            },
            "fallbackIp": {
                "name": "fallbackIp",
                "type": "string",
                "form": "local",
                "doc": "The IP address that will be return to a DNS request when none of the hosts for a global load balancer account could be returned."
            },
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local",
                "doc": "The hostname of a global load balancer account that is being load balanced."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a global load balancer account."
            },
            "loadBalanceTypeId": {
                "name": "loadBalanceTypeId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the load balance method for a global load balancer account."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Additional customer defined information for a global load balancer account."
            },
            "hostCount": {
                "name": "hostCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the hosts in the load balancing pool for a global load balancer account."
            }
        }
    },
    "SoftLayer_Network_LoadBalancer_Global_Host": {
        "name": "SoftLayer_Network_LoadBalancer_Global_Host",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The global load balancer service has been deprecated and is no longer available. \n\nEvery global load balancer account contains hosts that make up the load balancing pool.  The global load balancers select hosts from this pool and return the destination IP in the DNS response.  The SoftLayer_Network_LoadBalancer_Global_Host service represent these hosts. ",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "The global load balancer service has been deprecated and is no longer available. \n\nRemove a host from the load balancing pool of a global load balancer account. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LoadBalancer_Global_Host",
                "doc": "The global load balancer service has been deprecated and is no longer available. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The global load balancer service has been deprecated and is no longer available. ",
        "properties": {
            "loadBalancerAccount": {
                "name": "loadBalancerAccount",
                "type": "SoftLayer_Network_LoadBalancer_Global_Account",
                "form": "relational",
                "doc": "The global load balancer account a host belongs to."
            },
            "destinationIp": {
                "name": "destinationIp",
                "type": "string",
                "form": "local",
                "doc": "The IP address of the host that will be returned by the global load balancers in response to a dns request."
            },
            "destinationPort": {
                "name": "destinationPort",
                "type": "int",
                "form": "local",
                "doc": "The port of the host that will be used for health checks."
            },
            "enabled": {
                "name": "enabled",
                "type": "int",
                "form": "local",
                "doc": "Whether the host is enabled or not.  The value can be '0' for disabled, or '1' for enabled."
            },
            "healthCheck": {
                "name": "healthCheck",
                "type": "string",
                "form": "local",
                "doc": "The health check type of a host.  Valid values include 'none', 'http', and 'tcp'."
            },
            "hits": {
                "name": "hits",
                "type": "float",
                "form": "local",
                "doc": "The number of times the host was selected by the load balance method."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a global load balancer host."
            },
            "loadBalanceOrder": {
                "name": "loadBalanceOrder",
                "type": "int",
                "form": "local",
                "doc": "The order of this host within the load balance pool.  This is only significant if the load balance method is set to failover."
            },
            "location": {
                "name": "location",
                "type": "string",
                "form": "local",
                "doc": "The location of a host in a datacenter.serverRoom format."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "The health status of a host.  The status can be either 'UP', 'DOWN', or null which could mean that the health check type is set to 'none' or an update to the ip, port, or health check type was recently done and the host is waiting for the new status. "
            },
            "weight": {
                "name": "weight",
                "type": "int",
                "form": "local",
                "doc": "The load balance weight of a host.  The total weight of all hosts in the load balancing pool must not exceed 100."
            }
        }
    },
    "SoftLayer_Network_LoadBalancer_Global_Type": {
        "name": "SoftLayer_Network_LoadBalancer_Global_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The global load balancer service has been deprecated and is no longer available. \n\nThe SoftLayer_Network_LoadBalancer_Global_Type data type represents a single load balance method that can be assigned to a global load balancer account. The load balance method determines how hosts in a load balancing pool are chosen by the global load balancers. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a load balance method."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a load balance method."
            }
        }
    },
    "SoftLayer_Network_LoadBalancer_Service": {
        "name": "SoftLayer_Network_LoadBalancer_Service",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Load balancer services represent the \"routes\" that the load balancer will have available to route requests. Each service has a source port (located on the load balancer itself), and a destination IP address and port. Any services that share a source port will be used as potential routes for traffic coming into the load balancer on that port.  For instance, if there are two services that both have a source port of 80, both of those services will be used as balanced servers for traffic coming into your virtual IP on port 80.  For a more complete example, consider the following scenario: \n\n\n:Virtual IP Address:  123.123.123.123\n:Servers on your account:\n:12.34.56.78\n:23.45.67.89\n:You want to set up both HTTP(port 80) and HTTPS (port 443) on each of those servers.\n:You will need four services:\n\n\n{| \n|-\n! SourcePort\n! DestinationIpAddress\n! DestinationPort\n|-\n| 80\n| 12.34.56.78\n| 80\n|-\n| 80\n| 23.45.67.89\n| 80\n|-\n| 443\n| 12.34.56.78\n| 443\n|-\n| 443\n| 23.45.67.89\n| 443\n|}\n\n\nThe services also have a routing type, these ALSO need to be the same for services that share the same port. For this example, the services with a source port of 80 should have HTTP as their type.  The other two services should have TCP as their type. \n\nThe affect of other variables are listed in their individual documentation. ",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Calling deleteObject on a particular server will remove it from the load balancer.  This is the only way to remove a service from your load balancer.  If you wish to remove a server, first call this function, then reload the virtualIpAddress object and edit the remaining services to reflect the other changes that you wish to make. "
            },
            "getGraphImage": {
                "name": "getGraphImage",
                "type": "base64Binary",
                "doc": "Get the graph image for a load balancer service based on the supplied graph type and metric.  The available graph types are: 'connections' and 'status', and the available metrics are: 'day', 'week' and 'month'. \n\nThis method returns the raw binary image data. ",
                "parameters": [
                    {
                        "name": "graphType",
                        "type": "string",
                        "doc": "The graph type can be either 'connections' or 'status'."
                    },
                    {
                        "name": "metric",
                        "type": "string",
                        "doc": "The metric can be 'day', 'week', or 'month'."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LoadBalancer_Service",
                "doc": "getObject retrieves the SoftLayer_Network_LoadBalancer_Service object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_LoadBalancer_Service service. You can only retrieve services on load balancers assigned to your account, and it is recommended that you simply retrieve the entire load balancer, as an individual service has no explicit purpose without its \"siblings\". ",
                "filterable": true,
                "maskable": true
            },
            "getStatus": {
                "name": "getStatus",
                "type": "SoftLayer_Container_Network_LoadBalancer_StatusEntry",
                "typeArray": true,
                "doc": "Returns an array of SoftLayer_Container_Network_LoadBalancer_StatusEntry objects.  A SoftLayer_Container_Network_LoadBalancer_StatusEntry object has two variables, \"Label\" and \"Value\" \n\nCalling this function executes a command on the physical load balancer itself, and therefore should be called infrequently.  For a general idea of the load balancer service, use the \"peakConnections\" variable on the Type \n\nPossible values for \"Label\" are: \n\n\n* IP Address\n* Port\n* Server Status\n* Load Status\n* Current Connections\n* Total Hits\n\n\nNot all labels are guaranteed to be returned. "
            },
            "resetPeakConnections": {
                "name": "resetPeakConnections",
                "type": "boolean",
                "doc": "Calling resetPeakConnections will set the peakConnections variable to zero on this particular object. Peak connections will continue to increase normally after this method call, it will only temporarily reset the statistic to zero, until the next time it is polled. "
            }
        },
        "typeDoc": "The SoftLayer_Network_LoadBalancer_Service data type contains all the information relating to a specific service (destination) on a particular load balancer. \n\nInformation retained on the object itself is the the source and destination of the service, routing type, weight, and whether or not the service is currently enabled. ",
        "properties": {
            "vip": {
                "name": "vip",
                "type": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
                "form": "relational",
                "doc": "The load balancer that this service belongs to."
            },
            "connectionLimit": {
                "name": "connectionLimit",
                "type": "int",
                "form": "local",
                "doc": "Connection limit on this service."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Creation Date of this service"
            },
            "destinationIpAddress": {
                "name": "destinationIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP Address of the real server you wish to direct traffic to.  Your account must own this IP"
            },
            "destinationPort": {
                "name": "destinationPort",
                "type": "int",
                "form": "local",
                "doc": "The port on the real server to direct the traffic.  This can be different than the source port.  If you wish to obfuscate your HTTP traffic, you can accept requests on port 80 on the load balancer, then redirect them to port 932 on your real server."
            },
            "enabled": {
                "name": "enabled",
                "type": "boolean",
                "form": "local",
                "doc": "A flag (either true or false) that determines if this particular service should be enabled on the load balancer.  Set to false to bring the server out of rotation without losing your configuration"
            },
            "healthCheck": {
                "name": "healthCheck",
                "type": "string",
                "form": "local",
                "doc": "The health check type for this service.  If one is supplied, the load balancer will occasionally ping your server to determine if it is still up.  Servers that are down are removed from the queue and will not be used to handle requests until their status returns to \"up\".  The value of the health check is determined directly by what option you have selected for the routing type. \n\n{| \n|-\n! Type\n! Valid Health Checks\n|-\n| HTTP\n| HTTP, TCP, ICMP\n|-\n| TCP\n| HTTP, TCP, ICMP\n|-\n| FTP\n| TCP, ICMP\n|-\n| DNS\n| DNS, ICMP\n|-\n| UDP\n| None\n|}\n\n"
            },
            "healthCheckURL": {
                "name": "healthCheckURL",
                "type": "string",
                "form": "local",
                "doc": "The URL provided here (starting with /) is what the load balancer will request in order to perform a custom HTTP health check.  You must specify either \"GET /location/of/file.html\" or \"HEAD /location/of/file.php\""
            },
            "healthResponse": {
                "name": "healthResponse",
                "type": "string",
                "form": "local",
                "doc": "The expected response from the custom HTTP health check.  If the requested page contains this response, the check succeeds."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for this object, used for the getObject method, and must be set if you are editing this object."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Last modification date of this service"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of the load balancer service"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Holds whether this server is up or down.  Does not affect load balancer configuration at all, just for the customer's informational purposes"
            },
            "peakConnections": {
                "name": "peakConnections",
                "type": "int",
                "form": "local",
                "doc": "Peak historical connections since the creation of this service.  Is reset any time you make a configuration change"
            },
            "sourcePort": {
                "name": "sourcePort",
                "type": "int",
                "form": "local",
                "doc": "The port on the load balancer that this service maps to.  This is the port for incoming traffic, it needs to be shared with other services to form a group."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The connection type of this service.  Valid values are HTTP, FTP, TCP, UDP, and DNS.  The value of this variable affects available values of healthCheck, listed in that variable's description"
            },
            "vipId": {
                "name": "vipId",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for this object's parent.  Probably not useful in the API, as this object will always be a child of a VirtualIpAddress anyway."
            },
            "weight": {
                "name": "weight",
                "type": "int",
                "form": "local",
                "doc": "Weight affects the choices the load balancer makes between your services.  The weight of each service is expressed as a percentage of the TOTAL CONNECTION LIMIT on the virtual IP Address.  All services draw from the same pool of connections, so if you expect to have 4 times as much HTTP traffic as HTTPS, your weights for the above example routes would be 40%, 40%, 10%, 10% respectively.  The weights should add up to 100%  If you go over 100%, an exception will be thrown.  Weights must be whole numbers, no fractions or decimals are accepted. "
            }
        }
    },
    "SoftLayer_Network_LoadBalancer_VirtualIpAddress": {
        "name": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Each SoftLayer customer that has purchased a load balancer will have one defined in the SoftLayer_Network_LoadBalancer_VirtualIpAddress service.  Load balancers have a virtual IP address and a number of SoftLayer_Network_LoadBalancer_Service objects associated with them.  The SoftLayer_Network_LoadBalancer_VirtualIpAddress object is the only way for a customer to make changes to their load balancer service. \n\nLoad balancers can be upgraded by using the upgradeConnectionLimit function, but this will upgrade your billing accordingly.  Downgrades are currently not supported, please open a ticket to accomplish a downgrade. ",
        "methods": {
            "disable": {
                "name": "disable",
                "type": "boolean",
                "doc": "Disable a Virtual IP Address, removing it from load balancer rotation and denying all connections to that IP address. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Like any other API object, the load balancers can have their exposed properties edited by passing in a modified version of the object.  The load balancer object also can modify its services in this way.  Simply request the load balancer object you wish to edit, then modify the objects in the services array and pass the modified object to this function.  WARNING:  Services cannot be deleted in this manner, you must call deleteObject() on the service to physically remove them from the load balancer. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
                        "doc": "A skeleton SoftLayer_Network_LoadBalancer_VirtualIpAddress object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "enable": {
                "name": "enable",
                "type": "boolean",
                "doc": "Enable a disabled Virtual IP Address, allowing connections back to the IP address. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_LoadBalancer_VirtualIpAddress",
                "doc": "getObject retrieves the SoftLayer_Network_LoadBalancer_VirtualIpAddress object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_LoadBalancer_VirtualIpAddress service. You can only retrieve Load Balancers assigned to your account. ",
                "filterable": true,
                "maskable": true
            },
            "kickAllConnections": {
                "name": "kickAllConnections",
                "type": "boolean",
                "doc": "Quickly remove all active external connections to a Virtual IP Address. "
            },
            "upgradeConnectionLimit": {
                "name": "upgradeConnectionLimit",
                "type": "boolean",
                "doc": "Upgrades the connection limit on the VirtualIp and changes the billing item on your account to reflect the change. This function will only upgrade you to the next \"level\" of service.  The next level follows this pattern Current Level  =>  Next Level 50                 100 100                200 200                500 500                1000 1000               1200 1200               1500 1500               2000 2000               2500 2500               3000 "
            }
        },
        "typeDoc": "The SoftLayer_Network_LoadBalancer_VirtualIpAddress data type contains all the information relating to a specific load balancer assigned to a customer account. \n\nInformation retained on the object itself is the virtual IP address, load balancing method, and any notes that are related to the load balancer.  There is also an array of SoftLayer_Network_LoadBalancer_Service objects, which represent the load balancer services, explained more fully in the SoftLayer_Network_LoadBalancer_Service documentation. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that owns this load balancer."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The current billing item for the Load Balancer."
            },
            "customerManagedFlag": {
                "name": "customerManagedFlag",
                "type": "int",
                "form": "relational",
                "doc": "If false, this VIP and associated services may be edited via the portal or the API. If true, you must configure this VIP manually on the device."
            },
            "managedResourceFlag": {
                "name": "managedResourceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that the load balancer is a managed resource."
            },
            "services": {
                "name": "services",
                "type": "SoftLayer_Network_LoadBalancer_Service",
                "form": "relational",
                "typeArray": true,
                "doc": "the services on this load balancer."
            },
            "connectionLimit": {
                "name": "connectionLimit",
                "type": "int",
                "form": "local",
                "doc": "Connection limit on this VIP.  Can be upgraded through the upgradeConnectionLimit() function"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for this object, used for the getObject method, and must be set if you are editing this object."
            },
            "loadBalancingMethod": {
                "name": "loadBalancingMethod",
                "type": "string",
                "form": "local",
                "doc": "The load balancing method that determines which server is used \"next\" by the load balancer.  The method is stored in an abbreviated form, represented in parentheses after the full name. Methods include: Round Robin (Value \"rr\"):  Each server is used sequentially in a circular queue Shortest Response (Value \"sr\"):  The server with the lowest ping at the last health check gets the next request Least Connections (Value \"lc\"):  The server with the least current connections is given the next request Persistent IP - Round Robin (Value \"pi\"): The same server will be returned to a request during a users session.  Servers are chosen through round robin. Persistent IP - Shortest Response (Value \"pi-sr\"): The same server will be returned to a request during a users session.  Servers are chosen through shortest response. Persistent IP - Least Connections (Value \"pi-lc\"): The same server will be returned to a request during a users session.  Servers are chosen through least connections. Insert Cookie - Round Robin (Value \"ic\"):  Inserts a cookie into the HTTP stream that will tie that client to a particular balanced server. Servers are chosen through round robin. Insert Cookie - Shortest Response (Value \"ic-sr\"): Inserts a cookie into the HTTP stream that will tie that client to a particular balanced server. Servers are chosen through shortest response. Insert Cookie - Least Connections (Value \"ic-lc\"): Inserts a cookie into the HTTP stream that will tie that client to a particular balanced server. Servers are chosen through least connections. "
            },
            "loadBalancingMethodFullName": {
                "name": "loadBalancingMethodFullName",
                "type": "string",
                "form": "local",
                "doc": "A human readable version of loadBalancingMethod, intended mainly for API users."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date this load balancer was last modified"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the load balancer instance"
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "User-created notes on this load balancer."
            },
            "securityCertificateId": {
                "name": "securityCertificateId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the Security Certificate to be utilized when SSL support is enabled. "
            },
            "sourcePort": {
                "name": "sourcePort",
                "type": "int",
                "form": "local",
                "doc": "This is the port for incoming traffic."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The connection type of this VIP.  Valid values are HTTP, FTP, TCP, UDP, and DNS."
            },
            "virtualIpAddress": {
                "name": "virtualIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The virtual, public-facing IP address for your load balancer.  This is the address of all incoming traffic"
            },
            "serviceCount": {
                "name": "serviceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the services on this load balancer."
            }
        }
    },
    "SoftLayer_Network_Logging_Syslog": {
        "name": "SoftLayer_Network_Logging_Syslog",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The Syslog class holds a single line from the Networking Firewall \"Syslog\" record, for firewall detected and blocked attempts on a server. ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp for when the connection was blocked by the firewall"
            },
            "destinationIpAddress": {
                "name": "destinationIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The Destination IP Address of the blocked connection (your end)"
            },
            "destinationPort": {
                "name": "destinationPort",
                "type": "int",
                "form": "local",
                "doc": "The Destination Port of the blocked connection (your end)"
            },
            "eventType": {
                "name": "eventType",
                "type": "string",
                "form": "local",
                "doc": "This tells you what kind of firewall event this log line is for:  accept or deny."
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "Raw syslog message for the event"
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "Connection protocol used to make the call that was blocked (tcp, udp, etc)"
            },
            "sourceIpAddress": {
                "name": "sourceIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The Source IP Address of the call that was blocked (attacker's end)"
            },
            "sourcePort": {
                "name": "sourcePort",
                "type": "int",
                "form": "local",
                "doc": "The Source Port where the blocked connection was established (attacker's end)"
            },
            "totalEvents": {
                "name": "totalEvents",
                "type": "int",
                "form": "local",
                "doc": "If this is an aggregation of syslog events, this property shows the total events."
            }
        }
    },
    "SoftLayer_Network_Media_Transcode_Account": {
        "name": "SoftLayer_Network_Media_Transcode_Account",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Transcoding is a service which allows you to transcode media files to different formats. For example, if you have a Windows Media Video file you wish to stream in Flash Video format, transcoding would be the process to make this change. Individual SoftLayer customer can have a single Transcode account and you need to create a Transcode account to use the service. To create a Transcode account, go to the \"Private Network\" -> \"Transcoding\" page in the SoftLayer [https://manage.softlayer.com customer portal] or invoke [[SoftLayer_Network_Media_Transcode_Account::createTranscodeAccount|createTranscodeAccount]] method. \n\nSoftLayer Transcoding service supports a large number of video and audio codecs. This means you can transcode many different types of movies.  Refer to [http://knowledgelayer.softlayer.com/questions/409/SoftLayer+Transcoding+FAQ Transcode FAQ] for supported codes and media containers. Transcode server also has hundreds of pre-defined output formats that you can choose from. \n\nA Transcode account object allows you to communicate with the Transcode FTP (transcode.service.softlayer.com server) server and Transcode server. You can retrieve a directory listing, details on a media file, Transcode output presets, and Transcode FTP login credentials. Most importantly, you can create transcode jobs through your Transcode account. \n\nWhen a Transcode account is created, it creates an FTP account on the Transcode FTP. You can upload your media files to the /in directory and you can download transcoded media files from the /out directory. You can keep the files 3 days from the creation date. They will be automatically deleted after this point. For more details on the Transcode FTP server, refer to [[SoftLayer_Network_Media_Transcode_Account::getFtpAttributes|getFtpAttributes]] method. ",
        "methods": {
            "createTranscodeAccount": {
                "name": "createTranscodeAccount",
                "type": "boolean",
                "doc": "With this method, you can create a transcode account.  Individual SoftLayer account can have a single Transcode account. You have to pass your SoftLayer account id as a parameter. ",
                "static": true
            },
            "createTranscodeJob": {
                "name": "createTranscodeJob",
                "type": "boolean",
                "doc": "'''Note'''. This method is obsolete. Please use the [[SoftLayer_Network_Media_Transcode_Job::createObject|createObject]] method on SoftLayer_Network_Media_Transcode_Job object instead. SoftLayer_Network_Media_Transcode_Job::createObject returns an object of a newly created Transcode Job. \n\nWith this method, you can create a transcode job. \n\nThe very first step of creating a transcode job is to upload your media files to the /in directory on your Transcode FTP space. Then, you have to pass a [[SoftLayer_Network_Media_Transcode_Job|Transcode job]] object as a parameter for this method. \n\nThere are 4 required properties of SoftLayer_Network_Media_Transcode_Job object: transcodePresetName, transcodePresetGuid, inputFile, and outputFile. A transcode preset is a configuration that defines a certain media output.  You can retrieve all the supported presets with the [[SoftLayer_Network_Media_Transcode_Account::getPresets|getPresets]] method. You can also use [[SoftLayer_Network_Media_Transcode_Account::getPresetDetail|getPresetDetail]] method to get more information on a preset. Use these two methods to determine appropriate values for \"transcodePresetName\" and \"transcodePresetGuid\" properties. For an \"inputFile\", you must specify a file that exists in the /in directory of your Transcode FTP space. An \"outputFile\" name will be used by the Transcode server for naming a transcoded file.  An output file name must be in /out directory. If your outputFile name already exists in the /out directory, the Transcode server will append a file name with _n (an underscore and the total number of files with the identical name plus 1). \n\nThe \"name\" property is optional and it can help you keep track of transcode jobs easily. \"autoDeleteDuration\" is another optional property that you can specify.  It determines how soon your input file will be deleted. If autoDeleteDuration is set to zero, your input file will be removed immediately after the last transcode job running on it is completed. A value for autoDeleteDuration property is in seconds and the maximum value is 259200 which is 3 days. \n\nAn example SoftLayer_Network_Media_Transcode_Job parameter looks like this: \n\n\n* name: My transcoding\n* transcodePresetName: F4V 896kbps 640x352 16x9 29.97fps\n* transcodePresetGuid: {87E01268-C3E3-4A85-9701-052C9AC42BD4}\n* inputFile: /in/my_birthday.wmv\n* outputFile: /out/my_birthday_flash\n\n\nNotice that an output file does not have a file extension.  The Transcode server will append a file extension based on an output format. A newly created transcode job will be in \"Pending\" status and it will be added to the Transcoding queue. You will receive a notification email whenever there is a status change on your transcode job.  For example, the Transcode server starts to process your transcode job, you will be notified via an email. \n\nYou can add up to 3 pending jobs at a time. Transcode jobs with any other status such as \"Complete\" or \"Error\" will not be counted toward your pending jobs. \n\nOnce a job is complete, the Transcode server will place the output file into the /out directory along with a notification email. The files in the /out directory will be removed 3 days after they were created.  You will need to use an FTP client to download transcoded files. \n\n",
                "parameters": [
                    {
                        "name": "newJob",
                        "type": "SoftLayer_Network_Media_Transcode_Job",
                        "doc": "A template object with details of a new job"
                    }
                ]
            },
            "getDirectoryInformation": {
                "name": "getDirectoryInformation",
                "type": "SoftLayer_Container_Network_Directory_Listing",
                "typeArray": true,
                "doc": "This method returns a collection of SoftLayer_Container_Network_Ftp_Directory objects. You can retrieve directory information for /in and /out directories. A [[SoftLayer_Container_Network_Directory_Listing|Directory Listing]] object contains a type (indicating whether it is a file or a directory), name and file count if it is a directory. ",
                "parameters": [
                    {
                        "name": "directoryName",
                        "type": "string",
                        "doc": "comma separated Extensions to restrict results to",
                        "defaultValue": "/"
                    },
                    {
                        "name": "extensionFilter",
                        "type": "string",
                        "doc": "A directory name",
                        "defaultValue": null
                    }
                ]
            },
            "getFileDetail": {
                "name": "getFileDetail",
                "type": "SoftLayer_Container_Network_Media_Information",
                "doc": "This method returns detailed information of a media file that resides in the Transcode FTP server. A [[SoftLayer_Container_Network_Media_Information|media information]] object contains media details such as file size, media format, frame rate, aspect ratio and so on.  This information is merely for reference purposes. You should not rely on this data. Our library grabs small pieces of data from a media file to gather media details.  This information may not be available for some files. ",
                "parameters": [
                    {
                        "name": "source",
                        "type": "string",
                        "doc": "The name of a source file"
                    }
                ]
            },
            "getFtpAttributes": {
                "name": "getFtpAttributes",
                "type": "SoftLayer_Container_Network_Authentication_Data",
                "doc": "This method returns your Transcode FTP login credentials to the transcode.service.softlayer.com server. \n\nThe Transcode FTP server is available via the SoftLayer private network. There is no API method that you can upload a file to Transcode server so you need to use an FTP client. You will have /in and /out directories on the Transcode FTP server.  You will have read-write privileges for /in directory and read-only privilege for /out directory. All the files in both /in and /out directories will be deleted after 72 hours from the creation date. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Media_Transcode_Account",
                "doc": "getObject method retrieves the SoftLayer_Network_Media_Transcode_Account object whose ID number corresponds to the ID number of the initial parameter passed to the SoftLayer_Network_Media_Transcode_Account service. You can only retrieve a Transcode account assigned to your SoftLayer customer account. ",
                "filterable": true,
                "maskable": true
            },
            "getPresetDetail": {
                "name": "getPresetDetail",
                "type": "SoftLayer_Container_Network_Media_Transcode_Preset_Element",
                "typeArray": true,
                "doc": "This method returns an array of [[SoftLayer_Container_Network_Media_Transcode_Preset_Element|preset element]] objects. Each preset has its own collection of preset elements such as encoder, frame rate, aspect ratio and so on. Each element object has a default value for itself and an array of [[SoftLayer_Container_Network_Media_Transcode_Preset_Element_Option|element option]] objects. For example, \"Frame Rate\" element for \"Windows Media 9 - Download - 1 Mbps - NTSC - Constrained VBR\" preset has 19 element options. 15.0 frame rate is selected by default.  Currently, you are not able to change the default value. Customizing these values may be possible in the future. ",
                "parameters": [
                    {
                        "name": "guid",
                        "type": "string",
                        "doc": "The unique id of a preset"
                    }
                ]
            },
            "getPresets": {
                "name": "getPresets",
                "type": "SoftLayer_Container_Network_Media_Transcode_Preset",
                "typeArray": true,
                "doc": "A transcode preset is a configuration that defines a certain media output. This method returns an array of transcoding preset objects supported by SoftLayer's Transcode server. Each [[SoftLayer_Container_Network_Media_Transcode_Preset|preset object]] contains a GUID property. You will need a GUID string when you create a new transcode job. "
            }
        },
        "typeDoc": "The SoftLayer_Network_Media_Transcode_Account contains information regarding a transcode account. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer account information"
            },
            "transcodeJobs": {
                "name": "transcodeJobs",
                "type": "SoftLayer_Network_Media_Transcode_Job",
                "form": "relational",
                "typeArray": true,
                "doc": "Transcode jobs"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a SoftLayer account"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The created date"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a transcode account"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last modified date"
            },
            "transcodeJobCount": {
                "name": "transcodeJobCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of transcode jobs"
            }
        }
    },
    "SoftLayer_Network_Media_Transcode_Job": {
        "name": "SoftLayer_Network_Media_Transcode_Job",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Network_Media_Transcode_Job holds information on a transcode job. To create a transcode job, use a [[SoftLayer_Network_Media_Transcode_Account|Transcode account]] object. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Media_Transcode_Job",
                "doc": "With this method, you can create a transcode job. \n\nThe very first step of creating a transcode job is to upload your media files to the /in directory on your Transcode FTP space. Then, you have to pass a [[SoftLayer_Network_Media_Transcode_Job|Transcode job]] object as a parameter for this method. \n\nThere are 4 required properties of SoftLayer_Network_Media_Transcode_Job object: transcodePresetName, transcodePresetGuid, inputFile, and outputFile. A transcode preset is a configuration that defines a certain media output.  You can retrieve all the supported presets with the [[SoftLayer_Network_Media_Transcode_Account::getPresets|getPresets]] method. You can also use [[SoftLayer_Network_Media_Transcode_Account::getPresetDetail|getPresetDetail]] method to get more information on a preset. Use these two methods to determine appropriate values for \"transcodePresetName\" and \"transcodePresetGuid\" properties. For an \"inputFile\", you must specify a file that exists in the /in directory of your Transcode FTP space. An \"outputFile\" name will be used by the Transcode server for naming a transcoded file.  An output file name must be in /out directory. If your outputFile name already exists in the /out directory, the Transcode server will append a file name with _n (an underscore and the total number of files with the identical name plus 1). \n\nThe \"name\" property is optional and it can help you keep track of transcode jobs easily. \"autoDeleteDuration\" is another optional property that you can specify.  It determines how soon your input file will be deleted. If autoDeleteDuration is set to zero, your input file will be removed immediately after the last transcode job running on it is completed. A value for autoDeleteDuration property is in seconds and the maximum value is 259200 which is 3 days. \n\nAn example SoftLayer_Network_Media_Transcode_Job parameter looks like this: \n\n\n* name: My transcoding\n* transcodePresetName: F4V 896kbps 640x352 16x9 29.97fps\n* transcodePresetGuid: {87E01268-C3E3-4A85-9701-052C9AC42BD4}\n* inputFile: /in/my_birthday.wmv\n* outputFile: /out/my_birthday_flash\n\n\nNotice that an output file does not have a file extension.  The Transcode server will append a file extension based on an output format. A newly created transcode job will be in \"Pending\" status and it will be added to the Transcoding queue. You will receive a notification email whenever there is a status change on your transcode job.  For example, the Transcode server starts to process your transcode job, you will be notified via an email. \n\nYou can add up to 3 pending jobs at a time. Transcode jobs with any other status such as \"Complete\" or \"Error\" will not be counted toward your pending jobs. \n\nOnce a job is complete, the Transcode server will place the output file into the /out directory along with a notification email. The files in the /out directory will be removed 3 days after they were created.  You will need to use an FTP client to download transcoded files. \n\n",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Media_Transcode_Job",
                        "doc": "The SoftLayer_Network_Media_Transcode_Job object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Media_Transcode_Job",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Media_Transcode_Job contains information regarding a transcode job such as input file, output format, user id and so on. ",
        "properties": {
            "history": {
                "name": "history",
                "type": "SoftLayer_Network_Media_Transcode_Job_History",
                "form": "relational",
                "typeArray": true
            },
            "transcodeAccount": {
                "name": "transcodeAccount",
                "type": "SoftLayer_Network_Media_Transcode_Account",
                "form": "relational",
                "doc": "The transcode service account"
            },
            "transcodeStatus": {
                "name": "transcodeStatus",
                "type": "SoftLayer_Network_Media_Transcode_Job_Status",
                "form": "relational",
                "doc": "The status information of a transcode job"
            },
            "transcodeStatusName": {
                "name": "transcodeStatusName",
                "type": "string",
                "form": "relational",
                "doc": "The status of a transcode job"
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The SoftLayer user that created the transcode job"
            },
            "autoDeleteDuration": {
                "name": "autoDeleteDuration",
                "type": "int",
                "form": "local",
                "doc": "The auto-deletion duration in seconds.  This value determines how long the input file will be kept on the storage."
            },
            "byteIn": {
                "name": "byteIn",
                "type": "int",
                "form": "local",
                "doc": "The size of an input file in byte"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The created date"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a transcode job"
            },
            "inputFile": {
                "name": "inputFile",
                "type": "string",
                "form": "local",
                "doc": "The input file name"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last modified date"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a transcode job"
            },
            "outputFile": {
                "name": "outputFile",
                "type": "string",
                "form": "local",
                "doc": "The output file name"
            },
            "transcodeAccountId": {
                "name": "transcodeAccountId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of SoftLayer account"
            },
            "transcodeJobGuid": {
                "name": "transcodeJobGuid",
                "type": "string",
                "form": "local",
                "doc": "The unique id of a transcode job"
            },
            "transcodePresetGuid": {
                "name": "transcodePresetGuid",
                "type": "string",
                "form": "local",
                "doc": "The unique id of a pre-defined output format"
            },
            "transcodePresetName": {
                "name": "transcodePresetName",
                "type": "string",
                "form": "local",
                "doc": "The name of a transcode output preset"
            },
            "transcodeStatusId": {
                "name": "transcodeStatusId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a transcode status"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the user who created a transcode job"
            },
            "watermark": {
                "name": "watermark",
                "type": "SoftLayer_Container_Network_Media_Transcode_Job_Watermark",
                "form": "local",
                "doc": "Watermark to apply to job"
            },
            "historyCount": {
                "name": "historyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Media_Transcode_Job_History": {
        "name": "SoftLayer_Network_Media_Transcode_Job_History",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "transcodeStatusName": {
                "name": "transcodeStatusName",
                "type": "string",
                "form": "relational",
                "doc": "The status of a transcode job"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The creation date"
            },
            "publicNotes": {
                "name": "publicNotes",
                "type": "string",
                "form": "local",
                "doc": "The note created by system"
            },
            "transcodeJobId": {
                "name": "transcodeJobId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a transcode job"
            }
        }
    },
    "SoftLayer_Network_Media_Transcode_Job_Status": {
        "name": "SoftLayer_Network_Media_Transcode_Job_Status",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A Transcode job's status. It can be Pending, Processing, Complete, Error or Deleted. ",
        "methods": {
            "getAllStatuses": {
                "name": "getAllStatuses",
                "type": "SoftLayer_Network_Media_Transcode_Job_Status",
                "typeArray": true,
                "doc": "This method returns all transcode job statuses. ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Media_Transcode_Job_Status",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Media_Transcode_Job_Status contains information on a transcode job status. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of a transcode job status"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a transcode job status"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The status name"
            }
        }
    },
    "SoftLayer_Network_Message_Delivery": {
        "name": "SoftLayer_Network_Message_Delivery",
        "base": "SoftLayer_Entity",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Message_Delivery",
                        "doc": "A skeleton SoftLayer_Network_Message_Delivery object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Message_Delivery",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account that a network message delivery account belongs to."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for a network message delivery account."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Message_Delivery_Type",
                "form": "relational",
                "doc": "The message delivery type of a network message delivery account."
            },
            "vendor": {
                "name": "vendor",
                "type": "SoftLayer_Network_Message_Delivery_Vendor",
                "form": "relational",
                "doc": "The vendor for a network message delivery account."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local"
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local"
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local"
            },
            "vendorId": {
                "name": "vendorId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Message_Delivery_Attribute": {
        "name": "SoftLayer_Network_Message_Delivery_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "networkMessageDelivery": {
                "name": "networkMessageDelivery",
                "type": "SoftLayer_Network_Message_Delivery",
                "form": "relational"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Message_Delivery_Email_Sendgrid": {
        "name": "SoftLayer_Network_Message_Delivery_Email_Sendgrid",
        "base": "SoftLayer_Network_Message_Delivery",
        "methods": {
            "addUnsubscribeEmailAddress": {
                "name": "addUnsubscribeEmailAddress",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "emailAddress",
                        "type": "string"
                    }
                ]
            },
            "deleteEmailListEntries": {
                "name": "deleteEmailListEntries",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "list",
                        "type": "string"
                    },
                    {
                        "name": "entries",
                        "type": "string",
                        "typeArray": true
                    }
                ]
            },
            "disableSmtpAccess": {
                "name": "disableSmtpAccess",
                "type": "boolean"
            },
            "enableSmtpAccess": {
                "name": "enableSmtpAccess",
                "type": "boolean"
            },
            "getAccountOverview": {
                "name": "getAccountOverview",
                "type": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Account_Overview"
            },
            "getCategoryList": {
                "name": "getCategoryList",
                "type": "string",
                "typeArray": true
            },
            "getEmailList": {
                "name": "getEmailList",
                "type": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_List_Entry",
                "typeArray": true,
                "parameters": [
                    {
                        "name": "list",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Message_Delivery_Email_Sendgrid",
                "filterable": true,
                "maskable": true
            },
            "getStatistics": {
                "name": "getStatistics",
                "type": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics",
                "typeArray": true,
                "parameters": [
                    {
                        "name": "options",
                        "type": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics_Options"
                    }
                ]
            },
            "getStatisticsGraph": {
                "name": "getStatisticsGraph",
                "type": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics_Graph",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics_Options"
                    }
                ]
            },
            "getVendorPortalUrl": {
                "name": "getVendorPortalUrl",
                "type": "string"
            },
            "sendEmail": {
                "name": "sendEmail",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "emailContainer",
                        "type": "SoftLayer_Container_Network_Message_Delivery_Email"
                    }
                ]
            },
            "updateEmailAddress": {
                "name": "updateEmailAddress",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "emailAddress",
                        "type": "string"
                    }
                ]
            }
        },
        "properties": {
            "emailAddress": {
                "name": "emailAddress",
                "type": "string",
                "form": "relational",
                "doc": "The contact e-mail address used by SendGrid."
            },
            "smtpAccess": {
                "name": "smtpAccess",
                "type": "string",
                "form": "relational",
                "doc": "A flag that determines if a SendGrid e-mail delivery account has access to send mail through the SendGrid SMTP server."
            }
        }
    },
    "SoftLayer_Network_Message_Delivery_Type": {
        "name": "SoftLayer_Network_Message_Delivery_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Message_Delivery_Vendor": {
        "name": "SoftLayer_Network_Message_Delivery_Vendor",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Monitor": {
        "name": "SoftLayer_Network_Monitor",
        "base": "SoftLayer_Entity",
        "methods": {
            "getIpAddressesByHardware": {
                "name": "getIpAddressesByHardware",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "typeArray": true,
                "doc": "This will return an arrayObject of objects containing the ipaddresses.  Using an string parameter you can send a partial ipaddress to search within a given ipaddress.  You can also set the max limit as well using the setting the resultLimit. ",
                "static": true,
                "limitable": true,
                "parameters": [
                    {
                        "name": "hardware",
                        "type": "SoftLayer_Hardware",
                        "doc": "The hardware object."
                    },
                    {
                        "name": "partialIpAddress",
                        "type": "string",
                        "doc": "A partial ipaddress is sent.",
                        "defaultValue": null
                    }
                ]
            },
            "getIpAddressesByVirtualGuest": {
                "name": "getIpAddressesByVirtualGuest",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "typeArray": true,
                "doc": "This will return an arrayObject of objects containing the ipaddresses.  Using an string parameter you can send a partial ipaddress to search within a given ipaddress.  You can also set the max limit as well using the setting the resultLimit. ",
                "static": true,
                "limitable": true,
                "parameters": [
                    {
                        "name": "guest",
                        "type": "SoftLayer_Virtual_Guest",
                        "doc": "The virtual guest object."
                    },
                    {
                        "name": "partialIpAddress",
                        "type": "string",
                        "doc": "A partial ipaddress is sent.",
                        "defaultValue": null
                    }
                ]
            }
        }
    },
    "SoftLayer_Network_Monitor_Version1_Incident": {
        "name": "SoftLayer_Network_Monitor_Version1_Incident",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Monitor_Version1_Incident data type models a single virtual server or physical hardware network monitoring event. SoftLayer_Network_Monitor_Version1_Incidents are created when the SoftLayer monitoring system detects a service down on your hardware of virtual server. As the incident is resolved it's status changes from \"SERVICE FAILURE\" to \"COMPLETED\". ",
        "properties": {
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "A network monitoring incident's status, either the string \"SERVICE FAILURE\" denoting an ongoing incident or \"COMPLETE\" meaning the incident has been resolved. "
            }
        }
    },
    "SoftLayer_Network_Monitor_Version1_Query_Host": {
        "name": "SoftLayer_Network_Monitor_Version1_Query_Host",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The Query_Host service is the core of the monitoring system.  Each instance of this service represents a monitoring instance.  Each monitoring instance consists of a hardware ID to monitor, an IP address attached to that hardware ID, a method of monitoring, and what to do in the instance that the monitor ever fails. \n\nThe monitoring services are scheduled jobs, and cannot be initiated by the user.  Simply creating the object is enough, the monitor will begin working in 5-10 minutes.  Deleting a monitor will immediately remove it from the monitoring queue.  Modifications will take effect in 5-10 minutes. \n\nIf the user wishes to be notified, or have other users on the account notified when a monitoring instance fails, a response type that includes \"notify users\" must be included on the query host object, and a SoftLayer_User_Customer_Notification_Hardware instance must be saved linking the desired users to the hardware being monitored.  In order for users to be notified, a SoftLayer_User_Customer_Notification_Hardware object MUST exist linking them to a hardware object, and a monitoring instance on that hardware object must be set to \"notify users\" ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                "doc": "Passing in an unsaved instances of a Query_Host object into this function will create the object and return the results to the user. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                        "doc": "The SoftLayer_Network_Monitor_Version1_Query_Host object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                "typeArray": true,
                "doc": "Passing in a collection of unsaved instances of Query_Host objects into this function will create all objects and return the results to the user. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Network_Monitor_Version1_Query_Host objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Like any other API object, the monitoring objects can be deleted by passing an instance of them into this function.  The ID on the object must be set. "
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Like any other API object, the monitoring objects can be deleted by passing an instance of them into this function.  The ID on the object must be set. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Network_Monitor_Version1_Query_Host objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Like any other API object, the monitoring objects can have their exposed properties edited by passing in a modified version of the object. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                        "doc": "A skeleton SoftLayer_Network_Monitor_Version1_Query_Host object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "doc": "Like any other API object, the monitoring objects can have their exposed properties edited by passing in a modified version of the object. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Network_Monitor_Version1_Query_Host objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "findByHardwareId": {
                "name": "findByHardwareId",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                "typeArray": true,
                "doc": "This method returns all Query_Host objects associated with the passed in hardware ID as long as that hardware ID is owned by the current user's account. \n\nThis behavior can also be accomplished by simply tapping networkMonitors on the Hardware_Server object. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "hardwareId",
                        "type": "int",
                        "doc": "The ID of the hardware to search by.",
                        "defaultValue": null
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                "doc": "getObject retrieves the SoftLayer_Network_Monitor_Version1_Query_Host object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Monitor_Version1_Query_Host service. You can only retrieve query hosts attached to hardware that belong to your account. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The Monitoring_Query_Host type represents a monitoring instance.  It consists of a hardware ID to monitor, an IP address attached to that hardware ID, a method of monitoring, and what to do in the instance that the monitor ever fails. ",
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware that is being monitored by this monitoring instance"
            },
            "lastResult": {
                "name": "lastResult",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Result",
                "form": "relational",
                "doc": "The most recent result for this particular monitoring instance."
            },
            "queryType": {
                "name": "queryType",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Type",
                "form": "relational",
                "doc": "The type of monitoring query that is executed when this hardware is monitored."
            },
            "responseAction": {
                "name": "responseAction",
                "type": "SoftLayer_Network_Monitor_Version1_Query_ResponseType",
                "form": "relational",
                "doc": "The action taken when a monitor fails."
            },
            "arg1Value": {
                "name": "arg1Value",
                "type": "string",
                "form": "local",
                "doc": "The argument to be used for this monitor, if necessary.  The lowest monitoring levels (like ping) ignore this setting, but higher levels like HTTP custom use it."
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "Virtual Guest Identification Number for the guest being monitored."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the hardware being monitored"
            },
            "hostId": {
                "name": "hostId",
                "type": "int",
                "form": "local",
                "doc": "Identification Number for the host being monitored."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this object"
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address to be monitored.  Must be attached to the hardware on this object"
            },
            "queryTypeId": {
                "name": "queryTypeId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the query type to use."
            },
            "responseActionId": {
                "name": "responseActionId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the response action to take when the monitor fails"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "The status of this monitoring instance.  Anything other than \"ON\" means that the monitor has been disabled"
            },
            "waitCycles": {
                "name": "waitCycles",
                "type": "int",
                "form": "local",
                "doc": "The number of 5-minute cycles to wait before the \"responseAction\" is taken.  If set to 0, the response action will be taken immediately"
            }
        }
    },
    "SoftLayer_Network_Monitor_Version1_Query_Host_Stratum": {
        "name": "SoftLayer_Network_Monitor_Version1_Query_Host_Stratum",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service is for reference only.  It can be changed by purchasing higher monitoring levels through the portal. ",
        "methods": {
            "getAllQueryTypes": {
                "name": "getAllQueryTypes",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Type",
                "typeArray": true,
                "doc": "Calling this function returns all possible query type objects. These objects are to be used to set the values on the SoftLayer_Network_Monitor_Version1_Query_Host when creating new monitoring instances. ",
                "static": true,
                "maskable": true
            },
            "getAllResponseTypes": {
                "name": "getAllResponseTypes",
                "type": "SoftLayer_Network_Monitor_Version1_Query_ResponseType",
                "typeArray": true,
                "doc": "Calling this function returns all possible response type objects. These objects are to be used to set the values on the SoftLayer_Network_Monitor_Version1_Query_Host when creating new monitoring instances. ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host_Stratum",
                "doc": "getObject retrieves the SoftLayer_Network_Monitor_Version1_Query_Host_Stratum object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Monitor_Version1_Query_Host_Stratum service. You can only retrieve strata attached to hardware that belong to your account. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The monitoring stratum type stores the maximum level of the various components of the monitoring system that a particular hardware object has access to.  This object cannot be accessed by ID, and cannot be modified. The user can access this object through Hardware_Server->availableMonitoring. \n\nThere are two values on this object that are important: \n# monitorLevel determines the highest level of SoftLayer_Network_Monitor_Version1_Query_Type object that can be placed in a monitoring instance on this server\n# responseLevel determines the highest level of SoftLayer_Network_Monitor_Version1_Query_ResponseType object that can be placed in a monitoring instance on this server\n\n\nAlso note that the query type and response types are available through getAllQueryTypes and getAllResponseTypes, respectively. ",
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware object that these monitoring permissions applies to."
            },
            "monitorLevel": {
                "name": "monitorLevel",
                "type": "int",
                "form": "local",
                "doc": "The highest level of a monitoring query type allowed on this server"
            },
            "responseLevel": {
                "name": "responseLevel",
                "type": "int",
                "form": "local",
                "doc": "The highest level of a monitoring response type allowed on this server"
            }
        }
    },
    "SoftLayer_Network_Monitor_Version1_Query_ResponseType": {
        "name": "SoftLayer_Network_Monitor_Version1_Query_ResponseType",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The ResponseType type stores only an ID and a description of the response type.  The only use for this object is in reference.  The user chooses a response action that would be appropriate for a monitoring instance, and sets the ResponseTypeId to the SoftLayer_Network_Monitor_Version1_Query_Host->responseActionId value. \n\nThe user can retrieve all available ResponseTypes with the getAllObjects method on this service. ",
        "properties": {
            "actionDescription": {
                "name": "actionDescription",
                "type": "string",
                "form": "local",
                "doc": "The description of the action the monitoring system will take on failure"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this object"
            },
            "level": {
                "name": "level",
                "type": "int",
                "form": "local",
                "doc": "The level of this response.  The level the customer has access to is determined by values in SoftLayer_Network_Monitor_Version1_Query_Host_Stratum"
            }
        }
    },
    "SoftLayer_Network_Monitor_Version1_Query_Result": {
        "name": "SoftLayer_Network_Monitor_Version1_Query_Result",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The monitoring result object is used to show the status of the actions taken by the monitoring system. \n\nIn general, only the responseStatus variable is needed, as it holds the information on the status of the service. ",
        "properties": {
            "queryHost": {
                "name": "queryHost",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                "form": "relational",
                "doc": "References the queryHost that this response relates to."
            },
            "finishTime": {
                "name": "finishTime",
                "type": "dateTime",
                "form": "local",
                "doc": "The timestamp of when this monitor was co"
            },
            "responseStatus": {
                "name": "responseStatus",
                "type": "int",
                "form": "local",
                "doc": "The response status for this server.  The response status meanings are: 0:  Down/Critical: Server is down and/or has passed the critical response threshold (extremely long ping response, abnormal behavior, etc.) 1:  Warning - Server may be recovering from a previous down state, or may have taken too long to respond 2:  Up 3:  Not used 4:  Unknown - An unknown error has occurred.  If the problem persists, contact support. 5:  Unknown - An unknown error has occurred.  If the problem persists, contact support. "
            },
            "responseTime": {
                "name": "responseTime",
                "type": "float",
                "form": "local",
                "doc": "The length of time it took the server to respond"
            }
        }
    },
    "SoftLayer_Network_Monitor_Version1_Query_Type": {
        "name": "SoftLayer_Network_Monitor_Version1_Query_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The MonitorType type stores a name, long description, and default arguments for the monitor types.  The only use for this object is in reference.  The user chooses a monitoring type that would be appropriate for their server, and sets the id of the Query_Type to SoftLayer_Network_Monitor_Version1_Query_Host->queryTypeId \n\nThe user can retrieve all available Query Types with the getAllObjects method on this service. ",
        "properties": {
            "argumentDescription": {
                "name": "argumentDescription",
                "type": "string",
                "form": "local",
                "doc": "The type of parameter sent to the monitoring command."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Long description of the monitoring type."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this object"
            },
            "monitorLevel": {
                "name": "monitorLevel",
                "type": "int",
                "form": "local",
                "doc": "The level of this monitoring type.  The level the customer has access to is determined by values in SoftLayer_Network_Monitor_Version1_Query_Host_Stratum"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Short name of the monitoring type"
            }
        }
    },
    "SoftLayer_Network_Pod": {
        "name": "SoftLayer_Network_Pod",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Network_Pod refers to a portion of a data center that share a Backend Customer Router (BCR) and usually a front-end counterpart known as a Frontend Customer Router (FCR). A Pod primarily denotes a logical location within the network and the physical aspects that support networks. This is in contrast to representing a specific physical location. \n\nA ``Pod`` is identified by a ``name``, which is unique. A Pod name follows the format 'dddnn.podii', where 'ddd' is a data center code, 'nn' is the data center number, 'pod' is a literal string and 'ii' is a two digit, left-zero- padded number which corresponds to a Backend Customer Router (BCR) of the desired data center. Examples: <ul> <li>dal09.pod01 = Dallas 9, Pod 1 (ie. bcr01)</li> <li>sjc01.pod04 = San Jose 1, Pod 4 (ie. bcr04)</li> <li>ams01.pod01 = Amsterdam 1, Pod 1 (ie. bcr01)</li> </ul> ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Pod",
                "typeArray": true,
                "doc": "Filtering is supported for ``datacenterName`` and ``capabilities``. When filtering on capabilities, use the ``in`` operation. Pods fulfilling all capabilities provided will be returned. ``datacenterName`` represents an operation against ``SoftLayer_Location_Datacenter.name`, such as dal05 when referring to Dallas 5. \n\n```Examples:``` \n\nList Pods in a specific datacenter. <pre> datacenterName.operation = 'dal06' </pre> \n\nList Pods in a geographical area. <pre> datacenterName.operation = '^= dal' </pre> \n\nList Pods in a region fulfilling capabilities. <pre> datacenterName.operation = '^= dal' capabilities.operation = 'in' capabilities.options = [ { name = data, value = [SOME_CAPABILITY, ANOTHER_CAPABILITY] } ] </pre> ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getCapabilities": {
                "name": "getCapabilities",
                "type": "string",
                "typeArray": true,
                "doc": "Provides the list of capabilities a Pod fulfills. See [[SoftLayer_Network_Pod/listCapabilities]] for more information on capabilities. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Pod",
                "doc": "Set the initialization parameter to the ``name`` of the Pod to retrieve. ",
                "maskable": true
            },
            "listCapabilities": {
                "name": "listCapabilities",
                "type": "string",
                "typeArray": true,
                "doc": "A capability is simply a string literal that denotes the availability of a feature. Capabilities are generally self describing, but any additional details concerning the implications of a capability will be documented elsewhere; usually by the Service or Operation related to it. ",
                "static": true
            }
        },
        "properties": {
            "backendRouterId": {
                "name": "backendRouterId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for this Pod's Backend Customer Router (BCR)"
            },
            "backendRouterName": {
                "name": "backendRouterName",
                "type": "string",
                "form": "local",
                "doc": "Host name of Pod's Backend Customer Router (BCR), e.g. bcr01a.dal09"
            },
            "capabilities": {
                "name": "capabilities",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "Property providing a means to filter Pods based on available capabitilies. See [[SoftLayer_Network_Pod/getAllObjects]] to filter for Pods with specific capabilities. See [[SoftLayer_Network_Pod/getCapabilities]] to retrieve capabilities of a specific Pod. "
            },
            "datacenterId": {
                "name": "datacenterId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for the Data Center the Pod resides within"
            },
            "datacenterLongName": {
                "name": "datacenterLongName",
                "type": "string",
                "form": "local",
                "doc": "Long form name of the data center in which this Pod resides, e.g. Dallas 9"
            },
            "datacenterName": {
                "name": "datacenterName",
                "type": "string",
                "form": "local",
                "doc": "Name of data center in which this Pod resides, e.g. dal09"
            },
            "frontendRouterId": {
                "name": "frontendRouterId",
                "type": "int",
                "form": "local",
                "doc": "(optional) Identifier for this Pod's Frontend Customer Router (FCR)"
            },
            "frontendRouterName": {
                "name": "frontendRouterName",
                "type": "string",
                "form": "local",
                "doc": "(optional) Host name of Pod's Frontend Customer Router (FCR), e.g. fcr01a.dal09"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The unique name of the Pod. See [[SoftLayer_Network_Pod (type)]] for details of the name's construction. "
            }
        }
    },
    "SoftLayer_Network_Protection_Address": {
        "name": "SoftLayer_Network_Protection_Address",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "modifiedUser": {
                "name": "modifiedUser",
                "type": "SoftLayer_User_Employee",
                "form": "relational"
            },
            "primaryRouter": {
                "name": "primaryRouter",
                "type": "SoftLayer_Hardware_Router",
                "form": "relational"
            },
            "serviceProvider": {
                "name": "serviceProvider",
                "type": "SoftLayer_Service_Provider",
                "form": "relational",
                "doc": "DEPRECATED"
            },
            "subnet": {
                "name": "subnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational"
            },
            "subnetIpAddress": {
                "name": "subnetIpAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational"
            },
            "terminatedUser": {
                "name": "terminatedUser",
                "type": "SoftLayer_User_Employee",
                "form": "relational"
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational"
            },
            "transactions": {
                "name": "transactions",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "typeArray": true
            },
            "userDepartment": {
                "name": "userDepartment",
                "type": "SoftLayer_User_Employee_Department",
                "form": "relational"
            },
            "userRecord": {
                "name": "userRecord",
                "type": "SoftLayer_User_Employee",
                "form": "relational"
            },
            "departmentId": {
                "name": "departmentId",
                "type": "int",
                "form": "local"
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local"
            },
            "managementMethodType": {
                "name": "managementMethodType",
                "type": "string",
                "form": "local"
            },
            "transactionCount": {
                "name": "transactionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Regional_Internet_Registry": {
        "name": "SoftLayer_Network_Regional_Internet_Registry",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Regional Internet Registries are the organizations who delegate IP address blocks to other groups or organizations around the Internet. The information contained in this data type is used throughout the networking-related services in our systems. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID of the object "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The system-level name of the registry "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly name of the registry "
            }
        }
    },
    "SoftLayer_Network_Security_Scanner_Request": {
        "name": "SoftLayer_Network_Security_Scanner_Request",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer gives customers the ability to manage vulnerability scans for each of their servers.  This service provides the ability to create a new scan request, view the status of a current request, and finally view the report of a finished scan. \n\nA vulnerability scan attempts to find potential security problems on a server by first searching for open ports and the services that run on them.  If any services are found the scanner will then check for version and patch information of each service found.  Lastly, the scanner will use the information gathered to search its database of known vulnerabilities and generate a report. Reports typically take five to ten minutes to run but allow for up to thirty minutes in rare cases. \n\nA vulnerability report will typically include the following information: \n*Number of security holes and warnings.\n*The hosts that were scanned.\n*The port/service and the corresponding issue.\n*Detailed information about the issue, risk factor, and possible fixes.\n\n\nIf you have a firewall, SoftLayer's administrative networks need to be allowed for the vulnerability scan to be effective.  If a firewall is blocking all ports, the report may not show any problems even if some exist.  In addition you may have some indication in your firewall logs of the scan taking place as ports on your system are investigated. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Security_Scanner_Request",
                "doc": "Create a new vulnerability scan request. New scan requests are picked up every five minutes, and the time to complete an actual scan may vary. Once the scan is finished, it can take up to another five minutes for the report to be generated and accessible. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Security_Scanner_Request",
                        "doc": "The SoftLayer_Network_Security_Scanner_Request object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Security_Scanner_Request",
                "doc": "getObject retrieves the SoftLayer_Network_Security_Scanner_Request object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Security_Scanner_Request service. You can only retrieve requests and reports that are assigned to your SoftLayer account. ",
                "filterable": true,
                "maskable": true
            },
            "getReport": {
                "name": "getReport",
                "type": "string",
                "doc": "Get the vulnerability report for a scan request, formatted as HTML string. Previous scan reports are held indefinitely. "
            }
        },
        "typeDoc": "The SoftLayer_Network_Security_Scanner_Request data type represents a single vulnerability scan request. It provides information on when the scan was created, last updated, and the current status. The status messages are as follows: \n*Scan Pending\n*Scan Processing\n*Scan Complete\n*Scan Cancelled\n*Generating Report.",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account associated with a security scan request."
            },
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The virtual guest a security scan is run against."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware a security scan is run against."
            },
            "requestorOwnedFlag": {
                "name": "requestorOwnedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Flag whether the requestor owns the hardware the scan was run on. This flag will  return for hardware servers only, virtual servers will result in a null return even if you have  a request out for them."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Network_Security_Scanner_Request_Status",
                "form": "relational",
                "doc": "A security scan request's status."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A request's associated customer account identifier."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time that the request is created."
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "Virtual Guest Identification Number for the guest this security scanner request belongs to."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the hardware item a scan is run on."
            },
            "hostId": {
                "name": "hostId",
                "type": "int",
                "form": "local",
                "doc": "Identification Number for the host this security scanner request belongs to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A security scan request's internal identifier."
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address that a scan will be performed on."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time that the request was last modified."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "A request status identifier."
            }
        }
    },
    "SoftLayer_Network_Security_Scanner_Request_Status": {
        "name": "SoftLayer_Network_Security_Scanner_Request_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Security_Scanner_Request_Status data type represents the current status of a vulnerability scan. The status messages are as follows: \n*Scan Pending\n*Scan Processing\n*Scan Complete\n*Scan Cancelled\n*Generating Report.\n\n\nThe status of a vulnerability scan will change over the course of a scan's execution. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The identifier of a vulnerability scan's status."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The status message of a vulnerability scan."
            }
        }
    },
    "SoftLayer_Network_SecurityGroup": {
        "name": "SoftLayer_Network_SecurityGroup",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The Security Group service provides a common interface to interact with an account's security groups, their rules, and virtual guest instances associated with the groups. A security group contains a set of IP filter rules that define how to handle incoming (ingress) and outgoing (egress) traffic to both the public and private interfaces of a virtual server instance. The rules that you add to a security group are known as [[SoftLayer_Network_SecurityGroup_Rule (type)|security group rules]]. Security groups can be assigned to one or more virtual servers by attaching virtual guest network components through [[SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding (type)|bindings]]. \n\nAdditional information can be found in IBM Cloud Docs and SoftLayer API Examples https://console.bluemix.net/docs/infrastructure/security-groups/sg_index.html https://softlayer.github.io/classes/softlayer_network_securitygroup/ ",
        "methods": {
            "addRules": {
                "name": "addRules",
                "type": "SoftLayer_Network_SecurityGroup_RequestRules",
                "doc": "Add new rules to a security group by sending in an array of template [[SoftLayer_Network_SecurityGroup_Rule (type)]] objects to be created. ",
                "parameters": [
                    {
                        "name": "ruleTemplates",
                        "type": "SoftLayer_Network_SecurityGroup_Rule",
                        "typeArray": true,
                        "doc": "An array of rule objects you want to create"
                    }
                ]
            },
            "attachNetworkComponents": {
                "name": "attachNetworkComponents",
                "type": "SoftLayer_Network_SecurityGroup_Request",
                "doc": "Attach virtual guest network components to a security group by creating [[SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding (type)]] objects. ",
                "parameters": [
                    {
                        "name": "networkComponentIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Virtual_Guest_Network_Component IDs for components you want to attach"
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_SecurityGroup",
                "doc": "Create a new security group.",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_SecurityGroup",
                        "doc": "The SoftLayer_Network_SecurityGroup object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Network_SecurityGroup",
                "typeArray": true,
                "doc": "Create new security groups.",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_SecurityGroup",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Network_SecurityGroup objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a security group for an account. A security group cannot be deleted if any network components are attached or if the security group is a remote security group for a [[SoftLayer_Network_SecurityGroup_Rule (type)|rule]]. "
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Delete security groups for an account. A security group cannot be deleted if any network components are attached or if the security group is a remote security group for a [[SoftLayer_Network_SecurityGroup_Rule (type)|rule]]. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_SecurityGroup",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Network_SecurityGroup objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "detachNetworkComponents": {
                "name": "detachNetworkComponents",
                "type": "SoftLayer_Network_SecurityGroup_Request",
                "doc": "Detach virtual guest network components from a security group by deleting its [[SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding (type)]]. ",
                "parameters": [
                    {
                        "name": "networkComponentIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Virtual_Guest_Network_Component IDs for components you want to detach"
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit a security group.",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_SecurityGroup",
                        "doc": "A skeleton SoftLayer_Network_SecurityGroup object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "doc": "Edit security groups.",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_SecurityGroup",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Network_SecurityGroup objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editRules": {
                "name": "editRules",
                "type": "SoftLayer_Network_SecurityGroup_RequestRules",
                "doc": "Edit rules that belong to the security group. An array of skeleton [[SoftLayer_Network_SecurityGroup_Rule]] objects must be sent in with only the properties defined that you want to change. To edit a property to null, send in -1 for integer properties and \"\" for string properties. Unchanged properties are left alone. ",
                "parameters": [
                    {
                        "name": "ruleTemplates",
                        "type": "SoftLayer_Network_SecurityGroup_Rule",
                        "typeArray": true,
                        "doc": "An array of rule objects"
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_SecurityGroup",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getLimits": {
                "name": "getLimits",
                "type": "SoftLayer_Container_Network_SecurityGroup_Limit",
                "typeArray": true,
                "doc": "List the current security group limits ",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_SecurityGroup",
                "filterable": true,
                "maskable": true
            },
            "getSupportedDataCenters": {
                "name": "getSupportedDataCenters",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "List the data centers that currently support the use of security groups. ",
                "static": true,
                "maskable": true
            },
            "removeRules": {
                "name": "removeRules",
                "type": "SoftLayer_Network_SecurityGroup_RequestRules",
                "doc": "Remove rules from a security group.",
                "parameters": [
                    {
                        "name": "ruleIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Network_SecurityGroup_Rule IDs for rules you want to delete"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_SecurityGroup data type contains general information for a single security group. A security group contains a set of IP filter [[SoftLayer_Network_SecurityGroup_Rule (type)|rules]] that define how to handle incoming (ingress) and outgoing (egress) traffic to both the public and private interfaces of a virtual server instance and a set of [[SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding (type)|bindings]] to associate virtual guest network components with the security group. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account this security group belongs to."
            },
            "networkComponentBindings": {
                "name": "networkComponentBindings",
                "type": "SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding",
                "form": "relational",
                "typeArray": true,
                "doc": "The network component bindings for this security group."
            },
            "orderBindings": {
                "name": "orderBindings",
                "type": "SoftLayer_Network_SecurityGroup_OrderBinding",
                "form": "relational",
                "typeArray": true,
                "doc": "The order bindings for this security group"
            },
            "rules": {
                "name": "rules",
                "type": "SoftLayer_Network_SecurityGroup_Rule",
                "form": "relational",
                "typeArray": true,
                "doc": "The rules for this security group."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a security group was created."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The (optional) description for a security group."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique ID for a security group."
            },
            "metadata": {
                "name": "metadata",
                "type": "string",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a security group was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The (optional) name for a security group."
            },
            "networkComponentBindingCount": {
                "name": "networkComponentBindingCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the network component bindings for this security group."
            },
            "orderBindingCount": {
                "name": "orderBindingCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the order bindings for this security group"
            },
            "ruleCount": {
                "name": "ruleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the rules for this security group."
            }
        }
    },
    "SoftLayer_Network_SecurityGroup_OrderBinding": {
        "name": "SoftLayer_Network_SecurityGroup_OrderBinding",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_SecurityGroup_OrderBinding data type contains links between security groups and product orders. ",
        "properties": {
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The virtual guest associated with the binding"
            },
            "order": {
                "name": "order",
                "type": "SoftLayer_Billing_Order",
                "form": "relational",
                "doc": "The order associated with the binding"
            },
            "securityGroup": {
                "name": "securityGroup",
                "type": "SoftLayer_Network_SecurityGroup",
                "form": "relational",
                "doc": "The security group associated with the order"
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the Virtual Guest associated with the security group."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique ID for a security group, order, binding"
            },
            "orderId": {
                "name": "orderId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the order associated with the security group."
            },
            "securityGroupId": {
                "name": "securityGroupId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the security group that is associated with the order."
            }
        }
    },
    "SoftLayer_Network_SecurityGroup_Request": {
        "name": "SoftLayer_Network_SecurityGroup_Request",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_SecurityGroup_Request data type contains the ID of a specific request sent to the API. This ID is used to identify specific calls to attach and detach network components, as well as add, edit, and remove security group rules. ",
        "properties": {
            "requestId": {
                "name": "requestId",
                "type": "string",
                "form": "local",
                "doc": "The unique ID for a request."
            }
        }
    },
    "SoftLayer_Network_SecurityGroup_RequestRules": {
        "name": "SoftLayer_Network_SecurityGroup_RequestRules",
        "base": "SoftLayer_Network_SecurityGroup_Request",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_SecurityGroup_RequestRules data type contains the ID of a specific request sent to the API, as well as an associative array of the rules that were created, edited, or removed by the request. ",
        "properties": {
            "rules": {
                "name": "rules",
                "type": "SoftLayer_Network_SecurityGroup_Rule",
                "form": "local",
                "typeArray": true,
                "doc": "Whether the API call was valid or not."
            }
        }
    },
    "SoftLayer_Network_SecurityGroup_Rule": {
        "name": "SoftLayer_Network_SecurityGroup_Rule",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_SecurityGroup_Rule data type contains general information for a single rule that belongs to a [[SoftLayer_Network_SecurityGroup|security group]]. By default, all traffic (both inbound and\u2028 outbound) to a virtual server instance is blocked. Security group rules are permissive, and define the allowed incoming (ingress) and outgoing (egress) traffic to both the public and private interfaces of a\u2028 virtual server instance. The order of rules within a security group does not matter and priority always falls to the least restrictive rule. ",
        "properties": {
            "remoteGroup": {
                "name": "remoteGroup",
                "type": "SoftLayer_Network_SecurityGroup",
                "form": "relational",
                "doc": "The remote security group allowed as part of this rule."
            },
            "securityGroup": {
                "name": "securityGroup",
                "type": "SoftLayer_Network_SecurityGroup",
                "form": "relational",
                "doc": "The security group of this rule."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The createDate field for a rule. It is essentially the date and time that the security group rule was created."
            },
            "direction": {
                "name": "direction",
                "type": "string",
                "form": "local",
                "doc": "The direction of traffic (ingress or egress)."
            },
            "ethertype": {
                "name": "ethertype",
                "type": "string",
                "form": "local",
                "doc": "IPv4 or IPv6. If the remoteIp or ethertype properties are not specified, the default is IPv4. Otherwise ethertype will default based on the format of the specified remoteIp. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique ID for a rule."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The modifyDate field for a rule. It is essentially the date and time that the security group rule was last changed."
            },
            "portRangeMax": {
                "name": "portRangeMax",
                "type": "int",
                "form": "local",
                "doc": "The end of the port range for allowed traffic.  When the protocol is icmp, this value specifies the icmp code to permit.  When icmp code is specified, icmp type is required. When the protocol is vrrp, ports cannot be specified. "
            },
            "portRangeMin": {
                "name": "portRangeMin",
                "type": "int",
                "form": "local",
                "doc": "The start of the port range for allowed traffic.  When the protocol is icmp, this value specifies the icmp type to permit. "
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "The protocol of packets (icmp, tcp, udp, or vrrp)."
            },
            "remoteGroupId": {
                "name": "remoteGroupId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the remote security group allowed as part of the rule. This property is mutually exclusive with the remoteIp property. "
            },
            "remoteIp": {
                "name": "remoteIp",
                "type": "string",
                "form": "local",
                "doc": "CIDR or IP address for allowed connections. This property is mutually exclusive with the remoteGroupId property. When the protocol is vrrp, ports cannot be specified. "
            },
            "securityGroupId": {
                "name": "securityGroupId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the security group that owns the rule."
            }
        }
    },
    "SoftLayer_Network_Service_Health": {
        "name": "SoftLayer_Network_Service_Health",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Many general services that SoftLayer provides are tracked on the customer portal with a quick status message. These status message provide users with a quick reference to the health of a service, whether it's up or down. These services include SoftLayer's Internet backbone connections, VPN entry points, and router networks. The SoftLayer_Network_Service_Health data type provides the relationship between these services and their health status. ",
        "properties": {
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "A service's location."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Network_Service_Health_Status",
                "form": "relational",
                "doc": "The status portion of a service/status relationship."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a service's status was created."
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "A service's location identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a service's status was last changed."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "A service's status identifier."
            }
        }
    },
    "SoftLayer_Network_Service_Health_Status": {
        "name": "SoftLayer_Network_Service_Health_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Many general services that SoftLayer provides are marked by a status message. These health messages give portal users a quick way of determining the state of a SoftLayer service. Services range from backbones to VPN endpoints and routers. Generally a health status is either \"Up\" or \"Down\". ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The status of a SoftLayer service. This is typically \"Up\" or \"Down\"."
            }
        }
    },
    "SoftLayer_Network_Service_Resource": {
        "name": "SoftLayer_Network_Service_Resource",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Service_Resource is used to store information related to a service.  It is used for determining the correct resource to connect to for a given service, like NAS, Evault, etc. ",
        "properties": {
            "apiHost": {
                "name": "apiHost",
                "type": "string",
                "form": "relational"
            },
            "apiPassword": {
                "name": "apiPassword",
                "type": "string",
                "form": "relational"
            },
            "apiPath": {
                "name": "apiPath",
                "type": "string",
                "form": "relational"
            },
            "apiPort": {
                "name": "apiPort",
                "type": "string",
                "form": "relational"
            },
            "apiProtocol": {
                "name": "apiProtocol",
                "type": "string",
                "form": "relational"
            },
            "apiUsername": {
                "name": "apiUsername",
                "type": "string",
                "form": "relational"
            },
            "apiVersion": {
                "name": "apiVersion",
                "type": "string",
                "form": "relational"
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Network_Service_Resource_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "netappVolumeName": {
                "name": "netappVolumeName",
                "type": "string",
                "form": "relational"
            },
            "networkDevice": {
                "name": "networkDevice",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware information associated with this resource."
            },
            "sshUsername": {
                "name": "sshUsername",
                "type": "string",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Service_Resource_Type",
                "form": "relational",
                "doc": "The network information associated with this resource."
            },
            "backendIpAddress": {
                "name": "backendIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The backend IP address for this resource "
            },
            "frontendIpAddress": {
                "name": "frontendIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The frontend IP address for this resource "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name associated with this resource "
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Service_Resource_Attribute": {
        "name": "SoftLayer_Network_Service_Resource_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "attributeType": {
                "name": "attributeType",
                "type": "SoftLayer_Network_Service_Resource_Attribute_Type",
                "form": "relational"
            },
            "serviceResource": {
                "name": "serviceResource",
                "type": "SoftLayer_Network_Service_Resource",
                "form": "relational"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Service_Resource_Attribute_Type": {
        "name": "SoftLayer_Network_Service_Resource_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Service_Resource_CosStor": {
        "name": "SoftLayer_Network_Service_Resource_CosStor",
        "base": "SoftLayer_Network_Service_Resource",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Service_Resource_CosStor is used to store information related to COS service. "
    },
    "SoftLayer_Network_Service_Resource_Hub": {
        "name": "SoftLayer_Network_Service_Resource_Hub",
        "base": "SoftLayer_Network_Service_Resource",
        "noservice": true
    },
    "SoftLayer_Network_Service_Resource_Hub_Swift": {
        "name": "SoftLayer_Network_Service_Resource_Hub_Swift",
        "base": "SoftLayer_Network_Service_Resource_Hub",
        "noservice": true
    },
    "SoftLayer_Network_Service_Resource_Type": {
        "name": "SoftLayer_Network_Service_Resource_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "serviceResources": {
                "name": "serviceResources",
                "type": "SoftLayer_Network_Service_Resource",
                "form": "relational",
                "typeArray": true
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local"
            },
            "serviceResourceCount": {
                "name": "serviceResourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Service_Vpn_Overrides": {
        "name": "SoftLayer_Network_Service_Vpn_Overrides",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Use to manually decide which subnets within your virtual private address space a SoftLayer portal VPN user may access.  Stores a 'white list' consisting of a collection of subnet ids matched up against user ids. This class will reject any subnets or users, that don't belong to the account holder.  Note that simply assigning overrides to a user does not enforce the rule change.  You must set the manual override flag for the VPN user in the SoftLayer_User_Customer class.  It is recommended that before you create new VPN subnet overrides, you delete any old ones for a user, since the VPN authentication system limits the number of accessible subnets by a single user to sixty four.  This holds true regardless of whether the VPN user accesses the network via SSL or PPTP.  After making any changes to a user's VPN settings, you should call SoftLayer_User_Customer::updateVpnUser() on that customer object. \n\n",
        "methods": {
            "createObjects": {
                "name": "createObjects",
                "type": "boolean",
                "doc": "Create Softlayer portal user VPN overrides. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Service_Vpn_Overrides",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Network_Service_Vpn_Overrides objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Use this method to delete a single SoftLayer portal VPN user subnet override. "
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Use this method to delete a collection of SoftLayer portal VPN user subnet overrides. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Service_Vpn_Overrides",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Network_Service_Vpn_Overrides objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Service_Vpn_Overrides",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Service_Vpn_Overrides data type contains information relating user ids to subnet ids when VPN access is manually configured.  It is essentially an entry in a 'white list' of subnets a SoftLayer portal VPN user may access. ",
        "properties": {
            "subnet": {
                "name": "subnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "Subnet components accessible by a SoftLayer VPN portal user."
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "SoftLayer VPN portal user."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the record."
            },
            "subnetId": {
                "name": "subnetId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of a subnet accessible by the SoftLayer portal VPN user."
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the SoftLayer portal VPN user."
            }
        }
    },
    "SoftLayer_Network_Storage": {
        "name": "SoftLayer_Network_Storage",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer customers may have a Storage volume associated with their account. Storage types include NAS, Lockbox, iSCSI, EVault backup, and Hub cloud storage. Information such as the account the Storage volume is associated to, username and password to access the Storage volume, related server (EVault only) and the capacity used are some of the details that may be retrieved using this service. Information regarding the Storage's resource that is useful in reconfiguring and mounting a StorageLayer volume may also be retrieved from this service. \n\nFor the EVault Storage services, the username and passwords in the SoftLayer_Network_Storage services are used to register the EVault server agent with the vault. Please see the [[SoftLayer_Account_Password]] service to edit the passwords and notes for the EVault Webcc tool. ",
        "methods": {
            "allowAccessFromHardware": {
                "name": "allowAccessFromHardware",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Hardware objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplate",
                        "type": "SoftLayer_Hardware"
                    }
                ]
            },
            "allowAccessFromHardwareList": {
                "name": "allowAccessFromHardwareList",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplates",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessFromHost": {
                "name": "allowAccessFromHost",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "doc": "This method is used to modify the access control list for this Storage volume.  The [[SoftLayer_Hardware|SoftLayer_Virtual_Guest|SoftLayer_Network_Subnet|SoftLayer_Network_Subnet_IpAddress]] objects which have been allowed access to this storage will be listed in the [[allowedHardware|allowedVirtualGuests|allowedSubnets|allowedIpAddresses]] property of this storage volume. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "typeClassName",
                        "type": "string",
                        "doc": "The type of class name, among: 'SoftLayer_Hardware', 'SoftLayer_Virtual_Guest', 'SoftLayer_Network_Subnet', 'SoftLayer_Network_Subnet_IpAddress'."
                    },
                    {
                        "name": "hostId",
                        "type": "int"
                    }
                ]
            },
            "allowAccessFromHostList": {
                "name": "allowAccessFromHostList",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "typeArray": true,
                "doc": "This method is used to modify the access control list for this Storage volume.  The [[SoftLayer_Hardware|SoftLayer_Virtual_Guest|SoftLayer_Network_Subnet|SoftLayer_Network_Subnet_IpAddress]] objects which have been allowed access to this storage volume will be listed in the [[allowedHardware|allowedVirtualGuests|allowedSubnets|allowedIpAddresses]] property of this storage volume. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "hostObjectTemplates",
                        "type": "SoftLayer_Container_Network_Storage_Host",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessFromIpAddress": {
                "name": "allowAccessFromIpAddress",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Network_Subnet_IpAddress objects which have been allowed access to this storage will be listed in the allowedIpAddresses property of this storage volume. ",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplate",
                        "type": "SoftLayer_Network_Subnet_IpAddress"
                    }
                ]
            },
            "allowAccessFromIpAddressList": {
                "name": "allowAccessFromIpAddressList",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplates",
                        "type": "SoftLayer_Network_Subnet_IpAddress",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessFromSubnet": {
                "name": "allowAccessFromSubnet",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Network_Subnet objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage volume. ",
                "parameters": [
                    {
                        "name": "subnetObjectTemplate",
                        "type": "SoftLayer_Network_Subnet"
                    }
                ]
            },
            "allowAccessFromSubnetList": {
                "name": "allowAccessFromSubnetList",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "subnetObjectTemplates",
                        "type": "SoftLayer_Network_Subnet",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessFromVirtualGuest": {
                "name": "allowAccessFromVirtualGuest",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplate",
                        "type": "SoftLayer_Virtual_Guest"
                    }
                ]
            },
            "allowAccessFromVirtualGuestList": {
                "name": "allowAccessFromVirtualGuestList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplates",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessToReplicantFromHardware": {
                "name": "allowAccessToReplicantFromHardware",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage replicant volume.  The SoftLayer_Hardware objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage replicant volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplate",
                        "type": "SoftLayer_Hardware"
                    }
                ]
            },
            "allowAccessToReplicantFromHardwareList": {
                "name": "allowAccessToReplicantFromHardwareList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume's replica.  The SoftLayer_Hardware objects which have been allowed access to this storage volume's replica will be listed in the allowedReplicationHardware property of this storage volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplates",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessToReplicantFromIpAddress": {
                "name": "allowAccessToReplicantFromIpAddress",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplate",
                        "type": "SoftLayer_Network_Subnet_IpAddress"
                    }
                ]
            },
            "allowAccessToReplicantFromIpAddressList": {
                "name": "allowAccessToReplicantFromIpAddressList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume's replica.  The SoftLayer_Network_Subnet_IpAddress objects which have been allowed access to this storage volume's replica will be listed in the allowedReplicationIpAddresses property of this storage volume. ",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplates",
                        "type": "SoftLayer_Network_Subnet_IpAddress",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessToReplicantFromSubnet": {
                "name": "allowAccessToReplicantFromSubnet",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage replicant volume.  The SoftLayer_Network_Subnet objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage replicant volume. ",
                "parameters": [
                    {
                        "name": "subnetObjectTemplate",
                        "type": "SoftLayer_Network_Subnet"
                    }
                ]
            },
            "allowAccessToReplicantFromSubnetList": {
                "name": "allowAccessToReplicantFromSubnetList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume's replica.  The SoftLayer_Network_Subnet objects which have been allowed access to this storage volume's replica will be listed in the allowedReplicationSubnets property of this storage volume. ",
                "parameters": [
                    {
                        "name": "subnetObjectTemplates",
                        "type": "SoftLayer_Network_Subnet",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessToReplicantFromVirtualGuest": {
                "name": "allowAccessToReplicantFromVirtualGuest",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage replicant volume.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage replicant volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplate",
                        "type": "SoftLayer_Virtual_Guest"
                    }
                ]
            },
            "allowAccessToReplicantFromVirtualGuestList": {
                "name": "allowAccessToReplicantFromVirtualGuestList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume's replica.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage volume's replica will be listed in the allowedReplicationVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplates",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true
                    }
                ]
            },
            "assignCredential": {
                "name": "assignCredential",
                "type": "boolean",
                "doc": "This method will assign an existing credential to the current volume. The credential must have been created using the 'addNewCredential' method. The volume type must support an additional credential. ",
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "A username assigned to a different volume."
                    }
                ]
            },
            "assignNewCredential": {
                "name": "assignNewCredential",
                "type": "SoftLayer_Network_Storage_Credential",
                "doc": "This method will set up a new credential for the remote storage volume. The storage volume must support an additional credential. Once created, the credential will be automatically assigned to the current volume. If there are no volumes assigned to the credential it will be automatically deleted. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "The type of credential you would like to add to your storage volume, it must be an approved credential type (current types are: 'ISCSI_MASTER_KEY')",
                        "defaultValue": null
                    }
                ]
            },
            "changePassword": {
                "name": "changePassword",
                "type": "boolean",
                "doc": "The method will change the password for the given Storage/Virtual Server Storage account. ",
                "static": true,
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "Username of the Storage/Virtual Server Storage account to apply the password change to",
                        "defaultValue": null
                    },
                    {
                        "name": "currentPassword",
                        "type": "string",
                        "doc": "The current password for the account",
                        "defaultValue": null
                    },
                    {
                        "name": "newPassword",
                        "type": "string",
                        "doc": "New Password for Storage/Virtual Server account",
                        "defaultValue": null
                    }
                ]
            },
            "collectBandwidth": {
                "name": "collectBandwidth",
                "type": "unsignedLong",
                "doc": "{{CloudLayerOnlyMethod}} \n\ncollectBandwidth() Retrieve the bandwidth usage for the current billing cycle. ",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "The bandwidth type to collect usage for (upload, download)",
                        "defaultValue": "download"
                    },
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The starting date of the range of data you wish to collect.",
                        "defaultValue": null
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The ending date of the range of data you wish to collect.",
                        "defaultValue": null
                    }
                ]
            },
            "collectBytesUsed": {
                "name": "collectBytesUsed",
                "type": "unsignedLong",
                "doc": "{{CloudLayerOnlyMethod}} \n\ncollectBytesUsed() retrieves the number of bytes capacity currently in use on a Storage account. "
            },
            "convertCloneDependentToIndependent": {
                "name": "convertCloneDependentToIndependent",
                "type": "boolean"
            },
            "createFolder": {
                "name": "createFolder",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "folder",
                        "type": "string"
                    }
                ]
            },
            "createOrUpdateLunId": {
                "name": "createOrUpdateLunId",
                "type": "SoftLayer_Network_Storage_Property",
                "doc": "The LUN ID only takes effect during the Host Authorization process. It is required to de-authorize all hosts before using this method. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "lunId",
                        "type": "int",
                        "doc": "<<< EOT"
                    }
                ]
            },
            "createSnapshot": {
                "name": "createSnapshot",
                "type": "SoftLayer_Network_Storage",
                "maskable": true,
                "parameters": [
                    {
                        "name": "notes",
                        "type": "string"
                    }
                ]
            },
            "deleteAllFiles": {
                "name": "deleteAllFiles",
                "type": "boolean",
                "doc": "{{CloudLayerOnlyMethod}} Delete all files within a Storage account. Depending on the type of Storage account, Deleting either deletes files permanently or sends files to your account's recycle bin. \n\nCurrently, Virtual Server storage is the only type of Storage account that sends files to a recycle bin when deleted. When called against a Virtual Server storage account , this method also determines if the files are in the account's recycle bin. If the files exist in the recycle bin, then they are permanently deleted. \n\nPlease note, files can not be restored once they are permanently deleted. "
            },
            "deleteFile": {
                "name": "deleteFile",
                "type": "boolean",
                "doc": "{{CloudLayerOnlyMethod}} Delete an individual file within a Storage account. Depending on the type of Storage account, Deleting a file either deletes the file permanently or sends the file to your account's recycle bin. \n\nCurrently, Virtual Server storage is the only type of Storage account that sends files to a recycle bin when deleted. When called against a Virtual Server storage account , this method also determines if the file is in the account's recycle bin. If the file exist in the recycle bin, then it is permanently deleted. \n\nPlease note, a file can not be restored once it is permanently deleted. ",
                "parameters": [
                    {
                        "name": "fileId",
                        "type": "string",
                        "doc": "The id or guid of the file you wish to delete."
                    }
                ]
            },
            "deleteFiles": {
                "name": "deleteFiles",
                "type": "boolean",
                "doc": "{{CloudLayerOnlyMethod}} Delete multiple files within a Storage account. Depending on the type of Storage account, Deleting either deletes files permanently or sends files to your account's recycle bin. \n\nCurrently, Virtual Server storage is the only type of Storage account that sends files to a recycle bin when deleted. When called against a Virtual Server storage account , this method also determines if the files are in the account's recycle bin. If the files exist in the recycle bin, then they are permanently deleted. \n\nPlease note, files can not be restored once they are permanently deleted. ",
                "parameters": [
                    {
                        "name": "fileIds",
                        "type": "string",
                        "typeArray": true,
                        "doc": "The id or guids of the files you wish to delete.",
                        "defaultValue": []
                    }
                ]
            },
            "deleteFolder": {
                "name": "deleteFolder",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "folder",
                        "type": "string"
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a network storage volume. '''This cannot be undone.''' At this time only network storage snapshots may be deleted with this method. \n\n''deleteObject'' returns Boolean ''true'' on successful deletion or ''false'' if it was unable to remove a volume; "
            },
            "disableSnapshots": {
                "name": "disableSnapshots",
                "type": "boolean",
                "doc": "This method is not valid for Legacy iSCSI Storage Volumes. \n\nDisable scheduled snapshots of this storage volume. Scheduling options include 'INTERVAL', HOURLY, DAILY and WEEKLY schedules. ",
                "parameters": [
                    {
                        "name": "scheduleType",
                        "type": "string",
                        "doc": "The type of schedule, among: 'INTERVAL', 'HOURLY', 'DAILY', 'WEEKLY'."
                    }
                ]
            },
            "disasterRecoveryFailoverToReplicant": {
                "name": "disasterRecoveryFailoverToReplicant",
                "type": "boolean",
                "doc": "If a volume (with replication) becomes inaccessible due to a disaster event, this method can be used to immediately failover to an available replica in another location. This method does not allow for fail back via the API. To fail back to the original volume after using this method, open a support ticket. To test failover, use [[SoftLayer_Network_Storage::failoverToReplicant]] instead. ",
                "parameters": [
                    {
                        "name": "replicantId",
                        "type": "int",
                        "doc": "Replicant ID to failover to"
                    }
                ]
            },
            "downloadFile": {
                "name": "downloadFile",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "doc": "{{CloudLayerOnlyMethod}} Download a file from a Storage account. This method returns a file's details including the file's raw content. ",
                "parameters": [
                    {
                        "name": "fileId",
                        "type": "string",
                        "doc": "The id or guid of the file you wish to download."
                    }
                ]
            },
            "editCredential": {
                "name": "editCredential",
                "type": "boolean",
                "doc": "This method will change the password of a credential created using the 'addNewCredential' method. If the credential exists on multiple storage volumes it will change for those volumes as well. ",
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "A username assigned to the current volume"
                    },
                    {
                        "name": "newPassword",
                        "type": "string",
                        "doc": "The new password you would like the username to have.",
                        "defaultValue": null
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "The password and/or notes may be modified for the Storage service except evault passwords and notes. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Storage",
                        "doc": "A skeleton SoftLayer_Network_Storage object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "enableSnapshots": {
                "name": "enableSnapshots",
                "type": "boolean",
                "doc": "This method is not valid for Legacy iSCSI Storage Volumes. \n\nEnable scheduled snapshots of this storage volume. Scheduling options include HOURLY, DAILY and WEEKLY schedules. For HOURLY schedules, provide relevant data for $scheduleType, $retentionCount and $minute. For DAILY schedules, provide relevant data for $scheduleType, $retentionCount, $minute, and $hour. For WEEKLY schedules, provide relevant data for all parameters of this method. ",
                "parameters": [
                    {
                        "name": "scheduleType",
                        "type": "string",
                        "doc": "The type of schedule, among: 'INTERVAL', 'HOURLY', 'DAILY', 'WEEKLY'."
                    },
                    {
                        "name": "retentionCount",
                        "type": "int",
                        "doc": "The number of snapshots to attempt to retain in this schedule."
                    },
                    {
                        "name": "minute",
                        "type": "int",
                        "doc": "The minute of the hour at which HOURLY, DAILY, and WEEKLY snapshots should be taken."
                    },
                    {
                        "name": "hour",
                        "type": "int",
                        "doc": "The hour of the day at which DAILY and WEEKLY snapshots should be taken."
                    },
                    {
                        "name": "dayOfWeek",
                        "type": "string",
                        "doc": "The day of the week on which WEEKLY snapshots should be taken, either as a string ('SUNDAY') or integer (cron-notation: '0' is Sunday)"
                    }
                ]
            },
            "failbackFromReplicant": {
                "name": "failbackFromReplicant",
                "type": "boolean",
                "doc": "Failback from a volume replicant. In order to failback the volume must have already been failed over to a replicant. "
            },
            "failoverToReplicant": {
                "name": "failoverToReplicant",
                "type": "boolean",
                "doc": "Failover to a volume replicant.  During the time which the replicant is in use the local nas volume will not be available. ",
                "parameters": [
                    {
                        "name": "replicantId",
                        "type": "int",
                        "doc": "Replicant ID to failover to"
                    }
                ]
            },
            "getAllFiles": {
                "name": "getAllFiles",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "typeArray": true,
                "doc": "{{CloudLayerOnlyMethod}} Retrieve details such as id, name, size, create date for all files in a Storage account's root directory. This does not download file content. ",
                "limitable": true
            },
            "getAllFilesByFilter": {
                "name": "getAllFilesByFilter",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "typeArray": true,
                "doc": "{{CloudLayerOnlyMethod}} Retrieve details such as id, name, size, create date for all files matching the filter's criteria in a Storage account's root directory. This does not download file content. ",
                "limitable": true,
                "parameters": [
                    {
                        "name": "filter",
                        "type": "SoftLayer_Container_Utility_File_Entity",
                        "doc": "A filter to search for remote files by."
                    }
                ]
            },
            "getAllowableHardware": {
                "name": "getAllowableHardware",
                "type": "SoftLayer_Hardware",
                "typeArray": true,
                "doc": "This method retrieves a list of SoftLayer_Hardware that can be authorized to this SoftLayer_Network_Storage. ",
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "filterHostname",
                        "type": "string",
                        "doc": "a string to filter the hostName by."
                    }
                ]
            },
            "getAllowableIpAddresses": {
                "name": "getAllowableIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "typeArray": true,
                "doc": "This method retrieves a list of SoftLayer_Network_Subnet_IpAddress that can be authorized to this SoftLayer_Network_Storage. ",
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "subnetId",
                        "type": "int",
                        "doc": "The Id of the Subnet required"
                    },
                    {
                        "name": "filterIpAddress",
                        "type": "string",
                        "doc": "a string to filter the IpAddress by."
                    }
                ]
            },
            "getAllowableSubnets": {
                "name": "getAllowableSubnets",
                "type": "SoftLayer_Network_Subnet",
                "typeArray": true,
                "doc": "This method retrieves a list of SoftLayer_Network_Subnet that can be authorized to this SoftLayer_Network_Storage. ",
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "filterNetworkIdentifier",
                        "type": "string",
                        "doc": "a string to filter the Name by."
                    }
                ]
            },
            "getAllowableVirtualGuests": {
                "name": "getAllowableVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "typeArray": true,
                "doc": "This method retrieves a list of SoftLayer_Virtual_Guest that can be authorized to this SoftLayer_Network_Storage. ",
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "filterHostname",
                        "type": "string",
                        "doc": "a string to filter the hostname by."
                    }
                ]
            },
            "getAllowedHostsLimit": {
                "name": "getAllowedHostsLimit",
                "type": "int",
                "doc": "Retrieves the total number of allowed hosts limit per volume. "
            },
            "getByUsername": {
                "name": "getByUsername",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "Retrieve network storage accounts by username and storage account type. Use this method if you wish to retrieve a storage record by username rather than by id. The ''type'' parameter must correspond to one of the available ''nasType'' values in the SoftLayer_Network_Storage data type. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "The full username you wish to search for."
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "The type of storage accounts you wish to search."
                    }
                ]
            },
            "getCdnUrls": {
                "name": "getCdnUrls",
                "type": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_ContentDeliveryUrl",
                "typeArray": true
            },
            "getClusterResource": {
                "name": "getClusterResource",
                "type": "SoftLayer_Network_Service_Resource",
                "maskable": true
            },
            "getFileBlockEncryptedLocations": {
                "name": "getFileBlockEncryptedLocations",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "\n\n",
                "static": true,
                "maskable": true
            },
            "getFileByIdentifier": {
                "name": "getFileByIdentifier",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "doc": "{{CloudLayerOnlyMethod}} Retrieve details such as id, name, size, create date of a file within a Storage account. This does not download file content. ",
                "parameters": [
                    {
                        "name": "identifier",
                        "type": "string",
                        "doc": "The id or guid of the file you wish to retrieve."
                    }
                ]
            },
            "getFileCount": {
                "name": "getFileCount",
                "type": "int",
                "doc": "{{CloudLayerOnlyMethod}} Retrieve the file number of files in a Virtual Server Storage account's root directory. This does not include the files stored in the recycle bin. "
            },
            "getFileList": {
                "name": "getFileList",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "typeArray": true,
                "parameters": [
                    {
                        "name": "folder",
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "type": "string",
                        "defaultValue": null
                    }
                ]
            },
            "getFilePendingDeleteCount": {
                "name": "getFilePendingDeleteCount",
                "type": "int",
                "doc": "{{CloudLayerOnlyMethod}} Retrieve the number of files pending deletion in a Storage account's recycle bin. Files in an account's recycle bin may either be restored to the account's root directory or permanently deleted. "
            },
            "getFilesPendingDelete": {
                "name": "getFilesPendingDelete",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "typeArray": true,
                "doc": "{{CloudLayerOnlyMethod}} Retrieve a list of files that are pending deletion in a Storage account's recycle bin. Files in an account's recycle bin may either be restored to the account's root directory or permanently deleted. This method does not download file content. "
            },
            "getFolderList": {
                "name": "getFolderList",
                "type": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Folder",
                "typeArray": true
            },
            "getGraph": {
                "name": "getGraph",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "{{CloudLayerOnlyMethod}} \n\ngetGraph() retrieves a Storage account's usage and returns a PNG graph image, title, and the minimum and maximum dates included in the graphed date range. Virtual Server storage accounts can also graph upload and download bandwidth usage. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime",
                        "doc": "The starting date of the range of data you wish to collect.",
                        "defaultValue": null
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The ending date of the range of data you wish to collect.",
                        "defaultValue": null
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "The type of data you wish to graph. Either \"usage\", \"upload\", \"download\" or \"bandwidth\".",
                        "defaultValue": "usage"
                    }
                ]
            },
            "getMaximumExpansionSize": {
                "name": "getMaximumExpansionSize",
                "type": "int"
            },
            "getNetworkConnectionDetails": {
                "name": "getNetworkConnectionDetails",
                "type": "SoftLayer_Container_Network_Storage_NetworkConnectionInformation"
            },
            "getNetworkMountAddress": {
                "name": "getNetworkMountAddress",
                "type": "string"
            },
            "getNetworkMountPath": {
                "name": "getNetworkMountPath",
                "type": "string"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage",
                "doc": "getObject retrieves the SoftLayer_Network_Storage object whose ID corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Storage service. \n\nPlease use the associated methods in the [[SoftLayer_Network_Storage]] service to retrieve a Storage account's id. ",
                "filterable": true,
                "maskable": true
            },
            "getObjectStorageConnectionInformation": {
                "name": "getObjectStorageConnectionInformation",
                "type": "SoftLayer_Container_Network_Service_Resource_ObjectStorage_ConnectionInformation",
                "typeArray": true,
                "static": true
            },
            "getObjectsByCredential": {
                "name": "getObjectsByCredential",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "Retrieve network storage accounts by SoftLayer_Network_Storage_Credential object. Use this method if you wish to retrieve a storage record by a credential rather than by id. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "credentialObject",
                        "type": "SoftLayer_Network_Storage_Credential"
                    }
                ]
            },
            "getRecycleBinFileByIdentifier": {
                "name": "getRecycleBinFileByIdentifier",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "doc": "{{CloudLayerOnlyMethod}} Retrieve the details of a file that is pending deletion in a Storage account's a recycle bin. ",
                "parameters": [
                    {
                        "name": "fileId",
                        "type": "string",
                        "doc": "The id or guid of the file to retrieve."
                    }
                ]
            },
            "getRemainingAllowedHosts": {
                "name": "getRemainingAllowedHosts",
                "type": "int",
                "doc": "Retrieves the remaining number of allowed hosts per volume. "
            },
            "getRemainingAllowedHostsForReplicant": {
                "name": "getRemainingAllowedHostsForReplicant",
                "type": "int",
                "doc": "Retrieves the remaining number of allowed hosts for a volume's replicant. "
            },
            "getReplicationTimestamp": {
                "name": "getReplicationTimestamp",
                "type": "string"
            },
            "getSnapshotsForVolume": {
                "name": "getSnapshotsForVolume",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "Retrieves a list of snapshots for this SoftLayer_Network_Storage volume. This method works with the result limits and offset to support pagination. ",
                "limitable": true,
                "maskable": true
            },
            "getStorageGroupsNetworkConnectionDetails": {
                "name": "getStorageGroupsNetworkConnectionDetails",
                "type": "SoftLayer_Container_Network_Storage_NetworkConnectionInformation",
                "typeArray": true
            },
            "getTargetIpAddresses": {
                "name": "getTargetIpAddresses",
                "type": "string",
                "typeArray": true
            },
            "getValidReplicationTargetDatacenterLocations": {
                "name": "getValidReplicationTargetDatacenterLocations",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "maskable": true
            },
            "getVolumeCountLimits": {
                "name": "getVolumeCountLimits",
                "type": "SoftLayer_Container_Network_Storage_DataCenterLimits_VolumeCountLimitContainer",
                "typeArray": true,
                "doc": "Retrieves an array of volume count limits per location and globally. ",
                "static": true
            },
            "getVolumeDuplicateParameters": {
                "name": "getVolumeDuplicateParameters",
                "type": "SoftLayer_Container_Network_Storage_VolumeDuplicateParameters",
                "doc": "This method returns the parameters for cloning a volume "
            },
            "immediateFailoverToReplicant": {
                "name": "immediateFailoverToReplicant",
                "type": "boolean",
                "doc": "Immediate Failover to a volume replicant.  During the time which the replicant is in use the local nas volume will not be available. ",
                "parameters": [
                    {
                        "name": "replicantId",
                        "type": "int",
                        "doc": "Replicant ID to failover to"
                    }
                ]
            },
            "initiateOriginVolumeReclaim": {
                "name": "initiateOriginVolumeReclaim",
                "type": "string"
            },
            "initiateVolumeCutover": {
                "name": "initiateVolumeCutover",
                "type": "string"
            },
            "isBlockingOperationInProgress": {
                "name": "isBlockingOperationInProgress",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "exemptStatusKeyNames",
                        "type": "string",
                        "typeArray": true,
                        "defaultValue": []
                    }
                ]
            },
            "isDuplicateReadyForSnapshot": {
                "name": "isDuplicateReadyForSnapshot",
                "type": "boolean",
                "doc": "This method returns a boolean indicating whether the clone volume is ready for snapshot. "
            },
            "isDuplicateReadyToMount": {
                "name": "isDuplicateReadyToMount",
                "type": "boolean",
                "doc": "This method returns a boolean indicating whether the clone volume is ready to mount. "
            },
            "isVolumeActive": {
                "name": "isVolumeActive",
                "type": "boolean"
            },
            "refreshDependentDuplicate": {
                "name": "refreshDependentDuplicate",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "snapshotId",
                        "type": "int",
                        "doc": "The ID of the snapshot taken from the parent volume"
                    }
                ]
            },
            "refreshDuplicate": {
                "name": "refreshDuplicate",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "snapshotId",
                        "type": "int",
                        "doc": "The ID of the snapshot taken from the parent volume"
                    }
                ]
            },
            "removeAccessFromHardware": {
                "name": "removeAccessFromHardware",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Hardware objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplate",
                        "type": "SoftLayer_Hardware"
                    }
                ]
            },
            "removeAccessFromHardwareList": {
                "name": "removeAccessFromHardwareList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Hardware objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplates",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessFromHost": {
                "name": "removeAccessFromHost",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "doc": "This method is used to modify the access control list for this Storage volume.  The [[SoftLayer_Hardware|SoftLayer_Virtual_Guest|SoftLayer_Network_Subnet|SoftLayer_Network_Subnet_IpAddress]] objects which have been allowed access to this storage will be listed in the [[allowedHardware|allowedVirtualGuests|allowedSubnets|allowedIpAddresses]] property of this storage volume. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "typeClassName",
                        "type": "string",
                        "doc": "The type of class name, among: 'SoftLayer_Hardware', 'SoftLayer_Virtual_Guest', 'SoftLayer_Network_Subnet', 'SoftLayer_Network_Subnet_IpAddress'."
                    },
                    {
                        "name": "hostId",
                        "type": "int"
                    }
                ]
            },
            "removeAccessFromHostList": {
                "name": "removeAccessFromHostList",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "typeArray": true,
                "doc": "This method is used to modify the access control list for this Storage volume.  The [[SoftLayer_Hardware|SoftLayer_Virtual_Guest|SoftLayer_Network_Subnet|SoftLayer_Network_Subnet_IpAddress]] objects which have been allowed access to this storage will be listed in the [[allowedHardware|allowedVirtualGuests|allowedSubnets|allowedIpAddresses]] property of this storage volume. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "hostObjectTemplates",
                        "type": "SoftLayer_Container_Network_Storage_Host",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessFromIpAddress": {
                "name": "removeAccessFromIpAddress",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Network_Subnet_IpAddress objects which have been allowed access to this storage will be listed in the allowedIpAddresses property of this storage volume. ",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplate",
                        "type": "SoftLayer_Network_Subnet_IpAddress"
                    }
                ]
            },
            "removeAccessFromIpAddressList": {
                "name": "removeAccessFromIpAddressList",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplates",
                        "type": "SoftLayer_Network_Subnet_IpAddress",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessFromSubnet": {
                "name": "removeAccessFromSubnet",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "subnetObjectTemplate",
                        "type": "SoftLayer_Network_Subnet"
                    }
                ]
            },
            "removeAccessFromSubnetList": {
                "name": "removeAccessFromSubnetList",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "subnetObjectTemplates",
                        "type": "SoftLayer_Network_Subnet",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessFromVirtualGuest": {
                "name": "removeAccessFromVirtualGuest",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplate",
                        "type": "SoftLayer_Virtual_Guest"
                    }
                ]
            },
            "removeAccessFromVirtualGuestList": {
                "name": "removeAccessFromVirtualGuestList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplates",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessToReplicantFromHardwareList": {
                "name": "removeAccessToReplicantFromHardwareList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume's replica.  The SoftLayer_Hardware objects which have been allowed access to this storage volume's replica will be listed in the allowedReplicationHardware property of this storage volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplates",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessToReplicantFromIpAddressList": {
                "name": "removeAccessToReplicantFromIpAddressList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume's replica.  The SoftLayer_Network_Subnet_IpAddress objects which have been allowed access to this storage volume's replica will be listed in the allowedReplicationIpAddresses property of this storage volume. ",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplates",
                        "type": "SoftLayer_Network_Subnet_IpAddress",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessToReplicantFromSubnet": {
                "name": "removeAccessToReplicantFromSubnet",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "subnetObjectTemplate",
                        "type": "SoftLayer_Network_Subnet"
                    }
                ]
            },
            "removeAccessToReplicantFromSubnetList": {
                "name": "removeAccessToReplicantFromSubnetList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume's replica.  The SoftLayer_Network_Subnet objects which have been allowed access to this storage volume's replica will be listed in the allowedReplicationSubnets property of this storage volume. ",
                "parameters": [
                    {
                        "name": "subnetObjectTemplates",
                        "type": "SoftLayer_Network_Subnet",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessToReplicantFromVirtualGuestList": {
                "name": "removeAccessToReplicantFromVirtualGuestList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume's replica.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage volume's replica will be listed in the allowedReplicationVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplates",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true
                    }
                ]
            },
            "removeCredential": {
                "name": "removeCredential",
                "type": "boolean",
                "doc": "This method will remove a credential from the current volume. The credential must have been created using the 'addNewCredential' method. ",
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "A username assigned to the current storage volume"
                    }
                ]
            },
            "restoreFile": {
                "name": "restoreFile",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "doc": "{{CloudLayerOnlyMethod}} Restore an individual file so that it may be used as it was before it was deleted. \n\nIf a file is deleted from a Virtual Server Storage account, the file is placed into the account's recycle bin and not permanently deleted. Therefore, restoreFile can be used to place the file back into your Virtual Server account's root directory. ",
                "parameters": [
                    {
                        "name": "fileId",
                        "type": "string",
                        "doc": "The id or guid of the file you wish to restore."
                    }
                ]
            },
            "restoreFromSnapshot": {
                "name": "restoreFromSnapshot",
                "type": "boolean",
                "doc": "Restore the volume from a snapshot that was previously taken. ",
                "parameters": [
                    {
                        "name": "snapshotId",
                        "type": "int",
                        "doc": "Snapshot ID to restore from"
                    }
                ]
            },
            "sendPasswordReminderEmail": {
                "name": "sendPasswordReminderEmail",
                "type": "boolean",
                "doc": "The method will retrieve the password for the StorageLayer or Virtual Server Storage Account and email the password.  The Storage Account passwords will be emailed to the master user.  For Virtual Server Storage, the password will be sent to the email address used as the username. ",
                "static": true,
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "Username of the Storage/Virtual Server Storage account to send the password reminder for",
                        "defaultValue": null
                    }
                ]
            },
            "setMountable": {
                "name": "setMountable",
                "type": "boolean",
                "doc": "Enable or disable the mounting of a Storage volume. When mounting is enabled the Storage volume will be mountable or available for use. \n\nFor Virtual Server volumes, disabling mounting will deny access to the Virtual Server Account, remove published material and deny all file interaction including uploads and downloads. \n\nEnabling or disabling mounting for Storage volumes is not possible if mounting has been disabled by SoftLayer or a parent account. ",
                "parameters": [
                    {
                        "name": "mountable",
                        "type": "boolean",
                        "doc": "Whether or not the volume should be mountable."
                    }
                ]
            },
            "setSnapshotAllocation": {
                "name": "setSnapshotAllocation",
                "type": "void",
                "parameters": [
                    {
                        "name": "capacityGb",
                        "type": "int"
                    }
                ]
            },
            "setSnapshotNotification": {
                "name": "setSnapshotNotification",
                "type": "void",
                "doc": "Function to enable/disable snapshot warning notification. ",
                "parameters": [
                    {
                        "name": "notificationFlag",
                        "type": "string",
                        "doc": "<<< EOT"
                    }
                ]
            },
            "upgradeVolumeCapacity": {
                "name": "upgradeVolumeCapacity",
                "type": "boolean",
                "doc": "Upgrade the Storage volume to one of the upgradable packages (for example from 10 Gigs of EVault storage to 100 Gigs of EVault storage). ",
                "parameters": [
                    {
                        "name": "itemId",
                        "type": "int",
                        "doc": "The billing item id for the Storage volume you would like to upgrade."
                    }
                ]
            },
            "uploadFile": {
                "name": "uploadFile",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "doc": "{{CloudLayerOnlyMethod}} Upload a file to a Storage account's root directory. Once uploaded, this method returns new file entity identifier for the upload file. \n\nThe following properties are required in the ''file'' parameter. \n*'''name''': The name of the file you wish to upload\n*'''content''': The raw contents of the file you wish to upload.\n*'''contentType''': The MIME-type of content that you wish to upload.",
                "parameters": [
                    {
                        "name": "file",
                        "type": "SoftLayer_Container_Utility_File_Entity",
                        "doc": "The file you wish to upload."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_Storage data type contains general information regarding a Storage product such as account id, access username and password, the Storage product type, and the server the Storage service is associated with. Currently, only EVault backup storage has an associated server. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that a Storage services belongs to."
            },
            "accountPassword": {
                "name": "accountPassword",
                "type": "SoftLayer_Account_Password",
                "form": "relational",
                "doc": "Other usernames and passwords associated with a Storage volume."
            },
            "activeTransactions": {
                "name": "activeTransactions",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "typeArray": true,
                "doc": "The currently active transactions on a network storage volume."
            },
            "allowDisasterRecoveryFailback": {
                "name": "allowDisasterRecoveryFailback",
                "type": "string",
                "form": "relational"
            },
            "allowDisasterRecoveryFailover": {
                "name": "allowDisasterRecoveryFailover",
                "type": "string",
                "form": "relational"
            },
            "allowedHardware": {
                "name": "allowedHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Hardware objects which are allowed access to this storage volume."
            },
            "allowedIpAddresses": {
                "name": "allowedIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Subnet_IpAddress objects which are allowed access to this storage volume."
            },
            "allowedReplicationHardware": {
                "name": "allowedReplicationHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Hardware objects which are allowed access to this storage volume's Replicant."
            },
            "allowedReplicationIpAddresses": {
                "name": "allowedReplicationIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Subnet_IpAddress objects which are allowed access to this storage volume's Replicant."
            },
            "allowedReplicationSubnets": {
                "name": "allowedReplicationSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Subnet objects which are allowed access to this storage volume's Replicant."
            },
            "allowedReplicationVirtualGuests": {
                "name": "allowedReplicationVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Hardware objects which are allowed access to this storage volume's Replicant."
            },
            "allowedSubnets": {
                "name": "allowedSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Subnet objects which are allowed access to this storage volume."
            },
            "allowedVirtualGuests": {
                "name": "allowedVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Virtual_Guest objects which are allowed access to this storage volume."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The current billing item for a Storage volume."
            },
            "billingItemCategory": {
                "name": "billingItemCategory",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational"
            },
            "bytesUsed": {
                "name": "bytesUsed",
                "type": "string",
                "form": "relational",
                "doc": "The amount of space used by the volume, in bytes."
            },
            "creationScheduleId": {
                "name": "creationScheduleId",
                "type": "string",
                "form": "relational",
                "doc": "The schedule id which was executed to create a snapshot."
            },
            "credentials": {
                "name": "credentials",
                "type": "SoftLayer_Network_Storage_Credential",
                "form": "relational",
                "typeArray": true
            },
            "dailySchedule": {
                "name": "dailySchedule",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "doc": "The Daily Schedule which is associated with this network storage volume."
            },
            "dependentDuplicate": {
                "name": "dependentDuplicate",
                "type": "string",
                "form": "relational",
                "doc": "Whether or not a network storage volume is a dependent duplicate."
            },
            "dependentDuplicates": {
                "name": "dependentDuplicates",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The network storage volumes configured to be dependent duplicates of a volume."
            },
            "events": {
                "name": "events",
                "type": "SoftLayer_Network_Storage_Event",
                "form": "relational",
                "typeArray": true,
                "doc": "The events which have taken place on a network storage volume."
            },
            "failbackNotAllowed": {
                "name": "failbackNotAllowed",
                "type": "string",
                "form": "relational",
                "doc": "Determines whether the volume is allowed to failback"
            },
            "failoverNotAllowed": {
                "name": "failoverNotAllowed",
                "type": "string",
                "form": "relational",
                "doc": "Determines whether the volume is allowed to failover"
            },
            "fileNetworkMountAddress": {
                "name": "fileNetworkMountAddress",
                "type": "string",
                "form": "relational",
                "doc": "Retrieves the NFS Network Mount Address Name for a given File Storage Volume."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "When applicable, the hardware associated with a Storage service."
            },
            "hasEncryptionAtRest": {
                "name": "hasEncryptionAtRest",
                "type": "boolean",
                "form": "relational"
            },
            "hourlySchedule": {
                "name": "hourlySchedule",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "doc": "The Hourly Schedule which is associated with this network storage volume."
            },
            "intervalSchedule": {
                "name": "intervalSchedule",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "doc": "The Interval Schedule which is associated with this network storage volume."
            },
            "iops": {
                "name": "iops",
                "type": "string",
                "form": "relational",
                "doc": "The maximum number of IOPs selected for this volume."
            },
            "isDependentDuplicateProvisionCompleted": {
                "name": "isDependentDuplicateProvisionCompleted",
                "type": "boolean",
                "form": "relational",
                "doc": "Determines whether dependent volume provision is completed on background."
            },
            "isInDedicatedServiceResource": {
                "name": "isInDedicatedServiceResource",
                "type": "boolean",
                "form": "relational"
            },
            "isMagneticStorage": {
                "name": "isMagneticStorage",
                "type": "string",
                "form": "relational"
            },
            "isReadyForSnapshot": {
                "name": "isReadyForSnapshot",
                "type": "boolean",
                "form": "relational",
                "doc": "Determines whether a volume is ready to order snapshot space, or, if snapshot space is already available, to assign a snapshot schedule, or to take a manual snapshot."
            },
            "isReadyToMount": {
                "name": "isReadyToMount",
                "type": "boolean",
                "form": "relational",
                "doc": "Determines whether a volume is ready to have Hosts authorized to access it. This does not indicate whether another operation may be blocking, please refer to this volume's volumeStatus property for details."
            },
            "iscsiLuns": {
                "name": "iscsiLuns",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "Relationship between a container volume and iSCSI LUNs."
            },
            "iscsiTargetIpAddresses": {
                "name": "iscsiTargetIpAddresses",
                "type": "string",
                "form": "relational",
                "typeArray": true,
                "doc": "Returns the target IP addresses of an iSCSI volume."
            },
            "lunId": {
                "name": "lunId",
                "type": "string",
                "form": "relational",
                "doc": "The ID of the LUN volume."
            },
            "manualSnapshots": {
                "name": "manualSnapshots",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The manually-created snapshots associated with this SoftLayer_Network_Storage volume. Does not support pagination by result limit and offset."
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object",
                "form": "relational",
                "doc": "A network storage volume's metric tracking object. This object records all periodic polled data available to this volume."
            },
            "mountPath": {
                "name": "mountPath",
                "type": "string",
                "form": "relational",
                "doc": "Retrieves the NFS Network Mount Path for a given File Storage Volume."
            },
            "mountableFlag": {
                "name": "mountableFlag",
                "type": "string",
                "form": "relational",
                "doc": "Whether or not a network storage volume may be mounted."
            },
            "moveAndSplitStatus": {
                "name": "moveAndSplitStatus",
                "type": "string",
                "form": "relational",
                "doc": "The current status of split or move operation as a part of volume duplication."
            },
            "notificationSubscribers": {
                "name": "notificationSubscribers",
                "type": "SoftLayer_Notification_User_Subscriber",
                "form": "relational",
                "typeArray": true,
                "doc": "The subscribers that will be notified for usage amount warnings and overages."
            },
            "originalSnapshotName": {
                "name": "originalSnapshotName",
                "type": "string",
                "form": "relational",
                "doc": "The name of the snapshot that this volume was duplicated from."
            },
            "originalVolumeName": {
                "name": "originalVolumeName",
                "type": "string",
                "form": "relational",
                "doc": "The name of the volume that this volume was duplicated from."
            },
            "originalVolumeSize": {
                "name": "originalVolumeSize",
                "type": "string",
                "form": "relational",
                "doc": "The size (in GB) of the volume or LUN before any size expansion, or of the volume (before any possible size expansion) from which the duplicate volume or LUN was created."
            },
            "osType": {
                "name": "osType",
                "type": "SoftLayer_Network_Storage_Iscsi_OS_Type",
                "form": "relational",
                "doc": "A volume's configured SoftLayer_Network_Storage_Iscsi_OS_Type."
            },
            "osTypeId": {
                "name": "osTypeId",
                "type": "string",
                "form": "relational",
                "doc": "A volume's configured SoftLayer_Network_Storage_Iscsi_OS_Type ID."
            },
            "parentPartnerships": {
                "name": "parentPartnerships",
                "type": "SoftLayer_Network_Storage_Partnership",
                "form": "relational",
                "typeArray": true,
                "doc": "The volumes or snapshots partnered with a network storage volume in a parental role."
            },
            "parentVolume": {
                "name": "parentVolume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "The parent volume of a volume in a complex storage relationship."
            },
            "partnerships": {
                "name": "partnerships",
                "type": "SoftLayer_Network_Storage_Partnership",
                "form": "relational",
                "typeArray": true,
                "doc": "The volumes or snapshots partnered with a network storage volume."
            },
            "permissionsGroups": {
                "name": "permissionsGroups",
                "type": "SoftLayer_Network_Storage_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "All permissions group(s) this volume is in."
            },
            "properties": {
                "name": "properties",
                "type": "SoftLayer_Network_Storage_Property",
                "form": "relational",
                "typeArray": true,
                "doc": "The properties used to provide additional details about a network storage volume."
            },
            "provisionedIops": {
                "name": "provisionedIops",
                "type": "string",
                "form": "relational",
                "doc": "The number of IOPs provisioned for this volume."
            },
            "replicatingLuns": {
                "name": "replicatingLuns",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The iSCSI LUN volumes being replicated by this network storage volume."
            },
            "replicatingVolume": {
                "name": "replicatingVolume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "The network storage volume being replicated by a volume."
            },
            "replicationEvents": {
                "name": "replicationEvents",
                "type": "SoftLayer_Network_Storage_Event",
                "form": "relational",
                "typeArray": true,
                "doc": "The volume replication events."
            },
            "replicationPartners": {
                "name": "replicationPartners",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The network storage volumes configured to be replicants of a volume."
            },
            "replicationSchedule": {
                "name": "replicationSchedule",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "doc": "The Replication Schedule associated with a network storage volume."
            },
            "replicationStatus": {
                "name": "replicationStatus",
                "type": "string",
                "form": "relational",
                "doc": "The current replication status of a network storage volume. Indicates Failover or Failback status."
            },
            "schedules": {
                "name": "schedules",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "typeArray": true,
                "doc": "The schedules which are associated with a network storage volume."
            },
            "serviceResource": {
                "name": "serviceResource",
                "type": "SoftLayer_Network_Service_Resource",
                "form": "relational",
                "doc": "The network resource a Storage service is connected to."
            },
            "serviceResourceBackendIpAddress": {
                "name": "serviceResourceBackendIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "The IP address of a Storage resource."
            },
            "serviceResourceName": {
                "name": "serviceResourceName",
                "type": "string",
                "form": "relational",
                "doc": "The name of a Storage's network resource."
            },
            "snapshotCapacityGb": {
                "name": "snapshotCapacityGb",
                "type": "string",
                "form": "relational",
                "doc": "A volume's configured snapshot space size."
            },
            "snapshotCreationTimestamp": {
                "name": "snapshotCreationTimestamp",
                "type": "string",
                "form": "relational",
                "doc": "The creation timestamp of the snapshot on the storage platform."
            },
            "snapshotDeletionThresholdPercentage": {
                "name": "snapshotDeletionThresholdPercentage",
                "type": "string",
                "form": "relational",
                "doc": "The percentage of used snapshot space after which to delete automated snapshots."
            },
            "snapshotNotificationStatus": {
                "name": "snapshotNotificationStatus",
                "type": "string",
                "form": "relational",
                "doc": "Whether or not a network storage volume may be mounted."
            },
            "snapshotSizeBytes": {
                "name": "snapshotSizeBytes",
                "type": "string",
                "form": "relational",
                "doc": "The snapshot size in bytes."
            },
            "snapshotSpaceAvailable": {
                "name": "snapshotSpaceAvailable",
                "type": "string",
                "form": "relational",
                "doc": "A volume's available snapshot reservation space."
            },
            "snapshots": {
                "name": "snapshots",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The snapshots associated with this SoftLayer_Network_Storage volume."
            },
            "staasVersion": {
                "name": "staasVersion",
                "type": "string",
                "form": "relational"
            },
            "storageGroups": {
                "name": "storageGroups",
                "type": "SoftLayer_Network_Storage_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "The network storage groups this volume is attached to."
            },
            "storageTierLevel": {
                "name": "storageTierLevel",
                "type": "string",
                "form": "relational"
            },
            "storageType": {
                "name": "storageType",
                "type": "SoftLayer_Network_Storage_Type",
                "form": "relational",
                "doc": "A description of the Storage object."
            },
            "totalBytesUsed": {
                "name": "totalBytesUsed",
                "type": "string",
                "form": "relational",
                "doc": "The amount of space used by the volume."
            },
            "totalScheduleSnapshotRetentionCount": {
                "name": "totalScheduleSnapshotRetentionCount",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The total snapshot retention count of all schedules on this network storage volume."
            },
            "usageNotification": {
                "name": "usageNotification",
                "type": "SoftLayer_Notification",
                "form": "relational",
                "doc": "The usage notification for SL Storage services."
            },
            "vendorName": {
                "name": "vendorName",
                "type": "string",
                "form": "relational",
                "doc": "The type of network storage service."
            },
            "virtualGuest": {
                "name": "virtualGuest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "When applicable, the virtual guest associated with a Storage service."
            },
            "volumeHistory": {
                "name": "volumeHistory",
                "type": "SoftLayer_Network_Storage_History",
                "form": "relational",
                "typeArray": true,
                "doc": "The username and password history for a Storage service."
            },
            "volumeStatus": {
                "name": "volumeStatus",
                "type": "string",
                "form": "relational",
                "doc": "The current status of a network storage volume."
            },
            "webccAccount": {
                "name": "webccAccount",
                "type": "SoftLayer_Account_Password",
                "form": "relational",
                "doc": "The account username and password for the EVault webCC interface."
            },
            "weeklySchedule": {
                "name": "weeklySchedule",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "doc": "The Weekly Schedule which is associated with this network storage volume."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the SoftLayer customer account that a Storage account belongs to. "
            },
            "capacityGb": {
                "name": "capacityGb",
                "type": "int",
                "form": "local",
                "doc": "A Storage account's capacity, measured in gigabytes. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a network storage volume was created."
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "The unique identification number of the guest associated with a Storage volume."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The server that is associated with a Storage service. "
            },
            "hostId": {
                "name": "hostId",
                "type": "int",
                "form": "local",
                "doc": "The unique identification number of the host associated with a Storage volume."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A Storage account's unique identifier."
            },
            "nasType": {
                "name": "nasType",
                "type": "string",
                "form": "local",
                "doc": "A Storage account's type. Valid examples are \"NAS\", \"LOCKBOX\", \"ISCSI\", \"EVAULT\", and \"HUB\". "
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Public notes related to a Storage volume. "
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "The password used to access a non-EVault Storage volume. This password is used to register the EVault server agent with the vault backup system. "
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local",
                "doc": "Service Provider ID "
            },
            "storageTypeId": {
                "name": "storageTypeId",
                "type": "string",
                "form": "local",
                "doc": "A storage object's type. "
            },
            "upgradableFlag": {
                "name": "upgradableFlag",
                "type": "boolean",
                "form": "local",
                "doc": "This flag indicates whether this storage type is upgradable or not. "
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username used to access a non-EVault Storage volume. This username is used to register the EVault server agent with the vault backup system. "
            },
            "activeTransactionCount": {
                "name": "activeTransactionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the currently active transactions on a network storage volume."
            },
            "allowedHardwareCount": {
                "name": "allowedHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Hardware objects which are allowed access to this storage volume."
            },
            "allowedIpAddressCount": {
                "name": "allowedIpAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Subnet_IpAddress objects which are allowed access to this storage volume."
            },
            "allowedReplicationHardwareCount": {
                "name": "allowedReplicationHardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Hardware objects which are allowed access to this storage volume's Replicant."
            },
            "allowedReplicationIpAddressCount": {
                "name": "allowedReplicationIpAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Subnet_IpAddress objects which are allowed access to this storage volume's Replicant."
            },
            "allowedReplicationSubnetCount": {
                "name": "allowedReplicationSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Subnet objects which are allowed access to this storage volume's Replicant."
            },
            "allowedReplicationVirtualGuestCount": {
                "name": "allowedReplicationVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Hardware objects which are allowed access to this storage volume's Replicant."
            },
            "allowedSubnetCount": {
                "name": "allowedSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Subnet objects which are allowed access to this storage volume."
            },
            "allowedVirtualGuestCount": {
                "name": "allowedVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Virtual_Guest objects which are allowed access to this storage volume."
            },
            "credentialCount": {
                "name": "credentialCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "dependentDuplicateCount": {
                "name": "dependentDuplicateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the network storage volumes configured to be dependent duplicates of a volume."
            },
            "eventCount": {
                "name": "eventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the events which have taken place on a network storage volume."
            },
            "iscsiLunCount": {
                "name": "iscsiLunCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of relationship between a container volume and iSCSI LUNs."
            },
            "iscsiTargetIpAddressCount": {
                "name": "iscsiTargetIpAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of returns the target IP addresses of an iSCSI volume."
            },
            "manualSnapshotCount": {
                "name": "manualSnapshotCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the manually-created snapshots associated with this SoftLayer_Network_Storage volume. Does not support pagination by result limit and offset."
            },
            "notificationSubscriberCount": {
                "name": "notificationSubscriberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the subscribers that will be notified for usage amount warnings and overages."
            },
            "parentPartnershipCount": {
                "name": "parentPartnershipCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the volumes or snapshots partnered with a network storage volume in a parental role."
            },
            "partnershipCount": {
                "name": "partnershipCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the volumes or snapshots partnered with a network storage volume."
            },
            "permissionsGroupCount": {
                "name": "permissionsGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all permissions group(s) this volume is in."
            },
            "propertyCount": {
                "name": "propertyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the properties used to provide additional details about a network storage volume."
            },
            "replicatingLunCount": {
                "name": "replicatingLunCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the iSCSI LUN volumes being replicated by this network storage volume."
            },
            "replicationEventCount": {
                "name": "replicationEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the volume replication events."
            },
            "replicationPartnerCount": {
                "name": "replicationPartnerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the network storage volumes configured to be replicants of a volume."
            },
            "scheduleCount": {
                "name": "scheduleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the schedules which are associated with a network storage volume."
            },
            "snapshotCount": {
                "name": "snapshotCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the snapshots associated with this SoftLayer_Network_Storage volume."
            },
            "storageGroupCount": {
                "name": "storageGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the network storage groups this volume is attached to."
            },
            "volumeHistoryCount": {
                "name": "volumeHistoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the username and password history for a Storage service."
            }
        }
    },
    "SoftLayer_Network_Storage_Allowed_Host": {
        "name": "SoftLayer_Network_Storage_Allowed_Host",
        "base": "SoftLayer_Entity",
        "methods": {
            "assignSubnetsToAcl": {
                "name": "assignSubnetsToAcl",
                "type": "int",
                "typeArray": true,
                "parameters": [
                    {
                        "name": "subnetIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "Ids of the subnets to add."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Storage_Allowed_Host",
                        "doc": "A skeleton SoftLayer_Network_Storage_Allowed_Host object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "filterable": true,
                "maskable": true
            },
            "removeSubnetsFromAcl": {
                "name": "removeSubnetsFromAcl",
                "type": "int",
                "typeArray": true,
                "parameters": [
                    {
                        "name": "subnetIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "Ids of the subnets to remove."
                    }
                ]
            },
            "setCredentialPassword": {
                "name": "setCredentialPassword",
                "type": "boolean",
                "doc": "Use this method to modify the credential password for a SoftLayer_Network_Storage_Allowed_Host object. ",
                "parameters": [
                    {
                        "name": "password",
                        "type": "string"
                    }
                ]
            }
        },
        "properties": {
            "assignedGroups": {
                "name": "assignedGroups",
                "type": "SoftLayer_Network_Storage_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage_Group objects this SoftLayer_Network_Storage_Allowed_Host is present in."
            },
            "assignedIscsiVolumes": {
                "name": "assignedIscsiVolumes",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage volumes to which this SoftLayer_Network_Storage_Allowed_Host is allowed access."
            },
            "assignedNfsVolumes": {
                "name": "assignedNfsVolumes",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage volumes to which this SoftLayer_Network_Storage_Allowed_Host is allowed access."
            },
            "assignedReplicationVolumes": {
                "name": "assignedReplicationVolumes",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage primary volumes whose replicas are allowed access."
            },
            "assignedVolumes": {
                "name": "assignedVolumes",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage volumes to which this SoftLayer_Network_Storage_Allowed_Host is allowed access."
            },
            "credential": {
                "name": "credential",
                "type": "SoftLayer_Network_Storage_Credential",
                "form": "relational",
                "doc": "The SoftLayer_Network_Storage_Credential this allowed host uses."
            },
            "sourceSubnet": {
                "name": "sourceSubnet",
                "type": "string",
                "form": "relational",
                "doc": "Connections to a target with a source IP in this subnet prefix are allowed."
            },
            "subnetsInAcl": {
                "name": "subnetsInAcl",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Subnet records assigned to the ACL for this allowed host."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account to which this allowed host belongs to."
            },
            "credentialId": {
                "name": "credentialId",
                "type": "int",
                "form": "local",
                "doc": "The credential this allowed host will use"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the igroup"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of allowed host, usually an IQN or other identifier"
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local"
            },
            "resourceTableName": {
                "name": "resourceTableName",
                "type": "string",
                "form": "local"
            },
            "assignedGroupCount": {
                "name": "assignedGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage_Group objects this SoftLayer_Network_Storage_Allowed_Host is present in."
            },
            "assignedIscsiVolumeCount": {
                "name": "assignedIscsiVolumeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage volumes to which this SoftLayer_Network_Storage_Allowed_Host is allowed access."
            },
            "assignedNfsVolumeCount": {
                "name": "assignedNfsVolumeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage volumes to which this SoftLayer_Network_Storage_Allowed_Host is allowed access."
            },
            "assignedReplicationVolumeCount": {
                "name": "assignedReplicationVolumeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage primary volumes whose replicas are allowed access."
            },
            "assignedVolumeCount": {
                "name": "assignedVolumeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage volumes to which this SoftLayer_Network_Storage_Allowed_Host is allowed access."
            },
            "subnetsInAclCount": {
                "name": "subnetsInAclCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Subnet records assigned to the ACL for this allowed host."
            }
        }
    },
    "SoftLayer_Network_Storage_Allowed_Host_Hardware": {
        "name": "SoftLayer_Network_Storage_Allowed_Host_Hardware",
        "base": "SoftLayer_Network_Storage_Allowed_Host",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Allowed_Host_Hardware",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer_Account object which this SoftLayer_Network_Storage_Allowed_Host belongs to."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The SoftLayer_Hardware object which this SoftLayer_Network_Storage_Allowed_Host is referencing."
            }
        }
    },
    "SoftLayer_Network_Storage_Allowed_Host_IpAddress": {
        "name": "SoftLayer_Network_Storage_Allowed_Host_IpAddress",
        "base": "SoftLayer_Network_Storage_Allowed_Host",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Allowed_Host_IpAddress",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer_Account object which this SoftLayer_Network_Storage_Allowed_Host belongs to."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The SoftLayer_Network_Subnet_IpAddress object which this SoftLayer_Network_Storage_Allowed_Host is referencing."
            }
        }
    },
    "SoftLayer_Network_Storage_Allowed_Host_Subnet": {
        "name": "SoftLayer_Network_Storage_Allowed_Host_Subnet",
        "base": "SoftLayer_Network_Storage_Allowed_Host",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Allowed_Host_Subnet",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer_Account object which this SoftLayer_Network_Storage_Allowed_Host belongs to."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "The SoftLayer_Network_Subnet object which this SoftLayer_Network_Storage_Allowed_Host is referencing."
            }
        }
    },
    "SoftLayer_Network_Storage_Allowed_Host_VirtualGuest": {
        "name": "SoftLayer_Network_Storage_Allowed_Host_VirtualGuest",
        "base": "SoftLayer_Network_Storage_Allowed_Host",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Allowed_Host_VirtualGuest",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer_Account object which this SoftLayer_Network_Storage_Allowed_Host belongs to."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The SoftLayer_Virtual_Guest object which this SoftLayer_Network_Storage_Allowed_Host is referencing."
            }
        }
    },
    "SoftLayer_Network_Storage_Backup": {
        "name": "SoftLayer_Network_Storage_Backup",
        "base": "SoftLayer_Network_Storage",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Storage_Backup contains general information regarding a Storage backup service such as account id, username, maximum capacity, password, Storage's product type and the server id. ",
        "properties": {
            "currentCyclePeakUsage": {
                "name": "currentCyclePeakUsage",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "Peak number of bytes used in the vault for the current billing cycle."
            },
            "previousCyclePeakUsage": {
                "name": "previousCyclePeakUsage",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "Peak number of bytes used in the vault for the previous billing cycle."
            }
        }
    },
    "SoftLayer_Network_Storage_Backup_Evault": {
        "name": "SoftLayer_Network_Storage_Backup_Evault",
        "base": "SoftLayer_Network_Storage_Backup",
        "serviceDoc": "SoftLayer provides the EVault backup system as a part of it's Storage service offerings. EVault is an incremental and automated backup solution with Windows and web-based management clients. The SoftLayer_Network_Storage_Backup_Evault service allows portal and API users to work with their EVault accounts. The large majority of EVault functionality is implemented in the SoftLayer_Network_Storage_Backup_Evault_Version6 service. ",
        "methods": {
            "deleteTasks": {
                "name": "deleteTasks",
                "type": "boolean",
                "doc": "This method can be used to help maintain the storage space on a vault.  When a job is removed from the Webcc, the task and stored usage still exists on the vault. This method can be used to delete the associated task and its usage. \n\nAll that is required for the use of the method is to pass in an integer array of task(s). \n\n",
                "parameters": [
                    {
                        "name": "tasks",
                        "type": "int",
                        "typeArray": true,
                        "doc": "Array of tasks to be deleted."
                    }
                ]
            },
            "getHardwareWithEvaultFirst": {
                "name": "getHardwareWithEvaultFirst",
                "type": "SoftLayer_Hardware",
                "typeArray": true,
                "doc": "Retrieve a list of hardware associated with a SoftLayer customer account, placing all hardware with associated EVault storage accounts at the beginning of the list. The return type is SoftLayer_Hardware_Server[] contains the results; the number of items returned in the result will be returned in the soap header (totalItems). ''getHardwareWithEvaultFirst'' is useful in situations where you wish to search for hardware and provide paginated output. \n\n\n\n\n\nResults are only returned for hardware belonging to the account of the user making the API call. \n\nThis method drives the backup page of the SoftLayer customer portal. It serves a very specific function, but we have exposed it as it may prove useful for API developers too. ",
                "static": true,
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "option",
                        "type": "string",
                        "doc": "The field you wish to search on. This can be set to either \"Servername\" or \"Username\". If set to Servername then this will search for the value specified in the criteria parameter on your hardware's hostname and domain name. If set to Username then it will search on the EVault webcc username of the server's associated user account. If option is not set then it will search for hardware based on the hardware's associated EVault user's password. This parameter is only used when the mode parameter is set to \"search\".",
                        "defaultValue": null
                    },
                    {
                        "name": "exactMatch",
                        "type": "boolean",
                        "doc": "How you wish to search through hardware. Set this to either 'true' for an exact match of your search criteria or false if you wish search for part of a server name. This parameter is only used when the mode parameter is set to \"search\" and defaults to true.",
                        "defaultValue": true
                    },
                    {
                        "name": "criteria",
                        "type": "string",
                        "doc": "The value you wish to search for. This is only used when mode is set to \"search\".",
                        "defaultValue": null
                    },
                    {
                        "name": "mode",
                        "type": "string",
                        "doc": "How you wish you gather your hardware list. Mode can either equal \"normal\" or \"search\". Normal mode will return all of your hardware, while search mode filters your hardware by the values you specify for the option, type, and criteria parameters.",
                        "defaultValue": null
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Backup_Evault",
                "doc": "getObject retrieves the SoftLayer_Network_Storage_Backup_Evault object whose ID corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Storage_Backup_Evault service. ",
                "filterable": true,
                "maskable": true
            },
            "getWebCCAuthenticationDetails": {
                "name": "getWebCCAuthenticationDetails",
                "type": "SoftLayer_Container_Network_Storage_Backup_Evault_WebCc_Authentication_Details",
                "static": true
            },
            "initiateBareMetalRestore": {
                "name": "initiateBareMetalRestore",
                "type": "boolean",
                "doc": "Evault Bare Metal Restore is a special version of Rescue Kernel designed specifically for making full system restores made with Evault's BMR backup. This process works very similar to Rescue Kernel, except only the Evault restore program is available. The process takes approximately 10 minutes. Once completed you will be able to access your server to do a restore through VNC or your servers KVM-over-IP. IP information and credentials can be found on the hardware page of the customer portal. The Evault Application will be running automatically upon startup, and will walk you through the restore process. "
            },
            "initiateBareMetalRestoreForServer": {
                "name": "initiateBareMetalRestoreForServer",
                "type": "boolean",
                "doc": "This method operates the same as the initiateBareMetalRestore() method.  However, using this method, the Bare Metal Restore can be initiated on any Windows server under the account. ",
                "parameters": [
                    {
                        "name": "hardwareId",
                        "type": "int",
                        "doc": "hardwareId to perform the bare metal restore on."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_Storage_Backup_Evault contains general information regarding an EVault Storage service such as account id, username, maximum capacity, password, Storage's product type and the server id. "
    },
    "SoftLayer_Network_Storage_Backup_Evault_Version6": {
        "name": "SoftLayer_Network_Storage_Backup_Evault_Version6",
        "base": "SoftLayer_Network_Storage_Backup_Evault",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Storage_Backup_Evault_Version6 contains the same properties as the SoftLayer_Network_Storage_Backup_Evault. Additional properties available for the EVault Storage type:  softwareComponent, totalBytesUsed, backupJobDetails, restoreJobDetails and agentStatuses ",
        "properties": {
            "agentStatuses": {
                "name": "agentStatuses",
                "type": "SoftLayer_Container_Network_Storage_Evault_WebCc_AgentStatus",
                "form": "relational",
                "typeArray": true,
                "doc": "Statuses (most of the time will be one status) for the agent tied to the EVault Storage services."
            },
            "backupJobDetails": {
                "name": "backupJobDetails",
                "type": "SoftLayer_Container_Network_Storage_Evault_WebCc_JobDetails",
                "form": "relational",
                "typeArray": true,
                "doc": "All the of the backup jobs for the EVault Storage account."
            },
            "pluginBillingItems": {
                "name": "pluginBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items for plugins tied to the EVault Storage service."
            },
            "restoreJobDetails": {
                "name": "restoreJobDetails",
                "type": "SoftLayer_Container_Network_Storage_Evault_WebCc_JobDetails",
                "form": "relational",
                "typeArray": true,
                "doc": "All the of the restore jobs for the EVault Storage account."
            },
            "softwareComponent": {
                "name": "softwareComponent",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "The software component for the EVault base client."
            },
            "tasks": {
                "name": "tasks",
                "type": "SoftLayer_Container_Network_Storage_Evault_Vault_Task",
                "form": "relational",
                "typeArray": true,
                "doc": "Retrieve the task information for the EVault Storage service."
            },
            "agentStatusCount": {
                "name": "agentStatusCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of statuses (most of the time will be one status) for the agent tied to the EVault Storage services."
            },
            "backupJobDetailCount": {
                "name": "backupJobDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all the of the backup jobs for the EVault Storage account."
            },
            "pluginBillingItemCount": {
                "name": "pluginBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items for plugins tied to the EVault Storage service."
            },
            "restoreJobDetailCount": {
                "name": "restoreJobDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all the of the restore jobs for the EVault Storage account."
            },
            "taskCount": {
                "name": "taskCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of retrieve the task information for the EVault Storage service."
            }
        }
    },
    "SoftLayer_Network_Storage_Credential": {
        "name": "SoftLayer_Network_Storage_Credential",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Storage_Credential data type will give you an overview of the usernames that are currently attached to your storage device. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "This is the account that the storage credential is tied to."
            },
            "networkStorageAllowedHosts": {
                "name": "networkStorageAllowedHosts",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "form": "relational",
                "doc": "These are the SoftLayer_Network_Storage_Allowed_Host entries that this credential is assigned to."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Storage_Credential_Type",
                "form": "relational",
                "doc": "These are the types of storage that the credential can be assigned to."
            },
            "volumes": {
                "name": "volumes",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "These are the SoftLayer_Network_Storage volumes that this credential is assigned to."
            },
            "accountId": {
                "name": "accountId",
                "type": "string",
                "form": "local",
                "doc": "This is the account id associated with the volume. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "This is the data that the record was created in the table. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "This is the date that the record was last updated in the table. "
            },
            "nasCredentialTypeId": {
                "name": "nasCredentialTypeId",
                "type": "int",
                "form": "local",
                "doc": "This is the id of the type of credential that this object represents. "
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "This is the password associated with the volume. "
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "This is the username associated with the volume. "
            },
            "volumeCount": {
                "name": "volumeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of these are the SoftLayer_Network_Storage volumes that this credential is assigned to."
            }
        }
    },
    "SoftLayer_Network_Storage_Credential_Type": {
        "name": "SoftLayer_Network_Storage_Credential_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "<<<",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a credential type was created."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A short description of the credential type"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The key name of the credential type."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a credential was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The human readable name of the credential type."
            }
        }
    },
    "SoftLayer_Network_Storage_Daily_Usage": {
        "name": "SoftLayer_Network_Storage_Daily_Usage",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "nasVolume": {
                "name": "nasVolume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational"
            },
            "bytesUsed": {
                "name": "bytesUsed",
                "type": "unsignedLong",
                "form": "local"
            },
            "cdnHttpBandwidth": {
                "name": "cdnHttpBandwidth",
                "type": "unsignedLong",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "nasVolumeId": {
                "name": "nasVolumeId",
                "type": "int",
                "form": "local"
            },
            "publicBandwidthOut": {
                "name": "publicBandwidthOut",
                "type": "unsignedLong",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Storage_DedicatedCluster": {
        "name": "SoftLayer_Network_Storage_DedicatedCluster",
        "base": "SoftLayer_Entity",
        "methods": {
            "getDedicatedClusterList": {
                "name": "getDedicatedClusterList",
                "type": "int",
                "typeArray": true,
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_DedicatedCluster",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "serviceResource": {
                "name": "serviceResource",
                "type": "SoftLayer_Network_Service_Resource",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Account->id of the customer account"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date when Dedicated service resource entry was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for Dedicated service resource record."
            },
            "serviceResourceId": {
                "name": "serviceResourceId",
                "type": "int",
                "form": "local",
                "doc": "The cluster Id that is setup as dedicated for the customer."
            }
        }
    },
    "SoftLayer_Network_Storage_Event": {
        "name": "SoftLayer_Network_Storage_Event",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Storage volumes can create various events to keep track of what has occurred to the volume. Events provide an audit trail that can be used to verify that various tasks have occurred, such as snapshots to be created by a schedule or remote replication synchronization. ",
        "properties": {
            "schedule": {
                "name": "schedule",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "doc": "A schedule that is associated with an event. Not all events will have a schedule."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Storage_Event_Type",
                "form": "relational",
                "doc": "A Storage volume's event type. The type provides a standardized definition for an event."
            },
            "volume": {
                "name": "volume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "The associated volume for an event."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an event was created."
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "The message text for an event."
            },
            "scheduleId": {
                "name": "scheduleId",
                "type": "int",
                "form": "local",
                "doc": "An identifier for the schedule which is associated with an event."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "An identifier for the type of an event."
            },
            "volumeId": {
                "name": "volumeId",
                "type": "int",
                "form": "local",
                "doc": "The volume id which an event is associated with."
            }
        }
    },
    "SoftLayer_Network_Storage_Event_Type": {
        "name": "SoftLayer_Network_Storage_Event_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Storage_Group": {
        "name": "SoftLayer_Network_Storage_Group",
        "base": "SoftLayer_Entity",
        "methods": {
            "addAllowedHost": {
                "name": "addAllowedHost",
                "type": "boolean",
                "doc": "Use this method to attach a SoftLayer_Network_Storage_Allowed_Host object to this group.  This will automatically enable access from this host to any SoftLayer_Network_Storage volumes currently attached to this group. ",
                "parameters": [
                    {
                        "name": "allowedHost",
                        "type": "SoftLayer_Network_Storage_Allowed_Host"
                    }
                ]
            },
            "attachToVolume": {
                "name": "attachToVolume",
                "type": "boolean",
                "doc": "Use this method to attach a SoftLayer_Network_Storage volume to this group.  This will automatically enable access to this volume for any SoftLayer_Network_Storage_Allowed_Host objects currently attached to this group. ",
                "parameters": [
                    {
                        "name": "volume",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Storage_Group",
                        "doc": "The SoftLayer_Network_Storage_Group object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Storage_Group",
                        "doc": "A skeleton SoftLayer_Network_Storage_Group object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Storage_Group",
                "typeArray": true,
                "doc": "Use this method to retrieve all network storage groups. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getNetworkConnectionDetails": {
                "name": "getNetworkConnectionDetails",
                "type": "SoftLayer_Container_Network_Storage_NetworkConnectionInformation",
                "doc": "Use this method to retrieve network connection information for SoftLayer_Network_Storage_Allowed_Host objects within this group. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Group",
                "filterable": true,
                "maskable": true
            },
            "removeAllowedHost": {
                "name": "removeAllowedHost",
                "type": "boolean",
                "doc": "Use this method to remove a SoftLayer_Network_Storage_Allowed_Host object from this group.  This will automatically disable access from this host to any SoftLayer_Network_Storage volumes currently attached to this group. ",
                "parameters": [
                    {
                        "name": "allowedHost",
                        "type": "SoftLayer_Network_Storage_Allowed_Host"
                    }
                ]
            },
            "removeFromVolume": {
                "name": "removeFromVolume",
                "type": "boolean",
                "doc": "Use this method to remove a SoftLayer_Network_Storage volume from this group.  This will automatically disable access to this volume for any SoftLayer_Network_Storage_Allowed_Host objects currently attached to this group. ",
                "parameters": [
                    {
                        "name": "volume",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer_Account which owns this group."
            },
            "allowedHosts": {
                "name": "allowedHosts",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "form": "relational",
                "typeArray": true,
                "doc": "The allowed hosts list for this group."
            },
            "attachedVolumes": {
                "name": "attachedVolumes",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The network storage volumes this group is attached to."
            },
            "groupType": {
                "name": "groupType",
                "type": "SoftLayer_Network_Storage_Group_Type",
                "form": "relational",
                "doc": "The type which defines this group."
            },
            "osType": {
                "name": "osType",
                "type": "SoftLayer_Network_Storage_Iscsi_OS_Type",
                "form": "relational",
                "doc": "The OS Type this group is configured for."
            },
            "serviceResource": {
                "name": "serviceResource",
                "type": "SoftLayer_Network_Service_Resource",
                "form": "relational",
                "doc": "The network resource this group is created on."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account ID which owns this group"
            },
            "alias": {
                "name": "alias",
                "type": "string",
                "form": "local",
                "doc": "The friendly name of this group"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date this group was created."
            },
            "groupTypeId": {
                "name": "groupTypeId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Network_Storage_Group_Type which describes this group."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the group"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "osTypeId": {
                "name": "osTypeId",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer_Network_Storage_OS_Type Operating System designation that this group was created for."
            },
            "serviceResourceId": {
                "name": "serviceResourceId",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer_Network_Service_Resource that this group was created on."
            },
            "allowedHostCount": {
                "name": "allowedHostCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the allowed hosts list for this group."
            },
            "attachedVolumeCount": {
                "name": "attachedVolumeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the network storage volumes this group is attached to."
            }
        }
    },
    "SoftLayer_Network_Storage_Group_Iscsi": {
        "name": "SoftLayer_Network_Storage_Group_Iscsi",
        "base": "SoftLayer_Network_Storage_Group",
        "methods": {
            "addAllowedHost": {
                "name": "addAllowedHost",
                "type": "boolean",
                "doc": "Use this method to attach a SoftLayer_Network_Storage_Allowed_Host object to this group.  This will automatically enable access from this host to any SoftLayer_Network_Storage volumes currently attached to this group. ",
                "parameters": [
                    {
                        "name": "allowedHost",
                        "type": "SoftLayer_Network_Storage_Allowed_Host"
                    }
                ]
            },
            "attachToVolume": {
                "name": "attachToVolume",
                "type": "boolean",
                "doc": "Use this method to attach a SoftLayer_Network_Storage volume to this group.  This will automatically enable access to this volume for any SoftLayer_Network_Storage_Allowed_Host objects currently attached to this group. ",
                "parameters": [
                    {
                        "name": "volume",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Group_Iscsi",
                "filterable": true,
                "maskable": true
            },
            "removeAllowedHost": {
                "name": "removeAllowedHost",
                "type": "boolean",
                "doc": "Use this method to remove a SoftLayer_Network_Storage_Allowed_Host object from this group.  This will automatically disable access from this host to any SoftLayer_Network_Storage volumes currently attached to this group. ",
                "parameters": [
                    {
                        "name": "allowedHost",
                        "type": "SoftLayer_Network_Storage_Allowed_Host"
                    }
                ]
            },
            "removeFromVolume": {
                "name": "removeFromVolume",
                "type": "boolean",
                "doc": "Use this method to remove a SoftLayer_Network_Storage volume from this group.  This will automatically disable access to this volume for any SoftLayer_Network_Storage_Allowed_Host objects currently attached to this group. ",
                "parameters": [
                    {
                        "name": "volume",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            }
        }
    },
    "SoftLayer_Network_Storage_Group_Nfs": {
        "name": "SoftLayer_Network_Storage_Group_Nfs",
        "base": "SoftLayer_Network_Storage_Group",
        "methods": {
            "addAllowedHost": {
                "name": "addAllowedHost",
                "type": "boolean",
                "doc": "Use this method to attach a SoftLayer_Network_Storage_Allowed_Host object to this group.  This will automatically enable access from this host to any SoftLayer_Network_Storage volumes currently attached to this group. ",
                "parameters": [
                    {
                        "name": "allowedHost",
                        "type": "SoftLayer_Network_Storage_Allowed_Host"
                    }
                ]
            },
            "attachToVolume": {
                "name": "attachToVolume",
                "type": "boolean",
                "doc": "Use this method to attach a SoftLayer_Network_Storage volume to this group.  This will automatically enable access to this volume for any SoftLayer_Network_Storage_Allowed_Host objects currently attached to this group. ",
                "parameters": [
                    {
                        "name": "volume",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Group_Nfs",
                "filterable": true,
                "maskable": true
            },
            "removeAllowedHost": {
                "name": "removeAllowedHost",
                "type": "boolean",
                "doc": "Use this method to remove a SoftLayer_Network_Storage_Allowed_Host object from this group.  This will automatically disable access from this host to any SoftLayer_Network_Storage volumes currently attached to this group. ",
                "parameters": [
                    {
                        "name": "allowedHost",
                        "type": "SoftLayer_Network_Storage_Allowed_Host"
                    }
                ]
            },
            "removeFromVolume": {
                "name": "removeFromVolume",
                "type": "boolean",
                "doc": "Use this method to remove a SoftLayer_Network_Storage volume from this group.  This will automatically disable access to this volume for any SoftLayer_Network_Storage_Allowed_Host objects currently attached to this group. ",
                "parameters": [
                    {
                        "name": "volume",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            }
        }
    },
    "SoftLayer_Network_Storage_Group_Type": {
        "name": "SoftLayer_Network_Storage_Group_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Storage_Group_Type",
                "typeArray": true,
                "doc": "Use this method to retrieve all storage group types available. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Group_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Storage_History": {
        "name": "SoftLayer_Network_Storage_History",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Storage_History contains the username/password past history for Storage services except Evault. Information such as the username, passwords, notes and the date of the password change may be retrieved. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that the Storage services belongs to."
            },
            "nasVolume": {
                "name": "nasVolume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "The Storage service that the password history belongs to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date the password was changed."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "Past notes for the Storage service."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "Password for the Storage service that was used in the past."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "Username for the Storage service."
            }
        }
    },
    "SoftLayer_Network_Storage_Hub": {
        "name": "SoftLayer_Network_Storage_Hub",
        "base": "SoftLayer_Network_Storage",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Storage_Hub data type models Virtual Server type Storage storage offerings. ",
        "properties": {
            "bandwidthBillingItems": {
                "name": "bandwidthBillingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items tied to a Storage service's bandwidth usage."
            },
            "bandwidthBillingItemCount": {
                "name": "bandwidthBillingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items tied to a Storage service's bandwidth usage."
            }
        }
    },
    "SoftLayer_Network_Storage_Hub_Cleversafe_Account": {
        "name": "SoftLayer_Network_Storage_Hub_Cleversafe_Account",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This class provides an interface for the management of IBM Cloud Object Storage Accounts and Credentials. ",
        "methods": {
            "credentialCreate": {
                "name": "credentialCreate",
                "type": "SoftLayer_Network_Storage_Credential",
                "typeArray": true,
                "doc": "Create credentials for an IBM Cloud Object Storage Account ",
                "maskable": true
            },
            "credentialDelete": {
                "name": "credentialDelete",
                "type": "boolean",
                "doc": "Delete a credential ",
                "parameters": [
                    {
                        "name": "credential",
                        "type": "SoftLayer_Network_Storage_Credential"
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Storage_Hub_Cleversafe_Account",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getBuckets": {
                "name": "getBuckets",
                "type": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Bucket",
                "typeArray": true,
                "doc": "Get buckets "
            },
            "getCapacityUsage": {
                "name": "getCapacityUsage",
                "type": "int",
                "doc": "Returns the capacity usage for an IBM Cloud Object Storage account. "
            },
            "getCloudObjectStorageMetrics": {
                "name": "getCloudObjectStorageMetrics",
                "type": "string",
                "typeArray": true,
                "doc": "Makes a request to Cloud Object Storage metricsAPI service and when successful, returns an associative array with two elements: \n\nif 200: \n\n[ <response Status Code String>, <JSON from metricsAPI as outlined below as String> ] \n\nif  not 200: \n\n[ <response Status Code String>, <response body as String> ] \n\n\n\n{ \"start\": \"<timeInMilliseconds>\", \"errors\": [], \"end\": \"<timeInMilliseconds>\", \"resource_type\": \"account\", \"warnings\": [], \"resources\": [{\"metrics\" : [{\"name\": \"retrieval\", \"value\": \"<number>\"}]}] } \n\nNotes: 1) When no data is found for a particular triplet (resource_id, storage_location, storage_class) a JSON element is inserted to the warnings Array. 2) If all queried triplets find data, only the resources Array will be populated, errors and warnings will remain empty. \n\n",
                "parameters": [
                    {
                        "name": "start",
                        "type": "string",
                        "doc": "Start time in milliseconds"
                    },
                    {
                        "name": "end",
                        "type": "string",
                        "doc": "End time in milliseconds"
                    },
                    {
                        "name": "storageLocation",
                        "type": "string",
                        "doc": "The storage location to query (ex. us-south)"
                    },
                    {
                        "name": "storageClass",
                        "type": "string",
                        "doc": "A comma separated list of all storage classes to query (ex. vault,cold)"
                    },
                    {
                        "name": "metrics",
                        "type": "string",
                        "doc": "A comma sepparated list of all metrics to query (ex. retrieval,copy_count)"
                    }
                ]
            },
            "getCredentialLimit": {
                "name": "getCredentialLimit",
                "type": "int",
                "doc": "Returns credential limits for this IBM Cloud Object Storage account. "
            },
            "getEndpoints": {
                "name": "getEndpoints",
                "type": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Endpoint",
                "typeArray": true,
                "doc": "Returns a collection of endpoint URLs available to this IBM Cloud Object Storage account. ",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int",
                        "defaultValue": null
                    }
                ]
            },
            "getEndpointsWithRefetch": {
                "name": "getEndpointsWithRefetch",
                "type": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Endpoint",
                "typeArray": true,
                "doc": "Returns a collection of endpoint URLs available to this IBM Cloud Object Storage account. ",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int",
                        "defaultValue": null
                    },
                    {
                        "name": "refetch",
                        "type": "boolean",
                        "defaultValue": false
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Hub_Cleversafe_Account",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "SoftLayer account to which an IBM Cloud Object Storage account belongs to."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "An associated parent billing item which is active. Includes billing items which are scheduled to be cancelled in the future."
            },
            "cancelledBillingItem": {
                "name": "cancelledBillingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "An associated parent billing item which has been cancelled."
            },
            "credentials": {
                "name": "credentials",
                "type": "SoftLayer_Network_Storage_Credential",
                "form": "relational",
                "typeArray": true,
                "doc": "Credentials used for generating an AWS signature. Max of 2."
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object",
                "form": "relational",
                "doc": "Provides an interface to various metrics relating to the usage of an IBM Cloud Object Storage account."
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "relational",
                "doc": "Unique identifier for an IBM Cloud Object Storage account."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the SoftLayer_Account which this IBM Cloud Object Storage account is associated with. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The IMS ID of an IBM Cloud Object Storage account. "
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A user-defined field of notes. "
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "Human readable identifier of IBM Cloud Object Storage accounts. "
            },
            "credentialCount": {
                "name": "credentialCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of credentials used for generating an AWS signature. Max of 2."
            }
        }
    },
    "SoftLayer_Network_Storage_Hub_Swift": {
        "name": "SoftLayer_Network_Storage_Hub_Swift",
        "base": "SoftLayer_Network_Storage_Hub",
        "noservice": true,
        "properties": {
            "storageNodes": {
                "name": "storageNodes",
                "type": "SoftLayer_Network_Service_Resource",
                "form": "relational",
                "typeArray": true
            },
            "storageNodeCount": {
                "name": "storageNodeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Storage_Hub_Swift_Container": {
        "name": "SoftLayer_Network_Storage_Hub_Swift_Container",
        "base": "SoftLayer_Network_Storage_Hub_Swift",
        "noservice": true
    },
    "SoftLayer_Network_Storage_Hub_Swift_Metrics": {
        "name": "SoftLayer_Network_Storage_Hub_Swift_Metrics",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service provides summarization functionality for Swift based accounts. It uses influxDB as a backend ",
        "methods": {
            "getMetricData": {
                "name": "getMetricData",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime"
                    },
                    {
                        "name": "metricKey",
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "type": "string"
                    }
                ]
            },
            "getSummaryData": {
                "name": "getSummaryData",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime"
                    },
                    {
                        "name": "validTypes",
                        "type": "SoftLayer_Container_Metric_Data_Type",
                        "typeArray": true
                    },
                    {
                        "name": "summaryPeriod",
                        "type": "int",
                        "doc": "300, 600, 1800, 3600, 43200 or 86400 seconds"
                    }
                ]
            }
        }
    },
    "SoftLayer_Network_Storage_Hub_Swift_Share": {
        "name": "SoftLayer_Network_Storage_Hub_Swift_Share",
        "base": "SoftLayer_Entity",
        "methods": {
            "getContainerList": {
                "name": "getContainerList",
                "type": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Folder",
                "typeArray": true,
                "doc": "This method returns a collection of container objects. ",
                "static": true
            },
            "getFile": {
                "name": "getFile",
                "type": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_File",
                "doc": "This method returns a file object given the file's full name. ",
                "static": true,
                "parameters": [
                    {
                        "name": "fileName",
                        "type": "string",
                        "doc": "name of the file to download."
                    },
                    {
                        "name": "container",
                        "type": "string",
                        "doc": "Name of the container that the file is in."
                    }
                ]
            },
            "getFileList": {
                "name": "getFileList",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "typeArray": true,
                "doc": "This method returns a collection of the file objects within a container and the given path. ",
                "static": true,
                "limitable": true,
                "parameters": [
                    {
                        "name": "container",
                        "type": "string",
                        "doc": "Name of a container"
                    },
                    {
                        "name": "path",
                        "type": "string",
                        "doc": "The file name, this could contain '/'s to denote a pseudo directory structure"
                    }
                ]
            }
        }
    },
    "SoftLayer_Network_Storage_Hub_Swift_Version1": {
        "name": "SoftLayer_Network_Storage_Hub_Swift_Version1",
        "base": "SoftLayer_Network_Storage_Hub_Swift",
        "noservice": true
    },
    "SoftLayer_Network_Storage_Iscsi": {
        "name": "SoftLayer_Network_Storage_Iscsi",
        "base": "SoftLayer_Network_Storage",
        "serviceDoc": "SoftLayer's iscsi product extends upon the base functionality of SoftLayer offerings by providing snapshot and replication capabilities. An iscsi volume is mounted through SoftLayer's private network and allows for block level additional storage on a highly redundant disk array. SoftLayer's iscsi offering is capable of taking volume snapshots which can be mounted read-only or used for an immediate volume data restore. This high-end Storage offering is also capable of being configured for remote data replication to any of SoftLayer's datacenters to provide a solid disaster recovery solution. ",
        "methods": {
            "allowAccessFromHardware": {
                "name": "allowAccessFromHardware",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Hardware objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplate",
                        "type": "SoftLayer_Hardware"
                    }
                ]
            },
            "allowAccessFromIpAddress": {
                "name": "allowAccessFromIpAddress",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplate",
                        "type": "SoftLayer_Network_Subnet_IpAddress"
                    }
                ]
            },
            "allowAccessFromVirtualGuest": {
                "name": "allowAccessFromVirtualGuest",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplate",
                        "type": "SoftLayer_Virtual_Guest"
                    }
                ]
            },
            "allowAccessToReplicantFromHardwareList": {
                "name": "allowAccessToReplicantFromHardwareList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage replica volume.  The SoftLayer_Hardware objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage replica volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplates",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessToReplicantFromIpAddressList": {
                "name": "allowAccessToReplicantFromIpAddressList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Network_Subnet_IpAddress objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplates",
                        "type": "SoftLayer_Network_Subnet_IpAddress",
                        "typeArray": true
                    }
                ]
            },
            "allowAccessToReplicantFromVirtualGuestList": {
                "name": "allowAccessToReplicantFromVirtualGuestList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplates",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true
                    }
                ]
            },
            "createOrUpdateLunId": {
                "name": "createOrUpdateLunId",
                "type": "SoftLayer_Network_Storage_Property",
                "doc": "The LUN ID only takes effect during the Host Authorization process. It is required to de-authorize all hosts before using this method. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "lunId",
                        "type": "int",
                        "doc": "<<< EOT"
                    }
                ]
            },
            "getMaximumExpansionSize": {
                "name": "getMaximumExpansionSize",
                "type": "int"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Iscsi",
                "filterable": true,
                "maskable": true
            },
            "getSnapshotsForVolume": {
                "name": "getSnapshotsForVolume",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "Retrieves a list of snapshots for this SoftLayer_Network_Storage volume. This method works with the result limits and offset to support pagination. ",
                "limitable": true,
                "maskable": true
            },
            "removeAccessFromHardware": {
                "name": "removeAccessFromHardware",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Hardware objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplate",
                        "type": "SoftLayer_Hardware"
                    }
                ]
            },
            "removeAccessFromIpAddress": {
                "name": "removeAccessFromIpAddress",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplate",
                        "type": "SoftLayer_Network_Subnet_IpAddress"
                    }
                ]
            },
            "removeAccessFromVirtualGuest": {
                "name": "removeAccessFromVirtualGuest",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage volume.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplate",
                        "type": "SoftLayer_Virtual_Guest"
                    }
                ]
            },
            "removeAccessToReplicantFromHardwareList": {
                "name": "removeAccessToReplicantFromHardwareList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage replica volume.  The SoftLayer_Hardware objects which have been allowed access to this storage will be listed in the allowedHardware property of this storage replica volume. ",
                "parameters": [
                    {
                        "name": "hardwareObjectTemplates",
                        "type": "SoftLayer_Hardware",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessToReplicantFromIpAddressList": {
                "name": "removeAccessToReplicantFromIpAddressList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage replica volume.  The SoftLayer_Network_Subnet_IpAddress objects which have been allowed access to this storage will be listed in the allowedIpAddresses property of this storage replica volume. ",
                "parameters": [
                    {
                        "name": "ipAddressObjectTemplates",
                        "type": "SoftLayer_Network_Subnet_IpAddress",
                        "typeArray": true
                    }
                ]
            },
            "removeAccessToReplicantFromVirtualGuestList": {
                "name": "removeAccessToReplicantFromVirtualGuestList",
                "type": "boolean",
                "doc": "This method is used to modify the access control list for this Storage replica volume.  The SoftLayer_Virtual_Guest objects which have been allowed access to this storage will be listed in the allowedVirtualGuests property of this storage replica volume. ",
                "parameters": [
                    {
                        "name": "virtualGuestObjectTemplates",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true
                    }
                ]
            }
        },
        "typeDoc": "The iscsi data type provides access to additional information about an iscsi volume such as the snapshot capacity limit and replication partners. "
    },
    "SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3": {
        "name": "SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3",
        "base": "SoftLayer_Network_Storage_Iscsi",
        "noservice": true,
        "typeDoc": "The iscsi EqualLogic Version 3 data type provides access to additional information about an iscsi volume such as the available snapshot reserve space. "
    },
    "SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3_Replicant": {
        "name": "SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3_Replicant",
        "base": "SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3",
        "noservice": true,
        "typeDoc": "An iscsi replicant receives incoming data from an associated iscsi volume.  While the replicant is not in failover mode it will not be mountable.  Upon failover the replicant can be mounted and used as a normal volume.  It is suggested to only do this as part of a disaster recovery plan. ",
        "properties": {
            "failbackInProgressFlag": {
                "name": "failbackInProgressFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "When a replicant is in the process of synchronizing with the parent volume this flag will be true."
            },
            "volumeName": {
                "name": "volumeName",
                "type": "string",
                "form": "relational",
                "doc": "The volume name for an iscsi replicant."
            }
        }
    },
    "SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3_Snapshot": {
        "name": "SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3_Snapshot",
        "base": "SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3",
        "noservice": true,
        "typeDoc": "An iscsi snapshot is a point-in-time view of the data on an associated iscsi volume. Iscsi snapshots use a copy-on-write technology to minimize the amount of snapshot space used. When a snapshot is initially created it will use no snapshot space. At the time data changes on a volume which existed when a snapshot was created the original data will be saved in the associated volume's snapshot reserve space. \n\nAs a snapshot is created offline it must be set mountable in order to mount it via an iscsi initiator service. ",
        "properties": {
            "creationSchedule": {
                "name": "creationSchedule",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "doc": "If applicable, the schedule which was executed to create a snapshot."
            },
            "volumeName": {
                "name": "volumeName",
                "type": "string",
                "form": "relational",
                "doc": "The volume name for an iscsi snapshot."
            }
        }
    },
    "SoftLayer_Network_Storage_Iscsi_OS_Type": {
        "name": "SoftLayer_Network_Storage_Iscsi_OS_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Storage_Iscsi_OS_Type",
                "typeArray": true,
                "doc": "Use this method to retrieve all iSCSI OS Types. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Iscsi_OS_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date this OS type record was created."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of this OS type"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the OS type selection"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The key name of this OS type"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of this OS type"
            }
        }
    },
    "SoftLayer_Network_Storage_MassDataMigration_CrossRegion_Country_Xref": {
        "name": "SoftLayer_Network_Storage_MassDataMigration_CrossRegion_Country_Xref",
        "base": "SoftLayer_Entity",
        "serviceDoc": "MassDataMigration_CrossRegion_Country_Xref provides a list of countries where Mass Data Migration Device could be shipped for each CleverSafe Object Storage Region. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Storage_MassDataMigration_CrossRegion_Country_Xref",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_MassDataMigration_CrossRegion_Country_Xref",
                "filterable": true,
                "maskable": true
            },
            "getValidCountriesForRegion": {
                "name": "getValidCountriesForRegion",
                "type": "SoftLayer_Network_Storage_MassDataMigration_CrossRegion_Country_Xref",
                "typeArray": true,
                "doc": "Returns countries assigned to the region having pricing info set. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "locationGroupName",
                        "type": "string"
                    }
                ]
            }
        },
        "properties": {
            "country": {
                "name": "country",
                "type": "SoftLayer_Locale_Country",
                "form": "relational",
                "doc": "SoftLayer_Locale_Country Id."
            },
            "locationGroup": {
                "name": "locationGroup",
                "type": "SoftLayer_Location_Group",
                "form": "relational",
                "doc": "Location Group ID of CleverSafe cross region."
            },
            "countryId": {
                "name": "countryId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "locationGroupId": {
                "name": "locationGroupId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Network_Storage_MassDataMigration_Request": {
        "name": "SoftLayer_Network_Storage_MassDataMigration_Request",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Mass Data Migration Request Service allows users to request Massive storage device to copy onsite data. Once user has copied their data onto device, they ship it back to SoftLayer where device is connected to network and data is transferred to Object Storage bucket. Currently, the initial usage period is two weeks . Additional time for maintaining the media for continued may be purchased. Please contact sales for additional information regarding this. Once the usage period has elapsed. SoftLayer will disconnect the device. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getAllRequestStatuses": {
                "name": "getAllRequestStatuses",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request_Status",
                "typeArray": true,
                "doc": "Retrieves a list of all the possible statuses to which a request may be set.",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request",
                "filterable": true,
                "maskable": true
            },
            "getPendingRequests": {
                "name": "getPendingRequests",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request",
                "typeArray": true,
                "doc": "Returns placeholder MDMS requests for any MDMS order pending approval. ",
                "static": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Storage_MassDataMigration_Request data type contains information on a single Mass Data Migration request. Creation of these requests is limited to SoftLayer customers through the SoftLayer Customer Portal. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account to which the request belongs."
            },
            "activeTickets": {
                "name": "activeTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "The active tickets that are attached to the MDMS request."
            },
            "address": {
                "name": "address",
                "type": "SoftLayer_Account_Address",
                "form": "relational",
                "doc": "The customer address where the device is shipped to."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "An associated parent billing item which is active. Includes billing items which are scheduled to be cancelled in the future."
            },
            "createEmployee": {
                "name": "createEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "The employee user who created the request."
            },
            "createUser": {
                "name": "createUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who created the request."
            },
            "deviceConfiguration": {
                "name": "deviceConfiguration",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request_DeviceConfiguration",
                "form": "relational",
                "doc": "The device configurations."
            },
            "deviceModel": {
                "name": "deviceModel",
                "type": "string",
                "form": "relational",
                "doc": "The model of device assigned to this request."
            },
            "keyContacts": {
                "name": "keyContacts",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request_KeyContact",
                "form": "relational",
                "typeArray": true,
                "doc": "The key contacts for this requests."
            },
            "modifyEmployee": {
                "name": "modifyEmployee",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "doc": "The employee who last modified the request."
            },
            "modifyUser": {
                "name": "modifyUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The customer user who last modified the request."
            },
            "shipments": {
                "name": "shipments",
                "type": "SoftLayer_Account_Shipment",
                "form": "relational",
                "typeArray": true,
                "doc": "The shipments of the request."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request_Status",
                "form": "relational",
                "doc": "The status of the request."
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "doc": "Ticket that is attached to this mass data migration request."
            },
            "tickets": {
                "name": "tickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "All tickets that are attached to the mass data migration request."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account id of the request."
            },
            "addressId": {
                "name": "addressId",
                "type": "int",
                "form": "local",
                "doc": "The address id of address assigned to this request."
            },
            "createUserId": {
                "name": "createUserId",
                "type": "int",
                "form": "local",
                "doc": "The create user id of the request."
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The end date of the request."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the request."
            },
            "modifyUserId": {
                "name": "modifyUserId",
                "type": "int",
                "form": "local",
                "doc": "The modify user id of the request."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The unique id of the request."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The start date of the request."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The status id of the request."
            },
            "activeTicketCount": {
                "name": "activeTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the active tickets that are attached to the MDMS request."
            },
            "keyContactCount": {
                "name": "keyContactCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the key contacts for this requests."
            },
            "shipmentCount": {
                "name": "shipmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the shipments of the request."
            },
            "ticketCount": {
                "name": "ticketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all tickets that are attached to the mass data migration request."
            }
        }
    },
    "SoftLayer_Network_Storage_MassDataMigration_Request_DeviceConfiguration": {
        "name": "SoftLayer_Network_Storage_MassDataMigration_Request_DeviceConfiguration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Storage_MassDataMigration_Request_DeviceConfiguration data type contains settings such networking, COS account, which needs to be configured on device for a Mass Data Migration Request. ",
        "properties": {
            "request": {
                "name": "request",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request",
                "form": "relational",
                "doc": "The request this device configurations belongs to."
            },
            "storageAccount": {
                "name": "storageAccount",
                "type": "SoftLayer_Network_Storage_Hub_Cleversafe_Account",
                "form": "relational",
                "doc": "The storage account to use for this request."
            },
            "cosAccountId": {
                "name": "cosAccountId",
                "type": "int",
                "form": "local",
                "doc": "The account id."
            },
            "cosBucket": {
                "name": "cosBucket",
                "type": "string",
                "form": "local",
                "doc": "The Cloud Object Storage bucket."
            },
            "eth1Gateway": {
                "name": "eth1Gateway",
                "type": "string",
                "form": "local",
                "doc": "The eth1 gateway for connecting to private network in datacenter."
            },
            "eth1IpAddress": {
                "name": "eth1IpAddress",
                "type": "string",
                "form": "local",
                "doc": "The eth1 IP address for connecting to private network in datacenter."
            },
            "eth1Netmask": {
                "name": "eth1Netmask",
                "type": "string",
                "form": "local",
                "doc": "The eth1 netmask for connecting to private network in datacenter."
            },
            "eth3Gateway": {
                "name": "eth3Gateway",
                "type": "string",
                "form": "local",
                "doc": "The eth3 gateway for connecting to private network at customer's location."
            },
            "eth3IpAddress": {
                "name": "eth3IpAddress",
                "type": "string",
                "form": "local",
                "doc": "The eth3 IP address for connecting to private network at customer location."
            },
            "eth3Netmask": {
                "name": "eth3Netmask",
                "type": "string",
                "form": "local",
                "doc": "The eth3 netmask for connecting to private network in at customer's location."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the request status."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "The password for configuring network share."
            },
            "poolLockPassword": {
                "name": "poolLockPassword",
                "type": "string",
                "form": "local",
                "doc": "The pool lock password for configuring network share."
            },
            "requestId": {
                "name": "requestId",
                "type": "int",
                "form": "local",
                "doc": "The request id."
            },
            "s3Url": {
                "name": "s3Url",
                "type": "string",
                "form": "local",
                "doc": "The Cloud Object Storage bucket URL."
            },
            "shareName": {
                "name": "shareName",
                "type": "string",
                "form": "local",
                "doc": "The name of network share."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username for configuring network share."
            }
        }
    },
    "SoftLayer_Network_Storage_MassDataMigration_Request_KeyContact": {
        "name": "SoftLayer_Network_Storage_MassDataMigration_Request_KeyContact",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_Storage_MassDataMigration_Request_KeyContact data type contains name, email, and phone for key contact at customer location who will handle Mass Data Migration. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request_KeyContact",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Storage_MassDataMigration_Request_KeyContact data type contains name, email, and phone for key contact at customer location who will handle Mass Data Migration. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The request this key contact belongs to."
            },
            "request": {
                "name": "request",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request",
                "form": "relational",
                "doc": "The request this key contact belongs to."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "An account number that is linked to a KeyContact."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a KeyContact was created."
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "KeyContact's Email Id."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the key contact."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a KeyContact was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "KeyContact's Name."
            },
            "phone": {
                "name": "phone",
                "type": "string",
                "form": "local",
                "doc": "A phone number assigned to a KeyContact."
            },
            "requestId": {
                "name": "requestId",
                "type": "int",
                "form": "local",
                "doc": "A request id that is linked to a KeyContact."
            }
        }
    },
    "SoftLayer_Network_Storage_MassDataMigration_Request_Status": {
        "name": "SoftLayer_Network_Storage_MassDataMigration_Request_Status",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request_Status",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Storage_MassDataMigration_Request_Status data type contains general information relating to the statuses to which a Mass Data Migration Request may be set. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the request status."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique id of the request status."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The unique keyname of the request status."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the request status."
            }
        }
    },
    "SoftLayer_Network_Storage_Nas": {
        "name": "SoftLayer_Network_Storage_Nas",
        "base": "SoftLayer_Network_Storage",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Storage_Nas contains general information regarding a NAS Storage service such as account id, username, password, maximum capacity, Storage's product type and capacity. ",
        "properties": {
            "recentBytesUsed": {
                "name": "recentBytesUsed",
                "type": "SoftLayer_Network_Storage_Daily_Usage",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Network_Storage_Partnership": {
        "name": "SoftLayer_Network_Storage_Partnership",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A network storage partnership is used to link multiple volumes to each other. These partnerships describe replication hierarchies or link volume snapshots to their associated storage volume. ",
        "properties": {
            "partnerVolume": {
                "name": "partnerVolume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "The associated child volume for a partnership."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Storage_Partnership_Type",
                "form": "relational",
                "doc": "The type provides a standardized definition for a partnership."
            },
            "volume": {
                "name": "volume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "The associated parent volume for a partnership."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a partnership was created."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a partnership was last modified."
            },
            "partnerVolumeId": {
                "name": "partnerVolumeId",
                "type": "int",
                "form": "local",
                "doc": "The child volume id which a partnership is associated with."
            },
            "volumeId": {
                "name": "volumeId",
                "type": "int",
                "form": "local",
                "doc": "The volume id which a partnership is associated with."
            }
        }
    },
    "SoftLayer_Network_Storage_Partnership_Type": {
        "name": "SoftLayer_Network_Storage_Partnership_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A network storage partnership type is used to define the link between two volumes. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A type's description, for example 'ISCSI snapshot partnership'."
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "A type's key name, for example 'ISCSI_SNAPSHOT'."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A type's name, for example 'ISCSI Snapshot'."
            }
        }
    },
    "SoftLayer_Network_Storage_Property": {
        "name": "SoftLayer_Network_Storage_Property",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A property provides additional information about a volume which it is assigned to. This information can range from \"Mountable\" flags to utilized snapshot space. ",
        "properties": {
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Storage_Property_Type",
                "form": "relational",
                "doc": "The type provides a standardized definition for a property."
            },
            "volume": {
                "name": "volume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "The associated volume for a property."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a property was created."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a property was last modified;"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value of a property."
            },
            "volumeId": {
                "name": "volumeId",
                "type": "int",
                "form": "local",
                "doc": "The volume id which a property is associated with."
            }
        }
    },
    "SoftLayer_Network_Storage_Property_Type": {
        "name": "SoftLayer_Network_Storage_Property_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The storage property types provide standard definitions for properties which can be used with any type for Storage offering.  The properties provide additional information about a volume which they are assigned to. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A type's description, for example 'Determines whether the volume is currently mountable'."
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "A type's keyname, for example 'MOUNTABLE'."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A type's name, for example 'Mountable'."
            }
        }
    },
    "SoftLayer_Network_Storage_Replicant": {
        "name": "SoftLayer_Network_Storage_Replicant",
        "base": "SoftLayer_Network_Storage",
        "noservice": true,
        "properties": {
            "failbackInProgressFlag": {
                "name": "failbackInProgressFlag",
                "type": "string",
                "form": "relational",
                "doc": "When a replicant is in the process of synchronizing with the parent volume this flag will be true."
            },
            "volumeName": {
                "name": "volumeName",
                "type": "string",
                "form": "relational",
                "doc": "The volume name for a replicant."
            }
        }
    },
    "SoftLayer_Network_Storage_Schedule": {
        "name": "SoftLayer_Network_Storage_Schedule",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Schedules can be created for select Storage services, such as iscsi. These schedules are used to perform various tasks such as scheduling snapshots or synchronizing replicants. \n\nThe schedule service can be used to create, edit, or delete a schedule. Schedules are defined by the properties associated with them to specify values such as the start date, interval, or end date of the schedule. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Storage_Schedule",
                "doc": "Create a nas volume schedule ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Storage_Schedule",
                        "doc": "The SoftLayer_Network_Storage_Schedule object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a network storage schedule. '''This cannot be undone.''' ''deleteObject'' returns Boolean ''true'' on successful deletion or ''false'' if it was unable to remove a schedule; "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit a nas volume schedule ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Storage_Schedule",
                        "doc": "A skeleton SoftLayer_Network_Storage_Schedule object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Schedule",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Schedules can be created for select Storage services, such as iscsi. These schedules are used to perform various tasks such as scheduling snapshots or synchronizing replicants. ",
        "properties": {
            "day": {
                "name": "day",
                "type": "string",
                "form": "relational",
                "doc": "The hour parameter of this schedule."
            },
            "dayOfMonth": {
                "name": "dayOfMonth",
                "type": "string",
                "form": "relational",
                "doc": "The day of the month parameter of this schedule."
            },
            "dayOfWeek": {
                "name": "dayOfWeek",
                "type": "string",
                "form": "relational",
                "doc": "The day of the week parameter of this schedule."
            },
            "events": {
                "name": "events",
                "type": "SoftLayer_Network_Storage_Event",
                "form": "relational",
                "typeArray": true,
                "doc": "Events which have been created as the result of a schedule execution."
            },
            "hour": {
                "name": "hour",
                "type": "string",
                "form": "relational",
                "doc": "The hour parameter of this schedule."
            },
            "minute": {
                "name": "minute",
                "type": "string",
                "form": "relational",
                "doc": "The minute parameter of this schedule."
            },
            "monthOfYear": {
                "name": "monthOfYear",
                "type": "string",
                "form": "relational",
                "doc": "The month of the year parameter of this schedule."
            },
            "partnership": {
                "name": "partnership",
                "type": "SoftLayer_Network_Storage_Partnership",
                "form": "relational",
                "doc": "The associated partnership for a schedule."
            },
            "properties": {
                "name": "properties",
                "type": "SoftLayer_Network_Storage_Schedule_Property",
                "form": "relational",
                "typeArray": true,
                "doc": "Properties used for configuration of a schedule."
            },
            "replicaSnapshots": {
                "name": "replicaSnapshots",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "Replica snapshots which have been created as the result of this schedule's execution."
            },
            "retentionCount": {
                "name": "retentionCount",
                "type": "string",
                "form": "relational",
                "doc": "The number of snapshots this schedule is configured to retain."
            },
            "second": {
                "name": "second",
                "type": "string",
                "form": "relational",
                "doc": "The minute parameter of this schedule."
            },
            "snapshots": {
                "name": "snapshots",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "Snapshots which have been created as the result of this schedule's execution."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Storage_Schedule_Type",
                "form": "relational",
                "doc": "The type provides a standardized definition for a schedule."
            },
            "volume": {
                "name": "volume",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "The associated volume for a schedule."
            },
            "active": {
                "name": "active",
                "type": "int",
                "form": "local",
                "doc": "A flag which determines if a schedule is active."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a schedule was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A schedule's internal identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a schedule was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A schedule's name, for example 'Daily'."
            },
            "partnershipId": {
                "name": "partnershipId",
                "type": "int",
                "form": "local",
                "doc": "The partnership id which a schedule is associated with."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The type id which a schedule is associated with."
            },
            "volumeId": {
                "name": "volumeId",
                "type": "int",
                "form": "local",
                "doc": "The volume id which a schedule is associated with."
            },
            "eventCount": {
                "name": "eventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of events which have been created as the result of a schedule execution."
            },
            "propertyCount": {
                "name": "propertyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of properties used for configuration of a schedule."
            },
            "replicaSnapshotCount": {
                "name": "replicaSnapshotCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of replica snapshots which have been created as the result of this schedule's execution."
            },
            "snapshotCount": {
                "name": "snapshotCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of snapshots which have been created as the result of this schedule's execution."
            }
        }
    },
    "SoftLayer_Network_Storage_Schedule_Property": {
        "name": "SoftLayer_Network_Storage_Schedule_Property",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Schedule properties provide attributes such as start date, end date, interval, and other properties to a storage schedule. ",
        "properties": {
            "schedule": {
                "name": "schedule",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "doc": "The associated schedule for a property."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Storage_Schedule_Property_Type",
                "form": "relational",
                "doc": "The type provides a standardized definition for a property."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a schedule property was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A schedule property's internal identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a schedule property was last modified."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "An identifier for the type of a property."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value of a property."
            }
        }
    },
    "SoftLayer_Network_Storage_Schedule_Property_Type": {
        "name": "SoftLayer_Network_Storage_Schedule_Property_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Storage_Schedule_Property_Type",
                "typeArray": true,
                "doc": "Use this method to retrieve all network storage schedule property types. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Storage_Schedule_Property_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "A schedule property type is used to allow for a standardized method of defining network storage schedules. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A type's description, for example 'Date for the schedule to start.'."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A schedule property type's internal identifier."
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "A schedule property type's key name, for example 'START_DATE'."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A schedule property type's name, for example 'Start Date'."
            },
            "nasType": {
                "name": "nasType",
                "type": "string",
                "form": "local",
                "doc": "The type of Storage volume type which a property type may be associated with."
            }
        }
    },
    "SoftLayer_Network_Storage_Schedule_Type": {
        "name": "SoftLayer_Network_Storage_Schedule_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A schedule type is used to define what a schedule was created to do. When creating a schedule to take snapshots of a volume, the 'Snapshot' schedule type would be used. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A schedule type's internal identifier."
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "A schedule type's key name, for example 'SNAPSHOT'."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A schedule type's name, for example 'Snapshot'."
            }
        }
    },
    "SoftLayer_Network_Storage_Snapshot": {
        "name": "SoftLayer_Network_Storage_Snapshot",
        "base": "SoftLayer_Network_Storage",
        "noservice": true,
        "properties": {
            "creationSchedule": {
                "name": "creationSchedule",
                "type": "SoftLayer_Network_Storage_Schedule",
                "form": "relational",
                "doc": "If applicable, the schedule which was executed to create a snapshot."
            },
            "volumeName": {
                "name": "volumeName",
                "type": "string",
                "form": "relational",
                "doc": "The volume name for the snapshot."
            }
        }
    },
    "SoftLayer_Network_Storage_Type": {
        "name": "SoftLayer_Network_Storage_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Storage_Type contains a description of the associated SoftLayer_Network_Storage object. ",
        "properties": {
            "volumes": {
                "name": "volumes",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage object that uses this type."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Human readable description for the associated SoftLayer_Network_Storage object. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "ID which corresponds with storageTypeId on storage objects. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Machine readable description code for the associated SoftLayer_Network_Storage object. "
            },
            "volumeCount": {
                "name": "volumeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage object that uses this type."
            }
        }
    },
    "SoftLayer_Network_Subnet": {
        "name": "SoftLayer_Network_Subnet",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every SoftLayer ip address is associated with a subnet which is defined in the SoftLayer_Network_Subnet service. SoftLayer subnets define a group of ip addresses and are assigned to a SoftLayer_Network_Vlan.  The SoftLayer_Network_Subnet service gives you information about your subnet such as your network address, broadcast address, the subnet gateway address, and the total number of IP addresses within the subnet. Use the data returned by these methods with other API services to get more detailed information about your services. \n\nAlong with VLANs, subnets are an integral part of the SoftLayer network. Each server ordered by SoftLayer comes with at least one public and one private subnet, with more available for order in the customer portal. Subnets exist in the SoftLayer network as either interfaces on a VLAN or as route destination from an IP address or VLAN. \n\nSoftLayer customers can order and manage subnets through the customer portal. If you need to cancel a subnet please open a sales ticket in our customer portal and our account management staff will assist you. ",
        "methods": {
            "allowAccessToNetworkStorage": {
                "name": "allowAccessToNetworkStorage",
                "type": "boolean",
                "doc": "This method is used to allow access to a SoftLayer_Network_Storage volume that supports host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObject",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            },
            "allowAccessToNetworkStorageList": {
                "name": "allowAccessToNetworkStorageList",
                "type": "boolean",
                "doc": "This method is used to allow access to multiple SoftLayer_Network_Storage volumes that support host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObjects",
                        "type": "SoftLayer_Network_Storage",
                        "typeArray": true
                    }
                ]
            },
            "clearRoute": {
                "name": "clearRoute",
                "type": "boolean",
                "doc": "This interface allows you to remove the route of your Account Owned subnets. The result will be a subnet that is no longer routed on the network. Remove the route of subnets you are not actively using, as it will make it easier to identify available subnets later. \n\n'''Important:''' When removing the route of ''Portable'' subnets, know that any subnet depending on an IP address provided by the Portable subnet will also have their routes removed! \n\nTo review what subnets are routed to IP addresses provided by a ''Portable'' subnet, you can utilize the following object mask: 'mask[ipAddresses[endpointSubnets]]'. Any subnet present in conjunction with ''endpointSubnets'' is a subnet which depends on the respective IP address. \n\nThe behavior of this interface is such that either true or false is returned. A result of false can be interpreted as the clear route request having already been completed. In contrast, a result of true means the subnet is currently routed and will be transitioned. This route change is asynchronous to the request. A response of true does not mean the subnet's route has changed, but simply that it will change. In order to monitor for the completion of the change, you may either attempt a clear route again until the result is false, or monitor one or more SoftLayer_Network_Subnet properties: subnetType, networkVlanId, and or endPointIpAddress to determine if routing of the subnet has been removed. "
            },
            "createReverseDomainRecords": {
                "name": "createReverseDomainRecords",
                "type": "SoftLayer_Dns_Domain_Reverse",
                "doc": "Create the default PTR records for this subnet ",
                "maskable": true
            },
            "createSubnetRouteUpdateTransaction": {
                "name": "createSubnetRouteUpdateTransaction",
                "type": "boolean",
                "doc": "\n***DEPRECATED***\nThis endpoint is deprecated in favor of the more expressive and capable SoftLayer_Network_Subnet::route, to which this endpoint now proxies. Refer to it for more information. \n\nSimilarly, unroute requests are proxied to SoftLayer_Network_Subnet::clearRoute. ",
                "parameters": [
                    {
                        "name": "newEndPointIpAddress",
                        "type": "string",
                        "doc": "The IP address to route the subnet to",
                        "defaultValue": null
                    }
                ]
            },
            "createSwipTransaction": {
                "name": "createSwipTransaction",
                "type": "boolean",
                "doc": "\n***DEPRECATED***\nThis function is used to create a new SoftLayer SWIP transaction to register your RWHOIS data with ARIN. SWIP transactions can only be initiated on subnets that contain more than 8 IP addresses. "
            },
            "editNote": {
                "name": "editNote",
                "type": "boolean",
                "doc": "Edit the note for this subnet.",
                "parameters": [
                    {
                        "name": "note",
                        "type": "string",
                        "doc": "The note",
                        "defaultValue": null
                    }
                ]
            },
            "findAllSubnetsAndActiveSwipTransactionStatus": {
                "name": "findAllSubnetsAndActiveSwipTransactionStatus",
                "type": "SoftLayer_Network_Subnet",
                "typeArray": true,
                "doc": "\n***DEPRECATED***\nRetrieve a list of a SoftLayer customer's subnets along with their SWIP transaction statuses. This is a shortcut method that combines the SoftLayer_Network_Subnet retrieval methods along with [[object masks]] to retrieve their subnets' associated SWIP transactions as well. \n\nThis is a special function built for SoftLayer's use on the SWIP section of the customer portal, but may also be useful for API users looking for the same data. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getAttachedNetworkStorages": {
                "name": "getAttachedNetworkStorages",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "This method is retrieve a list of SoftLayer_Network_Storage volumes that are authorized access to this SoftLayer_Network_Subnet. ",
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "nasType",
                        "type": "string",
                        "doc": "either 'ISCSI', 'NAS', or '*' for both",
                        "defaultValue": "*"
                    }
                ]
            },
            "getAvailableNetworkStorages": {
                "name": "getAvailableNetworkStorages",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "This method retrieves a list of SoftLayer_Network_Storage volumes that can be authorized to this SoftLayer_Network_Subnet. ",
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "nasType",
                        "type": "string",
                        "doc": "either 'ISCSI', 'NAS', or '*' for both",
                        "defaultValue": "*"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Subnet",
                "doc": "getObject retrieves the SoftLayer_Network_Subnet object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Subnet service. You can only retrieve the subnet whose vlan is associated with the account that you portal user is assigned to. ",
                "filterable": true,
                "maskable": true
            },
            "getReverseDomainRecords": {
                "name": "getReverseDomainRecords",
                "type": "SoftLayer_Dns_Domain",
                "typeArray": true,
                "doc": "Retrieve all reverse DNS records associated with a subnet. ",
                "maskable": true
            },
            "getRoutableEndpointIpAddresses": {
                "name": "getRoutableEndpointIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "typeArray": true,
                "doc": "Returns IP addresses which may be used as routing endpoints for a given subnet. IP address which are currently the network, gateway, or broadcast address of a Secondary Portable subnet, are an address in a Secondary Static subnet, or if the address is not assigned to a resource when part of a Primary Subnet will not be available as a routing endpoint. ",
                "maskable": true
            },
            "getSubnetForIpAddress": {
                "name": "getSubnetForIpAddress",
                "type": "SoftLayer_Network_Subnet",
                "doc": "Retrieve the subnet associated with an IP address. You may only retrieve subnets assigned to your SoftLayer customer account. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The IP address to search for."
                    }
                ]
            },
            "removeAccessToNetworkStorageList": {
                "name": "removeAccessToNetworkStorageList",
                "type": "boolean",
                "doc": "This method is used to remove access to multiple SoftLayer_Network_Storage volumes ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObjects",
                        "type": "SoftLayer_Network_Storage",
                        "typeArray": true
                    }
                ]
            },
            "route": {
                "name": "route",
                "type": "boolean",
                "doc": "This interface allows you to change the route of your Account Owned subnets. It accommodates a number of ways to identify your desired routing destination through the use of a 'type' and 'identifier'. Subnets may be routed as either Static or Portable, and that designation is dictated by the routing destination specified. \n\nStatic subnets have an ultimate routing destination of a single IP address but may not be routed to an existing subnet's IP address whose subnet is routed as a Static. Portable subnets have an ultimate routing destination of a VLAN. \n\nA subnet can be routed to any resource within the same \"routing region\" as the subnet itself. A subnet's routing region can be diverse but is usually limited to a single data center. \n\nThe following identifier 'type' values will result in Static routing: <ul> <li>SoftLayer_Network_Subnet_IpAddress</li> <li>SoftLayer_Hardware_Server</li> <li>SoftLayer_Virtual_Guest</li> </ul> \n\nThe following identifier 'type' values will result in Portable routing: <ul> <li>SoftLayer_Network_Vlan</li> </ul> \n\nFor each identifier type, one or more 'identifier' formats are possible. \n\n''SoftLayer_Network_Subnet_IpAddress'' will accept the following identifier formats: <ul> <li>An entirely numeric value will be treated as a SoftLayer_Network_Subnet_IpAddress.id value of the desired IP address object.</li> <li>A dotted-quad IPv4 address.</li> <li>A full or compressed IPv6 address.</li> </ul> \n\n''SoftLayer_Network_Vlan'' will accept the following identifier formats: <ul> <li>An entirely numeric value will be treated as a SoftLayer_Network_Vlan.id value of the desired VLAN object.</li> <li>A semantic VLAN identifier of the form <data center short name>.<router>.<vlan number>, eg. dal13.fcr01.1234 - the router name may optionally contain the 'a' or 'b' redundancy qualifier (which has no meaning in this context).</li> </ul> \n\n''SoftLayer_Hardware_Server'' will accept the following identifier formats: <ul> <li>An entirely numeric value will be treated as a SoftLayer_Hardware_Server.id value of the desired server.</li> <li>A UUID corresponding to a server's SoftLayer_Hardware_Server.globalIdentifier.</li> <li>A value corresponding to a unique SoftLayer_Hardware_Server.hostname.</li> <li>A value corresponding to a unique fully-qualified domain name in the format 'hostname&lt;domain&gt;' where &lt; and &gt; are literal, hostname refers to SoftLayer_Hardware_Server.hostname and domain to SoftLayer_Hardware_Server.domain, respectively.</li> </ul> \n\n''SoftLayer_Virtual_Guest'' will accept the following identifier formats: <ul> <li>An entirely numeric value will be treated as a SoftLayer_Virtual_Guest.id value of the desired server.</li> <li>A UUID corresponding to a server's SoftLayer_Virtual_Guest.globalIdentifier.</li> <li>A value corresponding to a unique SoftLayer_Virtual_Guest.hostname.</li> <li>A value corresponding to a unique fully-qualified domain name in the format 'hostname&lt;domain&gt;' where &lt; and &gt; are literal, hostname refers to SoftLayer_Virtual_Guest.hostname and domain to SoftLayer_Virtual_Guest.domain, respectively.</li> </ul> \n\nThe routing destination result of specifying a SoftLayer_Hardware_Server or SoftLayer_Virtual_Guest type will be the primary IP address of the server for the same network segment the subnet is on. Thus, a public subnet will be routed to the server's public, primary IP address. Additionally, this IP address resolution will match the subnet's IP version; routing a IPv6 subnet to a server will result in selection of the primary IPv6 address of the respective network segment, if available. \n\nSubnets may only be routed to the IP version they themselves represent. That means an IPv4 subnet can only be routed to IPv4 addresses. Any type/identifier combination that resolves to an IP address must be able to locate an IP address of the same version as the subnet being routed. \n\nWhen routing to an IP address on a Primary subnet, only those addresses actively assigned to resources may be targeted. Additionally, the network, gateway, or broadcast address of any Portable subnet may not be a routing destination. For some VLANs utilizing the HSRP redundancy strategy, there are additional addresses which cannot be a route destination. \n\nWhen routing a subnet that is already routed, note that the subnet first has its route removed; this procedure is the same as what will occur when using SoftLayer_Network_Subnet::clearRoute. Special consideration should be made for subnets routed as Portable. Please refer to the documentation for SoftLayer_Network_Subnet::clearRoute for details. \n\nThe behavior of this interface is such that either true or false is returned. A response of false indicates the route request would not result in the route of the subnet changing; attempts to route the subnet to the same destination, even if identified by differing means, will result in no changes. A result of false can be interpreted as the route request having already been completed. In contrast, a result of true means the requested destination is different from the current destination and the subnet's routing will be transitioned. This route change is asynchronous to the request. A response of true does not mean the subnet's route has changed, but simply that it will change. In order to monitor for the completion of the change, you may either attempt a route change again until the result is false, or monitor one or more SoftLayer_Network_Subnet properties: subnetType, networkVlanId, and or endPointIpAddress to determine if routing of the subnet has become the desired route destination. \n\nUse of this operation is limited to a single active request per subnet. If a previous route request is not yet complete, a \"not ready\" message will be returned upon subsequent requests. ",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "See SLDN docs."
                    },
                    {
                        "name": "identifier",
                        "type": "string",
                        "doc": "An appropriate identifier for the specified $type. Some types have multiple identifier"
                    }
                ]
            },
            "setTags": {
                "name": "setTags",
                "type": "boolean",
                "doc": "Tag a subnet by passing in one or more tags separated by a comma. Any existing tags you wish to keep should be included in the set of tags, as any missing tags will be removed. To remove all tags from the subnet, send an empty string. ",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "Comma separated list of tags"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_Subnet data type contains general information relating to a single SoftLayer subnet. Personal information in this type such as names, addresses, and phone numbers are assigned to the account only and not to users belonging to the account. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "activeRegistration": {
                "name": "activeRegistration",
                "type": "SoftLayer_Network_Subnet_Registration",
                "form": "relational",
                "doc": "If present, the active registration for this subnet."
            },
            "activeSwipTransaction": {
                "name": "activeSwipTransaction",
                "type": "SoftLayer_Network_Subnet_Swip_Transaction",
                "form": "relational",
                "doc": "DEPRECATED"
            },
            "activeTransaction": {
                "name": "activeTransaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "DEPRECATED"
            },
            "addressSpace": {
                "name": "addressSpace",
                "type": "string",
                "form": "relational",
                "doc": "Identifier which distinguishes what classification of addresses the subnet represents."
            },
            "allowedHost": {
                "name": "allowedHost",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "form": "relational",
                "doc": "The SoftLayer_Network_Storage_Allowed_Host information to connect this Subnet to Network Storage supporting access control lists."
            },
            "allowedNetworkStorage": {
                "name": "allowedNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage objects that this SoftLayer_Hardware has access to."
            },
            "allowedNetworkStorageReplicas": {
                "name": "allowedNetworkStorageReplicas",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage objects whose Replica that this SoftLayer_Hardware has access to."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for a subnet."
            },
            "boundDescendants": {
                "name": "boundDescendants",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true
            },
            "boundRouterFlag": {
                "name": "boundRouterFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not this subnet is associated with a router. Subnets that are not associated with a router cannot be routed."
            },
            "boundRouters": {
                "name": "boundRouters",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true
            },
            "children": {
                "name": "children",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location_Datacenter",
                "form": "relational",
                "doc": "The data center this subnet may be routed within."
            },
            "descendants": {
                "name": "descendants",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true
            },
            "displayLabel": {
                "name": "displayLabel",
                "type": "string",
                "form": "relational"
            },
            "endPointIpAddress": {
                "name": "endPointIpAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "A static routed ip address"
            },
            "globalIpRecord": {
                "name": "globalIpRecord",
                "type": "SoftLayer_Network_Subnet_IpAddress_Global",
                "form": "relational"
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The hardware using IP addresses on this subnet."
            },
            "ipAddresses": {
                "name": "ipAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "All the ip addresses associated with a subnet."
            },
            "networkComponentFirewall": {
                "name": "networkComponentFirewall",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "The upstream network component firewall."
            },
            "networkProtectionAddresses": {
                "name": "networkProtectionAddresses",
                "type": "SoftLayer_Network_Protection_Address",
                "form": "relational",
                "typeArray": true
            },
            "networkTunnelContexts": {
                "name": "networkTunnelContexts",
                "type": "SoftLayer_Network_Tunnel_Module_Context",
                "form": "relational",
                "typeArray": true,
                "doc": "IPSec network tunnels that have access to a private subnet."
            },
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The VLAN object that a subnet is associated with."
            },
            "podName": {
                "name": "podName",
                "type": "string",
                "form": "relational",
                "doc": "The pod in which this subnet resides."
            },
            "protectedIpAddresses": {
                "name": "protectedIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true
            },
            "regionalInternetRegistry": {
                "name": "regionalInternetRegistry",
                "type": "SoftLayer_Network_Regional_Internet_Registry",
                "form": "relational"
            },
            "registrations": {
                "name": "registrations",
                "type": "SoftLayer_Network_Subnet_Registration",
                "form": "relational",
                "typeArray": true,
                "doc": "All registrations that have been created for this subnet."
            },
            "reverseDomain": {
                "name": "reverseDomain",
                "type": "SoftLayer_Dns_Domain",
                "form": "relational",
                "doc": "The reverse DNS domain associated with this subnet."
            },
            "roleKeyName": {
                "name": "roleKeyName",
                "type": "string",
                "form": "relational",
                "doc": "An identifier of the role the subnet is within. Roles dictate how a subnet may be used."
            },
            "roleName": {
                "name": "roleName",
                "type": "string",
                "form": "relational",
                "doc": "The name of the role the subnet is within. Roles dictate how a subnet may be used."
            },
            "routingTypeKeyName": {
                "name": "routingTypeKeyName",
                "type": "string",
                "form": "relational",
                "doc": "The identifier for the type of route then subnet is currently configured for."
            },
            "routingTypeName": {
                "name": "routingTypeName",
                "type": "string",
                "form": "relational",
                "doc": "The name for the type of route then subnet is currently configured for."
            },
            "swipTransaction": {
                "name": "swipTransaction",
                "type": "SoftLayer_Network_Subnet_Swip_Transaction",
                "form": "relational",
                "typeArray": true,
                "doc": "DEPRECATED"
            },
            "tagReferences": {
                "name": "tagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true,
                "doc": "References to all tags for this subnet."
            },
            "unboundDescendants": {
                "name": "unboundDescendants",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true
            },
            "utilizedIpAddressCount": {
                "name": "utilizedIpAddressCount",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "Provides the total number of utilized IP addresses on this subnet. The primary consumer of IP addresses are compute resources, which can consume more than one address. This value is only supported for primary subnet types."
            },
            "virtualGuests": {
                "name": "virtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The Virtual Servers using IP addresses on this subnet."
            },
            "broadcastAddress": {
                "name": "broadcastAddress",
                "type": "string",
                "form": "local",
                "doc": "The last IP address in a subnet is the subnet's broadcast address. This is an IP address that will broadcast network requests to the entire subnet and may not be assigned to a network interface. "
            },
            "cidr": {
                "name": "cidr",
                "type": "int",
                "form": "local",
                "doc": "A subnet's Classless Inter-Domain Routing prefix. This is a number between 0 and 32 signifying the number of bits in a subnet's netmask. These bits separate a subnet's network address from it's host addresses. It performs the same function as the ''netmask'' property, but is represented as an integer. "
            },
            "gateway": {
                "name": "gateway",
                "type": "string",
                "form": "local",
                "doc": "A subnet's gateway address. This is an IP address that belongs to the router on the subnet and may not be assigned to a network interface. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A subnet's internal identifier."
            },
            "isCustomerOwned": {
                "name": "isCustomerOwned",
                "type": "boolean",
                "form": "local"
            },
            "isCustomerRoutable": {
                "name": "isCustomerRoutable",
                "type": "boolean",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last time this subnet was last modified"
            },
            "netmask": {
                "name": "netmask",
                "type": "string",
                "form": "local",
                "doc": "A bitmask in dotted-quad format that is used to separate a subnet's network address from it's host addresses. This performs the same function as the ''cidr'' property, but is expressed in a string format. "
            },
            "networkIdentifier": {
                "name": "networkIdentifier",
                "type": "string",
                "form": "local",
                "doc": "A subnet's network identifier. This is the first IP address of a subnet and may not be assigned to a network interface. "
            },
            "networkVlanId": {
                "name": "networkVlanId",
                "type": "int",
                "form": "local",
                "doc": "A subnet's associated VLAN's internal identifier."
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local",
                "doc": "This is the note field. "
            },
            "sortOrder": {
                "name": "sortOrder",
                "type": "string",
                "form": "local",
                "doc": "Used to sort subnets and group subnets of similar type together for use on customer facing portals. "
            },
            "subnetType": {
                "name": "subnetType",
                "type": "string",
                "form": "local",
                "doc": "A subnet type can be any of the following: \n* PRIMARY\n* ADDITIONAL_PRIMARY\n* SECONDARY_ON_VLAN\n* STATIC_IP_ROUTED\n* PRIMARY_6\n* SUBNET_ON_VLAN\n* STATIC_IP_ROUTED_6\n* GLOBAL_IP\nA \"PRIMARY\" subnet is the primary network bound to a VLAN within the softlayer network. An \"ADDITIONAL_PRIMARY\" subnet is bound to a network VLAN to augment the pool of available primary IP addresses that may be assigned to a server. A \"SECONDARY_ON_VLAN\" subnet is a secondary portable subnet whose IP addresses are managed by the end user. \"STATIC_IP_ROUTED\" subnets are subnets that are statically routed to a single endpoint IP address. A \"PRIMARY_6\" subnet is the primary IPv6 network bound to a VLAN. A \"SUBNET_ON_VLAN\" subnet is the secondary portable IPv6 subnet whose IP addresses are managed by the end user. A \"STATIC_IP_ROUTED_6\" subnet is statically routed to a single IPv6 endpoint IP address. A \"GLOBAL_IP\" subnet is a subnet that is routable to a single endpoint IP address. The \"GLOBAL_IP\" type is used for both IPv4 and IPv6 subnets. "
            },
            "totalIpAddresses": {
                "name": "totalIpAddresses",
                "type": "decimal",
                "form": "local",
                "doc": "The number of IP addresses contained within this subnet."
            },
            "usableIpAddressCount": {
                "name": "usableIpAddressCount",
                "type": "decimal",
                "form": "local",
                "doc": "The number of IP addresses that can be addressed within this subnet. For IPv4 subnets with a CIDR value of at most 30, a discount of 3 is taken from the total number of IP addresses for the subnet's unusable network, gateway and broadcast IP addresses. For IPv6 subnets with a CIDR value of at most 126, a discount of 2 is taken for the subnet's network and gateway IP addresses. "
            },
            "version": {
                "name": "version",
                "type": "int",
                "form": "local",
                "doc": "This is the Internet Protocol version. Current values may be either 4 or 6. "
            },
            "allowedNetworkStorageCount": {
                "name": "allowedNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage objects that this SoftLayer_Hardware has access to."
            },
            "allowedNetworkStorageReplicaCount": {
                "name": "allowedNetworkStorageReplicaCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage objects whose Replica that this SoftLayer_Hardware has access to."
            },
            "boundDescendantCount": {
                "name": "boundDescendantCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "boundRouterCount": {
                "name": "boundRouterCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "descendantCount": {
                "name": "descendantCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "hardwareCount": {
                "name": "hardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the hardware using IP addresses on this subnet."
            },
            "ipAddressCount": {
                "name": "ipAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all the ip addresses associated with a subnet."
            },
            "networkProtectionAddressCount": {
                "name": "networkProtectionAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "networkTunnelContextCount": {
                "name": "networkTunnelContextCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of iPSec network tunnels that have access to a private subnet."
            },
            "protectedIpAddressCount": {
                "name": "protectedIpAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "registrationCount": {
                "name": "registrationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all registrations that have been created for this subnet."
            },
            "swipTransactionCount": {
                "name": "swipTransactionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of dEPRECATED"
            },
            "tagReferenceCount": {
                "name": "tagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of references to all tags for this subnet."
            },
            "unboundDescendantCount": {
                "name": "unboundDescendantCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "virtualGuestCount": {
                "name": "virtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the Virtual Servers using IP addresses on this subnet."
            }
        }
    },
    "SoftLayer_Network_Subnet_IpAddress": {
        "name": "SoftLayer_Network_Subnet_IpAddress",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every SoftLayer IP address is defined in the SoftLayer_Network_Subnet_IpAddress service. SoftLayer IP addresses are assigned to a SoftLayer_Network_Subnet.  The SoftLayer_Network_Subnet_IpAddress service gives you information about an IP address such if it is reserved, a network address, or a gateway.  Use the data returned by these methods with other API services to get more detailed information about your services. \n\nSoftLayer customers can order and manage IP addresses through the customer portal. If you need to cancel a subnet please open a sales ticket in our customer portal and our account management staff will assist you. ",
        "methods": {
            "allowAccessToNetworkStorage": {
                "name": "allowAccessToNetworkStorage",
                "type": "boolean",
                "doc": "This method is used to allow access to a SoftLayer_Network_Storage volume that supports host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObject",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            },
            "allowAccessToNetworkStorageList": {
                "name": "allowAccessToNetworkStorageList",
                "type": "boolean",
                "doc": "This method is used to allow access to multiple SoftLayer_Network_Storage volumes that support host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObjects",
                        "type": "SoftLayer_Network_Storage",
                        "typeArray": true
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit a subnet IP address. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Subnet_IpAddress",
                        "doc": "A skeleton SoftLayer_Network_Subnet_IpAddress object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "doc": "This function is used to edit multiple objects at the same time. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Subnet_IpAddress",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Network_Subnet_IpAddress objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "findByIpv4Address": {
                "name": "findByIpv4Address",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "doc": "Search for an IP address record by IPv4 address.",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The IP address to search for"
                    }
                ]
            },
            "getAttachedNetworkStorages": {
                "name": "getAttachedNetworkStorages",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "This method is retrieve a list of SoftLayer_Network_Storage volumes that are authorized access to this SoftLayer_Network_Subnet_IpAddress. ",
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "nasType",
                        "type": "string",
                        "doc": "either 'ISCSI', 'NAS', or '*' for both",
                        "defaultValue": "*"
                    }
                ]
            },
            "getAvailableNetworkStorages": {
                "name": "getAvailableNetworkStorages",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "This method retrieves a list of SoftLayer_Network_Storage volumes that can be authorized to this SoftLayer_Network_Subnet_IpAddress. ",
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "nasType",
                        "type": "string",
                        "doc": "either 'ISCSI', 'NAS', or '*' for both",
                        "defaultValue": "*"
                    }
                ]
            },
            "getByIpAddress": {
                "name": "getByIpAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "doc": "Search for an IP address record by IP address.",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The IP address to search for"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "doc": "getObject retrieves the SoftLayer_Network_Subnet_IpAddress object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Subnet_IpAddress service. You can only retrieve the IP address whose subnet is associated with a VLAN that is associated with the account that your portal user is assigned to. ",
                "filterable": true,
                "maskable": true
            },
            "removeAccessToNetworkStorageList": {
                "name": "removeAccessToNetworkStorageList",
                "type": "boolean",
                "doc": "This method is used to remove access to multiple SoftLayer_Network_Storage volumes ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObjects",
                        "type": "SoftLayer_Network_Storage",
                        "typeArray": true
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_Subnet_IpAddress data type contains general information relating to a single SoftLayer IPv4 address. ",
        "properties": {
            "allowedHost": {
                "name": "allowedHost",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "form": "relational",
                "doc": "The SoftLayer_Network_Storage_Allowed_Host information to connect this IP Address to Network Storage supporting access control lists."
            },
            "allowedNetworkStorage": {
                "name": "allowedNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage objects that this SoftLayer_Hardware has access to."
            },
            "allowedNetworkStorageReplicas": {
                "name": "allowedNetworkStorageReplicas",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage objects whose Replica that this SoftLayer_Hardware has access to."
            },
            "applicationDeliveryController": {
                "name": "applicationDeliveryController",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "form": "relational",
                "doc": "The application delivery controller using this address."
            },
            "contextTunnelTranslations": {
                "name": "contextTunnelTranslations",
                "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                "form": "relational",
                "typeArray": true,
                "doc": "An IPSec network tunnel's address translations. These translations use a SoftLayer ip address from an assigned static NAT subnet to deliver the packets to the remote (customer) destination."
            },
            "endpointSubnets": {
                "name": "endpointSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "All the subnets routed to an IP address."
            },
            "guestNetworkComponent": {
                "name": "guestNetworkComponent",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "doc": "A network component that is statically routed to an IP address."
            },
            "guestNetworkComponentBinding": {
                "name": "guestNetworkComponentBinding",
                "type": "SoftLayer_Virtual_Guest_Network_Component_IpAddress",
                "form": "relational",
                "doc": "A network component that is statically routed to an IP address."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "A server that this IP address is routed to."
            },
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "A network component that is statically routed to an IP address."
            },
            "privateNetworkGateway": {
                "name": "privateNetworkGateway",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "doc": "The network gateway appliance using this address as the private IP address."
            },
            "protectionAddress": {
                "name": "protectionAddress",
                "type": "SoftLayer_Network_Protection_Address",
                "form": "relational",
                "typeArray": true
            },
            "publicNetworkGateway": {
                "name": "publicNetworkGateway",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "doc": "The network gateway appliance using this address as the public IP address."
            },
            "remoteManagementNetworkComponent": {
                "name": "remoteManagementNetworkComponent",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "doc": "An IPMI-based management network component of the IP address."
            },
            "subnet": {
                "name": "subnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "An IP address' associated subnet."
            },
            "syslogEventsOneDay": {
                "name": "syslogEventsOneDay",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "All events for this IP address stored in the datacenter syslogs from the last 24 hours"
            },
            "syslogEventsSevenDays": {
                "name": "syslogEventsSevenDays",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "All events for this IP address stored in the datacenter syslogs from the last 7 days"
            },
            "topTenSyslogEventsByDestinationPortOneDay": {
                "name": "topTenSyslogEventsByDestinationPortOneDay",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "Top Ten network datacenter syslog events, grouped by destination port, for the last 24 hours"
            },
            "topTenSyslogEventsByDestinationPortSevenDays": {
                "name": "topTenSyslogEventsByDestinationPortSevenDays",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "Top Ten network datacenter syslog events, grouped by destination port, for the last 7 days"
            },
            "topTenSyslogEventsByProtocolsOneDay": {
                "name": "topTenSyslogEventsByProtocolsOneDay",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "Top Ten network datacenter syslog events, grouped by source port, for the last 24 hours"
            },
            "topTenSyslogEventsByProtocolsSevenDays": {
                "name": "topTenSyslogEventsByProtocolsSevenDays",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "Top Ten network datacenter syslog events, grouped by source port, for the last 7 days"
            },
            "topTenSyslogEventsBySourceIpOneDay": {
                "name": "topTenSyslogEventsBySourceIpOneDay",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "Top Ten network datacenter syslog events, grouped by source ip address, for the last 24 hours"
            },
            "topTenSyslogEventsBySourceIpSevenDays": {
                "name": "topTenSyslogEventsBySourceIpSevenDays",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "Top Ten network datacenter syslog events, grouped by source ip address, for the last 7 days"
            },
            "topTenSyslogEventsBySourcePortOneDay": {
                "name": "topTenSyslogEventsBySourcePortOneDay",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "Top Ten network datacenter syslog events, grouped by source port, for the last 24 hours"
            },
            "topTenSyslogEventsBySourcePortSevenDays": {
                "name": "topTenSyslogEventsBySourcePortSevenDays",
                "type": "SoftLayer_Network_Logging_Syslog",
                "form": "relational",
                "typeArray": true,
                "doc": "Top Ten network datacenter syslog events, grouped by source port, for the last 7 days"
            },
            "virtualGuest": {
                "name": "virtualGuest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "A virtual guest that this IP address is routed to."
            },
            "virtualLicenses": {
                "name": "virtualLicenses",
                "type": "SoftLayer_Software_VirtualLicense",
                "form": "relational",
                "typeArray": true,
                "doc": "Virtual licenses allocated for an IP Address."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An IP's internal identifier."
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local",
                "doc": "An IP address expressed in dotted quad format."
            },
            "isBroadcast": {
                "name": "isBroadcast",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates if an IP address is reserved to be used as the network broadcast address and cannot be assigned to a network interface "
            },
            "isGateway": {
                "name": "isGateway",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates if an IP address is reserved to a gateway and cannot be assigned to a network interface "
            },
            "isNetwork": {
                "name": "isNetwork",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates if an IP address is reserved to a network address and cannot be assigned to a network interface "
            },
            "isReserved": {
                "name": "isReserved",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates if an IP address is reserved and cannot be assigned to a network interface "
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local",
                "doc": "An IP address' user defined note. "
            },
            "subnetId": {
                "name": "subnetId",
                "type": "int",
                "form": "local",
                "doc": "An IP address' subnet id."
            },
            "allowedNetworkStorageCount": {
                "name": "allowedNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage objects that this SoftLayer_Hardware has access to."
            },
            "allowedNetworkStorageReplicaCount": {
                "name": "allowedNetworkStorageReplicaCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage objects whose Replica that this SoftLayer_Hardware has access to."
            },
            "contextTunnelTranslationCount": {
                "name": "contextTunnelTranslationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an IPSec network tunnel's address translations. These translations use a SoftLayer ip address from an assigned static NAT subnet to deliver the packets to the remote (customer) destination."
            },
            "endpointSubnetCount": {
                "name": "endpointSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all the subnets routed to an IP address."
            },
            "protectionAddressCount": {
                "name": "protectionAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "syslogEventsOneDayCount": {
                "name": "syslogEventsOneDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all events for this IP address stored in the datacenter syslogs from the last 24 hours"
            },
            "syslogEventsSevenDayCount": {
                "name": "syslogEventsSevenDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all events for this IP address stored in the datacenter syslogs from the last 7 days"
            },
            "topTenSyslogEventsByDestinationPortOneDayCount": {
                "name": "topTenSyslogEventsByDestinationPortOneDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of top Ten network datacenter syslog events, grouped by destination port, for the last 24 hours"
            },
            "topTenSyslogEventsByDestinationPortSevenDayCount": {
                "name": "topTenSyslogEventsByDestinationPortSevenDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of top Ten network datacenter syslog events, grouped by destination port, for the last 7 days"
            },
            "topTenSyslogEventsByProtocolsOneDayCount": {
                "name": "topTenSyslogEventsByProtocolsOneDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of top Ten network datacenter syslog events, grouped by source port, for the last 24 hours"
            },
            "topTenSyslogEventsByProtocolsSevenDayCount": {
                "name": "topTenSyslogEventsByProtocolsSevenDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of top Ten network datacenter syslog events, grouped by source port, for the last 7 days"
            },
            "topTenSyslogEventsBySourceIpOneDayCount": {
                "name": "topTenSyslogEventsBySourceIpOneDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of top Ten network datacenter syslog events, grouped by source ip address, for the last 24 hours"
            },
            "topTenSyslogEventsBySourceIpSevenDayCount": {
                "name": "topTenSyslogEventsBySourceIpSevenDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of top Ten network datacenter syslog events, grouped by source ip address, for the last 7 days"
            },
            "topTenSyslogEventsBySourcePortOneDayCount": {
                "name": "topTenSyslogEventsBySourcePortOneDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of top Ten network datacenter syslog events, grouped by source port, for the last 24 hours"
            },
            "topTenSyslogEventsBySourcePortSevenDayCount": {
                "name": "topTenSyslogEventsBySourcePortSevenDayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of top Ten network datacenter syslog events, grouped by source port, for the last 7 days"
            },
            "virtualLicenseCount": {
                "name": "virtualLicenseCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of virtual licenses allocated for an IP Address."
            }
        }
    },
    "SoftLayer_Network_Subnet_IpAddress_Global": {
        "name": "SoftLayer_Network_Subnet_IpAddress_Global",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Global IP Addresses are static IP addresses that can be routed to any server within the SoftLayer network. Global IP Addresses are not restricted to routing within the same datacenter. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Subnet_IpAddress_Global",
                "filterable": true,
                "maskable": true
            },
            "route": {
                "name": "route",
                "type": "boolean",
                "doc": "\n***DEPRECATED***\nThis endpoint is deprecated in favor of the more expressive and capable SoftLayer_Network_Subnet::route, to which this endpoint now proxies. Refer to it for more information. \n\nSimilarly, unroute requests are proxied to SoftLayer_Network_Subnet::clearRoute. ",
                "parameters": [
                    {
                        "name": "newEndPointIpAddress",
                        "type": "string",
                        "doc": "The IP address to route the subnet to.",
                        "defaultValue": null
                    }
                ]
            },
            "unroute": {
                "name": "unroute",
                "type": "boolean",
                "doc": "\n***DEPRECATED***\nThis endpoint is deprecated in favor of SoftLayer_Network_Subnet::clearRoute, to which this endpoint now proxies. Refer to it for more information. "
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "activeTransaction": {
                "name": "activeTransaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "DEPRECATED"
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item_Network_Subnet_IpAddress_Global",
                "form": "relational",
                "doc": "The billing item for this Global IP."
            },
            "destinationIpAddress": {
                "name": "destinationIpAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational"
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational"
            },
            "description": {
                "name": "description",
                "type": "int",
                "form": "local",
                "doc": "A Global IP Address' associated description "
            },
            "destinationIpAddressId": {
                "name": "destinationIpAddressId",
                "type": "int",
                "form": "local",
                "doc": "A Global IP Address' associated [[SoftLayer_Network_Subnet_IpAddress|ipAddress]] ID "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A Global IP Address' unique identifier "
            },
            "ipAddressId": {
                "name": "ipAddressId",
                "type": "int",
                "form": "local",
                "doc": "A Global IP Address' associated [[SoftLayer_Account|account]] ID "
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "A Global IP Address' associated type [[SoftLayer_Network_Subnet_IpAddress_Global_Type|id]] ID "
            }
        }
    },
    "SoftLayer_Network_Subnet_IpAddress_Version6": {
        "name": "SoftLayer_Network_Subnet_IpAddress_Version6",
        "base": "SoftLayer_Network_Subnet_IpAddress",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Subnet_IpAddress data type contains general information relating to a single SoftLayer IPv6 address. ",
        "properties": {
            "publicVersion6NetworkGateway": {
                "name": "publicVersion6NetworkGateway",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "doc": "The network gateway appliance using this address as the public IPv6 address."
            }
        }
    },
    "SoftLayer_Network_Subnet_Registration": {
        "name": "SoftLayer_Network_Subnet_Registration",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Subnet registration objects are used to request and track registration of the subnet with the appropriate Regional Internet Registry (RIR). Registration for public subnets can be requested any time after assignment of the subnet. \n\nSubnet Registration objects can be updated any time after they are created. This will result in the information being submitted to the RIR and the records on their end being refreshed. ",
        "methods": {
            "clearRegistration": {
                "name": "clearRegistration",
                "type": "boolean",
                "doc": "This method will initiate the removal of a subnet registration. "
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Subnet_Registration",
                "doc": "Create registration with a global registrar to associate an assigned subnet with the provided contact details. \n\nContact information is provided in the form of a [[SoftLayer_Account_Regional_Registry_Detail|person detail record]], which reference can be provided when the registration is created or afterwards. Registrations without an associated person detail will remain in the ``OPEN`` status. To specify a person detail when creating a registration, the ``detailReferences`` property should be populated with a list item providing a ``detailId`` value referencing the [[SoftLayer_Account_Regional_Registry_Detail|person detail record]]. \n\nThe same applies to [[SoftLayer_Account_Regional_Registry_Detail|network detail records]], though these references need not be provided. The system will create a reference to the network described by the registration's subnet in the absence of a provided network detail reference. However, if a specific detail is referenced, it must describe the same subnet as the registration. \n\nA template containing the following properties will create a subnet registration: \n\n\n* networkIdentifier\n* cidr\n* detailReferences\n\n\n``networkIdentifier`` is the base address of the public, SoftLayer owned subnet which is being registered. ``cidr`` must be an integer representing the CIDR of the subnet to be registered. The ``networkIdentifier``/``cidr`` must represent an assigned subnet. ``detailReferences`` tie the registration to SoftLayer_Account_Regional_Registry_Detail objects. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Subnet_Registration",
                        "doc": "The SoftLayer_Network_Subnet_Registration object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Network_Subnet_Registration",
                "typeArray": true,
                "doc": "Create registrations with respective registrars to associate multiple assigned subnets with the provided contact details. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Network_Subnet_Registration",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Network_Subnet_Registration objects that you wish to create."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "This method will edit an existing SoftLayer_Network_Subnet_Registration object. For more detail, see [[SoftLayer_Network_Subnet_Registration::createObject|createObject]]. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Subnet_Registration",
                        "doc": "A skeleton SoftLayer_Network_Subnet_Registration object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editRegistrationAttachedDetails": {
                "name": "editRegistrationAttachedDetails",
                "type": "boolean",
                "doc": "This method modifies a single registration by modifying the current [[SoftLayer_Network_Subnet_Registration_Details]] objects that are linked to that registration. ",
                "static": true,
                "parameters": [
                    {
                        "name": "personObjectSkeleton",
                        "type": "SoftLayer_Network_Subnet_Registration_Details"
                    },
                    {
                        "name": "networkObjectSkeleton",
                        "type": "SoftLayer_Network_Subnet_Registration_Details"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Subnet_Registration",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The subnet registration data type contains general information relating to a single subnet registration instance. These registration instances can be updated to reflect changes, and will record the changes in the [[SoftLayer_Network_Subnet_Registration_Event|events]]. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that this registration belongs to."
            },
            "detailReferences": {
                "name": "detailReferences",
                "type": "SoftLayer_Network_Subnet_Registration_Details",
                "form": "relational",
                "typeArray": true,
                "doc": "The cross-reference records that tie the [[SoftLayer_Account_Regional_Registry_Detail]] objects to the registration object."
            },
            "events": {
                "name": "events",
                "type": "SoftLayer_Network_Subnet_Registration_Event",
                "form": "relational",
                "typeArray": true,
                "doc": "The related registration events."
            },
            "networkDetail": {
                "name": "networkDetail",
                "type": "SoftLayer_Account_Regional_Registry_Detail",
                "form": "relational",
                "doc": "The \"network\" detail object."
            },
            "personDetail": {
                "name": "personDetail",
                "type": "SoftLayer_Account_Regional_Registry_Detail",
                "form": "relational",
                "doc": "The \"person\" detail object."
            },
            "regionalInternetRegistry": {
                "name": "regionalInternetRegistry",
                "type": "SoftLayer_Network_Regional_Internet_Registry",
                "form": "relational",
                "doc": "The related Regional Internet Registry."
            },
            "regionalInternetRegistryHandle": {
                "name": "regionalInternetRegistryHandle",
                "type": "SoftLayer_Account_Rwhois_Handle",
                "form": "relational",
                "doc": "The RIR handle that this registration object belongs to. This field may not be populated until the registration is complete."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Network_Subnet_Registration_Status",
                "form": "relational",
                "doc": "The status of this registration."
            },
            "subnet": {
                "name": "subnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "The subnet that this registration pertains to."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The registration object's associated [[SoftLayer_Account|account]] id "
            },
            "cidr": {
                "name": "cidr",
                "type": "int",
                "form": "local",
                "doc": "The CIDR prefix for the registered subnet "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID of the registration object "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "networkHandle": {
                "name": "networkHandle",
                "type": "string",
                "form": "local",
                "doc": "The RIR-specific handle or name of the registered subnet. This field is read-only. "
            },
            "networkIdentifier": {
                "name": "networkIdentifier",
                "type": "string",
                "form": "local",
                "doc": "The base IP address of the registered subnet "
            },
            "regionalInternetRegistryHandleId": {
                "name": "regionalInternetRegistryHandleId",
                "type": "int",
                "form": "local",
                "doc": "The registration object's associated [[SoftLayer_Account_Rwhois_Handle|RIR handle]] id "
            },
            "regionalInternetRegistryId": {
                "name": "regionalInternetRegistryId",
                "type": "int",
                "form": "local",
                "doc": "The registration object's associated [[SoftLayer_Network_Regional_Internet_Registry|RIR]] id "
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The registration object's associated [[SoftLayer_Network_Subnet_Registration_Status|status]] id "
            },
            "detailReferenceCount": {
                "name": "detailReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the cross-reference records that tie the [[SoftLayer_Account_Regional_Registry_Detail]] objects to the registration object."
            },
            "eventCount": {
                "name": "eventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the related registration events."
            }
        }
    },
    "SoftLayer_Network_Subnet_Registration_Apnic": {
        "name": "SoftLayer_Network_Subnet_Registration_Apnic",
        "base": "SoftLayer_Network_Subnet_Registration",
        "noservice": true,
        "typeDoc": "APNIC-specific registration object. For more detail see [[SoftLayer_Network_Subnet_Registration (type)|SoftLayer_Network_Subnet_Registration]]. "
    },
    "SoftLayer_Network_Subnet_Registration_Arin": {
        "name": "SoftLayer_Network_Subnet_Registration_Arin",
        "base": "SoftLayer_Network_Subnet_Registration",
        "noservice": true,
        "typeDoc": "ARIN-specific registration object. For more detail see [[SoftLayer_Network_Subnet_Registration (type)|SoftLayer_Network_Subnet_Registration]]. "
    },
    "SoftLayer_Network_Subnet_Registration_Details": {
        "name": "SoftLayer_Network_Subnet_Registration_Details",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Network_Subnet_Registration_Details",
                "doc": "<style type=\"text/css\">.create_object > li > div { padding-top: .5em; padding-bottom: .5em}</style> This method will create a new SoftLayer_Network_Subnet_Registration_Details object. \n\n<b>Input</b> - [[SoftLayer_Network_Subnet_Registration_Details (type)|SoftLayer_Network_Subnet_Registration_Details]] <ul class=\"create_object\"> <li><code>detailId</code> <div> The numeric ID of the [[SoftLayer_Account_Regional_Registry_Detail|detail]] object to relate. </div> <ul> <li><b>Required</b></li> <li><b>Type</b> - integer</li> </ul> </li> <li><code>registrationId</code> <div> The numeric ID of the [[SoftLayer_Network_Subnet_Registration|registration]] object to relate. </div> <ul> <li><b>Required</b></li> <li><b>Type</b> - integer</li> </ul> </li> </ul> ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Subnet_Registration_Details",
                        "doc": "The SoftLayer_Network_Subnet_Registration_Details object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "This method will delete an existing SoftLayer_Account_Regional_Registry_Detail object. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Subnet_Registration_Details",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Network_Subnet_Registration_Details objects are used to relate [[SoftLayer_Account_Regional_Registry_Detail]] objects to a [[SoftLayer_Network_Subnet_Registration]] object. This allows for easy reuse of registration details. It is important to note that only one detail object per type may be associated to a registration object. ",
        "properties": {
            "detail": {
                "name": "detail",
                "type": "SoftLayer_Account_Regional_Registry_Detail",
                "form": "relational",
                "doc": "The related [[SoftLayer_Account_Regional_Registry_Detail|detail object]]."
            },
            "registration": {
                "name": "registration",
                "type": "SoftLayer_Network_Subnet_Registration",
                "form": "relational",
                "doc": "The related [[SoftLayer_Network_Subnet_Registration|registration object]]."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "detailId": {
                "name": "detailId",
                "type": "int",
                "form": "local",
                "doc": "Numeric ID of the related [[SoftLayer_Account_Regional_Registry_Detail]] object "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique numeric ID of the object "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "registrationId": {
                "name": "registrationId",
                "type": "int",
                "form": "local",
                "doc": "Numeric ID of the related [[SoftLayer_Network_Subnet_Registration]] object "
            }
        }
    },
    "SoftLayer_Network_Subnet_Registration_Event": {
        "name": "SoftLayer_Network_Subnet_Registration_Event",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Each time a [[SoftLayer_Network_Subnet_Registration|subnet registration]] object is created or modified, the system will generate an event for it. Additional actions that would create an event include RIR responses and error cases. * ",
        "properties": {
            "registration": {
                "name": "registration",
                "type": "SoftLayer_Network_Subnet_Registration",
                "form": "relational",
                "doc": "The registration this event pertains to."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Subnet_Registration_Event_Type",
                "form": "relational",
                "doc": "The type of this event."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique numeric ID of the event object "
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "A string message indicating what took place during this event "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "registrationId": {
                "name": "registrationId",
                "type": "int",
                "form": "local",
                "doc": "The numeric ID of the related [[SoftLayer_Network_Subnet_Registration]] object "
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The numeric ID of the associated [[SoftLayer_Network_Subnet_Registration_Event_Type|event type]] object "
            }
        }
    },
    "SoftLayer_Network_Subnet_Registration_Event_Type": {
        "name": "SoftLayer_Network_Subnet_Registration_Event_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Subnet Registration Event Type objects describe the nature of a [[SoftLayer_Network_Subnet_Registration_Event]] \n\nThe standard values for these objects are as follows: <ul> <li><strong>REGISTRATION_CREATED</strong> - Indicates that the registration has been created</li> <li><strong>REGISTRATION_UPDATED</strong> - Indicates that the registration has been updated</li> <li><strong>REGISTRATION_CANCELLED</strong> - Indicates that the registration has been cancelled</li> <li><strong>RIR_RESPONSE</strong> - Indicates that an action taken against the RIR has produced a response. More details will be provided in the event message.</li> <li><strong>ERROR</strong> - Indicates that an error has been encountered. More details will be provided in the event message.</li> <li><strong>NOTE</strong> - An employee or other system has entered a note regarding the registration. The note content will be provided in the event message.</li> </ul> ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique numeric ID of the event type object "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Code-friendly string name of the event type "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Human-readable name of the event type "
            }
        }
    },
    "SoftLayer_Network_Subnet_Registration_Ripe": {
        "name": "SoftLayer_Network_Subnet_Registration_Ripe",
        "base": "SoftLayer_Network_Subnet_Registration",
        "noservice": true,
        "typeDoc": "RIPE-specific registration object. For more detail see [[SoftLayer_Network_Subnet_Registration (type)|SoftLayer_Network_Subnet_Registration]]. "
    },
    "SoftLayer_Network_Subnet_Registration_Status": {
        "name": "SoftLayer_Network_Subnet_Registration_Status",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Network_Subnet_Registration_Status",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Subnet_Registration_Status",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Subnet Registration Status objects describe the current status of a subnet registration. \n\nThe standard values for these objects are as follows: <ul> <li><strong>OPEN</strong> - Indicates that the registration object is new and has yet to be submitted to the RIR</li> <li><strong>PENDING</strong> - Indicates that the registration object has been submitted to the RIR and is awaiting response</li> <li><strong>COMPLETE</strong> - Indicates that the RIR action has completed</li> <li><strong>DELETED</strong> - Indicates that the registration object has been gracefully removed is no longer valid</li> <li><strong>CANCELLED</strong> - Indicates that the registration object has been abruptly removed is no longer valid</li> </ul> ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique numeric ID of the status object "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Code-friendly string name of the status "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Human-readable name of the status "
            }
        }
    },
    "SoftLayer_Network_Subnet_Rwhois_Data": {
        "name": "SoftLayer_Network_Subnet_Rwhois_Data",
        "base": "SoftLayer_Entity",
        "serviceDoc": "\n**DEPRECATED**\nUse SoftLayer_Account_Regional_Registry_Detail and SoftLayer_Network_Subnet_Registration instead. \n\nEvery SoftLayer customer account has a RWHOIS record tied to it.  This RWHOIS record is used by SoftLayer's Reverse Whois system as well as SoftLayer's Automated SWIP system. \n\nThis service allows you to update your stored RWHOIS record.  Changing this record automatically updates the RWHOIS record in 24 hours, but does NOT update SWIP data.  You will need to use the SWIP service to do that. ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the RWHOIS record by passing in a modified version of the record object.  All fields are editable.",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Subnet_Rwhois_Data",
                        "doc": "A skeleton SoftLayer_Network_Subnet_Rwhois_Data object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Subnet_Rwhois_Data",
                "doc": "getObject retrieves the SoftLayer_Network_Subnet_Rwhois_Data object whose ID corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Subnet_Rwhois_Data service. \n\nThe best way to get Rwhois Data for an account is through getRhwoisData on the Account service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Every SoftLayer customer account has contact information associated with it for reverse WHOIS purposes. An account's RWHOIS data, modeled by the SoftLayer_Network_Subnet_Rwhois_Data data type, is used by SoftLayer's reverse WHOIS server as well as for SWIP transactions. SoftLayer's reverse WHOIS servers respond to WHOIS queries for IP addresses belonging to a customer's servers, returning this RWHOIS data. \n\nA SoftLayer customer's RWHOIS data may not necessarily match their account or portal users' contact information. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account associated with this reverse WHOIS data."
            },
            "abuseEmail": {
                "name": "abuseEmail",
                "type": "string",
                "form": "local",
                "doc": "An email address associated with an account's RWHOIS data that is responsible for responding to network abuse queries about malicious traffic coming from your servers' IP addresses."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "An account's RWHOIS data's associated account identifier."
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "The first line of the mailing address associated with an account's RWHOIS data."
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "The second line of the mailing address associated with an account's RWHOIS data."
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The city of the mailing address associated with an account's RWHOIS data."
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local",
                "doc": "The company name associated with an account's RWHOIS data."
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "A two-letter abbreviation of the country of the mailing address associated with an account's RWHOIS data."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an account's RWHOIS data was created."
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "The first name associated with an account's RWHOIS data."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An account's RWHOIS data's internal identifier."
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "The last name associated with an account's RWHOIS data."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an account's RWHOIS data was last modified."
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The postal code of the mailing address associated with an account's RWHOIS data."
            },
            "privateResidenceFlag": {
                "name": "privateResidenceFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether an account's RWHOIS data refers to a private residence or not."
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "A two-letter abbreviation of the state of the mailing address associated with an account's RWHOIS data. If an account does not reside in a province then this is typically blank."
            }
        }
    },
    "SoftLayer_Network_Subnet_Swip_Transaction": {
        "name": "SoftLayer_Network_Subnet_Swip_Transaction",
        "base": "SoftLayer_Entity",
        "serviceDoc": "\n**DEPRECATED**\nSoftLayer's Automated Swip System is a finite state machine; it works by locally tracking a transaction between SoftLayer and the relevant Regional Internet Registry (RIR), assigning responsibility of a subnet to a customer. Transactions are dictated by the RIR's processing system, and the nature of the communication medium with each RIR, namely their REST API. \n\nUsing this API, SoftLayer Customers are able to initiate, monitor, update, and remove Swip system transactions with ARIN and RIPE. ",
        "methods": {
            "findMyTransactions": {
                "name": "findMyTransactions",
                "type": "SoftLayer_Network_Subnet_Swip_Transaction",
                "typeArray": true,
                "doc": "\n**DEPRECATED**\nThis function will return an array of SoftLayer_Network_Subnet_Swip_Transaction objects, one for each SWIP that is currently in transaction with ARIN.  This includes all swip registrations, swip removal requests, and SWIP objects that are currently OK. ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Subnet_Swip_Transaction",
                "doc": "\n**DEPRECATED**\ngetObject retrieves the SoftLayer_Network_Subnet_Swip_Transaction object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Subnet_Swip_transaction service. You can only retrieve Swip transactions tied to the account. ",
                "filterable": true,
                "maskable": true
            },
            "removeAllSubnetSwips": {
                "name": "removeAllSubnetSwips",
                "type": "int",
                "doc": "\n**DEPRECATED**\nThis method finds all subnets attached to your account that are in OK status and starts \"DELETE\" transactions with ARIN, allowing you to remove your SWIP registration information. ",
                "static": true
            },
            "removeSwipData": {
                "name": "removeSwipData",
                "type": "boolean",
                "doc": "\n**DEPRECATED**\nThis function, when called on an instantiated SWIP transaction, will allow you to start a \"DELETE\" transaction with ARIN, allowing you to remove your SWIP registration information. "
            },
            "resendSwipData": {
                "name": "resendSwipData",
                "type": "boolean",
                "doc": "\n**DEPRECATED**\nThis function will allow you to update ARIN's registration data for a subnet to your current RWHOIS data. "
            },
            "swipAllSubnets": {
                "name": "swipAllSubnets",
                "type": "int",
                "doc": "\n**DEPRECATED**\nswipAllSubnets finds all subnets attached to your account and attempts to create a SWIP transaction for all subnets that do not already have a SWIP transaction in progress. ",
                "static": true
            },
            "updateAllSubnetSwips": {
                "name": "updateAllSubnetSwips",
                "type": "int",
                "doc": "\n**DEPRECATED**\nThis method finds all subnets attached to your account that are in \"OK\" status and updates their data with ARIN.  Use this function after you have updated your RWHOIS data if you want to keep SWIP up to date. ",
                "static": true
            }
        },
        "typeDoc": "\n**DEPRECATED**\nThe SoftLayer_Network_Subnet_Swip_Transaction data type contains basic information tracked at SoftLayer to allow automation of Swip creation, update, and removal requests.  A specific transaction is attached to an accountId and a subnetId. This also contains a \"Status Name\" which tells the customer what the transaction is doing: \n\n\n* REQUEST QUEUED:  Request is queued up to be sent to ARIN\n* REQUEST SENT:  The email request has been sent to ARIN\n* REQUEST CONFIRMED:  ARIN has confirmed that the request is good, and should be available in 24 hours\n* OK:  The subnet has been checked with WHOIS and it the SWIP transaction has completed correctly\n* REMOVE QUEUED:  A subnet is queued to be removed from ARIN's systems\n* REMOVE SENT:  The removal email request has been sent to ARIN\n* REMOVE CONFIRMED:  ARIN has confirmed that the removal request is good, and the subnet should be clear in WHOIS in 24 hours\n* DELETED:  This specific SWIP Transaction has been removed from ARIN and is no longer in effect\n* SOFTLAYER MANUALLY PROCESSING:  Sometimes a request doesn't go through correctly and has to be manually processed by SoftLayer.  This may take some time.",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The Account whose RWHOIS data was used to SWIP this subnet"
            },
            "subnet": {
                "name": "subnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "The subnet that this SWIP transaction was created for."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A SWIP transaction's unique identifier."
            },
            "statusName": {
                "name": "statusName",
                "type": "string",
                "form": "local",
                "doc": "A Name describing which state a SWIP  transaction is in."
            },
            "subnetId": {
                "name": "subnetId",
                "type": "int",
                "form": "local",
                "doc": "ID Number of the Subnet for this SWIP transaction."
            }
        }
    },
    "SoftLayer_Network_Tunnel_Module_Context": {
        "name": "SoftLayer_Network_Tunnel_Module_Context",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A SoftLayer network tunnel allows customer to authenticate and encrypt all IP traffic between two locations. \n\nManage the entire network tunnel using this service.  The SoftLayer_Network_Tunnel_Module_Context allows customers to manage subnets on both ends of the network tunnel.  Address translations can also be managed.  SoftLayer also provides the ability to apply the network tunnel configurations on the SoftLayer network devices. ",
        "methods": {
            "addCustomerSubnetToNetworkTunnel": {
                "name": "addCustomerSubnetToNetworkTunnel",
                "type": "boolean",
                "doc": "Associates a remote subnet to the network tunnel.  When a remote subnet is associated, a network tunnel will allow the customer (remote) network to communicate with the private and service subnets on the SoftLayer network which are on the other end of this network tunnel. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for the association described above to take effect. ",
                "parameters": [
                    {
                        "name": "subnetId",
                        "type": "int",
                        "doc": "The internal identifier of the customer (remote) subnet to add."
                    }
                ]
            },
            "addPrivateSubnetToNetworkTunnel": {
                "name": "addPrivateSubnetToNetworkTunnel",
                "type": "boolean",
                "doc": "Associates a private subnet to the network tunnel.  When a private subnet is associated, the network tunnel will allow the customer (remote) network to access the private subnet. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for the association described above to take effect. ",
                "parameters": [
                    {
                        "name": "subnetId",
                        "type": "int",
                        "doc": "The internal identifier of the private subnet to add."
                    }
                ]
            },
            "addServiceSubnetToNetworkTunnel": {
                "name": "addServiceSubnetToNetworkTunnel",
                "type": "boolean",
                "doc": "Associates a service subnet to the network tunnel.  When a service subnet is associated, a network tunnel will allow the customer (remote) network to communicate with the private and service subnets on the SoftLayer network which are on the other end of this network tunnel.  Service subnets provide access to SoftLayer services such as the customer management portal and the SoftLayer API. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for the association described above to take effect. ",
                "parameters": [
                    {
                        "name": "subnetId",
                        "type": "int",
                        "doc": "The internal identifier of the SoftLayer service subnet to add."
                    }
                ]
            },
            "applyConfigurationsToDevice": {
                "name": "applyConfigurationsToDevice",
                "type": "boolean",
                "doc": "An asynchronous task will be created to apply the IPSec network tunnel's configuration to network devices. During this time, an IPSec network tunnel cannot be modified in anyway. Only one network tunnel configuration task can be created at a time. If a task has already been created and has not completed, a new task cannot be created. "
            },
            "createAddressTranslation": {
                "name": "createAddressTranslation",
                "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                "doc": "Create an address translation for a network tunnel. \n\nTo create an address translation, ip addresses from an assigned /30 static route subnet are used.  Address translations deliver packets to a destination ip address that is on a customer (remote) subnet. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for an address translation to be created. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "translation",
                        "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                        "doc": "The address translation to create for an IPSec network tunnel."
                    }
                ]
            },
            "createAddressTranslations": {
                "name": "createAddressTranslations",
                "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                "typeArray": true,
                "doc": "This has the same functionality as the SoftLayer_Network_Tunnel_Module_Context::createAddressTranslation.  However, it allows multiple translations to be passed in for creation. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for the address translations to be created. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "translations",
                        "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                        "typeArray": true,
                        "doc": "The address translations to create for an IPSec network tunnel."
                    }
                ]
            },
            "deleteAddressTranslation": {
                "name": "deleteAddressTranslation",
                "type": "boolean",
                "doc": "Remove an existing address translation from a network tunnel. \n\nAddress translations deliver packets to a destination ip address that is on a customer subnet (remote). \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for an address translation to be deleted. ",
                "parameters": [
                    {
                        "name": "translationId",
                        "type": "int",
                        "doc": "The internal identifier for an address translation that needs to be removed for an IPSec network tunnel."
                    }
                ]
            },
            "downloadAddressTranslationConfigurations": {
                "name": "downloadAddressTranslationConfigurations",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "doc": "Provides all of the address translation configurations for an IPSec VPN tunnel in a text file "
            },
            "downloadParameterConfigurations": {
                "name": "downloadParameterConfigurations",
                "type": "SoftLayer_Container_Utility_File_Entity",
                "doc": "Provides all of the configurations for an IPSec VPN network tunnel in a text file "
            },
            "editAddressTranslation": {
                "name": "editAddressTranslation",
                "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                "doc": "Edit name, source (SoftLayer IP) ip address and/or destination (Customer IP) ip address for an existing address translation for a network tunnel. \n\nAddress translations deliver packets to a destination ip address that is on a customer (remote) subnet. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for an address translation to be created. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "translation",
                        "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                        "doc": "The address translation to edit for an IPSec network tunnel."
                    }
                ]
            },
            "editAddressTranslations": {
                "name": "editAddressTranslations",
                "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                "typeArray": true,
                "doc": "Edit name, source (SoftLayer IP) ip address and/or destination (Customer IP) ip address for existing address translations for a network tunnel. \n\nAddress translations deliver packets to a destination ip address that is on a customer (remote) subnet. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for an address translation to be modified. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "translations",
                        "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                        "typeArray": true,
                        "doc": "The address translations to edit for an IPSec network tunnel."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Negotiation parameters for both phases one and two are editable. Here are the phase one and two parameters that can modified: \n\n\n*Phase One\n**Authentication\n***Default value is set to MD5.\n***Valid Options are: MD5, SHA1, SHA256.\n**Encryption\n***Default value is set to 3DES.\n***Valid Options are: DES, 3DES, AES128, AES192, AES256.\n**Diffie-Hellman Group\n***Default value is set to 2.\n***Valid Options are: 0 (None), 1, 2, 5.\n**Keylife\n***Default value is set to 3600.\n***Limits are:  MIN = 120, MAX = 172800\n**Preshared Key\n*Phase Two\n**Authentication\n***Default value is set to MD5.\n***Valid Options are: MD5, SHA1, SHA256.\n**Encryption\n***Default value is set to 3DES.\n***Valid Options are: DES, 3DES, AES128, AES192, AES256.\n**Diffie-Hellman Group\n***Default value is set to 2.\n***Valid Options are: 0 (None), 1, 2, 5.\n**Keylife\n***Default value is set to 28800.\n***Limits are:  MIN = 120, MAX = 172800\n**Perfect Forward Secrecy\n***Valid Options are: Off = 0, On = 1.\n***NOTE:  If perfect forward secrecy is turned On (set to 1), then a phase 2 diffie-hellman group is required.\n\n\nThe remote peer address for the network tunnel may also be modified if needed.  Invalid options will not be accepted and will cause an exception to be thrown.  There are properties that provide valid options and limits for each negotiation parameter.  Those properties are as follows: \n* encryptionDefault\n* encryptionOptions\n* authenticationDefault\n* authenticationOptions\n* diffieHellmanGroupDefault\n* diffieHellmanGroupOptions\n* phaseOneKeylifeDefault\n* phaseTwoKeylifeDefault\n* keylifeLimits\n\n\nConfigurations cannot be modified if a network tunnel's requires complex manual setups/configuration modifications by the SoftLayer Network department.  If the former is required, the configurations for the network tunnel will be locked until the manual configurations are complete. A network tunnel's configurations are applied via a transaction.  If a network tunnel configuration change transaction is currently running, the network tunnel's setting cannot be modified until the running transaction completes. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for the modifications made to take effect. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Tunnel_Module_Context",
                        "doc": "A skeleton SoftLayer_Network_Tunnel_Module_Context object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAddressTranslationConfigurations": {
                "name": "getAddressTranslationConfigurations",
                "type": "string",
                "doc": "The address translations will be returned.  All the translations will be formatted so that the configurations can be copied into a host file. \n\nFormat: \n\n{address translation SoftLayer IP Address}        {address translation name} "
            },
            "getAuthenticationDefault": {
                "name": "getAuthenticationDefault",
                "type": "string",
                "doc": "The default authentication type used for both phases of the negotiation process.  The default value is set to MD5. ",
                "static": true
            },
            "getAuthenticationOptions": {
                "name": "getAuthenticationOptions",
                "type": "string",
                "typeArray": true,
                "doc": "Authentication options available for both phases of the negotiation process. \n\nThe authentication options are as follows: \n* MD5\n* SHA1\n* SHA256",
                "static": true
            },
            "getDiffieHellmanGroupDefault": {
                "name": "getDiffieHellmanGroupDefault",
                "type": "int",
                "doc": "The default Diffie-Hellman group used for both phases of the negotiation process.  The default value is set to 2. ",
                "static": true
            },
            "getDiffieHellmanGroupOptions": {
                "name": "getDiffieHellmanGroupOptions",
                "type": "int",
                "typeArray": true,
                "doc": "The Diffie-Hellman group options used for both phases of the negotiation process. \n\nThe diffie-hellman group options are as follows: \n* 0 (None)\n* 1\n* 2\n* 5",
                "static": true
            },
            "getEncryptionDefault": {
                "name": "getEncryptionDefault",
                "type": "string",
                "doc": "The default encryption type used for both phases of the negotiation process.  The default value is set to 3DES. ",
                "static": true
            },
            "getEncryptionOptions": {
                "name": "getEncryptionOptions",
                "type": "string",
                "typeArray": true,
                "doc": "Encryption options available for both phases of the negotiation process. \n\nThe valid encryption options are as follows: \n* DES\n* 3DES\n* AES128\n* AES192\n* AES256",
                "static": true
            },
            "getKeylifeLimits": {
                "name": "getKeylifeLimits",
                "type": "int",
                "typeArray": true,
                "doc": "The keylife limits.  Keylife max limit is set to 120.  Keylife min limit is set to 172800.",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Tunnel_Module_Context",
                "doc": "getObject retrieves the SoftLayer_Network_Tunnel_Module_Context object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Tunnel_Module_Context service. The IPSec network tunnel will be returned if it is associated with the account and the user has proper permission to manage network tunnels. ",
                "filterable": true,
                "maskable": true
            },
            "getParameterConfigurationsForCustomerView": {
                "name": "getParameterConfigurationsForCustomerView",
                "type": "string",
                "doc": "All of the IPSec VPN tunnel's configurations will be returned.  It will list all of phase one and two negotiation parameters.  Both remote and local subnets will be provided as well.  This is useful when the configurations need to be passed on to another team and/or company for internal network configuration. "
            },
            "getPhaseOneKeylifeDefault": {
                "name": "getPhaseOneKeylifeDefault",
                "type": "string",
                "doc": "The default phase 1 keylife used if a value is not provided.  The default value is set to 3600. ",
                "static": true
            },
            "getPhaseTwoKeylifeDefault": {
                "name": "getPhaseTwoKeylifeDefault",
                "type": "string",
                "doc": "The default phase 2 keylife used if a value is not provided.  The default value is set to 28800. ",
                "static": true
            },
            "removeCustomerSubnetFromNetworkTunnel": {
                "name": "removeCustomerSubnetFromNetworkTunnel",
                "type": "boolean",
                "doc": "Disassociate a customer subnet (remote) from a network tunnel.  When a remote subnet is disassociated, that subnet will not able to communicate with private and service subnets on the SoftLayer network. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for the disassociation described above to take effect. ",
                "parameters": [
                    {
                        "name": "subnetId",
                        "type": "int",
                        "doc": "The internal identifier of the customer subnet (remote) to remove."
                    }
                ]
            },
            "removePrivateSubnetFromNetworkTunnel": {
                "name": "removePrivateSubnetFromNetworkTunnel",
                "type": "boolean",
                "doc": "Disassociate a private subnet from a network tunnel.  When a private subnet is disassociated, the customer (remote) subnet on the other end of the tunnel will not able to communicate with the private subnet that was just disassociated. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for the disassociation described above to take effect. ",
                "parameters": [
                    {
                        "name": "subnetId",
                        "type": "int",
                        "doc": "The internal identifier of the private subnet to remove."
                    }
                ]
            },
            "removeServiceSubnetFromNetworkTunnel": {
                "name": "removeServiceSubnetFromNetworkTunnel",
                "type": "boolean",
                "doc": "Disassociate a service subnet from a network tunnel.  When a service subnet is disassociated, that customer (remote) subnet on the other end of the network tunnel will not able to communicate with that service subnet on the SoftLayer network. \n\nNOTE:  A network tunnel's configurations must be applied to the network device in order for the disassociation described above to take effect. ",
                "parameters": [
                    {
                        "name": "subnetId",
                        "type": "int",
                        "doc": "The internal identifier of the service subnet to remove."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_Tunnel_Module_Context data type contains general information relating to a single SoftLayer network tunnel.  The SoftLayer_Network_Tunnel_Module_Context is useful to gather information such as related customer subnets (remote) and internal subnets (local) associated with the network tunnel as well as other information needed to manage the network tunnel.  Account and billing information related to the network tunnel can also be retrieved. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that a network tunnel belongs to."
            },
            "activeTransaction": {
                "name": "activeTransaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "DEPRECATED"
            },
            "addressTranslations": {
                "name": "addressTranslations",
                "type": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
                "form": "relational",
                "typeArray": true,
                "doc": "A network tunnel's address translations."
            },
            "allAvailableServiceSubnets": {
                "name": "allAvailableServiceSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "Subnets that provide access to SoftLayer services such as the management portal and the SoftLayer API."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The current billing item for network tunnel."
            },
            "customerSubnets": {
                "name": "customerSubnets",
                "type": "SoftLayer_Network_Customer_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "Remote subnets that are allowed access through a network tunnel."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The datacenter location for one end of the network tunnel that allows access to account's private subnets."
            },
            "internalSubnets": {
                "name": "internalSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "Private subnets that can be accessed through the network tunnel."
            },
            "serviceSubnets": {
                "name": "serviceSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "Service subnets that can be access through the network tunnel."
            },
            "staticRouteSubnets": {
                "name": "staticRouteSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "Subnets used for a network tunnel's address translations."
            },
            "transactionHistory": {
                "name": "transactionHistory",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "typeArray": true,
                "doc": "DEPRECATED"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A network tunnel's account identifier."
            },
            "advancedConfigurationFlag": {
                "name": "advancedConfigurationFlag",
                "type": "int",
                "form": "local",
                "doc": "A flag used to specify when advanced configurations, complex configurations that require manual setup, are being applied to network devices for a network tunnel. When the flag is set to true (1), a network tunnel cannot be configured through the management portal nor the API. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a network tunnel was created."
            },
            "customerPeerIpAddress": {
                "name": "customerPeerIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The remote end of a network tunnel. This end of the network tunnel resides on an outside network and will be sending and receiving the IPSec packets. "
            },
            "friendlyName": {
                "name": "friendlyName",
                "type": "string",
                "form": "local",
                "doc": "The name giving to a network tunnel by a user."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A network tunnel's unique identifier."
            },
            "internalPeerIpAddress": {
                "name": "internalPeerIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The local  end of a network tunnel. This end of the network tunnel resides on the SoftLayer networks and allows access to remote end of the tunnel to subnets on SoftLayer networks. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a network tunnel was last modified. \n\nNOTE:  This date should NOT be used to determine when the network tunnel configurations were last applied to the network device. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A network tunnel's unique name used on the network device."
            },
            "phaseOneAuthentication": {
                "name": "phaseOneAuthentication",
                "type": "string",
                "form": "local",
                "doc": "Authentication used to generate keys for protecting the negotiations for a network tunnel. "
            },
            "phaseOneDiffieHellmanGroup": {
                "name": "phaseOneDiffieHellmanGroup",
                "type": "int",
                "form": "local",
                "doc": "Determines the strength of the key used in the key exchange process.  The higher the group number the stronger the key is and the more secure it is.  However, processing time will increase as the strength of the key increases.  Both peers in the must use the Diffie-Hellman Group. "
            },
            "phaseOneEncryption": {
                "name": "phaseOneEncryption",
                "type": "string",
                "form": "local",
                "doc": "Encryption used to generate keys for protecting the negotiations for a network tunnel. "
            },
            "phaseOneKeylife": {
                "name": "phaseOneKeylife",
                "type": "int",
                "form": "local",
                "doc": "Amount of time (in seconds) allowed to pass before the encryption key expires.  A new key is generated without interrupting service. Valid times are from 120 to 172800 seconds. "
            },
            "phaseTwoAuthentication": {
                "name": "phaseTwoAuthentication",
                "type": "string",
                "form": "local",
                "doc": "The authentication used in phase 2 proposal negotiation process. "
            },
            "phaseTwoDiffieHellmanGroup": {
                "name": "phaseTwoDiffieHellmanGroup",
                "type": "int",
                "form": "local",
                "doc": "Determines the strength of the key used in the key exchange process.  The higher the group number the stronger the key is and the more secure it is.  However, processing time will increase as the strength of the key increases.  Both peers must use the Diffie-Hellman Group. "
            },
            "phaseTwoEncryption": {
                "name": "phaseTwoEncryption",
                "type": "string",
                "form": "local",
                "doc": "The encryption used in phase 2 proposal negotiation process. "
            },
            "phaseTwoKeylife": {
                "name": "phaseTwoKeylife",
                "type": "int",
                "form": "local",
                "doc": "Amount of time (in seconds) allowed to pass before the encryption key expires.  A new key is generated without interrupting service. Valid times are from 120 to 172800 seconds. "
            },
            "phaseTwoPerfectForwardSecrecy": {
                "name": "phaseTwoPerfectForwardSecrecy",
                "type": "int",
                "form": "local",
                "doc": "Determines if the generated keys are made from previous keys.  When PFS is specified, a Diffie-Hellman exchange occurs each time a new security association is negotiated. "
            },
            "presharedKey": {
                "name": "presharedKey",
                "type": "string",
                "form": "local",
                "doc": "A key used so that peers authenticate each other.  This key is hashed by using the phase one encryption and phase one authentication. "
            },
            "addressTranslationCount": {
                "name": "addressTranslationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a network tunnel's address translations."
            },
            "allAvailableServiceSubnetCount": {
                "name": "allAvailableServiceSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of subnets that provide access to SoftLayer services such as the management portal and the SoftLayer API."
            },
            "customerSubnetCount": {
                "name": "customerSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of remote subnets that are allowed access through a network tunnel."
            },
            "internalSubnetCount": {
                "name": "internalSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of private subnets that can be accessed through the network tunnel."
            },
            "serviceSubnetCount": {
                "name": "serviceSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of service subnets that can be access through the network tunnel."
            },
            "staticRouteSubnetCount": {
                "name": "staticRouteSubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of subnets used for a network tunnel's address translations."
            },
            "transactionHistoryCount": {
                "name": "transactionHistoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of dEPRECATED"
            }
        }
    },
    "SoftLayer_Network_Tunnel_Module_Context_Address_Translation": {
        "name": "SoftLayer_Network_Tunnel_Module_Context_Address_Translation",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Network_Tunnel_Module_Context_Address_Translation data type contains general information relating to a single address translation. Information such as notes, ip addresses, along with record information, and network tunnel data may be retrieved. ",
        "properties": {
            "customerIpAddressRecord": {
                "name": "customerIpAddressRecord",
                "type": "SoftLayer_Network_Customer_Subnet_IpAddress",
                "form": "relational",
                "doc": "The ip address record for the ip that will receive the encrypted traffic from the IPSec network tunnel."
            },
            "internalIpAddressRecord": {
                "name": "internalIpAddressRecord",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The ip address record for the ip that will deliver the encrypted traffic from the IPSec network tunnel."
            },
            "networkTunnelContext": {
                "name": "networkTunnelContext",
                "type": "SoftLayer_Network_Tunnel_Module_Context",
                "form": "relational",
                "doc": "The IPSec network tunnel an address translation belongs to."
            },
            "customerIpAddress": {
                "name": "customerIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The ip address record that will receive the encrypted traffic."
            },
            "customerIpAddressId": {
                "name": "customerIpAddressId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for the ip address record that will receive the encrypted traffic."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An address translation's unique identifier."
            },
            "internalIpAddress": {
                "name": "internalIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The ip address record that will deliver the encrypted traffic."
            },
            "internalIpAddressId": {
                "name": "internalIpAddressId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for the ip address record that will deliver the encrypted traffic."
            },
            "networkTunnelContextId": {
                "name": "networkTunnelContextId",
                "type": "int",
                "form": "local",
                "doc": "An address translation's network tunnel identifier."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A name or description given to an address translation to help identify the address translation."
            }
        }
    },
    "SoftLayer_Network_Vlan": {
        "name": "SoftLayer_Network_Vlan",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Virtual LANs are an integral part of SoftLayer' s public and private networks. A VLAN is a networking concept in which network interfaces on different routers, switches, and servers act as if they're on the same local network broadcast domain. This kind of network segmentation helps keep SoftLayer customers' networks separate from each other and provides a convenient mechanism for routing new IP subnets to servers. They also enable easy IP address sharing and swapping between servers on the same VLAN. SoftLayer servers are provisioned on private VLANs per router on the public and private networks. \n\nThe SoftLayer_Network_Vlan service controls these VLANs and provides relationships between VLANs, subnets, IP addresses, and network components. ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit a VLAN's properties",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Network_Vlan",
                        "doc": "A skeleton SoftLayer_Network_Vlan object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getCancelFailureReasons": {
                "name": "getCancelFailureReasons",
                "type": "string",
                "typeArray": true,
                "doc": "Get a set of reasons why this VLAN may not be cancelled. If the result is empty, this VLAN may be cancelled. "
            },
            "getFirewallProtectableIpAddresses": {
                "name": "getFirewallProtectableIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "typeArray": true,
                "doc": "Get the IP addresses associated with this server that are protectable by a network component firewall. Note, this may not return all values for IPv6 subnets for this VLAN. Please use getFirewallProtectableSubnets to get all protectable subnets. ",
                "maskable": true
            },
            "getFirewallProtectableSubnets": {
                "name": "getFirewallProtectableSubnets",
                "type": "SoftLayer_Network_Subnet",
                "typeArray": true,
                "doc": "Get the subnets associated with this server that are protectable by a network component firewall. ",
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Vlan",
                "doc": "getObject retrieves the SoftLayer_Network_Vlan object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Network_Vlan service. You can only retrieve VLANs that are associated with your SoftLayer customer account. ",
                "filterable": true,
                "maskable": true
            },
            "getPrivateVlan": {
                "name": "getPrivateVlan",
                "type": "SoftLayer_Network_Vlan",
                "doc": "Retrieve a VLAN's associated private network VLAN. getPrivateVlan gathers it's information by retrieving the private VLAN of a VLAN's primary hardware object. ",
                "maskable": true
            },
            "getPrivateVlanByIpAddress": {
                "name": "getPrivateVlanByIpAddress",
                "type": "SoftLayer_Network_Vlan",
                "doc": "\n*** DEPRECATED ***\nRetrieve the private network VLAN associated with an IP address. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The IPv4 address to search for"
                    }
                ]
            },
            "getPublicVlanByFqdn": {
                "name": "getPublicVlanByFqdn",
                "type": "SoftLayer_Network_Vlan",
                "doc": "Retrieve the VLAN that belongs to a server's public network interface, as described by a server's fully-qualified domain name. A server's ''FQDN'' is it's hostname, followed by a period then it's domain name. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "fqdn",
                        "type": "string",
                        "doc": "The fully-qualified domain name of the server you wish to search for. This follows the naming convention \"{hostname}.{domain}\"."
                    }
                ]
            },
            "getReverseDomainRecords": {
                "name": "getReverseDomainRecords",
                "type": "SoftLayer_Dns_Domain",
                "typeArray": true,
                "doc": "Retrieve all reverse DNS records associated with the subnets assigned to a VLAN. ",
                "maskable": true
            },
            "getVlanForIpAddress": {
                "name": "getVlanForIpAddress",
                "type": "SoftLayer_Network_Vlan",
                "doc": "Retrieve the VLAN associated with an IP address via the IP's associated subnet. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "The IP address to search for."
                    }
                ]
            },
            "setTags": {
                "name": "setTags",
                "type": "boolean",
                "doc": "Tag a VLAN by passing in one or more tags separated by a comma. Tag references are cleared out every time this method is called. If your VLAN is already tagged you will need to pass the current tags along with any new ones. To remove all tag references pass an empty string. To remove one or more tags omit them from the tag list. ",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "Comma separated list of tags"
                    }
                ]
            },
            "updateFirewallIntraVlanCommunication": {
                "name": "updateFirewallIntraVlanCommunication",
                "type": "void",
                "doc": "The '''getSensorData''' method updates a VLAN's firewall to allow or disallow intra-VLAN communication. ",
                "parameters": [
                    {
                        "name": "enabled",
                        "type": "boolean",
                        "doc": "Whether or not intra-VLAN communication should be enabled."
                    }
                ]
            },
            "upgrade": {
                "name": "upgrade",
                "type": "SoftLayer_Container_Product_Order_Network_Vlan",
                "doc": "Convert the VLAN this operation is executed against to a paid resource. This can be done for any Automatic VLAN. This operation can only be executed on an Automatic VLAN, and will transition it to being a Premium VLAN. The VLAN will then provide the benefits of a Premium VLAN. A Premium VLAN will remain on the account until cancelled. This operation cannot be undone! Once a VLAN becomes Premium, it can only be removed through cancellation, which will result in it being reclaimed. \n\nThis operation is a convenience for utilizing the SoftLayer_Product_Order.placeOrder operation. It will place an order to upgrade the VLAN it is executed against. It will take a few moments for the order to be processed and the upgrade to complete. Note that the order is placed in such a way that any account state which prevents automatic order approval will prevent the order from being placed. Thus, if no error is received, the order was placed and approved, and the VLAN will be upgraded shortly. "
            }
        },
        "typeDoc": "The SoftLayer_Network_Vlan data type models a single VLAN within SoftLayer's public and private networks. a Virtual LAN is a structure that associates network interfaces on routers, switches, and servers in different locations to act as if they were on the same local network broadcast domain. VLANs are a central part of the SoftLayer network. They can determine how new IP subnets are routed and how individual servers communicate to each other. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account associated with a VLAN."
            },
            "additionalPrimarySubnets": {
                "name": "additionalPrimarySubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "A VLAN's additional primary subnets. These are used to extend the number of servers attached to the VLAN by adding more ip addresses to the primary IP address pool."
            },
            "attachedNetworkGateway": {
                "name": "attachedNetworkGateway",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "doc": "The gateway this VLAN is inside of."
            },
            "attachedNetworkGatewayFlag": {
                "name": "attachedNetworkGatewayFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not this VLAN is inside a gateway."
            },
            "attachedNetworkGatewayVlan": {
                "name": "attachedNetworkGatewayVlan",
                "type": "SoftLayer_Network_Gateway_Vlan",
                "form": "relational",
                "doc": "The inside VLAN record if this VLAN is inside a network gateway."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for a network vlan."
            },
            "dedicatedFirewallFlag": {
                "name": "dedicatedFirewallFlag",
                "type": "int",
                "form": "relational",
                "doc": "A flag indicating that a network vlan is on a Hardware Firewall (Dedicated)."
            },
            "extensionRouter": {
                "name": "extensionRouter",
                "type": "SoftLayer_Hardware_Router",
                "form": "relational",
                "doc": "The extension router that a VLAN is associated with."
            },
            "firewallGuestNetworkComponents": {
                "name": "firewallGuestNetworkComponents",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "typeArray": true,
                "doc": "A firewalled Vlan's network components."
            },
            "firewallInterfaces": {
                "name": "firewallInterfaces",
                "type": "SoftLayer_Network_Firewall_Module_Context_Interface",
                "form": "relational",
                "typeArray": true,
                "doc": "A firewalled vlan's inbound/outbound interfaces."
            },
            "firewallNetworkComponents": {
                "name": "firewallNetworkComponents",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "typeArray": true,
                "doc": "A firewalled Vlan's network components."
            },
            "firewallRules": {
                "name": "firewallRules",
                "type": "SoftLayer_Network_Vlan_Firewall_Rule",
                "form": "relational",
                "typeArray": true,
                "doc": "The currently running rule set of a firewalled VLAN."
            },
            "guestNetworkComponents": {
                "name": "guestNetworkComponents",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The networking components that are connected to a VLAN."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "All of the hardware that exists on a VLAN. Hardware is associated with a VLAN by its networking components."
            },
            "highAvailabilityFirewallFlag": {
                "name": "highAvailabilityFirewallFlag",
                "type": "boolean",
                "form": "relational"
            },
            "localDiskStorageCapabilityFlag": {
                "name": "localDiskStorageCapabilityFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that a vlan can be assigned to a host that has local disk functionality."
            },
            "network": {
                "name": "network",
                "type": "SoftLayer_Network",
                "form": "relational",
                "doc": "The network in which this VLAN resides."
            },
            "networkComponentTrunks": {
                "name": "networkComponentTrunks",
                "type": "SoftLayer_Network_Component_Network_Vlan_Trunk",
                "form": "relational",
                "typeArray": true,
                "doc": "The network components that are connected to this VLAN through a trunk."
            },
            "networkComponents": {
                "name": "networkComponents",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The networking components that are connected to a VLAN."
            },
            "networkComponentsTrunkable": {
                "name": "networkComponentsTrunkable",
                "type": "SoftLayer_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "The viable trunking targets of this VLAN. Viable targets include accessible components of assigned hardware in the same pod and network as this VLAN, which are not already natively attached nor trunked."
            },
            "networkSpace": {
                "name": "networkSpace",
                "type": "string",
                "form": "relational",
                "doc": "Identifier to denote whether a VLAN is used for public or private connectivity."
            },
            "networkVlanFirewall": {
                "name": "networkVlanFirewall",
                "type": "SoftLayer_Network_Vlan_Firewall",
                "form": "relational",
                "doc": "The Hardware Firewall (Dedicated) for a network vlan."
            },
            "primaryRouter": {
                "name": "primaryRouter",
                "type": "SoftLayer_Hardware_Router",
                "form": "relational",
                "doc": "The primary router that a VLAN is associated with. Every SoftLayer VLAN is connected to more than one router for greater network redundancy."
            },
            "primarySubnet": {
                "name": "primarySubnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "A VLAN's primary subnet. Each VLAN has at least one subnet, usually the subnet that is assigned to a server or new IP address block when it's purchased."
            },
            "primarySubnetVersion6": {
                "name": "primarySubnetVersion6",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "A VLAN's primary IPv6 subnet. Some VLAN's may not have a primary IPv6 subnet."
            },
            "primarySubnets": {
                "name": "primarySubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true
            },
            "privateNetworkGateways": {
                "name": "privateNetworkGateways",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "typeArray": true,
                "doc": "The gateways this VLAN is the private VLAN of."
            },
            "protectedIpAddresses": {
                "name": "protectedIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "typeArray": true
            },
            "publicNetworkGateways": {
                "name": "publicNetworkGateways",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "typeArray": true,
                "doc": "The gateways this VLAN is the public VLAN of."
            },
            "sanStorageCapabilityFlag": {
                "name": "sanStorageCapabilityFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that a vlan can be assigned to a host that has SAN disk functionality."
            },
            "scaleVlans": {
                "name": "scaleVlans",
                "type": "SoftLayer_Scale_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of scale VLANs this VLAN applies to."
            },
            "secondaryRouter": {
                "name": "secondaryRouter",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The secondary router that a VLAN is associated with. Every SoftLayer VLAN is connected to more than one router for greater network redundancy."
            },
            "secondarySubnets": {
                "name": "secondarySubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "The subnets that exist as secondary interfaces on a VLAN"
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "All of the subnets that exist as VLAN interfaces."
            },
            "tagReferences": {
                "name": "tagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true,
                "doc": "References to all tags for this VLAN."
            },
            "totalPrimaryIpAddressCount": {
                "name": "totalPrimaryIpAddressCount",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The number of primary IP addresses in a VLAN."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Vlan_Type",
                "form": "relational",
                "doc": "The type of this VLAN."
            },
            "virtualGuests": {
                "name": "virtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "All of the Virtual Servers that are connected to a VLAN."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the SoftLayer customer account that a VLAN is associated with."
            },
            "fullyQualifiedName": {
                "name": "fullyQualifiedName",
                "type": "string",
                "form": "local",
                "doc": "A human readable, unique identifier for a VLAN."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A VLAN's internal identifier. This should not be confused with the ''vlanNumber'' property, which is used in network configuration."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a VLAN was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The optional name for this VLAN"
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local",
                "doc": "The note for this vlan."
            },
            "primarySubnetId": {
                "name": "primarySubnetId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the primary subnet addressed on a VLAN."
            },
            "vlanNumber": {
                "name": "vlanNumber",
                "type": "int",
                "form": "local",
                "doc": "A VLAN's number as recorded within the SoftLayer network. This is configured directly on SoftLayer's networking equipment and should not be confused with a VLAN's ''id'' property."
            },
            "additionalPrimarySubnetCount": {
                "name": "additionalPrimarySubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a VLAN's additional primary subnets. These are used to extend the number of servers attached to the VLAN by adding more ip addresses to the primary IP address pool."
            },
            "firewallGuestNetworkComponentCount": {
                "name": "firewallGuestNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a firewalled Vlan's network components."
            },
            "firewallInterfaceCount": {
                "name": "firewallInterfaceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a firewalled vlan's inbound/outbound interfaces."
            },
            "firewallNetworkComponentCount": {
                "name": "firewallNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a firewalled Vlan's network components."
            },
            "firewallRuleCount": {
                "name": "firewallRuleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the currently running rule set of a firewalled VLAN."
            },
            "guestNetworkComponentCount": {
                "name": "guestNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the networking components that are connected to a VLAN."
            },
            "hardwareCount": {
                "name": "hardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all of the hardware that exists on a VLAN. Hardware is associated with a VLAN by its networking components."
            },
            "networkComponentCount": {
                "name": "networkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the networking components that are connected to a VLAN."
            },
            "networkComponentTrunkCount": {
                "name": "networkComponentTrunkCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the network components that are connected to this VLAN through a trunk."
            },
            "primarySubnetCount": {
                "name": "primarySubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "privateNetworkGatewayCount": {
                "name": "privateNetworkGatewayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the gateways this VLAN is the private VLAN of."
            },
            "protectedIpAddressCount": {
                "name": "protectedIpAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "publicNetworkGatewayCount": {
                "name": "publicNetworkGatewayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the gateways this VLAN is the public VLAN of."
            },
            "scaleVlanCount": {
                "name": "scaleVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of scale VLANs this VLAN applies to."
            },
            "secondarySubnetCount": {
                "name": "secondarySubnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the subnets that exist as secondary interfaces on a VLAN"
            },
            "subnetCount": {
                "name": "subnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all of the subnets that exist as VLAN interfaces."
            },
            "tagReferenceCount": {
                "name": "tagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of references to all tags for this VLAN."
            },
            "virtualGuestCount": {
                "name": "virtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all of the Virtual Servers that are connected to a VLAN."
            }
        }
    },
    "SoftLayer_Network_Vlan_Firewall": {
        "name": "SoftLayer_Network_Vlan_Firewall",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Network_Vlan_Firewall service accesses general information relating to a single SoftLayer VLAN firewall.  This is the object which ties the running rules to a specific downstream server. The current running rule set can be pulled from this service. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "methods": {
            "approveBypassRequest": {
                "name": "approveBypassRequest",
                "type": "void",
                "doc": "Approve a request from technical support to bypass the firewall. Once approved, support will be able to route and unroute the VLAN on the firewall. "
            },
            "getFirewallFirmwareVersion": {
                "name": "getFirewallFirmwareVersion",
                "type": "string",
                "doc": "Retrieve the firewall device firmware version from database. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Vlan_Firewall",
                "doc": "getObject returns a SoftLayer_Network_Vlan_Firewall object. You can only get objects for vlans attached to your account that have a network firewall enabled. ",
                "filterable": true,
                "maskable": true
            },
            "hasActiveTransactions": {
                "name": "hasActiveTransactions",
                "type": "boolean",
                "doc": "Check for active transactions for the Firewall. "
            },
            "isAccountAllowed": {
                "name": "isAccountAllowed",
                "type": "boolean",
                "doc": "Checks if the account is allowed to use some features of FSA1G and Hardware firewall (Dedicated) "
            },
            "isHighAvailabilityUpgradeAvailable": {
                "name": "isHighAvailabilityUpgradeAvailable",
                "type": "boolean",
                "doc": "Whether this firewall qualifies for High Availability upgrade. "
            },
            "rejectBypassRequest": {
                "name": "rejectBypassRequest",
                "type": "void",
                "doc": "Reject a request from technical support to bypass the firewall. Once rejected, IBM support will not be able to route and unroute the VLAN on the firewall. "
            },
            "restoreDefaults": {
                "name": "restoreDefaults",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "This will completely reset the firewall to factory settings. If the firewall is not a FSA 10G appliance an error will occur. Note, this process is performed asynchronously. During the process all traffic will not be routed through the firewall. ",
                "maskable": true
            },
            "setTags": {
                "name": "setTags",
                "type": "boolean",
                "doc": "This method will associate a comma separated list of tags with this object. ",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "comma separated list of tags input by user"
                    }
                ]
            },
            "updateRouteBypass": {
                "name": "updateRouteBypass",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "Enable or disable route bypass for this context. If enabled, this will bypass the firewall entirely and all traffic will be routed directly to the host(s) behind it. If disabled, traffic will flow through the firewall normally. This feature is only available for Hardware Firewall (Dedicated) and dedicated appliances. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "bypass",
                        "type": "boolean",
                        "doc": "True to enable bypass, false to disable bypass"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Network_Vlan_Firewall data type contains general information relating to a single SoftLayer VLAN firewall. This is the object which ties the running rules to a specific downstream server. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. ",
        "properties": {
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "relational"
            },
            "bandwidthAllocation": {
                "name": "bandwidthAllocation",
                "type": "decimal",
                "form": "relational",
                "doc": "A firewall's allotted bandwidth (measured in GB)."
            },
            "billingCycleBandwidthUsage": {
                "name": "billingCycleBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object will be returned for each network this firewall is attached to."
            },
            "billingCyclePrivateBandwidthUsage": {
                "name": "billingCyclePrivateBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "The raw private bandwidth usage data for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsage": {
                "name": "billingCyclePublicBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "The raw public bandwidth usage data for the current billing cycle."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for a Hardware Firewall (Dedicated)."
            },
            "bypassRequestStatus": {
                "name": "bypassRequestStatus",
                "type": "string",
                "form": "relational",
                "doc": "Administrative bypass request status."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The datacenter that the firewall resides in."
            },
            "firewallType": {
                "name": "firewallType",
                "type": "string",
                "form": "relational",
                "doc": "The firewall device type."
            },
            "fullyQualifiedDomainName": {
                "name": "fullyQualifiedDomainName",
                "type": "string",
                "form": "relational",
                "doc": "A name reflecting the hostname and domain of the firewall. This is created from the combined values of the firewall's logical name and vlan number automatically, and thus can not be edited directly."
            },
            "managementCredentials": {
                "name": "managementCredentials",
                "type": "SoftLayer_Software_Component_Password",
                "form": "relational",
                "doc": "The credentials to log in to a firewall device. This is only present for dedicated appliances."
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object",
                "form": "relational",
                "doc": "A firewall's metric tracking object."
            },
            "metricTrackingObjectId": {
                "name": "metricTrackingObjectId",
                "type": "int",
                "form": "relational",
                "doc": "The metric tracking object ID for this firewall."
            },
            "networkFirewallUpdateRequests": {
                "name": "networkFirewallUpdateRequests",
                "type": "SoftLayer_Network_Firewall_Update_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "The update requests made for this firewall."
            },
            "networkGateway": {
                "name": "networkGateway",
                "type": "SoftLayer_Network_Gateway",
                "form": "relational",
                "doc": "The gateway associated with this firewall, if any."
            },
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The VLAN object that a firewall is associated with and protecting."
            },
            "networkVlans": {
                "name": "networkVlans",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "The VLAN objects that a firewall is associated with and protecting."
            },
            "rules": {
                "name": "rules",
                "type": "SoftLayer_Network_Vlan_Firewall_Rule",
                "form": "relational",
                "typeArray": true,
                "doc": "The currently running rule set of this network component firewall."
            },
            "tagReferences": {
                "name": "tagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true
            },
            "upgradeRequest": {
                "name": "upgradeRequest",
                "type": "SoftLayer_Product_Upgrade_Request",
                "form": "relational",
                "doc": "A firewall's associated upgrade request object, if any."
            },
            "administrativeBypassFlag": {
                "name": "administrativeBypassFlag",
                "type": "string",
                "form": "local",
                "doc": "A flag to indicate if the firewall is in administrative bypass mode. In other words, no rules are being applied to the traffic coming through."
            },
            "customerManagedFlag": {
                "name": "customerManagedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether or not this firewall can be directly logged in to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A firewall's unique identifier."
            },
            "primaryIpAddress": {
                "name": "primaryIpAddress",
                "type": "string",
                "form": "local",
                "doc": "A firewall's primary IP address. This field will be the IP shown when doing network traces and reverse DNS and is a read-only property."
            },
            "billingCycleBandwidthUsageCount": {
                "name": "billingCycleBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object will be returned for each network this firewall is attached to."
            },
            "networkFirewallUpdateRequestCount": {
                "name": "networkFirewallUpdateRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the update requests made for this firewall."
            },
            "networkVlanCount": {
                "name": "networkVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the VLAN objects that a firewall is associated with and protecting."
            },
            "ruleCount": {
                "name": "ruleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the currently running rule set of this network component firewall."
            },
            "tagReferenceCount": {
                "name": "tagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Network_Vlan_Firewall_Rule": {
        "name": "SoftLayer_Network_Vlan_Firewall_Rule",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A SoftLayer_Network_Component_Firewall_Rule object type represents a currently running firewall rule and contains relative information. Use the [[SoftLayer Network Firewall Update Request]] service to submit a firewall update request. Use the [[SoftLayer Network Firewall Template]] service to pull SoftLayer recommended rule set templates. ",
        "properties": {
            "networkComponentFirewall": {
                "name": "networkComponentFirewall",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "The network component firewall that this rule belongs to."
            },
            "action": {
                "name": "action",
                "type": "string",
                "form": "local",
                "doc": "The action that the rule is to take [permit or deny]."
            },
            "destinationIpAddress": {
                "name": "destinationIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The destination IP address considered for determining rule application."
            },
            "destinationIpCidr": {
                "name": "destinationIpCidr",
                "type": "int",
                "form": "local",
                "doc": "The CIDR is used for determining rule application. This value will"
            },
            "destinationIpSubnetMask": {
                "name": "destinationIpSubnetMask",
                "type": "string",
                "form": "local",
                "doc": "The destination IP subnet mask considered for determining rule application."
            },
            "destinationPortRangeEnd": {
                "name": "destinationPortRangeEnd",
                "type": "int",
                "form": "local",
                "doc": "The ending (upper end of range) destination port considered for determining rule application."
            },
            "destinationPortRangeStart": {
                "name": "destinationPortRangeStart",
                "type": "int",
                "form": "local",
                "doc": "The starting (lower end of range) destination port considered for determining rule application."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The rule's internal identifier."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "The notes field for the rule."
            },
            "orderValue": {
                "name": "orderValue",
                "type": "int",
                "form": "local",
                "doc": "The numeric value describing the order in which the rule should be applied."
            },
            "protocol": {
                "name": "protocol",
                "type": "string",
                "form": "local",
                "doc": "The protocol considered for determining rule application."
            },
            "sourceIpAddress": {
                "name": "sourceIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The source IP address considered for determining rule application."
            },
            "sourceIpCidr": {
                "name": "sourceIpCidr",
                "type": "int",
                "form": "local",
                "doc": "The CIDR is used for determining rule application. This value will"
            },
            "sourceIpSubnetMask": {
                "name": "sourceIpSubnetMask",
                "type": "string",
                "form": "local",
                "doc": "The source IP subnet mask considered for determining rule application."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "Current status of the network component firewall."
            },
            "version": {
                "name": "version",
                "type": "int",
                "form": "local",
                "doc": "Whether this rule is an IPv4 rule or an IPv6 rule. If"
            }
        }
    },
    "SoftLayer_Network_Vlan_Type": {
        "name": "SoftLayer_Network_Vlan_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A network VLAN type is a value representing the type of a network VLAN. The possible values are: \n\n\n* STANDARD - A VLAN for normal server or guest use\n* GATEWAY - A VLAN designated for use as a network gateway VLAN",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Network_Vlan_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification": {
        "name": "SoftLayer_Notification",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer Customers can use this service to view all of the available notifications that can be subscribed to. Some of the notifications are required while others are not. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Notification",
                "typeArray": true,
                "doc": "Use this method to retrieve all active notifications that can be subscribed to. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Notification",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Details provided for the notification are basic.  Details such as the related preferences, name and keyname for the notification can be retrieved.  The keyname property for the notification can be used to refer to a notification when integrating into the SoftLayer Notification system.  The name property can used more for display purposes. ",
        "properties": {
            "preferences": {
                "name": "preferences",
                "type": "SoftLayer_Notification_Preference",
                "form": "relational",
                "typeArray": true,
                "doc": "The preferences related to the notification. These are preferences are configurable and optional for subscribers to use."
            },
            "requiredPreferences": {
                "name": "requiredPreferences",
                "type": "SoftLayer_Notification_Preference",
                "form": "relational",
                "typeArray": true,
                "doc": "The required preferences related to the notification. While configurable, the subscriber does not have the option whether to use the preference."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for the notification. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Name that can be used by external systems to refer to a notification. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Friendly name for the notification. "
            },
            "preferenceCount": {
                "name": "preferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the preferences related to the notification. These are preferences are configurable and optional for subscribers to use."
            },
            "requiredPreferenceCount": {
                "name": "requiredPreferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the required preferences related to the notification. While configurable, the subscriber does not have the option whether to use the preference."
            }
        }
    },
    "SoftLayer_Notification_Delivery_Method": {
        "name": "SoftLayer_Notification_Delivery_Method",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Provides details for the delivery methods available. ",
        "properties": {
            "active": {
                "name": "active",
                "type": "int",
                "form": "local",
                "doc": "Determines if the delivery method is still used by the system. "
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description used for the delivery method. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for the various notification delivery methods. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Name that can be used by external systems to refer to delivery method. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Friendly name used for the delivery method. "
            }
        }
    },
    "SoftLayer_Notification_Mobile": {
        "name": "SoftLayer_Notification_Mobile",
        "base": "SoftLayer_Notification",
        "serviceDoc": "SoftLayer Customers can use this service to view all of the available mobile notifications that can be subscribed to.  No mobile notifications are required. ",
        "methods": {
            "createSubscriberForMobileDevice": {
                "name": "createSubscriberForMobileDevice",
                "type": "boolean",
                "doc": "Create a new subscriber for a given resource. ",
                "static": true,
                "parameters": [
                    {
                        "name": "keyName",
                        "type": "string",
                        "defaultValue": null
                    },
                    {
                        "name": "resourceTableId",
                        "type": "int",
                        "defaultValue": 0
                    },
                    {
                        "name": "userRecordId",
                        "type": "int",
                        "defaultValue": 0
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Notification_Mobile",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This is an extension of the SoftLayer_Notification class.  These are implementation details specific to those notifications which can be subscribed to and received on a mobile device. "
    },
    "SoftLayer_Notification_Occurrence_Account": {
        "name": "SoftLayer_Notification_Occurrence_Account",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "lastNotificationUpdate": {
                "name": "lastNotificationUpdate",
                "type": "SoftLayer_Notification_Occurrence_Update",
                "form": "relational"
            },
            "notificationOccurrenceEvent": {
                "name": "notificationOccurrenceEvent",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "form": "relational"
            },
            "active": {
                "name": "active",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Event": {
        "name": "SoftLayer_Notification_Occurrence_Event",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The [[SoftLayer_Notification_Occurrence_Event]] service represents all events with potential to cause a disruption in service. ",
        "methods": {
            "acknowledgeNotification": {
                "name": "acknowledgeNotification",
                "type": "boolean",
                "doc": "<<<< EOT"
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getAttachedFile": {
                "name": "getAttachedFile",
                "type": "base64Binary",
                "doc": "Retrieve the contents of the file attached to a SoftLayer event by it's given identifier. ",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "type": "int",
                        "doc": "The id of the attachment to retrieve"
                    }
                ]
            },
            "getImpactedAccountCount": {
                "name": "getImpactedAccountCount",
                "type": "int",
                "doc": "This method will return the number of impacted owned accounts associated with this event for the current user. "
            },
            "getImpactedDeviceCount": {
                "name": "getImpactedDeviceCount",
                "type": "int",
                "doc": "This method will return the number of impacted devices associated with this event for the current user. "
            },
            "getImpactedDevices": {
                "name": "getImpactedDevices",
                "type": "SoftLayer_Notification_Occurrence_Resource",
                "typeArray": true,
                "doc": "This method will return a collection of SoftLayer_Notification_Occurrence_Resource objects which is a listing of the current users' impacted devices that are associated with this event. ",
                "limitable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "acknowledgedFlag": {
                "name": "acknowledgedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates whether or not this event has been acknowledged by the user."
            },
            "attachments": {
                "name": "attachments",
                "type": "SoftLayer_Notification_Occurrence_Event_Attachment",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of attachments for this event which provide supplementary information to impacted users some examples are RFO (Reason For Outage) and root cause analysis documents."
            },
            "firstUpdate": {
                "name": "firstUpdate",
                "type": "SoftLayer_Notification_Occurrence_Update",
                "form": "relational",
                "doc": "The first update for this event."
            },
            "impactedAccounts": {
                "name": "impactedAccounts",
                "type": "SoftLayer_Notification_Occurrence_Account",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of accounts impacted by this event. Each impacted account record relates directly to a [[SoftLayer_Account]]."
            },
            "impactedResources": {
                "name": "impactedResources",
                "type": "SoftLayer_Notification_Occurrence_Resource",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of resources impacted by this event. Each record will relate to some physical resource that the user has access to such as [[SoftLayer_Hardware]] or [[SoftLayer_Virtual_Guest]]."
            },
            "impactedUsers": {
                "name": "impactedUsers",
                "type": "SoftLayer_Notification_Occurrence_User",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of users impacted by this event. Each impacted user record relates directly to a [[SoftLayer_User_Customer]]."
            },
            "lastUpdate": {
                "name": "lastUpdate",
                "type": "SoftLayer_Notification_Occurrence_Update",
                "form": "relational",
                "doc": "The last update for this event."
            },
            "notificationOccurrenceEventType": {
                "name": "notificationOccurrenceEventType",
                "type": "SoftLayer_Notification_Occurrence_Event_Type",
                "form": "relational",
                "doc": "The type of event such as planned or unplanned maintenance."
            },
            "statusCode": {
                "name": "statusCode",
                "type": "SoftLayer_Notification_Occurrence_Status_Code",
                "form": "relational"
            },
            "updates": {
                "name": "updates",
                "type": "SoftLayer_Notification_Occurrence_Update",
                "form": "relational",
                "typeArray": true,
                "doc": "All updates for this event."
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this event will end."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for this event."
            },
            "lastImpactedUserCount": {
                "name": "lastImpactedUserCount",
                "type": "int",
                "form": "local",
                "doc": "Latest count of users impacted by this event."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this event was last updated."
            },
            "recoveryTime": {
                "name": "recoveryTime",
                "type": "int",
                "form": "local"
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this event started."
            },
            "subject": {
                "name": "subject",
                "type": "string",
                "form": "local",
                "doc": "Brief description of this event."
            },
            "summary": {
                "name": "summary",
                "type": "string",
                "form": "local",
                "doc": "Details of this event."
            },
            "systemTicketId": {
                "name": "systemTicketId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for the [[SoftLayer_Ticket]] associated with this event."
            },
            "attachmentCount": {
                "name": "attachmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of attachments for this event which provide supplementary information to impacted users some examples are RFO (Reason For Outage) and root cause analysis documents."
            },
            "impactedAccountCount": {
                "name": "impactedAccountCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of accounts impacted by this event. Each impacted account record relates directly to a [[SoftLayer_Account]]."
            },
            "impactedResourceCount": {
                "name": "impactedResourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of resources impacted by this event. Each record will relate to some physical resource that the user has access to such as [[SoftLayer_Hardware]] or [[SoftLayer_Virtual_Guest]]."
            },
            "impactedUserCount": {
                "name": "impactedUserCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of users impacted by this event. Each impacted user record relates directly to a [[SoftLayer_User_Customer]]."
            },
            "updateCount": {
                "name": "updateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all updates for this event."
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Event_Attachment": {
        "name": "SoftLayer_Notification_Occurrence_Event_Attachment",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer events can have have files attached to them by a SoftLayer employee. Attaching a file to a event is a way to provide supplementary information such as a RFO (reason for outage) document or root cause analysis. The SoftLayer_Notification_Occurrence_Event_Attachment data type models a single file attached to a event. ",
        "properties": {
            "notificationOccurrenceEvent": {
                "name": "notificationOccurrenceEvent",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the file was attached to the event."
            },
            "fileName": {
                "name": "fileName",
                "type": "string",
                "form": "local",
                "doc": "The name of the file attached to the event."
            },
            "fileSize": {
                "name": "fileSize",
                "type": "string",
                "form": "local",
                "doc": "The size of the file, measured in bytes."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A event attachments' unique identifier."
            },
            "notificationOccurrenceEventId": {
                "name": "notificationOccurrenceEventId",
                "type": "int",
                "form": "local",
                "doc": "The unique event identifier that the file is attached to."
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Event_Type": {
        "name": "SoftLayer_Notification_Occurrence_Event_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This represents the type of SoftLayer_Notification_Occurrence_Event. ",
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The friendly unique identifier for this event type."
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource": {
        "name": "SoftLayer_Notification_Occurrence_Resource",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This type contains general information relating to any hardware or services that may be impacted by a SoftLayer_Notification_Occurrence_Event. ",
        "properties": {
            "notificationOccurrenceEvent": {
                "name": "notificationOccurrenceEvent",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "form": "relational",
                "doc": "The associated event."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Entity",
                "form": "relational",
                "doc": "The physical resource."
            },
            "active": {
                "name": "active",
                "type": "int",
                "form": "local"
            },
            "filterLabel": {
                "name": "filterLabel",
                "type": "string",
                "form": "local",
                "doc": "<<< EOT A label which gives some background as to what piece of"
            },
            "notificationOccurrenceEventId": {
                "name": "notificationOccurrenceEventId",
                "type": "int",
                "form": "local",
                "doc": "<<< EOT The unique identifier for the associated"
            },
            "resourceAccountId": {
                "name": "resourceAccountId",
                "type": "int",
                "form": "local",
                "doc": "<<< EOT The unique identifier for the [[SoftLayer_Account]] associated with"
            },
            "resourceName": {
                "name": "resourceName",
                "type": "string",
                "form": "local"
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "<<< EOT The unique identifier for the physical resource that is associated"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Hardware": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Hardware",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Hardware]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "publicIp": {
                "name": "publicIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Network_Application_Delivery_Controller": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Network_Application_Delivery_Controller",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Network_Application_Delivery_Controller]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "publicIp": {
                "name": "publicIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "publicIp": {
                "name": "publicIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Network_Storage_Iscsi_EqualLogic": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Network_Storage_Iscsi_EqualLogic",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Network_Storage_Iscsi]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Network_Storage_Iscsi_NetApp": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Network_Storage_Iscsi_NetApp",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Network_Storage_Iscsi_NetApp]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Network_Storage_Lockbox": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Network_Storage_Lockbox",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Network_Storage_Lockbox]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Network_Storage_Nas": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Network_Storage_Nas",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Network_Storage_Nas]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Network_Storage_NetApp_Volume": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Network_Storage_NetApp_Volume",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Network_Storage]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Network_Storage_NetApp_Volume_Replicant_Iscsi": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Network_Storage_NetApp_Volume_Replicant_Iscsi",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Network_Storage_Iscsi]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Network_Storage_NetApp_Volume_Replicant_Nas": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Network_Storage_NetApp_Volume_Replicant_Nas",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Network_Storage_NetApp_Volume_Replicant_Nas]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Resource_Virtual": {
        "name": "SoftLayer_Notification_Occurrence_Resource_Virtual",
        "base": "SoftLayer_Notification_Occurrence_Resource",
        "noservice": true,
        "typeDoc": "This type contains general information related to a [[SoftLayer_Virtual_Guest]] resource that is impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local"
            },
            "privateIp": {
                "name": "privateIp",
                "type": "string",
                "form": "local"
            },
            "publicIp": {
                "name": "publicIp",
                "type": "string",
                "form": "local"
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Status_Code": {
        "name": "SoftLayer_Notification_Occurrence_Status_Code",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_Update": {
        "name": "SoftLayer_Notification_Occurrence_Update",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "employee": {
                "name": "employee",
                "type": "SoftLayer_User_Employee",
                "form": "relational"
            },
            "notificationOccurrenceEvent": {
                "name": "notificationOccurrenceEvent",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "form": "relational"
            },
            "contents": {
                "name": "contents",
                "type": "string",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local"
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Notification_Occurrence_User": {
        "name": "SoftLayer_Notification_Occurrence_User",
        "base": "SoftLayer_Entity",
        "methods": {
            "acknowledge": {
                "name": "acknowledge",
                "type": "boolean"
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Notification_Occurrence_User",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getImpactedDeviceCount": {
                "name": "getImpactedDeviceCount",
                "type": "int"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Notification_Occurrence_User",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This type contains general information relating to a user that may be impacted by a [[SoftLayer_Notification_Occurrence_Event]]. ",
        "properties": {
            "impactedResources": {
                "name": "impactedResources",
                "type": "SoftLayer_Notification_Occurrence_Resource",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of resources impacted by the associated event."
            },
            "notificationOccurrenceEvent": {
                "name": "notificationOccurrenceEvent",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "form": "relational",
                "doc": "The associated event."
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The impacted user."
            },
            "acknowledgedFlag": {
                "name": "acknowledgedFlag",
                "type": "int",
                "form": "local"
            },
            "active": {
                "name": "active",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "usrRecordId": {
                "name": "usrRecordId",
                "type": "int",
                "form": "local"
            },
            "impactedResourceCount": {
                "name": "impactedResourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of resources impacted by the associated event."
            }
        }
    },
    "SoftLayer_Notification_Preference": {
        "name": "SoftLayer_Notification_Preference",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Retrieve details for preferences.  Preferences are used to allow the subscriber to modify their subscription in various ways.  Details such as friendly name, keyname maximum and minimum values can be retrieved.  These provide details to help configure subscriber preferences correctly. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A description of what the preference is used for. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for the notification preference. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Name that can be used by external systems to refer to preference. "
            },
            "maximumValue": {
                "name": "maximumValue",
                "type": "string",
                "form": "local",
                "doc": "Largest value allowed for the preference. "
            },
            "minimumValue": {
                "name": "minimumValue",
                "type": "string",
                "form": "local",
                "doc": "Smallest value allowed for the preference. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Friendly name for the notification. "
            },
            "units": {
                "name": "units",
                "type": "string",
                "form": "local",
                "doc": "The unit of measure used for the preference's value, minimum and maximum as well. "
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "Default value used when setting up preferences for a new subscriber. "
            }
        }
    },
    "SoftLayer_Notification_Subscriber": {
        "name": "SoftLayer_Notification_Subscriber",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "deliveryMethods": {
                "name": "deliveryMethods",
                "type": "SoftLayer_Notification_Subscriber_Delivery_Method",
                "form": "relational",
                "typeArray": true
            },
            "notification": {
                "name": "notification",
                "type": "SoftLayer_Notification",
                "form": "relational"
            },
            "active": {
                "name": "active",
                "type": "int",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "notificationId": {
                "name": "notificationId",
                "type": "int",
                "form": "local"
            },
            "notificationSubscriberTypeId": {
                "name": "notificationSubscriberTypeId",
                "type": "int",
                "form": "local"
            },
            "notificationSubscriberTypeResourceId": {
                "name": "notificationSubscriberTypeResourceId",
                "type": "int",
                "form": "local"
            },
            "deliveryMethodCount": {
                "name": "deliveryMethodCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Notification_Subscriber_Customer": {
        "name": "SoftLayer_Notification_Subscriber_Customer",
        "base": "SoftLayer_Notification_Subscriber",
        "noservice": true,
        "properties": {
            "subscriberRecord": {
                "name": "subscriberRecord",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Notification_Subscriber_Delivery_Method": {
        "name": "SoftLayer_Notification_Subscriber_Delivery_Method",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Provides details for the subscriber's delivery methods. ",
        "properties": {
            "notificationDeliveryMethod": {
                "name": "notificationDeliveryMethod",
                "type": "SoftLayer_Notification_Delivery_Method",
                "form": "relational"
            },
            "notificationSubscriber": {
                "name": "notificationSubscriber",
                "type": "SoftLayer_Notification_Subscriber",
                "form": "relational"
            },
            "active": {
                "name": "active",
                "type": "int",
                "form": "local",
                "doc": "Indicates the subscriber's delivery method availability for notifications. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date the subscriber's delivery method was created. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date the subscriber's delivery method was last modified. "
            },
            "notificationDeliveryMethodId": {
                "name": "notificationDeliveryMethodId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for the notification delivery method. "
            },
            "notificationSubscriberId": {
                "name": "notificationSubscriberId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for the subscriber. "
            }
        }
    },
    "SoftLayer_Notification_User_Subscriber": {
        "name": "SoftLayer_Notification_User_Subscriber",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer Customers can subscribe to receive notifications for various notification types.  This service also allows you to \"turn on\" or \"turn off\" notification messages sent to a subscriber for certain notifications. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "boolean",
                "doc": "Use the method to create a new subscription for a notification.  This method is the entry method to the notification system. Certain properties are required to create a subscription while others are optional. \n\nThe required property is the resourceRecord property which is type SoftLayer_Notification_User_Subscriber_Resource.  For the resourceRecord property, the only property that needs to be populated is the resourceTableId.  The resourceTableId is the unique identifier of a SoftLayer service to create the subscription for.  For example, the unique identifier of the Storage Evault service to create the subscription on. \n\nOptional properties that can be set is the preferences property.  The preference property is an array SoftLayer_Notification_User_Subscriber_Preference. By default, the system will populate the preferences with the default values if no preferences are passed in.  The preferences passed in must be the preferences related to the notification subscribing to.  The notification preferences and preference details (such as minimum and maximum values) can be retrieved using the SoftLayer_Notification service.  The properties that need to be populated for preferences are the notificationPreferenceId and value. \n\nFor example to create a subscriber for a Storage EVault service to be notified 15 times during a billing cycle and to be notified when the vault usage reaches 85% of its allowed capacity use the following structure: \n\n\n*userRecordId = 1111\n*notificationId = 3\n*resourceRecord\n**resourceTableId = 1234\n*preferences[1]\n**notificationPreferenceId = 2\n**value = 85\n*preference[2]\n**notificationPreferenceId = 3\n**value = 15\n\n",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Notification_User_Subscriber",
                        "doc": "The SoftLayer_Notification_User_Subscriber object that you wish to create."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "The subscriber's subscription status can be \"turned off\" or \"turned on\" if the subscription is not required. \n\nSubscriber preferences may also be edited.  To edit the preferences, you must pass in the id off the preferences to edit.  Here is an example of structure to pass in.  In this example, the structure will set the subscriber status to active and the threshold preference to 90 and the limit preference to 20 \n\n\n*id = 1111\n*active = 1\n*preferences[1]\n**id = 11\n**value = 90\n*preference[2]\n**id = 12\n**value = 20",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Notification_User_Subscriber",
                        "doc": "A skeleton SoftLayer_Notification_User_Subscriber object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Notification_User_Subscriber",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "A notification subscriber will have details pertaining to the subscriber's notification subscription.  You can receive details such as preferences, details of the preferences, delivery methods and the delivery methods for the subscriber. \n\nNOTE: There are preferences and delivery methods that cannot be modified.  Also, there are some subscriptions that are required. ",
        "properties": {
            "deliveryMethods": {
                "name": "deliveryMethods",
                "type": "SoftLayer_Notification_Delivery_Method",
                "form": "relational",
                "typeArray": true,
                "doc": "The delivery methods used to send the subscribed notification."
            },
            "notification": {
                "name": "notification",
                "type": "SoftLayer_Notification",
                "form": "relational",
                "doc": "Notification subscribed to."
            },
            "preferences": {
                "name": "preferences",
                "type": "SoftLayer_Notification_User_Subscriber_Preference",
                "form": "relational",
                "typeArray": true,
                "doc": "Associated subscriber preferences used for the notification subscription. For example, preferences include number of deliveries (limit) and threshold."
            },
            "preferencesDetails": {
                "name": "preferencesDetails",
                "type": "SoftLayer_Notification_Preference",
                "form": "relational",
                "typeArray": true,
                "doc": "Preference details such as description, minimum and maximum limits, default value and unit of measure."
            },
            "resourceRecord": {
                "name": "resourceRecord",
                "type": "SoftLayer_Notification_User_Subscriber_Resource",
                "form": "relational",
                "doc": "The subscriber id to resource id mapping."
            },
            "userRecord": {
                "name": "userRecord",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "User record for the subscription."
            },
            "active": {
                "name": "active",
                "type": "int",
                "form": "local",
                "doc": "The current status of the subscription. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the subscriber that will receive the alerts. "
            },
            "notificationId": {
                "name": "notificationId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the notification subscribed to. "
            },
            "userRecordId": {
                "name": "userRecordId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the user the subscription is for. "
            },
            "deliveryMethodCount": {
                "name": "deliveryMethodCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the delivery methods used to send the subscribed notification."
            },
            "preferenceCount": {
                "name": "preferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of associated subscriber preferences used for the notification subscription. For example, preferences include number of deliveries (limit) and threshold."
            },
            "preferencesDetailCount": {
                "name": "preferencesDetailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of preference details such as description, minimum and maximum limits, default value and unit of measure."
            }
        }
    },
    "SoftLayer_Notification_User_Subscriber_Billing": {
        "name": "SoftLayer_Notification_User_Subscriber_Billing",
        "base": "SoftLayer_Notification_User_Subscriber",
        "serviceDoc": "SoftLayer Customers can subscribe to receive notifications for various notification types.  This service also allows you to \"turn on\" or \"turn off\" notification messages sent to a subscriber for certain notifications. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Notification_User_Subscriber_Billing",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "A notification subscriber will have details pertaining to the subscriber's notification subscription.  You can receive details such as preferences, details of the preferences, delivery methods and the delivery methods for the subscriber. \n\nNOTE: There are preferences and delivery methods that cannot be modified.  Also, there are some subscriptions that are required. "
    },
    "SoftLayer_Notification_User_Subscriber_Delivery_Method": {
        "name": "SoftLayer_Notification_User_Subscriber_Delivery_Method",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Provides mapping details of how the subscriber's notification will be delivered.  This maps the subscriber's id with all the delivery method ids used to delivery the notification. ",
        "properties": {
            "deliveryMethod": {
                "name": "deliveryMethod",
                "type": "SoftLayer_Notification_Delivery_Method",
                "form": "relational",
                "doc": "Provides details for the method used to deliver the notification (email, sms, ticket)."
            },
            "notificationUserSubscriber": {
                "name": "notificationUserSubscriber",
                "type": "SoftLayer_Notification_User_Subscriber",
                "form": "relational",
                "doc": "The Subscriber information tied to the delivery method."
            },
            "active": {
                "name": "active",
                "type": "int",
                "form": "local",
                "doc": "Determines if the delivery method is active for the user. "
            },
            "notificationMethodId": {
                "name": "notificationMethodId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the method used to deliver notification. "
            },
            "notificationUserSubscriberId": {
                "name": "notificationUserSubscriberId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the subscriber tied to the delivery method. "
            }
        }
    },
    "SoftLayer_Notification_User_Subscriber_Mobile": {
        "name": "SoftLayer_Notification_User_Subscriber_Mobile",
        "base": "SoftLayer_Notification_User_Subscriber",
        "serviceDoc": "SoftLayer Customers can subscribe to receive notifications for various notification types.  This service also allows you to \"turn on\" or \"turn off\" notification messages sent to a subscriber for certain notifications. ",
        "methods": {
            "clearSnoozeTimer": {
                "name": "clearSnoozeTimer",
                "type": "boolean"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Notification_User_Subscriber_Mobile",
                "filterable": true,
                "maskable": true
            },
            "setSnoozeTimer": {
                "name": "setSnoozeTimer",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "start",
                        "type": "int",
                        "doc": "Epoch time stamp representing start snooze time."
                    },
                    {
                        "name": "end",
                        "type": "int",
                        "doc": "Epoch time stamp representing end snooze time."
                    }
                ]
            }
        },
        "typeDoc": "A notification subscriber will have details pertaining to the subscriber's notification subscription.  You can receive details such as preferences, details of the preferences, delivery methods and the delivery methods for the subscriber. \n\nNOTE: There are preferences and delivery methods that cannot be modified.  Also, there are some subscriptions that are required. "
    },
    "SoftLayer_Notification_User_Subscriber_Preference": {
        "name": "SoftLayer_Notification_User_Subscriber_Preference",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "boolean",
                "doc": "Use the method to create a new notification preference for a subscriber ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Notification_User_Subscriber_Preference",
                        "doc": "The SoftLayer_Notification_User_Subscriber_Preference object that you wish to create."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Notification_User_Subscriber_Preference",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Notification_User_Subscriber_Preference objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Notification_User_Subscriber_Preference",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Preferences are settings that can be modified to change the behavior of the subscription.  For example, modify the limit preference to only receive notifications 10 times instead of 1 during a billing cycle. \n\nNOTE: Some preferences have certain restrictions on values that can be set. ",
        "properties": {
            "defaultPreference": {
                "name": "defaultPreference",
                "type": "SoftLayer_Notification_Preference",
                "form": "relational",
                "doc": "Details such name, keyname, minimum and maximum values for the preference."
            },
            "notificationUserSubscriber": {
                "name": "notificationUserSubscriber",
                "type": "SoftLayer_Notification_User_Subscriber",
                "form": "relational",
                "doc": "Details of the subscriber tied to the preference."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for the subscriber's preferences. "
            },
            "notificationPreferenceId": {
                "name": "notificationPreferenceId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the default preference for which the subscriber preference is based on.  For example, if no preferences are supplied during the creation of a subscriber.  The default values are pulled using this property. "
            },
            "notificationUserSubscriberId": {
                "name": "notificationUserSubscriberId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the subscriber tied to the subscriber preference. "
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The user supplied value to \"override\" the \"default\" preference's value. "
            }
        }
    },
    "SoftLayer_Notification_User_Subscriber_Resource": {
        "name": "SoftLayer_Notification_User_Subscriber_Resource",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Retrieve identifier cross-reference information.  SoftLayer_Notification_User_Subscriber_Resource provides the resource table id and subscriber id relation. The resource table id is the id of the service the subscriber receives alerts for.  This resource table id could be the unique identifier for a Storage Evault service or CDN service. ",
        "properties": {
            "notificationUserSubscriber": {
                "name": "notificationUserSubscriber",
                "type": "SoftLayer_Notification_User_Subscriber",
                "form": "relational",
                "doc": "The Subscriber information tied to the resource service."
            },
            "notificationUserSubscriberId": {
                "name": "notificationUserSubscriberId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier of the subscriber that will receive the alerts for the resource subscribed to a notification. "
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for a SoftLayer service that is subscribed to a notification.  Currently, the SoftLayer services that can be subscribed to notifications are: \n\nStorage EVault CDN \n\n"
            }
        }
    },
    "SoftLayer_Policy_Document_Acceptance_Quote": {
        "name": "SoftLayer_Policy_Document_Acceptance_Quote",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Billing_Oder_Quote data type records acceptance of policy documents for a quote. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Billing_Order_Quote",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Product_Catalog": {
        "name": "SoftLayer_Product_Catalog",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A Catalog is defined as a set of prices for products that SoftLayer offers for sale. These prices are organized into packages which represent the different servers and services that SoftLayer offers. ",
        "properties": {
            "brands": {
                "name": "brands",
                "type": "SoftLayer_Brand",
                "form": "relational",
                "typeArray": true,
                "doc": "Brands using this Catalog"
            },
            "packages": {
                "name": "packages",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "typeArray": true,
                "doc": "Packages available in this catalog"
            },
            "prices": {
                "name": "prices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "typeArray": true,
                "doc": "Prices available in this catalog"
            },
            "products": {
                "name": "products",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "Products available in catalog"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The Key Name of the Catalog, used for direct references"
            },
            "brandCount": {
                "name": "brandCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of brands using this Catalog"
            },
            "packageCount": {
                "name": "packageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of packages available in this catalog"
            },
            "priceCount": {
                "name": "priceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of prices available in this catalog"
            },
            "productCount": {
                "name": "productCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of products available in catalog"
            }
        }
    },
    "SoftLayer_Product_Catalog_Item_Price": {
        "name": "SoftLayer_Product_Catalog_Item_Price",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Catalog_Item_Price type assigns an Item Price to a Catalog. This relation defines the composition of Item Prices in a Catalog. ",
        "properties": {
            "catalog": {
                "name": "catalog",
                "type": "SoftLayer_Product_Catalog",
                "form": "relational",
                "doc": "Catalog being assigned"
            },
            "price": {
                "name": "price",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "doc": "Price being assigned"
            },
            "catalogId": {
                "name": "catalogId",
                "type": "int",
                "form": "local",
                "doc": "The id of the Catalog the Item Price is part of."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The time the Item Price was defined in the Catalog"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The time the Item Price was changed for the Catalog"
            },
            "priceId": {
                "name": "priceId",
                "type": "int",
                "form": "local",
                "doc": "The id of the Item Price that is part of the Catalog."
            }
        }
    },
    "SoftLayer_Product_Group": {
        "name": "SoftLayer_Product_Group",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Group data type contains product group relationship. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the product group."
            }
        }
    },
    "SoftLayer_Product_Item": {
        "name": "SoftLayer_Product_Item",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item data type contains general information relating to a single SoftLayer product. ",
        "properties": {
            "activePresaleEvents": {
                "name": "activePresaleEvents",
                "type": "SoftLayer_Sales_Presale_Event",
                "form": "relational",
                "typeArray": true
            },
            "activeUsagePrices": {
                "name": "activeUsagePrices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "typeArray": true,
                "doc": "Active usage based prices."
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Product_Item_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "The attribute values for a product item. These are additional properties that give extra information about the product being sold."
            },
            "availabilityAttributes": {
                "name": "availabilityAttributes",
                "type": "SoftLayer_Product_Item_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "Attributes that govern when an item may no longer be available."
            },
            "billingType": {
                "name": "billingType",
                "type": "string",
                "form": "relational",
                "doc": "An item's special billing type, if applicable."
            },
            "bundle": {
                "name": "bundle",
                "type": "SoftLayer_Product_Item_Bundles",
                "form": "relational",
                "typeArray": true,
                "doc": "An item's included product item references. Some items have other items included in them that we specifically detail. They are here called Bundled Items. An example is Plesk unlimited. It as a bundled item labeled 'SiteBuilder'. These are the SoftLayer_Product_Item_Bundles objects. See the SoftLayer_Product_Item::bundleItems property for bundle of SoftLayer_Product_Item of objects."
            },
            "bundleItems": {
                "name": "bundleItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "An item's included products. Some items have other items included in them that we specifically detail. They are here called Bundled Items. An example is Plesk unlimited. It as a bundled item labeled 'SiteBuilder'. These are the SoftLayer_Product_Item objects."
            },
            "capacityMaximum": {
                "name": "capacityMaximum",
                "type": "string",
                "form": "relational",
                "doc": "When the product capacity is best described as a range, this holds the ceiling of the range."
            },
            "capacityMinimum": {
                "name": "capacityMinimum",
                "type": "string",
                "form": "relational",
                "doc": "When the product capacity is best described as a range, this holds the floor of the range."
            },
            "capacityRestrictedProductFlag": {
                "name": "capacityRestrictedProductFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates that this product is restricted by a capacity on a related product."
            },
            "categories": {
                "name": "categories",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "typeArray": true,
                "doc": "An item's associated item categories."
            },
            "configurationTemplates": {
                "name": "configurationTemplates",
                "type": "SoftLayer_Configuration_Template",
                "form": "relational",
                "typeArray": true,
                "doc": "Some product items have configuration templates which can be used to during provisioning of that product."
            },
            "conflicts": {
                "name": "conflicts",
                "type": "SoftLayer_Product_Item_Resource_Conflict",
                "form": "relational",
                "typeArray": true,
                "doc": "An item's conflicts. For example, McAfee LinuxShield cannot be ordered with Windows. It was not meant for that operating system and as such is a conflict."
            },
            "coreRestrictedItemFlag": {
                "name": "coreRestrictedItemFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates that this product is restricted by the number of cores on the compute instance. This is deprecated. Use [[SoftLayer_Product_Item/getCapacityRestrictedProductFlag|getCapacityRestrictedProductFlag]]"
            },
            "downgradeItem": {
                "name": "downgradeItem",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "Some product items have a downgrade path. This is the first product item in the downgrade path."
            },
            "downgradeItems": {
                "name": "downgradeItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "Some product items have a downgrade path. These are those product items."
            },
            "globalCategoryConflicts": {
                "name": "globalCategoryConflicts",
                "type": "SoftLayer_Product_Item_Resource_Conflict",
                "form": "relational",
                "typeArray": true,
                "doc": "An item's category conflicts. For example, 10 Gbps redundant network functionality cannot be ordered with a secondary GPU and as such is a conflict."
            },
            "hardwareGenericComponentModel": {
                "name": "hardwareGenericComponentModel",
                "type": "SoftLayer_Hardware_Component_Model_Generic",
                "form": "relational",
                "doc": "The generic hardware component that this item represents."
            },
            "hideFromPortalFlag": {
                "name": "hideFromPortalFlag",
                "type": "boolean",
                "form": "relational"
            },
            "ineligibleForAccountDiscountFlag": {
                "name": "ineligibleForAccountDiscountFlag",
                "type": "boolean",
                "form": "relational"
            },
            "inventory": {
                "name": "inventory",
                "type": "SoftLayer_Product_Package_Inventory",
                "form": "relational",
                "typeArray": true,
                "doc": "DEPRECATED. An item's inventory status per datacenter."
            },
            "isEngineeredServerProduct": {
                "name": "isEngineeredServerProduct",
                "type": "boolean",
                "form": "relational",
                "doc": "Flag to indicate the server product is engineered for a multi-server solution. (Deprecated)"
            },
            "itemCategory": {
                "name": "itemCategory",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "doc": "An item's primary item category."
            },
            "localDiskFlag": {
                "name": "localDiskFlag",
                "type": "boolean",
                "form": "relational"
            },
            "locationConflicts": {
                "name": "locationConflicts",
                "type": "SoftLayer_Product_Item_Resource_Conflict",
                "form": "relational",
                "typeArray": true,
                "doc": "An item's location conflicts. For example, Dual Path network functionality cannot be ordered in WDC and as such is a conflict."
            },
            "minimumNvmeBays": {
                "name": "minimumNvmeBays",
                "type": "int",
                "form": "relational",
                "doc": "The minimum number of bays that support NVMe SSDs."
            },
            "nvmeDiskFlag": {
                "name": "nvmeDiskFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates whether an item is a NVMe SSD."
            },
            "objectStorageClusterGeolocationType": {
                "name": "objectStorageClusterGeolocationType",
                "type": "string",
                "form": "relational"
            },
            "objectStorageItemFlag": {
                "name": "objectStorageItemFlag",
                "type": "boolean",
                "form": "relational"
            },
            "objectStorageServiceClass": {
                "name": "objectStorageServiceClass",
                "type": "string",
                "form": "relational"
            },
            "packages": {
                "name": "packages",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of all the SoftLayer_Product_Package(s) in which this item exists."
            },
            "physicalCoreCapacity": {
                "name": "physicalCoreCapacity",
                "type": "string",
                "form": "relational",
                "doc": "The number of cores that a processor has."
            },
            "presaleEvents": {
                "name": "presaleEvents",
                "type": "SoftLayer_Sales_Presale_Event",
                "form": "relational",
                "typeArray": true
            },
            "prices": {
                "name": "prices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "typeArray": true,
                "doc": "A product item's prices."
            },
            "requirements": {
                "name": "requirements",
                "type": "SoftLayer_Product_Item_Requirement",
                "form": "relational",
                "typeArray": true,
                "doc": "If an item must be ordered with another item, it will have a requirement item here."
            },
            "rules": {
                "name": "rules",
                "type": "SoftLayer_Product_Item_Rule",
                "form": "relational",
                "typeArray": true,
                "doc": "An item's rules. This includes the requirements and conflicts to resources that an item has."
            },
            "softwareDescription": {
                "name": "softwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "The SoftLayer_Software_Description tied to this item. This will only be populated for software items."
            },
            "taxCategory": {
                "name": "taxCategory",
                "type": "SoftLayer_Product_Item_Tax_Category",
                "form": "relational",
                "doc": "An item's tax category, if applicable."
            },
            "thirdPartyPolicyAssignments": {
                "name": "thirdPartyPolicyAssignments",
                "type": "SoftLayer_Product_Item_Policy_Assignment",
                "form": "relational",
                "typeArray": true,
                "doc": "Third-party policy assignments for this product."
            },
            "thirdPartySupportVendor": {
                "name": "thirdPartySupportVendor",
                "type": "string",
                "form": "relational",
                "doc": "The 3rd party vendor for a support subscription item. (Deprecated)"
            },
            "totalPhysicalCoreCapacity": {
                "name": "totalPhysicalCoreCapacity",
                "type": "int",
                "form": "relational",
                "doc": "The total number of physical processing cores (excluding virtual cores / hyperthreads) for this server."
            },
            "totalPhysicalCoreCount": {
                "name": "totalPhysicalCoreCount",
                "type": "int",
                "form": "relational",
                "doc": "Shows the total number of cores. This is deprecated. Use [[SoftLayer_Product_Item/getCapacity|getCapacity]] for guest_core products and [[SoftLayer_Product_Item/getTotalPhysicalCoreCapacity|getTotalPhysicalCoreCapacity]] for server products"
            },
            "totalProcessorCapacity": {
                "name": "totalProcessorCapacity",
                "type": "int",
                "form": "relational",
                "doc": "The total number of processors for this server."
            },
            "upgradeItem": {
                "name": "upgradeItem",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "Some product items have an upgrade path. This is the next product item in the upgrade path."
            },
            "upgradeItems": {
                "name": "upgradeItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "Some product items have an upgrade path. These are those upgrade product items."
            },
            "capacity": {
                "name": "capacity",
                "type": "decimal",
                "form": "local",
                "doc": "Some Product Items have capacity information such as RAM and bandwidth, and others. This provides the numerical representation of the capacity given in the description of this product item."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A product's description"
            },
            "hardwareGenericComponentId": {
                "name": "hardwareGenericComponentId",
                "type": "int",
                "form": "local",
                "doc": "The hardware generic component model ID of the product."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A product's internal identification number"
            },
            "itemTaxCategoryId": {
                "name": "itemTaxCategoryId",
                "type": "int",
                "form": "local",
                "doc": "A products tax category internal identification number"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A unique key name for the product."
            },
            "longDescription": {
                "name": "longDescription",
                "type": "string",
                "form": "local",
                "doc": "Detailed product description"
            },
            "softwareDescriptionId": {
                "name": "softwareDescriptionId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the SoftLayer_Software_Description tied to this item."
            },
            "units": {
                "name": "units",
                "type": "string",
                "form": "local",
                "doc": "The unit of measurement that a product item is measured in."
            },
            "upgradeItemId": {
                "name": "upgradeItemId",
                "type": "int",
                "form": "local",
                "doc": "A products upgrade item's internal identification number"
            },
            "activePresaleEventCount": {
                "name": "activePresaleEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "activeUsagePriceCount": {
                "name": "activeUsagePriceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of active usage based prices."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the attribute values for a product item. These are additional properties that give extra information about the product being sold."
            },
            "availabilityAttributeCount": {
                "name": "availabilityAttributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of attributes that govern when an item may no longer be available."
            },
            "bundleCount": {
                "name": "bundleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an item's included product item references. Some items have other items included in them that we specifically detail. They are here called Bundled Items. An example is Plesk unlimited. It as a bundled item labeled 'SiteBuilder'. These are the SoftLayer_Product_Item_Bundles objects. See the SoftLayer_Product_Item::bundleItems property for bundle of SoftLayer_Product_Item of objects."
            },
            "bundleItemCount": {
                "name": "bundleItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an item's included products. Some items have other items included in them that we specifically detail. They are here called Bundled Items. An example is Plesk unlimited. It as a bundled item labeled 'SiteBuilder'. These are the SoftLayer_Product_Item objects."
            },
            "categoryCount": {
                "name": "categoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an item's associated item categories."
            },
            "configurationTemplateCount": {
                "name": "configurationTemplateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of some product items have configuration templates which can be used to during provisioning of that product."
            },
            "downgradeItemCount": {
                "name": "downgradeItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of some product items have a downgrade path. These are those product items."
            },
            "inventoryCount": {
                "name": "inventoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of dEPRECATED. An item's inventory status per datacenter."
            },
            "packageCount": {
                "name": "packageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of all the SoftLayer_Product_Package(s) in which this item exists."
            },
            "presaleEventCount": {
                "name": "presaleEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "priceCount": {
                "name": "priceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a product item's prices."
            },
            "ruleCount": {
                "name": "ruleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an item's rules. This includes the requirements and conflicts to resources that an item has."
            },
            "thirdPartyPolicyAssignmentCount": {
                "name": "thirdPartyPolicyAssignmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of third-party policy assignments for this product."
            },
            "upgradeItemCount": {
                "name": "upgradeItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of some product items have an upgrade path. These are those upgrade product items."
            }
        }
    },
    "SoftLayer_Product_Item_Attribute": {
        "name": "SoftLayer_Product_Item_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The [[SoftLayer_Product_Item_Attribute]] data type allows us to describe a [[SoftLayer_Product_Item]] by attaching specific attributes, which may dictate how it interacts with other products and services. Most, if not all, of these attributes are geared towards internal usage, so customers should rarely be concerned with them. ",
        "properties": {
            "attributeType": {
                "name": "attributeType",
                "type": "SoftLayer_Product_Item_Attribute_Type",
                "form": "relational",
                "doc": "This represents the attribute type of this product attribute."
            },
            "attributeTypeKeyName": {
                "name": "attributeTypeKeyName",
                "type": "string",
                "form": "relational",
                "doc": "This represents the attribute type's key name of this product attribute."
            },
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "This represents the product that an attribute is tied to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "This is the primary key value for the product attribute."
            },
            "itemAttributeTypeId": {
                "name": "itemAttributeTypeId",
                "type": "int",
                "form": "local",
                "doc": "This is a foreign key value for the [[SoftLayer_Product_Item_Attribute_Type]]."
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "This is a foreign key value for the [[SoftLayer_Product_Item]]."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "This is the value for the attribute."
            }
        }
    },
    "SoftLayer_Product_Item_Attribute_Type": {
        "name": "SoftLayer_Product_Item_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The [[SoftLayer_Product_Item_Attribute_Type]] data type defines the available type of product attributes that are available. This allows for convenient reference to a [[SoftLayer_Product_Item_Attribute|product attribute]] by a unique key name value. ",
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "This is the unique identifier of the attribute type."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "This is the user-friendly readable name of the attribute type."
            }
        }
    },
    "SoftLayer_Product_Item_Billing_Type": {
        "name": "SoftLayer_Product_Item_Billing_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Billing_Type data type models special billing types for non-monthly billed items in the SoftLayer product catalog. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A keyword describing a SoftLayer product item billing type. "
            }
        }
    },
    "SoftLayer_Product_Item_Bundles": {
        "name": "SoftLayer_Product_Item_Bundles",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Bundles contains item to price cross references. Relates a category, price and item to a bundle.  Match bundle ids to see all items and prices in a particular bundle. ",
        "properties": {
            "bundleItem": {
                "name": "bundleItem",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "Item in bundle."
            },
            "category": {
                "name": "category",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "doc": "Category bundle falls in."
            },
            "itemPrice": {
                "name": "itemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "doc": "Price of item in bundle"
            },
            "bundleItemId": {
                "name": "bundleItemId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for bundle."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Identifier for record."
            },
            "itemPriceId": {
                "name": "itemPriceId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for price."
            }
        }
    },
    "SoftLayer_Product_Item_Category": {
        "name": "SoftLayer_Product_Item_Category",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Retrieve the category information for a product item.",
        "methods": {
            "getAdditionalProductsForCategory": {
                "name": "getAdditionalProductsForCategory",
                "type": "SoftLayer_Product_Item",
                "typeArray": true,
                "doc": "Returns a list of of active Items in the \"Additional Services\" package with their active prices for a given product item category and sorts them by price.",
                "maskable": true
            },
            "getBandwidthCategories": {
                "name": "getBandwidthCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getComputingCategories": {
                "name": "getComputingCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "doc": "This method returns a collection of computing categories. These categories are also top level items in a service offering. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "resetCache",
                        "type": "boolean",
                        "doc": "Reset the cached categories",
                        "defaultValue": false
                    }
                ]
            },
            "getCustomUsageRatesCategories": {
                "name": "getCustomUsageRatesCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "resetCache",
                        "type": "boolean",
                        "doc": "Reset the cached categories",
                        "defaultValue": false
                    }
                ]
            },
            "getExternalResourceCategories": {
                "name": "getExternalResourceCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Item_Category",
                "doc": "Each product item price must be tied to a category for it to be sold. These categories describe how a particular product item is sold. For example, the 250GB hard drive can be sold as disk0, disk1, ... disk11. There are different prices for this product item depending on which category it is. This keeps down the number of products in total. ",
                "filterable": true,
                "maskable": true
            },
            "getObjectStorageCategories": {
                "name": "getObjectStorageCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "resetCache",
                        "type": "boolean",
                        "doc": "Reset the cached categories",
                        "defaultValue": false
                    }
                ]
            },
            "getSoftwareCategories": {
                "name": "getSoftwareCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getSubnetCategories": {
                "name": "getSubnetCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "doc": "This method returns a list of subnet categories.",
                "static": true,
                "maskable": true
            },
            "getTopLevelCategories": {
                "name": "getTopLevelCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "doc": "This method returns a collection of computing categories. These categories are also top level items in a service offering. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "resetCache",
                        "type": "boolean",
                        "doc": "Reset the cached categories",
                        "defaultValue": false
                    }
                ]
            },
            "getValidCancelableServiceItemCategories": {
                "name": "getValidCancelableServiceItemCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "doc": "This method returns service product categories that can be canceled via API.  You can use these categories to find the billing items you wish to cancel. ",
                "static": true,
                "maskable": true
            },
            "getVlanCategories": {
                "name": "getVlanCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "static": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Product_Item_Category data type contains general category information for prices. ",
        "properties": {
            "billingItems": {
                "name": "billingItems",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The billing items associated with an account that share a category code with an item category's category code."
            },
            "group": {
                "name": "group",
                "type": "SoftLayer_Product_Item_Category_Group",
                "form": "relational",
                "doc": "This invoice item's \"item category group\". "
            },
            "groups": {
                "name": "groups",
                "type": "SoftLayer_Product_Package_Item_Category_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of service offering category groups. Each group contains a collection of items associated with this category."
            },
            "orderOptions": {
                "name": "orderOptions",
                "type": "SoftLayer_Product_Item_Category_Order_Option_Type",
                "form": "relational",
                "typeArray": true,
                "doc": "Any unique options associated with an item category."
            },
            "packageConfigurations": {
                "name": "packageConfigurations",
                "type": "SoftLayer_Product_Package_Order_Configuration",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of configuration available in this category.'"
            },
            "presetConfigurations": {
                "name": "presetConfigurations",
                "type": "SoftLayer_Product_Package_Preset_Configuration",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of preset configurations this category is used in.'"
            },
            "questionReferences": {
                "name": "questionReferences",
                "type": "SoftLayer_Product_Item_Category_Question_Xref",
                "form": "relational",
                "typeArray": true,
                "doc": "The question references that are associated with an item category."
            },
            "questions": {
                "name": "questions",
                "type": "SoftLayer_Product_Item_Category_Question",
                "form": "relational",
                "typeArray": true,
                "doc": "The questions that are associated with an item category."
            },
            "categoryCode": {
                "name": "categoryCode",
                "type": "string",
                "form": "local",
                "doc": "The code used to identify this category."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "identifier for category."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly, descriptive name of the category as seen on the order forms and on invoices."
            },
            "quantityLimit": {
                "name": "quantityLimit",
                "type": "int",
                "form": "local",
                "doc": "Quantity that can be ordered. If 0, it will inherit the quantity from the server quantity ordered. Otherwise it can be specified with the order separately"
            },
            "sortOrder": {
                "name": "sortOrder",
                "type": "int",
                "form": "local",
                "doc": "The sort order of the category. It may be used to affect the order in which the category may appear in lists (on order forms and invoices)."
            },
            "billingItemCount": {
                "name": "billingItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the billing items associated with an account that share a category code with an item category's category code."
            },
            "groupCount": {
                "name": "groupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of service offering category groups. Each group contains a collection of items associated with this category."
            },
            "orderOptionCount": {
                "name": "orderOptionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of any unique options associated with an item category."
            },
            "packageConfigurationCount": {
                "name": "packageConfigurationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of configuration available in this category.'"
            },
            "presetConfigurationCount": {
                "name": "presetConfigurationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of preset configurations this category is used in.'"
            },
            "questionCount": {
                "name": "questionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the questions that are associated with an item category."
            },
            "questionReferenceCount": {
                "name": "questionReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the question references that are associated with an item category."
            }
        }
    },
    "SoftLayer_Product_Item_Category_Group": {
        "name": "SoftLayer_Product_Item_Category_Group",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Retrieve the category group information for a product item.",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Item_Category_Group",
                "doc": "Each product item category must be tied to a category group. These category groups describe how a particular product item category is categorized. For example, the disk0, disk1, ... disk11 can be categorized as Server and Attached Services. There are different groups for each of this product item category depending on the function of the item product in the subject category. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Product_Item_Category_Group data type contains general category group information. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "identifier for category group."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly, descriptive name of the category group as seen on the order forms and on invoices."
            }
        }
    },
    "SoftLayer_Product_Item_Category_Order_Option_Type": {
        "name": "SoftLayer_Product_Item_Category_Order_Option_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Category_Order_Option_Type data type contains options that can be applied to orders for prices. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "An item category order type's description."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An item category order type's unique identifier."
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "A simple description for an item category order type."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "An item category order type's name."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value of the item category type's option."
            }
        }
    },
    "SoftLayer_Product_Item_Category_Question": {
        "name": "SoftLayer_Product_Item_Category_Question",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Category_Question data type represents a single question to be answered by an end user.  The question may or may not be required which can be located by looking at the 'required' property on the item category references.  The answerValueExpression property is a regular expression that is used to validate the answer to the question.  The description and valueExample properties can be used to get an idea of the type of answer that should be provided. ",
        "properties": {
            "fieldType": {
                "name": "fieldType",
                "type": "SoftLayer_Product_Item_Category_Question_Field_Type",
                "form": "relational",
                "doc": "The type of field that should be used in an HTML form to accept an answer from an end user."
            },
            "itemCategoryReferences": {
                "name": "itemCategoryReferences",
                "type": "SoftLayer_Product_Item_Category_Question_Xref",
                "form": "relational",
                "typeArray": true,
                "doc": "The link between an item category and an item category question."
            },
            "answerValueExpression": {
                "name": "answerValueExpression",
                "type": "string",
                "form": "local",
                "doc": "The type of answer expected."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description for the question."
            },
            "fieldTypeId": {
                "name": "fieldTypeId",
                "type": "int",
                "form": "local",
                "doc": "The type of field to use."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "identifier for category."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The keyname for the question."
            },
            "question": {
                "name": "question",
                "type": "string",
                "form": "local",
                "doc": "The question for the category."
            },
            "valueExample": {
                "name": "valueExample",
                "type": "string",
                "form": "local",
                "doc": "An example and/or explanation of what the answer for the question is expected to look like."
            },
            "itemCategoryReferenceCount": {
                "name": "itemCategoryReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the link between an item category and an item category question."
            }
        }
    },
    "SoftLayer_Product_Item_Category_Question_Field_Type": {
        "name": "SoftLayer_Product_Item_Category_Question_Field_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Category_Question_Field_Type data type represents the recommended type of field that should be rendered on an HTML form. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Identifier for the question type."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Keyname for the question field type."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Short name for the question field type."
            }
        }
    },
    "SoftLayer_Product_Item_Category_Question_Xref": {
        "name": "SoftLayer_Product_Item_Category_Question_Xref",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Category_Question_Xref data type represents a link between an item category and an item category question.  It also contains a 'required' field that designates if the question is required to be answered for the given item category. ",
        "properties": {
            "itemCategory": {
                "name": "itemCategory",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "doc": "The product item category that this reference points to."
            },
            "question": {
                "name": "question",
                "type": "SoftLayer_Product_Item_Category_Question",
                "form": "relational",
                "doc": "The item category question that this reference points to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Identifier for category question xref record."
            },
            "itemCategoryId": {
                "name": "itemCategoryId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for item category."
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for the question."
            },
            "questionId": {
                "name": "questionId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for the question."
            },
            "required": {
                "name": "required",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate whether an answer is required for the question.."
            }
        }
    },
    "SoftLayer_Product_Item_Overage_Price": {
        "name": "SoftLayer_Product_Item_Overage_Price",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "defaultOverageItem": {
                "name": "defaultOverageItem",
                "type": "SoftLayer_Product_Item",
                "form": "relational"
            },
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Product_Item_Policy_Assignment": {
        "name": "SoftLayer_Product_Item_Policy_Assignment",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Serves as a data source for additional information about the policy to product assignment.",
        "methods": {
            "acceptFromTicket": {
                "name": "acceptFromTicket",
                "type": "boolean",
                "doc": "Register the acceptance of the associated policy to product assignment, and link the created record to a Ticket. ",
                "parameters": [
                    {
                        "name": "ticketId",
                        "type": "int"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Item_Policy_Assignment",
                "filterable": true,
                "maskable": true
            },
            "getPolicyDocumentContents": {
                "name": "getPolicyDocumentContents",
                "type": "base64Binary",
                "doc": "Retrieve the binary contents of the associated PDF policy document. "
            }
        },
        "typeDoc": "Represents the assignment of a policy to a product. The existence of a record means that the associated product is subject to the terms defined in the document content of the policy. ",
        "properties": {
            "policyName": {
                "name": "policyName",
                "type": "string",
                "form": "relational",
                "doc": "The name of the assigned policy."
            },
            "product": {
                "name": "product",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The [[SoftLayer_Product_Item]] for this policy assignment."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "productId": {
                "name": "productId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Product_Item_Price": {
        "name": "SoftLayer_Product_Item_Price",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Product_Item_Price contains general information relating to a single SoftLayer product item price. You can find out what packages each price is in as well as which category under which this price is sold. All prices are returned in floating point values measured in US Dollars ($USD). ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Item_Price",
                "filterable": true,
                "maskable": true
            },
            "getUsageRatePrices": {
                "name": "getUsageRatePrices",
                "type": "SoftLayer_Product_Item_Price",
                "typeArray": true,
                "doc": "Returns a collection of rate-based [[SoftLayer_Product_Item_Price]] objects associated with the [[SoftLayer_Product_Item]] objects and the [[SoftLayer_Location]] specified. The location is required to get the appropriate rate-based prices because the usage rates may vary from datacenter to datacenter. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "location",
                        "type": "SoftLayer_Location",
                        "doc": "The [[SoftLayer_Location]] object"
                    },
                    {
                        "name": "items",
                        "type": "SoftLayer_Product_Item",
                        "typeArray": true,
                        "doc": "Array of [[SoftLayer_Product_Item]] objects used to obtain rate-based prices"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Product_Item_Price data type contains general information relating to a single SoftLayer product item price. You can find out what packages each price is in as well as which category under which this price is sold. All prices are returned in floating point values measured in US Dollars ($USD). ",
        "properties": {
            "accountRestrictions": {
                "name": "accountRestrictions",
                "type": "SoftLayer_Product_Item_Price_Account_Restriction",
                "form": "relational",
                "typeArray": true,
                "doc": "The account that the item price is restricted to."
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Product_Item_Price_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "bareMetalReservedCapacityFlag": {
                "name": "bareMetalReservedCapacityFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Signifies pricing that is only available on a bare metal reserved capacity order."
            },
            "bigDataOsJournalDiskFlag": {
                "name": "bigDataOsJournalDiskFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether the price is for Big Data OS/Journal disks only. (Deprecated)"
            },
            "bundleReferences": {
                "name": "bundleReferences",
                "type": "SoftLayer_Product_Item_Bundles",
                "form": "relational",
                "typeArray": true,
                "doc": "cross reference for bundles"
            },
            "capacityRestrictionMaximum": {
                "name": "capacityRestrictionMaximum",
                "type": "string",
                "form": "relational",
                "doc": "The maximum capacity value for which this price is suitable."
            },
            "capacityRestrictionMinimum": {
                "name": "capacityRestrictionMinimum",
                "type": "string",
                "form": "relational",
                "doc": "The minimum capacity value for which this price is suitable."
            },
            "capacityRestrictionType": {
                "name": "capacityRestrictionType",
                "type": "string",
                "form": "relational",
                "doc": "The type of capacity restriction by which this price must abide."
            },
            "categories": {
                "name": "categories",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "typeArray": true,
                "doc": "All categories which this item is a member."
            },
            "dedicatedHostInstanceFlag": {
                "name": "dedicatedHostInstanceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Signifies pricing that is only available on a dedicated host virtual server order."
            },
            "definedSoftwareLicenseFlag": {
                "name": "definedSoftwareLicenseFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether this price defines a software license for its product item."
            },
            "eligibilityStrategy": {
                "name": "eligibilityStrategy",
                "type": "string",
                "form": "relational",
                "doc": "Eligibility strategy to assess if a customer can order using this price."
            },
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The product item a price is tied to."
            },
            "orderPremiums": {
                "name": "orderPremiums",
                "type": "SoftLayer_Product_Item_Price_Premium",
                "form": "relational",
                "typeArray": true
            },
            "packageReferences": {
                "name": "packageReferences",
                "type": "SoftLayer_Product_Package_Item_Prices",
                "form": "relational",
                "typeArray": true,
                "doc": "cross reference for packages"
            },
            "packages": {
                "name": "packages",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "typeArray": true,
                "doc": "A price's packages under which this item is sold."
            },
            "presetConfigurations": {
                "name": "presetConfigurations",
                "type": "SoftLayer_Product_Package_Preset_Configuration",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of preset configurations this price is used in.'"
            },
            "priceType": {
                "name": "priceType",
                "type": "string",
                "form": "relational",
                "doc": "The type keyname of this price which can be STANDARD, TIERED, or TERM."
            },
            "pricingLocationGroup": {
                "name": "pricingLocationGroup",
                "type": "SoftLayer_Location_Group_Pricing",
                "form": "relational",
                "doc": "The pricing location group that this price is applicable for. Prices that have a pricing location group will only be available for ordering with the locations specified on the location group."
            },
            "requiredCoreCount": {
                "name": "requiredCoreCount",
                "type": "int",
                "form": "relational",
                "doc": "The number of server cores required to order this item. This is deprecated. Use [[SoftLayer_Product_Item_Price/getCapacityRestrictionMinimum|getCapacityRestrictionMinimum]] and [[SoftLayer_Product_Item_Price/getCapacityRestrictionMaximum|getCapacityRestrictionMaximum]]"
            },
            "reservedCapacityInstanceFlag": {
                "name": "reservedCapacityInstanceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Signifies pricing that is only available on a reserved capacity virtual server order."
            },
            "currentPriceFlag": {
                "name": "currentPriceFlag",
                "type": "boolean",
                "form": "local",
                "doc": "This flag is used by the getUpgradeItemPrices methods available on various resources to indicate if a product price is used for the current billing item. "
            },
            "hourlyRecurringFee": {
                "name": "hourlyRecurringFee",
                "type": "decimal",
                "form": "local",
                "doc": "The hourly price for this item, should this item be part of an hourly pricing package. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a Product Item Price."
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for a product Item"
            },
            "laborFee": {
                "name": "laborFee",
                "type": "decimal",
                "form": "local",
                "doc": "The labor fee for a product item price."
            },
            "locationGroupId": {
                "name": "locationGroupId",
                "type": "int",
                "form": "local",
                "doc": "The id of the [[SoftLayer_Location_Group_Pricing]] that this price is part of. If set to null, the price is considered a standard price, which can be used with any location when ordering. \n\nDuring order [[SoftLayer_Product_Order/verifyOrder|verification]] and [[SoftLayer_Product_Order/placeOrder|placement]], if a standard price is used, that price may be replaced with a location based price, which does not have this property set to null. The location based price must be part of a [[SoftLayer_Location_Group_Pricing]] that has the location being ordered in order for this to happen. "
            },
            "onSaleFlag": {
                "name": "onSaleFlag",
                "type": "boolean",
                "form": "local",
                "doc": "On sale flag."
            },
            "oneTimeFee": {
                "name": "oneTimeFee",
                "type": "decimal",
                "form": "local",
                "doc": "The one time fee for a product item price."
            },
            "oneTimeFeeTax": {
                "name": "oneTimeFeeTax",
                "type": "decimal",
                "form": "local",
                "doc": "A price's total tax amount of the one time fees (oneTimeFee, laborFee, and setupFee). This is only populated after the order is verified via SoftLayer_Product_Order::verifyOrder()"
            },
            "orderOptions": {
                "name": "orderOptions",
                "type": "SoftLayer_Product_Item_Category_Order_Option_Type",
                "form": "local",
                "typeArray": true,
                "doc": "Order options for the category that this price is associated with. "
            },
            "proratedRecurringFee": {
                "name": "proratedRecurringFee",
                "type": "decimal",
                "form": "local",
                "doc": "A recurring fee is a fee that happens every billing period. This fee is represented as a floating point decimal in US dollars ($USD)."
            },
            "proratedRecurringFeeTax": {
                "name": "proratedRecurringFeeTax",
                "type": "decimal",
                "form": "local",
                "doc": "A price's tax amount of the recurring fee. This is only populated after the order is verified via SoftLayer_Product_Order::verifyOrder()"
            },
            "quantity": {
                "name": "quantity",
                "type": "int",
                "form": "local"
            },
            "recurringFee": {
                "name": "recurringFee",
                "type": "decimal",
                "form": "local",
                "doc": "A recurring fee is a fee that happens every billing period. This fee is represented as a floating point decimal in US dollars ($USD)."
            },
            "recurringFeeTax": {
                "name": "recurringFeeTax",
                "type": "decimal",
                "form": "local",
                "doc": "A price's tax amount of the recurring fee. This is only populated after the order is verified via SoftLayer_Product_Order::verifyOrder()"
            },
            "setupFee": {
                "name": "setupFee",
                "type": "decimal",
                "form": "local",
                "doc": "The setup fee associated with a product item price."
            },
            "sort": {
                "name": "sort",
                "type": "int",
                "form": "local",
                "doc": "Used for ordering items on sales orders."
            },
            "termLength": {
                "name": "termLength",
                "type": "int",
                "form": "local",
                "doc": "The number of months a term lasts for a term-based price"
            },
            "tierMinimumThreshold": {
                "name": "tierMinimumThreshold",
                "type": "int",
                "form": "local",
                "doc": "The minimum threshold for which this tiered usage price begins to apply.  The unit for the price is defined by the item to which this belongs, see [[SoftLayer_Product_Item::$units]]. "
            },
            "usageRate": {
                "name": "usageRate",
                "type": "decimal",
                "form": "local",
                "doc": "The rate for a usage based item"
            },
            "accountRestrictionCount": {
                "name": "accountRestrictionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the account that the item price is restricted to."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "bundleReferenceCount": {
                "name": "bundleReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of cross reference for bundles"
            },
            "categoryCount": {
                "name": "categoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all categories which this item is a member."
            },
            "orderPremiumCount": {
                "name": "orderPremiumCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "packageCount": {
                "name": "packageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a price's packages under which this item is sold."
            },
            "packageReferenceCount": {
                "name": "packageReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of cross reference for packages"
            },
            "presetConfigurationCount": {
                "name": "presetConfigurationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of preset configurations this price is used in.'"
            }
        }
    },
    "SoftLayer_Product_Item_Price_Account_Restriction": {
        "name": "SoftLayer_Product_Item_Price_Account_Restriction",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Price data type gives more information about the item price restrictions.  An item price may be restricted to one or more accounts. If the item price is restricted to an account, only that account will see the restriction details. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account the item price is restricted to."
            },
            "itemPrice": {
                "name": "itemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "doc": "The item price that has the account restriction."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account id for the item price account restriction."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for the item price account restriction."
            },
            "itemPriceId": {
                "name": "itemPriceId",
                "type": "int",
                "form": "local",
                "doc": "The item price id for the item price account restriction."
            }
        }
    },
    "SoftLayer_Product_Item_Price_Attribute": {
        "name": "SoftLayer_Product_Item_Price_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "itemPrice": {
                "name": "itemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational"
            },
            "itemPriceAttributeType": {
                "name": "itemPriceAttributeType",
                "type": "SoftLayer_Product_Item_Price_Attribute_Type",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "itemPriceAttributeTypeId": {
                "name": "itemPriceAttributeTypeId",
                "type": "int",
                "form": "local"
            },
            "itemPriceId": {
                "name": "itemPriceId",
                "type": "int",
                "form": "local"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Product_Item_Price_Attribute_Type": {
        "name": "SoftLayer_Product_Item_Price_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Product_Item_Price_Premium": {
        "name": "SoftLayer_Product_Item_Price_Premium",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Item_Price_Premium",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "itemPrice": {
                "name": "itemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational"
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational"
            },
            "hourlyModifier": {
                "name": "hourlyModifier",
                "type": "decimal",
                "form": "local"
            },
            "itemPriceId": {
                "name": "itemPriceId",
                "type": "int",
                "form": "local"
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local"
            },
            "monthlyModifier": {
                "name": "monthlyModifier",
                "type": "decimal",
                "form": "local"
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Product_Item_Requirement": {
        "name": "SoftLayer_Product_Item_Requirement",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Requirement data type contains information relating to what requirements, if any, exist for an item. The requiredItemId local property is the item id that is required. ",
        "properties": {
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "Item requirement applies to."
            },
            "product": {
                "name": "product",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The product containing the requirement."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Identifier for this record."
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "This is the id of the item affected by the requirement."
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "This is a custom message to display to the user when this requirement shortfall arises."
            },
            "requiredItemId": {
                "name": "requiredItemId",
                "type": "int",
                "form": "local",
                "doc": "This is the id of the item required."
            }
        }
    },
    "SoftLayer_Product_Item_Resource_Conflict": {
        "name": "SoftLayer_Product_Item_Resource_Conflict",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational"
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational"
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the item that contains the conflict."
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "An optional conflict message."
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the service offering that is associated with the conflict."
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the conflicting type."
            }
        }
    },
    "SoftLayer_Product_Item_Resource_Conflict_Item": {
        "name": "SoftLayer_Product_Item_Resource_Conflict_Item",
        "base": "SoftLayer_Product_Item_Resource_Conflict",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "A product item that conflicts with another product item."
            }
        }
    },
    "SoftLayer_Product_Item_Resource_Conflict_Item_Category": {
        "name": "SoftLayer_Product_Item_Resource_Conflict_Item_Category",
        "base": "SoftLayer_Product_Item_Resource_Conflict",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "doc": "An item category that conflicts with a product item."
            }
        }
    },
    "SoftLayer_Product_Item_Resource_Conflict_Location": {
        "name": "SoftLayer_Product_Item_Resource_Conflict_Location",
        "base": "SoftLayer_Product_Item_Resource_Conflict",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "A location that conflicts with a product item."
            }
        }
    },
    "SoftLayer_Product_Item_Rule": {
        "name": "SoftLayer_Product_Item_Rule",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The item rule data type represents a rule that must be followed when the item assigned to the rule is ordered. The type and operation applied to the resources of the rule will affect how the rule is checked during ordering. ",
        "properties": {
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The product item that a rule applies to."
            },
            "itemCategoryResources": {
                "name": "itemCategoryResources",
                "type": "SoftLayer_Product_Item_Rule_Resource_Item_Category",
                "form": "relational",
                "typeArray": true
            },
            "itemResources": {
                "name": "itemResources",
                "type": "SoftLayer_Product_Item_Rule_Resource_Item",
                "form": "relational",
                "typeArray": true
            },
            "locationResources": {
                "name": "locationResources",
                "type": "SoftLayer_Product_Item_Rule_Resource_Location",
                "form": "relational",
                "typeArray": true
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "doc": "The package that a rule is applicable to when ordering. If no package exists, the rule applies to any package."
            },
            "permissionResources": {
                "name": "permissionResources",
                "type": "SoftLayer_Product_Item_Rule_Resource_Permission",
                "form": "relational",
                "typeArray": true
            },
            "resources": {
                "name": "resources",
                "type": "SoftLayer_Product_Item_Rule_Resource",
                "form": "relational",
                "typeArray": true,
                "doc": "Resources for this rule that are validated when ordering."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Product_Item_Rule_Type",
                "form": "relational",
                "doc": "The type a rule is. The type affects how the rule is validated when ordering."
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the item that the rule applies to."
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "An optional message shown for when the rule is found to be invalid when ordering."
            },
            "operation": {
                "name": "operation",
                "type": "string",
                "form": "local"
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the service offering that is associated with the rule."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the type of resource rule."
            },
            "itemCategoryResourceCount": {
                "name": "itemCategoryResourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "itemResourceCount": {
                "name": "itemResourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "locationResourceCount": {
                "name": "locationResourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "permissionResourceCount": {
                "name": "permissionResourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "resourceCount": {
                "name": "resourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of resources for this rule that are validated when ordering."
            }
        }
    },
    "SoftLayer_Product_Item_Rule_Resource": {
        "name": "SoftLayer_Product_Item_Rule_Resource",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The item rule resource data type represents a resource that is part of an item rule. The item rule resource is used when its item rule is checked on an order. ",
        "properties": {
            "rule": {
                "name": "rule",
                "type": "SoftLayer_Product_Item_Rule",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the resource."
            },
            "ruleId": {
                "name": "ruleId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the rule this resource is included in."
            }
        }
    },
    "SoftLayer_Product_Item_Rule_Resource_Item": {
        "name": "SoftLayer_Product_Item_Rule_Resource_Item",
        "base": "SoftLayer_Product_Item_Rule_Resource",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "A product item that the associated rule applies to."
            }
        }
    },
    "SoftLayer_Product_Item_Rule_Resource_Item_Category": {
        "name": "SoftLayer_Product_Item_Rule_Resource_Item_Category",
        "base": "SoftLayer_Product_Item_Rule_Resource",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "doc": "An item category that the associated rule applies to."
            }
        }
    },
    "SoftLayer_Product_Item_Rule_Resource_Location": {
        "name": "SoftLayer_Product_Item_Rule_Resource_Location",
        "base": "SoftLayer_Product_Item_Rule_Resource",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "A location that the associated rule applies to."
            }
        }
    },
    "SoftLayer_Product_Item_Rule_Resource_Permission": {
        "name": "SoftLayer_Product_Item_Rule_Resource_Permission",
        "base": "SoftLayer_Product_Item_Rule_Resource",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_User_Customer_CustomerPermission_Permission",
                "form": "relational",
                "doc": "A user permission that the associated rule applies to."
            }
        }
    },
    "SoftLayer_Product_Item_Rule_Type": {
        "name": "SoftLayer_Product_Item_Rule_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The item rule type data type represents the type of an item rule. ",
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The identifier for the item rule type."
            }
        }
    },
    "SoftLayer_Product_Item_Server_Group": {
        "name": "SoftLayer_Product_Item_Server_Group",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Server_Group data type details the type of compute service a [[SoftLayer_Product_Item (type)|SoftLayer_Product_Item]] or [[SoftLayer_Product_Package_Preset (type)|SoftLayer_Product_Package_Preset]] belongs to. ",
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The server group's string identifier"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The server group's friendly name"
            }
        }
    },
    "SoftLayer_Product_Item_Tax_Category": {
        "name": "SoftLayer_Product_Item_Tax_Category",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Item_Tax_Category data type contains the tax categories that are associated with products. ",
        "properties": {
            "items": {
                "name": "items",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier for each tax category."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The key name of the tax category."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the tax category."
            },
            "statusFlag": {
                "name": "statusFlag",
                "type": "int",
                "form": "local",
                "doc": "The status of the tax category."
            },
            "itemCount": {
                "name": "itemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Product_Order": {
        "name": "SoftLayer_Product_Order",
        "base": "SoftLayer_Entity",
        "serviceDoc": "All orders (servers, virtual servers and services) pass through the [[SoftLayer_Product_Order]] service. This service provides the entry point for placing orders and quotes with SoftLayer. To place orders using these services, you must provide the appropriate container type as defined by [[SoftLayer_Container_Product_Order]]. For server orders, you would use [[SoftLayer_Container_Product_Order_Hardware_Server]]. For virtual server orders, you would use [[SoftLayer_Container_Product_Order_Virtual_Guest]]. For additional service orders, it will depend on the additional service (e.g., network attached storage, object storage) being purchased. See the data types documentation to get a list of all the available container types beginning with `SoftLayer_Container_Product_Order_*`. \n\nThere are several main entry points associated with ordering: \n\n- [[SoftLayer_Product_Order/placeOrder]] Order servers and services. Your credit card or PayPal account will get charged when successfully placed. \n\n- [[SoftLayer_Product_Order/verifyOrder]] Run verification on your order before it's actually placed to get additional information, like your total monthly or hourly recurring charges. You may also call this service to help ensure that your call to [[SoftLayer_Product_Order/placeOrder]] will succeed. **This service is called internally, so it is not required to verify before you call `placeOrder`.** No credit card or PayPal charges result from this call. \n\n- [[SoftLayer_Product_Order/placeQuote]] Create a quote only. Subsequent orders may be placed from this quote. See [[SoftLayer_Billing_Order_Quote/placeOrder]] for details on how to order from a quote. \n\n- [[SoftLayer_Product_Order/getVlans]] Get a list of available VLANs that can be supplied when placing an order. \n\nWhile this service provides detailed customization for ordering, some customers may find the simplified ordering system sufficient for their needs. For more information, see the following: \n\n- [[SoftLayer_Virtual_Guest/createObject]] - Simplified virtual server ordering \n\n- [[SoftLayer_Hardware/createObject]] - Simplified bare metal server ordering ",
        "methods": {
            "checkItemAvailability": {
                "name": "checkItemAvailability",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "itemPrices",
                        "type": "SoftLayer_Product_Item_Price",
                        "typeArray": true,
                        "doc": "Item prices to be checked."
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "The account number for which to check for a restricted item price.",
                        "defaultValue": null
                    },
                    {
                        "name": "availabilityTypeKeyNames",
                        "type": "string",
                        "typeArray": true,
                        "doc": "An array of keynames for which to check for item availability types.",
                        "defaultValue": []
                    }
                ]
            },
            "checkItemAvailabilityForImageTemplate": {
                "name": "checkItemAvailabilityForImageTemplate",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "imageTemplateId",
                        "type": "int",
                        "doc": "The image template id for which to check the availability of items."
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "The account number for which to check for a restricted item price."
                    },
                    {
                        "name": "packageId",
                        "type": "int",
                        "doc": "The package id of the package to which the template will be deployed."
                    },
                    {
                        "name": "availabilityTypeKeyNames",
                        "type": "string",
                        "typeArray": true,
                        "doc": "An array of keynames for which to check for item availability types.",
                        "defaultValue": []
                    }
                ]
            },
            "checkItemConflicts": {
                "name": "checkItemConflicts",
                "type": "boolean",
                "doc": "Check order items for conflicts",
                "static": true,
                "parameters": [
                    {
                        "name": "itemPrices",
                        "type": "SoftLayer_Product_Item_Price",
                        "typeArray": true,
                        "doc": "Item prices to be ordered."
                    }
                ]
            },
            "getExternalPaymentAuthorizationReceipt": {
                "name": "getExternalPaymentAuthorizationReceipt",
                "type": "SoftLayer_Container_Product_Order_Receipt",
                "doc": "This method simply returns a receipt for a previously finalized payment authorization from PayPal. The response matches the response returned from placeOrder when the order was originally placed with PayPal as the payment type. ",
                "static": true,
                "parameters": [
                    {
                        "name": "token",
                        "type": "string",
                        "doc": "The token from PayPal"
                    },
                    {
                        "name": "payerId",
                        "type": "string",
                        "doc": "The PayerID from PayPal"
                    }
                ]
            },
            "getNetworks": {
                "name": "getNetworks",
                "type": "SoftLayer_Container_Product_Order_Network",
                "typeArray": true,
                "doc": "This method is deprecated and always returns nothing. ",
                "static": true,
                "parameters": [
                    {
                        "name": "locationId",
                        "type": "int",
                        "defaultValue": null
                    },
                    {
                        "name": "packageId",
                        "type": "int",
                        "defaultValue": null
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "defaultValue": null
                    }
                ]
            },
            "getResellerOrder": {
                "name": "getResellerOrder",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "When the account is on an external reseller brand, this service will provide a SoftLayer_Product_Order with the the pricing adjusted by the external reseller. ",
                "static": true,
                "parameters": [
                    {
                        "name": "orderContainer",
                        "type": "SoftLayer_Container_Product_Order"
                    }
                ]
            },
            "getTaxCalculationResult": {
                "name": "getTaxCalculationResult",
                "type": "SoftLayer_Container_Tax_Cache",
                "doc": "Sometimes taxes cannot be calculated immediately, so we start the calculations and let them run in the background. This method will return the current progress and information related to a specific tax calculation, which allows real-time progress updates on tax calculations. ",
                "static": true,
                "parameters": [
                    {
                        "name": "orderHash",
                        "type": "string",
                        "doc": "<<< EOT"
                    }
                ]
            },
            "getVlans": {
                "name": "getVlans",
                "type": "SoftLayer_Container_Product_Order_Network_Vlans",
                "doc": "Return collections of public and private VLANs that are available during ordering. If a location ID is provided, the resulting VLANs will be limited to that location. If the Virtual Server package id (46) is provided, the VLANs will be narrowed down to those locations that contain routers with the VIRTUAL_IMAGE_STORE data attribute. \n\nFor the selectedItems parameter, this is a comma-separated string of category codes and item values. For example: \n\n- `port_speed=10,guest_disk0=LOCAL_DISK` \n\n- `port_speed=100,disk0=SAN_DISK` \n\n- `port_speed=100,private_network_only=1,guest_disk0=LOCAL_DISK` \n\nThis parameter is used to narrow the available results down even further. It's not necessary when selecting a VLAN, but it will help avoid errors when attempting to place an order. The only acceptable category codes are: \n\n- `port_speed` \n\n- A disk category, such as `guest_disk0` or `disk0`, with values of either `LOCAL_DISK` or `SAN_DISK` \n\n- `private_network_only` \n\n- `dual_path_network` \n\nFor most customers, it's sufficient to only provide the first 2 parameters. ",
                "static": true,
                "parameters": [
                    {
                        "name": "locationId",
                        "type": "int",
                        "doc": "Narrow the VLANs down by this datacenter. This value should match the datacenter selected for the order container.",
                        "defaultValue": null
                    },
                    {
                        "name": "packageId",
                        "type": "int",
                        "doc": "Optional, but recommended package id for the order container.",
                        "defaultValue": null
                    },
                    {
                        "name": "selectedItems",
                        "type": "string",
                        "doc": "A string of existing items selected on the order - see the method overview for more details.",
                        "defaultValue": null
                    },
                    {
                        "name": "vlanIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "If provided, the results will be limited to these VLANs.",
                        "defaultValue": []
                    },
                    {
                        "name": "subnetIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "If provided, the results will be limited to VLANs that contain these subnets.",
                        "defaultValue": []
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "For authenticated users, this optional parameter will be ignored.",
                        "defaultValue": null
                    },
                    {
                        "name": "orderContainer",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "Optionally filter VLANs relating to the <code>prices</code> specified on the order container.",
                        "defaultValue": null
                    },
                    {
                        "name": "hardwareFirewallOrderedFlag",
                        "type": "boolean",
                        "doc": "Provided when ordering a hardware firewall, will cause results to exclude inside VLANs and VLANs w/ dedicated firewall attached",
                        "defaultValue": false
                    }
                ]
            },
            "placeOrder": {
                "name": "placeOrder",
                "type": "SoftLayer_Container_Product_Order_Receipt",
                "doc": "\nUse this method to place bare metal server, virtual server and additional service orders with SoftLayer. \nUpon success, your credit card or PayPal account will incur charges for the monthly order total \n(or prorated value if ordered mid billing cycle). If all products on the order are only billed hourly, \nyou will be charged on your billing anniversary date, which occurs monthly on the day you ordered your first \nservice with SoftLayer. For new customers, you are required to provide billing information when you place an order. \nFor existing customers, the credit card on file will be charged. If you're a PayPal customer, a URL will be \nreturned from the call to [[SoftLayer_Product_Order/placeOrder]] which is to be used to finish the authorization \nprocess. This authorization tells PayPal that you indeed want to place an order with SoftLayer. \nFrom PayPal's web site, you will be redirected back to SoftLayer for your order receipt. \n\n\nWhen an order is placed, your order will be in a \"pending approval\" state. When all internal checks pass, \nyour order will be automatically approved. For orders that may need extra attention, a Sales representative \nwill review the order and contact you if necessary. Once the order is approved, your server or service will \nbe provisioned and available to you shortly thereafter. Depending on the type of server or service ordered, \nprovisioning times will vary. \n\n\n## Order Containers\n\n\n\nWhen placing API orders, it's important to order your server and services on the appropriate \n[[SoftLayer_Container_Product_Order]]. Failing to provide the correct container may delay your server or service \nfrom being provisioned in a timely manner. Some common order containers are included below. \n\n\n**Note:** `SoftLayer_Container_Product_Order_` has been removed from the containers in the table below for readability.\n\n\n| Product | Order Container | Package Type |\n| ------- | --------------- | ------------ |\n| Bare metal server by CPU | [[SoftLayer_Container_Product_Order_Hardware_Server]] | BARE_METAL_CPU |\n| Bare metal server by core | [[SoftLayer_Container_Product_Order_Hardware_Server]] | BARE_METAL_CORE |\n| Virtual server | [[SoftLayer_Container_Product_Order_Virtual_Guest]] | VIRTUAL_SERVER_INSTANCE |\n| DNS domain registration | [[SoftLayer_Container_Product_Order_Dns_Domain_Registrationn]] | ADDITIONAL_SERVICES |\n| Local & dedicated load balancers | [[SoftLayer_Container_Product_Order_Network_LoadBalancer]] | ADDITIONAL_SERVICES_LOAD_BALANCER |\n| Content delivery network | [[SoftLayer_Container_Product_Order_Network_ContentDelivery_Account]] | ADDITIONAL_SERVICES_CDN |\n| Content delivery network Addon | [[SoftLayer_Container_Product_Order_Network_ContentDelivery_Account_Addon]] | ADDITIONAL_SERVICES_CDN_ADDON |\n| Hardware & software firewalls | [[SoftLayer_Container_Product_Order_Network_Protection_Firewall]] | ADDITIONAL_SERVICES_FIREWALL |\n| Dedicated firewall | [[SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated]] | ADDITIONAL_SERVICES_FIREWALL |\n| Object storage | [[SoftLayer_Container_Product_Order_Network_Storage_Object]] | ADDITIONAL_SERVICES_OBJECT_STORAGE |\n| Object storage (hub) | [[SoftLayer_Container_Product_Order_Network_Storage_Hub]] | ADDITIONAL_SERVICES_OBJECT_STORAGE |\n| Network attached storage | [[SoftLayer_Container_Product_Order_Network_Storage_Nas]] | ADDITIONAL_SERVICES_NETWORK_ATTACHED_STORAGE |\n| Iscsi storage | [[SoftLayer_Container_Product_Order_Network_Storage_Iscsi]] | ADDITIONAL_SERVICES_ISCSI_STORAGE |\n| Evault | [[SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Vault]] | ADDITIONAL_SERVICES |\n| Evault Plugin | [[SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Plugin]] | ADDITIONAL_SERVICES |\n| Application delivery appliance | [[SoftLayer_Container_Product_Order_Network_Application_Delivery_Controller]] | ADDITIONAL_SERVICES_APPLICATION_DELIVERY_APPLIANCE |\n| Network subnet | [[SoftLayer_Container_Product_Order_Network_Subnet]] | ADDITIONAL_SERVICES |\n| Global IPv4 | [[SoftLayer_Container_Product_Order_Network_Subnet]] | ADDITIONAL_SERVICES_GLOBAL_IP_ADDRESSES |\n| Global IPv6 | [[SoftLayer_Container_Product_Order_Network_Subnet]] | ADDITIONAL_SERVICES_GLOBAL_IP_ADDRESSES |\n| Network VLAN | [[SoftLayer_Container_Product_Order_Network_Vlan]] | ADDITIONAL_SERVICES_NETWORK_VLAN |\n| Portable storage | [[SoftLayer_Container_Product_Order_Virtual_Disk_Image]] | ADDITIONAL_SERVICES_PORTABLE_STORAGE |\n| SSL certificate | [[SoftLayer_Container_Product_Order_Security_Certificate]] | ADDITIONAL_SERVICES_SSL_CERTIFICATE |\n| External authentication | [[SoftLayer_Container_Product_Order_User_Customer_External_Binding]] | ADDITIONAL_SERVICES |\n| Dedicated Host | [[SoftLayer_Container_Product_Order_Virtual_DedicatedHost]] | DEDICATED_HOST |\n\n\n## Server example\n\n\n\nThis example includes a single bare metal server being ordered with monthly billing. \n\n\n**Warning:** the price ids provided below may be outdated or unavailable, so you will need to determine the\n\navailable prices from the bare metal server [[SoftLayer_Product_Package/getAllObjects]], which have a \n[[SoftLayer_Product_Package_Type]] of `BARE_METAL_CPU` or `BARE_METAL_CORE`. You can get a full list of \npackage types with [[SoftLayer_Product_Package_Type/getAllObjects]]. \n\n\n### Bare Metal Ordering\n\n```xml \n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"http://api.service.softlayer.com/soap/v3/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"> \n  <SOAP-ENV:Header> \n    <ns1:authenticate> \n      <username>your username</username> \n      <apiKey>your api key</apiKey> \n    </ns1:authenticate> \n  </SOAP-ENV:Header> \n  <SOAP-ENV:Body> \n    <ns1:placeOrder> \n      <orderData xsi:type=\"ns1:SoftLayer_Container_Product_Order_Hardware_Server\"> \n        <hardware SOAP-ENC:arrayType=\"ns1:SoftLayer_Hardware[1]\" xsi:type=\"ns1:SoftLayer_HardwareArray\"> \n          <item xsi:type=\"ns1:SoftLayer_Hardware\"> \n            <domain xsi:type=\"xsd:string\">example.com</domain> \n            <hostname xsi:type=\"xsd:string\">server1</hostname> \n          </item> \n        </hardware> \n        <location xsi:type=\"xsd:string\">138124</location> \n        <packageId xsi:type=\"xsd:int\">142</packageId> \n        <prices SOAP-ENC:arrayType=\"ns1:SoftLayer_Product_Item_Price[14]\" xsi:type=\"ns1:SoftLayer_Product_Item_PriceArray\"> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">58</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">22337</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">21189</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">876</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">57</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">55</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">21190</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">36381</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">21</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">22013</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">906</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">420</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">418</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">342</id> \n          </item> \n        </prices> \n        <useHourlyPricing xsi:type=\"xsd:boolean\">false</useHourlyPricing> \n      </orderData> \n      <saveAsQuote xsi:nil=\"true\" /> \n    </ns1:placeOrder> \n  </SOAP-ENV:Body> \n</SOAP-ENV:Envelope> \n``` \n\n\n## Virtual server example\n\n\n\nThis example includes 2 identical virtual servers (except for hostname) being ordered for hourly billing. \nIt includes an optional image template id and VLAN data specified on the virtualGuest objects - \n`primaryBackendNetworkComponent` and `primaryNetworkComponent`. \n\n\n**Warning:** the price ids provided below may be outdated or unavailable, so you will need to determine the\n\navailable prices from the virtual server package with [[SoftLayer_Product_Package/getAllObjects]], \nwhich has a [[SoftLayer_Product_Package_Type]] of `VIRTUAL_SERVER_INSTANCE`. \n\n\n#### Virtual Ordering\n\n```xml \n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"http://api.service.softlayer.com/soap/v3/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"> \n  <SOAP-ENV:Header> \n    <ns1:authenticate> \n      <username>your username</username> \n      <apiKey>your api key</apiKey> \n    </ns1:authenticate> \n  </SOAP-ENV:Header> \n  <SOAP-ENV:Body> \n    <ns1:placeOrder> \n      <orderData xsi:type=\"ns1:SoftLayer_Container_Product_Order_Virtual_Guest\"> \n        <imageTemplateId xsi:type=\"xsd:int\">13251</imageTemplateId> \n        <location xsi:type=\"xsd:string\">37473</location> \n        <packageId xsi:type=\"xsd:int\">46</packageId> \n        <prices SOAP-ENC:arrayType=\"ns1:SoftLayer_Product_Item_Price[13]\" xsi:type=\"ns1:SoftLayer_Product_Item_PriceArray\"> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">2159</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">55</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">13754</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">1641</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">905</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">1800</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">58</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">21</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">1645</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">272</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">57</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">418</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">420</id> \n          </item> \n        </prices> \n        <quantity xsi:type=\"xsd:int\">2</quantity> \n        <useHourlyPricing xsi:type=\"xsd:boolean\">true</useHourlyPricing> \n        <virtualGuests SOAP-ENC:arrayType=\"ns1:SoftLayer_Virtual_Guest[1]\" xsi:type=\"ns1:SoftLayer_Virtual_GuestArray\"> \n          <item xsi:type=\"ns1:SoftLayer_Virtual_Guest\"> \n            <domain xsi:type=\"xsd:string\">example.com</domain> \n            <hostname xsi:type=\"xsd:string\">server1</hostname> \n            <primaryBackendNetworkComponent xsi:type=\"ns1:SoftLayer_Virtual_Guest_Network_Component\"> \n              <networkVlan xsi:type=\"ns1:SoftLayer_Network_Vlan\"> \n                <id xsi:type=\"xsd:int\">12345</id> \n              </networkVlan> \n            </primaryBackendNetworkComponent> \n            <primaryNetworkComponent xsi:type=\"ns1:SoftLayer_Virtual_Guest_Network_Component\"> \n              <networkVlan xsi:type=\"ns1:SoftLayer_Network_Vlan\"> \n                <id xsi:type=\"xsd:int\">67890</id> \n              </networkVlan> \n            </primaryNetworkComponent> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Virtual_Guest\"> \n            <domain xsi:type=\"xsd:string\">example.com</domain> \n            <hostname xsi:type=\"xsd:string\">server2</hostname> \n            <primaryBackendNetworkComponent xsi:type=\"ns1:SoftLayer_Virtual_Guest_Network_Component\"> \n              <networkVlan xsi:type=\"ns1:SoftLayer_Network_Vlan\"> \n                <id xsi:type=\"xsd:int\">12345</id> \n              </networkVlan> \n            </primaryBackendNetworkComponent> \n            <primaryNetworkComponent xsi:type=\"ns1:SoftLayer_Virtual_Guest_Network_Component\"> \n              <networkVlan xsi:type=\"ns1:SoftLayer_Network_Vlan\"> \n                <id xsi:type=\"xsd:int\">67890</id> \n              </networkVlan> \n            </primaryNetworkComponent> \n          </item> \n        </virtualGuests> \n      </orderData> \n      <saveAsQuote xsi:nil=\"true\" /> \n    </ns1:placeOrder> \n  </SOAP-ENV:Body> \n</SOAP-ENV:Envelope> \n``` \n\n\n## VLAN example\n\n\n**Warning:** the price ids provided below may be outdated or unavailable, so you will need to determine the\n\navailable prices from the additional services pacakge with [[SoftLayer_Product_Package/getAllObjects]], \nwhich has a [[SoftLayer_Product_Package_Type]] of `ADDITIONAL_SERVICES`. \nYou can get a full list of [[SoftLayer_Product_Package_Type/getAllObjects|]] to find other available additional \nservice packages.<br/><br/> \n\n\n### VLAN Ordering\n\n```xml \n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"http://api.service.softlayer.com/soap/v3/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"> \n  <SOAP-ENV:Header> \n    <ns1:authenticate> \n      <username>your username</username> \n      <apiKey>your api key</apiKey> \n    </ns1:authenticate> \n  </SOAP-ENV:Header> \n  <SOAP-ENV:Body> \n    <ns1:placeOrder> \n      <orderData xsi:type=\"ns1:SoftLayer_Container_Product_Order_Network_Vlan\"> \n        <location xsi:type=\"xsd:string\">154820</location> \n        <packageId xsi:type=\"xsd:int\">0</packageId> \n        <prices SOAP-ENC:arrayType=\"ns1:SoftLayer_Product_Item_Price[2]\" xsi:type=\"ns1:SoftLayer_Product_Item_PriceArray\"> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">2021</id> \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Product_Item_Price\"> \n            <id xsi:type=\"xsd:int\">2018</id> \n          </item> \n        </prices> \n        <useHourlyPricing xsi:type=\"xsd:boolean\">true</useHourlyPricing> \n      </orderData> \n      <saveAsQuote xsi:nil=\"true\" /> \n    </ns1:placeOrder> \n  </SOAP-ENV:Body> \n</SOAP-ENV:Envelope> \n``` \n\n\n## Multiple products example\n\n\n\nThis example includes a combination of the above examples in a single order. Note that all the configuration \noptions for each individual order container are the same as above, except now we encapsulate each one within \nthe `orderContainers` property on the base [[SoftLayer_Container_Product_Order]]. \n\n\n**Warning:** not all products are available to be ordered with other products. For example, since\n\nSSL certificates require validation from a 3rd party, the approval process may take days or even weeks, \nand this would not be acceptable when you need your hourly virtual server right now. To better accommodate \ncustomers, we restrict several products to be ordered individually. \n\n\n### Bare metal server + virtual server + VLAN\n\n\n\n```xml \n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"http://api.service.softlayer.com/soap/v3/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"> \n  <SOAP-ENV:Header> \n    <ns1:authenticate> \n      <username>your username</username> \n      <apiKey>your api key</apiKey> \n    </ns1:authenticate> \n  </SOAP-ENV:Header> \n  <SOAP-ENV:Body> \n    <ns1:placeOrder> \n      <orderData xsi:type=\"ns1:SoftLayer_Container_Product_Order\"> \n        <orderContainers SOAP-ENC:arrayType=\"ns1:SoftLayer_Container_Product_Order[3]\" xsi:type=\"ns1:SoftLayer_Container_Product_OrderArray\"> \n          <item xsi:type=\"ns1:SoftLayer_Container_Product_Order_Hardware_Server\"> \n            ... \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Container_Product_Order_Virtual_Guest\"> \n            ... \n          </item> \n          <item xsi:type=\"ns1:SoftLayer_Container_Product_Order_Network_Vlan\"> \n            ... \n          </item> \n        </orderContainers> \n      </orderData> \n      <saveAsQuote xsi:nil=\"true\" /> \n    </ns1:placeOrder> \n  </SOAP-ENV:Body> \n</SOAP-ENV:Envelope> \n``` \n\n",
                "static": true,
                "parameters": [
                    {
                        "name": "orderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "Details required to order."
                    },
                    {
                        "name": "saveAsQuote",
                        "type": "boolean",
                        "doc": "Set to true if the order data is to be saved as a quote.",
                        "defaultValue": false
                    }
                ]
            },
            "placeQuote": {
                "name": "placeQuote",
                "type": "SoftLayer_Container_Product_Order_Receipt",
                "doc": "Use this method for placing server quotes and additional services quotes. The same applies for this as with verifyOrder. Send in the SoftLayer_Container_Product_Order_Hardware_Server for server quotes. After placing the quote, you must go to this URL to finish the order process. After going to this URL, it will direct you back to a SoftLayer webpage that tells us you have finished the process. After this, it will go to sales for final approval. ",
                "static": true,
                "parameters": [
                    {
                        "name": "orderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "Details required to order."
                    }
                ]
            },
            "processExternalPaymentAuthorization": {
                "name": "processExternalPaymentAuthorization",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "This method simply finalizes an authorization from PayPal. It tells SoftLayer that the customer has completed the PayPal process. This is ONLY needed if you, the customer, have your own API into PayPal and wish to automate authorizations from PayPal and our system. For most, this method will not be needed. Once an order is placed using placeOrder() for PayPal customers, a URL is given back to the customer. In it is the token and PayerID. If you want to systematically pay with PayPal, do so then call this method with the token and PayerID. ",
                "static": true,
                "parameters": [
                    {
                        "name": "token",
                        "type": "string",
                        "doc": "The token from PayPal"
                    },
                    {
                        "name": "payerId",
                        "type": "string",
                        "doc": "The PayerID from PayPal"
                    }
                ]
            },
            "requiredItems": {
                "name": "requiredItems",
                "type": "SoftLayer_Product_Item",
                "typeArray": true,
                "doc": "Get list of items that are required with the item prices provided",
                "static": true,
                "parameters": [
                    {
                        "name": "itemPrices",
                        "type": "SoftLayer_Product_Item_Price",
                        "typeArray": true,
                        "doc": "Item prices to be ordered."
                    }
                ]
            },
            "verifyOrder": {
                "name": "verifyOrder",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "This service is used to verify that an order meets all the necessary requirements to purchase a server, virtual server or service from SoftLayer. It will verify that the products requested do not conflict. For example, you cannot order a Windows firewall with a Linux operating system. It will also check to make sure you have provided all the products that are required for the [[SoftLayer_Product_Package_Order_Configuration]] associated with the [[SoftLayer_Product_Package]] on each of the [[SoftLayer_Container_Product_Order]] specified.<br/><br/> \n\nThis service returns the same container that was provided, but with additional information that can be used for debugging or validation. It will also contain pricing information (prorated if applicable) for each of the products on the order. If an exception occurs during verification, a container with the <code>SoftLayer_Exception_Order</code> exception type will be specified in the result.<br/><br/> \n\n<code>verifyOrder</code> accepts the same [[SoftLayer_Container_Product_Order]] as <code>placeOrder</code>, so see [[SoftLayer_Product_Order/placeOrder]] for more details. \n\n",
                "static": true,
                "parameters": [
                    {
                        "name": "orderData",
                        "type": "SoftLayer_Container_Product_Order",
                        "doc": "Details required to order."
                    }
                ]
            }
        }
    },
    "SoftLayer_Product_Package": {
        "name": "SoftLayer_Product_Package",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every SoftLayer_Product_Package contains information related products and services that SoftLayer sells. The configuration of this package reveals which categories are required to place an order for this package. Every package has items, item prices, locations, regions, and a configuration. This service is the starting point for ordering servers, and other services we provide. ",
        "methods": {
            "getActiveItems": {
                "name": "getActiveItems",
                "type": "SoftLayer_Product_Item",
                "typeArray": true,
                "doc": "Return a list of Items in the package with their active prices.",
                "filterable": true,
                "maskable": true
            },
            "getActivePackagesByAttribute": {
                "name": "getActivePackagesByAttribute",
                "type": "SoftLayer_Product_Package",
                "typeArray": true,
                "doc": "<strong>This method is deprecated and should not be used in production code.</strong> \n\nThis method will return the [[SoftLayer_Product_Package]] objects from which you can order a bare metal server, virtual server, service (such as CDN or Object Storage) or other software filtered by an attribute type associated with the package. Once you have the package you want to order from, you may query one of various endpoints from that package to get specific information about its products and pricing. See [[SoftLayer_Product_Package/getCategories|getCategories]] or [[SoftLayer_Product_Package/getItems|getItems]] for more information. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "attributeKeyName",
                        "type": "string",
                        "doc": "the attribute key name"
                    }
                ]
            },
            "getActivePrivateHostedCloudPackages": {
                "name": "getActivePrivateHostedCloudPackages",
                "type": "SoftLayer_Product_Package",
                "typeArray": true,
                "doc": "[DEPRECATED] This method pulls all the active private hosted cloud packages. This will give you a basic description of the packages that are currently active and from which you can order private hosted cloud configurations. ",
                "static": true,
                "maskable": true
            },
            "getActiveUsageRatePrices": {
                "name": "getActiveUsageRatePrices",
                "type": "SoftLayer_Product_Item_Price",
                "typeArray": true,
                "doc": "This method returns a collection of active usage rate [[SoftLayer_Product_Item_Price]] objects for the current package and specified datacenter. Optionally you can retrieve the active usage rate prices for a particular [[SoftLayer_Product_Item_Category]] by specifying a category code as the first parameter. This information is useful so that you can see \"pay as you go\" rates (if any) for the current package, location and optionally category. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "locationId",
                        "type": "int",
                        "doc": "Get the active usage rate prices associated with this location/datacenter",
                        "defaultValue": null
                    },
                    {
                        "name": "categoryCode",
                        "type": "string",
                        "doc": "If provided, get the active usage rate prices for this category code",
                        "defaultValue": null
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Product_Package",
                "typeArray": true,
                "doc": "This method pulls all the active packages. This will give you a basic description of the packages that are currently active ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getAvailablePackagesForImageTemplate": {
                "name": "getAvailablePackagesForImageTemplate",
                "type": "SoftLayer_Product_Package",
                "typeArray": true,
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "imageTemplate",
                        "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group"
                    }
                ]
            },
            "getCdnItems": {
                "name": "getCdnItems",
                "type": "SoftLayer_Product_Item",
                "typeArray": true,
                "maskable": true
            },
            "getCloudStorageItems": {
                "name": "getCloudStorageItems",
                "type": "SoftLayer_Product_Item",
                "typeArray": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "provider",
                        "type": "int"
                    }
                ]
            },
            "getItemAvailabilityTypes": {
                "name": "getItemAvailabilityTypes",
                "type": "SoftLayer_Product_Item_Attribute_Type",
                "typeArray": true,
                "doc": "Returns a collection of SoftLayer_Product_Item_Attribute_Type objects.  These item attribute types specifically deal with when an item, SoftLayer_Product_Item, from the product catalog may no longer be available.  The keynames for these attribute types start with 'UNAVAILABLE_AFTER_DATE_*', where the '*' may represent any string.  For example, 'UNAVAILABLE_AFTER_DATE_NEW_ORDERS', signifies that the item is not available for new orders.  There is a catch all attribute type, 'UNAVAILABLE_AFTER_DATE_ALL'.  If an item has one of these availability attributes set, the value should be a valid date in MM/DD/YYYY, indicating the date after which the item will no longer be available. ",
                "static": true,
                "maskable": true
            },
            "getItemPricesFromSoftwareDescriptions": {
                "name": "getItemPricesFromSoftwareDescriptions",
                "type": "SoftLayer_Product_Item_Price",
                "typeArray": true,
                "doc": "Return a collection of SoftLayer_Item_Price objects from a collection of SoftLayer_Software_Description ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "softwareDescriptions",
                        "type": "SoftLayer_Software_Description",
                        "typeArray": true,
                        "doc": "The software that the item prices will be returned for."
                    },
                    {
                        "name": "includeTranslationsFlag",
                        "type": "boolean",
                        "doc": "The flag to specify whether software translations should be considered when looking at the software descriptions.",
                        "defaultValue": false
                    },
                    {
                        "name": "returnAllPricesFlag",
                        "type": "boolean",
                        "doc": "The flag to specify whether all item prices or just the first price for the software descriptions.",
                        "defaultValue": false
                    }
                ]
            },
            "getItemsFromImageTemplate": {
                "name": "getItemsFromImageTemplate",
                "type": "SoftLayer_Product_Item",
                "typeArray": true,
                "doc": "Return a collection of [[SoftLayer_Product_Item]] objects from a [[SoftLayer_Virtual_Guest_Block_Device_Template_Group]] object",
                "maskable": true,
                "parameters": [
                    {
                        "name": "imageTemplate",
                        "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                        "doc": "The image template that the items will be returned for."
                    }
                ]
            },
            "getMessageQueueItems": {
                "name": "getMessageQueueItems",
                "type": "SoftLayer_Product_Item",
                "typeArray": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Package",
                "filterable": true,
                "maskable": true
            },
            "getObjectStorageDatacenters": {
                "name": "getObjectStorageDatacenters",
                "type": "SoftLayer_Container_Product_Order_Network_Storage_Hub_Datacenter",
                "typeArray": true,
                "doc": "This method will return a collection of [[SoftLayer_Container_Product_Order_Network_Storage_Hub_Datacenter]] objects which contain a datacenter location and all the associated active usage rate prices where object storage is available. This method is really only applicable to the object storage additional service package which has a [[SoftLayer_Product_Package_Type]] of '''ADDITIONAL_SERVICES_OBJECT_STORAGE'''. This information is useful so that you can see the \"pay as you go\" rates per datacenter. ",
                "filterable": true,
                "maskable": true
            },
            "getObjectStorageLocationGroups": {
                "name": "getObjectStorageLocationGroups",
                "type": "SoftLayer_Container_Product_Order_Network_Storage_ObjectStorage_LocationGroup",
                "typeArray": true,
                "doc": "This method will return a collection of [[SoftLayer_Container_Product_Order_Network_Storage_ObjectStorage_LocationGroup]] objects which contain a location group and all the associated active usage rate prices where object storage is available. This method is really only applicable to the object storage additional service package which has a [[SoftLayer_Product_Package_Type]] of '''ADDITIONAL_SERVICES_OBJECT_STORAGE'''. This information is useful so that you can see the \"pay as you go\" rates per location group. "
            },
            "getStandardCategories": {
                "name": "getStandardCategories",
                "type": "SoftLayer_Product_Item_Category",
                "typeArray": true,
                "doc": "This call is similar to [[SoftLayer_Product_Package/getCategories|getCategories]], except that it does not include account-restricted pricing. Not all accounts have restricted pricing. ",
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Product_Package data type contains information about packages from which orders can be generated. Packages contain general information regarding what is in them, where they are currently sold, availability, and pricing. ",
        "properties": {
            "accountRestrictedActivePresets": {
                "name": "accountRestrictedActivePresets",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "relational",
                "typeArray": true,
                "doc": "The preset configurations available only for the authenticated account and this package."
            },
            "accountRestrictedCategories": {
                "name": "accountRestrictedCategories",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "typeArray": true,
                "doc": "The results from this call are similar to [[SoftLayer_Product_Package/getCategories|getCategories]], but these ONLY include account-restricted prices. Not all accounts have restricted pricing."
            },
            "accountRestrictedPricesFlag": {
                "name": "accountRestrictedPricesFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "The flag to indicate if there are any restricted prices in a package for the currently-active account."
            },
            "activePresets": {
                "name": "activePresets",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "relational",
                "typeArray": true,
                "doc": "The available preset configurations for this package."
            },
            "activeRamItems": {
                "name": "activeRamItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of valid RAM items available for purchase in this package."
            },
            "activeServerItems": {
                "name": "activeServerItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of valid server items available for purchase in this package."
            },
            "activeSoftwareItems": {
                "name": "activeSoftwareItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of valid software items available for purchase in this package."
            },
            "activeUsagePrices": {
                "name": "activeUsagePrices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of [[SoftLayer_Product_Item_Price]] objects for pay-as-you-go usage."
            },
            "additionalServiceFlag": {
                "name": "additionalServiceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates that the package is an additional service."
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Product_Package_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "availableLocations": {
                "name": "availableLocations",
                "type": "SoftLayer_Product_Package_Locations",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of valid locations for this package. (Deprecated - Use [[SoftLayer_Product_Package/getRegions|getRegions]])"
            },
            "availableStorageUnits": {
                "name": "availableStorageUnits",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The maximum number of available disk storage units associated with the servers in a package."
            },
            "categories": {
                "name": "categories",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "typeArray": true,
                "doc": "This is a collection of categories ([[SoftLayer_Product_Item_Category]]) associated with a package which can be used for ordering. These categories have several objects prepopulated which are useful when determining the available products for purchase. The categories contain groups ([[SoftLayer_Product_Package_Item_Category_Group]]) that organize the products and prices by similar features. For example, operating systems will be grouped by their manufacturer and virtual server disks will be grouped by their disk type (SAN vs. local). Each group will contain prices ([[SoftLayer_Product_Item_Price]]) which you can use determine the cost of each product. Each price has a product ([[SoftLayer_Product_Item]]) which provides the name and other useful information about the server, service or software you may purchase."
            },
            "configuration": {
                "name": "configuration",
                "type": "SoftLayer_Product_Package_Order_Configuration",
                "form": "relational",
                "typeArray": true,
                "doc": "The item categories associated with a package, including information detailing which item categories are required as part of a SoftLayer product order."
            },
            "defaultBootCategoryCode": {
                "name": "defaultBootCategoryCode",
                "type": "string",
                "form": "relational",
                "doc": "The default boot category code for the package."
            },
            "defaultRamItems": {
                "name": "defaultRamItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of valid RAM items available for purchase in this package."
            },
            "deploymentNodeType": {
                "name": "deploymentNodeType",
                "type": "string",
                "form": "relational",
                "doc": "The node type for a package in a solution deployment."
            },
            "deploymentPackages": {
                "name": "deploymentPackages",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "typeArray": true,
                "doc": "The packages that are allowed in a multi-server solution. (Deprecated)"
            },
            "deploymentType": {
                "name": "deploymentType",
                "type": "string",
                "form": "relational",
                "doc": "The solution deployment type."
            },
            "deployments": {
                "name": "deployments",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "typeArray": true,
                "doc": "The package that represents a multi-server solution. (Deprecated)"
            },
            "disallowCustomDiskPartitions": {
                "name": "disallowCustomDiskPartitions",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates the package does not allow custom disk partitions."
            },
            "firstOrderStep": {
                "name": "firstOrderStep",
                "type": "SoftLayer_Product_Package_Order_Step",
                "form": "relational",
                "doc": "The Softlayer order step is optionally step-based. This returns the first SoftLayer_Product_Package_Order_Step in the step-based order process."
            },
            "gatewayApplianceFlag": {
                "name": "gatewayApplianceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether the package is a specialized network gateway appliance package."
            },
            "gpuFlag": {
                "name": "gpuFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates that the package supports GPUs."
            },
            "hourlyBillingAvailableFlag": {
                "name": "hourlyBillingAvailableFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Determines whether the package contains prices that can be ordered hourly."
            },
            "hourlyOnlyOrders": {
                "name": "hourlyOnlyOrders",
                "type": "boolean",
                "form": "relational",
                "doc": "Packages with this flag do not allow monthly orders."
            },
            "itemConflicts": {
                "name": "itemConflicts",
                "type": "SoftLayer_Product_Item_Resource_Conflict",
                "form": "relational",
                "typeArray": true,
                "doc": "The item-item conflicts associated with a package."
            },
            "itemLocationConflicts": {
                "name": "itemLocationConflicts",
                "type": "SoftLayer_Product_Item_Resource_Conflict",
                "form": "relational",
                "typeArray": true,
                "doc": "The item-location conflicts associated with a package."
            },
            "itemPriceReferences": {
                "name": "itemPriceReferences",
                "type": "SoftLayer_Product_Package_Item_Prices",
                "form": "relational",
                "typeArray": true,
                "doc": "cross reference for item prices"
            },
            "itemPrices": {
                "name": "itemPrices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of SoftLayer_Product_Item_Prices that are valid for this package."
            },
            "items": {
                "name": "items",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of valid items available for purchase in this package."
            },
            "locations": {
                "name": "locations",
                "type": "SoftLayer_Location",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of valid locations for this package. (Deprecated - Use [[SoftLayer_Product_Package/getRegions|getRegions]])"
            },
            "lowestServerPrice": {
                "name": "lowestServerPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "doc": "The lowest server [[SoftLayer_Product_Item_Price]] related to this package."
            },
            "maximumPortSpeed": {
                "name": "maximumPortSpeed",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The maximum available network speed associated with the package."
            },
            "minimumPortSpeed": {
                "name": "minimumPortSpeed",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The minimum available network speed associated with the package."
            },
            "mongoDbEngineeredFlag": {
                "name": "mongoDbEngineeredFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates that this is a MongoDB engineered package. (Deprecated)"
            },
            "noUpgradesFlag": {
                "name": "noUpgradesFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Services ordered from this package cannot have upgrades or downgrades performed."
            },
            "nonEuCompliantFlag": {
                "name": "nonEuCompliantFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether the package is not in compliance with EU support."
            },
            "orderPremiums": {
                "name": "orderPremiums",
                "type": "SoftLayer_Product_Item_Price_Premium",
                "form": "relational",
                "typeArray": true,
                "doc": "The premium price modifiers associated with the [[SoftLayer_Product_Item_Price]] and [[SoftLayer_Location]] objects in a package."
            },
            "popLocationAvailabilityFlag": {
                "name": "popLocationAvailabilityFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates if the package may be available in PoP locations in addition to Datacenters."
            },
            "preconfiguredFlag": {
                "name": "preconfiguredFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates the package is pre-configured. (Deprecated)"
            },
            "presetConfigurationRequiredFlag": {
                "name": "presetConfigurationRequiredFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether the package requires the user to define a preset configuration."
            },
            "preventVlanSelectionFlag": {
                "name": "preventVlanSelectionFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether the package prevents the user from specifying a Vlan."
            },
            "privateHostedCloudPackageFlag": {
                "name": "privateHostedCloudPackageFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates the package is for a private hosted cloud deployment. (Deprecated)"
            },
            "privateHostedCloudPackageType": {
                "name": "privateHostedCloudPackageType",
                "type": "string",
                "form": "relational",
                "doc": "The server role of the private hosted cloud deployment. (Deprecated)"
            },
            "privateNetworkOnlyFlag": {
                "name": "privateNetworkOnlyFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether the package only has access to the private network."
            },
            "quantaStorPackageFlag": {
                "name": "quantaStorPackageFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether the package is a specialized mass storage QuantaStor package. (Deprecated)"
            },
            "raidDiskRestrictionFlag": {
                "name": "raidDiskRestrictionFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag indicates the package does not allow different disks with RAID."
            },
            "redundantPowerFlag": {
                "name": "redundantPowerFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "This flag determines if the package contains a redundant power supply product."
            },
            "regions": {
                "name": "regions",
                "type": "SoftLayer_Location_Region",
                "form": "relational",
                "typeArray": true,
                "doc": "The regional locations that a package is available in."
            },
            "resourceGroupTemplate": {
                "name": "resourceGroupTemplate",
                "type": "SoftLayer_Resource_Group_Template",
                "form": "relational",
                "doc": "The resource group template that describes a multi-server solution. (Deprecated)"
            },
            "topLevelItemCategoryCode": {
                "name": "topLevelItemCategoryCode",
                "type": "string",
                "form": "relational",
                "doc": "The top level category code for this service offering."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Product_Package_Type",
                "form": "relational",
                "doc": "The type of service offering. This property can be used to help filter packages."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A generic description of the processor type and count. This includes HTML, so you may want to strip these tags if you plan to use it."
            },
            "firstOrderStepId": {
                "name": "firstOrderStepId",
                "type": "int",
                "form": "local",
                "doc": "This is only needed for step-based order verification. We use this for the order forms, but it is not required. This step is the first SoftLayer_Product_Package_Step for this package. Use this for for filtering which item categories are returned as a part of SoftLayer_Product_Package_Order_Configuration. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A package's internal identifier. Everything regarding a SoftLayer_Product_Package is tied back to this id. "
            },
            "isActive": {
                "name": "isActive",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A unique key name for the package."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The description of the package. For server packages, this is usually a detailed description of processor type and count."
            },
            "subDescription": {
                "name": "subDescription",
                "type": "string",
                "form": "local",
                "doc": "This currently contains no information but is here for future use."
            },
            "unitSize": {
                "name": "unitSize",
                "type": "int",
                "form": "local",
                "doc": "The server unit size this package will match to."
            },
            "accountRestrictedActivePresetCount": {
                "name": "accountRestrictedActivePresetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the preset configurations available only for the authenticated account and this package."
            },
            "accountRestrictedCategoryCount": {
                "name": "accountRestrictedCategoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the results from this call are similar to [[SoftLayer_Product_Package/getCategories|getCategories]], but these ONLY include account-restricted prices. Not all accounts have restricted pricing."
            },
            "activePresetCount": {
                "name": "activePresetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the available preset configurations for this package."
            },
            "activeRamItemCount": {
                "name": "activeRamItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of valid RAM items available for purchase in this package."
            },
            "activeServerItemCount": {
                "name": "activeServerItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of valid server items available for purchase in this package."
            },
            "activeSoftwareItemCount": {
                "name": "activeSoftwareItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of valid software items available for purchase in this package."
            },
            "activeUsagePriceCount": {
                "name": "activeUsagePriceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of [[SoftLayer_Product_Item_Price]] objects for pay-as-you-go usage."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "availableLocationCount": {
                "name": "availableLocationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of valid locations for this package. (Deprecated - Use [[SoftLayer_Product_Package/getRegions|getRegions]])"
            },
            "configurationCount": {
                "name": "configurationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the item categories associated with a package, including information detailing which item categories are required as part of a SoftLayer product order."
            },
            "defaultRamItemCount": {
                "name": "defaultRamItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of valid RAM items available for purchase in this package."
            },
            "deploymentCount": {
                "name": "deploymentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the package that represents a multi-server solution. (Deprecated)"
            },
            "deploymentPackageCount": {
                "name": "deploymentPackageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the packages that are allowed in a multi-server solution. (Deprecated)"
            },
            "itemCount": {
                "name": "itemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of valid items available for purchase in this package."
            },
            "itemPriceCount": {
                "name": "itemPriceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of SoftLayer_Product_Item_Prices that are valid for this package."
            },
            "itemPriceReferenceCount": {
                "name": "itemPriceReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of cross reference for item prices"
            },
            "locationCount": {
                "name": "locationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of valid locations for this package. (Deprecated - Use [[SoftLayer_Product_Package/getRegions|getRegions]])"
            },
            "orderPremiumCount": {
                "name": "orderPremiumCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the premium price modifiers associated with the [[SoftLayer_Product_Item_Price]] and [[SoftLayer_Location]] objects in a package."
            },
            "regionCount": {
                "name": "regionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the regional locations that a package is available in."
            }
        }
    },
    "SoftLayer_Product_Package_Attribute": {
        "name": "SoftLayer_Product_Package_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "attributeType": {
                "name": "attributeType",
                "type": "SoftLayer_Product_Package_Attribute_Type",
                "form": "relational"
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Product_Package_Attribute_Type": {
        "name": "SoftLayer_Product_Package_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Product_Package_Inventory": {
        "name": "SoftLayer_Product_Package_Inventory",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is deprecated. ",
        "properties": {
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The product package item that is associated with an inventory record."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The datacenter that an inventory record is located in."
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "doc": "The product package that is associated with an inventory record."
            },
            "availableInventoryCount": {
                "name": "availableInventoryCount",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. The number of units available for purchase in inventory for a single item in a single datacenter. "
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. The unique identifier of the product item that an inventory record is associated with. "
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. The unique identifier of the datacenter that an inventory record is located in. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "DEPRECATED. The date that an inventory record was last updated. "
            },
            "overstockFlag": {
                "name": "overstockFlag",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. Whether an inventory record is marked as \"overstock\". "
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. The unique identifier of the product package that an inventory record is associated with. "
            }
        }
    },
    "SoftLayer_Product_Package_Item_Category_Group": {
        "name": "SoftLayer_Product_Package_Item_Category_Group",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This class is used to organize categories for a service offering. A service offering (usually) contains multiple categories (e.g., server, os, disk0, ram). This class allows us to organize the prices into related item category groups. ",
        "properties": {
            "category": {
                "name": "category",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational"
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational"
            },
            "prices": {
                "name": "prices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "typeArray": true
            },
            "itemCategoryId": {
                "name": "itemCategoryId",
                "type": "int",
                "form": "local",
                "doc": "The item category id associated with this group."
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The service offering id associated with this group."
            },
            "sort": {
                "name": "sort",
                "type": "int",
                "form": "local",
                "doc": "The sort value for this group."
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "An optional title associated with this group. E.g., for operating systems, this will be the manufacturer."
            },
            "priceCount": {
                "name": "priceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Product_Package_Item_Prices": {
        "name": "SoftLayer_Product_Package_Item_Prices",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Package_Item_Prices contains price to package cross references Relates a category, price and item to a bundle.  Match bundle ids to see all items and prices in a particular bundle. ",
        "properties": {
            "itemPrice": {
                "name": "itemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "doc": "The item price to which this object belongs. The item price has details regarding cost for the item it belongs to."
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "doc": "The package to which this object belongs."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for SoftLayer_Product_Package_Item_Price. This is only needed as a reference. The important data is the itemPriceId property. "
            },
            "itemPriceId": {
                "name": "itemPriceId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Product_Item_Price id. This value is to be used when placing orders. To get more information about this item price, go from the item price to the item description "
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The Package ID to which this price reference belongs"
            }
        }
    },
    "SoftLayer_Product_Package_Items": {
        "name": "SoftLayer_Product_Package_Items",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This data type is a cross-reference between the SoftLayer_Product_Package and the SoftLayer_Product_Item(s) that belong in the SoftLayer_Product_Package. ",
        "properties": {
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The item to which this object belongs."
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "doc": "The package to which this object belongs."
            },
            "id": {
                "name": "id",
                "type": "string",
                "form": "local",
                "doc": "The unique identifier for this object. It is not used anywhere but in this object."
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Product_Item id to which this instance of the object belongs."
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Product_Package id to which this instance of the object belongs."
            }
        }
    },
    "SoftLayer_Product_Package_Locations": {
        "name": "SoftLayer_Product_Package_Locations",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Most packages are available in many locations. This object describes that availability for each package. ",
        "properties": {
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The location to which this object belongs."
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "doc": "The package to which this object belongs."
            },
            "deliveryTimeInformation": {
                "name": "deliveryTimeInformation",
                "type": "string",
                "form": "local",
                "doc": "This describes the availability of the package tied to this location."
            },
            "isAvailable": {
                "name": "isAvailable",
                "type": "int",
                "form": "local",
                "doc": "A simple flag which describes whether or not this location is available for this package."
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "The location id tied to this object."
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Product_Package ID tied to this object."
            }
        }
    },
    "SoftLayer_Product_Package_Order_Configuration": {
        "name": "SoftLayer_Product_Package_Order_Configuration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This datatype describes the item categories that are required for each package to be ordered. For instance, for package 2, there will be many required categories. When submitting an order for a server, there must be at most 1 price for each category whose \"isRequired\" is set. Examples of required categories: - server - ram - bandwidth - disk0 \n\nThere are others, but these are the main ones. For each required category, a SoftLayer_Product_Item_Price must be chosen that is valid for the package. \n\n",
        "properties": {
            "itemCategory": {
                "name": "itemCategory",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "doc": "The item category for this configuration instance."
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "doc": "The package to which this instance belongs."
            },
            "step": {
                "name": "step",
                "type": "SoftLayer_Product_Package_Order_Step",
                "form": "relational",
                "doc": "The step to which this instance belongs."
            },
            "bundledFlag": {
                "name": "bundledFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Signifies that selections associated with the configuration are automatically provided by being bundled to another configurations selection. The actual bundling is on the product. "
            },
            "errorMessage": {
                "name": "errorMessage",
                "type": "string",
                "form": "local",
                "doc": "The error message displayed if the submitted order does not contain this item category, if it is required."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this object."
            },
            "isRequired": {
                "name": "isRequired",
                "type": "int",
                "form": "local",
                "doc": "This is a flag which tells SoftLayer_Product_Order::verifyOrder() whether or not this category is required. If this is set, then the order submitted must contain a SoftLayer_Product_Item_Price with this category as part of the order. "
            },
            "itemCategoryId": {
                "name": "itemCategoryId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer_Product_Item_Category."
            },
            "orderStepId": {
                "name": "orderStepId",
                "type": "int",
                "form": "local",
                "doc": "The order step ID for this particular option in the package."
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The PackageId tied to this instance."
            },
            "sort": {
                "name": "sort",
                "type": "int",
                "form": "local",
                "doc": "This is an integer used to show the order in which each item Category should be displayed. This is merely the suggested order."
            },
            "termFlag": {
                "name": "termFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether or not the item category is term-based."
            }
        }
    },
    "SoftLayer_Product_Package_Order_Step": {
        "name": "SoftLayer_Product_Package_Order_Step",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Each package has at least 1 step to the ordering process. For server orders, there are many. Each step has certain item categories which are displayed. This type describes the steps for each package. ",
        "properties": {
            "inclusivePreviousSteps": {
                "name": "inclusivePreviousSteps",
                "type": "SoftLayer_Product_Package_Order_Step_Next",
                "form": "relational",
                "typeArray": true,
                "doc": "The next steps in the ordering process for the package tied to this object, including this step."
            },
            "nextSteps": {
                "name": "nextSteps",
                "type": "SoftLayer_Product_Package_Order_Step_Next",
                "form": "relational",
                "typeArray": true,
                "doc": "The next steps in the ordering process for the package tied to this object."
            },
            "previousSteps": {
                "name": "previousSteps",
                "type": "SoftLayer_Product_Package_Order_Step_Next",
                "form": "relational",
                "typeArray": true,
                "doc": "The item to which this object belongs."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this object. It is not used anywhere but in this object."
            },
            "step": {
                "name": "step",
                "type": "string",
                "form": "local",
                "doc": "The number of the step in the order process for this package. These are sequential and only needed for step-based ordering."
            },
            "inclusivePreviousStepCount": {
                "name": "inclusivePreviousStepCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the next steps in the ordering process for the package tied to this object, including this step."
            },
            "nextStepCount": {
                "name": "nextStepCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the next steps in the ordering process for the package tied to this object."
            },
            "previousStepCount": {
                "name": "previousStepCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the item to which this object belongs."
            }
        }
    },
    "SoftLayer_Product_Package_Order_Step_Next": {
        "name": "SoftLayer_Product_Package_Order_Step_Next",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This datatype simply describes which steps are next in line for ordering. ",
        "properties": {
            "step": {
                "name": "step",
                "type": "SoftLayer_Product_Package_Order_Step",
                "form": "relational",
                "doc": "The SoftLayer_Product_Package_Order_Step to which this object belongs."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this object."
            },
            "nextOrderStepId": {
                "name": "nextOrderStepId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for SoftLayer_Product_Package_Order_Step for the next step in the process."
            },
            "orderStepId": {
                "name": "orderStepId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for SoftLayer_Product_Package_Order_Step for the current step."
            }
        }
    },
    "SoftLayer_Product_Package_Preset": {
        "name": "SoftLayer_Product_Package_Preset",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Product_Package_Preset",
                "typeArray": true,
                "doc": "This method returns all the active package presets.",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Package_Preset",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Package presets are used to simplify ordering by eliminating the need for price ids when submitting orders. \n\nOrders submitted with a preset id defined will use the prices included in the package preset. Prices submitted on an order with a preset id will replace the prices included in the package preset for that prices category. If the package preset has a fixed configuration flag <em>(fixedConfigurationFlag)</em> set then the prices included in the preset configuration cannot be replaced by prices submitted on the order. The only exception to the fixed configuration flag would be if a price submitted on the order is an account-restricted price for the same product item. ",
        "properties": {
            "availableStorageUnits": {
                "name": "availableStorageUnits",
                "type": "unsignedInt",
                "form": "relational"
            },
            "bareMetalReservedFlag": {
                "name": "bareMetalReservedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "When true this preset is for ordering a Bare Metal Reserved server."
            },
            "categories": {
                "name": "categories",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational",
                "typeArray": true,
                "doc": "The item categories that are included in this package preset configuration."
            },
            "computeGroup": {
                "name": "computeGroup",
                "type": "SoftLayer_Product_Item_Server_Group",
                "form": "relational",
                "doc": "The compute family this configuration belongs to."
            },
            "configuration": {
                "name": "configuration",
                "type": "SoftLayer_Product_Package_Preset_Configuration",
                "form": "relational",
                "typeArray": true,
                "doc": "The preset configuration (category and price)."
            },
            "disallowedComputeGroupUpgradeFlag": {
                "name": "disallowedComputeGroupUpgradeFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "When true this preset is only allowed to upgrade/downgrade to other presets in the same compute family."
            },
            "fixedConfigurationFlag": {
                "name": "fixedConfigurationFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A package preset with this flag set will not allow the price's defined in the preset configuration to be overriden during order placement."
            },
            "locations": {
                "name": "locations",
                "type": "SoftLayer_Location",
                "form": "relational",
                "typeArray": true,
                "doc": "The locations this preset configuration is available in. If empty the preset is available in all locations the package is available in."
            },
            "lowestPresetServerPrice": {
                "name": "lowestPresetServerPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "doc": "The lowest server prices related to this package preset."
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "doc": "The package this preset belongs to."
            },
            "packageConfiguration": {
                "name": "packageConfiguration",
                "type": "SoftLayer_Product_Package_Order_Configuration",
                "form": "relational",
                "typeArray": true,
                "doc": "The item categories associated with a package preset, including information detailing which item categories are required as part of a SoftLayer product order."
            },
            "prices": {
                "name": "prices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational",
                "typeArray": true,
                "doc": "The item prices that are included in this package preset configuration."
            },
            "storageGroupTemplateArrays": {
                "name": "storageGroupTemplateArrays",
                "type": "SoftLayer_Configuration_Storage_Group_Template_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "Describes how all disks in this preset will be configured."
            },
            "totalMinimumHourlyFee": {
                "name": "totalMinimumHourlyFee",
                "type": "decimal",
                "form": "relational",
                "doc": "The starting hourly price for this configuration. Additional options not defined in the preset may increase the cost."
            },
            "totalMinimumRecurringFee": {
                "name": "totalMinimumRecurringFee",
                "type": "decimal",
                "form": "relational",
                "doc": "The starting monthly price for this configuration. Additional options not defined in the preset may increase the cost."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A description of the package preset."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A preset's internal identifier. Everything regarding a SoftLayer_Product_Package_Preset is tied back to this id."
            },
            "isActive": {
                "name": "isActive",
                "type": "string",
                "form": "local",
                "doc": "The status of the package preset."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The key name of the package preset. For the base configuration of a package the preset key name is \"DEFAULT\"."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the package preset."
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The package id for the package this preset belongs to."
            },
            "categoryCount": {
                "name": "categoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the item categories that are included in this package preset configuration."
            },
            "configurationCount": {
                "name": "configurationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the preset configuration (category and price)."
            },
            "locationCount": {
                "name": "locationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the locations this preset configuration is available in. If empty the preset is available in all locations the package is available in."
            },
            "packageConfigurationCount": {
                "name": "packageConfigurationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the item categories associated with a package preset, including information detailing which item categories are required as part of a SoftLayer product order."
            },
            "priceCount": {
                "name": "priceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the item prices that are included in this package preset configuration."
            },
            "storageGroupTemplateArrayCount": {
                "name": "storageGroupTemplateArrayCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of describes how all disks in this preset will be configured."
            }
        }
    },
    "SoftLayer_Product_Package_Preset_Attribute": {
        "name": "SoftLayer_Product_Package_Preset_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Package preset attributes contain supplementary information for a package preset. ",
        "properties": {
            "attributeType": {
                "name": "attributeType",
                "type": "SoftLayer_Product_Package_Preset_Attribute_Type",
                "form": "relational"
            },
            "preset": {
                "name": "preset",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "relational"
            },
            "attributeTypeId": {
                "name": "attributeTypeId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the type of attribute that a pacakge preset attribute belongs to. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A package preset attribute's internal identifier. "
            },
            "presetId": {
                "name": "presetId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the package preset an attribute belongs to. "
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A package preset's attribute value. "
            }
        }
    },
    "SoftLayer_Product_Package_Preset_Attribute_Type": {
        "name": "SoftLayer_Product_Package_Preset_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Product_Package_Preset_Attribute_Type models the type of attribute that can be assigned to a package preset. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A brief description of a package preset attribute type. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A package preset attribute type's internal identifier. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A package preset attribute type's key name. This is typically a shorter version of an attribute type's name. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A package preset attribute type's name. "
            }
        }
    },
    "SoftLayer_Product_Package_Preset_Configuration": {
        "name": "SoftLayer_Product_Package_Preset_Configuration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "category": {
                "name": "category",
                "type": "SoftLayer_Product_Item_Category",
                "form": "relational"
            },
            "packagePreset": {
                "name": "packagePreset",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "relational"
            },
            "price": {
                "name": "price",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Product_Package_Server": {
        "name": "SoftLayer_Product_Package_Server",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Product_Package_Server",
                "typeArray": true,
                "doc": "This method will grab all the package servers. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Package_Server",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Product_Package_Server data type contains summarized information for bare metal servers regarding pricing, processor stats, and feature sets. ",
        "properties": {
            "catalog": {
                "name": "catalog",
                "type": "SoftLayer_Product_Catalog",
                "form": "relational"
            },
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational"
            },
            "itemPrice": {
                "name": "itemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "relational"
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational"
            },
            "preset": {
                "name": "preset",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "relational"
            },
            "bareMetalReservedFlag": {
                "name": "bareMetalReservedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate if the server a Bare Metal Reserved offering."
            },
            "catalogId": {
                "name": "catalogId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a [[SoftLayer_Product_Catalog]]."
            },
            "datacenters": {
                "name": "datacenters",
                "type": "string",
                "form": "local",
                "doc": "Comma-separated list of datacenter names this server is available in"
            },
            "defaultRamCapacity": {
                "name": "defaultRamCapacity",
                "type": "decimal",
                "form": "local",
                "doc": "The minimum amount of RAM the server is configured with."
            },
            "dualPathNetworkFlag": {
                "name": "dualPathNetworkFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate if the server configuration supports dual path network routing."
            },
            "flexCoreServerFlag": {
                "name": "flexCoreServerFlag",
                "type": "boolean",
                "form": "local"
            },
            "gpuFlag": {
                "name": "gpuFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates whether or not the server contains a GPU."
            },
            "hourlyBillingFlag": {
                "name": "hourlyBillingFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to determine if a server is available for hourly billing."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a [[SoftLayer_Product_Package_Server]]."
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a [[SoftLayer_Product_Item]]."
            },
            "itemPriceId": {
                "name": "itemPriceId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a [[SoftLayer_Product_Item_Price]]."
            },
            "maximumDriveCount": {
                "name": "maximumDriveCount",
                "type": "int",
                "form": "local",
                "doc": "The maximum number of hard drives the server can support."
            },
            "maximumPortSpeed": {
                "name": "maximumPortSpeed",
                "type": "decimal",
                "form": "local",
                "doc": "The maximum available network speed for the server."
            },
            "maximumRamCapacity": {
                "name": "maximumRamCapacity",
                "type": "decimal",
                "form": "local",
                "doc": "The maximum amount of RAM the server can support."
            },
            "minimumPortSpeed": {
                "name": "minimumPortSpeed",
                "type": "decimal",
                "form": "local",
                "doc": "The minimum available network speed for the server."
            },
            "networkGatewayApplianceRoleFlag": {
                "name": "networkGatewayApplianceRoleFlag",
                "type": "boolean",
                "form": "local"
            },
            "outletFlag": {
                "name": "outletFlag",
                "type": "boolean",
                "form": "local",
                "doc": "DEPRECATED. Indicates whether or not the server is being sold as part of an outlet package."
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a [[SoftLayer_Product_Package]]."
            },
            "packageType": {
                "name": "packageType",
                "type": "string",
                "form": "local",
                "doc": "The type of service offering/package."
            },
            "powerServerFlag": {
                "name": "powerServerFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate if the server is an IBM Power server."
            },
            "presetId": {
                "name": "presetId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a [[SoftLayer_Product_Package_Preset]]."
            },
            "privateNetworkOnlyFlag": {
                "name": "privateNetworkOnlyFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates whether or not the server can only be configured with a private network."
            },
            "processorBusSpeed": {
                "name": "processorBusSpeed",
                "type": "string",
                "form": "local",
                "doc": "The processor's bus speed."
            },
            "processorCache": {
                "name": "processorCache",
                "type": "string",
                "form": "local",
                "doc": "The amount of cache the processor has."
            },
            "processorCores": {
                "name": "processorCores",
                "type": "int",
                "form": "local",
                "doc": "The number of cores in each processor."
            },
            "processorCount": {
                "name": "processorCount",
                "type": "int",
                "form": "local",
                "doc": "The number of processors the server has."
            },
            "processorManufacturer": {
                "name": "processorManufacturer",
                "type": "string",
                "form": "local",
                "doc": "The manufacturer of the server's processor."
            },
            "processorModel": {
                "name": "processorModel",
                "type": "string",
                "form": "local",
                "doc": "The model of the server's processor."
            },
            "processorName": {
                "name": "processorName",
                "type": "string",
                "form": "local",
                "doc": "The name of the server's processor."
            },
            "processorSpeed": {
                "name": "processorSpeed",
                "type": "string",
                "form": "local",
                "doc": "The processor speed."
            },
            "productName": {
                "name": "productName",
                "type": "string",
                "form": "local",
                "doc": "The name of the server product."
            },
            "redundantPowerFlag": {
                "name": "redundantPowerFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates whether or not the server has the capability to support a redundant power supply."
            },
            "sapCertifiedServerFlag": {
                "name": "sapCertifiedServerFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate if the server is SAP certified."
            },
            "startingHourlyPrice": {
                "name": "startingHourlyPrice",
                "type": "decimal",
                "form": "local",
                "doc": "The hourly starting price for the server. This includes a sum of all the minimum required items, including RAM and hard drives. Not all servers are available hourly. "
            },
            "startingMonthlyPrice": {
                "name": "startingMonthlyPrice",
                "type": "decimal",
                "form": "local",
                "doc": "The monthly starting price for the server. This includes a sum of all the minimum required items, including RAM and hard drives."
            },
            "termLength": {
                "name": "termLength",
                "type": "int",
                "form": "local",
                "doc": "The length of a term if a server has a term-based price"
            },
            "totalCoreCount": {
                "name": "totalCoreCount",
                "type": "int",
                "form": "local",
                "doc": "The total number of processor cores available for the server."
            },
            "txtTpmFlag": {
                "name": "txtTpmFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate if the server configuration supports TXT/TPM."
            },
            "unitSize": {
                "name": "unitSize",
                "type": "int",
                "form": "local",
                "doc": "The size of the server."
            },
            "vmwareVsanNodeFlag": {
                "name": "vmwareVsanNodeFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate if the server is a VMware vSAN Node configuration."
            }
        }
    },
    "SoftLayer_Product_Package_Server_Option": {
        "name": "SoftLayer_Product_Package_Server_Option",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllOptions": {
                "name": "getAllOptions",
                "type": "SoftLayer_Product_Package_Server_Option",
                "typeArray": true,
                "doc": "This method will grab all the package server options. ",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Package_Server_Option",
                "filterable": true,
                "maskable": true
            },
            "getOptions": {
                "name": "getOptions",
                "type": "SoftLayer_Product_Package_Server_Option",
                "typeArray": true,
                "doc": "This method will grab all the package server options for the specified type. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "The type of options to return"
                    }
                ]
            }
        },
        "typeDoc": "The [[SoftLayer_Product_Package_Server_Option]] data type contains various data points associated with package servers that can be used in selection criteria. ",
        "properties": {
            "catalogId": {
                "name": "catalogId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a Catalog."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A description of the option."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a Package Server Option."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of option."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value of the the option."
            }
        }
    },
    "SoftLayer_Product_Package_Type": {
        "name": "SoftLayer_Product_Package_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The [[SoftLayer_Product_Package_Type]] object indicates the type for a service offering (package). The type can be used to filter packages. To find all the available types, call `getAllObjects` on this class. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Product_Package_Type",
                "typeArray": true,
                "doc": "This method will return all of the available package types. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Package_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The [[SoftLayer_Product_Package_Type]] object indicates the type for a service offering (package). The type can be used to filter packages. For example, if you are looking for the package representing virtual servers, you can filter on the type's key name of '''VIRTUAL_SERVER_INSTANCE'''. For bare metal servers by core or CPU, filter on '''BARE_METAL_CORE''' or '''BARE_METAL_CPU''', respectively. ",
        "properties": {
            "packages": {
                "name": "packages",
                "type": "SoftLayer_Product_Package",
                "form": "relational",
                "typeArray": true,
                "doc": "All the packages associated with the given package type."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The package type's unique identifier."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The unique key name of the package type. Use this value when filtering."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the package type."
            },
            "packageCount": {
                "name": "packageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all the packages associated with the given package type."
            }
        }
    },
    "SoftLayer_Product_Promotion": {
        "name": "SoftLayer_Product_Promotion",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The promotion web service is used to find information regarding a specific promotion using a promotion code. ",
        "methods": {
            "findByPromoCode": {
                "name": "findByPromoCode",
                "type": "SoftLayer_Container_Product_Promotion",
                "doc": "Retrieves a promotion using its code.",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "code",
                        "type": "string"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Promotion",
                "filterable": true,
                "maskable": true
            }
        }
    },
    "SoftLayer_Product_Upgrade_Request": {
        "name": "SoftLayer_Product_Upgrade_Request",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Product_Upgrade_Request tracks the progress of an upgrade, and allows modification of the maintenance window and other information. ",
        "methods": {
            "approveChanges": {
                "name": "approveChanges",
                "type": "boolean",
                "doc": "When a change is made to an upgrade by Sales, this method will approve the changes that were made. A customer must acknowledge the change and approve it so that the upgrade request can proceed. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Product_Upgrade_Request",
                "doc": "getObject retrieves a SoftLayer_Product_Upgrade_Request object on your account whose ID corresponds to the ID of the init parameter passed to the SoftLayer_Product_Upgrade_Request service. ",
                "filterable": true,
                "maskable": true
            },
            "updateMaintenanceWindow": {
                "name": "updateMaintenanceWindow",
                "type": "boolean",
                "doc": "In case an upgrade cannot be performed, the maintenance window needs to be updated to a future date. ",
                "parameters": [
                    {
                        "name": "maintenanceStartTime",
                        "type": "dateTime",
                        "doc": "A maintenance window starting time in ISO 8601 format."
                    },
                    {
                        "name": "maintenanceWindowId",
                        "type": "int"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Product_Upgrade_Request data type contains general information relating to a hardware, virtual server, or service upgrade. It also relates a [[SoftLayer_Billing_Order]] to a [[SoftLayer_Ticket]]. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that an order belongs to"
            },
            "completedFlag": {
                "name": "completedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Indicates that the upgrade request has completed or has been cancelled."
            },
            "invoice": {
                "name": "invoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "doc": "This is the invoice associated with the upgrade request. For hourly servers or services, an invoice will not be available."
            },
            "order": {
                "name": "order",
                "type": "SoftLayer_Billing_Order",
                "form": "relational",
                "doc": "An order record associated to the upgrade request"
            },
            "server": {
                "name": "server",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "A server object associated with the upgrade request if any."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Product_Upgrade_Request_Status",
                "form": "relational",
                "doc": "The current status of the upgrade request."
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "doc": "The ticket that is used to coordinate the upgrade process."
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The user that placed the order."
            },
            "virtualGuest": {
                "name": "virtualGuest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "A virtual server object associated with the upgrade request if any."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The unique internal id of a SoftLayer account"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an upgrade request was created."
            },
            "employeeId": {
                "name": "employeeId",
                "type": "int",
                "form": "local",
                "doc": "The unique internal id of the last modified user"
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "The unique internal id of the virtual server that an upgrade will be done"
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The unique internal id of the hardware that an upgrade will be done"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An upgrade request's internal identifier."
            },
            "maintenanceStartTimeUtc": {
                "name": "maintenanceStartTimeUtc",
                "type": "dateTime",
                "form": "local",
                "doc": "The time that system admin starts working on the order item.  This is used for upgrade orders."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date an upgrade request was last modified."
            },
            "orderId": {
                "name": "orderId",
                "type": "int",
                "form": "local",
                "doc": "The unique internal id of the order that an upgrade request is related to"
            },
            "orderTotal": {
                "name": "orderTotal",
                "type": "decimal",
                "form": "local",
                "doc": "The total amount of fees"
            },
            "proratedTotal": {
                "name": "proratedTotal",
                "type": "decimal",
                "form": "local",
                "doc": "The prorated total amount of recurring fees"
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The unique internal id of an upgrade status"
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local",
                "doc": "The unique internal id of the ticket related to an upgrade request"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The unique internal id of the customer who place the order"
            }
        }
    },
    "SoftLayer_Product_Upgrade_Request_Status": {
        "name": "SoftLayer_Product_Upgrade_Request_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Product_Upgrade_Request_Status data type contains detailed information relating to an hardware or software upgrade request. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The detailed description of an upgrade request status."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier of an upgrade request status."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of an upgrade request status."
            },
            "statusCode": {
                "name": "statusCode",
                "type": "string",
                "form": "local",
                "doc": "The status code of an upgrade request status."
            }
        }
    },
    "SoftLayer_Provisioning_Hook": {
        "name": "SoftLayer_Provisioning_Hook",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Provisioning_Hook",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Provisioning_Hook",
                        "doc": "The SoftLayer_Provisioning_Hook object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Provisioning_Hook",
                        "doc": "A skeleton SoftLayer_Provisioning_Hook object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Provisioning_Hook",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Provisioning_Hook contains all the information needed to add a hook into a server/Virtual provision and os reload. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "hookType": {
                "name": "hookType",
                "type": "SoftLayer_Provisioning_Hook_Type",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the account the script belongs to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the hook."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the type of hook the script is identified as.  Currently only CUSTOMER_PROVIDED_HOOK has been implemented."
            },
            "uri": {
                "name": "uri",
                "type": "string",
                "form": "local",
                "doc": "The endpoint that the script will be downloaded from (USERNAME AND PASSWORD SHOULD BE INCLUDED HERE).  If the endpoint is HTTP, the script will only be downloaded.  If the endpoint is HTTPS, the script will be downloaded and executed."
            }
        }
    },
    "SoftLayer_Provisioning_Hook_Type": {
        "name": "SoftLayer_Provisioning_Hook_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllHookTypes": {
                "name": "getAllHookTypes",
                "type": "SoftLayer_Provisioning_Hook_Type",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Provisioning_Hook_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Provisioning_Maintenance_Classification": {
        "name": "SoftLayer_Provisioning_Maintenance_Classification",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Provisioning_Maintenance_Classification service returns available maintenance classifications. ",
        "methods": {
            "getMaintenanceClassification": {
                "name": "getMaintenanceClassification",
                "type": "SoftLayer_Provisioning_Maintenance_Classification",
                "typeArray": true,
                "doc": "Retrieve an array of SoftLayer_Provisioning_Maintenance_Classification data types, which contain all maintenance classifications. ",
                "static": true,
                "filterable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "maintenanceClassificationId",
                        "type": "int"
                    }
                ]
            },
            "getMaintenanceClassificationsByItemCategory": {
                "name": "getMaintenanceClassificationsByItemCategory",
                "type": "SoftLayer_Provisioning_Maintenance_Classification_Item_Category",
                "typeArray": true,
                "doc": "Retrieve an array of SoftLayer_Provisioning_Maintenance_Classification data types, which contain all maintenance classifications. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Provisioning_Maintenance_Classification",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Provisioning_Maintenance_Classification represent a maintenance type for the specific hardware maintenance desired. ",
        "properties": {
            "itemCategories": {
                "name": "itemCategories",
                "type": "SoftLayer_Provisioning_Maintenance_Classification_Item_Category",
                "form": "relational",
                "typeArray": true
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The id of the maintenance classification."
            },
            "slots": {
                "name": "slots",
                "type": "int",
                "form": "local",
                "doc": "The number of slots required for the maintenance classification."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type or name of the maintenance classification."
            },
            "itemCategoryCount": {
                "name": "itemCategoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Provisioning_Maintenance_Classification_Item_Category": {
        "name": "SoftLayer_Provisioning_Maintenance_Classification_Item_Category",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Provisioning_Maintenance_Classification_Item_Category",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "maintenanceClassification": {
                "name": "maintenanceClassification",
                "type": "SoftLayer_Provisioning_Maintenance_Classification",
                "form": "relational"
            },
            "itemCategoryId": {
                "name": "itemCategoryId",
                "type": "int",
                "form": "local"
            },
            "maintenanceClassificationId": {
                "name": "maintenanceClassificationId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Provisioning_Maintenance_Slots": {
        "name": "SoftLayer_Provisioning_Maintenance_Slots",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Provisioning_Maintenance_Slots service returns available maintenance slots at SoftLayer data centers. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Provisioning_Maintenance_Slots",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Provisioning_Maintenance_Slots represent the available slots for a given maintenance window at a SoftLayer data center. ",
        "properties": {
            "availableSlots": {
                "name": "availableSlots",
                "type": "int",
                "form": "local",
                "doc": "The available slots for a maintenance window."
            }
        }
    },
    "SoftLayer_Provisioning_Maintenance_Ticket": {
        "name": "SoftLayer_Provisioning_Maintenance_Ticket",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Provisioning_Maintenance_Ticket",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "availableSlots": {
                "name": "availableSlots",
                "type": "SoftLayer_Provisioning_Maintenance_Slots",
                "form": "relational"
            },
            "maintenanceClass": {
                "name": "maintenanceClass",
                "type": "SoftLayer_Provisioning_Maintenance_Classification",
                "form": "relational"
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational"
            },
            "maintClassId": {
                "name": "maintClassId",
                "type": "int",
                "form": "local"
            },
            "maintWindowId": {
                "name": "maintWindowId",
                "type": "int",
                "form": "local"
            },
            "maintenanceDate": {
                "name": "maintenanceDate",
                "type": "dateTime",
                "form": "local"
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Provisioning_Maintenance_Window": {
        "name": "SoftLayer_Provisioning_Maintenance_Window",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Provisioning_Maintenance_Window service returns available maintenance windows at SoftLayer data centers. ",
        "methods": {
            "addCustomerUpgradeWindow": {
                "name": "addCustomerUpgradeWindow",
                "type": "boolean",
                "doc": "getMaintenceWindowForTicket() returns a boolean ",
                "static": true,
                "parameters": [
                    {
                        "name": "customerUpgradeWindow",
                        "type": "SoftLayer_Container_Provisioning_Maintenance_Window"
                    }
                ]
            },
            "getMaintenanceClassifications": {
                "name": "getMaintenanceClassifications",
                "type": "SoftLayer_Provisioning_Maintenance_Classification",
                "typeArray": true,
                "doc": "getMaintenanceClassifications() returns an object of maintenance classifications ",
                "static": true,
                "maskable": true
            },
            "getMaintenanceStartEndTime": {
                "name": "getMaintenanceStartEndTime",
                "type": "SoftLayer_Provisioning_Maintenance_Window",
                "doc": "getMaintenanceStartEndTime() returns a specific maintenance window ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ticketId",
                        "type": "int",
                        "doc": "ticket id"
                    }
                ]
            },
            "getMaintenanceWindowForTicket": {
                "name": "getMaintenanceWindowForTicket",
                "type": "SoftLayer_Provisioning_Maintenance_Window",
                "typeArray": true,
                "doc": "getMaintenceWindowForTicket() returns a specific maintenance window ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "maintenanceWindowId",
                        "type": "int",
                        "doc": "maintenance window id"
                    }
                ]
            },
            "getMaintenanceWindowTicketsByTicketId": {
                "name": "getMaintenanceWindowTicketsByTicketId",
                "type": "SoftLayer_Provisioning_Maintenance_Ticket",
                "typeArray": true,
                "doc": "getMaintenanceWindowTicketsByTicketId() returns a list maintenance window ticket records by ticket id ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ticketId",
                        "type": "int"
                    }
                ]
            },
            "getMaintenanceWindows": {
                "name": "getMaintenanceWindows",
                "type": "SoftLayer_Provisioning_Maintenance_Window",
                "typeArray": true,
                "doc": "This method returns a list of available maintenance windows ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "beginDate",
                        "type": "dateTime",
                        "doc": "The beginning date of the date range you wish to search for maintenance windows in.",
                        "defaultValue": null
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The ending date of the date range you wish to search for maintenance windows in.",
                        "defaultValue": null
                    },
                    {
                        "name": "locationId",
                        "type": "int",
                        "doc": "The location of the data center that you wish to search for maintenance windows in.",
                        "defaultValue": null
                    },
                    {
                        "name": "slotsNeeded",
                        "type": "int",
                        "doc": "The number of slots required for the maintenance window.",
                        "defaultValue": null
                    }
                ]
            },
            "getMaintenceWindows": {
                "name": "getMaintenceWindows",
                "type": "SoftLayer_Provisioning_Maintenance_Window",
                "typeArray": true,
                "doc": "(DEPRECATED) Use [[SoftLayer_Provisioning_Maintenance_Window::getMaintenanceWindows|getMaintenanceWindows]] method. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "beginDate",
                        "type": "dateTime",
                        "doc": "The beginning date of the date range you wish to search for maintenance windows in.",
                        "defaultValue": null
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime",
                        "doc": "The ending date of the date range you wish to search for maintenance windows in.",
                        "defaultValue": null
                    },
                    {
                        "name": "locationId",
                        "type": "int",
                        "doc": "The location of the data center that you wish to search for maintenance windows in.",
                        "defaultValue": null
                    },
                    {
                        "name": "slotsNeeded",
                        "type": "int",
                        "doc": "The number of slots required for the maintenance window.",
                        "defaultValue": null
                    }
                ]
            },
            "updateCustomerUpgradeWindow": {
                "name": "updateCustomerUpgradeWindow",
                "type": "boolean",
                "doc": "getMaintenceWindowForTicket() returns a boolean ",
                "static": true,
                "parameters": [
                    {
                        "name": "maintenanceStartTime",
                        "type": "dateTime"
                    },
                    {
                        "name": "newMaintenanceWindowId",
                        "type": "int"
                    },
                    {
                        "name": "ticketId",
                        "type": "int"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Provisioning_Maintenance_Window represent a time window that SoftLayer performs a hardware or software maintenance and upgrades. ",
        "properties": {
            "beginDate": {
                "name": "beginDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time a maintenance window is scheduled to begin."
            },
            "dayOfWeek": {
                "name": "dayOfWeek",
                "type": "int",
                "form": "local",
                "doc": "An ISO-8601 numeric representation of the day of the week that a maintenance window is performed. 1: Monday, 7: Sunday"
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time a maintenance window is scheduled to end."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Id of the maintenance window"
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier of the location (data center) record that a maintenance window takes place in."
            },
            "portalTzId": {
                "name": "portalTzId",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier of the datacenter timezone."
            }
        }
    },
    "SoftLayer_Provisioning_Version1_Transaction": {
        "name": "SoftLayer_Provisioning_Version1_Transaction",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Provisioning_Version1_Transaction data type contains general information relating to a single SoftLayer hardware transaction. \n\nSoftLayer customers are unable to change their hardware transactions. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that a transaction belongs to."
            },
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The guest record for this transaction."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware object for this transaction."
            },
            "loopback": {
                "name": "loopback",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "typeArray": true
            },
            "pendingTransactions": {
                "name": "pendingTransactions",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "typeArray": true
            },
            "ticketScheduledActionReference": {
                "name": "ticketScheduledActionReference",
                "type": "SoftLayer_Ticket_Attachment",
                "form": "relational",
                "typeArray": true
            },
            "transactionGroup": {
                "name": "transactionGroup",
                "type": "SoftLayer_Provisioning_Version1_Transaction_Group",
                "form": "relational",
                "doc": "A transaction's group. This group object determines what type of service is being done on the hardware."
            },
            "transactionStatus": {
                "name": "transactionStatus",
                "type": "SoftLayer_Provisioning_Version1_Transaction_Status",
                "form": "relational",
                "doc": "A transaction's status. This status object determines the state it is in the transaction group."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a transaction was created."
            },
            "elapsedSeconds": {
                "name": "elapsedSeconds",
                "type": "int",
                "form": "local",
                "doc": "The amount of seconds that have elapsed since the transaction was last modified."
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "A transaction's associated guest identification number."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "A transaction's associated hardware identification number."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A transaction's identifying number."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a transaction was last modified."
            },
            "statusChangeDate": {
                "name": "statusChangeDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the transaction status was last modified."
            },
            "loopbackCount": {
                "name": "loopbackCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "pendingTransactionCount": {
                "name": "pendingTransactionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "ticketScheduledActionReferenceCount": {
                "name": "ticketScheduledActionReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Provisioning_Version1_Transaction_Group": {
        "name": "SoftLayer_Provisioning_Version1_Transaction_Group",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The service lists the different types of transactions. This includes operating system reloads and new operating system provisions. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Provisioning_Version1_Transaction_Group",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Provisioning_Version1_Transaction_Group",
                "doc": "getObject retrieves the SoftLayer_Provisioning_Version1_Transaction_Group object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Provisioning_Version1_Transaction_Group service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Provisioning_Version1_Transaction_Group data type contains general information relating to a single SoftLayer hardware transaction group. \n\nSoftLayer customers are unable to change their hardware transactions or the hardware transaction group. ",
        "properties": {
            "averageTimeToComplete": {
                "name": "averageTimeToComplete",
                "type": "decimal",
                "form": "local",
                "doc": "Average time, in minutes, for this type of transaction to complete. Please note that this is only an estimate. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A transaction group's name."
            }
        }
    },
    "SoftLayer_Provisioning_Version1_Transaction_History": {
        "name": "SoftLayer_Provisioning_Version1_Transaction_History",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The guest from where transaction history originates."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware from where transaction history originates."
            },
            "transaction": {
                "name": "transaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "The transaction from where transaction history originates."
            },
            "transactionStatus": {
                "name": "transactionStatus",
                "type": "SoftLayer_Provisioning_Version1_Transaction_Status",
                "form": "relational",
                "doc": "The transaction status of a transaction history."
            },
            "finishDate": {
                "name": "finishDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The finish date of a transaction history record."
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "The guest ID associated with a transaction history."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The hardware ID associated with a transaction history."
            },
            "hostId": {
                "name": "hostId",
                "type": "int",
                "form": "local",
                "doc": "The host ID associated with a transaction history."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The ID associated with a transaction history."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The start date of a transaction history record."
            },
            "transactionId": {
                "name": "transactionId",
                "type": "int",
                "form": "local",
                "doc": "The transaction ID associated with a transaction history."
            },
            "transactionStatusId": {
                "name": "transactionStatusId",
                "type": "int",
                "form": "local",
                "doc": "The transaction status ID associated with a transaction history."
            }
        }
    },
    "SoftLayer_Provisioning_Version1_Transaction_Status": {
        "name": "SoftLayer_Provisioning_Version1_Transaction_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Provisioning_Version1_Transaction_Status data type contains general information relating to a single SoftLayer hardware transaction status. \n\nSoftLayer customers are unable to change their hardware transaction status. ",
        "properties": {
            "nonCompletedTransactions": {
                "name": "nonCompletedTransactions",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "typeArray": true
            },
            "averageDuration": {
                "name": "averageDuration",
                "type": "decimal",
                "form": "local",
                "doc": "Hardware transaction status average duration."
            },
            "friendlyName": {
                "name": "friendlyName",
                "type": "string",
                "form": "local",
                "doc": "Transaction status friendly name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Transaction status name."
            },
            "nonCompletedTransactionCount": {
                "name": "nonCompletedTransactionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Resource_Configuration": {
        "name": "SoftLayer_Resource_Configuration",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The Resource Configuration service enables the user to update data regarding a resource from which the request originates. It is a requirement that the request must have an authentication token as well as originate from the backend network of the resource. ",
        "methods": {
            "setOsPasswordFromEncrypted": {
                "name": "setOsPasswordFromEncrypted",
                "type": "boolean",
                "doc": "The setOsPasswordFromEncrypted method is used to set the operating system password from a key/pair encrypted password signed by SoftLayer. ",
                "parameters": [
                    {
                        "name": "encryptedPassword",
                        "type": "string"
                    }
                ]
            }
        }
    },
    "SoftLayer_Resource_Group": {
        "name": "SoftLayer_Resource_Group",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's resource group service allows users to access a broad overview of the resource group and its members ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Resource_Group",
                        "doc": "A skeleton SoftLayer_Resource_Group object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Resource_Group",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "ancestorGroups": {
                "name": "ancestorGroups",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group's associated group ancestors."
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Resource_Group_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group's associated attributes."
            },
            "hardwareMembers": {
                "name": "hardwareMembers",
                "type": "SoftLayer_Resource_Group_Member",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group's associated hardware members."
            },
            "members": {
                "name": "members",
                "type": "SoftLayer_Resource_Group_Member",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group's associated members."
            },
            "rootResourceGroup": {
                "name": "rootResourceGroup",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "doc": "A resource group's associated root resource group."
            },
            "subnetMembers": {
                "name": "subnetMembers",
                "type": "SoftLayer_Resource_Group_Member",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group's associated subnet members."
            },
            "template": {
                "name": "template",
                "type": "SoftLayer_Resource_Group_Template",
                "form": "relational",
                "doc": "A resource group's associated template."
            },
            "vlanMembers": {
                "name": "vlanMembers",
                "type": "SoftLayer_Resource_Group_Member",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group's associated VLAN members."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "A resource group's creation date."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A resource group's description."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A resource group's ID."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A resource group's keyname."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A resource group's name."
            },
            "rootResourceGroupId": {
                "name": "rootResourceGroupId",
                "type": "int",
                "form": "local"
            },
            "templateId": {
                "name": "templateId",
                "type": "int",
                "form": "local",
                "doc": "A resource group's template ID."
            },
            "ancestorGroupCount": {
                "name": "ancestorGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group's associated group ancestors."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group's associated attributes."
            },
            "hardwareMemberCount": {
                "name": "hardwareMemberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group's associated hardware members."
            },
            "memberCount": {
                "name": "memberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group's associated members."
            },
            "subnetMemberCount": {
                "name": "subnetMemberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group's associated subnet members."
            },
            "vlanMemberCount": {
                "name": "vlanMemberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group's associated VLAN members."
            }
        }
    },
    "SoftLayer_Resource_Group_Attribute": {
        "name": "SoftLayer_Resource_Group_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "group": {
                "name": "group",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "doc": "A resource group attribute's resource group."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Resource_Group_Attribute_Type",
                "form": "relational",
                "doc": "A resource group attribute's type."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "A resource group attribute's creation date."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A resource group attribute's ID."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A resource group attribute's value."
            }
        }
    },
    "SoftLayer_Resource_Group_Attribute_Type": {
        "name": "SoftLayer_Resource_Group_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Resource_Group_Descendant_Reference": {
        "name": "SoftLayer_Resource_Group_Descendant_Reference",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Resource_Group_Descendant_Reference data type simplifies the link between one SoftLayer_Resource_Group_Member object and all of its parents. \n\n",
        "properties": {
            "group": {
                "name": "group",
                "type": "SoftLayer_Resource_Group",
                "form": "relational"
            },
            "groupMember": {
                "name": "groupMember",
                "type": "SoftLayer_Resource_Group_Member",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Resource_Group_Member": {
        "name": "SoftLayer_Resource_Group_Member",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Resource_Group_Member_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group member's associated attributes."
            },
            "descendantMembers": {
                "name": "descendantMembers",
                "type": "SoftLayer_Resource_Group_Member",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group member's associated member descendants."
            },
            "group": {
                "name": "group",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "doc": "A resource group member's resource group."
            },
            "roles": {
                "name": "roles",
                "type": "SoftLayer_Resource_Group_Role",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group member's associated roles."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Resource_Group_Member_Type",
                "form": "relational",
                "doc": "A resource group member's type."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "A resource group member's creation date."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A resource group member's ID."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "A resource group member's status."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group member's associated attributes."
            },
            "descendantMemberCount": {
                "name": "descendantMemberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group member's associated member descendants."
            },
            "roleCount": {
                "name": "roleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group member's associated roles."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Attribute": {
        "name": "SoftLayer_Resource_Group_Member_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "member": {
                "name": "member",
                "type": "SoftLayer_Resource_Group_Member",
                "form": "relational",
                "doc": "A resource group member attribute's resource group member."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Resource_Group_Member_Attribute_Type",
                "form": "relational",
                "doc": "A resource group member attribute's type."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "A resource group member attribute's creation date."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A resource group member attribute's ID."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A resource group member attribute's value."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Attribute_Type": {
        "name": "SoftLayer_Resource_Group_Member_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Resource_Group_Member_CloudStack_Version3_Cluster": {
        "name": "SoftLayer_Resource_Group_Member_CloudStack_Version3_Cluster",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "doc": "A resource group member's associated cluster."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_CloudStack_Version3_Pod": {
        "name": "SoftLayer_Resource_Group_Member_CloudStack_Version3_Pod",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "doc": "A resource group member's associated pod."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_CloudStack_Version3_Zone": {
        "name": "SoftLayer_Resource_Group_Member_CloudStack_Version3_Zone",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "doc": "A resource group member's associated zone."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Hardware": {
        "name": "SoftLayer_Resource_Group_Member_Hardware",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "A resource group member's associated hardware."
            },
            "serverArbiterOnly": {
                "name": "serverArbiterOnly",
                "type": "SoftLayer_Resource_Group_Member_Attribute",
                "form": "relational",
                "doc": "A resource group hardware member's associated server arbiter-only state."
            },
            "serverHidden": {
                "name": "serverHidden",
                "type": "SoftLayer_Resource_Group_Member_Attribute",
                "form": "relational",
                "doc": "A resource group hardware member's associated server hidden state."
            },
            "serverPriority": {
                "name": "serverPriority",
                "type": "SoftLayer_Resource_Group_Member_Attribute",
                "form": "relational",
                "doc": "A resource group hardware member's associated server priority."
            },
            "serverSlaveDelay": {
                "name": "serverSlaveDelay",
                "type": "SoftLayer_Resource_Group_Member_Attribute",
                "form": "relational",
                "doc": "A resource group hardware member's associated server slave delay (in seconds)."
            },
            "serverTags": {
                "name": "serverTags",
                "type": "SoftLayer_Resource_Group_Member_Attribute",
                "form": "relational",
                "doc": "A resource group hardware member's associated server tags (in JSON format)."
            },
            "serverVotes": {
                "name": "serverVotes",
                "type": "SoftLayer_Resource_Group_Member_Attribute",
                "form": "relational",
                "doc": "A resource group hardware member's associated server vote count."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Network_Storage": {
        "name": "SoftLayer_Resource_Group_Member_Network_Storage",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "doc": "A resource group member's associated network storage."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Network_Subnet": {
        "name": "SoftLayer_Resource_Group_Member_Network_Subnet",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "A resource group member's associated network subnet."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Network_Vlan": {
        "name": "SoftLayer_Resource_Group_Member_Network_Vlan",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "A resource group member's associated network VLAN."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Resource_Group": {
        "name": "SoftLayer_Resource_Group_Member_Resource_Group",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Resource_Group",
                "form": "relational",
                "doc": "A resource group member's associated resource group."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Role_Link": {
        "name": "SoftLayer_Resource_Group_Member_Role_Link",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "groupMemberId": {
                "name": "groupMemberId",
                "type": "int",
                "form": "local",
                "doc": "A resource group member's ID."
            },
            "groupTemplateRoleId": {
                "name": "groupTemplateRoleId",
                "type": "int",
                "form": "local",
                "doc": "A resource group's template role ID."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Software_Component_Password": {
        "name": "SoftLayer_Resource_Group_Member_Software_Component_Password",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Software_Component_Password",
                "form": "relational",
                "doc": "A resource group member's associated software component password."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Type": {
        "name": "SoftLayer_Resource_Group_Member_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A resource group member's type description."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A resource group member's type keyname."
            }
        }
    },
    "SoftLayer_Resource_Group_Member_Virtual_Host_Pool": {
        "name": "SoftLayer_Resource_Group_Member_Virtual_Host_Pool",
        "base": "SoftLayer_Resource_Group_Member",
        "noservice": true
    },
    "SoftLayer_Resource_Group_Role": {
        "name": "SoftLayer_Resource_Group_Role",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "memberLinks": {
                "name": "memberLinks",
                "type": "SoftLayer_Resource_Group_Member_Role_Link",
                "form": "relational",
                "typeArray": true,
                "doc": "A resource group's role."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A resource group role's description."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A resource group role's ID."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A resource group role's keyname."
            },
            "memberLinkCount": {
                "name": "memberLinkCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a resource group's role."
            }
        }
    },
    "SoftLayer_Resource_Group_Template": {
        "name": "SoftLayer_Resource_Group_Template",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Resource_Group_Template",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Resource_Group_Template",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "children": {
                "name": "children",
                "type": "SoftLayer_Resource_Group_Template",
                "form": "relational",
                "typeArray": true
            },
            "members": {
                "name": "members",
                "type": "SoftLayer_Resource_Group_Template_Member",
                "form": "relational",
                "typeArray": true
            },
            "package": {
                "name": "package",
                "type": "SoftLayer_Product_Package",
                "form": "relational"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A resource group template's description."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A resource group template's keyname."
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "memberCount": {
                "name": "memberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Resource_Group_Template_Member": {
        "name": "SoftLayer_Resource_Group_Template_Member",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "role": {
                "name": "role",
                "type": "SoftLayer_Resource_Group_Role",
                "form": "relational"
            },
            "template": {
                "name": "template",
                "type": "SoftLayer_Resource_Group_Template",
                "form": "relational"
            },
            "maxQuantity": {
                "name": "maxQuantity",
                "type": "int",
                "form": "local"
            },
            "minQuantity": {
                "name": "minQuantity",
                "type": "int",
                "form": "local"
            },
            "roleId": {
                "name": "roleId",
                "type": "int",
                "form": "local"
            },
            "templateId": {
                "name": "templateId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Resource_Metadata": {
        "name": "SoftLayer_Resource_Metadata",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The Resource Metadata service enables the user to obtain information regarding the resource from which the request originates. Due to the requirement that the request originate from the backend network of the resource, no API key is necessary to perform the request. \n\nThe primary use of this service is to allow self-discovery for newly provisioned resources, enabling further automated setup by the user. ",
        "methods": {
            "getAccountId": {
                "name": "getAccountId",
                "type": "int",
                "doc": "The getAccountId retrieves the ID for the account on which the resource is located.",
                "noauth": true
            },
            "getBackendMacAddresses": {
                "name": "getBackendMacAddresses",
                "type": "string",
                "typeArray": true,
                "doc": "The getBackendMacAddresses method retrieves a list of backend MAC addresses for the resource",
                "noauth": true
            },
            "getDatacenter": {
                "name": "getDatacenter",
                "type": "string",
                "doc": "The getDatacenter method retrieves the name of the datacenter in which the resource is located.",
                "noauth": true
            },
            "getDatacenterId": {
                "name": "getDatacenterId",
                "type": "int",
                "doc": "The getDatacenterId retrieves the ID for the datacenter in which the resource is located.",
                "noauth": true
            },
            "getDomain": {
                "name": "getDomain",
                "type": "string",
                "doc": "The getDomain method retrieves the hostname for the resource.",
                "noauth": true
            },
            "getFrontendMacAddresses": {
                "name": "getFrontendMacAddresses",
                "type": "string",
                "typeArray": true,
                "doc": "The getFrontendMacAddresses method retrieves a list of frontend MAC addresses for the resource",
                "noauth": true
            },
            "getFullyQualifiedDomainName": {
                "name": "getFullyQualifiedDomainName",
                "type": "string",
                "doc": "The getFullyQualifiedDomainName method provides the user with a combined return which includes the hostname and domain for the resource. Because this method returns multiple pieces of information, it avoids the need to use multiple methods to return the desired information. ",
                "noauth": true
            },
            "getGlobalIdentifier": {
                "name": "getGlobalIdentifier",
                "type": "string",
                "doc": "The getId getGlobalIdentifier retrieves the globalIdentifier for the resource",
                "noauth": true
            },
            "getHostname": {
                "name": "getHostname",
                "type": "string",
                "doc": "The getHostname method retrieves the hostname for the resource.",
                "noauth": true
            },
            "getId": {
                "name": "getId",
                "type": "int",
                "doc": "The getId method retrieves the ID for the resource",
                "noauth": true
            },
            "getPrimaryBackendIpAddress": {
                "name": "getPrimaryBackendIpAddress",
                "type": "string",
                "doc": "The getPrimaryBackendIpAddress method retrieves the primary backend IP address for the resource",
                "noauth": true
            },
            "getPrimaryIpAddress": {
                "name": "getPrimaryIpAddress",
                "type": "string",
                "doc": "The getPrimaryIpAddress method retrieves the primary IP address for the resource. For resources with a frontend network, the frontend IP address will be returned. For resources that have been provisioned with only a backend network, the backend IP address will be returned, as a frontend address will not exist. ",
                "noauth": true
            },
            "getProvisionState": {
                "name": "getProvisionState",
                "type": "string",
                "doc": "The getProvisionState method retrieves the provision state of the resource. The provision state may be used to determine when it is considered safe to perform additional setup operations. The method returns 'PROCESSING' to indicate the provision is in progress and 'COMPLETE' when the provision is complete. ",
                "noauth": true
            },
            "getRouter": {
                "name": "getRouter",
                "type": "string",
                "doc": "The getRouter method will return the router associated with a network component. When the router is redundant, the hostname of the redundant group will be returned, rather than the router hostname. ",
                "noauth": true,
                "parameters": [
                    {
                        "name": "macAddress",
                        "type": "string",
                        "doc": "The MAC address to obtain the router for"
                    }
                ]
            },
            "getServiceResource": {
                "name": "getServiceResource",
                "type": "string",
                "doc": "The getServiceResource method retrieves a specific service resource associated with the resource. Service resources are additional resources that may be used by this resource. ",
                "noauth": true,
                "parameters": [
                    {
                        "name": "serviceName",
                        "type": "string",
                        "doc": "Name of the service to be returned"
                    },
                    {
                        "name": "index",
                        "type": "int",
                        "doc": "Index of the service to be returned, default 0 (the first)",
                        "defaultValue": 0
                    }
                ]
            },
            "getServiceResources": {
                "name": "getServiceResources",
                "type": "SoftLayer_Container_Resource_Metadata_ServiceResource",
                "typeArray": true,
                "doc": "The getServiceResources method retrieves all service resources associated with the resource. Service resources are additional resources that may be used by this resource. The output format is <type>=<address> for each service resource. ",
                "noauth": true
            },
            "getTags": {
                "name": "getTags",
                "type": "string",
                "typeArray": true,
                "doc": "The getTags method retrieves all tags associated with the resource. Tags are single keywords assigned to a resource that assist the user in identifying the resource and its roles when performing a simple search. Tags are assigned by any user with access to the resource. ",
                "noauth": true
            },
            "getUserMetadata": {
                "name": "getUserMetadata",
                "type": "string",
                "doc": "The getUserMetadata method retrieves metadata completed by users who interact with the resource. Metadata gathered using this method is unique to parameters set using the '''setUserMetadata''' method, which must be executed prior to completing this method. User metadata may also be provided while placing an order for a resource. ",
                "noauth": true
            },
            "getVlanIds": {
                "name": "getVlanIds",
                "type": "int",
                "typeArray": true,
                "doc": "The getVlanIds method returns a list of VLAN IDs for the network component matching the provided MAC address associated with the resource. For each return, the native VLAN will appear first, followed by any trunked VLANs associated with the network component. ",
                "noauth": true,
                "parameters": [
                    {
                        "name": "macAddress",
                        "type": "string",
                        "doc": "The MAC address to obtain the VLAN ids for"
                    }
                ]
            },
            "getVlans": {
                "name": "getVlans",
                "type": "int",
                "typeArray": true,
                "doc": "The getVlans method returns a list of VLAN numbers for the network component matching the provided MAC address associated with the resource. For each return, the native VLAN will appear first, followed by any trunked VLANs associated with the network component. ",
                "noauth": true,
                "parameters": [
                    {
                        "name": "macAddress",
                        "type": "string",
                        "doc": "The MAC address to obtain the VLAN numbers for"
                    }
                ]
            }
        }
    },
    "SoftLayer_Sales_Presale_Event": {
        "name": "SoftLayer_Sales_Presale_Event",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Presale events are related to datacenters or products that are not yet currently available, but will be in the near future. For example, if a new datacenter is opening in a month, a presale event may be created that allows customers to purchase server space in advance. When a presale order is placed, the server configuration is saved, but not provisioned until the presale end date - the server will not be available during this waiting period. Also, when a presale order is placed, the customer is not charged up front, but only when the presale order is actually approved and provisioned on the presale end date. \n\nThis server allows customer to view the currently-active presale events and their date ranges. This may allow a customer to plan early for purchasing a new product or server in a new datacenter. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Sales_Presale_Event",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Sales_Presale_Event",
                "doc": "'''getObject''' retrieves the [[SoftLayer_Sales_Presale_Event]] object whose id number corresponds to the id number of the init parameter passed to the SoftLayer_Sales_Presale_Event service. Customers may only retrieve presale events that are currently active. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The presale event data types indicate the information regarding an individual presale event. The '''locationId''' will indicate the datacenter associated with the presale event. The '''itemId''' will indicate the product item associated with a particular presale event - however these are more rare. The '''startDate''' and '''endDate''' will provide information regarding when the presale event is available for use. At the end of the presale event, the server or services purchased will be available once approved and provisioned. ",
        "properties": {
            "activeFlag": {
                "name": "activeFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag to indicate that the presale event is currently active. A presale event is active if the current time is between the start and end dates."
            },
            "expiredFlag": {
                "name": "expiredFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag to indicate that the presale event is expired. A presale event is expired if the current time is after the end date."
            },
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "doc": "The [[SoftLayer_Product_Item]] associated with the presale event."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The [[SoftLayer_Location]] associated with the presale event."
            },
            "orders": {
                "name": "orders",
                "type": "SoftLayer_Billing_Order",
                "form": "relational",
                "typeArray": true,
                "doc": "The orders ([[SoftLayer_Billing_Order]]) associated with this presale event that were created for the customer's account."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of the presale event."
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "End date of the presale event. Orders can be approved and provisioned after this date."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Presale event unique identifier."
            },
            "itemId": {
                "name": "itemId",
                "type": "int",
                "form": "local",
                "doc": "[[SoftLayer_Product_Item]] id associated with the presale event."
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "[[SoftLayer_Location]] id for the presale event."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Start date of the presale event. Orders cannot be approved before this date."
            },
            "orderCount": {
                "name": "orderCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the orders ([[SoftLayer_Billing_Order]]) associated with this presale event that were created for the customer's account."
            }
        }
    },
    "SoftLayer_Scale_Asset": {
        "name": "SoftLayer_Scale_Asset",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The base asset of a scale group. Assets are fixed, non-volatile units of a scale group. They are pinned to the group and will not be automatically added or removed. Their primary purpose is to provide information for the policies to use to determine when to scale members. ",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Asset",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "scaleGroup": {
                "name": "scaleGroup",
                "type": "SoftLayer_Scale_Group",
                "form": "relational",
                "doc": "The group this asset belongs to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this asset was created."
            },
            "deleteFlag": {
                "name": "deleteFlag",
                "type": "boolean",
                "form": "local",
                "doc": "When set and true any edit that happens on this object, be it calling edit on this directly or setting as a child while editing a parent object, will end up being a deletion. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An asset's internal identifier."
            },
            "scaleGroupId": {
                "name": "scaleGroupId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the group this asset belongs to."
            }
        }
    },
    "SoftLayer_Scale_Asset_Hardware": {
        "name": "SoftLayer_Scale_Asset_Hardware",
        "base": "SoftLayer_Scale_Asset",
        "serviceDoc": "A hardware asset is a fixed asset of scale group. It is not automatically scaled up or down in any way. Its purpose is to provide information (e.g. metrics) to policies to affect scaling decisions. Currently hardware assets are unsupported. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Asset_Hardware",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Asset_Hardware",
                        "doc": "The SoftLayer_Scale_Asset_Hardware object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Asset_Hardware",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware for this asset."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "relational",
                "doc": "The identifier of the hardware for this asset."
            }
        }
    },
    "SoftLayer_Scale_Asset_Virtual_Guest": {
        "name": "SoftLayer_Scale_Asset_Virtual_Guest",
        "base": "SoftLayer_Scale_Asset",
        "serviceDoc": "A guest asset is a fixed asset of scale group. It is not automatically scaled up or down in any way. Its purpose is to provide information (e.g. metrics) to policies to affect scaling decisions. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Asset_Virtual_Guest",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Asset_Virtual_Guest",
                        "doc": "The SoftLayer_Scale_Asset_Virtual_Guest object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Asset_Virtual_Guest",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "virtualGuest": {
                "name": "virtualGuest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The guest for this asset."
            },
            "virtualGuestId": {
                "name": "virtualGuestId",
                "type": "int",
                "form": "relational",
                "doc": "The identifier of the guest for this asset."
            }
        }
    },
    "SoftLayer_Scale_Group": {
        "name": "SoftLayer_Scale_Group",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A scale group can contain a number of guest members which can fluctuate up and down, staying within a defined range, manually or automatically based on policies given. Groups are set of VLANs to be placed behind. Groups can also have static hardware/guests pinned to the group. These static resources can be used to effect things like moving averages for policy triggers but are not counted as group members and are not subject to automatic reclaim. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Group",
                "doc": "Create a scale group. If minimumMemberCount is greater than zero or desiredMemberCount is present, guest members will be created right away. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Group",
                        "doc": "The SoftLayer_Scale_Group object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete this group. This can only be done on an empty, active group. This means that minimumMemberCount must be 0 since it is the only way for a group to have no group members. To delete a group and all of its members at the same time, use forceDeleteObject. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit this group. The name can be edited at any time. The minimumMemberCount and maximumMemberCount fields can also be edited at any time provided they don't force a scale up or scale down to bring the group into the proper range. Otherwise, the group's status must be active to set those fields. If the group member count is less than the new minimumMemberCount and the group is active, it will scale up the group members to reach the new minimum. Similarly if the group member count is greater than the new maximumMemberCount and the group is active, it will scale down the group members to reach the new maximum. \n\nWhen editing an active group, a special field can be provided: desiredMemberCount. When given, the group members are automatically scaled up or down to reach that number. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Group",
                        "doc": "A skeleton SoftLayer_Scale_Group object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "forceDeleteObject": {
                "name": "forceDeleteObject",
                "type": "boolean"
            },
            "getAvailableHourlyInstanceLimit": {
                "name": "getAvailableHourlyInstanceLimit",
                "type": "int",
                "doc": "This returns the number of hourly instances an account can add from this point. It is essentially the same as [[SoftLayer_Account/hourlyInstanceLimit|hourlyInstanceLimit]] minus existing hourly instances and ones spoken for as part of a scaling group (as determined by the group's maximum). This number can be used to help determine a maximum member count for a new group to ensure it won't go over the account limit. This can return a negative value if the current hourly instance count combined with the unused-but-possible count (based on other scale group maximums) is over the limit. ",
                "static": true
            },
            "getAvailableRegionalGroups": {
                "name": "getAvailableRegionalGroups",
                "type": "SoftLayer_Location_Group",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Group",
                "filterable": true,
                "maskable": true
            },
            "resume": {
                "name": "resume",
                "type": "void",
                "doc": "Resume this group. The group must be in a suspended status to do this. By doing this, the group's status will become active. "
            },
            "scale": {
                "name": "scale",
                "type": "SoftLayer_Scale_Member",
                "typeArray": true,
                "doc": "Scale this group up or down by the amount given. If the number is negative, the given amount of guest members are removed. Similarly, if the number is positive, the given amount of guest members are added. Note, this call will add or remove as much as asked for, but will NOT go beyond the limits set by minimumMemberCount and maximumMemberCount. The result is a collection of SoftLayer_Scale_Member instances that were either removed or added. This call can only be invoked on an active group and does not respect cooldown (i.e. even if in a cooldown period, the scaling will still occur). ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "delta",
                        "type": "int",
                        "doc": "Positive or negative value to scale."
                    }
                ]
            },
            "scaleTo": {
                "name": "scaleTo",
                "type": "SoftLayer_Scale_Member",
                "typeArray": true,
                "doc": "Scale this group up or down to the number given. This call will add or remove as many guests as necessary, but will NOT go beyond the limits set by minimumMemberCount and maximumMemberCount. This call and its result are the equivalent of calling scale(number - virtualGuestMemberCount). This call can only be invoked on an active group and does not respect cooldown (i.e. even if in a cooldown period, the scaling will still occur). ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "number",
                        "type": "int",
                        "doc": "The number to reach"
                    }
                ]
            },
            "suspend": {
                "name": "suspend",
                "type": "void",
                "doc": "Suspend this group. The group must be in an active status to do this. While suspended, a group cannot add or remove guest members for any reason. Changes to group settings that will cause a member to be added or deleted is also not allowed. "
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account for this scaling group."
            },
            "loadBalancers": {
                "name": "loadBalancers",
                "type": "SoftLayer_Scale_LoadBalancer",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of load balancers for this auto scale group."
            },
            "logs": {
                "name": "logs",
                "type": "SoftLayer_Scale_Group_Log",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of log entries for this group."
            },
            "networkVlans": {
                "name": "networkVlans",
                "type": "SoftLayer_Scale_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of VLANs for this auto scale group. VLANs are optional. This can contain a public or private VLAN or both. When a single VLAN for a public/private type is given it can be a non-purchased VLAN only if the minimumMemberCount on the group is >= 1. This can also contain any number of public/private purchased VLANs and members are staggered across them when scaled up."
            },
            "policies": {
                "name": "policies",
                "type": "SoftLayer_Scale_Policy",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of policies for this group. This can be empty."
            },
            "regionalGroup": {
                "name": "regionalGroup",
                "type": "SoftLayer_Location_Group_Regional",
                "form": "relational",
                "doc": "The regional group for this scale group."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Scale_Group_Status",
                "form": "relational",
                "doc": "The status for this scale group."
            },
            "terminationPolicy": {
                "name": "terminationPolicy",
                "type": "SoftLayer_Scale_Termination_Policy",
                "form": "relational",
                "doc": "The termination policy for this scaling group."
            },
            "virtualGuestAssets": {
                "name": "virtualGuestAssets",
                "type": "SoftLayer_Scale_Asset_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of guests that have been pinned to this group. Guest assets are only used for certain trigger checks such as resource watches. They do not count towards the auto scaling guest counts of this group in anyway and are never automatically added or removed."
            },
            "virtualGuestMembers": {
                "name": "virtualGuestMembers",
                "type": "SoftLayer_Scale_Member_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of guests that have been scaled with the group. When this group is active, the count of guests here is guaranteed to be between minimumMemberCount and maximumMemberCount inclusively."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the account assigned to this group."
            },
            "balancedTerminationFlag": {
                "name": "balancedTerminationFlag",
                "type": "boolean",
                "form": "local",
                "doc": "If this is true, this group will scale down members in a way to preserve the balance across VLANs. If there is ambiguity about which member to use to maintain balance, the terminationPolicy is used to resolve it. This is false by default and can only be set to true if there are multiple VLANs that are being balanced across. "
            },
            "cooldown": {
                "name": "cooldown",
                "type": "int",
                "form": "local",
                "doc": "The number of seconds this group will wait after lastActionDate before performing another action. Be advised, this can be overridden per policy. While strongly discouraged, a value of 0 effectively disables cooldown. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this group was created."
            },
            "desiredMemberCount": {
                "name": "desiredMemberCount",
                "type": "int",
                "form": "local",
                "doc": "This value is only available on the template for creating and editing a group. It will be null when retrieved. When this value is provided on create or edit, guests will be scaled up or down to meet this number. This number must be in the range provided by minimumMemberCount and maximumMemberCount. This value can only be present during create or edit when this group is active. Note, guests that are created as a result of this value can possibly be removed after cooldown by a policy. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A group's internal identifier."
            },
            "lastActionDate": {
                "name": "lastActionDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of the last action on this group or its create date"
            },
            "maximumMemberCount": {
                "name": "maximumMemberCount",
                "type": "int",
                "form": "local",
                "doc": "The greatest number of virtual guest members that are allowed on this group. Any attempts to add a guest member will fail if it will result in the total guest member count of this group to be above this number. If this number is edited and is less than the current guest member count, guests will be removed to at least be no greater than this number. "
            },
            "minimumMemberCount": {
                "name": "minimumMemberCount",
                "type": "int",
                "form": "local",
                "doc": "The fewest number of virtual guest members that are allowed on this group. Any attempts to remove a guest member will fail if it will result in the total guest member count of this group to be below this number. If this number is edited and is larger than the current guest member count, guests will be added to at least reach this number. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this group was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of this scale group. It must be unique on the account."
            },
            "regionalGroupId": {
                "name": "regionalGroupId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the regional group this scaling group is assigned to."
            },
            "suspendedFlag": {
                "name": "suspendedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "If true, this group is suspended."
            },
            "terminationPolicyId": {
                "name": "terminationPolicyId",
                "type": "int",
                "form": "local",
                "doc": "The termination policy for the group. This determines which member to choose to delete when scaling downwards. "
            },
            "virtualGuestMemberTemplate": {
                "name": "virtualGuestMemberTemplate",
                "type": "SoftLayer_Virtual_Guest",
                "form": "local",
                "doc": "This is the template to create guest members with. This is the same template accepted by the createObject call on SoftLayer_Virtual_Guest with some caveats. The hostname provided will have an arbitrary value appended to it for each guest created. Also, hourlyBillingFlag cannot be false, and if the datacenter is provided it must be in the region of this group. Finally, VLANs cannot be provided for the template, it will use VLANs provided to this group instead. \n\nNote, if this template is edited on an existing group the previous template values are not kept and are not considered during termination. This means a group's guest members could effectively be a hybrid of multiple templates because this value was changed after some guest members were created but before others were created. "
            },
            "loadBalancerCount": {
                "name": "loadBalancerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of load balancers for this auto scale group."
            },
            "logCount": {
                "name": "logCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of log entries for this group."
            },
            "networkVlanCount": {
                "name": "networkVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of VLANs for this auto scale group. VLANs are optional. This can contain a public or private VLAN or both. When a single VLAN for a public/private type is given it can be a non-purchased VLAN only if the minimumMemberCount on the group is >= 1. This can also contain any number of public/private purchased VLANs and members are staggered across them when scaled up."
            },
            "policyCount": {
                "name": "policyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of policies for this group. This can be empty."
            },
            "virtualGuestAssetCount": {
                "name": "virtualGuestAssetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of guests that have been pinned to this group. Guest assets are only used for certain trigger checks such as resource watches. They do not count towards the auto scaling guest counts of this group in anyway and are never automatically added or removed."
            },
            "virtualGuestMemberCount": {
                "name": "virtualGuestMemberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of guests that have been scaled with the group. When this group is active, the count of guests here is guaranteed to be between minimumMemberCount and maximumMemberCount inclusively."
            }
        }
    },
    "SoftLayer_Scale_Group_Log": {
        "name": "SoftLayer_Scale_Group_Log",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "scaleGroup": {
                "name": "scaleGroup",
                "type": "SoftLayer_Scale_Group",
                "form": "relational",
                "doc": "The group this log refers to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this event occurred."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A textual description of what happened during this action."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "This log's internal identifier."
            },
            "scaleGroupId": {
                "name": "scaleGroupId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the group this log refers to."
            }
        }
    },
    "SoftLayer_Scale_Group_Status": {
        "name": "SoftLayer_Scale_Group_Status",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The status of a scale group. This status affects what actions can occur on a group. The values can be: \n\n\n* ACTIVE - There are no actions execution for any members or assets of any type.\n* BUSY - There is an action executing for one of the members or assets, but that action is not a scaling action.\n* SCALING - At least one of the members is in the process of being created or destroyed.\n* SUSPENDED - The group has been placed in a suspended state by a user. It may only be resumed by a user. While in a\nsuspended state, a scale group cannot have any members added or deleted, or change settings of that group that would invoke such an action. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Scale_Group_Status",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Group_Status",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A status's internal identifier."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A status's programmatic name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A status's human-friendly name."
            }
        }
    },
    "SoftLayer_Scale_LoadBalancer": {
        "name": "SoftLayer_Scale_LoadBalancer",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A scale load balancer is a configuration for a load balancer virtual server that autoscaled members will be automatically configured for. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_LoadBalancer",
                "doc": "Create a load balancer for a scale group. Once created, the configuration will be used to configure the load balancers for autoscaled members. \n\nIf the given virtual server port exists for the given virtual IP address, it is reused here if all the other values match. Otherwise, the virtual server port will be created. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_LoadBalancer",
                        "doc": "The SoftLayer_Scale_LoadBalancer object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete this load balancer configuration. Note, this does not affect existing scaled members. Once deleted however, future scaled members will not be load balanced with this configuration. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit this load balancer configuration. Note, this does not affect existing scaled members. Once edited however, future scaled members will be load balanced with this configuration. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_LoadBalancer",
                        "doc": "A skeleton SoftLayer_Scale_LoadBalancer object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_LoadBalancer",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "allocationPercent": {
                "name": "allocationPercent",
                "type": "int",
                "form": "relational",
                "doc": "The percentage of connections allocated to this virtual server."
            },
            "healthCheck": {
                "name": "healthCheck",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Health_Check",
                "form": "relational",
                "doc": "The health check for this configuration."
            },
            "routingMethod": {
                "name": "routingMethod",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Method",
                "form": "relational",
                "doc": "The routing method."
            },
            "routingType": {
                "name": "routingType",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_Routing_Type",
                "form": "relational",
                "doc": "The routing type."
            },
            "scaleGroup": {
                "name": "scaleGroup",
                "type": "SoftLayer_Scale_Group",
                "form": "relational",
                "doc": "The group this load balancer configuration is for."
            },
            "virtualIpAddressId": {
                "name": "virtualIpAddressId",
                "type": "int",
                "form": "relational",
                "doc": "The ID of the virtual IP address."
            },
            "virtualServer": {
                "name": "virtualServer",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualServer",
                "form": "relational",
                "doc": "The virtual server for this configuration."
            },
            "virtualServerPort": {
                "name": "virtualServerPort",
                "type": "int",
                "form": "relational",
                "doc": "The port on the virtual server."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this load balancer configuration was created."
            },
            "deleteFlag": {
                "name": "deleteFlag",
                "type": "boolean",
                "form": "local",
                "doc": "When set and true any edit that happens on this object, be it calling edit on this directly or setting as a child while editing a parent object, will end up being a deletion. "
            },
            "healthCheckId": {
                "name": "healthCheckId",
                "type": "int",
                "form": "local",
                "doc": "The identifier for the health check of this load balancer configuration"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The load balancer configuration's internal identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this load balancer configuration was last modified."
            },
            "port": {
                "name": "port",
                "type": "int",
                "form": "local",
                "doc": "The port for this load balancer configuration."
            },
            "scaleGroupId": {
                "name": "scaleGroupId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the group this load balancer configuration applies to."
            },
            "virtualServerId": {
                "name": "virtualServerId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the virtual server this load balancer configuration uses."
            }
        }
    },
    "SoftLayer_Scale_Member": {
        "name": "SoftLayer_Scale_Member",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The base member of a scale group. Members are the volatile scaling units of a scale group. This cannot be used by itself, one of the more specific member types and services must be used. ",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Member",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "scaleGroup": {
                "name": "scaleGroup",
                "type": "SoftLayer_Scale_Group",
                "form": "relational",
                "doc": "The group this member belongs to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this member was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A member's internal identifier."
            },
            "scaleGroupId": {
                "name": "scaleGroupId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the group this member belongs to."
            }
        }
    },
    "SoftLayer_Scale_Member_Virtual_Guest": {
        "name": "SoftLayer_Scale_Member_Virtual_Guest",
        "base": "SoftLayer_Scale_Member",
        "serviceDoc": "A guest member is a scaled guest on a scale group. It is added either automatically or manually based on group settings. It can be removed here, but is usually best removed using one of the scaling features of the group as a whole. ",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete this group member. Note, this can only be done on an active group when it wont cause the group to go below its minimumMemberCount. This is not the recommended way to delete members. Instead, users should invoke scale(-1) on SoftLayer_Scale_Group so it can choose the best guest member to remove. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Member_Virtual_Guest",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "virtualGuest": {
                "name": "virtualGuest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The guest for this member."
            },
            "virtualGuestId": {
                "name": "virtualGuestId",
                "type": "int",
                "form": "relational",
                "doc": "The identifier of the guest for this member."
            }
        }
    },
    "SoftLayer_Scale_Network_Vlan": {
        "name": "SoftLayer_Scale_Network_Vlan",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A scale network VLAN is a VLAN that scaled members will be placed on.",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Network_Vlan",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Network_Vlan",
                        "doc": "The SoftLayer_Scale_Network_Vlan object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Network_Vlan",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The network VLAN to scale with."
            },
            "scaleGroup": {
                "name": "scaleGroup",
                "type": "SoftLayer_Scale_Group",
                "form": "relational",
                "doc": "The group this network VLAN is for."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this network VLAN reference was created."
            },
            "deleteFlag": {
                "name": "deleteFlag",
                "type": "boolean",
                "form": "local",
                "doc": "When set and true any edit that happens on this object, be it calling edit on this directly or setting as a child while editing a parent object, will end up being a deletion. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The network VLAN reference's internal identifier."
            },
            "networkVlanId": {
                "name": "networkVlanId",
                "type": "int",
                "form": "local",
                "doc": "The identifier for the VLAN to scale with."
            },
            "scaleGroupId": {
                "name": "scaleGroupId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the group this network VLAN reference applies to."
            }
        }
    },
    "SoftLayer_Scale_Policy": {
        "name": "SoftLayer_Scale_Policy",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A scale policy is a combination of triggers and actions that can occur on a scale group. When any trigger is satisfied (or the policy is manually triggered) the actions will be executed. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Policy",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy",
                        "doc": "The SoftLayer_Scale_Policy object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy",
                        "doc": "A skeleton SoftLayer_Scale_Policy object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy",
                "filterable": true,
                "maskable": true
            },
            "trigger": {
                "name": "trigger",
                "type": "SoftLayer_Scale_Member",
                "typeArray": true,
                "doc": "Manually trigger the actions on this policy. Returns members if the trigger has an effect, or an empty set of members if there is no effect. Sometimes this may not have an effect if the group is not active, in cooldown, or the result would violate the group range. If this call fails, the group is suspended, the failure logged, and a ticket is created. ",
                "maskable": true
            }
        },
        "properties": {
            "actions": {
                "name": "actions",
                "type": "SoftLayer_Scale_Policy_Action",
                "form": "relational",
                "typeArray": true,
                "doc": "The actions to perform upon any trigger hit. Currently this must be a single value."
            },
            "oneTimeTriggers": {
                "name": "oneTimeTriggers",
                "type": "SoftLayer_Scale_Policy_Trigger_OneTime",
                "form": "relational",
                "typeArray": true,
                "doc": "The one-time triggers to check for this group."
            },
            "repeatingTriggers": {
                "name": "repeatingTriggers",
                "type": "SoftLayer_Scale_Policy_Trigger_Repeating",
                "form": "relational",
                "typeArray": true,
                "doc": "The repeating triggers to check for this group."
            },
            "resourceUseTriggers": {
                "name": "resourceUseTriggers",
                "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse",
                "form": "relational",
                "typeArray": true,
                "doc": "The resource-use triggers to check for this group."
            },
            "scaleActions": {
                "name": "scaleActions",
                "type": "SoftLayer_Scale_Policy_Action_Scale",
                "form": "relational",
                "typeArray": true,
                "doc": "The scale actions to perform upon any trigger hit. Currently this must be a single value."
            },
            "scaleGroup": {
                "name": "scaleGroup",
                "type": "SoftLayer_Scale_Group",
                "form": "relational",
                "doc": "The group this policy is on."
            },
            "triggers": {
                "name": "triggers",
                "type": "SoftLayer_Scale_Policy_Trigger",
                "form": "relational",
                "typeArray": true,
                "doc": "The triggers to check for this group."
            },
            "cooldown": {
                "name": "cooldown",
                "type": "int",
                "form": "local",
                "doc": "The number of seconds this policy will wait after lastActionDate on group before performing another action. If not present, the group's cooldown value is used. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this policy was created."
            },
            "deleteFlag": {
                "name": "deleteFlag",
                "type": "boolean",
                "form": "local",
                "doc": "When set and true any edit that happens on this object, be it calling edit on this directly or setting as a child while editing a parent object, will end up being a deletion. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A policy's internal identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this policy was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of this policy. It must be unique within the group."
            },
            "scaleGroupId": {
                "name": "scaleGroupId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of the group this member belongs to."
            },
            "actionCount": {
                "name": "actionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the actions to perform upon any trigger hit. Currently this must be a single value."
            },
            "oneTimeTriggerCount": {
                "name": "oneTimeTriggerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the one-time triggers to check for this group."
            },
            "repeatingTriggerCount": {
                "name": "repeatingTriggerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the repeating triggers to check for this group."
            },
            "resourceUseTriggerCount": {
                "name": "resourceUseTriggerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the resource-use triggers to check for this group."
            },
            "scaleActionCount": {
                "name": "scaleActionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the scale actions to perform upon any trigger hit. Currently this must be a single value."
            },
            "triggerCount": {
                "name": "triggerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the triggers to check for this group."
            }
        }
    },
    "SoftLayer_Scale_Policy_Action": {
        "name": "SoftLayer_Scale_Policy_Action",
        "base": "SoftLayer_Entity",
        "serviceDoc": "An action to execute when a policy is triggered. Currently only one action can be associated with a policy and it must be created with the policy. ",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy_Action",
                        "doc": "A skeleton SoftLayer_Scale_Policy_Action object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy_Action",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "scalePolicy": {
                "name": "scalePolicy",
                "type": "SoftLayer_Scale_Policy",
                "form": "relational",
                "doc": "The policy this action is on."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Scale_Policy_Action_Type",
                "form": "relational",
                "doc": "The type of action."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this action was created."
            },
            "deleteFlag": {
                "name": "deleteFlag",
                "type": "boolean",
                "form": "local",
                "doc": "When set and true any edit that happens on this object, be it calling edit on this directly or setting as a child while editing a parent object, will end up being a deletion. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An action's internal identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Then this action was last modified."
            },
            "scalePolicyId": {
                "name": "scalePolicyId",
                "type": "int",
                "form": "local",
                "doc": "The policy this action is on."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The identifier of this action's type."
            }
        }
    },
    "SoftLayer_Scale_Policy_Action_Scale": {
        "name": "SoftLayer_Scale_Policy_Action_Scale",
        "base": "SoftLayer_Scale_Policy_Action",
        "serviceDoc": "A policy action to scale a group. A group can be scaled to an absolute member number or by a relative amount using a fixed number or a percentage. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Policy_Action_Scale",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy_Action_Scale",
                        "doc": "The SoftLayer_Scale_Policy_Action_Scale object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy_Action_Scale",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "amount": {
                "name": "amount",
                "type": "int",
                "form": "local",
                "doc": "The number to scale by. This number has different meanings based on type."
            },
            "scaleType": {
                "name": "scaleType",
                "type": "string",
                "form": "local",
                "doc": "The type of scale to perform. Possible values: \n\n\n* ABSOLUTE - Force the group to be set at a specific number of group members. This may include scaling up or\ndown or not at all. If the amount is outside of the min/max range of the group, an error occurs. \n* PERCENT - Scale the group up or down based on the positive or negative percentage given in amount. The\nnumber is a percent of the current group member count. Any extra percent after the decimal point is always ignored. If the resulting amount is zero, -1 or 1 is used depending upon whether the percentage was negative or positive respectively. \n* RELATIVE - Scale the group up or down by the positive or negative value given in amount."
            }
        }
    },
    "SoftLayer_Scale_Policy_Action_Type": {
        "name": "SoftLayer_Scale_Policy_Action_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "An action type",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Scale_Policy_Action_Type",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy_Action_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "This type's internal identifier."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "An action type's programmatic name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "An action type's human-friendly name."
            }
        }
    },
    "SoftLayer_Scale_Policy_Trigger": {
        "name": "SoftLayer_Scale_Policy_Trigger",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A trigger to determine when a policy's actions should be fired.",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Policy_Trigger",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy_Trigger",
                        "doc": "The SoftLayer_Scale_Policy_Trigger object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy_Trigger",
                        "doc": "A skeleton SoftLayer_Scale_Policy_Trigger object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy_Trigger",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "scalePolicy": {
                "name": "scalePolicy",
                "type": "SoftLayer_Scale_Policy",
                "form": "relational",
                "doc": "The policy this trigger is on."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Scale_Policy_Trigger_Type",
                "form": "relational",
                "doc": "The type of trigger."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this trigger was created."
            },
            "deleteFlag": {
                "name": "deleteFlag",
                "type": "boolean",
                "form": "local",
                "doc": "When set and true any edit that happens on this object, be it calling edit on this directly or setting as a child while editing a parent object, will end up being a deletion. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A trigger's internal identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this trigger was last modified."
            },
            "scalePolicyId": {
                "name": "scalePolicyId",
                "type": "int",
                "form": "local",
                "doc": "The policy this trigger is on."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The type of trigger this is."
            }
        }
    },
    "SoftLayer_Scale_Policy_Trigger_OneTime": {
        "name": "SoftLayer_Scale_Policy_Trigger_OneTime",
        "base": "SoftLayer_Scale_Policy_Trigger",
        "serviceDoc": "A trigger that will only execute once on the given date. If the auto scale group is suspended this will not occur. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Policy_Trigger_OneTime",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy_Trigger_OneTime",
                        "doc": "The SoftLayer_Scale_Policy_Trigger_OneTime object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy_Trigger_OneTime",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "date": {
                "name": "date",
                "type": "dateTime",
                "form": "local",
                "doc": "The date to execute the policy."
            }
        }
    },
    "SoftLayer_Scale_Policy_Trigger_Repeating": {
        "name": "SoftLayer_Scale_Policy_Trigger_Repeating",
        "base": "SoftLayer_Scale_Policy_Trigger",
        "serviceDoc": "A trigger that will execute every so often.",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Policy_Trigger_Repeating",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy_Trigger_Repeating",
                        "doc": "The SoftLayer_Scale_Policy_Trigger_Repeating object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy_Trigger_Repeating",
                "filterable": true,
                "maskable": true
            },
            "validateCronExpression": {
                "name": "validateCronExpression",
                "type": "void",
                "parameters": [
                    {
                        "name": "expression",
                        "type": "string"
                    }
                ]
            }
        },
        "properties": {
            "schedule": {
                "name": "schedule",
                "type": "string",
                "form": "local",
                "doc": "The cron-formatted schedule. This is run in the UTC timezone."
            }
        }
    },
    "SoftLayer_Scale_Policy_Trigger_ResourceUse": {
        "name": "SoftLayer_Scale_Policy_Trigger_ResourceUse",
        "base": "SoftLayer_Scale_Policy_Trigger",
        "serviceDoc": "A trigger that will only execute only when all guests on the group (both static and member) satisfy certain resource watches. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse",
                        "doc": "The SoftLayer_Scale_Policy_Trigger_ResourceUse object that you wish to create."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "watches": {
                "name": "watches",
                "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch",
                "form": "relational",
                "typeArray": true,
                "doc": "The resource watches for this trigger."
            },
            "watchCount": {
                "name": "watchCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the resource watches for this trigger."
            }
        }
    },
    "SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch": {
        "name": "SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This is a specific watch for a resource use policy trigger.",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch",
                        "doc": "The SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch",
                        "doc": "A skeleton SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAllPossibleAlgorithms": {
                "name": "getAllPossibleAlgorithms",
                "type": "string",
                "typeArray": true
            },
            "getAllPossibleMetrics": {
                "name": "getAllPossibleMetrics",
                "type": "string",
                "typeArray": true
            },
            "getAllPossibleOperators": {
                "name": "getAllPossibleOperators",
                "type": "string",
                "typeArray": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse_Watch",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "scalePolicyTrigger": {
                "name": "scalePolicyTrigger",
                "type": "SoftLayer_Scale_Policy_Trigger_ResourceUse",
                "form": "relational",
                "doc": "The trigger this watch is on."
            },
            "algorithm": {
                "name": "algorithm",
                "type": "string",
                "form": "local",
                "doc": "The algorithm to use when aggregating and comparing. Currently, the only value that is accepted is EWMA (Exponential Weighted Moving Average). EWMA is the default value if no value is given. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this watch was created."
            },
            "deleteFlag": {
                "name": "deleteFlag",
                "type": "boolean",
                "form": "local",
                "doc": "When set and true any edit that happens on this object, be it calling edit on this directly or setting as a child while editing a parent object, will end up being a deletion. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A watch's internal identifier."
            },
            "metric": {
                "name": "metric",
                "type": "string",
                "form": "local",
                "doc": "The metric to watch. Possible values: \n\n\n* host.cpu.percent - On a scale of 0 to 100, the percent CPU a guest is using.\n* host.network.backend.in and host.network.frontend.in - The network bytes-per-second incoming on the interface\nof either the frontend or backend network. \n* host.network.backend.out and host.network.frontend.out - The network bytes-per-second incoming on the interface\nof either the frontend or backend network. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "When this watch was last modified."
            },
            "operator": {
                "name": "operator",
                "type": "string",
                "form": "local",
                "doc": "The operator to use for comparison. The only two valid values are \">\" and \"<\". "
            },
            "period": {
                "name": "period",
                "type": "int",
                "form": "local",
                "doc": "The number of seconds the values are aggregated for when compared to value. If values are not retrieved steadily and consecutively for the length of this period, nothing is compared. "
            },
            "scalePolicyTriggerId": {
                "name": "scalePolicyTriggerId",
                "type": "int",
                "form": "local",
                "doc": "The trigger this watch is on."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value to compare against. Although the value is a string, validation will be done on the value for restrictions (such as numeric-only) based on the metric. "
            }
        }
    },
    "SoftLayer_Scale_Policy_Trigger_Type": {
        "name": "SoftLayer_Scale_Policy_Trigger_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A trigger type",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Scale_Policy_Trigger_Type",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Policy_Trigger_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A trigger type's internal identifier."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A trigger type's programmatic name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A trigger type's human-friendly name."
            }
        }
    },
    "SoftLayer_Scale_Termination_Policy": {
        "name": "SoftLayer_Scale_Termination_Policy",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A policy for automatic removal of members from a group. This policy determines which members are chosen first for removal. The values can be: \n\n\n* OLDEST - The oldest member is the next one removed.\n* NEWEST - The newest member is the next one removed.\n* CLOSEST_TO_NEXT_CHARGE - The member closest to the next charge is removed. This is helpful for billing because it\nwill let you remove the member you have gotten the most out of. Note, this is usually closest to the next billing hour. \n\n",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Scale_Termination_Policy",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Scale_Termination_Policy",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A termination policy's internal identifier."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A termination policy's programmatic name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A termination policy's human-friendly name."
            }
        }
    },
    "SoftLayer_Search": {
        "name": "SoftLayer_Search",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's account historical service allows users to access a broad overview of devices for that account and historical details concerning the overall function and performance of the devices on that account ",
        "methods": {
            "advancedSearch": {
                "name": "advancedSearch",
                "type": "SoftLayer_Container_Search_Result",
                "typeArray": true,
                "doc": "This method allows for searching for SoftLayer resources by simple terms and operators.  Fields that are used for searching will be available at sldn.softlayer.com. It returns a collection or array of [[SoftLayer_Container_Search_Result]] objects that have search metadata for each result and the resulting resource found. \n\nThe advancedSearch() method recognizes the special <code>_objectType:</code></b> quantifier in search strings.  See the documentation for the [[SoftLayer_Search/search]] method on how to restrict searches using object types. \n\nThe advancedSearch() method recognizes [[SoftLayer_Container_Search_ObjectType_Property]], which can also be used to limit searches.  Example: \n\n<code>_objectType:Type_1 propertyA:</code><i><code>value</code></i> \n\nA search string can specify multiple properties, separated with spaces. Example: \n\n<code>_objectType:Type_1 propertyA:</code><i><code>value</code></i> <code>propertyB:</code><i><code>value</code></i> \n\nA collection of available object types and their properties can be retrieved by calling the [[SoftLayer_Search/getObjectTypes]] method. \n\n\n#### Exact Match on Text Fields\nTo enforce an exact match on text fields, encapsulate the term in double quotes. For example, given a set of device host names: \n\n<ul> <li>baremetal-a</li> <li>baremetal-b</li> <li>a-virtual-guest</li> <li>b-virtual-guest</li> <li>edge-router</li> </ul> \n\nAn exact search (double-quote) for \"baremetal-a\" will return only the exact match of <u>baremetal-a</u>. \n\nA fuzzy search (no double-quote) for baremetal-a will return <u>baremetal</u>-<u>a</u>, <u>baremetal</u>-b, <u>a</u>-virtu<u>a</u>l-guest, b-virtu<u>a</u>l-guest but will omit edge-router. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "searchString",
                        "type": "string",
                        "doc": "A string with search terms."
                    }
                ]
            },
            "getObjectTypes": {
                "name": "getObjectTypes",
                "type": "SoftLayer_Container_Search_ObjectType",
                "typeArray": true,
                "doc": "This method returns a collection of [[SoftLayer_Container_Search_ObjectType]] containers that specify which indexed object types and properties are exposed for the current user.  These object types can be used to discover searchable data and to create or validate object index search strings. \n\n\n\nRefer to the [[SoftLayer_Search/search]] and [[SoftLayer_Search/advancedSearch]] methods for information on using object types and properties in search strings. ",
                "static": true
            },
            "search": {
                "name": "search",
                "type": "SoftLayer_Container_Search_Result",
                "typeArray": true,
                "doc": "This method allows for searching for SoftLayer resources by simple phrase. It returns a collection or array of [[SoftLayer_Container_Search_Result]] objects that have search metadata for each result and the resulting resource found. \n\nThis method recognizes the special <b><code>_objectType:</code></b> quantifier in search strings.  This quantifier can be used to restrict a search to specific object types.  Example usage: \n\n<code>_objectType:Type_1 </code><i><code>(other search terms...)</code></i> \n\nA search string can specify multiple object types, separated by commas (no spaces are permitted between the type names).  Example: \n\n<code>_objectType:Type_1,Type_2,Type_3 </code><i><code>(other search terms...)</code></i> \n\nIf the list of object types is prefixed with a hyphen or minus sign (-), then the specified types are excluded from the search.  Example: \n\n<code>_objectType:-Type_4,Type_5 </code><i><code>(other search terms...)</code></i> \n\nA collection of available object types can be retrieved by calling the [[SoftLayer_Search/getObjectTypes]] method. \n\n\n#### Exact Match on Text Fields\nTo enforce an exact match on text fields, encapsulate the term in double quotes. For example, given a set of device host names: \n\n<ul> <li>baremetal-a</li> <li>baremetal-b</li> <li>a-virtual-guest</li> <li>b-virtual-guest</li> <li>edge-router</li> </ul> \n\nAn exact search (double-quote) for \"baremetal-a\" will return only the exact match of <u>baremetal-a</u>. \n\nA fuzzy search (no double-quote) for baremetal-a will return <u>baremetal</u>-<u>a</u>, <u>baremetal</u>-b, <u>a</u>-virtu<u>a</u>l-guest, b-virtu<u>a</u>l-guest but will omit edge-router. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "searchString",
                        "type": "string",
                        "doc": "A string with search terms."
                    }
                ]
            }
        }
    },
    "SoftLayer_Security_Certificate": {
        "name": "SoftLayer_Security_Certificate",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Security_Certificate",
                "doc": "Add a certificate to your account for your records, or for use with various services. Only the certificate and private key are usually required. If your issuer provided an intermediate certificate, you must also provide that certificate. Details will be extracted from the certificate. Validation will be performed between the certificate and the private key as well as the certificate and the intermediate certificate, if provided. \n\nThe certificate signing request is not required, but can be provided for your records. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Security_Certificate",
                        "doc": "The SoftLayer_Security_Certificate object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Remove a certificate from your account. You may not remove a certificate with associated services. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Update a certificate. Modifications are restricted to the note and CSR if the are any services associated with the certificate. There are no modification restrictions for a certificate with no associated services. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Security_Certificate",
                        "doc": "A skeleton SoftLayer_Security_Certificate object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "findByCommonName": {
                "name": "findByCommonName",
                "type": "SoftLayer_Security_Certificate",
                "typeArray": true,
                "doc": "Locate certificates by their common name, traditionally a domain name. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "commonName",
                        "type": "string",
                        "doc": "the certificates common name"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Security_Certificate",
                "filterable": true,
                "maskable": true
            },
            "getPemFormat": {
                "name": "getPemFormat",
                "type": "string",
                "doc": "Retrieve the certificate in PEM (Privacy Enhanced Mail) format, which is a string containing all base64 encoded (DER) certificates delimited by -----BEGIN/END *----- clauses. "
            }
        },
        "properties": {
            "associatedServiceCount": {
                "name": "associatedServiceCount",
                "type": "int",
                "form": "relational",
                "doc": "The number of services currently associated with the certificate."
            },
            "lbaasListeners": {
                "name": "lbaasListeners",
                "type": "SoftLayer_Network_LBaaS_Listener",
                "form": "relational",
                "typeArray": true,
                "doc": "Cloud Load Balancer [LBaaS] listeners currently associated with the certificate."
            },
            "loadBalancerVirtualIpAddresses": {
                "name": "loadBalancerVirtualIpAddresses",
                "type": "SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "The load balancers virtual IP addresses currently associated with the certificate."
            },
            "certificate": {
                "name": "certificate",
                "type": "string",
                "form": "local",
                "doc": "The certificate provided publicly to clients requesting identity credentials. This certificate is usually signed by a source trusted by the client or a signature chain can be established between this certificate and the truested certificate. \n\nThis property may only be modified when no services are associated. See associatedServiceCount. "
            },
            "certificateSigningRequest": {
                "name": "certificateSigningRequest",
                "type": "string",
                "form": "local",
                "doc": "The signing request used to request a certificate authority generate a signed certificate. \n\nThis property may only be modified when no services are associated. See associatedServiceCount. "
            },
            "commonName": {
                "name": "commonName",
                "type": "string",
                "form": "local",
                "doc": "The common name (usually a domain name) encoded within the certificate. \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the certificate _record_ was created. The contents of the certificate may of changed since the record was created, so this does not represent anything about the certificate itself. \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The ID of the certificate record. "
            },
            "intermediateCertificate": {
                "name": "intermediateCertificate",
                "type": "string",
                "form": "local",
                "doc": "The intermediate certificate authorities certificate that completes the certificate chain for the issued certificate. Required when clients will only trust the root certificate. \n\nThis property may only be modified when no services are associated. See associatedServiceCount. "
            },
            "keySize": {
                "name": "keySize",
                "type": "int",
                "form": "local",
                "doc": "The size (number of bits) of the public key represented by the certificate. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the certificate _record_ was last modified.The contents of the certificate may of changed since the record was created, so this does not represent anything about the certificate itself. \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A note to help describe the certificate. "
            },
            "organizationName": {
                "name": "organizationName",
                "type": "string",
                "form": "local",
                "doc": "The organizational name encoded in the certificate. \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "privateKey": {
                "name": "privateKey",
                "type": "string",
                "form": "local",
                "doc": "The private key in the key/certificate pair. \n\nThis property may only be modified when no services are associated. See associatedServiceCount. "
            },
            "validityBegin": {
                "name": "validityBegin",
                "type": "dateTime",
                "form": "local",
                "doc": "The UTC timestamp representing the beginning of the certificate's validity \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "validityDays": {
                "name": "validityDays",
                "type": "int",
                "form": "local",
                "doc": "The number of days remaining in the validity period for the certificate. \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "validityEnd": {
                "name": "validityEnd",
                "type": "dateTime",
                "form": "local",
                "doc": "The UTC timestamp representing the end of the certificate's validity period. \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "lbaasListenerCount": {
                "name": "lbaasListenerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of cloud Load Balancer [LBaaS] listeners currently associated with the certificate."
            },
            "loadBalancerVirtualIpAddressCount": {
                "name": "loadBalancerVirtualIpAddressCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the load balancers virtual IP addresses currently associated with the certificate."
            }
        }
    },
    "SoftLayer_Security_Certificate_Entry": {
        "name": "SoftLayer_Security_Certificate_Entry",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "certificateId": {
                "name": "certificateId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the certificate record. "
            },
            "commonName": {
                "name": "commonName",
                "type": "string",
                "form": "local",
                "doc": "The common name (usually a domain name) encoded within the certificate. "
            },
            "keySize": {
                "name": "keySize",
                "type": "int",
                "form": "local",
                "doc": "The size (number of bits) of the public key represented by the certificate. "
            },
            "organizationName": {
                "name": "organizationName",
                "type": "string",
                "form": "local",
                "doc": "The organizational name encoded in the certificate. "
            },
            "validityBegin": {
                "name": "validityBegin",
                "type": "dateTime",
                "form": "local",
                "doc": "The UTC timestamp representing the beginning of the certificate's validity "
            },
            "validityDays": {
                "name": "validityDays",
                "type": "int",
                "form": "local",
                "doc": "The number of days remaining in the validity period for the certificate. "
            },
            "validityEnd": {
                "name": "validityEnd",
                "type": "dateTime",
                "form": "local",
                "doc": "The UTC timestamp representing the end of the certificate's validity period. "
            }
        }
    },
    "SoftLayer_Security_Certificate_Request": {
        "name": "SoftLayer_Security_Certificate_Request",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Security_Certificate_Request holds your SSL certificate request data. This data is used to manage your SSL certificate order with a Certificate Authority. \n\nTo create an SSL certificate order, pass a completed SoftLayer_Container_Product_Order_Security_Certificate to SoftLayer_Product_Order::placeOrder. ",
        "methods": {
            "cancelSslOrder": {
                "name": "cancelSslOrder",
                "type": "boolean",
                "doc": "Cancels a pending SSL certificate order at the Certificate Authority "
            },
            "getAdministratorEmailDomains": {
                "name": "getAdministratorEmailDomains",
                "type": "string",
                "typeArray": true,
                "doc": "Gets the email domains that can be used to validate a certificate to a domain. ",
                "static": true,
                "parameters": [
                    {
                        "name": "commonName",
                        "type": "string"
                    }
                ]
            },
            "getAdministratorEmailPrefixes": {
                "name": "getAdministratorEmailPrefixes",
                "type": "string",
                "typeArray": true,
                "doc": "Gets the email accounts that can be used to validate a certificate to a domain. ",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Security_Certificate_Request",
                "filterable": true,
                "maskable": true
            },
            "getPreviousOrderData": {
                "name": "getPreviousOrderData",
                "type": "SoftLayer_Container_Product_Order_Security_Certificate",
                "doc": "Returns previous SSL certificate order data. You can use this data for to place a renewal order for a completed SSL certificate. "
            },
            "getSslCertificateRequests": {
                "name": "getSslCertificateRequests",
                "type": "SoftLayer_Security_Certificate_Request",
                "typeArray": true,
                "doc": "Returns all the SSL certificate requests. ",
                "static": true,
                "filterable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "SoftLayer account id"
                    }
                ]
            },
            "resendEmail": {
                "name": "resendEmail",
                "type": "boolean",
                "doc": "A Certificate Authority sends out various emails to your domain administrator or your technical contact. Use this service to have these emails re-sent. ",
                "parameters": [
                    {
                        "name": "emailType",
                        "type": "string",
                        "doc": "Valid email types are: ApproverEmail, FulfillmentEmail"
                    }
                ]
            },
            "validateCsr": {
                "name": "validateCsr",
                "type": "boolean",
                "doc": "Allows you to validate a Certificate Signing Request (CSR) required for an SSL certificate with the certificate authority (CA).  This method sends the CSR, the length of the subscription in months, the certificate type, and the server type for validation against requirements of the CA.  Returns true if valid. \n\nMore information on CSR generation can be found at: [http://en.wikipedia.org/wiki/Certificate_signing_request Wikipedia] [https://www.digicert.com/csr-creation.htm DigiCert] ",
                "static": true,
                "parameters": [
                    {
                        "name": "csr",
                        "type": "string",
                        "doc": "The encoded CSR data string."
                    },
                    {
                        "name": "validityMonths",
                        "type": "int",
                        "doc": "The length of the certificate subscription desired in months. Typically, 12 or 24 months."
                    },
                    {
                        "name": "itemId",
                        "type": "int",
                        "doc": "The product item identifier for the type of SSL certificate."
                    },
                    {
                        "name": "serverType",
                        "type": "string",
                        "doc": "The type of server in which the certificate will be installed."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Security_Certificate_Request data type is used to view details about your SSL certificate order. This contains data that is required by a Certificate Authority to place an SSL certificate order. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account to which a SSL certificate request belongs."
            },
            "order": {
                "name": "order",
                "type": "SoftLayer_Billing_Order",
                "form": "relational",
                "doc": "The order contains the information related to a SSL certificate request."
            },
            "orderItem": {
                "name": "orderItem",
                "type": "SoftLayer_Billing_Order_Item",
                "form": "relational",
                "doc": "The associated order item for this SSL certificate request."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Security_Certificate_Request_Status",
                "form": "relational",
                "doc": "The status of a SSL certificate request."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "This is a reference to your SoftLayer account."
            },
            "approverEmailAddress": {
                "name": "approverEmailAddress",
                "type": "string",
                "form": "local",
                "doc": "The email address of a person who will approve your SSL certificate order. This is usually an email address of your domain administrator."
            },
            "certificateSigningRequest": {
                "name": "certificateSigningRequest",
                "type": "string",
                "form": "local",
                "doc": "A Certificate Signing Request (CSR) string"
            },
            "commonName": {
                "name": "commonName",
                "type": "string",
                "form": "local",
                "doc": "A domain name of a SSL certificate request"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a SSL certificate request was created."
            },
            "effectiveDate": {
                "name": "effectiveDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of your SSL certificate went into effect"
            },
            "expirationDate": {
                "name": "expirationDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The expiration date of your SSL certificate"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of an SSL certificate request"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a SSL certificate request was last modified."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "A status id reflecting the state of a SSL certificate request"
            },
            "technicalContactEmailAddress": {
                "name": "technicalContactEmailAddress",
                "type": "string",
                "form": "local",
                "doc": "The technical contact email address."
            }
        }
    },
    "SoftLayer_Security_Certificate_Request_ServerType": {
        "name": "SoftLayer_Security_Certificate_Request_ServerType",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Allows for retrieving the available SSL certificate server types. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Security_Certificate_Request_ServerType",
                "typeArray": true,
                "doc": "Returns all SSL certificate server types, which are passed in on a [[SoftLayer_Container_Product_Order_Security_Certificate|certificate order]]. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Security_Certificate_Request_ServerType",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Represents a server type that can be specified when ordering an SSL certificate. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the certificate server type."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the certificate server type."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the certificate server type."
            },
            "value": {
                "name": "value",
                "type": "int",
                "form": "local",
                "doc": "The value of the certificate server type."
            }
        }
    },
    "SoftLayer_Security_Certificate_Request_Status": {
        "name": "SoftLayer_Security_Certificate_Request_Status",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Security_Certificate_Request_Status indicates the status of your SSL certificate request. When you submit an SSL certificate order, the associated certificate request will be in the \"Pending CA Approval\" status. This is the only status in which can cancel your order. \n\nOnce the certificate authority (CA) approves your order, the status will change to \"Approved\". Once your order is approved, you will receive your fulfillment email from the CA. The email will contain your SSL certificate. SoftLayer does not store your SSL certificate in our system. If you lose the email from your CA, you can have the fulfillment email sent again via the SoftLayer customer portal or by using [[SoftLayer_Security_Certificate_Request/resendEmail|resendEmail]]. Your approved order will be picked up by SoftLayer's billing system and it will complete the payment process. Finally, your order will change to \"Complete\" status when the payment process is successful. \n\nThere might be a chance that your SSL certificate order could rejected by a CA. Our automated system will put a rejected order into \"Canceled\" status. You can contact SoftLayer Support for more details. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Security_Certificate_Request_Status",
                "filterable": true,
                "maskable": true
            },
            "getSslRequestStatuses": {
                "name": "getSslRequestStatuses",
                "type": "SoftLayer_Security_Certificate_Request_Status",
                "typeArray": true,
                "doc": "Returns all SSL certificate request status objects ",
                "static": true,
                "maskable": true
            }
        },
        "typeDoc": "Represents the status of an SSL certificate request. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of a SSL certificate request status"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of an SSL certificate request status"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The status name"
            }
        }
    },
    "SoftLayer_Security_Directory_Service_Host_Xref_Hardware": {
        "name": "SoftLayer_Security_Directory_Service_Host_Xref_Hardware",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Security_Directory_Service_Host_Xref_Hardware extends the [[SoftLayer_Security_Directory_Service_Host_Xref]] data type to include hardware specific properties. ",
        "properties": {
            "host": {
                "name": "host",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware object."
            }
        }
    },
    "SoftLayer_Security_Level": {
        "name": "SoftLayer_Security_Level",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Security_Level data type contains the security level restriction for the account ",
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The unique name of the security level the account is under"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the security level the account is under"
            }
        }
    },
    "SoftLayer_Security_SecureTransportCipher": {
        "name": "SoftLayer_Security_SecureTransportCipher",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Encryption algorithm intended for use in SSL/TLS communications",
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Unique identifier for the encryption algorithm"
            }
        }
    },
    "SoftLayer_Security_SecureTransportProtocol": {
        "name": "SoftLayer_Security_SecureTransportProtocol",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Protocol intended for use in secure communications",
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Unique identifier for the protocol"
            },
            "supportedSecureTransportCiphers": {
                "name": "supportedSecureTransportCiphers",
                "type": "SoftLayer_Security_SecureTransportCipher",
                "form": "local",
                "typeArray": true,
                "doc": "List of the supported encryption ciphers"
            }
        }
    },
    "SoftLayer_Security_Ssh_Key": {
        "name": "SoftLayer_Security_Ssh_Key",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Security_Ssh_Key",
                "doc": "Add a ssh key to your account for use during server provisioning and os reloads. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Security_Ssh_Key",
                        "doc": "The SoftLayer_Security_Ssh_Key object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Remove a ssh key from your account. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Update a ssh key. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Security_Ssh_Key",
                        "doc": "A skeleton SoftLayer_Security_Ssh_Key object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Security_Ssh_Key",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "blockDeviceTemplateGroups": {
                "name": "blockDeviceTemplateGroups",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "The image template groups that are linked to an SSH key."
            },
            "softwarePasswords": {
                "name": "softwarePasswords",
                "type": "SoftLayer_Software_Component_Password",
                "form": "relational",
                "typeArray": true,
                "doc": "The OS root users that are linked to an SSH key."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a ssh key was added. \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "fingerprint": {
                "name": "fingerprint",
                "type": "string",
                "form": "local",
                "doc": "A short sequence of bytes used to authenticate or lookup a longer ssh key. This will automatically be generated upon adding or modifying the ssh key. \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The ID of the ssh key record. "
            },
            "key": {
                "name": "key",
                "type": "string",
                "form": "local",
                "doc": "The ssh key. "
            },
            "label": {
                "name": "label",
                "type": "string",
                "form": "local",
                "doc": "A descriptive name used to identify a ssh key. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a ssh key was last modified. \n\nThis property is read only. Changes made will be silently ignored. "
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A small note about a ssh key to use at your discretion. "
            },
            "blockDeviceTemplateGroupCount": {
                "name": "blockDeviceTemplateGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the image template groups that are linked to an SSH key."
            },
            "softwarePasswordCount": {
                "name": "softwarePasswordCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the OS root users that are linked to an SSH key."
            }
        }
    },
    "SoftLayer_Service_External_Resource": {
        "name": "SoftLayer_Service_External_Resource",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Service_External_Resource is a placeholder that references a service being provided outside of the standard SoftLayer system. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The customer account that is consuming the service."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The customer account that is consuming the related service."
            },
            "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "string",
                "form": "local",
                "doc": "The unique identifier in the service provider's system."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An external resource's unique identifier in the SoftLayer system."
            }
        }
    },
    "SoftLayer_Service_Provider": {
        "name": "SoftLayer_Service_Provider",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Software_AccountLicense": {
        "name": "SoftLayer_Software_AccountLicense",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Software_AccountLicense is the application class that handles a special type of Software License.  Most software licenses are licensed to a specific hardware ID or IP address, this is tied to an account. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Software_AccountLicense",
                "typeArray": true,
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Software_AccountLicense",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Software_AccountLicense is a class that represents software licenses that are tied only to a customer's account and not to any particular hardware, IP address, etc. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The customer account this Account License belongs to."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for a software account license."
            },
            "softwareDescription": {
                "name": "softwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "The SoftLayer_Software_Description that this account license is for."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the SoftLayer Account to which this Account License belongs to."
            },
            "capacity": {
                "name": "capacity",
                "type": "string",
                "form": "local",
                "doc": "Some Account Licenses have capacity information such as CPU specified in the units key. This provides the numerical representation of the capacity of the units. "
            },
            "key": {
                "name": "key",
                "type": "string",
                "form": "local",
                "doc": "The License Key for this specific Account License."
            },
            "units": {
                "name": "units",
                "type": "string",
                "form": "local",
                "doc": "The unit of measurement that an account license has the capacity of."
            }
        }
    },
    "SoftLayer_Software_Component": {
        "name": "SoftLayer_Software_Component",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every installed piece of software is represented in the API as a \"Software Component.\"  This is the base class for software components, exposing basic functionality for software components.  From any Software Component, through this service, you can get the hardware a component is installed upon, the license that this component is governed by, the current access passwords for a component, and the history of previous passwords for a component. ",
        "methods": {
            "getLicenseFile": {
                "name": "getLicenseFile",
                "type": "string",
                "doc": "Attempt to retrieve the file associated with a software component.  If the software component does not support downloading license files an exception will be thrown. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Software_Component",
                "doc": "getObject retrieves the SoftLayer_Software_Component object whose ID corresponds to the ID number of the init parameter passed to the SoftLayer_Software_Component service. \n\nThe best way to get software components is through getSoftwareComponents from the Hardware service. ",
                "filterable": true,
                "maskable": true
            },
            "getVendorSetUpConfiguration": {
                "name": "getVendorSetUpConfiguration",
                "type": "string"
            }
        },
        "typeDoc": "A SoftLayer_Software_Component ties the installation of a specific piece of software onto a specific piece of hardware. \n\nSoftLayer_Software_Component works with SoftLayer_Software_License and SoftLayer_Software_Description to tie this all together. \n\n<ul> <li>SoftLayer_Software_Component is the installation of a specific piece of software onto a specific piece of hardware in accordance to a software license. <ul> <li>SoftLayer_Software_License dictates when and how a specific piece of software may be installed onto a piece of hardware. <ul> <li>SoftLayer_Software_Description describes a specific piece of software which can be installed onto hardware in accordance with it's license agreement. </li></ul></li></ul></li></ul> ",
        "properties": {
            "averageInstallationDuration": {
                "name": "averageInstallationDuration",
                "type": "unsignedLong",
                "form": "relational",
                "doc": "The average amount of time that a software component takes to install."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for a software component."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware this Software Component is installed upon."
            },
            "passwordHistory": {
                "name": "passwordHistory",
                "type": "SoftLayer_Software_Component_Password_History",
                "form": "relational",
                "typeArray": true,
                "doc": "History Records for Software Passwords."
            },
            "passwords": {
                "name": "passwords",
                "type": "SoftLayer_Software_Component_Password",
                "form": "relational",
                "typeArray": true,
                "doc": "Username/Password pairs used for access to this Software Installation."
            },
            "softwareDescription": {
                "name": "softwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "The Software Description of this Software Component."
            },
            "softwareLicense": {
                "name": "softwareLicense",
                "type": "SoftLayer_Software_License",
                "form": "relational",
                "doc": "The License this Software Component uses."
            },
            "virtualGuest": {
                "name": "virtualGuest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The virtual guest this software component is installed upon."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "Hardware Identification Number for the server this Software Component is installed upon."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An ID number identifying this Software Component (Software Installation)"
            },
            "manufacturerActivationCode": {
                "name": "manufacturerActivationCode",
                "type": "string",
                "form": "local",
                "doc": "The manufacturer code that is needed to activate a license."
            },
            "manufacturerLicenseInstance": {
                "name": "manufacturerLicenseInstance",
                "type": "string",
                "form": "local",
                "doc": "A license key for this specific installation of software, if it is needed."
            },
            "passwordCount": {
                "name": "passwordCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of username/Password pairs used for access to this Software Installation."
            },
            "passwordHistoryCount": {
                "name": "passwordHistoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of history Records for Software Passwords."
            }
        }
    },
    "SoftLayer_Software_Component_Analytics": {
        "name": "SoftLayer_Software_Component_Analytics",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of Software Component:  An analytics instance. Analytics installations have a specific default ports and patterns for usernames and passwords.  Defaults are initiated by this object. "
    },
    "SoftLayer_Software_Component_Analytics_Urchin": {
        "name": "SoftLayer_Software_Component_Analytics_Urchin",
        "base": "SoftLayer_Software_Component_Analytics",
        "noservice": true,
        "typeDoc": "This object specifies a specific Software Component:  An Urchin instance. Urchin installations have a specific default port (9999) and a pattern for usernames and passwords.  Defaults are initiated by this object. "
    },
    "SoftLayer_Software_Component_AntivirusSpyware": {
        "name": "SoftLayer_Software_Component_AntivirusSpyware",
        "base": "SoftLayer_Software_Component",
        "serviceDoc": "This object specifies a specific type of Software Component:  An Anti-virus/spyware instance. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Software_Component_AntivirusSpyware",
                "filterable": true,
                "maskable": true
            },
            "updateAntivirusSpywarePolicy": {
                "name": "updateAntivirusSpywarePolicy",
                "type": "boolean",
                "doc": "Update an anti-virus/spyware policy. The policy options that it accepts are the following: \n*1 - Minimal\n*2 - Relaxed\n*3 - Default\n*4 - High\n*5 - Ultimate",
                "parameters": [
                    {
                        "name": "newPolicy",
                        "type": "string",
                        "doc": "The new anti-virus policy."
                    },
                    {
                        "name": "enforce",
                        "type": "boolean",
                        "doc": "Enforce the updated policy",
                        "defaultValue": false
                    }
                ]
            }
        },
        "typeDoc": "This object specifies a specific type of Software Component:  An Anti-virus/spyware instance. Anti-virus/spyware installations have specific properties and methods such as SoftLayer_Software_Component_AntivirusSpyware::updateAntivirusSpywarePolicy. Defaults are initiated by this object. "
    },
    "SoftLayer_Software_Component_AntivirusSpyware_Mcafee": {
        "name": "SoftLayer_Software_Component_AntivirusSpyware_Mcafee",
        "base": "SoftLayer_Software_Component_AntivirusSpyware",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_AntivirusSpyware_Mcafee represents a single anti-virus/spyware software component. "
    },
    "SoftLayer_Software_Component_AntivirusSpyware_Mcafee_Epo_Version36": {
        "name": "SoftLayer_Software_Component_AntivirusSpyware_Mcafee_Epo_Version36",
        "base": "SoftLayer_Software_Component_AntivirusSpyware_Mcafee",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_AntivirusSpyware_Mcafee_Epo_Version36 data type represents a single McAfee Secure anti-virus/spyware software component that uses the ePolicy Orchestrator version 3.6 backend. ",
        "properties": {
            "agentDetails": {
                "name": "agentDetails",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Agent_Details",
                "form": "relational",
                "doc": "The virus scan agent details."
            },
            "currentAntivirusPolicy": {
                "name": "currentAntivirusPolicy",
                "type": "int",
                "form": "relational",
                "doc": "The current anti-virus policy."
            },
            "dataFileVersion": {
                "name": "dataFileVersion",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Product_Properties",
                "form": "relational",
                "doc": "The virus definition file version."
            },
            "latestAccessProtectionEvents": {
                "name": "latestAccessProtectionEvents",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event_AccessProtection",
                "form": "relational",
                "typeArray": true,
                "doc": "The latest access protection events."
            },
            "latestAntivirusEvents": {
                "name": "latestAntivirusEvents",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event",
                "form": "relational",
                "typeArray": true,
                "doc": "The latest anti-virus events."
            },
            "latestSpywareEvents": {
                "name": "latestSpywareEvents",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Antivirus_Event",
                "form": "relational",
                "typeArray": true,
                "doc": "The latest spyware events."
            },
            "transactionStatus": {
                "name": "transactionStatus",
                "type": "string",
                "form": "relational",
                "doc": "The current transaction status of a server."
            },
            "epoVersion": {
                "name": "epoVersion",
                "type": "string",
                "form": "local",
                "doc": "The version of ePolicy Orchestrator that the anti-virus/spyware client communicates with."
            },
            "latestAccessProtectionEventCount": {
                "name": "latestAccessProtectionEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the latest access protection events."
            },
            "latestAntivirusEventCount": {
                "name": "latestAntivirusEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the latest anti-virus events."
            },
            "latestSpywareEventCount": {
                "name": "latestSpywareEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the latest spyware events."
            }
        }
    },
    "SoftLayer_Software_Component_AntivirusSpyware_Mcafee_Epo_Version45": {
        "name": "SoftLayer_Software_Component_AntivirusSpyware_Mcafee_Epo_Version45",
        "base": "SoftLayer_Software_Component_AntivirusSpyware_Mcafee",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_AntivirusSpyware_Mcafee_Epo_Version45 data type represents a single McAfee Secure anti-virus/spyware software component that uses the ePolicy Orchestrator version 4.5 backend. ",
        "properties": {
            "agentDetails": {
                "name": "agentDetails",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Agent_Details",
                "form": "relational",
                "doc": "The virus scan agent details."
            },
            "currentAntivirusPolicy": {
                "name": "currentAntivirusPolicy",
                "type": "int",
                "form": "relational",
                "doc": "The current anti-virus policy."
            },
            "dataFileVersion": {
                "name": "dataFileVersion",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Product_Properties",
                "form": "relational",
                "doc": "The virus definition file version."
            },
            "transactionStatus": {
                "name": "transactionStatus",
                "type": "string",
                "form": "relational",
                "doc": "The current transaction status of a server."
            },
            "epoVersion": {
                "name": "epoVersion",
                "type": "string",
                "form": "local",
                "doc": "The version of ePolicy Orchestrator that the anti-virus/spyware client communicates with."
            }
        }
    },
    "SoftLayer_Software_Component_AntivirusSpyware_Mcafee_Epo_Version51": {
        "name": "SoftLayer_Software_Component_AntivirusSpyware_Mcafee_Epo_Version51",
        "base": "SoftLayer_Software_Component_AntivirusSpyware_Mcafee",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_AntivirusSpyware_Mcafee_Epo_Version51 data type represents a single McAfee Secure anti-virus/spyware software component that contacts the McAfee ePO Server version 5.1 backend. ",
        "properties": {
            "agentDetails": {
                "name": "agentDetails",
                "type": "McAfee_Epolicy_Orchestrator_Version51_Agent_Details",
                "form": "relational",
                "doc": "The virus scan agent details."
            },
            "currentAntivirusPolicy": {
                "name": "currentAntivirusPolicy",
                "type": "int",
                "form": "relational",
                "doc": "The current anti-virus policy."
            },
            "dataFileVersion": {
                "name": "dataFileVersion",
                "type": "McAfee_Epolicy_Orchestrator_Version51_Product_Properties",
                "form": "relational",
                "doc": "The virus definition file version."
            },
            "epoVersion": {
                "name": "epoVersion",
                "type": "string",
                "form": "local",
                "doc": "The version of  McAfee ePO Server that the anti-virus/spyware client communicates with."
            },
            "transactionStatus": {
                "name": "transactionStatus",
                "type": "string",
                "form": "local",
                "doc": "The version of ePolicy Server that the host IPS client communicates with."
            }
        }
    },
    "SoftLayer_Software_Component_ControlPanel": {
        "name": "SoftLayer_Software_Component_ControlPanel",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of Software Component:  A control panel instance. Control panel installations have a specific default ports and patterns for usernames and passwords.  Defaults are initiated by this object. "
    },
    "SoftLayer_Software_Component_ControlPanel_Cpanel": {
        "name": "SoftLayer_Software_Component_ControlPanel_Cpanel",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object specifies a specific Software Component:  A cPanel instance. cPanel installations have a specific default port (2086) and a pattern for usernames and passwords.  Defaults are initiated by this object. "
    },
    "SoftLayer_Software_Component_ControlPanel_Idera": {
        "name": "SoftLayer_Software_Component_ControlPanel_Idera",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of control panel Software Component:  An Idera instance. "
    },
    "SoftLayer_Software_Component_ControlPanel_Idera_ServerBackup": {
        "name": "SoftLayer_Software_Component_ControlPanel_Idera_ServerBackup",
        "base": "SoftLayer_Software_Component_ControlPanel_Idera",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of Software Component:  A Idera Server Backup instance. "
    },
    "SoftLayer_Software_Component_ControlPanel_Microsoft": {
        "name": "SoftLayer_Software_Component_ControlPanel_Microsoft",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object is a parent class for Microsoft Products, like Web Matrix "
    },
    "SoftLayer_Software_Component_ControlPanel_Microsoft_WebPlatform": {
        "name": "SoftLayer_Software_Component_ControlPanel_Microsoft_WebPlatform",
        "base": "SoftLayer_Software_Component_ControlPanel_Microsoft",
        "noservice": true,
        "typeDoc": "This object specifies a specific Software Component:  A WebPlatform instance. WebPlatform installations have a specific xml config with usernames and passwords.  Defaults are initiated by this object. "
    },
    "SoftLayer_Software_Component_ControlPanel_Parallels": {
        "name": "SoftLayer_Software_Component_ControlPanel_Parallels",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object is a parent class for SWSoft Products, like Plesk "
    },
    "SoftLayer_Software_Component_ControlPanel_Parallels_Plesk": {
        "name": "SoftLayer_Software_Component_ControlPanel_Parallels_Plesk",
        "base": "SoftLayer_Software_Component_ControlPanel_Parallels",
        "noservice": true,
        "typeDoc": "This object specifies a specific Software Component:  A Plesk instance produced by SWSoft. SWSoft Plesk installations have a specific default port (8443) and a pattern for usernames and passwords.  Defaults are initiated by this object. "
    },
    "SoftLayer_Software_Component_ControlPanel_R1soft": {
        "name": "SoftLayer_Software_Component_ControlPanel_R1soft",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of control panel Software Component:  A R1soft instance. "
    },
    "SoftLayer_Software_Component_ControlPanel_R1soft_Cdp": {
        "name": "SoftLayer_Software_Component_ControlPanel_R1soft_Cdp",
        "base": "SoftLayer_Software_Component_ControlPanel_R1soft",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of Software Component:  A R1soft continuous data protection instance. "
    },
    "SoftLayer_Software_Component_ControlPanel_R1soft_ServerBackup": {
        "name": "SoftLayer_Software_Component_ControlPanel_R1soft_ServerBackup",
        "base": "SoftLayer_Software_Component_ControlPanel_R1soft",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of Software Component:  A R1Soft Server Backup instance. "
    },
    "SoftLayer_Software_Component_ControlPanel_Swsoft": {
        "name": "SoftLayer_Software_Component_ControlPanel_Swsoft",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object is a parent class for SWSoft Products, like Plesk "
    },
    "SoftLayer_Software_Component_ControlPanel_WebhostAutomation": {
        "name": "SoftLayer_Software_Component_ControlPanel_WebhostAutomation",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object specifies a specific Software Component:  A Helm instance produced by Webhost Automation. WEbhost Automation's Helm installations have a specific default port (8086) and a pattern for usernames and passwords.  Defaults are initiated by this object. "
    },
    "SoftLayer_Software_Component_HostIps": {
        "name": "SoftLayer_Software_Component_HostIps",
        "base": "SoftLayer_Software_Component",
        "serviceDoc": "This service specifies a specific type of Software Component:  A Host Intrusion Protection System instance. ",
        "methods": {
            "getCurrentHostIpsPolicies": {
                "name": "getCurrentHostIpsPolicies",
                "type": "SoftLayer_Container_Software_Component_HostIps_Policy",
                "typeArray": true,
                "doc": "Get the current Host IPS policies. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Software_Component_HostIps",
                "filterable": true,
                "maskable": true
            },
            "updateHipsPolicies": {
                "name": "updateHipsPolicies",
                "type": "boolean",
                "doc": "Update the Host IPS policies. To retrieve valid policy options you must use the provided relationships. ",
                "parameters": [
                    {
                        "name": "newIpsMode",
                        "type": "string",
                        "doc": "IPS mode setting to be updated."
                    },
                    {
                        "name": "newIpsProtection",
                        "type": "string",
                        "doc": "IPS protection setting to be updated"
                    },
                    {
                        "name": "newFirewallMode",
                        "type": "string",
                        "doc": "Firewall mode setting to be updated"
                    },
                    {
                        "name": "newFirewallRuleset",
                        "type": "string",
                        "doc": "Firewall rule set setting to be updated"
                    },
                    {
                        "name": "newApplicationMode",
                        "type": "string",
                        "doc": "Application mode setting to be updated"
                    },
                    {
                        "name": "newApplicationRuleset",
                        "type": "string",
                        "doc": "Application rule set setting to be updated"
                    },
                    {
                        "name": "newEnforcementPolicy",
                        "type": "string",
                        "doc": "Enforcement policy setting to be updated"
                    }
                ]
            }
        },
        "typeDoc": "This object specifies a specific type of Software Component:  A Host Intrusion Protection System instance. "
    },
    "SoftLayer_Software_Component_HostIps_Mcafee": {
        "name": "SoftLayer_Software_Component_HostIps_Mcafee",
        "base": "SoftLayer_Software_Component_HostIps",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_HostIps_Mcafee represents a single host IPS software component. "
    },
    "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips": {
        "name": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips",
        "base": "SoftLayer_Software_Component_HostIps_Mcafee",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips data type represents a single McAfee Secure Host IPS software component that uses the ePolicy Orchestrator version 3.6 backend. ",
        "properties": {
            "agentDetails": {
                "name": "agentDetails",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Agent_Details",
                "form": "relational",
                "doc": "The host IPS agent details."
            },
            "applicationModePolicyNames": {
                "name": "applicationModePolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the application mode setting."
            },
            "applicationRuleSetPolicyNames": {
                "name": "applicationRuleSetPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the application rule set setting."
            },
            "enforcementPolicyNames": {
                "name": "enforcementPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible options for the enforcement policy setting."
            },
            "firewallModePolicyNames": {
                "name": "firewallModePolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the firewall mode setting."
            },
            "firewallRuleSetPolicyNames": {
                "name": "firewallRuleSetPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the firewall rule set setting."
            },
            "ipsModePolicyNames": {
                "name": "ipsModePolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the host IPS mode setting."
            },
            "ipsProtectionPolicyNames": {
                "name": "ipsProtectionPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the host IPS protection setting."
            },
            "transactionStatus": {
                "name": "transactionStatus",
                "type": "string",
                "form": "relational",
                "doc": "The current transaction status of a server."
            },
            "epoVersion": {
                "name": "epoVersion",
                "type": "string",
                "form": "local",
                "doc": "The version of ePolicy Orchestrator that the host IPS client communicates with."
            },
            "applicationModePolicyNameCount": {
                "name": "applicationModePolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the application mode setting."
            },
            "applicationRuleSetPolicyNameCount": {
                "name": "applicationRuleSetPolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the application rule set setting."
            },
            "enforcementPolicyNameCount": {
                "name": "enforcementPolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible options for the enforcement policy setting."
            },
            "firewallModePolicyNameCount": {
                "name": "firewallModePolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the firewall mode setting."
            },
            "firewallRuleSetPolicyNameCount": {
                "name": "firewallRuleSetPolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the firewall rule set setting."
            },
            "ipsModePolicyNameCount": {
                "name": "ipsModePolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the host IPS mode setting."
            },
            "ipsProtectionPolicyNameCount": {
                "name": "ipsProtectionPolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the host IPS protection setting."
            }
        }
    },
    "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips_Version6": {
        "name": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips_Version6",
        "base": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips_Version6 data type represents a single McAfee Secure Host IPS software component for version 6 of the Host IPS client and uses the ePolicy Orchestrator version 3.6 backend. ",
        "properties": {
            "blockedApplicationEvents": {
                "name": "blockedApplicationEvents",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_BlockedApplicationEvent",
                "form": "relational",
                "typeArray": true,
                "doc": "The blocked application events for this software component."
            },
            "ipsEvents": {
                "name": "ipsEvents",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version6_IPSEvent",
                "form": "relational",
                "typeArray": true,
                "doc": "The host IPS events for this software component."
            },
            "blockedApplicationEventCount": {
                "name": "blockedApplicationEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the blocked application events for this software component."
            },
            "ipsEventCount": {
                "name": "ipsEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the host IPS events for this software component."
            }
        }
    },
    "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips_Version7": {
        "name": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips_Version7",
        "base": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version36_Hips_Version7 data type represents a single McAfee Secure Host IPS software component for version 7 of the Host IPS client and uses the ePolicy Orchestrator version 3.6 backend. ",
        "properties": {
            "blockedApplicationEvents": {
                "name": "blockedApplicationEvents",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_BlockedApplicationEvent",
                "form": "relational",
                "typeArray": true,
                "doc": "The blocked application events for this software component."
            },
            "ipsEvents": {
                "name": "ipsEvents",
                "type": "McAfee_Epolicy_Orchestrator_Version36_Hips_Version7_IPSEvent",
                "form": "relational",
                "typeArray": true,
                "doc": "The host IPS events for this software component."
            },
            "blockedApplicationEventCount": {
                "name": "blockedApplicationEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the blocked application events for this software component."
            },
            "ipsEventCount": {
                "name": "ipsEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the host IPS events for this software component."
            }
        }
    },
    "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips": {
        "name": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips",
        "base": "SoftLayer_Software_Component_HostIps_Mcafee",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips data type represents a single McAfee Secure Host IPS software component that uses the ePolicy Orchestrator version 4.5 backend. ",
        "properties": {
            "agentDetails": {
                "name": "agentDetails",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Agent_Details",
                "form": "relational",
                "doc": "The host IPS agent details."
            },
            "applicationModePolicyNames": {
                "name": "applicationModePolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the application mode setting."
            },
            "applicationRuleSetPolicyNames": {
                "name": "applicationRuleSetPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the application rule set setting."
            },
            "enforcementPolicyNames": {
                "name": "enforcementPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible options for the enforcement policy setting."
            },
            "firewallModePolicyNames": {
                "name": "firewallModePolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the firewall mode setting."
            },
            "firewallRuleSetPolicyNames": {
                "name": "firewallRuleSetPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the firewall rule set setting."
            },
            "ipsModePolicyNames": {
                "name": "ipsModePolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the host IPS mode setting."
            },
            "ipsProtectionPolicyNames": {
                "name": "ipsProtectionPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version45_Policy_Object",
                "form": "relational",
                "typeArray": true,
                "doc": "The names of the possible policy options for the host IPS protection setting."
            },
            "transactionStatus": {
                "name": "transactionStatus",
                "type": "string",
                "form": "relational",
                "doc": "The current transaction status of a server."
            },
            "epoVersion": {
                "name": "epoVersion",
                "type": "string",
                "form": "local",
                "doc": "The version of ePolicy Orchestrator that the host IPS client communicates with."
            },
            "applicationModePolicyNameCount": {
                "name": "applicationModePolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the application mode setting."
            },
            "applicationRuleSetPolicyNameCount": {
                "name": "applicationRuleSetPolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the application rule set setting."
            },
            "enforcementPolicyNameCount": {
                "name": "enforcementPolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible options for the enforcement policy setting."
            },
            "firewallModePolicyNameCount": {
                "name": "firewallModePolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the firewall mode setting."
            },
            "firewallRuleSetPolicyNameCount": {
                "name": "firewallRuleSetPolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the firewall rule set setting."
            },
            "ipsModePolicyNameCount": {
                "name": "ipsModePolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the host IPS mode setting."
            },
            "ipsProtectionPolicyNameCount": {
                "name": "ipsProtectionPolicyNameCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the names of the possible policy options for the host IPS protection setting."
            }
        }
    },
    "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips_Version7": {
        "name": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips_Version7",
        "base": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips_Version7 data type represents a single McAfee Secure Host IPS software component for version 7 of the Host IPS client and uses the ePolicy Orchestrator version 4.5 backend. "
    },
    "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips_Version8": {
        "name": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips_Version8",
        "base": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version45_Hips_Version8 data type represents a single McAfee Secure Host IPS software component for version 8 of the Host IPS client and uses the ePolicy Orchestrator version 4.5 backend. "
    },
    "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version51": {
        "name": "SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version51",
        "base": "SoftLayer_Software_Component_HostIps_Mcafee",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Component_HostIps_Mcafee_Epo_Version51 data type represents a single McAfee Secure Host IPS software component that uses the ePO Server. ",
        "properties": {
            "agentDetails": {
                "name": "agentDetails",
                "type": "McAfee_Epolicy_Orchestrator_Version51_Agent_Details",
                "form": "relational",
                "doc": "The virus scan agent details."
            },
            "epoVersion": {
                "name": "epoVersion",
                "type": "string",
                "form": "local"
            },
            "firewallModePolicyNames": {
                "name": "firewallModePolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version51_Policy_Object",
                "form": "local",
                "typeArray": true
            },
            "firewallRuleSetPolicyNames": {
                "name": "firewallRuleSetPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version51_Policy_Object",
                "form": "local",
                "typeArray": true
            },
            "ipsModePolicyNames": {
                "name": "ipsModePolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version51_Policy_Object",
                "form": "local",
                "typeArray": true
            },
            "ipsProtectionPolicyNames": {
                "name": "ipsProtectionPolicyNames",
                "type": "McAfee_Epolicy_Orchestrator_Version51_Policy_Object",
                "form": "local",
                "typeArray": true
            },
            "transactionStatus": {
                "name": "transactionStatus",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Software_Component_OperatingSystem": {
        "name": "SoftLayer_Software_Component_OperatingSystem",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "SoftLayer_Software_Component_OperatingSystem extends the [[SoftLayer_Software_Component]] data type to include operating system specific properties. ",
        "properties": {
            "licenseExpirationDate": {
                "name": "licenseExpirationDate",
                "type": "dateTime",
                "form": "relational",
                "doc": "The date in which the license for this software expires."
            },
            "partitionTemplates": {
                "name": "partitionTemplates",
                "type": "SoftLayer_Hardware_Component_Partition_Template",
                "form": "relational",
                "typeArray": true,
                "doc": "An operating system's associated [[SoftLayer_Hardware_Component_Partition_Template|Partition Templates]] that can be used to configure a hardware drive."
            },
            "reloadTransactionGroup": {
                "name": "reloadTransactionGroup",
                "type": "SoftLayer_Provisioning_Version1_Transaction_Group",
                "form": "relational",
                "doc": "An operating systems associated [[SoftLayer_Provisioning_Version1_Transaction_Group|Transaction Group]]. A transaction group is a list of operations that will occur during the installment of an operating system."
            },
            "partitionTemplateCount": {
                "name": "partitionTemplateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an operating system's associated [[SoftLayer_Hardware_Component_Partition_Template|Partition Templates]] that can be used to configure a hardware drive."
            }
        }
    },
    "SoftLayer_Software_Component_Package": {
        "name": "SoftLayer_Software_Component_Package",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of Software Component:  A package instance. "
    },
    "SoftLayer_Software_Component_Package_Management": {
        "name": "SoftLayer_Software_Component_Package_Management",
        "base": "SoftLayer_Software_Component_Package",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of Software Component:  A package management instance. "
    },
    "SoftLayer_Software_Component_Package_Management_Ksplice": {
        "name": "SoftLayer_Software_Component_Package_Management_Ksplice",
        "base": "SoftLayer_Software_Component_Package_Management",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of Software Component:  A Ksplice instance. "
    },
    "SoftLayer_Software_Component_Password": {
        "name": "SoftLayer_Software_Component_Password",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The software component password service represents the passwords for a software component, such as an operating system or a control panel. Updating the passwords here will NOT update them on the server itself. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Software_Component_Password",
                "doc": "Create a password for a software component. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Software_Component_Password",
                        "doc": "The SoftLayer_Software_Component_Password object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "boolean",
                "doc": "Create more than one password for a software component. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Software_Component_Password",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Software_Component_Password objects that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a password from a software component. "
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Delete more than one passwords from a software component. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Software_Component_Password",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Software_Component_Password objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the properties of a software component password such as the username, password, port, and notes. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Software_Component_Password",
                        "doc": "A skeleton SoftLayer_Software_Component_Password object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "doc": "Edit more than one password from a software component. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Software_Component_Password",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_Software_Component_Password objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Software_Component_Password",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This SoftLayer_Software_Component_Password data type contains a password for a specific software component instance. ",
        "properties": {
            "software": {
                "name": "software",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "The SoftLayer_Software_Component instance that this username/password pair is valid for."
            },
            "sshKeys": {
                "name": "sshKeys",
                "type": "SoftLayer_Security_Ssh_Key",
                "form": "relational",
                "typeArray": true,
                "doc": "SSH keys to be installed on the server during provisioning or an OS reload."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date this username/password pair was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An id number for this specific username/password pair."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of the last modification to this username/password pair."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A note string stored for this username/password pair."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "The password part of the username/password pair."
            },
            "port": {
                "name": "port",
                "type": "int",
                "form": "local",
                "doc": "The application access port for the Software Component."
            },
            "softwareId": {
                "name": "softwareId",
                "type": "int",
                "form": "local",
                "doc": "An id number for the software component this username/password pair is valid for."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username part of the username/password pair."
            },
            "sshKeyCount": {
                "name": "sshKeyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of sSH keys to be installed on the server during provisioning or an OS reload."
            }
        }
    },
    "SoftLayer_Software_Component_Password_History": {
        "name": "SoftLayer_Software_Component_Password_History",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This object allows you to find the history of password changes for a specific SoftLayer_Software Component ",
        "properties": {
            "softwareComponent": {
                "name": "softwareComponent",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "An installed and licensed instance of a piece of software"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date this username/password pair was created."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A note string stored for this username/password pair."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "The password part of this specific password history instance."
            },
            "softwareComponentId": {
                "name": "softwareComponentId",
                "type": "int",
                "form": "local",
                "doc": "The id number for the Software Component this username/password pair is for."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username part of this specific password history instance."
            }
        }
    },
    "SoftLayer_Software_Component_Security": {
        "name": "SoftLayer_Software_Component_Security",
        "base": "SoftLayer_Software_Component",
        "noservice": true,
        "typeDoc": "This object specifies a specific type of Software Component:  A security instance. Security installations have custom configurations for password requirements. "
    },
    "SoftLayer_Software_Component_Security_SafeNet": {
        "name": "SoftLayer_Software_Component_Security_SafeNet",
        "base": "SoftLayer_Software_Component_Security",
        "noservice": true,
        "typeDoc": "This object specifies a specific Software Component:  A SafeNet instance. SafeNet installations have custom configurations for password requirements. "
    },
    "SoftLayer_Software_Description": {
        "name": "SoftLayer_Software_Description",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Software_Description",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getCustomerOwnedLicenseDescriptions": {
                "name": "getCustomerOwnedLicenseDescriptions",
                "type": "SoftLayer_Software_Description",
                "typeArray": true,
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Software_Description",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This class holds a description for a specific installation of a Software Component. \n\nSoftLayer_Software_Licenses tie a Software Component (A specific installation on a piece of hardware) to it's description. \n\nThe \"Manufacturer\" and \"Name\" properties of a SoftLayer_Software_Description are used by the framework to factory specific objects, objects that may have special methods for that specific piece of software, or objects that contain application specific data, such as default ports.  For example, if you create a SoftLayer_Software_Component who's SoftLayer_Software_License points to the SoftLayer_Software_Description for \"Swsoft\" \"Plesk\", you'll actually get a SoftLayer_Software_Component_Swsoft_Plesk object. ",
        "properties": {
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Software_Description_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "averageInstallationDuration": {
                "name": "averageInstallationDuration",
                "type": "int",
                "form": "relational",
                "doc": "The average amount of time that a software description takes to install."
            },
            "compatibleSoftwareDescriptions": {
                "name": "compatibleSoftwareDescriptions",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of the software descriptions that are compatible with this software description."
            },
            "features": {
                "name": "features",
                "type": "SoftLayer_Software_Description_Feature",
                "form": "relational",
                "typeArray": true,
                "doc": "The feature attributes of a software description."
            },
            "latestVersion": {
                "name": "latestVersion",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "typeArray": true,
                "doc": "The latest version of a software description."
            },
            "productItems": {
                "name": "productItems",
                "type": "SoftLayer_Product_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The various product items to which this software description is linked."
            },
            "provisionTransactionGroup": {
                "name": "provisionTransactionGroup",
                "type": "SoftLayer_Provisioning_Version1_Transaction_Group",
                "form": "relational",
                "doc": "This details the provisioning transaction group for this software. This is only valid for Operating System software."
            },
            "reloadTransactionGroup": {
                "name": "reloadTransactionGroup",
                "type": "SoftLayer_Provisioning_Version1_Transaction_Group",
                "form": "relational",
                "doc": "The transaction group that a software description belongs to. A transaction group is a sequence of transactions that must be performed in a specific order for the installation of software."
            },
            "requiredUser": {
                "name": "requiredUser",
                "type": "string",
                "form": "relational",
                "doc": "The default user created for a given a software description."
            },
            "softwareLicenses": {
                "name": "softwareLicenses",
                "type": "SoftLayer_Software_License",
                "form": "relational",
                "typeArray": true,
                "doc": "Software Licenses that govern this Software Description."
            },
            "upgradeSoftwareDescription": {
                "name": "upgradeSoftwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "A suggestion for an upgrade path from this Software Description"
            },
            "upgradeSwDesc": {
                "name": "upgradeSwDesc",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "A suggestion for an upgrade path from this Software Description (Deprecated - Use upgradeSoftwareDescription)"
            },
            "validFilesystemTypes": {
                "name": "validFilesystemTypes",
                "type": "SoftLayer_Configuration_Storage_Filesystem_Type",
                "form": "relational",
                "typeArray": true
            },
            "controlPanel": {
                "name": "controlPanel",
                "type": "int",
                "form": "local",
                "doc": "This is set to '1' if this Software Description describes a Control Panel."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An ID number to identify this Software Description."
            },
            "licenseTermUnit": {
                "name": "licenseTermUnit",
                "type": "string",
                "form": "local",
                "doc": "The unit of measurement (day, month, or year) for license registration. Used in conjunction with licenseTermValue to determine overall license registration length of a new license. "
            },
            "licenseTermValue": {
                "name": "licenseTermValue",
                "type": "int",
                "form": "local",
                "doc": "The number of units (licenseTermUnit) a new license is valid for at the time of registration."
            },
            "longDescription": {
                "name": "longDescription",
                "type": "string",
                "form": "local",
                "doc": "The manufacturer, name and version of a piece of software."
            },
            "manufacturer": {
                "name": "manufacturer",
                "type": "string",
                "form": "local",
                "doc": "The name of the manufacturer for this specific piece of software.  This name is used by SoftLayer_Software_Component to tailor make (factory) specific types of Software Components that know details like default ports. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of this specific piece of software.  This name is used by SoftLayer_Software_Component to tailor make (factory) specific types of Software Components that know details like default ports. "
            },
            "operatingSystem": {
                "name": "operatingSystem",
                "type": "int",
                "form": "local",
                "doc": "This is set to '1' if this Software Description describes an Operating System."
            },
            "referenceCode": {
                "name": "referenceCode",
                "type": "string",
                "form": "local",
                "doc": "A reference code is structured as three tokens separated by underscores. The first token represents the product, the second is the version of the product, and the third is whether the software is 32 or 64bit. "
            },
            "upgradeSoftwareDescriptionId": {
                "name": "upgradeSoftwareDescriptionId",
                "type": "int",
                "form": "local",
                "doc": "Contains the ID of the suggested upgrade from this Software_Description to a more powerful software installation."
            },
            "upgradeSwDescId": {
                "name": "upgradeSwDescId",
                "type": "int",
                "form": "local",
                "doc": "Contains the ID of the suggested upgrade from this Software_Description to a more powerful software installation. (Deprecated - Use upgradeSoftwareDescriptionId)"
            },
            "version": {
                "name": "version",
                "type": "string",
                "form": "local",
                "doc": "The version of this specific piece of software."
            },
            "virtualLicense": {
                "name": "virtualLicense",
                "type": "int",
                "form": "local",
                "doc": "This is set to '1' if this Software Description can be licensed to a Virtual Machine (an IP address)."
            },
            "virtualizationPlatform": {
                "name": "virtualizationPlatform",
                "type": "int",
                "form": "local",
                "doc": "This is set to '1' if this Software Description a platform for hosting virtual servers."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "compatibleSoftwareDescriptionCount": {
                "name": "compatibleSoftwareDescriptionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of the software descriptions that are compatible with this software description."
            },
            "featureCount": {
                "name": "featureCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the feature attributes of a software description."
            },
            "latestVersionCount": {
                "name": "latestVersionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the latest version of a software description."
            },
            "productItemCount": {
                "name": "productItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the various product items to which this software description is linked."
            },
            "softwareLicenseCount": {
                "name": "softwareLicenseCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of software Licenses that govern this Software Description."
            },
            "validFilesystemTypeCount": {
                "name": "validFilesystemTypeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Software_Description_Attribute": {
        "name": "SoftLayer_Software_Description_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Description_Attribute data type represents an attributes associated with this software description. ",
        "properties": {
            "softwareDescription": {
                "name": "softwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Software_Description_Attribute_Type",
                "form": "relational"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value that was assigned to this attribute."
            }
        }
    },
    "SoftLayer_Software_Description_Attribute_Type": {
        "name": "SoftLayer_Software_Description_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Description_Attribute_Type data type represents the type of an attribute. ",
        "properties": {
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local",
                "doc": "The keyname for this attribute type."
            }
        }
    },
    "SoftLayer_Software_Description_Feature": {
        "name": "SoftLayer_Software_Description_Feature",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Software_Description_Feature data type represents a single software description feature. A feature may show up on more than one software description and can not be created, modified, or removed. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for a software description feature."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A unique name used to reference this software description feature."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a software description feature."
            },
            "vendor": {
                "name": "vendor",
                "type": "string",
                "form": "local",
                "doc": "The vendor that a software description feature belongs to."
            }
        }
    },
    "SoftLayer_Software_Description_RequiredUser": {
        "name": "SoftLayer_Software_Description_RequiredUser",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This class represents a software description's required user ",
        "properties": {
            "defaultPassword": {
                "name": "defaultPassword",
                "type": "string",
                "form": "local",
                "doc": "If the default password is set the user will be created with that password, otherwise a random password is generated."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "If this software has a required user (such as \"root\") this string contains it's name."
            }
        }
    },
    "SoftLayer_Software_License": {
        "name": "SoftLayer_Software_License",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This class describes a specific type of license, like a Microsoft Windows Site License, a GPL license, or a license of another type. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that owns this specific License instance."
            },
            "owner": {
                "name": "owner",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that owns this specific License instance."
            },
            "softwareDescription": {
                "name": "softwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "A Description of the software that this license instance is valid for."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An ID number for this specific License type."
            },
            "softwareDescriptionId": {
                "name": "softwareDescriptionId",
                "type": "int",
                "form": "local",
                "doc": "The ID number of a Software Description that this specific license is valid for."
            }
        }
    },
    "SoftLayer_Software_VirtualLicense": {
        "name": "SoftLayer_Software_VirtualLicense",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Software_VirtualLicense is the application class that handles a special type of Software License.  Most software licenses are licensed to a specific hardware ID;  virtual licenses are designed for virtual machines and therefore are assigned to an IP Address.  Not all software packages can be \"virtual licensed\". \n\nSoftLayer_Software_VirtualLicense's service allows you to retrieve the hard-copy license file for a virtual license, if one exists for your license instance. \n\nYou can also retrieve the subnet that the IP to which a software virtual license is licensed upon exists in, as well as the software description that this virtual license is for. ",
        "methods": {
            "getLicenseFile": {
                "name": "getLicenseFile",
                "type": "base64Binary",
                "doc": "Attempt to retrieve the file associated with a virtual license, if such a file exists.  If there is no file for this virtual license, calling this method will either throw an exception or return false. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Software_VirtualLicense",
                "doc": "getObject retrieves the SoftLayer_Software_VirtualLicense object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Software_VirtualLicense service. You can only retrieve Virtual Licenses assigned to your account number. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Software_VirtualLicense is the application class that handles a special type of Software License.  Most software licenses are licensed to a specific hardware ID;  virtual licenses are designed for virtual machines and therefore are assigned to an IP Address.  Not all software packages can be \"virtual licensed\". ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The customer account this Virtual License belongs to."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for a software virtual license."
            },
            "hostHardware": {
                "name": "hostHardware",
                "type": "SoftLayer_Hardware_Server",
                "form": "relational",
                "doc": "The hardware record to which the software virtual license is assigned."
            },
            "ipAddressRecord": {
                "name": "ipAddressRecord",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The IP Address record associated with a virtual license."
            },
            "softwareDescription": {
                "name": "softwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "The SoftLayer_Software_Description that this virtual license is for."
            },
            "subnet": {
                "name": "subnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "The subnet this Virtual License's IP address belongs to."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the SoftLayer Account to which this Virtual License belongs to."
            },
            "hostHardwareId": {
                "name": "hostHardwareId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the SoftLayer Hardware Server record to which this Virtual License belongs."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An ID number for this Virtual License instance."
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local",
                "doc": "The specific IP address this Virtual License belongs to."
            },
            "key": {
                "name": "key",
                "type": "string",
                "form": "local",
                "doc": "The License Key for this specific Virtual License."
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A \"notes\" string attached to this specific Virtual License."
            },
            "softwareDescriptionId": {
                "name": "softwareDescriptionId",
                "type": "int",
                "form": "local",
                "doc": "The Software Description ID this Virtual License is for."
            },
            "subnetId": {
                "name": "subnetId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the SoftLayer Network Subnet this Virtual License belongs to."
            }
        }
    },
    "SoftLayer_Survey": {
        "name": "SoftLayer_Survey",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every SoftLayer survey is defined in the SoftLayer_Survey service. Softlayer survey's have questions and answers from SoftLayer users. ",
        "methods": {
            "getActiveSurveyByType": {
                "name": "getActiveSurveyByType",
                "type": "SoftLayer_Survey",
                "doc": "Provides survey details for the given type ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "type",
                        "type": "string",
                        "defaultValue": null
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Survey",
                "doc": "getObject retrieves the SoftLayer_Survey object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Survey service. You can only retrieve the survey that your portal user has taken. ",
                "filterable": true,
                "maskable": true
            },
            "takeSurvey": {
                "name": "takeSurvey",
                "type": "boolean",
                "doc": "Response to a SoftLayer survey's questions. ",
                "parameters": [
                    {
                        "name": "responses",
                        "type": "SoftLayer_Survey_Response",
                        "typeArray": true,
                        "doc": "Responses to the survey",
                        "defaultValue": null
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Survey data type contains general information relating to a single SoftLayer survey. ",
        "properties": {
            "questions": {
                "name": "questions",
                "type": "SoftLayer_Survey_Question",
                "form": "relational",
                "typeArray": true,
                "doc": "The questions for a survey."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Survey_Status",
                "form": "relational",
                "doc": "The status of the survey"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Survey_Type",
                "form": "relational",
                "doc": "The type of survey"
            },
            "active": {
                "name": "active",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating if a survey can be taken."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a survey had originally started."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A survey's id."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A survey's name or title."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The status id of the survey."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The type id of the survey."
            },
            "questionCount": {
                "name": "questionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the questions for a survey."
            }
        }
    },
    "SoftLayer_Survey_Answer": {
        "name": "SoftLayer_Survey_Answer",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Survey_Answer data type contains general information relating to a single SoftLayer survey answer. ",
        "properties": {
            "surveyQuestion": {
                "name": "surveyQuestion",
                "type": "SoftLayer_Survey_Question",
                "form": "relational",
                "doc": "The survey question that this answer belongs to."
            },
            "answer": {
                "name": "answer",
                "type": "string",
                "form": "local",
                "doc": "A survey answer's answer that a user can response too."
            },
            "answerOrder": {
                "name": "answerOrder",
                "type": "int",
                "form": "local",
                "doc": "A value indicating the order in when a survey answer will be displayed to a user."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A survey answer's Id."
            },
            "surveyQuestionId": {
                "name": "surveyQuestionId",
                "type": "int",
                "form": "local",
                "doc": "A survey answer's associated [[SoftLayer_Survey_Question|Survey Question]] Id."
            }
        }
    },
    "SoftLayer_Survey_Question": {
        "name": "SoftLayer_Survey_Question",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Survey_Question data type contains general information relating to a single SoftLayer survey question. ",
        "properties": {
            "answers": {
                "name": "answers",
                "type": "SoftLayer_Survey_Answer",
                "form": "relational",
                "typeArray": true,
                "doc": "The possible answers for a survey question."
            },
            "survey": {
                "name": "survey",
                "type": "SoftLayer_Survey",
                "form": "relational",
                "doc": "The survey that a question belongs to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A survey question's Id."
            },
            "isRequired": {
                "name": "isRequired",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating that a survey question requires a response."
            },
            "multiAnswer": {
                "name": "multiAnswer",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating that a survey question can have multiple answers responded to."
            },
            "question": {
                "name": "question",
                "type": "string",
                "form": "local",
                "doc": "A survey question's question."
            },
            "questionOrder": {
                "name": "questionOrder",
                "type": "int",
                "form": "local",
                "doc": "A value indicating the order in when a survey question will be asked."
            },
            "surveyId": {
                "name": "surveyId",
                "type": "int",
                "form": "local",
                "doc": "A survey question's associated [[SoftLayer_Survey|Survey]] Id."
            },
            "answerCount": {
                "name": "answerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the possible answers for a survey question."
            }
        }
    },
    "SoftLayer_Survey_Response": {
        "name": "SoftLayer_Survey_Response",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Survey_Response data type contains general information relating to a single SoftLayer survey response. ",
        "properties": {
            "surveyAnswer": {
                "name": "surveyAnswer",
                "type": "SoftLayer_Survey_Answer",
                "form": "relational",
                "doc": "The survey answer that this response was to."
            },
            "otherAnswer": {
                "name": "otherAnswer",
                "type": "string",
                "form": "local",
                "doc": "The user typed response for the [[SoftLayer_Survey_Answer|Survey Answer]] that a response is associated with."
            },
            "surveyAnswerId": {
                "name": "surveyAnswerId",
                "type": "int",
                "form": "local",
                "doc": "The Id of the [[SoftLayer_Survey_Answer|Survey Answer]] that a response was made for."
            }
        }
    },
    "SoftLayer_Survey_Status": {
        "name": "SoftLayer_Survey_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Survey_Status data type contains survey status information. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of a survey status"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a survey status"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of a survey status"
            }
        }
    },
    "SoftLayer_Survey_Type": {
        "name": "SoftLayer_Survey_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Survey_Type data type contains survey type information. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of a survey type"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Internal identifier of a survey type"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of a survey type"
            }
        }
    },
    "SoftLayer_Tag": {
        "name": "SoftLayer_Tag",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer's tagging service gives customers the ability to tag devices with keywords that can later be used to search upon. ",
        "methods": {
            "autoComplete": {
                "name": "autoComplete",
                "type": "SoftLayer_Tag",
                "typeArray": true,
                "doc": "This function is responsible for setting the Tags values. The internal flag is set to 0 if the user is a customer, and 1 otherwise. AccountId is set to the account bound to the user, and the tags name is set to the clean version of the tag inputted by the user. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "tag",
                        "type": "string",
                        "doc": "Tag inputted by the user."
                    }
                ]
            },
            "deleteTag": {
                "name": "deleteTag",
                "type": "boolean",
                "doc": "Delete a tag for an object. ",
                "static": true,
                "parameters": [
                    {
                        "name": "tagName",
                        "type": "string",
                        "doc": "The name of the tag to delete."
                    }
                ]
            },
            "getAllTagTypes": {
                "name": "getAllTagTypes",
                "type": "SoftLayer_Tag_Type",
                "typeArray": true,
                "doc": "Returns all tags of a given object type. ",
                "static": true,
                "maskable": true
            },
            "getAttachedTagsForCurrentUser": {
                "name": "getAttachedTagsForCurrentUser",
                "type": "SoftLayer_Tag",
                "typeArray": true,
                "doc": "Get all tags with at least one reference attached to it for the current account. The total items header for this method contains the total number of attached tags even if a result limit is applied. ",
                "static": true,
                "limitable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Tag",
                "filterable": true,
                "maskable": true
            },
            "getTagByTagName": {
                "name": "getTagByTagName",
                "type": "SoftLayer_Tag",
                "typeArray": true,
                "doc": "Returns the Tag object with a given name. The user types in the tag name and this method returns the tag with that name. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "tagList",
                        "type": "string",
                        "doc": "A single tag or a comma separated list.",
                        "defaultValue": null
                    }
                ]
            },
            "getUnattachedTagsForCurrentUser": {
                "name": "getUnattachedTagsForCurrentUser",
                "type": "SoftLayer_Tag",
                "typeArray": true,
                "doc": "Get all tags with no references attached to it for the current account. The total items header for this method contains the total number of unattached tags even if a result limit is applied. ",
                "static": true,
                "limitable": true,
                "maskable": true
            },
            "setTags": {
                "name": "setTags",
                "type": "boolean",
                "doc": "Tag an object by passing in one or more tags separated by a comma. Tag references are cleared out every time this method is called. If your object is already tagged you will need to pass the current tags along with any new ones. To remove all tag references pass an empty string. To remove one or more tags omit them from the tag list. The characters permitted are A-Z, 0-9, whitespace, _ (underscore), - (hypen), . (period), and : (colon). All other characters will be stripped away. You must pass 3 string arguments into this method or you will receive an exception. ",
                "static": true,
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "List of tags.",
                        "defaultValue": null
                    },
                    {
                        "name": "keyName",
                        "type": "string",
                        "doc": "Key name of a tag type.",
                        "defaultValue": null
                    },
                    {
                        "name": "resourceTableId",
                        "type": "int",
                        "doc": "$resourceTableId ID of the object being tagged.",
                        "defaultValue": null
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Tag data type is an optional type associated with hardware. The account ID that the tag is tied to, and the tag itself are stored in this data type. There is also a flag to denote whether the tag is internal or not. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account to which the tag is tied."
            },
            "references": {
                "name": "references",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true,
                "doc": "References that tie object to the tag."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "Account the tag belongs to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique identifier for a tag."
            },
            "internal": {
                "name": "internal",
                "type": "int",
                "form": "local",
                "doc": "Indicates whether a tag is internal."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of the tag. The characters permitted are A-Z, 0-9, whitespace,"
            },
            "referenceCount": {
                "name": "referenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of references that tie object to the tag."
            }
        }
    },
    "SoftLayer_Tag_Reference": {
        "name": "SoftLayer_Tag_Reference",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "customer": {
                "name": "customer",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "employee": {
                "name": "employee",
                "type": "SoftLayer_User_Employee",
                "form": "relational"
            },
            "tag": {
                "name": "tag",
                "type": "SoftLayer_Tag",
                "form": "relational"
            },
            "tagType": {
                "name": "tagType",
                "type": "SoftLayer_Tag_Type",
                "form": "relational"
            },
            "empRecordId": {
                "name": "empRecordId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "resourceTableId": {
                "name": "resourceTableId",
                "type": "int",
                "form": "local"
            },
            "tagId": {
                "name": "tagId",
                "type": "int",
                "form": "local"
            },
            "tagTypeId": {
                "name": "tagTypeId",
                "type": "int",
                "form": "local"
            },
            "usrRecordId": {
                "name": "usrRecordId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Tag_Reference_Hardware": {
        "name": "SoftLayer_Tag_Reference_Hardware",
        "base": "SoftLayer_Tag_Reference",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Hardware",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Tag_Reference_Network_Application_Delivery_Controller": {
        "name": "SoftLayer_Tag_Reference_Network_Application_Delivery_Controller",
        "base": "SoftLayer_Tag_Reference",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Tag_Reference_Network_Vlan": {
        "name": "SoftLayer_Tag_Reference_Network_Vlan",
        "base": "SoftLayer_Tag_Reference",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Tag_Reference_Network_Vlan_Firewall": {
        "name": "SoftLayer_Tag_Reference_Network_Vlan_Firewall",
        "base": "SoftLayer_Tag_Reference",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Vlan_Firewall",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Tag_Reference_Resource_Group": {
        "name": "SoftLayer_Tag_Reference_Resource_Group",
        "base": "SoftLayer_Tag_Reference",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Resource_Group",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Tag_Reference_Virtual_DedicatedHost": {
        "name": "SoftLayer_Tag_Reference_Virtual_DedicatedHost",
        "base": "SoftLayer_Tag_Reference",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Tag_Reference_Virtual_Guest": {
        "name": "SoftLayer_Tag_Reference_Virtual_Guest",
        "base": "SoftLayer_Tag_Reference",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Tag_Reference_Virtual_Guest_Block_Device_Template_Group": {
        "name": "SoftLayer_Tag_Reference_Virtual_Guest_Block_Device_Template_Group",
        "base": "SoftLayer_Tag_Reference",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Tag_Type": {
        "name": "SoftLayer_Tag_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Ticket": {
        "name": "SoftLayer_Ticket",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Tickets are SoftLayer's primary way to keep in touch with its customers. A ticket is an entity that describes a problem or request and tracks a conversation between you, your account users, and SoftLayer employees relating to your problem or request. Tickets can be assigned to one of your account users, and SoftLayer can assign a ticket to a particular department (also called a ticket group) or employee. The SoftLayer_Ticket service controls your interaction with SoftLayer's ticketing system. \n\nEvery ticket object has at least one ticket update. Ticket updates may be created by either a user or SoftLayer employee. These ticket updates record the conversation between SoftLayer and you about the issue at hand. You may only add new updates to a ticket. Once an update is created you may not edit or delete it. \n\nTickets exist in one of three states: open, assigned, and closed. Open tickets are considered a current issue, but are not yet assigned to a specific SoftLayer employee. Assigned issues are open issues that are assigned to a SoftLayer employee. You can safely assume that your ticket is being handled if it is in the Assigned state. Closed tickets are considered resolved issues and allow no further updates. Please contact SoftLayer if you need to re-open a ticket, as you may only create ticket updates on open or assigned tickets. \n\nIt is possible to attach files and associate hardware with a ticket. Associating your ticket with more than one pieces of hardware helps SoftLayer's support team localize issues to certain servers. Attachments are a good way to illustrate a point, such as adding a screen shot of a problem or attaching a driver or configuration file that you'd like investigated. \n\nTypically the only tickets an account user may create are technical support tickets. Technical support tickets are divided into two categories: standard tickets and administrative tickets. A standard support ticket describes an issue with your SoftLayer server or services. Standard support tickets' titles must be selected from a pre-determined list of ticket subjects, defined in the [[SoftLayer_Ticket_Subject]] service. If you need a little help from SoftLayer's support staff to manage your server then open an administrative support ticket. Administrative tickets add a one-time $3USD charge to your account, and you may specify your ticket's title as needed. ",
        "methods": {
            "addAssignedAgent": {
                "name": "addAssignedAgent",
                "type": "void",
                "doc": "\n\n",
                "parameters": [
                    {
                        "name": "agentId",
                        "type": "int",
                        "doc": "the unique Id of the agent"
                    }
                ]
            },
            "addAttachedAdditionalEmails": {
                "name": "addAttachedAdditionalEmails",
                "type": "boolean",
                "doc": "Creates new additional emails for assigned user if new emails are provided. Attaches any newly created additional emails to ticket. ",
                "parameters": [
                    {
                        "name": "emails",
                        "type": "string",
                        "typeArray": true,
                        "doc": "A list of email addresses to notify when a ticket is updated"
                    }
                ]
            },
            "addAttachedDedicatedHost": {
                "name": "addAttachedDedicatedHost",
                "type": "SoftLayer_Ticket_Attachment_Dedicated_Host",
                "doc": "Attach the given Dedicated Host to a SoftLayer ticket. An attachment provides an easy way for SoftLayer's employees to quickly look up your records in the case of specific issues. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "dedicatedHostId",
                        "type": "int",
                        "doc": "The internal identifier of the dedicated host record to attach."
                    }
                ]
            },
            "addAttachedFile": {
                "name": "addAttachedFile",
                "type": "SoftLayer_Ticket_Attachment_File",
                "doc": "Attach the given file to a SoftLayer ticket. A file attachment is a convenient way to submit non-textual error reports to SoftLayer employees in a ticket. File attachments to tickets must have a unique name. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "fileAttachment",
                        "type": "SoftLayer_Container_Utility_File_Attachment",
                        "doc": "The file to attach"
                    }
                ]
            },
            "addAttachedHardware": {
                "name": "addAttachedHardware",
                "type": "SoftLayer_Ticket_Attachment_Hardware",
                "doc": "Attach the given hardware to a SoftLayer ticket. A hardware attachment provides an easy way for SoftLayer's employees to quickly look up your hardware records in the case of hardware-specific issues. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "hardwareId",
                        "type": "int",
                        "doc": "The internal identifier of the hardware record to attach."
                    }
                ]
            },
            "addAttachedVirtualGuest": {
                "name": "addAttachedVirtualGuest",
                "type": "SoftLayer_Ticket_Attachment_Virtual_Guest",
                "doc": "Attach the given CloudLayer Computing Instance to a SoftLayer ticket. An attachment provides an easy way for SoftLayer's employees to quickly look up your records in the case of specific issues. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "guestId",
                        "type": "int",
                        "doc": "The internal identifier of the virtual guest record to attach."
                    },
                    {
                        "name": "callCommit",
                        "type": "boolean",
                        "doc": "call commit or not",
                        "defaultValue": false
                    }
                ]
            },
            "addFinalComments": {
                "name": "addFinalComments",
                "type": "boolean",
                "doc": "As part of the customer service process SoftLayer has provided a quick feedback mechanism for its customers to rate their overall experience with SoftLayer after a ticket is closed. addFinalComments() sets these comments for a ticket update made by a SoftLayer employee. Final comments may only be set on closed tickets, can only be set once, and may not exceed 4000 characters in length. Once the comments are set ''addFinalComments()'' returns a boolean true. ",
                "parameters": [
                    {
                        "name": "finalComments",
                        "type": "string",
                        "doc": "Feedback to leave on a closed ticket."
                    }
                ]
            },
            "addScheduledAlert": {
                "name": "addScheduledAlert",
                "type": "void",
                "parameters": [
                    {
                        "name": "activationTime",
                        "type": "string",
                        "doc": "- String representation of a time",
                        "defaultValue": null
                    }
                ]
            },
            "addScheduledAutoClose": {
                "name": "addScheduledAutoClose",
                "type": "void",
                "parameters": [
                    {
                        "name": "activationTime",
                        "type": "string",
                        "doc": "- String representation of a time",
                        "defaultValue": null
                    }
                ]
            },
            "addUpdate": {
                "name": "addUpdate",
                "type": "SoftLayer_Ticket_Update",
                "typeArray": true,
                "doc": "Add an update to a ticket. A ticket update's entry has a maximum length of 4000 characters, so ''addUpdate()'' splits the ''entry'' property in the ''templateObject'' parameter into 3900 character blocks and creates one entry per 3900 character block. Once complete ''addUpdate()'' emails the ticket's owner and additional email addresses with an update message if the ticket's ''notifyUserOnUpdateFlag'' is set. If the ticket is a Legal or Abuse ticket, then the account's abuse emails are also notified when the updates are processed. Finally, ''addUpdate()'' returns an array of the newly created ticket updates. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Ticket_Update",
                        "doc": "The update to add to the ticket"
                    },
                    {
                        "name": "attachedFiles",
                        "type": "SoftLayer_Container_Utility_File_Attachment",
                        "typeArray": true,
                        "doc": "An array of no more than two files to attach to your ticket.",
                        "defaultValue": []
                    }
                ]
            },
            "createAdministrativeTicket": {
                "name": "createAdministrativeTicket",
                "type": "SoftLayer_Ticket",
                "doc": "Create an administrative support ticket. Use an administrative ticket if you require SoftLayer's assistance managing your server or content. If you are experiencing an issue with SoftLayer's hardware, network, or services then please open a standard support ticket. \n\nSupport tickets may only be created in the open state. The SoftLayer API defaults new ticket properties ''userEditableFlag'' to true, ''accountId'' to the id of the account that your API user belongs to, and ''statusId'' to 1001 (or \"open\"). You may not assign your new to ticket to users that your API user does not have access to. \n\nOnce your ticket is created it is placed in a queue for SoftLayer employees to work. As they update the ticket new [[SoftLayer_Ticket_Update]] entries are added to the ticket object. \n\nAdministrative support tickets add a one-time $3USD charge to your account. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Ticket",
                        "doc": "A skeleton [[SoftLayer_Ticket (type)|SoftLayer_Ticket]] object containing the data of the ticket you wish to submit."
                    },
                    {
                        "name": "contents",
                        "type": "string",
                        "doc": "The contents of the first update of the ticket. This is typically the ticket's problem description."
                    },
                    {
                        "name": "attachmentId",
                        "type": "int",
                        "doc": "An optional internal identifier of a piece of hardware or CloudLayer Computing Instance you wish to attach to this ticket. If you attach hardware to a ticket then you must also specify a root or admin password."
                    },
                    {
                        "name": "rootPassword",
                        "type": "string",
                        "doc": "The root password of the hardware you wish to attach to this ticket. Providing your administrative password can significantly improve your ticket response time."
                    },
                    {
                        "name": "controlPanelPassword",
                        "type": "string",
                        "doc": "An optional administrative password to a hosting control panel running on your server, if your server has one installed."
                    },
                    {
                        "name": "accessPort",
                        "type": "string",
                        "doc": "The TCP port on your server that SoftLayer must use to access your operating system. This is typically 22 for SSH and 3389 for Remote Desktop."
                    },
                    {
                        "name": "attachedFiles",
                        "type": "SoftLayer_Container_Utility_File_Attachment",
                        "typeArray": true,
                        "doc": "An array of files to attach to a ticket upon creation."
                    },
                    {
                        "name": "attachmentType",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"HARDWARE\">HARDWARE</li> <li title=\"VIRTUAL_GUEST\">VIRTUAL_GUEST</li> </ul>",
                        "defaultValue": "HARDWARE"
                    }
                ]
            },
            "createCancelServerTicket": {
                "name": "createCancelServerTicket",
                "type": "SoftLayer_Ticket",
                "doc": "A cancel server request creates a ticket to cancel the resource on next bill date. The hardware ID parameter is required to determine which server is to be cancelled. NOTE: Hourly bare metal servers will be cancelled on next bill date. \n\nThe reason parameter could be from the list below: \n* \"No longer needed\"\n* \"Business closing down\"\n* \"Server / Upgrade Costs\"\n* \"Migrating to larger server\"\n* \"Migrating to smaller server\"\n* \"Migrating to a different SoftLayer datacenter\"\n* \"Network performance / latency\"\n* \"Support response / timing\"\n* \"Sales process / upgrades\"\n* \"Moving to competitor\"\n\n\nThe content parameter describes further the reason for cancelling the server. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "attachmentId",
                        "type": "int",
                        "doc": "The internal identifier of the server to cancel."
                    },
                    {
                        "name": "reason",
                        "type": "string",
                        "doc": "Cancellation reason."
                    },
                    {
                        "name": "content",
                        "type": "string",
                        "doc": "Cancellation content for ticket. A brief description explaining the cancellation reason."
                    },
                    {
                        "name": "cancelAssociatedItems",
                        "type": "boolean",
                        "doc": "Flag to indicate that associated billing items assigned to the server should be canceled also.",
                        "defaultValue": false
                    },
                    {
                        "name": "attachmentType",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"HARDWARE\">HARDWARE</li> </ul>",
                        "defaultValue": "HARDWARE"
                    }
                ]
            },
            "createCancelServiceTicket": {
                "name": "createCancelServiceTicket",
                "type": "SoftLayer_Ticket",
                "doc": "A cancel service request creates a sales ticket. The hardware ID parameter is required to determine which server is to be cancelled. \n\nThe reason parameter could be from the list below: \n* \"No longer needed\"\n* \"Business closing down\"\n* \"Server / Upgrade Costs\"\n* \"Migrating to larger server\"\n* \"Migrating to smaller server\"\n* \"Migrating to a different SoftLayer datacenter\"\n* \"Network performance / latency\"\n* \"Support response / timing\"\n* \"Sales process / upgrades\"\n* \"Moving to competitor\"\n\n\nThe content parameter describes further the reason for cancelling service. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "attachmentId",
                        "type": "int",
                        "doc": "The internal identifier of the server or CloudLayer Computing Instance to cancel."
                    },
                    {
                        "name": "reason",
                        "type": "string",
                        "doc": "Cancellation reason."
                    },
                    {
                        "name": "content",
                        "type": "string",
                        "doc": "Cancellation content for ticket. A brief description explaining the cancellation reason."
                    },
                    {
                        "name": "attachmentType",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"HARDWARE\">HARDWARE</li> <li title=\"VIRTUAL_GUEST\">VIRTUAL_GUEST</li> </ul>",
                        "defaultValue": "HARDWARE"
                    }
                ]
            },
            "createStandardTicket": {
                "name": "createStandardTicket",
                "type": "SoftLayer_Ticket",
                "doc": "Create a standard support ticket. Use a standard support ticket if you need to work out a problem related to SoftLayer's hardware, network, or services. If you require SoftLayer's assistance managing your server or content then please open an administrative ticket. \n\nSupport tickets may only be created in the open state. The SoftLayer API defaults new ticket properties ''userEditableFlag'' to true, ''accountId'' to the id of the account that your API user belongs to, and ''statusId'' to 1001 (or \"open\"). You may not assign your new to ticket to users that your API user does not have access to. \n\nOnce your ticket is created it is placed in a queue for SoftLayer employees to work. As they update the ticket new [[SoftLayer_Ticket_Update]] entries are added to the ticket object. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Ticket",
                        "doc": "A skeleton [[SoftLayer_Ticket (type)|SoftLayer_Ticket]] object containing the data of the ticket you wish to submit."
                    },
                    {
                        "name": "contents",
                        "type": "string",
                        "doc": "The contents of the first update of the ticket. This is typically the ticket's problem description."
                    },
                    {
                        "name": "attachmentId",
                        "type": "int",
                        "doc": "An optional internal identifier of a piece of hardware or CloudLayer Computing Instance you wish to attach to this ticket. If you attach hardware to a ticket then you must also specify a root or admin password."
                    },
                    {
                        "name": "rootPassword",
                        "type": "string",
                        "doc": "The root password of the hardware you wish to attach to this ticket. Providing your administrative password can significantly improve your ticket response time."
                    },
                    {
                        "name": "controlPanelPassword",
                        "type": "string",
                        "doc": "An optional administrative password to a hosting control panel running on your server, if your server has one installed."
                    },
                    {
                        "name": "accessPort",
                        "type": "string",
                        "doc": "The TCP port on your server that SoftLayer must use to access your operating system. This is typically 22 for SSH and 3389 for Remote Desktop."
                    },
                    {
                        "name": "attachedFiles",
                        "type": "SoftLayer_Container_Utility_File_Attachment",
                        "typeArray": true,
                        "doc": "An array of files to attach to a ticket upon creation.",
                        "defaultValue": []
                    },
                    {
                        "name": "attachmentType",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"HARDWARE\">HARDWARE</li> <li title=\"VIRTUAL_GUEST\">VIRTUAL_GUEST</li> </ul>",
                        "defaultValue": "HARDWARE"
                    }
                ]
            },
            "createUpgradeTicket": {
                "name": "createUpgradeTicket",
                "type": "SoftLayer_Ticket",
                "doc": "Create a ticket for the SoftLayer sales team to perform a hardware or service upgrade. Our sales team will work with you on upgrade feasibility and pricing and then send the upgrade ticket to the proper department to perform the actual upgrade. Service affecting upgrades, such as server hardware or CloudLayer Computing Instance upgrades that require the server powered down must have a two hour maintenance specified for our datacenter engineers to perform your upgrade. Account level upgrades, such as adding PPTP VPN users, CDNLayer accounts, and monitoring services are processed much faster and do not require a maintenance window. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "attachmentId",
                        "type": "int",
                        "doc": "An optional hardware identifier if your upgrade request is related to a specific resource(server, vsi, firewall, etc..) on your account."
                    },
                    {
                        "name": "genericUpgrade",
                        "type": "string",
                        "doc": "A brief description of what you wish to upgrade or add to your account. Descriptions like \"CPU\", \"RAM\", \"RAID cards\", \"PPTP VPN users\", and \"StorageLayer\"."
                    },
                    {
                        "name": "upgradeMaintenanceWindow",
                        "type": "string",
                        "doc": "If your upgrade is service affecting then please provide an appropriate two hour maintenance window in which SoftLayer's staff can upgrade your server."
                    },
                    {
                        "name": "details",
                        "type": "string",
                        "doc": "A detailed description of the the server or account upgrade you wish to perform."
                    },
                    {
                        "name": "attachmentType",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"HARDWARE\">HARDWARE</li> <li title=\"VIRTUAL_GUEST\">VIRTUAL_GUEST</li> <li title=\"FIREWALL_APPLIANCE\">FIREWALL_APPLIANCE</li> <li title=\"NONE\">NONE</li> </ul>",
                        "defaultValue": "HARDWARE"
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "doc": "A custom ticket title",
                        "defaultValue": null
                    }
                ]
            },
            "edit": {
                "name": "edit",
                "type": "SoftLayer_Ticket",
                "doc": "Edit a SoftLayer ticket. The edit method is two-fold. You may either edit a ticket itself, add an update to a ticket, attach up to two files to a ticket, or perform all of these tasks. The SoftLayer API ignores changes made to the ''userEditableFlag''  and ''accountId'' properties. You may not assign a ticket to a user that your API account does not have access to. You may not enter a custom title for standard support tickets, buy may do so when editing an administrative ticket. Finally, you may not close a ticket using this method. Please contact SoftLayer if you need a ticket closed. \n\nIf you need to only add an update to a ticket then please use the [[SoftLayer_Ticket::addUpdate|addUpdate]] method in this service. Likewise if you need to only attach a file to a ticket then use the [[SoftLayer_Ticket::addAttachedFile|addAttachedFile]] method. The edit method exists as a convenience if you need to perform all these tasks at once. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Ticket",
                        "doc": "A skeleton [[SoftLayer_Ticket (type)|SoftLayer_Ticket]] object containing the data of the ticket you wish to submit."
                    },
                    {
                        "name": "contents",
                        "type": "string",
                        "doc": "The contents of the first update of the ticket. This is typically the ticket's problem description.",
                        "defaultValue": null
                    },
                    {
                        "name": "attachedFiles",
                        "type": "SoftLayer_Container_Utility_File_Attachment",
                        "typeArray": true,
                        "doc": "An array of no more than two files to attach to your ticket.",
                        "defaultValue": []
                    }
                ]
            },
            "getAllTicketGroups": {
                "name": "getAllTicketGroups",
                "type": "SoftLayer_Ticket_Group",
                "typeArray": true,
                "doc": "getAllTicketGroups() retrieves a list of all groups that a ticket may be assigned to. Ticket groups represent the internal department at SoftLayer who a ticket is assigned to. \n\nEvery SoftLayer ticket has groupId and ticketGroup properties that correspond to one of the groups returned by getAllTicketGroups(). ",
                "static": true,
                "maskable": true
            },
            "getAllTicketStatuses": {
                "name": "getAllTicketStatuses",
                "type": "SoftLayer_Ticket_Status",
                "typeArray": true,
                "doc": "getAllTicketStatuses() retrieves a list of all statuses that a ticket may exist in. Ticket status represent the current state of a ticket, usually \"open\", \"assigned\", and \"closed\". \n\nEvery SoftLayer ticket has statusId and status properties that correspond to one of the statuses returned by getAllTicketStatuses(). ",
                "static": true,
                "maskable": true
            },
            "getAttachedFile": {
                "name": "getAttachedFile",
                "type": "base64Binary",
                "doc": "Retrieve the file attached to a SoftLayer ticket by it's given identifier. To retrieve a list of files attached to a ticket either call the SoftLayer_Ticket::getAttachedFiles method or call SoftLayer_Ticket::getObject with ''attachedFiles'' defined in an object mask. ",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "type": "int",
                        "doc": "The id of the attachment to retrieve"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Ticket",
                "doc": "getObject retrieves the SoftLayer_Ticket object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Ticket service. You can only retrieve tickets that are associated with your SoftLayer customer account. ",
                "filterable": true,
                "maskable": true
            },
            "getTicketsClosedSinceDate": {
                "name": "getTicketsClosedSinceDate",
                "type": "SoftLayer_Ticket",
                "typeArray": true,
                "doc": "Retrieve all tickets closed since a given date. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "closeDate",
                        "type": "dateTime",
                        "doc": "Retrieve all ticket closed since this date."
                    }
                ]
            },
            "markAsViewed": {
                "name": "markAsViewed",
                "type": "void",
                "doc": "Mark a ticket as viewed.  All currently posted updates will be marked as viewed. The lastViewedDate property will be updated to the current time. "
            },
            "removeAssignedAgent": {
                "name": "removeAssignedAgent",
                "type": "void",
                "doc": "\n\n",
                "parameters": [
                    {
                        "name": "agentId",
                        "type": "int",
                        "doc": "$agentId the unique Id of the agent"
                    }
                ]
            },
            "removeAttachedAdditionalEmails": {
                "name": "removeAttachedAdditionalEmails",
                "type": "boolean",
                "doc": "removeAttachedAdditionalEmails() removes the specified email addresses from a ticket's notification list. If one of the provided email addresses is not attached to the ticket then ''removeAttachedAdditiaonalEmails()'' ignores it and continues to the next one. Once the email addresses are removed ''removeAttachedAdditiaonalEmails()'' returns a boolean true. ",
                "parameters": [
                    {
                        "name": "emails",
                        "type": "string",
                        "typeArray": true,
                        "doc": "A list of email addresses to remove from a ticket's notification list"
                    }
                ]
            },
            "removeAttachedHardware": {
                "name": "removeAttachedHardware",
                "type": "boolean",
                "doc": "detach the given hardware from a SoftLayer ticket. Removing a hardware attachment may delay ticket processing time if the hardware removed is relevant to the ticket's issue. Return a boolean true upon successful hardware detachment. ",
                "parameters": [
                    {
                        "name": "hardwareId",
                        "type": "int",
                        "doc": "The internal identifier of the hardware record to detach"
                    }
                ]
            },
            "removeAttachedVirtualGuest": {
                "name": "removeAttachedVirtualGuest",
                "type": "boolean",
                "doc": "Detach the given CloudLayer Computing Instance from a SoftLayer ticket. Removing an attachment may delay ticket processing time if the instance removed is relevant to the ticket's issue. Return a boolean true upon successful detachment. ",
                "parameters": [
                    {
                        "name": "guestId",
                        "type": "int",
                        "doc": "The internal identifier of the virtual guest record to detach"
                    }
                ]
            },
            "removeScheduledAlert": {
                "name": "removeScheduledAlert",
                "type": "void"
            },
            "removeScheduledAutoClose": {
                "name": "removeScheduledAutoClose",
                "type": "void"
            },
            "setTags": {
                "name": "setTags",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "comma separated list of tags"
                    }
                ]
            },
            "surveyEligible": {
                "name": "surveyEligible",
                "type": "boolean",
                "doc": "(DEPRECATED) Use [[SoftLayer_Ticket_Survey::getPreference]] method. ",
                "static": true
            },
            "updateAttachedAdditionalEmails": {
                "name": "updateAttachedAdditionalEmails",
                "type": "boolean",
                "doc": "Creates new additional emails for assigned user if new emails are provided. Attaches any newly created additional emails to ticket. Remove any additional emails from a ticket that are not provided as part of $emails ",
                "parameters": [
                    {
                        "name": "emails",
                        "type": "string",
                        "typeArray": true,
                        "doc": "A list of email addresses to notify when a ticket is updated"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Ticket data type models a single SoftLayer customer support or notification ticket. Each ticket object contains references to it's updates, the user it's assigned to, the SoftLayer department and employee that it's assigned to, and any hardware objects or attached files associated with the ticket. Tickets are described in further detail on the [[SoftLayer_Ticket]] service page. \n\nTo create a support ticket execute the [[SoftLayer_Ticket::createStandardTicket|createStandardTicket]] or [[SoftLayer_Ticket::createAdministrativeTicket|createAdministrativeTicket]] methods in the SoftLayer_Ticket service. To create an upgrade ticket for the SoftLayer sales group execute the [[SoftLayer_Ticket::createUpgradeTicket|createUpgradeTicket]]. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The SoftLayer customer account associated with a ticket."
            },
            "assignedAgents": {
                "name": "assignedAgents",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true
            },
            "assignedUser": {
                "name": "assignedUser",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The portal user that a ticket is assigned to."
            },
            "attachedAdditionalEmails": {
                "name": "attachedAdditionalEmails",
                "type": "SoftLayer_User_Customer_AdditionalEmail",
                "form": "relational",
                "typeArray": true,
                "doc": "The list of additional emails to notify when a ticket update is made."
            },
            "attachedDedicatedHosts": {
                "name": "attachedDedicatedHosts",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "form": "relational",
                "typeArray": true,
                "doc": "The Dedicated Hosts associated with a ticket. This is used in cases where a ticket is directly associated with one or more Dedicated Hosts."
            },
            "attachedFiles": {
                "name": "attachedFiles",
                "type": "SoftLayer_Ticket_Attachment_File",
                "form": "relational",
                "typeArray": true,
                "doc": "The files attached to a ticket."
            },
            "attachedHardware": {
                "name": "attachedHardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "The hardware associated with a ticket. This is used in cases where a ticket is directly associated with one or more pieces of hardware."
            },
            "attachedHardwareCount": {
                "name": "attachedHardwareCount",
                "type": "unsignedInt",
                "form": "relational"
            },
            "attachedResources": {
                "name": "attachedResources",
                "type": "SoftLayer_Ticket_Attachment",
                "form": "relational",
                "typeArray": true
            },
            "attachedVirtualGuests": {
                "name": "attachedVirtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The virtual guests associated with a ticket. This is used in cases where a ticket is directly associated with one or more virtualized guests installations or Virtual Servers."
            },
            "awaitingUserResponseFlag": {
                "name": "awaitingUserResponseFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Ticket is waiting on a response from a customer flag."
            },
            "bnppSupportedFlag": {
                "name": "bnppSupportedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A ticket's associated BNPP compliant record"
            },
            "cancellationRequest": {
                "name": "cancellationRequest",
                "type": "SoftLayer_Billing_Item_Cancellation_Request",
                "form": "relational",
                "doc": "A service cancellation request."
            },
            "employeeAttachments": {
                "name": "employeeAttachments",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "typeArray": true
            },
            "euSupportedFlag": {
                "name": "euSupportedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A ticket's associated EU compliant record"
            },
            "firstAttachedResource": {
                "name": "firstAttachedResource",
                "type": "SoftLayer_Ticket_Attachment",
                "form": "relational",
                "doc": "The first physical or virtual server attached to a ticket."
            },
            "firstUpdate": {
                "name": "firstUpdate",
                "type": "SoftLayer_Ticket_Update",
                "form": "relational",
                "doc": "The first update made to a ticket. This is typically the contents of a ticket when it's created."
            },
            "fsboaSupportedFlag": {
                "name": "fsboaSupportedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A ticket's associated FSBOA compliant record"
            },
            "group": {
                "name": "group",
                "type": "SoftLayer_Ticket_Group",
                "form": "relational",
                "doc": "The SoftLayer department that a ticket is assigned to."
            },
            "invoiceItems": {
                "name": "invoiceItems",
                "type": "SoftLayer_Billing_Invoice_Item",
                "form": "relational",
                "typeArray": true,
                "doc": "The invoice items associated with a ticket. Ticket based invoice items only exist when a ticket incurs a fee that has been invoiced."
            },
            "lastActivity": {
                "name": "lastActivity",
                "type": "SoftLayer_Ticket_Activity",
                "form": "relational"
            },
            "lastEditor": {
                "name": "lastEditor",
                "type": "SoftLayer_User_Interface",
                "form": "relational"
            },
            "lastUpdate": {
                "name": "lastUpdate",
                "type": "SoftLayer_Ticket_Update",
                "form": "relational",
                "doc": "The last update made to a ticket."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "A ticket's associated location within the SoftLayer location hierarchy."
            },
            "newUpdatesFlag": {
                "name": "newUpdatesFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "True if there are new, unread updates to this ticket for the current user, False otherwise."
            },
            "scheduledActions": {
                "name": "scheduledActions",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "typeArray": true
            },
            "serverAdministrationBillingInvoice": {
                "name": "serverAdministrationBillingInvoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "doc": "The invoice associated with a ticket. Only tickets with an associated administrative charge have an invoice."
            },
            "serverAdministrationRefundInvoice": {
                "name": "serverAdministrationRefundInvoice",
                "type": "SoftLayer_Billing_Invoice",
                "form": "relational",
                "doc": "The refund invoice associated with a ticket. Only tickets with a refund applied in them have an associated refund invoice."
            },
            "serviceProvider": {
                "name": "serviceProvider",
                "type": "SoftLayer_Service_Provider",
                "form": "relational"
            },
            "state": {
                "name": "state",
                "type": "SoftLayer_Ticket_State",
                "form": "relational",
                "typeArray": true
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Ticket_Status",
                "form": "relational",
                "doc": "A ticket's status."
            },
            "subject": {
                "name": "subject",
                "type": "SoftLayer_Ticket_Subject",
                "form": "relational",
                "doc": "A ticket's subject. Only standard support tickets have an associated subject. A standard support ticket's title corresponds with it's subject's name."
            },
            "tagReferences": {
                "name": "tagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true
            },
            "updateRatingFlag": {
                "name": "updateRatingFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether employees' updates of this ticket could be rated by customer"
            },
            "updates": {
                "name": "updates",
                "type": "SoftLayer_Ticket_Update",
                "form": "relational",
                "typeArray": true,
                "doc": "A ticket's updates."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier of the SoftLayer customer account that a ticket is associated with."
            },
            "assignedUserId": {
                "name": "assignedUserId",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier of the portal user that a ticket is assigned to."
            },
            "billableFlag": {
                "name": "billableFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether a ticket has a one-time charge associated with it. Standard tickets are free while administrative tickets typically cost $3 USD. "
            },
            "bnppSupportedLocationId": {
                "name": "bnppSupportedLocationId",
                "type": "int",
                "form": "local"
            },
            "changeOwnerFlag": {
                "name": "changeOwnerFlag",
                "type": "boolean",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a ticket was created."
            },
            "euSupportedLocationId": {
                "name": "euSupportedLocationId",
                "type": "int",
                "form": "local"
            },
            "finalComments": {
                "name": "finalComments",
                "type": "string",
                "form": "local",
                "doc": "Feedback left by a portal or API user on their experiences in a ticket. Final comments may be created after a ticket is closed. "
            },
            "groupId": {
                "name": "groupId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the SoftLayer department that a ticket is assigned to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A ticket's internal identifier. Each ticket is defined by a unique identifier."
            },
            "lastEditDate": {
                "name": "lastEditDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a ticket was last modified. A modification does not necessarily mean that an update was added."
            },
            "lastEditType": {
                "name": "lastEditType",
                "type": "string",
                "form": "local",
                "doc": "The type of user who last edited or updated a ticket. This is either \"EMPLOYEE\" or \"USER\"."
            },
            "lastResponseDate": {
                "name": "lastResponseDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the last ticket update was made"
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the location associated with a ticket."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a ticket was last updated."
            },
            "notifyUserOnUpdateFlag": {
                "name": "notifyUserOnUpdateFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether or not the user who owns a ticket is notified via email when a ticket is updated."
            },
            "originatingIpAddress": {
                "name": "originatingIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address of the user who opened a ticket."
            },
            "priority": {
                "name": "priority",
                "type": "int",
                "form": "local"
            },
            "responsibleBrandId": {
                "name": "responsibleBrandId",
                "type": "int",
                "form": "local"
            },
            "serverAdministrationBillingAmount": {
                "name": "serverAdministrationBillingAmount",
                "type": "int",
                "form": "local",
                "doc": "The amount of money in US Dollars ($USD) that a ticket has charged to an account. A ticket's administrative billing amount is a one time charge and only applies to administrative support tickets. "
            },
            "serverAdministrationBillingInvoiceId": {
                "name": "serverAdministrationBillingInvoiceId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the invoice associated with a ticket's administrative charge. Only tickets with an administrative charge have an associated invoice. "
            },
            "serverAdministrationFlag": {
                "name": "serverAdministrationFlag",
                "type": "int",
                "form": "local",
                "doc": "Whether a ticket is a standard or an administrative support ticket. Administrative support tickets typically incur a $3 USD charge."
            },
            "serverAdministrationRefundInvoiceId": {
                "name": "serverAdministrationRefundInvoiceId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the refund invoice associated with a ticket. Only tickets with an account refund associated with them have an associated refund invoice. "
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local"
            },
            "serviceProviderResourceId": {
                "name": "serviceProviderResourceId",
                "type": "string",
                "form": "local",
                "doc": "A ticket's internal identifier at its service provider. Each ticket is defined by a unique identifier."
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "A ticket status' internal identifier."
            },
            "subjectId": {
                "name": "subjectId",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier of the pre-set subject that a ticket is associated with. Standard support tickets have a subject set while administrative tickets have a null subject. A standard support ticket's title is the name of it's associated subject. "
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "A ticket's title. This is typically a brief summary of the issue described in the ticket."
            },
            "totalUpdateCount": {
                "name": "totalUpdateCount",
                "type": "int",
                "form": "local"
            },
            "userEditableFlag": {
                "name": "userEditableFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether a user is able to update a ticket."
            },
            "assignedAgentCount": {
                "name": "assignedAgentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "attachedAdditionalEmailCount": {
                "name": "attachedAdditionalEmailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the list of additional emails to notify when a ticket update is made."
            },
            "attachedDedicatedHostCount": {
                "name": "attachedDedicatedHostCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the Dedicated Hosts associated with a ticket. This is used in cases where a ticket is directly associated with one or more Dedicated Hosts."
            },
            "attachedFileCount": {
                "name": "attachedFileCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the files attached to a ticket."
            },
            "attachedResourceCount": {
                "name": "attachedResourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "attachedVirtualGuestCount": {
                "name": "attachedVirtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the virtual guests associated with a ticket. This is used in cases where a ticket is directly associated with one or more virtualized guests installations or Virtual Servers."
            },
            "employeeAttachmentCount": {
                "name": "employeeAttachmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "invoiceItemCount": {
                "name": "invoiceItemCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the invoice items associated with a ticket. Ticket based invoice items only exist when a ticket incurs a fee that has been invoiced."
            },
            "scheduledActionCount": {
                "name": "scheduledActionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "stateCount": {
                "name": "stateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "tagReferenceCount": {
                "name": "tagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "updateCount": {
                "name": "updateCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a ticket's updates."
            }
        }
    },
    "SoftLayer_Ticket_Activity": {
        "name": "SoftLayer_Ticket_Activity",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "editor": {
                "name": "editor",
                "type": "SoftLayer_User_Interface",
                "form": "relational"
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational"
            },
            "ticketUpdate": {
                "name": "ticketUpdate",
                "type": "SoftLayer_Ticket_Update",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "createTimestamp": {
                "name": "createTimestamp",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Ticket_Attachment": {
        "name": "SoftLayer_Ticket_Attachment",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer tickets have the ability to be associated with specific pieces of hardware in a customer's inventory. Attaching hardware to a ticket can greatly increase response time from SoftLayer for issues that are related to one or more specific servers on a customer's account. The SoftLayer_Ticket_Attachment_Hardware data type models the relationship between a piece of hardware and a ticket. Only one attachment record may exist per hardware item per ticket. ",
        "properties": {
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "doc": "The ticket that an item is attached to."
            },
            "attachmentId": {
                "name": "attachmentId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of an item that is attached to a ticket."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that an item was attached to a ticket."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A ticket attachment's internal identifier."
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the ticket that an item is attached to."
            }
        }
    },
    "SoftLayer_Ticket_Attachment_Assigned_Agent": {
        "name": "SoftLayer_Ticket_Attachment_Assigned_Agent",
        "base": "SoftLayer_Ticket_Attachment",
        "noservice": true,
        "properties": {
            "assignedAgent": {
                "name": "assignedAgent",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "assignedAgentId": {
                "name": "assignedAgentId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of an assigned Agent that is attached to a ticket."
            }
        }
    },
    "SoftLayer_Ticket_Attachment_CardChangeRequest": {
        "name": "SoftLayer_Ticket_Attachment_CardChangeRequest",
        "base": "SoftLayer_Ticket_Attachment",
        "noservice": true,
        "typeDoc": "This datatype contains tickets referenced from card change request ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Billing_Payment_Card_ChangeRequest",
                "form": "relational",
                "doc": "The card change request that is attached to a ticket."
            }
        }
    },
    "SoftLayer_Ticket_Attachment_Dedicated_Host": {
        "name": "SoftLayer_Ticket_Attachment_Dedicated_Host",
        "base": "SoftLayer_Ticket_Attachment",
        "noservice": true,
        "typeDoc": "SoftLayer tickets have the ability to be associated with specific dedicated hosts in a customer's inventory. Attaching a dedicated host to a ticket can greatly increase response time from SoftLayer for issues that are related to one or more specific hosts on a customer's account. The SoftLayer_Ticket_Attachment_Dedicated_Host data type models the relationship between a dedicated host and a ticket. Only one attachment record can exist per dedicated host item per ticket. ",
        "properties": {
            "dedicatedHost": {
                "name": "dedicatedHost",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "form": "relational",
                "doc": "The dedicated dost that is attached to a ticket."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "form": "relational",
                "doc": "The Dedicated Host that is attached to a ticket."
            },
            "dedicatedHostId": {
                "name": "dedicatedHostId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the Dedicated Host that is attached to a ticket."
            }
        }
    },
    "SoftLayer_Ticket_Attachment_File": {
        "name": "SoftLayer_Ticket_Attachment_File",
        "base": "SoftLayer_Entity",
        "methods": {
            "getExtensionWhitelist": {
                "name": "getExtensionWhitelist",
                "type": "string",
                "typeArray": true,
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Ticket_Attachment_File",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer tickets can have have files attached to them. Attaching a file to a ticket is a good way to report issues, provide documentation, and give examples of an issue. Both SoftLayer customers and employees have the ability to attach files to a ticket. The SoftLayer_Ticket_Attachment_File data type models a single file attached to a ticket. ",
        "properties": {
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational"
            },
            "update": {
                "name": "update",
                "type": "SoftLayer_Ticket_Update",
                "form": "relational",
                "doc": "The ticket that a file is attached to."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a file was originally attached to a ticket."
            },
            "fileName": {
                "name": "fileName",
                "type": "string",
                "form": "local",
                "doc": "The name of a file attached to a ticket."
            },
            "fileSize": {
                "name": "fileSize",
                "type": "string",
                "form": "local",
                "doc": "The size of a file attached to a ticket, measured in bytes."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A ticket file attachment's internal identifier."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a file attachment record was last modified."
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the ticket that a file is attached to."
            },
            "updateId": {
                "name": "updateId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the ticket update the attached file is associated with. "
            },
            "uploaderId": {
                "name": "uploaderId",
                "type": "string",
                "form": "local",
                "doc": "The internal identifier of the user that uploaded a ticket file attachment. This is only used when A file attachment's ''uploaderType'' is set to \"USER\". "
            },
            "uploaderType": {
                "name": "uploaderType",
                "type": "string",
                "form": "local",
                "doc": "The type of user that attached a file to a ticket. This is either \"USER\" if the file was uploaded by a portal or API user or \"EMPLOYEE\" if the file was uploaded by a SoftLayer employee. "
            }
        }
    },
    "SoftLayer_Ticket_Attachment_File_ServiceNow": {
        "name": "SoftLayer_Ticket_Attachment_File_ServiceNow",
        "base": "SoftLayer_Ticket_Attachment_File",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Ticket_Attachment_File_ServiceNow",
                "filterable": true,
                "maskable": true
            }
        }
    },
    "SoftLayer_Ticket_Attachment_Hardware": {
        "name": "SoftLayer_Ticket_Attachment_Hardware",
        "base": "SoftLayer_Ticket_Attachment",
        "noservice": true,
        "typeDoc": "SoftLayer tickets have the ability to be associated with specific pieces of hardware in a customer's inventory. Attaching hardware to a ticket can greatly increase response time from SoftLayer for issues that are related to one or more specific servers on a customer's account. The SoftLayer_Ticket_Attachment_Hardware data type models the relationship between a piece of hardware and a ticket. Only one attachment record may exist per hardware item per ticket. ",
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware that is attached to a ticket."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware that is attached to a ticket."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a piece of hardware that is attached to a ticket."
            }
        }
    },
    "SoftLayer_Ticket_Attachment_Manual_Payment": {
        "name": "SoftLayer_Ticket_Attachment_Manual_Payment",
        "base": "SoftLayer_Ticket_Attachment",
        "noservice": true,
        "typeDoc": "This datatype contains tickets referenced from manual payments ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Billing_Payment_Card_ManualPayment",
                "form": "relational",
                "doc": "The manual payment that is attached to a ticket."
            }
        }
    },
    "SoftLayer_Ticket_Attachment_Network_Storage_Mass_Data_Migration": {
        "name": "SoftLayer_Ticket_Attachment_Network_Storage_Mass_Data_Migration",
        "base": "SoftLayer_Ticket_Attachment",
        "noservice": true,
        "properties": {
            "request": {
                "name": "request",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request",
                "form": "relational",
                "doc": "The Mass Data Migration request that is attached to a ticket."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Network_Storage_MassDataMigration_Request",
                "form": "relational",
                "doc": "The Mass Data Migration request that is attached to a ticket."
            },
            "requestId": {
                "name": "requestId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Ticket_Attachment_Scheduled_Action": {
        "name": "SoftLayer_Ticket_Attachment_Scheduled_Action",
        "base": "SoftLayer_Ticket_Attachment",
        "noservice": true,
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational"
            },
            "scheduledAction": {
                "name": "scheduledAction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational"
            },
            "transaction": {
                "name": "transaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational"
            },
            "runDate": {
                "name": "runDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The internal identifier of a scheduled action transaction that is attached to a ticket."
            },
            "transactionId": {
                "name": "transactionId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of a scheduled action transaction that is attached to a ticket."
            }
        }
    },
    "SoftLayer_Ticket_Attachment_Virtual_Guest": {
        "name": "SoftLayer_Ticket_Attachment_Virtual_Guest",
        "base": "SoftLayer_Ticket_Attachment",
        "noservice": true,
        "typeDoc": "SoftLayer tickets have the ability to be associated with specific virtual guests in a customer's inventory. Attaching virtual guests to a ticket can greatly increase response time from SoftLayer for issues that are related to one or more specific servers on a customer's account. The SoftLayer_Ticket_Attachment_Virtual_Guest data type models the relationship between a virtual guest and a ticket. Only one attachment record may exist per virtual guest per ticket. ",
        "properties": {
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The virtualized guest or CloudLayer Computing Instance that is attached to a ticket."
            },
            "virtualGuest": {
                "name": "virtualGuest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The virtualized guest or CloudLayer Computing Instance that is attached to a ticket."
            },
            "virtualGuestId": {
                "name": "virtualGuestId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the virtualized guest or CloudLayer Computing Instance that is attached to a ticket."
            }
        }
    },
    "SoftLayer_Ticket_Chat": {
        "name": "SoftLayer_Ticket_Chat",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "agent": {
                "name": "agent",
                "type": "SoftLayer_User_Employee",
                "form": "relational"
            },
            "customer": {
                "name": "customer",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "ticketUpdate": {
                "name": "ticketUpdate",
                "type": "SoftLayer_Ticket_Update_Chat",
                "form": "relational"
            },
            "customerId": {
                "name": "customerId",
                "type": "int",
                "form": "local"
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local"
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local"
            },
            "transcript": {
                "name": "transcript",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Ticket_Chat_Liveperson": {
        "name": "SoftLayer_Ticket_Chat_Liveperson",
        "base": "SoftLayer_Ticket_Chat",
        "noservice": true
    },
    "SoftLayer_Ticket_Chat_TranscriptLine": {
        "name": "SoftLayer_Ticket_Chat_TranscriptLine",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "speaker": {
                "name": "speaker",
                "type": "SoftLayer_User_Interface",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Ticket_Chat_TranscriptLine_Customer": {
        "name": "SoftLayer_Ticket_Chat_TranscriptLine_Customer",
        "base": "SoftLayer_Ticket_Chat_TranscriptLine",
        "noservice": true
    },
    "SoftLayer_Ticket_Chat_TranscriptLine_Employee": {
        "name": "SoftLayer_Ticket_Chat_TranscriptLine_Employee",
        "base": "SoftLayer_Ticket_Chat_TranscriptLine",
        "noservice": true
    },
    "SoftLayer_Ticket_EuCompliance": {
        "name": "SoftLayer_Ticket_EuCompliance",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational"
            },
            "securityLevel": {
                "name": "securityLevel",
                "type": "SoftLayer_Security_Level",
                "form": "relational"
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational"
            }
        }
    },
    "SoftLayer_Ticket_Group": {
        "name": "SoftLayer_Ticket_Group",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer tickets have the ability to be assigned to one of SoftLayer's internal departments. The department that a ticket is assigned to is modeled by the SoftLayer_Ticket_Group data type. Ticket groups help to ensure that the proper department is handling a ticket. Standard support tickets are created from a number of pre-determined subjects. These subjects help determine which group a standard ticket is assigned to. ",
        "properties": {
            "category": {
                "name": "category",
                "type": "SoftLayer_Ticket_Group_Category",
                "form": "relational",
                "doc": "The category that a ticket group belongs to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A ticket group's internal identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A ticket group's name."
            },
            "ticketGroupCategoryId": {
                "name": "ticketGroupCategoryId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier for the category that a ticket group belongs to.."
            }
        }
    },
    "SoftLayer_Ticket_Group_Category": {
        "name": "SoftLayer_Ticket_Group_Category",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer's support ticket groups represent the department at SoftLayer that is assigned to work one of your support tickets. Many departments are responsible for handling different types of tickets. These types of tickets are modeled in the SoftLayer_Ticket_Group_Category data type. Ticket group categories also help separate differentiate your tickets' issues in the SoftLayer customer portal. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A ticket group category's unique identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A ticket group category's name."
            }
        }
    },
    "SoftLayer_Ticket_Priority": {
        "name": "SoftLayer_Ticket_Priority",
        "base": "SoftLayer_Entity",
        "methods": {
            "getPriorities": {
                "name": "getPriorities",
                "type": "SoftLayer_Container_Ticket_Priority",
                "typeArray": true,
                "static": true
            }
        }
    },
    "SoftLayer_Ticket_State": {
        "name": "SoftLayer_Ticket_State",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "stateType": {
                "name": "stateType",
                "type": "SoftLayer_Ticket_State_Type",
                "form": "relational"
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "stateTypeId": {
                "name": "stateTypeId",
                "type": "int",
                "form": "local"
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Ticket_State_Type": {
        "name": "SoftLayer_Ticket_State_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Ticket_Status": {
        "name": "SoftLayer_Ticket_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Ticket_Status data type models the state of a ticket as it is worked by SoftLayer and its customers. Tickets exist in one of three states: \n*'''OPEN''': Open tickets are considered unresolved issues by SoftLayer and can be assigned to a SoftLayer employee for work. Tickets created by portal or API users are created in the Open state.\n*'''ASSIGNED''': Assigned tickets are identical to open tickets, but are assigned to an individual SoftLayer employee. An assigned ticket is actively being worked by SoftLayer.\n*'''CLOSED''': Tickets are closed when the issue at hand is considered resolved. A SoftLayer employee can change a ticket's status from Closed to Open or Assigned if the need arises.\n\n\nA ticket usually goes from the Open to Assigned to Closed states during its life cycle. If a ticket is forwarded from one department to another it may change from the Assigned state back to Open until it is assigned to a member of the new department. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A ticket status' internal identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A ticket status' name."
            }
        }
    },
    "SoftLayer_Ticket_Subject": {
        "name": "SoftLayer_Ticket_Subject",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every standard support ticket submitted to SoftLayer contains a relationship to a pre-determined subject which populates that ticket's title. The SoftLayer_Ticket_Subject service retrieves these subjects. These ticket subjects also determine which department a ticket is opened for. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Ticket_Subject",
                "typeArray": true,
                "doc": "Retrieve all possible ticket subjects. The SoftLayer customer portal uses this method in the add standard support ticket form.",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Ticket_Subject",
                "doc": "getObject retrieves the SoftLayer_Ticket_Subject object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Ticket_Subject service. ",
                "filterable": true,
                "maskable": true
            },
            "getTopFiveKnowledgeLayerQuestions": {
                "name": "getTopFiveKnowledgeLayerQuestions",
                "type": "SoftLayer_Container_KnowledgeLayer_QuestionAnswer",
                "typeArray": true,
                "doc": "SoftLayer maintains relationships between the generic subjects for standard administration and the top five commonly asked questions about these subjects. getTopFileKnowledgeLayerQuestions() retrieves the top five questions and answers from the SoftLayer KnowledgeLayer related to the given ticket subject. "
            }
        },
        "typeDoc": "The SoftLayer_Ticket_Subject data type models one of the possible subjects that a standard support ticket may belong to. A basic support ticket's title matches it's corresponding subject's name. ",
        "properties": {
            "category": {
                "name": "category",
                "type": "SoftLayer_Ticket_Subject_Category",
                "form": "relational"
            },
            "children": {
                "name": "children",
                "type": "SoftLayer_Ticket_Subject",
                "form": "relational",
                "typeArray": true,
                "doc": "A child subject"
            },
            "group": {
                "name": "group",
                "type": "SoftLayer_Ticket_Group",
                "form": "relational"
            },
            "parent": {
                "name": "parent",
                "type": "SoftLayer_Ticket_Subject",
                "form": "relational",
                "doc": "A parent subject"
            },
            "categoryId": {
                "name": "categoryId",
                "type": "int",
                "form": "local",
                "doc": "The subject category id that this ticket subject belongs to."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A ticket subject's internal identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A ticket subject's name. This name is used for a standard support ticket's title."
            },
            "parentId": {
                "name": "parentId",
                "type": "int",
                "form": "local",
                "doc": "Specifies the parent subject id."
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a child subject"
            }
        }
    },
    "SoftLayer_Ticket_Subject_Category": {
        "name": "SoftLayer_Ticket_Subject_Category",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Ticket_Subject_Category",
                "typeArray": true,
                "doc": "Retrieve all ticket subject categories.",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Ticket_Subject_Category",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "SoftLayer_Ticket_Subject_Category groups ticket subjects into logical group. ",
        "properties": {
            "subjects": {
                "name": "subjects",
                "type": "SoftLayer_Ticket_Subject",
                "form": "relational",
                "typeArray": true
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A unique identifier of a ticket subject category."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A ticket subject category name."
            },
            "subjectCount": {
                "name": "subjectCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Ticket_Survey": {
        "name": "SoftLayer_Ticket_Survey",
        "base": "SoftLayer_Entity",
        "methods": {
            "getPreference": {
                "name": "getPreference",
                "type": "void",
                "doc": "(DEPRECATED) To opt in or out of future surveys, please follow the link found in the email survey. ",
                "static": true
            },
            "optIn": {
                "name": "optIn",
                "type": "void",
                "doc": "(DEPRECATED) To opt in of future surveys, please follow the link found in the email survey. ",
                "static": true
            },
            "optOut": {
                "name": "optOut",
                "type": "void",
                "doc": "(DEPRECATED) To opt out of future surveys, please follow the link found in the email survey. ",
                "static": true
            }
        }
    },
    "SoftLayer_Ticket_Type": {
        "name": "SoftLayer_Ticket_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Ticket_Update": {
        "name": "SoftLayer_Ticket_Update",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Ticket_Update type relates to a single update to a ticket, either by a customer or an employee. ",
        "properties": {
            "changeOwnerActivity": {
                "name": "changeOwnerActivity",
                "type": "string",
                "form": "relational"
            },
            "chat": {
                "name": "chat",
                "type": "SoftLayer_Ticket_Chat_Liveperson",
                "form": "relational",
                "doc": "The chat between the Customer and Agent"
            },
            "editor": {
                "name": "editor",
                "type": "SoftLayer_User_Interface",
                "form": "relational",
                "doc": "The user or SoftLayer employee who created a ticket update."
            },
            "fileAttachment": {
                "name": "fileAttachment",
                "type": "SoftLayer_Ticket_Attachment_File",
                "form": "relational",
                "typeArray": true,
                "doc": "The files attached to a ticket update."
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "doc": "The ticket that a ticket update belongs to."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Ticket_Update_Type",
                "form": "relational",
                "doc": "The Type of update to this ticket"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The data a ticket update was created."
            },
            "editorId": {
                "name": "editorId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the SoftLayer portal or API user who created a ticket update. This is only used if a ticket update's ''editorType'' property is \"USER\". "
            },
            "editorType": {
                "name": "editorType",
                "type": "string",
                "form": "local",
                "doc": "The type user who created a ticket update. This is either \"USER\" for an update created by a SoftLayer portal or API user, \"EMPLOYEE\" for an update created by a SoftLayer employee, or \"AUTO\" if a ticket update was generated automatically by SoftLayer's backend systems. "
            },
            "entry": {
                "name": "entry",
                "type": "string",
                "form": "local",
                "doc": "The contents of a ticket update."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A ticket update's internal identifier."
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the ticket that a ticket update belongs to."
            },
            "fileAttachmentCount": {
                "name": "fileAttachmentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the files attached to a ticket update."
            }
        }
    },
    "SoftLayer_Ticket_Update_Agent": {
        "name": "SoftLayer_Ticket_Update_Agent",
        "base": "SoftLayer_Ticket_Update",
        "noservice": true,
        "typeDoc": "A SoftLayer_Ticket_Update_Agent type models an update to a ticket made by an agent. "
    },
    "SoftLayer_Ticket_Update_Chat": {
        "name": "SoftLayer_Ticket_Update_Chat",
        "base": "SoftLayer_Ticket_Update",
        "noservice": true,
        "typeDoc": "A SoftLayer_Ticket_Update_Chat is a chat between a customer and a customer service representative relating to a ticket. "
    },
    "SoftLayer_Ticket_Update_Customer": {
        "name": "SoftLayer_Ticket_Update_Customer",
        "base": "SoftLayer_Ticket_Update",
        "noservice": true,
        "typeDoc": "A SoftLayer_Ticket_Update_Customer is a single update made by a customer to a ticket. "
    },
    "SoftLayer_Ticket_Update_Employee": {
        "name": "SoftLayer_Ticket_Update_Employee",
        "base": "SoftLayer_Ticket_Update",
        "serviceDoc": "Retrieve an update to a ticket made by a SoftLayer employee. Ticket updates created by employees have the option of being rated on a one to five scale. Because customer updates don't have this ability the SoftLayer_Ticket_Update_Employee class has it's own service. ",
        "methods": {
            "addResponseRating": {
                "name": "addResponseRating",
                "type": "boolean",
                "doc": "As part of the customer service process SoftLayer has provided a quick feedback mechanism for its customers to rate the responses that its employees give on tickets. addResponseRating() sets the rating for a single ticket update made by a SoftLayer employee. Ticket ratings have the integer values 1 through 5, with 1 being the worst and 5 being the best. Once the rating is set ''addResponseRating()'' returns a boolean true. ",
                "parameters": [
                    {
                        "name": "responseRating",
                        "type": "int",
                        "doc": "An integer value from 1 to 5, worst to best, that rates a SoftLayer employee's ticket response."
                    },
                    {
                        "name": "responseIndex",
                        "type": "int",
                        "doc": "An integer value, that refers to the unique update Number."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Ticket_Update_Employee",
                "doc": "getObject retrieves the SoftLayer_Ticket_Update_Employee object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Ticket_Update_Employee service. You can only retrieve employee updates to tickets that your API account has access to. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Ticket_Update_Employee data type models an update to a ticket made by a SoftLayer employee. ",
        "properties": {
            "responseRating": {
                "name": "responseRating",
                "type": "int",
                "form": "local",
                "doc": "A ticket update's response rating. Ticket updates posted by SoftLayer employees have the option of earning a rating from SoftLayer's customers. Ratings are based on a 1 - 5 scale, with one being a poor rating while 5 is a very high rating. This is only used if a ticket update's ''editorType'' property is \"EMPLOYEE\". "
            }
        }
    },
    "SoftLayer_Ticket_Update_Type": {
        "name": "SoftLayer_Ticket_Update_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket_Update",
                "form": "relational"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_User_Access_Facility_Log": {
        "name": "SoftLayer_User_Access_Facility_Log",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This class represents a login/logout sheet for facility visitors.",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "This is the account associated with the log entry. For users under a customer's account, it is the customer's account. For contractors and others visiting a colocation area, it is the account associated with the area they visited."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "This is the location of the facility."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "This is the colocation hardware that was visited."
            },
            "logType": {
                "name": "logType",
                "type": "SoftLayer_User_Access_Facility_Log_Type",
                "form": "relational",
                "doc": "This is the type of person entering the facility."
            },
            "visitor": {
                "name": "visitor",
                "type": "SoftLayer_Entity",
                "form": "relational"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "This is the account associated with a log record. For a customer logging into a datacenter, this is the customer's account. For a contractor or any other guest logging into a customer's cabinet or colocation cage, this is the customer's account. "
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "This is a short description of why the person is at the location. "
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local"
            },
            "timeIn": {
                "name": "timeIn",
                "type": "dateTime",
                "form": "local",
                "doc": "This is the date and time the person arrived. "
            },
            "timeOut": {
                "name": "timeOut",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_User_Access_Facility_Log_Type": {
        "name": "SoftLayer_User_Access_Facility_Log_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_User_Access_Facility_Visitor": {
        "name": "SoftLayer_User_Access_Facility_Visitor",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This class represents a facility visitor that is not an active employee or customer.",
        "properties": {
            "visitorType": {
                "name": "visitorType",
                "type": "SoftLayer_User_Access_Facility_Visitor_Type",
                "form": "relational"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_User_Access_Facility_Visitor_Type": {
        "name": "SoftLayer_User_Access_Facility_Visitor_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_User_Customer": {
        "name": "SoftLayer_User_Customer",
        "base": "SoftLayer_User_Interface",
        "serviceDoc": "Every SoftLayer account has one or more portal users which are defined by the SoftLayer_User_Customer service. Every SoftLayer customer account has a master user account whose name corresponds to their account id preceded by the letters \"SL\". Users exist in a parent-child relationship. Child users inherit the properties and permissions of their parent user while conversely a user may have more than one child users. \n\nAPI users have full access to their own portal user account and they could also have access to other users under their SoftLayer customer account, if they have \"Manage Users\" permission in the customer portal. \n\nThere are two relational properties that contain the permissions assigned to a customer user; permissions and actions.  These are simply two different representations of the same information. The permissions ORM key creates a SoftLayer_Container_Collection_Permissions collection from SoftLayer_User_Customer_CustomerPermission_Permission objects which is populated from the same data source as the actions ORM key which creates a SoftLayer_Container_Collection_Permissions collection from SoftLayer_User_Permission_Action objects. ",
        "methods": {
            "acknowledgeSupportPolicy": {
                "name": "acknowledgeSupportPolicy",
                "type": "void"
            },
            "addApiAuthenticationKey": {
                "name": "addApiAuthenticationKey",
                "type": "string",
                "doc": "Create a user's API authentication key, allowing that user access to query the SoftLayer API. addApiAuthenticationKey() returns the user's new API key. Each portal user is allowed only one API key. "
            },
            "addBulkDedicatedHostAccess": {
                "name": "addBulkDedicatedHostAccess",
                "type": "boolean",
                "doc": "Grants the user access to one or more dedicated host devices.  The user will only be allowed to see and access devices in both the portal and the API to which they have been granted access.  If the user's account has devices to which the user has not been granted access, then \"not found\" exceptions are thrown if the user attempts to access any of these devices. \n\nUsers can assign device access to their child users, but not to themselves. An account's master has access to all devices on their customer account and can set dedicated host access for any of the other users on their account. ",
                "parameters": [
                    {
                        "name": "dedicatedHostIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "Dedicated Host IDs"
                    }
                ]
            },
            "addBulkHardwareAccess": {
                "name": "addBulkHardwareAccess",
                "type": "boolean",
                "doc": "Add multiple hardware to a portal user's hardware access list. A user's hardware access list controls which of an account's hardware objects a user has access to in the SoftLayer customer portal and API. Hardware does not exist in the SoftLayer portal and returns \"not found\" exceptions in the API if the user doesn't have access to it. addBulkHardwareAccess() does not attempt to add hardware access if the given user already has access to that hardware object. \n\nUsers can assign hardware access to their child users, but not to themselves. An account's master has access to all hardware on their customer account and can set hardware access for any of the other users on their account. ",
                "parameters": [
                    {
                        "name": "hardwareIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "Hardware IDs"
                    }
                ]
            },
            "addBulkPortalPermission": {
                "name": "addBulkPortalPermission",
                "type": "boolean",
                "doc": "Add multiple permissions to a portal user's permission set. [[SoftLayer_User_Customer_CustomerPermission_Permission]] control which features in the SoftLayer customer portal and API a user may use. addBulkPortalPermission() does not attempt to add permissions already assigned to the user. \n\nUsers can assign permissions to their child users, but not to themselves. An account's master has all portal permissions and can set permissions for any of the other users on their account. \n\nUse the [[SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects]] method to retrieve a list of all permissions available in the SoftLayer customer portal and API. Permissions are removed based on the keyName property of the permission objects within the permissions parameter. ",
                "parameters": [
                    {
                        "name": "permissions",
                        "type": "SoftLayer_User_Customer_CustomerPermission_Permission",
                        "typeArray": true,
                        "doc": "A collection of permissions to assign to this user."
                    }
                ]
            },
            "addBulkRoles": {
                "name": "addBulkRoles",
                "type": "void",
                "parameters": [
                    {
                        "name": "roles",
                        "type": "SoftLayer_User_Permission_Role",
                        "typeArray": true
                    }
                ]
            },
            "addBulkVirtualGuestAccess": {
                "name": "addBulkVirtualGuestAccess",
                "type": "boolean",
                "doc": "Add multiple CloudLayer Computing Instances to a portal user's access list. A user's CloudLayer Computing Instance access list controls which of an account's CloudLayer Computing Instance objects a user has access to in the SoftLayer customer portal and API. CloudLayer Computing Instances do not exist in the SoftLayer portal and returns \"not found\" exceptions in the API if the user doesn't have access to it. addBulkVirtualGuestAccess() does not attempt to add CloudLayer Computing Instance access if the given user already has access to that CloudLayer Computing Instance object. \n\nUsers can assign CloudLayer Computing Instance access to their child users, but not to themselves. An account's master has access to all CloudLayer Computing Instances on their customer account and can set CloudLayer Computing Instance access for any of the other users on their account. ",
                "parameters": [
                    {
                        "name": "virtualGuestIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "The internal identifiers of the CloudLayer Computing Instances you wish to add access to."
                    }
                ]
            },
            "addDedicatedHostAccess": {
                "name": "addDedicatedHostAccess",
                "type": "boolean",
                "doc": "Grants the user access to a single dedicated host device.  The user will only be allowed to see and access devices in both the portal and the API to which they have been granted access.  If the user's account has devices to which the user has not been granted access, then \"not found\" exceptions are thrown if the user attempts to access any of these devices. \n\nUsers can assign device access to their child users, but not to themselves. An account's master has access to all devices on their customer account and can set dedicated host access for any of the other users on their account. \n\nOnly the USER_MANAGE permission is required to execute this. ",
                "parameters": [
                    {
                        "name": "dedicatedHostId",
                        "type": "int",
                        "doc": "The identifier of the dedicatedHost to add to a user's dedicatedHost access list."
                    }
                ]
            },
            "addExternalBinding": {
                "name": "addExternalBinding",
                "type": "SoftLayer_User_Customer_External_Binding",
                "maskable": true,
                "parameters": [
                    {
                        "name": "externalBinding",
                        "type": "SoftLayer_User_External_Binding",
                        "doc": "The template object of an external binding you would like to add to this user."
                    }
                ]
            },
            "addHardwareAccess": {
                "name": "addHardwareAccess",
                "type": "boolean",
                "doc": "Add hardware to a portal user's hardware access list. A user's hardware access list controls which of an account's hardware objects a user has access to in the SoftLayer customer portal and API. Hardware does not exist in the SoftLayer portal and returns \"not found\" exceptions in the API if the user doesn't have access to it. If a user already has access to the hardware you're attempting to add then addHardwareAccess() returns true. \n\nUsers can assign hardware access to their child users, but not to themselves. An account's master has access to all hardware on their customer account and can set hardware access for any of the other users on their account. \n\nOnly the USER_MANAGE permission is required to execute this. ",
                "parameters": [
                    {
                        "name": "hardwareId",
                        "type": "int",
                        "doc": "The identifier of the hardware to add to a user's hardware access list."
                    }
                ]
            },
            "addNotificationSubscriber": {
                "name": "addNotificationSubscriber",
                "type": "boolean",
                "doc": "Create a notification subscription record for the user. If a subscription record exists for the notification, the record will be set to active, if currently inactive. ",
                "parameters": [
                    {
                        "name": "notificationKeyName",
                        "type": "string"
                    }
                ]
            },
            "addPortalPermission": {
                "name": "addPortalPermission",
                "type": "boolean",
                "doc": "Add a permission to a portal user's permission set. [[SoftLayer_User_Customer_CustomerPermission_Permission]] control which features in the SoftLayer customer portal and API a user may use. If the user already has the permission you're attempting to add then addPortalPermission() returns true. \n\nUsers can assign permissions to their child users, but not to themselves. An account's master has all portal permissions and can set permissions for any of the other users on their account. \n\nUse the [[SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects]] method to retrieve a list of all permissions available in the SoftLayer customer portal and API. Permissions are added based on the keyName property of the permission parameter. ",
                "parameters": [
                    {
                        "name": "permission",
                        "type": "SoftLayer_User_Customer_CustomerPermission_Permission",
                        "doc": "The permission you wish to add to the given user."
                    }
                ]
            },
            "addRole": {
                "name": "addRole",
                "type": "void",
                "parameters": [
                    {
                        "name": "role",
                        "type": "SoftLayer_User_Permission_Role"
                    }
                ]
            },
            "addVirtualGuestAccess": {
                "name": "addVirtualGuestAccess",
                "type": "boolean",
                "doc": "Add a CloudLayer Computing Instance to a portal user's access list. A user's CloudLayer Computing Instance access list controls which of an account's CloudLayer Computing Instance objects a user has access to in the SoftLayer customer portal and API. CloudLayer Computing Instances do not exist in the SoftLayer portal and returns \"not found\" exceptions in the API if the user doesn't have access to it. If a user already has access to the CloudLayer Computing Instance you're attempting to add then addVirtualGuestAccess() returns true. \n\nUsers can assign CloudLayer Computing Instance access to their child users, but not to themselves. An account's master has access to all CloudLayer Computing Instances on their customer account and can set CloudLayer Computing Instance access for any of the other users on their account. \n\nOnly the USER_MANAGE permission is required to execute this. ",
                "parameters": [
                    {
                        "name": "virtualGuestId",
                        "type": "int",
                        "doc": "The identifier of the Virtual Server to add to a user's access list."
                    }
                ]
            },
            "assignNewParentId": {
                "name": "assignNewParentId",
                "type": "SoftLayer_User_Customer",
                "doc": "This method can be used in place of [[SoftLayer_User_Customer::editObject]] to change the parent user of this user. \n\nThe new parent must be a user on the same account, and must not be a child of this user.  A user is not allowed to change their own parent. \n\nIf the cascadeFlag is set to false, then an exception will be thrown if the new parent does not have all of the permissions that this user possesses.  If the cascadeFlag is set to true, then permissions will be removed from this user and the descendants of this user as necessary so that no children of the parent will have permissions that the parent does not possess. However, setting the cascadeFlag to true will not remove the access all device permissions from this user. The customer portal will need to be used to remove these permissions. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "parentId",
                        "type": "int",
                        "doc": "The id of a [[SoftLayer_User_Customer]] to be assigned as the parent to the instantiated user"
                    },
                    {
                        "name": "cascadePermissionsFlag",
                        "type": "boolean",
                        "doc": "Flag specifying whether remove permissions from the user that are not assigned to the new parent",
                        "defaultValue": false
                    }
                ]
            },
            "changePreference": {
                "name": "changePreference",
                "type": "SoftLayer_User_Preference",
                "typeArray": true,
                "doc": "Select a type of preference you would like to modify using [[SoftLayer_User_Customer::getPreferenceTypes|getPreferenceTypes]] and invoke this method using that preference type key name. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "preferenceTypeKeyName",
                        "type": "string",
                        "doc": "A valid preference type key name from SoftLayer_User_Preference_Type"
                    },
                    {
                        "name": "value",
                        "type": "string",
                        "doc": "Any valid value for the preference type"
                    }
                ]
            },
            "checkExternalAuthenticationStatus": {
                "name": "checkExternalAuthenticationStatus",
                "type": "SoftLayer_Container_User_Customer_Portal_Token",
                "doc": "This service checks the result of a previously requested external authentication. [[SoftLayer_Container_User_Customer_External_Binding_Phone|Phone external binding]] container can be used for this service. Make sure to set the [[SoftLayer_Container_User_Customer_External_Binding_Phone::authenticationToken|authenticationToken]] that is generated by [[SoftLayer_User_Customer|initiateExternalAuthentication]] service. ",
                "static": true,
                "parameters": [
                    {
                        "name": "authenticationContainer",
                        "type": "SoftLayer_Container_User_Customer_External_Binding",
                        "doc": "The authentication container with the external authentication information."
                    }
                ]
            },
            "checkPhoneFactorAuthenticationForPasswordSet": {
                "name": "checkPhoneFactorAuthenticationForPasswordSet",
                "type": "boolean",
                "doc": "Add a description here \n\n",
                "noauth": true,
                "parameters": [
                    {
                        "name": "passwordSet",
                        "type": "SoftLayer_Container_User_Customer_PasswordSet",
                        "doc": "A container with the information required for setting customer password"
                    },
                    {
                        "name": "authenticationContainer",
                        "type": "SoftLayer_Container_User_Customer_External_Binding",
                        "doc": "The authentication container with the external authentication information.",
                        "defaultValue": null
                    }
                ]
            },
            "createNotificationSubscriber": {
                "name": "createNotificationSubscriber",
                "type": "boolean",
                "doc": "Create a new subscriber for a given resource. ",
                "parameters": [
                    {
                        "name": "keyName",
                        "type": "string",
                        "doc": "The key name of the notification to subscribe. Optional, but must be provided if $resourceTableId is provided.",
                        "defaultValue": null
                    },
                    {
                        "name": "resourceTableId",
                        "type": "int",
                        "doc": "The resource subscribing to receive notification.",
                        "defaultValue": 0
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_User_Customer",
                "doc": "Create a new user in the SoftLayer customer portal. It is not possible to set up SLL enable flags during object creation. These flags are ignored during object creation. You will need to make a subsequent call to edit object in order to enable VPN access. \n\nAn account's master user and sub-users who have the User Manage permission can add new users. \n\nUsers are created with a default permission set. After adding a user it may be helpful to set their permissions and device access. \n\nsecondaryPasswordTimeoutDays will be set to the system configured default value if the attribute is not provided or the attribute is not a valid value. \n\nNote, neither password nor vpnPassword parameters are required. \n\nPassword When a new user is created, an email will be sent to the new user's email address with a link to a url that will allow the new user to create or change their password for the SoftLayer customer portal. \n\nIf the password parameter is provided and is not null, then that value will be validated. If it is a valid password, then the user will be created with this password.  This user will still receive a portal password email.  It can be used within 24 hours to change their password, or it can be allowed to expire, and the password provided during user creation will remain as the user's password. \n\nIf the password parameter is not provided or the value is null, the user must set their portal password using the link sent in email within 24 hours.\u00a0 If the user fails to set their password within 24 hours, then a non-master user can use the \"Reset Password\" link on the login page of the portal to request a new email.  A master user can use the link to retrieve a phone number to call to assist in resetting their password. \n\nThe password parameter is ignored for VPN_ONLY users or for IBMid authenticated users. \n\nvpnPassword If the vpnPassword is provided, then the user's vpnPassword will be set to the provided password.\u00a0 When creating a vpn only user, the vpnPassword MUST be supplied.\u00a0 If the vpnPassword is not provided, then the user will need to use the portal to edit their profile and set the vpnPassword. \n\nIBMid considerations When a SoftLayer account is linked to a Platform Services (PaaS, formerly Bluemix) account, AND the trait on the SoftLayer Account indicating IBMid authentication is set, then SoftLayer will delegate the creation of an ACTIVE user to PaaS. This means that even though the request to create a new user in such an account may start at the IMS API, via this delegation we effectively turn it into a request that is driven by PaaS. In particular this means that any \"invitation email\" that comes to the user, will come from PaaS, not from IMS via IBMid. \n\nUsers created in states other than ACTIVE (for example, a VPN_ONLY user) will be created directly in IMS without delegation (but note that no invitation is sent for a user created in any state other than ACTIVE). ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer",
                        "doc": "The SoftLayer_User_Customer object that you wish to create."
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "The new user's password."
                    },
                    {
                        "name": "vpnPassword",
                        "type": "string",
                        "doc": "The new user's VPN password."
                    }
                ]
            },
            "createSubscriberDeliveryMethods": {
                "name": "createSubscriberDeliveryMethods",
                "type": "boolean",
                "doc": "Create delivery methods for a notification that the user is subscribed to. Multiple delivery method keyNames can be supplied to create multiple delivery methods for the specified notification. Available delivery methods - 'EMAIL'. Available notifications - 'PLANNED_MAINTENANCE', 'UNPLANNED_INCIDENT'. ",
                "parameters": [
                    {
                        "name": "notificationKeyName",
                        "type": "string",
                        "doc": "A friendly keyname for the notification"
                    },
                    {
                        "name": "deliveryMethodKeyNames",
                        "type": "string",
                        "typeArray": true,
                        "doc": "Friendly delivery method keynames"
                    }
                ]
            },
            "deactivateNotificationSubscriber": {
                "name": "deactivateNotificationSubscriber",
                "type": "boolean",
                "doc": "Create a new subscriber for a given resource. ",
                "parameters": [
                    {
                        "name": "keyName",
                        "type": "string",
                        "doc": "The key name of the notification to subscribe. Optional, but must be provided if $resourceTableId is provided.",
                        "defaultValue": null
                    },
                    {
                        "name": "resourceTableId",
                        "type": "int",
                        "doc": "The resource subscribing to receive notification.",
                        "defaultValue": 0
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Account master users and sub-users who have the User Manage permission in the SoftLayer customer portal can update other user's information. Use editObject() if you wish to edit a single user account. Users who do not have the User Manage permission can only update their own information. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer",
                        "doc": "A skeleton SoftLayer_User_Customer object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "editObjects": {
                "name": "editObjects",
                "type": "boolean",
                "doc": "Account master users and sub-users who have the User Manage permission in the SoftLayer customer portal can update other user's information. Use editObjects() if you wish to edit multiple users at once. Users who do not have the User Manage permission can only update their own information. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_User_Customer",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_User_Customer objects with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "findUserPreference": {
                "name": "findUserPreference",
                "type": "SoftLayer_Layout_Profile",
                "typeArray": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "profileName",
                        "type": "string"
                    },
                    {
                        "name": "containerKeyname",
                        "type": "string"
                    },
                    {
                        "name": "preferenceKeyname",
                        "type": "string"
                    }
                ]
            },
            "getActiveExternalAuthenticationVendors": {
                "name": "getActiveExternalAuthenticationVendors",
                "type": "SoftLayer_Container_User_Customer_External_Binding_Vendor",
                "typeArray": true,
                "doc": "The getActiveExternalAuthenticationVendors method will return a list of available external vendors that a SoftLayer user can authenticate against.  The list will only contain vendors for which the user has at least one active external binding. ",
                "static": true
            },
            "getAgentImpersonationToken": {
                "name": "getAgentImpersonationToken",
                "type": "string"
            },
            "getAllowedDedicatedHostIds": {
                "name": "getAllowedDedicatedHostIds",
                "type": "int",
                "typeArray": true
            },
            "getAllowedHardwareIds": {
                "name": "getAllowedHardwareIds",
                "type": "int",
                "typeArray": true
            },
            "getAllowedVirtualGuestIds": {
                "name": "getAllowedVirtualGuestIds",
                "type": "int",
                "typeArray": true
            },
            "getAuthenticationToken": {
                "name": "getAuthenticationToken",
                "type": "SoftLayer_Container_User_Authentication_Token",
                "parameters": [
                    {
                        "name": "token",
                        "type": "SoftLayer_Container_User_Authentication_Token",
                        "doc": "The token type requested.",
                        "defaultValue": null
                    }
                ]
            },
            "getDefaultAccount": {
                "name": "getDefaultAccount",
                "type": "SoftLayer_Account",
                "doc": "This method is not applicable to legacy SoftLayer-authenticated users and can only be invoked for IBMid-authenticated users. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    }
                ]
            },
            "getHardwareCount": {
                "name": "getHardwareCount",
                "type": "int",
                "doc": "Retrieve the number of servers that a portal user has access to. Portal users can have restrictions set to limit services for and to perform actions on hardware. You can set these permissions in the portal by clicking the \"administrative\" then \"user admin\" links. "
            },
            "getImpersonationToken": {
                "name": "getImpersonationToken",
                "type": "string"
            },
            "getLoginToken": {
                "name": "getLoginToken",
                "type": "SoftLayer_Container_Authentication_Response_Common",
                "doc": "Attempt to authenticate a user to the SoftLayer customer portal using the provided authentication container. Depending on the specific type of authentication container that is used, this API will leverage the appropriate authentication protocol. If authentication is successful then the API returns a list of linked accounts for the user, a token containing the ID of the authenticated user and a hash key used by the SoftLayer customer portal to maintain authentication. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "request",
                        "type": "SoftLayer_Container_Authentication_Request_Contract",
                        "doc": "Container structure that encapsulates data specific to a particular authentication protocol."
                    }
                ]
            },
            "getMappedAccounts": {
                "name": "getMappedAccounts",
                "type": "SoftLayer_Account",
                "typeArray": true,
                "doc": "An OpenIdConnect identity, for example an IBMid, can be linked or mapped to one or more individual SoftLayer users, but no more than one SoftLayer user per account. This effectively links the OpenIdConnect identity to those accounts. This API returns a list of all the accounts for which there is a link between the OpenIdConnect identity and a SoftLayer user. Invoke this only on IBMid-authenticated users. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer",
                "doc": "getObject retrieves the SoftLayer_User_Customer object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_User_Customer service. You can only retrieve users that are assigned to the customer account belonging to the user making the API call. ",
                "filterable": true,
                "maskable": true
            },
            "getOpenIdConnectMigrationState": {
                "name": "getOpenIdConnectMigrationState",
                "type": "SoftLayer_Container_User_Customer_OpenIdConnect_MigrationState",
                "doc": "This API returns a SoftLayer_Container_User_Customer_OpenIdConnect_MigrationState object containing the necessary information to determine what migration state the user is in. If the account is not OpenIdConnect authenticated, then an exception is thrown. "
            },
            "getPasswordRequirements": {
                "name": "getPasswordRequirements",
                "type": "SoftLayer_Container_User_Customer_PasswordSet",
                "static": true,
                "parameters": [
                    {
                        "name": "isVpn",
                        "type": "boolean",
                        "doc": "True if the vpn password requirements are being queried, false if it's the portal password.",
                        "defaultValue": false
                    }
                ]
            },
            "getPortalLoginToken": {
                "name": "getPortalLoginToken",
                "type": "SoftLayer_Container_User_Customer_Portal_Token",
                "doc": "Attempt to authenticate a username and password to the SoftLayer customer portal. Many portal user accounts are configured to require answering a security question on login. In this case getPortalLoginToken() also verifies the given security question ID and answer. If authentication is successful then the API returns a token containing the ID of the authenticated user and a hash key used by the SoftLayer customer portal to maintain authentication. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "The username you wish to authenticate to the SoftLayer customer portal with."
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "Your SoftLayer customer portal user's portal password."
                    },
                    {
                        "name": "securityQuestionId",
                        "type": "int",
                        "doc": "A security question you wish to answer when authenticating to the SoftLayer customer portal. This parameter isn't required if no security questions are set on your portal account or if your account is configured to not require answering a security account upon login.",
                        "defaultValue": null
                    },
                    {
                        "name": "securityQuestionAnswer",
                        "type": "string",
                        "doc": "The answer to your security question.",
                        "defaultValue": null
                    }
                ]
            },
            "getPreference": {
                "name": "getPreference",
                "type": "SoftLayer_User_Preference",
                "doc": "Select a type of preference you would like to get using [[SoftLayer_User_Customer::getPreferenceTypes|getPreferenceTypes]] and invoke this method using that preference type key name. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "preferenceTypeKeyName",
                        "type": "string",
                        "doc": "The preference type key name from SoftLayer_User_Preference_Type."
                    }
                ]
            },
            "getPreferenceTypes": {
                "name": "getPreferenceTypes",
                "type": "SoftLayer_User_Preference_Type",
                "typeArray": true,
                "doc": "Use any of the preference types to fetch or modify user preferences using [[SoftLayer_User_Customer::getPreference|getPreference]] or [[SoftLayer_User_Customer::changePreference|changePreference]], respectively. ",
                "maskable": true
            },
            "getRequirementsForPasswordSet": {
                "name": "getRequirementsForPasswordSet",
                "type": "SoftLayer_Container_User_Customer_PasswordSet",
                "doc": "Retrieve the authentication requirements for an outstanding password set/reset request.  The requirements returned in the same SoftLayer_Container_User_Customer_PasswordSet container which is provided as a parameter into this request.  The SoftLayer_Container_User_Customer_PasswordSet::authenticationMethods array will contain an entry for each authentication method required for the user.  See SoftLayer_Container_User_Customer_PasswordSet for more details. \n\nIf the user has required authentication methods, then authentication information will be supplied to the SoftLayer_User_Customer::processPasswordSetRequest method within this same SoftLayer_Container_User_Customer_PasswordSet container.  All existing information in the container must continue to exist in the container to complete the password set/reset process. ",
                "noauth": true,
                "parameters": [
                    {
                        "name": "passwordSet",
                        "type": "SoftLayer_Container_User_Customer_PasswordSet",
                        "doc": "Container used to exchange information pertaining to the password reset process."
                    }
                ]
            },
            "getSupportPolicyDocument": {
                "name": "getSupportPolicyDocument",
                "type": "base64Binary"
            },
            "getSupportPolicyName": {
                "name": "getSupportPolicyName",
                "type": "string"
            },
            "getSupportedLocales": {
                "name": "getSupportedLocales",
                "type": "SoftLayer_Locale",
                "typeArray": true,
                "maskable": true
            },
            "getUserIdForPasswordSet": {
                "name": "getUserIdForPasswordSet",
                "type": "int",
                "doc": "Retrieve a user id using a password token provided to the user in an email generated by the SoftLayer_User_Customer::initiatePortalPasswordChange request. Password recovery keys are valid for 24 hours after they're generated. \n\nWhen a new user is created or when a user has requested a password change using initiatePortalPasswordChange, they will have received an email that contains a url with a token.  That token is used as the parameter for getUserIdForPasswordSet.  Once the user id is known, then the SoftLayer_User_Customer object can be retrieved which is necessary to complete the process to set or reset a user's password. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "key",
                        "type": "string",
                        "doc": "A password recovery hash key retrieved from an email."
                    }
                ]
            },
            "getUserPreferences": {
                "name": "getUserPreferences",
                "type": "SoftLayer_Layout_Profile",
                "typeArray": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "profileName",
                        "type": "string"
                    },
                    {
                        "name": "containerKeyname",
                        "type": "string"
                    }
                ]
            },
            "getVirtualGuestCount": {
                "name": "getVirtualGuestCount",
                "type": "int",
                "doc": "Retrieve the number of CloudLayer Computing Instances that a portal user has access to. Portal users can have restrictions set to limit services for and to perform actions on CloudLayer Computing Instances. You can set these permissions in the portal by clicking the \"administrative\" then \"user admin\" links. "
            },
            "inTerminalStatus": {
                "name": "inTerminalStatus",
                "type": "boolean"
            },
            "initiateExternalAuthentication": {
                "name": "initiateExternalAuthentication",
                "type": "string",
                "doc": "The service initiates an external authentication with the given external authentication vendor. The authentication container and its content will be verified before an attempt is made to initiate an external authentication. [[SoftLayer_Container_User_Customer_External_Binding_Phone|Phone external binding]] container can be used for this service. \n\nThis service returns a unique authentication request token. You can use [[SoftLayer_User_Customer::checkExternalAuthenticationStatus|checkExternalAuthenticationStatus]] service to check if the authentication request is complete or not. ",
                "static": true,
                "parameters": [
                    {
                        "name": "authenticationContainer",
                        "type": "SoftLayer_Container_User_Customer_External_Binding",
                        "doc": "The authentication container with the external authentication information."
                    }
                ]
            },
            "initiatePortalPasswordChange": {
                "name": "initiatePortalPasswordChange",
                "type": "boolean",
                "doc": "Sends password change email to the user containing url that allows the user the change their password. This is the first step when a user wishes to change their password.  The url that is generated contains a one-time use token that is valid for only 24-hours. \n\nIf this is a new master user who has never logged into the portal, then password reset will be initiated. Once a master user has logged into the portal, they must setup their security questions prior to logging out because master users are required to answer a security question during the password reset process.  Should a master user not have security questions defined and not remember their password in order to define the security questions, then they will need to contact support at live chat or Revenue Services for assistance. \n\nDue to security reasons, the number of reset requests per username are limited within a undisclosed timeframe. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "The username of the user who is changing their password."
                    }
                ]
            },
            "initiatePortalPasswordChangeByBrandAgent": {
                "name": "initiatePortalPasswordChangeByBrandAgent",
                "type": "boolean",
                "doc": "A Brand Agent that has permissions to Add Customer Accounts will be able to request the password email be sent to the Master User of a Customer Account created by the same Brand as the agent making the request. Due to security reasons, the number of reset requests are limited within an undisclosed timeframe. ",
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "The username of the user to receive the password reset email"
                    }
                ]
            },
            "inviteUserToLinkOpenIdConnect": {
                "name": "inviteUserToLinkOpenIdConnect",
                "type": "void",
                "doc": "Send email invitation to a user to join a SoftLayer account and authenticate with OpenIdConnect. Throws an exception on error. ",
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    }
                ]
            },
            "isMasterUser": {
                "name": "isMasterUser",
                "type": "boolean",
                "doc": "Portal users are considered master users if they don't have an associated parent user. The only users who don't have parent users are users whose username matches their SoftLayer account name. Master users have special permissions throughout the SoftLayer customer portal. "
            },
            "isValidPortalPassword": {
                "name": "isValidPortalPassword",
                "type": "boolean",
                "doc": "Determine if a string is the given user's login password to the SoftLayer customer portal. ",
                "parameters": [
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "The password you wish to verify"
                    }
                ]
            },
            "performExternalAuthentication": {
                "name": "performExternalAuthentication",
                "type": "SoftLayer_Container_User_Customer_Portal_Token",
                "doc": "The perform external authentication method will authenticate the given external authentication container with an external vendor.  The authentication container and its contents will be verified before an attempt is made to authenticate the contents of the container with an external vendor. ",
                "static": true,
                "parameters": [
                    {
                        "name": "authenticationContainer",
                        "type": "SoftLayer_Container_User_Customer_External_Binding",
                        "doc": "The authentication container with the external authentication information."
                    }
                ]
            },
            "processPasswordSetRequest": {
                "name": "processPasswordSetRequest",
                "type": "boolean",
                "doc": "Set the password for a user who has an outstanding password request. A user with an outstanding password request will have an unused and unexpired password key.  The password key is part of the url provided to the user in the email sent to the user with information on how to set their password.  The email was generated by the SoftLayer_User_Customer::initiatePortalPasswordRequest request. Password recovery keys are valid for 24 hours after they're generated. \n\nIf the user has required authentication methods as specified by in the SoftLayer_Container_User_Customer_PasswordSet container returned from the SoftLayer_User_Customer::getRequirementsForPasswordSet request, then additional requests must be made to processPasswordSetRequest to authenticate the user before changing the password.  First, if the user has security questions set on their profile, they will be required to answer one of their questions correctly. Next, if the user has Verisign, Google Authentication, or Phone Factor on their account, they must authenticate according to the two-factor provider.  All of this authentication is done using the SoftLayer_Container_User_Customer_PasswordSet container.  If the user has Phone Factor authentication, additional requests to SoftLayer_User_Customer::checkPhoneFactorAuthenticationForPasswordSet is required until a response other than Awaiting Response is received. \n\nUser portal passwords must match the following restrictions. Portal passwords must... \n* ...be over eight characters long.\n* ...be under twenty characters long.\n* ...contain at least one uppercase letter\n* ...contain at least one lowercase letter\n* ...contain at least one number\n* ...contain one of the special characters _ - | @ . , ? / ! ~ # $ % ^ & * ( ) { } [ ] \\ + =\n* ...not match your username",
                "noauth": true,
                "parameters": [
                    {
                        "name": "passwordSet",
                        "type": "SoftLayer_Container_User_Customer_PasswordSet",
                        "doc": "A container with the information required for setting customer password"
                    },
                    {
                        "name": "authenticationContainer",
                        "type": "SoftLayer_Container_User_Customer_External_Binding",
                        "doc": "The authentication container with the external authentication information.",
                        "defaultValue": null
                    }
                ]
            },
            "removeAllDedicatedHostAccessForThisUser": {
                "name": "removeAllDedicatedHostAccessForThisUser",
                "type": "boolean",
                "doc": "Revoke access to all dedicated hosts on the account for this user. The user will only be allowed to see and access devices in both the portal and the API to which they have been granted access.  If the user's account has devices to which the user has not been granted access or the access has been revoked, then \"not found\" exceptions are thrown if the user attempts to access any of these devices. If the current user does not have administrative privileges over this user, an inadequate permissions exception will get thrown. \n\nUsers can call this function on child users, but not to themselves. An account's master has access to all users permissions on their account. "
            },
            "removeAllHardwareAccessForThisUser": {
                "name": "removeAllHardwareAccessForThisUser",
                "type": "boolean",
                "doc": "Remove all hardware from a portal user's hardware access list. A user's hardware access list controls which of an account's hardware objects a user has access to in the SoftLayer customer portal and API. If the current user does not have administrative privileges over this user, an inadequate permissions exception will get thrown. \n\nUsers can call this function on child users, but not to themselves. An account's master has access to all users permissions on their account. "
            },
            "removeAllVirtualAccessForThisUser": {
                "name": "removeAllVirtualAccessForThisUser",
                "type": "boolean",
                "doc": "Remove all cloud computing instances from a portal user's instance access list. A user's instance access list controls which of an account's computing instance objects a user has access to in the SoftLayer customer portal and API. If the current user does not have administrative privileges over this user, an inadequate permissions exception will get thrown. \n\nUsers can call this function on child users, but not to themselves. An account's master has access to all users permissions on their account. "
            },
            "removeApiAuthenticationKey": {
                "name": "removeApiAuthenticationKey",
                "type": "boolean",
                "doc": "Remove a user's API authentication key, removing that user's access to query the SoftLayer API. ",
                "static": true,
                "parameters": [
                    {
                        "name": "keyId",
                        "type": "int",
                        "doc": "The identifier of the API authentication key you wish to remove.",
                        "defaultValue": null
                    }
                ]
            },
            "removeBulkDedicatedHostAccess": {
                "name": "removeBulkDedicatedHostAccess",
                "type": "boolean",
                "doc": "Revokes access for the user to one or more dedicated host devices.  The user will only be allowed to see and access devices in both the portal and the API to which they have been granted access.  If the user's account has devices to which the user has not been granted access or the access has been revoked, then \"not found\" exceptions are thrown if the user attempts to access any of these devices. \n\nUsers can assign device access to their child users, but not to themselves. An account's master has access to all devices on their customer account and can set dedicated host access for any of the other users on their account. \n\nIf the user has full dedicatedHost access, then it will provide access to \"ALL but passed in\" dedicatedHost ids. ",
                "parameters": [
                    {
                        "name": "dedicatedHostIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "Dedicated Host IDs"
                    }
                ]
            },
            "removeBulkHardwareAccess": {
                "name": "removeBulkHardwareAccess",
                "type": "boolean",
                "doc": "Remove multiple hardware from a portal user's hardware access list. A user's hardware access list controls which of an account's hardware objects a user has access to in the SoftLayer customer portal and API. Hardware does not exist in the SoftLayer portal and returns \"not found\" exceptions in the API if the user doesn't have access to it. If a user does not has access to the hardware you're attempting to remove then removeBulkHardwareAccess() returns true. \n\nUsers can assign hardware access to their child users, but not to themselves. An account's master has access to all hardware on their customer account and can set hardware access for any of the other users on their account. \n\nIf the user has full hardware access, then it will provide access to \"ALL but passed in\" hardware ids. ",
                "parameters": [
                    {
                        "name": "hardwareIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "Hardware IDs"
                    }
                ]
            },
            "removeBulkPortalPermission": {
                "name": "removeBulkPortalPermission",
                "type": "boolean",
                "doc": "Remove (revoke) multiple permissions from a portal user's permission set. [[SoftLayer_User_Customer_CustomerPermission_Permission]] control which features in the SoftLayer customer portal and API a user may use. Removing a user's permission will affect that user's portal and API access. removePortalPermission() does not attempt to remove permissions that are not assigned to the user. \n\nUsers can grant or revoke permissions to their child users, but not to themselves. An account's master has all portal permissions and can grant permissions for any of the other users on their account. \n\nIf the cascadePermissionsFlag is set to true, then removing the permissions from a user will cascade down the child hierarchy and remove the permissions from this user along with all child users who also have the permission. \n\nIf the cascadePermissionsFlag is not provided or is set to false and the user has children users who have the permission, then an exception will be thrown, and the permission will not be removed from this user. \n\nUse the [[SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects]] method to retrieve a list of all permissions available in the SoftLayer customer portal and API. Permissions are removed based on the keyName property of the permission objects within the permissions parameter. ",
                "parameters": [
                    {
                        "name": "permissions",
                        "type": "SoftLayer_User_Customer_CustomerPermission_Permission",
                        "typeArray": true,
                        "doc": "A collection of permissions to remove from this user."
                    },
                    {
                        "name": "cascadePermissionsFlag",
                        "type": "boolean",
                        "defaultValue": false
                    }
                ]
            },
            "removeBulkRoles": {
                "name": "removeBulkRoles",
                "type": "void",
                "parameters": [
                    {
                        "name": "roles",
                        "type": "SoftLayer_User_Permission_Role",
                        "typeArray": true
                    }
                ]
            },
            "removeBulkVirtualGuestAccess": {
                "name": "removeBulkVirtualGuestAccess",
                "type": "boolean",
                "doc": "Remove multiple CloudLayer Computing Instances from a portal user's access list. A user's CloudLayer Computing Instance access list controls which of an account's CloudLayer Computing Instance objects a user has access to in the SoftLayer customer portal and API. CloudLayer Computing Instances do not exist in the SoftLayer portal and returns \"not found\" exceptions in the API if the user doesn't have access to it. If a user does not has access to the CloudLayer Computing Instance you're attempting remove add then removeBulkVirtualGuestAccess() returns true. \n\nUsers can assign CloudLayer Computing Instance access to their child users, but not to themselves. An account's master has access to all CloudLayer Computing Instances on their customer account and can set hardware access for any of the other users on their account. ",
                "parameters": [
                    {
                        "name": "virtualGuestIds",
                        "type": "int",
                        "typeArray": true,
                        "doc": "The internal identifiers of the CloudLayer Computing Instances you wish to remove access to."
                    }
                ]
            },
            "removeDedicatedHostAccess": {
                "name": "removeDedicatedHostAccess",
                "type": "boolean",
                "doc": "Revokes access for the user to a single dedicated host device.  The user will only be allowed to see and access devices in both the portal and the API to which they have been granted access.  If the user's account has devices to which the user has not been granted access or the access has been revoked, then \"not found\" exceptions are thrown if the user attempts to access any of these devices. \n\nUsers can assign device access to their child users, but not to themselves. An account's master has access to all devices on their customer account and can set dedicated host access for any of the other users on their account. ",
                "parameters": [
                    {
                        "name": "dedicatedHostId",
                        "type": "int",
                        "doc": "DedicatedHost ID"
                    }
                ]
            },
            "removeExternalBinding": {
                "name": "removeExternalBinding",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "externalBinding",
                        "type": "SoftLayer_User_External_Binding",
                        "doc": "The external binding object you would like to remove from this user."
                    }
                ]
            },
            "removeHardwareAccess": {
                "name": "removeHardwareAccess",
                "type": "boolean",
                "doc": "Remove hardware from a portal user's hardware access list. A user's hardware access list controls which of an account's hardware objects a user has access to in the SoftLayer customer portal and API. Hardware does not exist in the SoftLayer portal and returns \"not found\" exceptions in the API if the user doesn't have access to it. If a user does not has access to the hardware you're attempting remove add then removeHardwareAccess() returns true. \n\nUsers can assign hardware access to their child users, but not to themselves. An account's master has access to all hardware on their customer account and can set hardware access for any of the other users on their account. ",
                "parameters": [
                    {
                        "name": "hardwareId",
                        "type": "int",
                        "doc": "Hardware ID."
                    }
                ]
            },
            "removePortalPermission": {
                "name": "removePortalPermission",
                "type": "boolean",
                "doc": "Remove (revoke) a permission from a portal user's permission set. [[SoftLayer_User_Customer_CustomerPermission_Permission]] control which features in the SoftLayer customer portal and API a user may use. Removing a user's permission will affect that user's portal and API access. If the user does not have the permission you're attempting to remove then removePortalPermission() returns true. \n\nUsers can assign permissions to their child users, but not to themselves. An account's master has all portal permissions and can set permissions for any of the other users on their account. \n\nIf the cascadePermissionsFlag is set to true, then removing the permission from a user will cascade down the child hierarchy and remove the permission from this user and all child users who also have the permission. \n\nIf the cascadePermissionsFlag is not set or is set to false and the user has children users who have the permission, then an exception will be thrown, and the permission will not be removed from this user. \n\nUse the [[SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects]] method to retrieve a list of all permissions available in the SoftLayer customer portal and API. Permissions are removed based on the keyName property of the permission parameter. ",
                "parameters": [
                    {
                        "name": "permission",
                        "type": "SoftLayer_User_Customer_CustomerPermission_Permission",
                        "doc": "The permission you wish to add to the given user."
                    },
                    {
                        "name": "cascadePermissionsFlag",
                        "type": "boolean",
                        "defaultValue": false
                    }
                ]
            },
            "removeRole": {
                "name": "removeRole",
                "type": "void",
                "parameters": [
                    {
                        "name": "role",
                        "type": "SoftLayer_User_Permission_Role"
                    }
                ]
            },
            "removeSecurityAnswers": {
                "name": "removeSecurityAnswers",
                "type": "boolean"
            },
            "removeVirtualGuestAccess": {
                "name": "removeVirtualGuestAccess",
                "type": "boolean",
                "doc": "Remove a CloudLayer Computing Instance from a portal user's access list. A user's CloudLayer Computing Instance access list controls which of an account's computing instances a user has access to in the SoftLayer customer portal and API. CloudLayer Computing Instances do not exist in the SoftLayer portal and returns \"not found\" exceptions in the API if the user doesn't have access to it. If a user does not has access to the CloudLayer Computing Instance you're attempting remove add then removeVirtualGuestAccess() returns true. \n\nUsers can assign CloudLayer Computing Instance access to their child users, but not to themselves. An account's master has access to all CloudLayer Computing Instances on their customer account and can set instance access for any of the other users on their account. ",
                "parameters": [
                    {
                        "name": "virtualGuestId",
                        "type": "int",
                        "doc": "The internal identifier of the CloudLayer Computing Instance you wish to remove access to."
                    }
                ]
            },
            "resetOpenIdConnectLink": {
                "name": "resetOpenIdConnectLink",
                "type": "void",
                "doc": "This method will change the IBMid that a SoftLayer user is linked to, if we need to do that for some reason. It will do this by modifying the link to the desired new IBMid. NOTE:  This method cannot be used to \"un-link\" a SoftLayer user.  Once linked, a SoftLayer user can never be un-linked. Also, this method cannot be used to reset the link if the user account is already Bluemix linked. To reset a link for the Bluemix-linked user account, use resetOpenIdConnectLinkUnifiedUserManagementMode. ",
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "The provider type. Currently only 'IBMid' is considered a valid value."
                    },
                    {
                        "name": "newIbmIdUsername",
                        "type": "string",
                        "doc": "The new IBMid the user is trying to switch to."
                    },
                    {
                        "name": "removeSecuritySettings",
                        "type": "boolean",
                        "doc": "Flag to indicate if the security settings for the user should be",
                        "defaultValue": false
                    }
                ]
            },
            "resetOpenIdConnectLinkUnifiedUserManagementMode": {
                "name": "resetOpenIdConnectLinkUnifiedUserManagementMode",
                "type": "void",
                "doc": "This method will change the IBMid that a SoftLayer master user is linked to, if we need to do that for some reason. It will do this by unlinking the new owner IBMid from its current user association in this account, if there is one (note that the new owner IBMid is not required to already be a member of the IMS account). Then it will modify the existing IBMid link for the master user to use the new owner IBMid-realm IAMid. At this point, if the new owner IBMid isn't already a member of the PaaS account, it will attempt to add it. As a last step, it will call PaaS to modify the owner on that side, if necessary.  Only when all those steps are complete, it will commit the IMS-side DB changes.  Then, it will clean up the SoftLayer user that was linked to the new owner IBMid (this user became unlinked as the first step in this process).  It will also call BSS to delete the old owner IBMid. NOTE:  This method cannot be used to \"un-link\" a SoftLayer user.  Once linked, a SoftLayer user can never be un-linked. Also, this method cannot be used to reset the link if the user account is not Bluemix linked. To reset a link for the user account not linked to Bluemix, use resetOpenIdConnectLink. ",
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "The provider type. Currently only 'IBMid' is considered a valid value."
                    },
                    {
                        "name": "newIbmIdUsername",
                        "type": "string",
                        "doc": "The new IBMid (username, *NOT* IBMid-xxx format IAMid) we are trying to switch to."
                    },
                    {
                        "name": "removeSecuritySettings",
                        "type": "boolean",
                        "doc": "Flag to indicate if the security settings for the user should be",
                        "defaultValue": false
                    }
                ]
            },
            "samlAuthenticate": {
                "name": "samlAuthenticate",
                "type": "SoftLayer_Container_User_Customer_Portal_Token",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string",
                        "doc": "The account id"
                    },
                    {
                        "name": "samlResponse",
                        "type": "string",
                        "doc": "The saml response"
                    }
                ]
            },
            "samlBeginAuthentication": {
                "name": "samlBeginAuthentication",
                "type": "string",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "The account id"
                    }
                ]
            },
            "samlBeginLogout": {
                "name": "samlBeginLogout",
                "type": "string"
            },
            "samlLogout": {
                "name": "samlLogout",
                "type": "void",
                "parameters": [
                    {
                        "name": "samlResponse",
                        "type": "string",
                        "doc": "The same response"
                    }
                ]
            },
            "selfPasswordChange": {
                "name": "selfPasswordChange",
                "type": "void",
                "parameters": [
                    {
                        "name": "currentPassword",
                        "type": "string",
                        "doc": "Current password."
                    },
                    {
                        "name": "newPassword",
                        "type": "string",
                        "doc": "New password."
                    }
                ]
            },
            "setDefaultAccount": {
                "name": "setDefaultAccount",
                "type": "SoftLayer_Account",
                "doc": "An OpenIdConnect identity, for example an IBMid, can be linked or mapped to one or more individual SoftLayer users, but no more than one per account. If an OpenIdConnect identity is mapped to multiple accounts in this manner, one such account should be identified as the default account for that identity. Invoke this only on IBMid-authenticated users. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "The Softlayer account to set as default.",
                        "defaultValue": null
                    }
                ]
            },
            "silentlyMigrateUserOpenIdConnect": {
                "name": "silentlyMigrateUserOpenIdConnect",
                "type": "boolean",
                "doc": "As master user, calling this api for the IBMid provider type when there is an existing IBMid for the email on the SL account will silently (without sending an invitation email) create a link for the IBMid. NOTE: If the SoftLayer user is already linked to IBMid, this call will fail. If the IBMid specified by the email of this user, is already used in a link to another user in this account, this call will fail. If there is already an open invitation from this SoftLayer user to this or any IBMid, this call will fail. If there is already an open invitation from some other SoftLayer user in this account to this IBMid, then this call will fail. ",
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "The provider type"
                    }
                ]
            },
            "updateNotificationSubscriber": {
                "name": "updateNotificationSubscriber",
                "type": "boolean",
                "doc": "Update the active status for a notification that the user is subscribed to. A notification along with an active flag can be supplied to update the active status for a particular notification subscription. ",
                "parameters": [
                    {
                        "name": "notificationKeyName",
                        "type": "string"
                    },
                    {
                        "name": "active",
                        "type": "int"
                    }
                ]
            },
            "updateSecurityAnswers": {
                "name": "updateSecurityAnswers",
                "type": "boolean",
                "doc": "Update a user's login security questions and answers on the SoftLayer customer portal. These questions and answers are used to optionally log into the SoftLayer customer portal using two-factor authentication. Each user must have three distinct questions set with a unique answer for each question, and each answer may only contain alphanumeric or the . , - _ ( ) [ ] : ; > < characters. Existing user security questions and answers are deleted before new ones are set, and users may only update their own security questions and answers. ",
                "parameters": [
                    {
                        "name": "questions",
                        "type": "SoftLayer_User_Security_Question",
                        "typeArray": true,
                        "doc": "A list of security questions to use when logging into the SoftLayer customer portal. Each of these objects must have at least their id property populated."
                    },
                    {
                        "name": "answers",
                        "type": "string",
                        "typeArray": true,
                        "doc": "The answers that correspond to the given list of security questions."
                    }
                ]
            },
            "updateSubscriberDeliveryMethod": {
                "name": "updateSubscriberDeliveryMethod",
                "type": "boolean",
                "doc": "Update a delivery method for a notification that the user is subscribed to. A delivery method keyName along with an active flag can be supplied to update the active status of the delivery methods for the specified notification. Available delivery methods - 'EMAIL'. Available notifications - 'PLANNED_MAINTENANCE', 'UNPLANNED_INCIDENT'. ",
                "parameters": [
                    {
                        "name": "notificationKeyName",
                        "type": "string",
                        "doc": "A friendly keyname for the notification"
                    },
                    {
                        "name": "deliveryMethodKeyNames",
                        "type": "string",
                        "typeArray": true,
                        "doc": "Friendly delivery method keynames"
                    },
                    {
                        "name": "active",
                        "type": "int"
                    }
                ]
            },
            "updateVpnPassword": {
                "name": "updateVpnPassword",
                "type": "boolean",
                "doc": "Update a user's VPN password on the SoftLayer customer portal. As with portal passwords, VPN passwords must match the following restrictions. VPN passwords must... \n* ...be over eight characters long.\n* ...be under twenty characters long.\n* ...contain at least one uppercase letter\n* ...contain at least one lowercase letter\n* ...contain at least one number\n* ...contain one of the special characters _ - | @ . , ? / ! ~ # $ % ^ & * ( ) { } [ ] \\ =\n* ...not match your username\nFinally, users can only update their own VPN password. An account's master user can update any of their account users' VPN passwords. ",
                "parameters": [
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "Your new VPN password"
                    }
                ]
            },
            "updateVpnUser": {
                "name": "updateVpnUser",
                "type": "boolean",
                "doc": "Always call this function to enable changes when manually configuring VPN subnet access. "
            },
            "validateAuthenticationToken": {
                "name": "validateAuthenticationToken",
                "type": "SoftLayer_Container_User_Customer_Portal_Token",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "authenticationToken",
                        "type": "SoftLayer_Container_User_Authentication_Token",
                        "doc": "The authentication token of the user object."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_User_Customer data type contains general information relating to a single SoftLayer customer portal user. Personal information in this type such as names, addresses, and phone numbers are not necessarily associated with the customer account the user is assigned to. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The customer account that a user belongs to."
            },
            "actions": {
                "name": "actions",
                "type": "SoftLayer_User_Permission_Action",
                "form": "relational",
                "typeArray": true
            },
            "additionalEmails": {
                "name": "additionalEmails",
                "type": "SoftLayer_User_Customer_AdditionalEmail",
                "form": "relational",
                "typeArray": true,
                "doc": "A portal user's additional email addresses. These email addresses are contacted when updates are made to support tickets."
            },
            "apiAuthenticationKeys": {
                "name": "apiAuthenticationKeys",
                "type": "SoftLayer_User_Customer_ApiAuthentication",
                "form": "relational",
                "typeArray": true,
                "doc": "A portal user's API Authentication keys. There is a max limit of one API key per user."
            },
            "childUsers": {
                "name": "childUsers",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true,
                "doc": "A portal user's child users. Some portal users may not have child users."
            },
            "closedTickets": {
                "name": "closedTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "An user's associated closed tickets."
            },
            "dedicatedHosts": {
                "name": "dedicatedHosts",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "form": "relational",
                "typeArray": true,
                "doc": "The dedicated hosts to which the user has been granted access."
            },
            "externalBindings": {
                "name": "externalBindings",
                "type": "SoftLayer_User_External_Binding",
                "form": "relational",
                "typeArray": true,
                "doc": "The external authentication bindings that link an external identifier to a SoftLayer user."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "A portal user's accessible hardware. These permissions control which hardware a user has access to in the SoftLayer customer portal."
            },
            "hardwareNotifications": {
                "name": "hardwareNotifications",
                "type": "SoftLayer_User_Customer_Notification_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "Hardware notifications associated with this user. A hardware notification links a user to a piece of hardware, and that user will be notified if any monitors on that hardware fail, if the monitors have a status of 'Notify User'."
            },
            "hasAcknowledgedSupportPolicyFlag": {
                "name": "hasAcknowledgedSupportPolicyFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not a user has acknowledged the support policy."
            },
            "hasFullDedicatedHostAccessFlag": {
                "name": "hasFullDedicatedHostAccessFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Permission granting the user access to all Dedicated Host devices on the account."
            },
            "hasFullHardwareAccessFlag": {
                "name": "hasFullHardwareAccessFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not a portal user has access to all hardware on their account."
            },
            "hasFullVirtualGuestAccessFlag": {
                "name": "hasFullVirtualGuestAccessFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not a portal user has access to all virtual guests on their account."
            },
            "ibmIdLink": {
                "name": "ibmIdLink",
                "type": "SoftLayer_User_Customer_Link",
                "form": "relational",
                "doc": "Specifically relating the Customer instance to an IBMid. A Customer instance may or may not have an IBMid link."
            },
            "layoutProfiles": {
                "name": "layoutProfiles",
                "type": "SoftLayer_Layout_Profile",
                "form": "relational",
                "typeArray": true,
                "doc": "Contains the definition of the layout profile."
            },
            "locale": {
                "name": "locale",
                "type": "SoftLayer_Locale",
                "form": "relational",
                "doc": "A user's locale. Locale holds user's language and region information."
            },
            "loginAttempts": {
                "name": "loginAttempts",
                "type": "SoftLayer_User_Customer_Access_Authentication",
                "form": "relational",
                "typeArray": true,
                "doc": "A user's attempts to log into the SoftLayer customer portal."
            },
            "mobileDevices": {
                "name": "mobileDevices",
                "type": "SoftLayer_User_Customer_MobileDevice",
                "form": "relational",
                "typeArray": true,
                "doc": "A portal user's associated mobile device profiles."
            },
            "notificationSubscribers": {
                "name": "notificationSubscribers",
                "type": "SoftLayer_Notification_Subscriber",
                "form": "relational",
                "typeArray": true,
                "doc": "Notification subscription records for the user."
            },
            "openTickets": {
                "name": "openTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "An user's associated open tickets."
            },
            "overrides": {
                "name": "overrides",
                "type": "SoftLayer_Network_Service_Vpn_Overrides",
                "form": "relational",
                "typeArray": true,
                "doc": "A portal user's vpn accessible subnets."
            },
            "parent": {
                "name": "parent",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "A portal user's parent user. If a SoftLayer_User_Customer has a null parentId property then it doesn't have a parent user."
            },
            "permissions": {
                "name": "permissions",
                "type": "SoftLayer_User_Customer_CustomerPermission_Permission",
                "form": "relational",
                "typeArray": true,
                "doc": "A portal user's permissions. These permissions control that user's access to functions within the SoftLayer customer portal and API."
            },
            "preferences": {
                "name": "preferences",
                "type": "SoftLayer_User_Preference",
                "form": "relational",
                "typeArray": true,
                "doc": "Data type contains a single user preference to a specific preference type."
            },
            "roles": {
                "name": "roles",
                "type": "SoftLayer_User_Permission_Role",
                "form": "relational",
                "typeArray": true
            },
            "salesforceUserLink": {
                "name": "salesforceUserLink",
                "type": "SoftLayer_User_Customer_Link",
                "form": "relational",
                "doc": "[DEPRECATED]"
            },
            "securityAnswers": {
                "name": "securityAnswers",
                "type": "SoftLayer_User_Customer_Security_Answer",
                "form": "relational",
                "typeArray": true,
                "doc": "A portal user's security question answers. Some portal users may not have security answers or may not be configured to require answering a security question on login."
            },
            "subscribers": {
                "name": "subscribers",
                "type": "SoftLayer_Notification_User_Subscriber",
                "form": "relational",
                "typeArray": true,
                "doc": "A user's notification subscription records."
            },
            "successfulLogins": {
                "name": "successfulLogins",
                "type": "SoftLayer_User_Customer_Access_Authentication",
                "form": "relational",
                "typeArray": true,
                "doc": "A user's successful attempts to log into the SoftLayer customer portal."
            },
            "supportPolicyAcknowledgementRequiredFlag": {
                "name": "supportPolicyAcknowledgementRequiredFlag",
                "type": "int",
                "form": "relational",
                "doc": "Whether or not a user is required to acknowledge the support policy for portal access."
            },
            "surveyRequiredFlag": {
                "name": "surveyRequiredFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not a user must take a brief survey the next time they log into the SoftLayer customer portal."
            },
            "surveys": {
                "name": "surveys",
                "type": "SoftLayer_Survey",
                "form": "relational",
                "typeArray": true,
                "doc": "The surveys that a user has taken in the SoftLayer customer portal."
            },
            "tickets": {
                "name": "tickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true,
                "doc": "An user's associated tickets."
            },
            "timezone": {
                "name": "timezone",
                "type": "SoftLayer_Locale_Timezone",
                "form": "relational",
                "doc": "A portal user's time zone."
            },
            "unsuccessfulLogins": {
                "name": "unsuccessfulLogins",
                "type": "SoftLayer_User_Customer_Access_Authentication",
                "form": "relational",
                "typeArray": true,
                "doc": "A user's unsuccessful attempts to log into the SoftLayer customer portal."
            },
            "userLinks": {
                "name": "userLinks",
                "type": "SoftLayer_User_Customer_Link",
                "form": "relational",
                "typeArray": true,
                "doc": "User customer link with IBMid and IAMid."
            },
            "userStatus": {
                "name": "userStatus",
                "type": "SoftLayer_User_Customer_Status",
                "form": "relational",
                "doc": "A portal user's status, which controls overall access to the SoftLayer customer portal and VPN access to the private network."
            },
            "virtualGuests": {
                "name": "virtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "A portal user's accessible CloudLayer Computing Instances. These permissions control which CloudLayer Computing Instances a user has access to in the SoftLayer customer portal."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A portal user's associated [[SoftLayer_Account|customer account]] id."
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "The first line of the mailing address belonging to a portal user."
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "The second line of the mailing address belonging to a portal user."
            },
            "aim": {
                "name": "aim",
                "type": "string",
                "form": "local",
                "doc": "A portal user's AOL Instant Messenger screen name."
            },
            "alternatePhone": {
                "name": "alternatePhone",
                "type": "string",
                "form": "local",
                "doc": "A portal user's secondary phone number."
            },
            "authenticationToken": {
                "name": "authenticationToken",
                "type": "SoftLayer_Container_User_Authentication_Token",
                "form": "local",
                "doc": "The authentication token used for logging into the SoftLayer customer portal."
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The city of the mailing address belonging to a portal user."
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local",
                "doc": "A portal user's associated company. This may not be the same company as the customer that owns this portal user."
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "A two-letter abbreviation of the country in the mailing address belonging to a portal user."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a portal user's record was created."
            },
            "daylightSavingsTimeFlag": {
                "name": "daylightSavingsTimeFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether a portal user's time zone is affected by Daylight Savings Time."
            },
            "denyAllResourceAccessOnCreateFlag": {
                "name": "denyAllResourceAccessOnCreateFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag used to deny access to all hardware and cloud computing instances upon user creation."
            },
            "displayName": {
                "name": "displayName",
                "type": "string",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "A portal user's email address."
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "A portal user's first name."
            },
            "forumPasswordHash": {
                "name": "forumPasswordHash",
                "type": "string",
                "form": "local",
                "doc": "A user's password for the SoftLayer forums, hashed for auto-login capability from the SoftLayer customer portal"
            },
            "iamAuthorizationStatus": {
                "name": "iamAuthorizationStatus",
                "type": "int",
                "form": "local"
            },
            "iamId": {
                "name": "iamId",
                "type": "string",
                "form": "local",
                "doc": "The IAMid (realm-identifier) of the user being created by PaaS"
            },
            "icq": {
                "name": "icq",
                "type": "string",
                "form": "local",
                "doc": "A portal user's ICQ UIN."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A portal user's internal identifying number."
            },
            "ipAddressRestriction": {
                "name": "ipAddressRestriction",
                "type": "string",
                "form": "local",
                "doc": "The IP addresses or IP ranges from which a user may login to the SoftLayer customer portal. Specify subnets in CIDR format and separate multiple addresses and subnets by commas. You may combine IPv4 and IPv6 addresses and subnets, for example: 192.168.0.0/16,fe80:021b::0/64."
            },
            "isMasterUserFlag": {
                "name": "isMasterUserFlag",
                "type": "boolean",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "A portal user's last name."
            },
            "linkedAccountIntegrationMode": {
                "name": "linkedAccountIntegrationMode",
                "type": "string",
                "form": "local",
                "doc": "The linked account integration mode"
            },
            "localeId": {
                "name": "localeId",
                "type": "int",
                "form": "local",
                "doc": "A portal user's associated [[SoftLayer_Locale|locale]] id."
            },
            "managedByFederationFlag": {
                "name": "managedByFederationFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Determines if this portal user is managed by SAML federation."
            },
            "managedByOpenIdConnectFlag": {
                "name": "managedByOpenIdConnectFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Determines if this portal user is managed by IBMid federation."
            },
            "minimumPasswordLifeHours": {
                "name": "minimumPasswordLifeHours",
                "type": "int",
                "form": "local",
                "doc": "The minimum number of hours that must pass between password resets."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a portal user's record was last modified."
            },
            "msn": {
                "name": "msn",
                "type": "string",
                "form": "local",
                "doc": "A portal user's MSN address."
            },
            "nameId": {
                "name": "nameId",
                "type": "string",
                "form": "local"
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local",
                "doc": "A portal user's office phone number."
            },
            "openIdConnectUserName": {
                "name": "openIdConnectUserName",
                "type": "string",
                "form": "local",
                "doc": "The BlueID username associated to with this user, if the account is managed by OpenIDConnect / BlueID federation"
            },
            "parentId": {
                "name": "parentId",
                "type": "int",
                "form": "local",
                "doc": "A portal user's parent user. Id a users parentId is ''null'' then it doesn't have a parent user in the customer portal."
            },
            "passwordExpireDate": {
                "name": "passwordExpireDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The expiration date for the user's password"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The postal code of the mailing address belonging to an portal user."
            },
            "pptpVpnAllowedFlag": {
                "name": "pptpVpnAllowedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether a portal user may connect to the SoftLayer private network via PPTP VPN or not."
            },
            "preventPreviousPasswords": {
                "name": "preventPreviousPasswords",
                "type": "int",
                "form": "local"
            },
            "savedId": {
                "name": "savedId",
                "type": "string",
                "form": "local"
            },
            "secondaryLoginManagementFlag": {
                "name": "secondaryLoginManagementFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether a user may change their security options (IP restriction, password expiration, or enforce security questions on login) which were pre-selected by their account's master user."
            },
            "secondaryLoginRequiredFlag": {
                "name": "secondaryLoginRequiredFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether a user is required to answer a security question when logging into the SoftLayer customer portal."
            },
            "secondaryPasswordModifyDate": {
                "name": "secondaryPasswordModifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date when a user's password was last updated."
            },
            "secondaryPasswordTimeoutDays": {
                "name": "secondaryPasswordTimeoutDays",
                "type": "int",
                "form": "local",
                "doc": "The number of days for which a user's password is active."
            },
            "sms": {
                "name": "sms",
                "type": "string",
                "form": "local",
                "doc": "A phone number that can receive SMS text messages for this portal user."
            },
            "sslVpnAllowedFlag": {
                "name": "sslVpnAllowedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether a portal user may connect to the SoftLayer private network via SSL VPN or not."
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "A two-letter abbreviation of the state in the mailing address belonging to a portal user. If a user does not reside in a province then this is typically blank."
            },
            "statusDate": {
                "name": "statusDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a portal users record's last status change."
            },
            "timezoneId": {
                "name": "timezoneId",
                "type": "int",
                "form": "local",
                "doc": "A portal user's time zone."
            },
            "userStatusId": {
                "name": "userStatusId",
                "type": "int",
                "form": "local",
                "doc": "A number reflecting the state of a portal user."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "A portal user's username."
            },
            "verificationCode": {
                "name": "verificationCode",
                "type": "string",
                "form": "local",
                "doc": "The verification code from Bluemix BSS to save in the invitation"
            },
            "vpnManualConfig": {
                "name": "vpnManualConfig",
                "type": "boolean",
                "form": "local",
                "doc": "Whether a portal user vpn subnets have been manual configured."
            },
            "yahoo": {
                "name": "yahoo",
                "type": "string",
                "form": "local",
                "doc": "A portal user's Yahoo! Chat name."
            },
            "actionCount": {
                "name": "actionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "additionalEmailCount": {
                "name": "additionalEmailCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a portal user's additional email addresses. These email addresses are contacted when updates are made to support tickets."
            },
            "apiAuthenticationKeyCount": {
                "name": "apiAuthenticationKeyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a portal user's API Authentication keys. There is a max limit of one API key per user."
            },
            "childUserCount": {
                "name": "childUserCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a portal user's child users. Some portal users may not have child users."
            },
            "closedTicketCount": {
                "name": "closedTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an user's associated closed tickets."
            },
            "dedicatedHostCount": {
                "name": "dedicatedHostCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the dedicated hosts to which the user has been granted access."
            },
            "externalBindingCount": {
                "name": "externalBindingCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the external authentication bindings that link an external identifier to a SoftLayer user."
            },
            "hardwareCount": {
                "name": "hardwareCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a portal user's accessible hardware. These permissions control which hardware a user has access to in the SoftLayer customer portal."
            },
            "hardwareNotificationCount": {
                "name": "hardwareNotificationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of hardware notifications associated with this user. A hardware notification links a user to a piece of hardware, and that user will be notified if any monitors on that hardware fail, if the monitors have a status of 'Notify User'."
            },
            "layoutProfileCount": {
                "name": "layoutProfileCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of contains the definition of the layout profile."
            },
            "loginAttemptCount": {
                "name": "loginAttemptCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a user's attempts to log into the SoftLayer customer portal."
            },
            "mobileDeviceCount": {
                "name": "mobileDeviceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a portal user's associated mobile device profiles."
            },
            "notificationSubscriberCount": {
                "name": "notificationSubscriberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of notification subscription records for the user."
            },
            "openTicketCount": {
                "name": "openTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an user's associated open tickets."
            },
            "overrideCount": {
                "name": "overrideCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a portal user's vpn accessible subnets."
            },
            "permissionCount": {
                "name": "permissionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a portal user's permissions. These permissions control that user's access to functions within the SoftLayer customer portal and API."
            },
            "preferenceCount": {
                "name": "preferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of data type contains a single user preference to a specific preference type."
            },
            "roleCount": {
                "name": "roleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "securityAnswerCount": {
                "name": "securityAnswerCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a portal user's security question answers. Some portal users may not have security answers or may not be configured to require answering a security question on login."
            },
            "subscriberCount": {
                "name": "subscriberCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a user's notification subscription records."
            },
            "successfulLoginCount": {
                "name": "successfulLoginCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a user's successful attempts to log into the SoftLayer customer portal."
            },
            "surveyCount": {
                "name": "surveyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the surveys that a user has taken in the SoftLayer customer portal."
            },
            "ticketCount": {
                "name": "ticketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an user's associated tickets."
            },
            "unsuccessfulLoginCount": {
                "name": "unsuccessfulLoginCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a user's unsuccessful attempts to log into the SoftLayer customer portal."
            },
            "userLinkCount": {
                "name": "userLinkCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of user customer link with IBMid and IAMid."
            },
            "virtualGuestCount": {
                "name": "virtualGuestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a portal user's accessible CloudLayer Computing Instances. These permissions control which CloudLayer Computing Instances a user has access to in the SoftLayer customer portal."
            }
        }
    },
    "SoftLayer_User_Customer_Access_Authentication": {
        "name": "SoftLayer_User_Customer_Access_Authentication",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_User_Customer_Access_Authentication models a single attempt to log into the SoftLayer customer portal. A SoftLayer_User_Customer_Access_Authentication record is created every time a user attempts to log into the portal. Use this service to audit your users' portal activity and diagnose potential security breaches of your SoftLayer portal accounts. \n\nUnsuccessful login attempts can be caused by an incorrect password, failing to answer or not answering a login security question if the user has them configured, or attempting to log in from an IP address outside of the user's IP address restriction list. \n\nSoftLayer employees periodically log into our customer portal as users to diagnose portal issues, verify settings and configuration, and to perform maintenance on your account or services. SoftLayer employees only log into customer accounts from the following IP ranges: \n* 2607:f0d0:1000::/48\n* 2607:f0d0:2000::/48\n* 2607:f0d0:3000::/48\n* 66.228.118.67/32\n* 66.228.118.86/32",
        "properties": {
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The user who has attempted to log into the SoftLayer customer portal."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of an attempt to log into the SoftLayer customer portal."
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local",
                "doc": "The IP address of the user who attempted to log into the SoftLayer customer portal."
            },
            "successFlag": {
                "name": "successFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether an attempt to log into the SoftLayer customer portal was successful or not."
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The internal identifier of the user who attempted to log into the SoftLayer customer portal."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username used when attempting to log into the SoftLayer customer portal"
            }
        }
    },
    "SoftLayer_User_Customer_AdditionalEmail": {
        "name": "SoftLayer_User_Customer_AdditionalEmail",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_User_Customer_AdditionalEmail data type contains the additional email for use in ticket update notifications. ",
        "properties": {
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The portal user that owns this additional email address."
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "Email assigned to user for use in ticket update notifications."
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "An internal identifier for the portal user who this additional email belongs to."
            }
        }
    },
    "SoftLayer_User_Customer_ApiAuthentication": {
        "name": "SoftLayer_User_Customer_ApiAuthentication",
        "base": "SoftLayer_Entity",
        "serviceDoc": "An account's user may obtain access to SoftLayer's API through this authentication service. ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "SoftLayer_User_Customer_ApiAuthentication",
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer_ApiAuthentication",
                        "doc": "A skeleton SoftLayer_User_Customer_ApiAuthentication object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_ApiAuthentication",
                "doc": "getObject retrieves the SoftLayer_User_Customer_ApiAuthentication object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_User_Customer_ApiAuthentication service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_User_Customer_ApiAuthentication type contains user's authentication key(s). ",
        "properties": {
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The user who owns the api authentication key."
            },
            "authenticationKey": {
                "name": "authenticationKey",
                "type": "string",
                "form": "local",
                "doc": "The user's authentication key for API access."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The user's API authentication identifying number."
            },
            "ipAddressRestriction": {
                "name": "ipAddressRestriction",
                "type": "string",
                "form": "local",
                "doc": "The IP addresses or IP ranges from which this user may access the SoftLayer API. Specify subnets in CIDR format and separate multiple addresses and subnets by commas. You may combine IPv4 and IPv6 addresses and subnets, for example: 192.168.0.0/16,fe80:021b::0/64. "
            },
            "timestampKey": {
                "name": "timestampKey",
                "type": "int",
                "form": "local",
                "doc": "The user's authentication key modification date."
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The user's identifying number."
            }
        }
    },
    "SoftLayer_User_Customer_CustomerPermission_Permission": {
        "name": "SoftLayer_User_Customer_CustomerPermission_Permission",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Portal account users who are not the master user (account owner) have permissions to allow them access to portal functionalities. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_User_Customer_CustomerPermission_Permission",
                "typeArray": true,
                "doc": "Retrieve all available permissions.",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_CustomerPermission_Permission",
                "doc": "getObject retrieves the SoftLayer_User_Customer_CustomerPermission_Permission object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_User_Customer_CustomerPermission_Permission service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Each SoftLayer portal account is assigned a series of permissions that determine what access the user has to functions within the SoftLayer customer portal. This status is reflected in the SoftLayer_User_Customer_Status data type. Permissions differ from user status in that user status applies globally to the portal while user permissions are applied to specific portal functions. ",
        "properties": {
            "key": {
                "name": "key",
                "type": "string",
                "form": "local",
                "doc": "A user permission's short name."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A user permission's key name."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A user permission's name."
            }
        }
    },
    "SoftLayer_User_Customer_External_Binding": {
        "name": "SoftLayer_User_Customer_External_Binding",
        "base": "SoftLayer_User_External_Binding",
        "serviceDoc": "<<<",
        "methods": {
            "disable": {
                "name": "disable",
                "type": "boolean",
                "doc": "Disabling an external binding will allow you to keep the external binding on your SoftLayer account, but will not require you to authentication with our trusted 2 form factor vendor when logging into the SoftLayer customer portal. \n\nYou may supply one of the following reason when you disable an external binding: \n*Unspecified\n*TemporarilyUnavailable\n*Lost\n*Stolen",
                "parameters": [
                    {
                        "name": "reason",
                        "type": "string",
                        "doc": "The reason a credential is being disabled.",
                        "defaultValue": null
                    }
                ]
            },
            "enable": {
                "name": "enable",
                "type": "boolean",
                "doc": "Enabling an external binding will activate the binding on your account and require you to authenticate with our trusted 3rd party 2 form factor vendor when logging into the SoftLayer customer portal. \n\nPlease note that API access will be disabled for users that have an active external binding. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_External_Binding",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_User_Customer_External_Binding data type contains general information for a single external binding.  This includes the 3rd party vendor, type of binding, and a unique identifier and password that is used to authenticate against the 3rd party service. ",
        "properties": {
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The SoftLayer user that the external authentication binding belongs to."
            }
        }
    },
    "SoftLayer_User_Customer_External_Binding_Attribute": {
        "name": "SoftLayer_User_Customer_External_Binding_Attribute",
        "base": "SoftLayer_User_External_Binding_Attribute",
        "noservice": true,
        "typeDoc": "The SoftLayer_User_Customer_External_Binding_Attribute data type contains the value for a single attribute associated with an external binding. External binding attributes contain additional information about an external binding.  An attribute can be generic or specific to a 3rd party vendor.  For example these attributes relate to Verisign: \n*Credential Type\n*Credential State\n*Credential Expiration Date\n*Credential Last Update Date"
    },
    "SoftLayer_User_Customer_External_Binding_Phone": {
        "name": "SoftLayer_User_Customer_External_Binding_Phone",
        "base": "SoftLayer_User_Customer_External_Binding",
        "serviceDoc": "SoftLayer provides its customers the ability to add an additional layer of security to the SoftLayer customer portal by requiring that a user login and authenticate with a trusted 3rd party before they are given access to their SoftLayer account.  This is accomplished by creating an external binding for a specific vendor such as PhoneFactor. When the SoftLayer user attempts to log in to the SoftLayer customer portal or VPN, they will first be prompted for their normal SoftLayer username and password.  Once that information is verified they will be asked to authenticate via phone, SMS or mobile phone application. Once authenticated with the trusted vendor the user will be allowed access to the SoftLayer customer portal or VPN. \n\nThe Phone external binding service allows a user to create an external binding, enable, disable, or unlock an external binding, and delete an external binding. \n\nOnce a SoftLayer user has a valid and active external binding, they will be required to always use their credential to login to the SoftLayer customer portal.  In addition any user with an active external binding will be prohibited from using the API. ",
        "methods": {
            "checkPhoneValidationResult": {
                "name": "checkPhoneValidationResult",
                "type": "boolean",
                "doc": "Return a phone validation result. ",
                "parameters": [
                    {
                        "name": "token",
                        "type": "string"
                    }
                ]
            },
            "disable": {
                "name": "disable",
                "type": "boolean",
                "doc": "Disabling an external binding will allow you to keep the external binding on your SoftLayer account, but will not require you to authentication with our trusted 2 form factor vendor when logging into the SoftLayer customer portal. \n\nYou may supply one of the following reason when you disable an external binding: \n*Unspecified\n*TemporarilyUnavailable\n*Lost\n*Stolen",
                "parameters": [
                    {
                        "name": "reason",
                        "type": "string",
                        "doc": "The reason a credential is being disabled."
                    }
                ]
            },
            "enable": {
                "name": "enable",
                "type": "boolean",
                "doc": "Enabling an external binding will activate the binding on your account and require you to authenticate with our trusted 3rd party 2 form factor vendor when logging into the SoftLayer customer portal. \n\nPlease note that API access will be disabled for users that have an active external binding. "
            },
            "getAllAuthenticationModes": {
                "name": "getAllAuthenticationModes",
                "type": "string",
                "typeArray": true,
                "doc": "This service returns key names of all available authentication modes. See [[SoftLayer_Container_User_Customer_External_Binding_Phone_Mode|authentication mode]] container for details. "
            },
            "getAllAuthenticationPinModes": {
                "name": "getAllAuthenticationPinModes",
                "type": "string",
                "typeArray": true,
                "doc": "This service returns key names of all available authentication modes. Refer to [[SoftLayer_User_Customer_External_Binding_Phone::getAllAuthenticationModes|getAllAuthenticationModes]] to retrieve authentication mode key names. ",
                "parameters": [
                    {
                        "name": "authenticationModeKeyName",
                        "type": "string"
                    }
                ]
            },
            "getAuthenticationMode": {
                "name": "getAuthenticationMode",
                "type": "SoftLayer_Container_User_Customer_External_Binding_Phone_Mode"
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_External_Binding_Phone",
                "filterable": true,
                "maskable": true
            },
            "getPhoneAppActivationCode": {
                "name": "getPhoneAppActivationCode",
                "type": "SoftLayer_User_External_Binding_Attribute",
                "typeArray": true,
                "doc": "Some vendor's mobile app requires an activation code. Use this method to get an activation data. ",
                "maskable": true
            },
            "getPhoneData": {
                "name": "getPhoneData",
                "type": "SoftLayer_Container_User_Data_Phone",
                "typeArray": true
            },
            "requestPhoneValidation": {
                "name": "requestPhoneValidation",
                "type": "string",
                "doc": "Initiates a phone validation requests and returns a unique token. Use [[SoftLayer_User_Customer_External_Binding_Phone::checkPhoneValidationResult|checkPhoneValidationResult]] to find the phone validation result. ",
                "parameters": [
                    {
                        "name": "phoneData",
                        "type": "SoftLayer_Container_User_Data_Phone"
                    }
                ]
            },
            "updateAuthenticationMode": {
                "name": "updateAuthenticationMode",
                "type": "boolean",
                "doc": "This service allow you to change your phone authentication mode. See [[SoftLayer_Container_User_Customer_External_Binding_Phone_Mode|authentication mode]] container for available modes. ",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "SoftLayer_Container_User_Customer_External_Binding_Phone_Mode"
                    }
                ]
            },
            "updatePhone": {
                "name": "updatePhone",
                "type": "boolean",
                "doc": "Phone external binding supports a primary and a backup phone number. You can use this method to update your phone number used for the phone authentication. You can provide an array of [[SoftLayer_Container_User_Data_Phone|User Phone]] objects. You have to mark one as the primary phone number by setting \"phoneType\" to \"PRIMARY\". \n\n\n*countryCode: Country code number for the phone number. Default: 1 (United States & Canada +1)\n*phone: Phone number that 2 Form Factor system will call or text for user authentication.\nThe phone number format must match the format selected in the Country Code. \n*extension: Specify the extension that will be dialed after the call is answered. Digits, commas, *, and #\nare allowed.  Commas can be used for a one second pause to navigate phone system menus. \n*phoneType: Specify the primary and backup phone number by setting this value to \"PRIMARY\" or \"BACKUP\".\nIf omitted, it will be considered to be the primary phone number. If you are passing two Phone objects, you must specify the phone type of each phone number. \n\n",
                "parameters": [
                    {
                        "name": "phoneData",
                        "type": "SoftLayer_Container_User_Data_Phone",
                        "typeArray": true
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_User_Customer_External_Binding_Phone data type contains information about an external binding that uses a phone call, SMS or mobile app for 2 form factor authentication. The external binding information is used when a SoftLayer customer logs into the SoftLayer customer portal or VPN to authenticate them against a trusted 3rd party, in this case using a mobile phone, mobile phone application or land-line phone. \n\nSoftLayer users with an active external binding will be prohibited from using the API for security reasons. ",
        "properties": {
            "bindingStatus": {
                "name": "bindingStatus",
                "type": "string",
                "form": "relational",
                "doc": "The current external binding status. It can be \"ACTIVE\" or \"BLOCKED\"."
            },
            "pinLength": {
                "name": "pinLength",
                "type": "string",
                "form": "relational"
            }
        }
    },
    "SoftLayer_User_Customer_External_Binding_Totp": {
        "name": "SoftLayer_User_Customer_External_Binding_Totp",
        "base": "SoftLayer_User_Customer_External_Binding",
        "serviceDoc": "SoftLayer provides its customers the ability to add an additional layer of security to the SoftLayer customer portal by requiring that a user login and authenticate with a trusted 3rd party before they are given access to their SoftLayer account.  This is accomplished by creating an external binding for a specific vendor, in this case Time-based One Time Password.  When the SoftLayer user attempts to log in to the SoftLayer customer portal they will first be prompted for their normal SoftLayer username and password.  Once that information is verified they will be asked to generate and provide a security code from their Time-based One Time Password application. Once the security code has been authenticated the user will be allowed access to the SoftLayer customer portal. \n\nThe time-based one time password external binding service allows a user to create an external binding, enable, disable, and delete an external binding. \n\nOnce a SoftLayer user has a valid and active time-based one time password external binding, they will be required to always use their credential to login to the SoftLayer customer portal.  In addition any user with an active external binding will be prohibited from using the API. ",
        "methods": {
            "activate": {
                "name": "activate",
                "type": "boolean"
            },
            "deactivate": {
                "name": "deactivate",
                "type": "boolean"
            },
            "generateSecretKey": {
                "name": "generateSecretKey",
                "type": "string",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_External_Binding_Totp",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_User_Customer_External_Binding_Totp data type contains information about a single time-based one time password external binding.  The external binding information is used when a SoftLayer customer logs into the SoftLayer customer portal to authenticate them. \n\nThe information provided by this external binding data type includes: \n* The type of credential\n* The current state of the credential\n** Active\n** Inactive\n\n\nSoftLayer users with an active external binding will be prohibited from using the API for security reasons. "
    },
    "SoftLayer_User_Customer_External_Binding_Type": {
        "name": "SoftLayer_User_Customer_External_Binding_Type",
        "base": "SoftLayer_User_External_Binding_Type",
        "noservice": true,
        "typeDoc": "The SoftLayer_User_Customer_External_Binding_Type data type contains information relating to a type of external authentication binding.  It contains a user friendly name as well as a unique key name. "
    },
    "SoftLayer_User_Customer_External_Binding_Vendor": {
        "name": "SoftLayer_User_Customer_External_Binding_Vendor",
        "base": "SoftLayer_User_External_Binding_Vendor",
        "serviceDoc": "The SoftLayer_User_Customer_External_Binding_Vendor service is used to retrieve a list of available 3rd party vendors that SoftLayer supports for external bindings. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_External_Binding_Vendor",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_User_Customer_External_Binding_Vendor data type contains information for a single external binding vendor.  This information includes a user friendly vendor name, a unique version of the vendor name, and a unique internal identifier that can be used when creating a new external binding. "
    },
    "SoftLayer_User_Customer_External_Binding_Verisign": {
        "name": "SoftLayer_User_Customer_External_Binding_Verisign",
        "base": "SoftLayer_User_Customer_External_Binding",
        "serviceDoc": "SoftLayer provides its customers the ability to add an additional layer of security to the SoftLayer customer portal by requiring that a user login and authenticate with a trusted 3rd party before they are given access to their SoftLayer account.  This is accomplished by creating an external binding for a specific vendor, in this case VeriSign.  When the SoftLayer user attempts to log in to the SoftLayer customer portal they will first be prompted for their normal SoftLayer username and password.  Once that information is verified they will be asked to generate and provide a security code from their VeriSign credential. Once the security code has been authenticated with VeriSign the user will be allowed access to the SoftLayer customer portal. \n\nThe VeriSign external binding service allows a user to create an external binding, enable, disable, or unlock an external binding, and delete an external binding. Currently SoftLayer provides the master account user of a SoftLayer account with one free VeriSign external binding. All subsequent VeriSign external bindings will need to be created by placing an order. \n\nOnce a SoftLayer user has a valid and active VeriSign external binding, they will be required to always use their credential to login to the SoftLayer customer portal.  In addition any user with an active external binding will be prohibited from using the API. ",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a VeriSign external binding.  The only VeriSign external binding that can be deleted through this method is the free VeriSign external binding for the master user of a SoftLayer account. All other external bindings must be canceled using the SoftLayer service cancellation form. \n\nWhen a VeriSign external binding is deleted the credential is deactivated in VeriSign's system for use on the SoftLayer site and the $0 billing item associated with the free VeriSign external binding is cancelled. "
            },
            "disable": {
                "name": "disable",
                "type": "boolean",
                "doc": "Disabling an external binding will allow you to keep the external binding on your SoftLayer account, but will not require you to authentication with our trusted 2 form factor vendor when logging into the SoftLayer customer portal. \n\nYou may supply one of the following reason when you disable an external binding: \n*Unspecified\n*TemporarilyUnavailable\n*Lost\n*Stolen",
                "parameters": [
                    {
                        "name": "reason",
                        "type": "string",
                        "doc": "The reason a credential is being disabled.",
                        "defaultValue": null
                    }
                ]
            },
            "enable": {
                "name": "enable",
                "type": "boolean",
                "doc": "Enabling an external binding will activate the binding on your account and require you to authenticate with our trusted 3rd party 2 form factor vendor when logging into the SoftLayer customer portal. \n\nPlease note that API access will be disabled for users that have an active external binding. "
            },
            "getActivationCodeForMobileClient": {
                "name": "getActivationCodeForMobileClient",
                "type": "string",
                "doc": "An activation code is required when provisioning a new mobile credential from Verisign.  This method will return the required activation code. ",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_External_Binding_Verisign",
                "filterable": true,
                "maskable": true
            },
            "unlock": {
                "name": "unlock",
                "type": "boolean",
                "doc": "If a VeriSign credential becomes locked because of too many failed login attempts the unlock method can be used to unlock a VeriSign credential. As a security precaution a valid security code generated by the credential will be required before the credential is unlocked. ",
                "parameters": [
                    {
                        "name": "securityCode",
                        "type": "string",
                        "doc": "A valid security code generated by the credential.",
                        "defaultValue": null
                    }
                ]
            },
            "validateCredentialId": {
                "name": "validateCredentialId",
                "type": "boolean",
                "doc": "Validate the user id and VeriSign credential id used to create an external authentication binding. ",
                "static": true,
                "parameters": [
                    {
                        "name": "userId",
                        "type": "int",
                        "doc": "The user id to be validated"
                    },
                    {
                        "name": "externalId",
                        "type": "string",
                        "doc": "The external id to be validated"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_User_Customer_External_Binding_Verisign data type contains information about a single VeriSign external binding.  The external binding information is used when a SoftLayer customer logs into the SoftLayer customer portal to authenticate them against a 3rd party, in this case VeriSign. \n\nThe information provided by the VeriSign external binding data type includes: \n* The type of credential\n* The current state of the credential\n** Enabled\n** Disabled\n** Locked\n* The credential's expiration date\n* The last time the credential was updated\n\n\nSoftLayer users with an active external binding will be prohibited from using the API for security reasons. ",
        "properties": {
            "credentialExpirationDate": {
                "name": "credentialExpirationDate",
                "type": "string",
                "form": "relational",
                "doc": "The date that a VeriSign credential expires."
            },
            "credentialLastUpdateDate": {
                "name": "credentialLastUpdateDate",
                "type": "string",
                "form": "relational",
                "doc": "The last time a VeriSign credential was updated."
            },
            "credentialState": {
                "name": "credentialState",
                "type": "string",
                "form": "relational",
                "doc": "The current state of a VeriSign credential. This can be 'Enabled', 'Disabled', or 'Locked'."
            },
            "credentialType": {
                "name": "credentialType",
                "type": "string",
                "form": "relational",
                "doc": "The type of VeriSign credential. This can be either 'Hardware' or 'Software'."
            }
        }
    },
    "SoftLayer_User_Customer_Invitation": {
        "name": "SoftLayer_User_Customer_Invitation",
        "base": "SoftLayer_Entity",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_Invitation",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "code": {
                "name": "code",
                "type": "string",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "creatorId": {
                "name": "creatorId",
                "type": "int",
                "form": "local"
            },
            "creatorType": {
                "name": "creatorType",
                "type": "string",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local"
            },
            "existingBlueIdFlag": {
                "name": "existingBlueIdFlag",
                "type": "int",
                "form": "local"
            },
            "expirationDate": {
                "name": "expirationDate",
                "type": "dateTime",
                "form": "local"
            },
            "ibmIdUsername": {
                "name": "ibmIdUsername",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "isFederatedEmailDomainFlag": {
                "name": "isFederatedEmailDomainFlag",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "responseDate": {
                "name": "responseDate",
                "type": "dateTime",
                "form": "local"
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_User_Customer_Link": {
        "name": "SoftLayer_User_Customer_Link",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "serviceProvider": {
                "name": "serviceProvider",
                "type": "SoftLayer_Service_Provider",
                "form": "relational"
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "defaultFlag": {
                "name": "defaultFlag",
                "type": "int",
                "form": "local"
            },
            "destinationUserAlphanumericId": {
                "name": "destinationUserAlphanumericId",
                "type": "string",
                "form": "local"
            },
            "destinationUserId": {
                "name": "destinationUserId",
                "type": "int",
                "form": "local"
            },
            "iamIdVerificationFlag": {
                "name": "iamIdVerificationFlag",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "realm": {
                "name": "realm",
                "type": "string",
                "form": "local",
                "doc": "The realm of the IAMid unique identifier."
            },
            "serviceProviderId": {
                "name": "serviceProviderId",
                "type": "int",
                "form": "local"
            },
            "uniqueIdentifier": {
                "name": "uniqueIdentifier",
                "type": "string",
                "form": "local",
                "doc": "The IAMid Unique Identifier formed in the format of \"realm-uniqueIdentifier\""
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_User_Customer_Link_TrustedProfile": {
        "name": "SoftLayer_User_Customer_Link_TrustedProfile",
        "base": "SoftLayer_User_Customer_Link",
        "noservice": true
    },
    "SoftLayer_User_Customer_Link_VerifiedIamIdLinkCollection": {
        "name": "SoftLayer_User_Customer_Link_VerifiedIamIdLinkCollection",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "badLinksDifferentIUI": {
                "name": "badLinksDifferentIUI",
                "type": "SoftLayer_User_Customer_Link",
                "form": "local",
                "typeArray": true
            },
            "badLinksDifferentUsername": {
                "name": "badLinksDifferentUsername",
                "type": "SoftLayer_User_Customer_Link",
                "form": "local",
                "typeArray": true
            },
            "goodLinks": {
                "name": "goodLinks",
                "type": "SoftLayer_User_Customer_Link",
                "form": "local",
                "typeArray": true
            }
        }
    },
    "SoftLayer_User_Customer_MobileDevice": {
        "name": "SoftLayer_User_Customer_MobileDevice",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_User_Customer_MobileDevice",
                "doc": "Create a new mobile device association for a user. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer_MobileDevice",
                        "doc": "The SoftLayer_User_Customer_MobileDevice object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a mobile device association for a user. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit the object by passing in a modified instance of the object ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer_MobileDevice",
                        "doc": "A skeleton SoftLayer_User_Customer_MobileDevice object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_MobileDevice",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This class represents a mobile device belonging to a user.  The device can be a phone, tablet, or possibly even some Android based net books.  The purpose is to tie just enough info with the device and the user to enable push notifications through non-softlayer entities (Google, Apple, RIM). ",
        "properties": {
            "availablePushNotificationSubscriptions": {
                "name": "availablePushNotificationSubscriptions",
                "type": "SoftLayer_Notification",
                "form": "relational",
                "typeArray": true,
                "doc": "Notification subscriptions available to a mobile device."
            },
            "customer": {
                "name": "customer",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The user this mobile device belongs to."
            },
            "operatingSystem": {
                "name": "operatingSystem",
                "type": "SoftLayer_User_Customer_MobileDevice_OperatingSystem",
                "form": "relational",
                "doc": "The operating system this device is using"
            },
            "pushNotificationSubscriptions": {
                "name": "pushNotificationSubscriptions",
                "type": "SoftLayer_Notification_User_Subscriber",
                "form": "relational",
                "typeArray": true,
                "doc": "Notification subscriptions attached to a mobile device."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_User_Customer_MobileDevice_Type",
                "form": "relational",
                "doc": "The type of device this user is using"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Created date for the record."
            },
            "displayResolutionXxY": {
                "name": "displayResolutionXxY",
                "type": "string",
                "form": "local",
                "doc": "The device resolution formatted width x height"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Record Identifier"
            },
            "mobileDeviceTypeId": {
                "name": "mobileDeviceTypeId",
                "type": "int",
                "form": "local",
                "doc": "Device type identifier."
            },
            "mobileOperatingSystemId": {
                "name": "mobileOperatingSystemId",
                "type": "int",
                "form": "local",
                "doc": "Mobile OS identifier."
            },
            "modelNumber": {
                "name": "modelNumber",
                "type": "string",
                "form": "local",
                "doc": "Device model number"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Last modify date for the record."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the device the user is using."
            },
            "phoneNumber": {
                "name": "phoneNumber",
                "type": "string",
                "form": "local",
                "doc": "Device phone number"
            },
            "serialNumber": {
                "name": "serialNumber",
                "type": "string",
                "form": "local",
                "doc": "Device serial number"
            },
            "token": {
                "name": "token",
                "type": "string",
                "form": "local",
                "doc": "The token that is provided by the mobile device."
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "User Identifier"
            },
            "availablePushNotificationSubscriptionCount": {
                "name": "availablePushNotificationSubscriptionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of notification subscriptions available to a mobile device."
            },
            "pushNotificationSubscriptionCount": {
                "name": "pushNotificationSubscriptionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of notification subscriptions attached to a mobile device."
            }
        }
    },
    "SoftLayer_User_Customer_MobileDevice_OperatingSystem": {
        "name": "SoftLayer_User_Customer_MobileDevice_OperatingSystem",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_User_Customer_MobileDevice_OperatingSystem",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_MobileDevice_OperatingSystem",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This class represents the mobile operating system installed on a user's registered mobile device. It assists us when determining the how to get a push notification to the user. ",
        "properties": {
            "buildVersion": {
                "name": "buildVersion",
                "type": "int",
                "form": "local",
                "doc": "Build revision number of the operating system."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Create date of the record."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of the mobile operating system.."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Indentifier for the record."
            },
            "majorVersion": {
                "name": "majorVersion",
                "type": "int",
                "form": "local",
                "doc": "Major revision number of the operating system."
            },
            "minorVersion": {
                "name": "minorVersion",
                "type": "int",
                "form": "local",
                "doc": "Minor revision number of the operating system."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Modify date of the record."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of the mobile operating system."
            }
        }
    },
    "SoftLayer_User_Customer_MobileDevice_Type": {
        "name": "SoftLayer_User_Customer_MobileDevice_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_User_Customer_MobileDevice_Type",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_MobileDevice_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Describes a supported class of mobile device. In this the word class is used in the context of classes of consumer electronic devices, the two most prominent examples being mobile phones and tablets. ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Record create date."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A description of the device"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Indentifier for record."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Last modify date for record."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The common name of the device."
            }
        }
    },
    "SoftLayer_User_Customer_Notification_Hardware": {
        "name": "SoftLayer_User_Customer_Notification_Hardware",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service represents the link between a monitored hardware instance, and a user account. \n\nWhen a monitoring service on that hardware instance fails and the monitor is set to \"notify users,\" any users linked to that hardware instance using this service will be notified of the failure. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_User_Customer_Notification_Hardware",
                "doc": "Passing in an unsaved instances of a Customer_Notification_Hardware object into this function will create the object and return the results to the user. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer_Notification_Hardware",
                        "doc": "The SoftLayer_User_Customer_Notification_Hardware object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_User_Customer_Notification_Hardware",
                "typeArray": true,
                "doc": "Passing in a collection of unsaved instances of Customer_Notification_Hardware objects into this function will create all objects and return the results to the user. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_User_Customer_Notification_Hardware",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_User_Customer_Notification_Hardware objects that you wish to create."
                    }
                ]
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Like any other API object, the customer notification objects can be deleted by passing an instance of them into this function.  The ID on the object must be set. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_User_Customer_Notification_Hardware",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_User_Customer_Notification_Hardware objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "findByHardwareId": {
                "name": "findByHardwareId",
                "type": "SoftLayer_User_Customer_Notification_Hardware",
                "typeArray": true,
                "doc": "This method returns all Customer_Notification_Hardware objects associated with the passed in hardware ID as long as that hardware ID is owned by the current user's account. \n\nThis behavior can also be accomplished by simply tapping monitoringUserNotification on the Hardware_Server object. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "hardwareId",
                        "type": "int",
                        "doc": "The ID of the hardware object to search by.",
                        "defaultValue": null
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_Notification_Hardware",
                "doc": "getObject retrieves the SoftLayer_User_Customer_Notification_Hardware object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_User_Customer_Notification_Hardware service. You can only retrieve hardware notifications attached to hardware and users that belong to your account ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The Customer_Notification_Hardware object stores links between customers and the hardware devices they wish to monitor.  This link is not enough, the user must be sure to also create SoftLayer_Network_Monitor_Version1_Query_Host instance with the response action set to \"notify users\" in order for the users linked to that hardware object to be notified on failure. ",
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "The hardware object that will be monitored."
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The user that will be notified when the associated hardware object fails a monitoring instance."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the Hardware object that is to be monitored."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this object"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the SoftLayer_User_Customer object that represents the user to be notified on monitoring failure."
            }
        }
    },
    "SoftLayer_User_Customer_Notification_Virtual_Guest": {
        "name": "SoftLayer_User_Customer_Notification_Virtual_Guest",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service represents the link between a monitored guest instance, and a user account. \n\nWhen a monitoring service on that guest instance fails and the monitor is set to \"notify users,\" any users linked to that guest instance using this service will be notified of the failure. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_User_Customer_Notification_Virtual_Guest",
                "doc": "Passing in an unsaved instance of a SoftLayer_Customer_Notification_Virtual_Guest object into this function will create the object and return the results to the user. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer_Notification_Virtual_Guest",
                        "doc": "The SoftLayer_User_Customer_Notification_Virtual_Guest object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_User_Customer_Notification_Virtual_Guest",
                "typeArray": true,
                "doc": "Passing in a collection of unsaved instances of SoftLayer_Customer_Notification_Virtual_Guest objects into this function will create all objects and return the results to the user. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_User_Customer_Notification_Virtual_Guest",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_User_Customer_Notification_Virtual_Guest objects that you wish to create."
                    }
                ]
            },
            "deleteObjects": {
                "name": "deleteObjects",
                "type": "boolean",
                "doc": "Like any other API object, the customer notification objects can be deleted by passing an instance of them into this function.  The ID on the object must be set. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_User_Customer_Notification_Virtual_Guest",
                        "typeArray": true,
                        "doc": "An array of skeleton SoftLayer_User_Customer_Notification_Virtual_Guest objects that you wish to delete. Each object in the array must have at least their id properties defined."
                    }
                ]
            },
            "findByGuestId": {
                "name": "findByGuestId",
                "type": "SoftLayer_User_Customer_Notification_Virtual_Guest",
                "typeArray": true,
                "doc": "This method returns all SoftLayer_User_Customer_Notification_Virtual_Guest objects associated with the passed in ID as long as that Virtual Guest ID is owned by the current user's account. \n\nThis behavior can also be accomplished by simply tapping monitoringUserNotification on the Virtual_Guest object. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "id",
                        "type": "int",
                        "doc": "The ID of the CloudLayer computing instance (virtual_guest) object to search by.",
                        "defaultValue": null
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_Notification_Virtual_Guest",
                "doc": "getObject retrieves the SoftLayer_User_Customer_Notification_Virtual_Guest object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_User_Customer_Notification_Virtual_Guest service. You can only retrieve guest notifications attached to virtual guests and users that belong to your account ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_User_Customer_Notification_Virtual_Guest object stores links between customers and the virtual guests they wish to monitor.  This link is not enough, the user must be sure to also create SoftLayer_Network_Monitor_Version1_Query_Host instance with the response action set to \"notify users\" in order for the users linked to that Virtual Guest object to be notified on failure. ",
        "properties": {
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The virtual guest object that will be monitored."
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The user that will be notified when the associated virtual guest object fails a monitoring instance."
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the virtual guest object that is to be monitored."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for this object"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the SoftLayer_User_Customer object that represents the user to be notified on monitoring failure."
            }
        }
    },
    "SoftLayer_User_Customer_OpenIdConnect": {
        "name": "SoftLayer_User_Customer_OpenIdConnect",
        "base": "SoftLayer_User_Customer",
        "methods": {
            "activateOpenIdConnectUser": {
                "name": "activateOpenIdConnectUser",
                "type": "void",
                "doc": "Completes invitation process for an OpenIdConnect user created by Bluemix Unified User Console. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "verificationCode",
                        "type": "string",
                        "doc": ": invitation code used to create the user"
                    },
                    {
                        "name": "userInfo",
                        "type": "SoftLayer_User_Customer",
                        "doc": ": user object fields to be updated"
                    },
                    {
                        "name": "iamId",
                        "type": "string",
                        "doc": "Fully qualified (realm-id format) IAMid for the user (optional)",
                        "defaultValue": null
                    }
                ]
            },
            "checkPhoneFactorAuthenticationForPasswordSet": {
                "name": "checkPhoneFactorAuthenticationForPasswordSet",
                "type": "boolean",
                "doc": "Add a description here \n\n",
                "noauth": true,
                "parameters": [
                    {
                        "name": "passwordSet",
                        "type": "SoftLayer_Container_User_Customer_PasswordSet",
                        "doc": "A container with the information required for setting customer password"
                    },
                    {
                        "name": "authenticationContainer",
                        "type": "SoftLayer_Container_User_Customer_External_Binding",
                        "doc": "The authentication container with the external authentication information.",
                        "defaultValue": null
                    }
                ]
            },
            "completeInvitationAfterLogin": {
                "name": "completeInvitationAfterLogin",
                "type": "void",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    },
                    {
                        "name": "accessToken",
                        "type": "string",
                        "doc": "The access token from an OpenIdConnect login"
                    },
                    {
                        "name": "emailRegistrationCode",
                        "type": "string",
                        "doc": "The registration code from OpenIdConnect process"
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_User_Customer_OpenIdConnect",
                "doc": "Create a new user in the SoftLayer customer portal. It is not possible to set up SLL enable flags during object creation. These flags are ignored during object creation. You will need to make a subsequent call to edit object in order to enable VPN access. \n\nAn account's master user and sub-users who have the User Manage permission can add new users. \n\nUsers are created with a default permission set. After adding a user it may be helpful to set their permissions and device access. \n\nsecondaryPasswordTimeoutDays will be set to the system configured default value if the attribute is not provided or the attribute is not a valid value. \n\nNote, neither password nor vpnPassword parameters are required. \n\nPassword When a new user is created, an email will be sent to the new user's email address with a link to a url that will allow the new user to create or change their password for the SoftLayer customer portal. \n\nIf the password parameter is provided and is not null, then that value will be validated. If it is a valid password, then the user will be created with this password.  This user will still receive a portal password email.  It can be used within 24 hours to change their password, or it can be allowed to expire, and the password provided during user creation will remain as the user's password. \n\nIf the password parameter is not provided or the value is null, the user must set their portal password using the link sent in email within 24 hours.\u00a0 If the user fails to set their password within 24 hours, then a non-master user can use the \"Reset Password\" link on the login page of the portal to request a new email.  A master user can use the link to retrieve a phone number to call to assist in resetting their password. \n\nThe password parameter is ignored for VPN_ONLY users or for IBMid authenticated users. \n\nvpnPassword If the vpnPassword is provided, then the user's vpnPassword will be set to the provided password.\u00a0 When creating a vpn only user, the vpnPassword MUST be supplied.\u00a0 If the vpnPassword is not provided, then the user will need to use the portal to edit their profile and set the vpnPassword. \n\nIBMid considerations When a SoftLayer account is linked to a Platform Services (PaaS, formerly Bluemix) account, AND the trait on the SoftLayer Account indicating IBMid authentication is set, then SoftLayer will delegate the creation of an ACTIVE user to PaaS. This means that even though the request to create a new user in such an account may start at the IMS API, via this delegation we effectively turn it into a request that is driven by PaaS. In particular this means that any \"invitation email\" that comes to the user, will come from PaaS, not from IMS via IBMid. \n\nUsers created in states other than ACTIVE (for example, a VPN_ONLY user) will be created directly in IMS without delegation (but note that no invitation is sent for a user created in any state other than ACTIVE). ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer_OpenIdConnect",
                        "doc": "The SoftLayer_User_Customer_OpenIdConnect object that you wish to create."
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "The new user's password."
                    },
                    {
                        "name": "vpnPassword",
                        "type": "string",
                        "doc": "The new user's VPN password."
                    }
                ]
            },
            "createOpenIdConnectUserAndCompleteInvitation": {
                "name": "createOpenIdConnectUserAndCompleteInvitation",
                "type": "void",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    },
                    {
                        "name": "user",
                        "type": "SoftLayer_User_Customer",
                        "doc": "user"
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "The password user inputted for their account"
                    },
                    {
                        "name": "registrationCode",
                        "type": "string",
                        "doc": "The registration code or token received from the system where the user identity"
                    }
                ]
            },
            "declineInvitation": {
                "name": "declineInvitation",
                "type": "void",
                "doc": "Declines an invitation to link an OpenIdConnect identity to a SoftLayer (Atlas) identity and account. Note that this uses a registration code that is likely a one-time-use-only token, so if an invitation has already been processed (accepted or previously declined) it will not be possible to process it a second time. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    },
                    {
                        "name": "registrationCode",
                        "type": "string",
                        "doc": "The registration code or token received from the system where the user identity"
                    }
                ]
            },
            "getDefaultAccount": {
                "name": "getDefaultAccount",
                "type": "SoftLayer_Account",
                "doc": "This API gets the account associated with the default user for the OpenIdConnect identity that is linked to the current active SoftLayer user identity. When a single active user is found for that IAMid, it becomes the default user and the associated account is returned. When multiple default users are found only the first is preserved and the associated account is returned (remaining defaults see their default flag unset). If the current SoftLayer user identity isn't linked to any OpenIdConnect identity, or if none of the linked users were found as defaults, the API returns null. Invoke this only on IAMid-authenticated users. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    }
                ]
            },
            "getLoginAccountInfoOpenIdConnect": {
                "name": "getLoginAccountInfoOpenIdConnect",
                "type": "SoftLayer_Container_User_Customer_OpenIdConnect_LoginAccountInfo",
                "doc": "Validates a supplied OpenIdConnect access token to the SoftLayer customer portal and returns the default account name and id for the active user. An exception will be thrown if no matching customer is found. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    },
                    {
                        "name": "accessToken",
                        "type": "string",
                        "doc": "The OpenID Connect access token which provides temporary access to a resource by the"
                    }
                ]
            },
            "getMappedAccounts": {
                "name": "getMappedAccounts",
                "type": "SoftLayer_Account",
                "typeArray": true,
                "doc": "An OpenIdConnect identity, for example an IAMid, can be linked or mapped to one or more individual SoftLayer users, but no more than one SoftLayer user per account. This effectively links the OpenIdConnect identity to those accounts. This API returns a list of all active accounts for which there is a link between the OpenIdConnect identity and a SoftLayer user. Invoke this only on IAMid-authenticated users. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_OpenIdConnect",
                "filterable": true,
                "maskable": true
            },
            "getOpenIdRegistrationInfoFromCode": {
                "name": "getOpenIdRegistrationInfoFromCode",
                "type": "SoftLayer_Account_Authentication_OpenIdConnect_RegistrationInformation",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    },
                    {
                        "name": "registrationCode",
                        "type": "string",
                        "doc": "<<< EOT"
                    }
                ]
            },
            "getPortalLoginTokenOpenIdConnect": {
                "name": "getPortalLoginTokenOpenIdConnect",
                "type": "SoftLayer_Container_User_Customer_Portal_Token",
                "doc": "Attempt to authenticate a supplied OpenIdConnect access token to the SoftLayer customer portal. If authentication is successful then the API returns a token containing the ID of the authenticated user and a hash key used by the SoftLayer customer portal to maintain authentication. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type."
                    },
                    {
                        "name": "accessToken",
                        "type": "string",
                        "doc": "The OpenID Connect access token which provides temporary access to a resource by the"
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "The preferred Softlayer account to query, if not provided a default will be used.",
                        "defaultValue": null
                    },
                    {
                        "name": "securityQuestionId",
                        "type": "int",
                        "doc": "A security question you wish to answer when authenticating to the SoftLayer customer portal. This parameter isn't required if no security questions are set on your portal account or if your account is configured to not require answering a security account upon login.",
                        "defaultValue": null
                    },
                    {
                        "name": "securityQuestionAnswer",
                        "type": "string",
                        "doc": "The answer to your security question.",
                        "defaultValue": null
                    }
                ]
            },
            "getRequirementsForPasswordSet": {
                "name": "getRequirementsForPasswordSet",
                "type": "SoftLayer_Container_User_Customer_PasswordSet",
                "doc": "Retrieve the authentication requirements for an outstanding password set/reset request.  The requirements returned in the same SoftLayer_Container_User_Customer_PasswordSet container which is provided as a parameter into this request.  The SoftLayer_Container_User_Customer_PasswordSet::authenticationMethods array will contain an entry for each authentication method required for the user.  See SoftLayer_Container_User_Customer_PasswordSet for more details. \n\nIf the user has required authentication methods, then authentication information will be supplied to the SoftLayer_User_Customer::processPasswordSetRequest method within this same SoftLayer_Container_User_Customer_PasswordSet container.  All existing information in the container must continue to exist in the container to complete the password set/reset process. ",
                "noauth": true,
                "parameters": [
                    {
                        "name": "passwordSet",
                        "type": "SoftLayer_Container_User_Customer_PasswordSet",
                        "doc": "Container used to exchange information pertaining to the password reset process."
                    }
                ]
            },
            "getUserForUnifiedInvitation": {
                "name": "getUserForUnifiedInvitation",
                "type": "SoftLayer_User_Customer_OpenIdConnect",
                "doc": "Returns an IMS User Object from the provided OpenIdConnect User ID or IBMid Unique Identifier for the Account of the active user. Enforces the User Management permissions for the Active User. An exception will be thrown if no matching IMS User is found. NOTE that providing IBMid Unique Identifier is optional, but it will be preferred over OpenIdConnect User ID if provided. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "openIdConnectUserId",
                        "type": "string",
                        "doc": "The OpenId Connect user id to use for the IMS User lookup"
                    },
                    {
                        "name": "uniqueIdentifier",
                        "type": "string",
                        "doc": "The Optional unique identifier (in IAMid format) to use for the IMS user lookup, when provided as a second parameter.",
                        "defaultValue": null
                    },
                    {
                        "name": "searchInvitationsNotLinksFlag",
                        "type": "string",
                        "doc": "Optional",
                        "defaultValue": false
                    }
                ]
            },
            "getUserIdForPasswordSet": {
                "name": "getUserIdForPasswordSet",
                "type": "int",
                "doc": "Retrieve a user id using a password token provided to the user in an email generated by the SoftLayer_User_Customer::initiatePortalPasswordChange request. Password recovery keys are valid for 24 hours after they're generated. \n\nWhen a new user is created or when a user has requested a password change using initiatePortalPasswordChange, they will have received an email that contains a url with a token.  That token is used as the parameter for getUserIdForPasswordSet.  Once the user id is known, then the SoftLayer_User_Customer object can be retrieved which is necessary to complete the process to set or reset a user's password. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "key",
                        "type": "string",
                        "doc": "A password recovery hash key retrieved from an email."
                    }
                ]
            },
            "initiatePortalPasswordChange": {
                "name": "initiatePortalPasswordChange",
                "type": "boolean",
                "doc": "Sends password change email to the user containing url that allows the user the change their password. This is the first step when a user wishes to change their password.  The url that is generated contains a one-time use token that is valid for only 24-hours. \n\nIf this is a new master user who has never logged into the portal, then password reset will be initiated. Once a master user has logged into the portal, they must setup their security questions prior to logging out because master users are required to answer a security question during the password reset process.  Should a master user not have security questions defined and not remember their password in order to define the security questions, then they will need to contact support at live chat or Revenue Services for assistance. \n\nDue to security reasons, the number of reset requests per username are limited within a undisclosed timeframe. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "The username of the user who is changing their password."
                    }
                ]
            },
            "initiatePortalPasswordChangeByBrandAgent": {
                "name": "initiatePortalPasswordChangeByBrandAgent",
                "type": "boolean",
                "doc": "A Brand Agent that has permissions to Add Customer Accounts will be able to request the password email be sent to the Master User of a Customer Account created by the same Brand as the agent making the request. Due to security reasons, the number of reset requests are limited within an undisclosed timeframe. ",
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "The username of the user to receive the password reset email"
                    }
                ]
            },
            "isValidPortalPassword": {
                "name": "isValidPortalPassword",
                "type": "boolean",
                "doc": "Determine if a string is the given user's login password to the SoftLayer customer portal. ",
                "parameters": [
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "The password you wish to verify"
                    }
                ]
            },
            "processPasswordSetRequest": {
                "name": "processPasswordSetRequest",
                "type": "boolean",
                "doc": "Set the password for a user who has an outstanding password request. A user with an outstanding password request will have an unused and unexpired password key.  The password key is part of the url provided to the user in the email sent to the user with information on how to set their password.  The email was generated by the SoftLayer_User_Customer::initiatePortalPasswordRequest request. Password recovery keys are valid for 24 hours after they're generated. \n\nIf the user has required authentication methods as specified by in the SoftLayer_Container_User_Customer_PasswordSet container returned from the SoftLayer_User_Customer::getRequirementsForPasswordSet request, then additional requests must be made to processPasswordSetRequest to authenticate the user before changing the password.  First, if the user has security questions set on their profile, they will be required to answer one of their questions correctly. Next, if the user has Verisign, Google Authentication, or Phone Factor on their account, they must authenticate according to the two-factor provider.  All of this authentication is done using the SoftLayer_Container_User_Customer_PasswordSet container.  If the user has Phone Factor authentication, additional requests to SoftLayer_User_Customer::checkPhoneFactorAuthenticationForPasswordSet is required until a response other than Awaiting Response is received. \n\nUser portal passwords must match the following restrictions. Portal passwords must... \n* ...be over eight characters long.\n* ...be under twenty characters long.\n* ...contain at least one uppercase letter\n* ...contain at least one lowercase letter\n* ...contain at least one number\n* ...contain one of the special characters _ - | @ . , ? / ! ~ # $ % ^ & * ( ) { } [ ] \\ + =\n* ...not match your username",
                "noauth": true,
                "parameters": [
                    {
                        "name": "passwordSet",
                        "type": "SoftLayer_Container_User_Customer_PasswordSet",
                        "doc": "A container with the information required for setting customer password"
                    },
                    {
                        "name": "authenticationContainer",
                        "type": "SoftLayer_Container_User_Customer_External_Binding",
                        "doc": "The authentication container with the external authentication information.",
                        "defaultValue": null
                    }
                ]
            },
            "selfPasswordChange": {
                "name": "selfPasswordChange",
                "type": "void",
                "parameters": [
                    {
                        "name": "currentPassword",
                        "type": "string"
                    },
                    {
                        "name": "newPassword",
                        "type": "string"
                    }
                ]
            },
            "setDefaultAccount": {
                "name": "setDefaultAccount",
                "type": "SoftLayer_Account",
                "doc": "An OpenIdConnect identity, for example an IAMid, can be linked or mapped to one or more individual SoftLayer users, but no more than one per account. If an OpenIdConnect identity is mapped to multiple accounts in this manner, one such account should be identified as the default account for that identity. Invoke this only on IBMid-authenticated users. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type. Currently \"IBMid\" is the only supported provider."
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "The Softlayer account to set as default.",
                        "defaultValue": null
                    }
                ]
            }
        }
    },
    "SoftLayer_User_Customer_OpenIdConnect_TrustedProfile": {
        "name": "SoftLayer_User_Customer_OpenIdConnect_TrustedProfile",
        "base": "SoftLayer_User_Customer_OpenIdConnect",
        "methods": {
            "addApiAuthenticationKey": {
                "name": "addApiAuthenticationKey",
                "type": "string",
                "doc": "Create a user's API authentication key, allowing that user access to query the SoftLayer API. addApiAuthenticationKey() returns the user's new API key. Each portal user is allowed only one API key. "
            },
            "checkPhoneFactorAuthenticationForPasswordSet": {
                "name": "checkPhoneFactorAuthenticationForPasswordSet",
                "type": "boolean",
                "doc": "Add a description here \n\n",
                "noauth": true,
                "parameters": [
                    {
                        "name": "passwordSet",
                        "type": "SoftLayer_Container_User_Customer_PasswordSet",
                        "doc": "A container with the information required for setting customer password"
                    },
                    {
                        "name": "authenticationContainer",
                        "type": "SoftLayer_Container_User_Customer_External_Binding",
                        "doc": "The authentication container with the external authentication information.",
                        "defaultValue": null
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_User_Customer_OpenIdConnect_TrustedProfile",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer_OpenIdConnect_TrustedProfile",
                        "doc": "The SoftLayer_User_Customer_OpenIdConnect_TrustedProfile object that you wish to create."
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "The new user's password."
                    },
                    {
                        "name": "vpnPassword",
                        "type": "string",
                        "doc": "The new user's VPN password."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_OpenIdConnect_TrustedProfile",
                "filterable": true,
                "maskable": true
            },
            "getPortalLoginTokenOpenIdConnect": {
                "name": "getPortalLoginTokenOpenIdConnect",
                "type": "SoftLayer_Container_User_Customer_Portal_Token",
                "doc": "Attempt to authenticate a supplied OpenIdConnect access token to the SoftLayer customer portal. If authentication is successful then the API returns a token containing the ID of the authenticated user and a hash key used by the SoftLayer customer portal to maintain authentication. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "providerType",
                        "type": "string",
                        "doc": "A value representing the OpenID Connect provider type."
                    },
                    {
                        "name": "accessToken",
                        "type": "string",
                        "doc": "The OpenID Connect access token which provides temporary access to a resource by the"
                    },
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "The preferred Softlayer account to query, if not provided a default will be used.",
                        "defaultValue": null
                    },
                    {
                        "name": "securityQuestionId",
                        "type": "int",
                        "doc": "A security question you wish to answer when authenticating to the SoftLayer customer portal. This parameter isn't required if no security questions are set on your portal account or if your account is configured to not require answering a security account upon login.",
                        "defaultValue": null
                    },
                    {
                        "name": "securityQuestionAnswer",
                        "type": "string",
                        "doc": "The answer to your security question.",
                        "defaultValue": null
                    }
                ]
            },
            "getRequirementsForPasswordSet": {
                "name": "getRequirementsForPasswordSet",
                "type": "SoftLayer_Container_User_Customer_PasswordSet",
                "doc": "Retrieve the authentication requirements for an outstanding password set/reset request.  The requirements returned in the same SoftLayer_Container_User_Customer_PasswordSet container which is provided as a parameter into this request.  The SoftLayer_Container_User_Customer_PasswordSet::authenticationMethods array will contain an entry for each authentication method required for the user.  See SoftLayer_Container_User_Customer_PasswordSet for more details. \n\nIf the user has required authentication methods, then authentication information will be supplied to the SoftLayer_User_Customer::processPasswordSetRequest method within this same SoftLayer_Container_User_Customer_PasswordSet container.  All existing information in the container must continue to exist in the container to complete the password set/reset process. ",
                "noauth": true,
                "parameters": [
                    {
                        "name": "passwordSet",
                        "type": "SoftLayer_Container_User_Customer_PasswordSet",
                        "doc": "Container used to exchange information pertaining to the password reset process."
                    }
                ]
            },
            "getUserIdForPasswordSet": {
                "name": "getUserIdForPasswordSet",
                "type": "int",
                "doc": "Retrieve a user id using a password token provided to the user in an email generated by the SoftLayer_User_Customer::initiatePortalPasswordChange request. Password recovery keys are valid for 24 hours after they're generated. \n\nWhen a new user is created or when a user has requested a password change using initiatePortalPasswordChange, they will have received an email that contains a url with a token.  That token is used as the parameter for getUserIdForPasswordSet.  Once the user id is known, then the SoftLayer_User_Customer object can be retrieved which is necessary to complete the process to set or reset a user's password. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "key",
                        "type": "string",
                        "doc": "A password recovery hash key retrieved from an email."
                    }
                ]
            },
            "initiatePortalPasswordChange": {
                "name": "initiatePortalPasswordChange",
                "type": "boolean",
                "doc": "Sends password change email to the user containing url that allows the user the change their password. This is the first step when a user wishes to change their password.  The url that is generated contains a one-time use token that is valid for only 24-hours. \n\nIf this is a new master user who has never logged into the portal, then password reset will be initiated. Once a master user has logged into the portal, they must setup their security questions prior to logging out because master users are required to answer a security question during the password reset process.  Should a master user not have security questions defined and not remember their password in order to define the security questions, then they will need to contact support at live chat or Revenue Services for assistance. \n\nDue to security reasons, the number of reset requests per username are limited within a undisclosed timeframe. ",
                "static": true,
                "noauth": true,
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "The username of the user who is changing their password."
                    }
                ]
            },
            "initiatePortalPasswordChangeByBrandAgent": {
                "name": "initiatePortalPasswordChangeByBrandAgent",
                "type": "boolean",
                "doc": "A Brand Agent that has permissions to Add Customer Accounts will be able to request the password email be sent to the Master User of a Customer Account created by the same Brand as the agent making the request. Due to security reasons, the number of reset requests are limited within an undisclosed timeframe. ",
                "parameters": [
                    {
                        "name": "username",
                        "type": "string",
                        "doc": "The username of the user to receive the password reset email"
                    }
                ]
            },
            "isValidPortalPassword": {
                "name": "isValidPortalPassword",
                "type": "boolean",
                "doc": "Determine if a string is the given user's login password to the SoftLayer customer portal. ",
                "parameters": [
                    {
                        "name": "password",
                        "type": "string",
                        "doc": "The password you wish to verify"
                    }
                ]
            },
            "processPasswordSetRequest": {
                "name": "processPasswordSetRequest",
                "type": "boolean",
                "doc": "Set the password for a user who has an outstanding password request. A user with an outstanding password request will have an unused and unexpired password key.  The password key is part of the url provided to the user in the email sent to the user with information on how to set their password.  The email was generated by the SoftLayer_User_Customer::initiatePortalPasswordRequest request. Password recovery keys are valid for 24 hours after they're generated. \n\nIf the user has required authentication methods as specified by in the SoftLayer_Container_User_Customer_PasswordSet container returned from the SoftLayer_User_Customer::getRequirementsForPasswordSet request, then additional requests must be made to processPasswordSetRequest to authenticate the user before changing the password.  First, if the user has security questions set on their profile, they will be required to answer one of their questions correctly. Next, if the user has Verisign, Google Authentication, or Phone Factor on their account, they must authenticate according to the two-factor provider.  All of this authentication is done using the SoftLayer_Container_User_Customer_PasswordSet container.  If the user has Phone Factor authentication, additional requests to SoftLayer_User_Customer::checkPhoneFactorAuthenticationForPasswordSet is required until a response other than Awaiting Response is received. \n\nUser portal passwords must match the following restrictions. Portal passwords must... \n* ...be over eight characters long.\n* ...be under twenty characters long.\n* ...contain at least one uppercase letter\n* ...contain at least one lowercase letter\n* ...contain at least one number\n* ...contain one of the special characters _ - | @ . , ? / ! ~ # $ % ^ & * ( ) { } [ ] \\ + =\n* ...not match your username",
                "noauth": true,
                "parameters": [
                    {
                        "name": "passwordSet",
                        "type": "SoftLayer_Container_User_Customer_PasswordSet",
                        "doc": "A container with the information required for setting customer password"
                    },
                    {
                        "name": "authenticationContainer",
                        "type": "SoftLayer_Container_User_Customer_External_Binding",
                        "doc": "The authentication container with the external authentication information.",
                        "defaultValue": null
                    }
                ]
            },
            "updateVpnUser": {
                "name": "updateVpnUser",
                "type": "boolean",
                "doc": "Always call this function to enable changes when manually configuring VPN subnet access. "
            }
        }
    },
    "SoftLayer_User_Customer_Profile_Event_HyperWarp": {
        "name": "SoftLayer_User_Customer_Profile_Event_HyperWarp",
        "base": "SoftLayer_Entity",
        "methods": {
            "receiveEventDirect": {
                "name": "receiveEventDirect",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "eventJson",
                        "type": "SoftLayer_Container_User_Customer_Profile_Event_HyperWarp_ProfileChange"
                    }
                ]
            }
        }
    },
    "SoftLayer_User_Customer_Prospect": {
        "name": "SoftLayer_User_Customer_Prospect",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "assignedEmployees": {
                "name": "assignedEmployees",
                "type": "SoftLayer_User_Employee",
                "form": "relational",
                "typeArray": true
            },
            "quotes": {
                "name": "quotes",
                "type": "SoftLayer_Billing_Order_Quote",
                "form": "relational",
                "typeArray": true
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_User_Customer_Prospect_Type",
                "form": "relational"
            },
            "assignedEmployeeCount": {
                "name": "assignedEmployeeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "quoteCount": {
                "name": "quoteCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_User_Customer_Prospect_ServiceProvider_EnrollRequest": {
        "name": "SoftLayer_User_Customer_Prospect_ServiceProvider_EnrollRequest",
        "base": "SoftLayer_Entity",
        "methods": {
            "enroll": {
                "name": "enroll",
                "type": "SoftLayer_User_Customer_Prospect_ServiceProvider_EnrollRequest",
                "doc": "Create a new Service Provider Enrollment ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Customer_Prospect_ServiceProvider_EnrollRequest"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_Prospect_ServiceProvider_EnrollRequest",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Contains user information for Service Provider Enrollment. ",
        "properties": {
            "companyType": {
                "name": "companyType",
                "type": "SoftLayer_Catalyst_Company_Type",
                "form": "relational",
                "doc": "Catalyst company types."
            },
            "acceptAllAgreementsFlag": {
                "name": "acceptAllAgreementsFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating whether or not applicant has accepted all current SSP agreements."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "accountId of existing SoftLayer Customer"
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "Service provider address1"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "Service provider address2"
            },
            "cardAccountNumber": {
                "name": "cardAccountNumber",
                "type": "string",
                "form": "local",
                "doc": "Credit card account number"
            },
            "cardExpirationMonth": {
                "name": "cardExpirationMonth",
                "type": "string",
                "form": "local",
                "doc": "Credit card expiration month"
            },
            "cardExpirationYear": {
                "name": "cardExpirationYear",
                "type": "string",
                "form": "local",
                "doc": "Credit card expiration year"
            },
            "cardType": {
                "name": "cardType",
                "type": "string",
                "form": "local",
                "doc": "Type of credit card being used"
            },
            "cardVerificationNumber": {
                "name": "cardVerificationNumber",
                "type": "string",
                "form": "local",
                "doc": "Credit card verification number"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "Service provider city"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local",
                "doc": "Service provider company name"
            },
            "companyTypeId": {
                "name": "companyTypeId",
                "type": "int",
                "form": "local",
                "doc": "Id of the company type which best describes applicant's company"
            },
            "companyUrl": {
                "name": "companyUrl",
                "type": "string",
                "form": "local",
                "doc": "Service provider company url"
            },
            "contactEmail": {
                "name": "contactEmail",
                "type": "string",
                "form": "local",
                "doc": "Service provider contact's email"
            },
            "contactFirstName": {
                "name": "contactFirstName",
                "type": "string",
                "form": "local",
                "doc": "Service provider contact's first name"
            },
            "contactLastName": {
                "name": "contactLastName",
                "type": "string",
                "form": "local",
                "doc": "Service provider contact's last name"
            },
            "contactPhone": {
                "name": "contactPhone",
                "type": "string",
                "form": "local",
                "doc": "Service provider contact's Phone"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "Service provider country"
            },
            "customerProspectId": {
                "name": "customerProspectId",
                "type": "int",
                "form": "local",
                "doc": "Customer Prospect id"
            },
            "deviceFingerprintId": {
                "name": "deviceFingerprintId",
                "type": "string",
                "form": "local",
                "doc": "Id of the device fingerprint"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "Service provider email"
            },
            "existingCustomerFlag": {
                "name": "existingCustomerFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates if customer has an existing SoftLayer account"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "Service provider first name"
            },
            "ibmIdUsername": {
                "name": "ibmIdUsername",
                "type": "string",
                "form": "local",
                "doc": "Service provider IBMid username, if different than the email."
            },
            "ibmPartnerWorldId": {
                "name": "ibmPartnerWorldId",
                "type": "string",
                "form": "local",
                "doc": "IBM partner world id"
            },
            "ibmPartnerWorldMemberFlag": {
                "name": "ibmPartnerWorldMemberFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates if the customer is IBM partner world member"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Service provider last name"
            },
            "masterAgreementCompleteFlag": {
                "name": "masterAgreementCompleteFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating whether or not applicant acknowledged MSA"
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local",
                "doc": "Service provider office phone"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "Service provider postalCode"
            },
            "serviceProviderAddendumFlag": {
                "name": "serviceProviderAddendumFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating whether or not applicant acknowledged service provider addendum"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "Service provider state"
            },
            "surveyResponses": {
                "name": "surveyResponses",
                "type": "SoftLayer_Survey_Response",
                "form": "local",
                "typeArray": true,
                "doc": "Survey responses"
            },
            "vatId": {
                "name": "vatId",
                "type": "string",
                "form": "local",
                "doc": "Applicant's VAT id, if one exists"
            }
        }
    },
    "SoftLayer_User_Customer_Prospect_Type": {
        "name": "SoftLayer_User_Customer_Prospect_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_User_Customer_Security_Answer": {
        "name": "SoftLayer_User_Customer_Security_Answer",
        "base": "SoftLayer_Entity",
        "serviceDoc": "An account's user have security answers for secondary security measures. These questions/answers can be found during login and password update. These questions/answers are also needed for password reset. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_Security_Answer",
                "doc": "getObject retrieves the SoftLayer_User_Customer_Security_Answer object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_User_Customer_Security_Answer service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_User_Customer_Security_Answer type contains user's answers to security questions.",
        "properties": {
            "question": {
                "name": "question",
                "type": "SoftLayer_User_Security_Question",
                "form": "relational",
                "doc": "The question the security answer is associated with."
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "The user who the security answer belongs to."
            },
            "answer": {
                "name": "answer",
                "type": "string",
                "form": "local",
                "doc": "A user's answer."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A user's answer identifying number."
            },
            "questionId": {
                "name": "questionId",
                "type": "int",
                "form": "local",
                "doc": "A user's question identifying number."
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "A user's identifying number."
            }
        }
    },
    "SoftLayer_User_Customer_Status": {
        "name": "SoftLayer_User_Customer_Status",
        "base": "SoftLayer_Entity",
        "serviceDoc": "A User's status. It can be Active, Inactive, Disabled, Delete User, or VPN Only.",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_User_Customer_Status",
                "typeArray": true,
                "doc": "Retrieve all user status objects.",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Customer_Status",
                "doc": "getObject retrieves the SoftLayer_User_Customer_Status object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_User_Customer_Status service. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Each SoftLayer User Customer instance is assigned a status code that determines how it's treated in the customer portal. This status is reflected in the SoftLayer_User_Customer_Status data type. Status differs from user permissions in that user status applies globally to the portal while user permissions are applied to specific portal functions. \n\nNote that a status of \"PENDING\" also has been added. This status is specific to users that are configured to use IBMid authentication. This would include some (not all) users on accounts that are linked to Platform Services (PaaS, formerly Bluemix) accounts, but is not limited to users in such accounts. Using IBMid authentication is optional for active users even if it is not required by the account type. PENDING status indicates that a relationship between an IBMid and a user is being set up but is not complete. To be complete, PENDING users need to perform an action (\"accepting the invitation\") before becoming an active user within IBM Cloud and/or IMS. PENDING is a system state, and can not be administered by users (including the account master user). SoftLayer Commercial is the only environment where IBMid and/or account linking are used. \n\n",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A user's status identifying number."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A user's status keyname"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A user's status. This can be either \"Active\" for user accounts with portal access, \"Inactive\" for users disabled by another portal user, \"Disabled\" for accounts turned off by SoftLayer, or \"VPN Only\" for user accounts with no access to the customer portal but VPN access to the private network."
            }
        }
    },
    "SoftLayer_User_Employee": {
        "name": "SoftLayer_User_Employee",
        "base": "SoftLayer_User_Interface",
        "noservice": true,
        "typeDoc": "A SoftLayer_User_Employee models a single SoftLayer employee for the purposes of ticket updates created by SoftLayer employees. SoftLayer portal and API users cannot see individual employee names in ticket responses.  SoftLayer employees can be assigned to customer accounts as a personal support representative.  Employee names and email will be available if an employee is assigned to the account. ",
        "properties": {
            "chatTranscript": {
                "name": "chatTranscript",
                "type": "SoftLayer_Ticket_Chat",
                "form": "relational",
                "typeArray": true
            },
            "employeeDepartment": {
                "name": "employeeDepartment",
                "type": "SoftLayer_User_Employee_Department",
                "form": "relational",
                "doc": "The department that a SoftLayer employee belongs to."
            },
            "layoutProfiles": {
                "name": "layoutProfiles",
                "type": "SoftLayer_Layout_Profile",
                "form": "relational",
                "typeArray": true
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object",
                "form": "relational"
            },
            "securityLevels": {
                "name": "securityLevels",
                "type": "SoftLayer_Security_Level",
                "form": "relational",
                "typeArray": true
            },
            "ticketActivities": {
                "name": "ticketActivities",
                "type": "SoftLayer_Ticket_Activity",
                "form": "relational",
                "typeArray": true
            },
            "ticketAttachmentReferences": {
                "name": "ticketAttachmentReferences",
                "type": "SoftLayer_Ticket_Attachment",
                "form": "relational",
                "typeArray": true
            },
            "displayName": {
                "name": "displayName",
                "type": "string",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "A SoftLayer employee's email address. Email addresses are only visible to [[SoftLayer_Account|SoftLayer Accounts]] that are assigned to an employee "
            },
            "employeeDepartmentId": {
                "name": "employeeDepartmentId",
                "type": "int",
                "form": "local",
                "doc": "A SoftLayer employee's [[SoftLayer_User_Employee_Department|department]] id. "
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "A SoftLayer employee's first name. First names are only visible to [[SoftLayer_Account|SoftLayer Accounts]] that are assigned to an employee "
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "A SoftLayer employee's last name. Last names are only visible to [[SoftLayer_Account|SoftLayer Accounts]] that are assigned to an employee "
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "A representation of a SoftLayer employee's username."
            },
            "chatTranscriptCount": {
                "name": "chatTranscriptCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "layoutProfileCount": {
                "name": "layoutProfileCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "securityLevelCount": {
                "name": "securityLevelCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "ticketActivityCount": {
                "name": "ticketActivityCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "ticketAttachmentReferenceCount": {
                "name": "ticketAttachmentReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_User_Employee_Department": {
        "name": "SoftLayer_User_Employee_Department",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_User_Employee_Department models a department within SoftLayer's internal employee hierarchy. Common departments include Support, Sales, Accounting, Development, Systems, and Networking. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of one of SoftLayer's employee departments."
            }
        }
    },
    "SoftLayer_User_External_Binding": {
        "name": "SoftLayer_User_External_Binding",
        "base": "SoftLayer_Entity",
        "serviceDoc": "<<<",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete an external authentication binding.  If the external binding currently has an active billing item associated you will be prevented from deleting the binding.  The alternative method to remove an external authentication binding is to use the service cancellation form. "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_External_Binding",
                "filterable": true,
                "maskable": true
            },
            "updateNote": {
                "name": "updateNote",
                "type": "boolean",
                "doc": "Update the note of an external binding.  The note is an optional property that is used to store information about a binding. ",
                "parameters": [
                    {
                        "name": "text",
                        "type": "string",
                        "doc": "The text that the note will be set to."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_User_External_Binding data type contains general information for a single external binding.  This includes the 3rd party vendor, type of binding, and a unique identifier and password that is used to authenticate against the 3rd party service. ",
        "properties": {
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_User_External_Binding_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "Attributes of an external authentication binding."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "Information regarding the billing item for external authentication."
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "relational",
                "doc": "An optional note for identifying the external binding."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_User_External_Binding_Type",
                "form": "relational",
                "doc": "The type of external authentication binding."
            },
            "vendor": {
                "name": "vendor",
                "type": "SoftLayer_User_External_Binding_Vendor",
                "form": "relational",
                "doc": "The vendor of an external authentication binding."
            },
            "active": {
                "name": "active",
                "type": "boolean",
                "form": "local",
                "doc": "The flag that determines whether the external binding is active will be used for authentication or not. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the external authentication binding was created."
            },
            "externalId": {
                "name": "externalId",
                "type": "string",
                "form": "local",
                "doc": "The identifier used to identify this binding to an external authentication source. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "An external authentication binding's internal identifier."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "The password used to authenticate the external id at an external authentication source. "
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_User_External_Binding_Type|type]] identifier of an external authentication binding. "
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "An external authentication binding's associated [[SoftLayer_User_Customer|user account]] id. "
            },
            "vendorId": {
                "name": "vendorId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_User_External_Binding_Vendor|vendor]] identifier of an external authentication binding. "
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of attributes of an external authentication binding."
            }
        }
    },
    "SoftLayer_User_External_Binding_Attribute": {
        "name": "SoftLayer_User_External_Binding_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_User_External_Binding_Attribute data type contains the value for a single attribute associated with an external binding. External binding attributes contain additional information about an external binding.  An attribute can be generic or specific to a 3rd party vendor.  For example these attributes relate to Verisign: \n*Credential Type\n*Credential State\n*Credential Expiration Date\n*Credential Last Update Date",
        "properties": {
            "externalBinding": {
                "name": "externalBinding",
                "type": "SoftLayer_User_External_Binding",
                "form": "relational",
                "doc": "The external authentication binding an attribute belongs to."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value of an external binding attribute."
            }
        }
    },
    "SoftLayer_User_External_Binding_Type": {
        "name": "SoftLayer_User_External_Binding_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_User_External_Binding_Type data type contains information relating to a type of external authentication binding.  It contains a user friendly name as well as a unique key name. ",
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The unique name used to identify a type of external authentication binding."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The user friendly name of a type of external authentication binding."
            }
        }
    },
    "SoftLayer_User_External_Binding_Vendor": {
        "name": "SoftLayer_User_External_Binding_Vendor",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_User_External_Binding_Vendor service is used to retrieve a list of available 3rd party vendors that SoftLayer supports for external bindings. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_User_External_Binding_Vendor",
                "typeArray": true,
                "doc": "getAllObjects() will return a list of the available external binding vendors that SoftLayer supports.  Use this list to select the appropriate vendor when creating a new external binding. ",
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_External_Binding_Vendor",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_User_External_Binding_Vendor data type contains information for a single external binding vendor.  This information includes a user friendly vendor name, a unique version of the vendor name, and a unique internal identifier that can be used when creating a new external binding. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier for an external binding vendor."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A unique version of the name property."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The user friendly name of an external binding vendor."
            }
        }
    },
    "SoftLayer_User_Interface": {
        "name": "SoftLayer_User_Interface",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A SoftLayer_User_Interface represents a generic user instance within the SoftLayer API. The SoftLayer API uses SoftLayer_User_Interfaces in cases where a user object could be one of many types of users. Currently the [[SoftLayer_User_Customer]] and [[SoftLayer_User_Employee]] classes are abstracted by this type. "
    },
    "SoftLayer_User_Permission_Action": {
        "name": "SoftLayer_User_Permission_Action",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_User_Permission_Action class is one of several classes that make up the customer permission system.  The system is a role-based system that includes defined actions which can be grouped together using a SoftLayer_User_Permission_Group.  These groups of actions are then used to define roles, and the roles are assigned to users. \n\nWhen a [[SoftLayer_User_Customer]] is created, a SoftLayer_User_Permission_Group and SoftLayer_User_Permission_Role is created specifically for the user with a group type of SYSTEM.  When the UI is used to alter the permissions of a customer user, the actions are added or removed from this group.  The api can not be used to alter the permissions in this group.  If an account wants to create their own unique permission groups and roles, the UI can not be used to manage them. \n\nUser Customers can be assigned to multiple roles but it is recommended to either use the UI for managing account users permissions or only use the api.  Mixing the two will lead to confusing results as the UI will not show any permissions assigned to a user via a customer created role/group combination. \n\nProceed with caution. \n\nThe SoftLayer_User_Permission_Action class defines the permissions that are required in order for a SoftLayer_User_Customer to perform certain actions within IMS. \n\nSee [[SoftLayer_User_Permission_Group]] and [[SoftLayer_Permission_Role]] for more details. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_User_Permission_Action",
                "typeArray": true,
                "doc": "Object filters and result limits are enabled on this method. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Permission_Action",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_User_Permission_Action data type contains local attributes to identify and describe the valid actions a customer user can perform within IMS.  This includes a name, key name, and description.  This data can not be modified by users of IMS. \n\nIt also contains relational attributes that indicate which SoftLayer_User_Permission_Group's include the action. ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "key": {
                "name": "key",
                "type": "string",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_User_Permission_Group": {
        "name": "SoftLayer_User_Permission_Group",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_User_Permission_Group class is one of several classes that make up the customer permission system.  It is a role-based system that includes defined actions which can be \"grouped\" together using a SoftLayer_User_Permission_Group class. These groups of actions are then used to define roles, and the roles are assigned to users.  The SoftLayer_User_Permission_Group is also used to track the resources or account devices to which a user has been granted access. The types of resources that users can be granted access is defined in [[SoftLayer_User_Permission_Resource_Type]]. \n\nWhen a [[SoftLayer_User_Customer]] is created, a SoftLayer_User_Permission_Group and SoftLayer_User_Permission_Role is created specifically for the user with a group type of SYSTEM.  When the UI is used to alter the permissions of a customer user, the actions are added or removed from this group.  The api can not be used to alter the permissions in this group.  If an account wants to create their own unique permission groups and roles, the UI can not be used to manage them. \n\nThis is also true for device access.  Either, the UI can be used to track the devices to which users are granted access which will use the SYSTEM group, or the api can be used, making the UI information inaccurate. \n\nUser Customers can be assigned to multiple roles but it is recommended to either use the UI for managing account users permissions or only use the api.  Mixing the two will lead to confusing results as the UI will not show any permissions assigned to a user via a customer created role/group combination. \n\nProceed with caution. \n\nOne or more [[SoftLayer_User_Permission_Action]] are assigned to one or more SoftLayer_User_Permission_Group Objects. One ore more SoftLayer_User_Permission_Group objects can be linked to a [[SoftLayer_User_Permission_Role]]. A single SoftLayer_User_Permission_Group object can be linked to multiple SoftLayer_User_Permission_Role objects. The [[SoftLayer_User_Permission_Role]] is assigned to one or more [[SoftLayer_User_Customer]]. \n\nThe [[SoftLayer_User_Permission_Action]] class defines the permissions that are required in order for a [[SoftLayer_User_Customer]] to perform certain actions within IMS. \n\nResources belonging to the user's account can also be linked to permission groups. See [[SoftLayer_User_Permission_Resource_Type]]. ",
        "methods": {
            "addAction": {
                "name": "addAction",
                "type": "void",
                "doc": "Assigns a SoftLayer_User_Permission_Action object to the group. ",
                "parameters": [
                    {
                        "name": "action",
                        "type": "SoftLayer_User_Permission_Action",
                        "doc": "Permission Action to be added."
                    }
                ]
            },
            "addBulkActions": {
                "name": "addBulkActions",
                "type": "void",
                "doc": "Assigns multiple SoftLayer_User_Permission_Action objects to the group. ",
                "parameters": [
                    {
                        "name": "actions",
                        "type": "SoftLayer_User_Permission_Action",
                        "typeArray": true,
                        "doc": "Permission Actions to be added."
                    }
                ]
            },
            "addBulkResourceObjects": {
                "name": "addBulkResourceObjects",
                "type": "boolean",
                "doc": "Links multiple SoftLayer_Hardware_Server, SoftLayer_Virtual_Guest, or SoftLayer_Virtual_DedicatedHost objects to the group. All objects must be of the same type. ",
                "parameters": [
                    {
                        "name": "resourceObjects",
                        "type": "SoftLayer_Entity",
                        "typeArray": true,
                        "doc": "The resource records to add to this group. See [[SoftLayer_User_Permission_Resource_Type (type)]] for the valid entities for this request."
                    },
                    {
                        "name": "resourceTypeKeyName",
                        "type": "string",
                        "doc": "An optional keyname for the type of resources provided.  See [[SoftLayer_User_Permission_Resource_Type (type)]] for the valid entities for this request.",
                        "defaultValue": null
                    }
                ]
            },
            "addResourceObject": {
                "name": "addResourceObject",
                "type": "boolean",
                "doc": "Links a SoftLayer_Hardware_Server, SoftLayer_Virtual_Guest, or SoftLayer_Virtual_DedicatedHost object to the group. ",
                "parameters": [
                    {
                        "name": "resourceObject",
                        "type": "SoftLayer_Entity",
                        "doc": "The object of the resource record (typically hardware, virtual guest, or dedicated host) to add to this group.  See [[SoftLayer_User_Permission_Resource_Type (type)]] for the valid entities for this request."
                    },
                    {
                        "name": "resourceTypeKeyName",
                        "type": "string",
                        "doc": "An optional keyname for the type of resource provided.  See [[SoftLayer_User_Permission_Resource_Type (type)]] for the valid entities for this request.",
                        "defaultValue": null
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_User_Permission_Group",
                "doc": "Customer created permission groups must be of type NORMAL.  The SYSTEM type is reserved for internal use. The account id supplied in the template permission group must match account id of the user who is creating the permission group.  The user who is creating the permission group must have the permission to manage users. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Permission_Group",
                        "doc": "The SoftLayer_User_Permission_Group object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Customer users can only delete permission groups of type NORMAL.  The SYSTEM type is reserved for internal use. The user who is creating the permission group must have the permission to manage users. "
            },
            "editObject": {
                "name": "editObject",
                "type": "SoftLayer_User_Permission_Group",
                "doc": "Allows a user to modify the name and description of an existing customer permission group. Customer permission groups must be of type NORMAL.  The SYSTEM type is reserved for internal use. The account id supplied in the template permission group must match account id of the user who is creating the permission group.  The user who is creating the permission group must have the permission to manage users. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Permission_Group",
                        "doc": "A skeleton SoftLayer_User_Permission_Group object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Permission_Group",
                "filterable": true,
                "maskable": true
            },
            "linkRole": {
                "name": "linkRole",
                "type": "void",
                "doc": "Links a SoftLayer_User_Permission_Role object to the group. ",
                "parameters": [
                    {
                        "name": "role",
                        "type": "SoftLayer_User_Permission_Role",
                        "doc": "Permission Role to be linked."
                    }
                ]
            },
            "removeAction": {
                "name": "removeAction",
                "type": "void",
                "doc": "Unassigns a SoftLayer_User_Permission_Action object from the group. ",
                "parameters": [
                    {
                        "name": "action",
                        "type": "SoftLayer_User_Permission_Action",
                        "doc": "Permission Action to be removed."
                    }
                ]
            },
            "removeBulkActions": {
                "name": "removeBulkActions",
                "type": "void",
                "doc": "Unassigns multiple SoftLayer_User_Permission_Action objects from the group. ",
                "parameters": [
                    {
                        "name": "actions",
                        "type": "SoftLayer_User_Permission_Action",
                        "typeArray": true,
                        "doc": "Permission Actions to be removed."
                    }
                ]
            },
            "removeBulkResourceObjects": {
                "name": "removeBulkResourceObjects",
                "type": "boolean",
                "doc": "Unlinks multiple SoftLayer_Hardware_Server, SoftLayer_Virtual_Guest, or SoftLayer_Virtual_DedicatedHost objects from the group. All objects must be of the same type. ",
                "parameters": [
                    {
                        "name": "resourceObjects",
                        "type": "SoftLayer_Entity",
                        "typeArray": true,
                        "doc": "The resource records to remove from this group (typically hardware, virtual guest, or dedicated host).  See [[SoftLayer_User_Permission_Resource_Type (type)]] for the valid entities for this request."
                    },
                    {
                        "name": "resourceTypeKeyName",
                        "type": "string",
                        "doc": "An optional keyname for the type of resource provided. See [[SoftLayer_User_Permission_Resource_Type (type)]] for the valid entities for this request.",
                        "defaultValue": null
                    }
                ]
            },
            "removeResourceObject": {
                "name": "removeResourceObject",
                "type": "boolean",
                "doc": "Unlinks a SoftLayer_Hardware_Server, SoftLayer_Virtual_Guest, or SoftLayer_Virtual_DedicatedHost object from the group. ",
                "parameters": [
                    {
                        "name": "resourceObject",
                        "type": "SoftLayer_Entity",
                        "doc": "The resource record to remove from this group (typically hardware, virtual guest, or dedicated host). See [[SoftLayer_User_Permission_Resource_Type (type)]] for the valid entities for this request."
                    },
                    {
                        "name": "resourceTypeKeyName",
                        "type": "string",
                        "doc": "An optional keyname specifying the type of resource provided. See [[SoftLayer_User_Permission_Resource_Type (type)]] for the valid entities for this request.",
                        "defaultValue": null
                    }
                ]
            },
            "unlinkRole": {
                "name": "unlinkRole",
                "type": "void",
                "doc": "Removes a link from SoftLayer_User_Permission_Role object to the group. ",
                "parameters": [
                    {
                        "name": "role",
                        "type": "SoftLayer_User_Permission_Role",
                        "doc": "Permission Role to be unlinked."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_User_Permission_Group data type contains local attributes to identify and describe the permission groups that have been created within IMS.  These includes a name, description, and account id.  Permission groups are defined specifically for a single [[SoftLayer_Account]]. \n\nIt also contains relational attributes that indicate what SoftLayer_User_Permission_Action objects belong to a particular group, and what SoftLayer_User_Permission_Role objects the group is linked. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "actions": {
                "name": "actions",
                "type": "SoftLayer_User_Permission_Action",
                "form": "relational",
                "typeArray": true
            },
            "roles": {
                "name": "roles",
                "type": "SoftLayer_User_Permission_Role",
                "form": "relational",
                "typeArray": true
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_User_Permission_Group_Type",
                "form": "relational",
                "doc": "The type of the permission group."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A permission groups associated [[SoftLayer_Account|customer account]] id."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the permission group record was created."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the permission group."
            },
            "expirationDate": {
                "name": "expirationDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the group will be destroyed."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A permission groups internal identifying number."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the permission group record was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the permission group."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The type of permission group."
            },
            "actionCount": {
                "name": "actionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "roleCount": {
                "name": "roleCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_User_Permission_Group_Type": {
        "name": "SoftLayer_User_Permission_Group_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_User_Permission_Group_Type class is one of several classes that make up the customer permission system.  This class defines the valid group types.  The SYSTEM group type is reserved for internal use. \n\nIt is a role-based system that includes defined actions which can be \"grouped\" together using a SoftLayer_User_Permission_Group class. These groups of actions are then used to define roles, and the roles are assigned to users. \n\nWhen a [[SoftLayer_User_Customer]] is created, a SoftLayer_User_Permission_Group and SoftLayer_User_Permission_Role is created specifically for the user with a group type of SYSTEM.  When the UI is used to alter the permissions of a customer user, the actions are added or removed from this group.  The api can not be used to alter the permissions in this group.  If an account wants to create their own unique permission groups and roles, the UI can not be used to manage them. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Permission_Group_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "These are the attributes which describe a SoftLayer_User_Permission_Group_Type. All SoftLayer_User_Permission_Group objects must be linked to one of these types. \n\nFor further information see: [[SoftLayer_User_Permission_Group]]. ",
        "properties": {
            "groups": {
                "name": "groups",
                "type": "SoftLayer_User_Permission_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "The groups that are of this type."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique Record ID."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The keyname for the group type."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A descriptive name for the group type."
            },
            "groupCount": {
                "name": "groupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the groups that are of this type."
            }
        }
    },
    "SoftLayer_User_Permission_Resource_Type": {
        "name": "SoftLayer_User_Permission_Resource_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_User_Permission_Resource_Type class is one of several classes that make up the customer permission system.  The permission system is used to track the permissions assigned to each customer user. These permissions can also include tracking the devices to which users are granted access. \n\nThe SoftLayer_User_Permission_Resource_Type class is used to define the valid types of resources to which users can be granted access. Hardware server is an example of a resource type. \n\nSee [[SoftLayer_User_Permission_Group]] for more information on tracking device access. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_User_Permission_Resource_Type",
                "typeArray": true,
                "doc": "Retrieve an array of SoftLayer_User_Permission_Resource_Type objects. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Permission_Resource_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "These are the variables relating to SoftLayer_User_Permission_Resource_Type. Collectively they describe the types of resources which can be linked to [[SoftLayer_User_Permission_Group]]. ",
        "properties": {
            "className": {
                "name": "className",
                "type": "string",
                "form": "local",
                "doc": "The associated IMS class name for a resource type."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Resource Type record ID."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Descriptive Identifier for a Resource Type. A key name contains no spaces, but may use underscores. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A name for the resource type. It is the most descriptive variable of the resource type and can include spaces. "
            }
        }
    },
    "SoftLayer_User_Permission_Role": {
        "name": "SoftLayer_User_Permission_Role",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_User_Permission_Role class is one of several classes that make up the customer permission system.  The system is a role-based system that includes defined actions which can be \"grouped\" together using a SoftLayer_User_Permission_Group class.  These groups of actions are then used to define roles, and the roles are assigned to users. \n\nWhen a [[SoftLayer_User_Customer]] is created, a SoftLayer_User_Permission_Role is created for the user with a group type of SYSTEM.  This role is linked to the SYSTEM SoftLayer_User_Permission_Group that was also created specifically for this user.  When the UI is used to alter the permissions of a customer user, the actions are added or removed from this group.  The api can not be used to alter the permissions in this group.  If an account wants to create their own unique permission groups and roles, the UI can not be used to manage them. \n\nUser Customers can be assigned to multiple roles but it is recommended to either use the UI for managing account users permissions or only use the api.  Mixing the two will lead to confusing results as the UI will not show any permissions assigned to a user via a customer created role/group combination. \n\nProceed with caution. \n\nOne or more [[SoftLayer_User_Permission_Action]] are assigned to one or more [[SoftLayer_User_Permission_Group]] Objects. One ore more SoftLayer_User_Permission_Group objects can be linked to a [[SoftLayer_User_Permission_Role]]. A single SoftLayer_User_Permission_Group object can be linked to multiple SoftLayer_User_Permission_Role objects. The SoftLayer_User_Permission_Role is assigned to one or more [[SoftLayer_User_Customer]].  A single SoftLayer_User_Customer can be assigned to one or more roles. \n\nThe SoftLayer_User_Permission_Action class defines the permissions that are required in order for a SoftLayer_User_Customer to perform certain actions within IMS. ",
        "methods": {
            "addUser": {
                "name": "addUser",
                "type": "void",
                "doc": "Assigns a SoftLayer_User_Customer object to the role. ",
                "parameters": [
                    {
                        "name": "user",
                        "type": "SoftLayer_User_Customer",
                        "doc": "Add role to provided user."
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_User_Permission_Role",
                "doc": "Customer created permission roles must set the systemFlag attribute to false.  The SYSTEM type is reserved for internal use. The account id supplied in the template permission group must match account id of the user who is creating the permission group.  The user who is creating the permission group must have the permission to manage users. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Permission_Role",
                        "doc": "The SoftLayer_User_Permission_Role object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Customer users can only delete permission roles with systemFlag set to false.  The SYSTEM type is reserved for internal use. The user who is creating the permission role must have the permission to manage users. "
            },
            "editObject": {
                "name": "editObject",
                "type": "SoftLayer_User_Permission_Role",
                "doc": "Allows a user to modify the name and description of an existing customer permission role. Customer permission roles must set the systemFlag attribute to false.  The SYSTEM type is reserved for internal use. The account id supplied in the template permission role must match account id of the user who is creating the permission role.  The user who is creating the permission role must have the permission to manage users. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_User_Permission_Role",
                        "doc": "A skeleton SoftLayer_User_Permission_Role object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Permission_Role",
                "filterable": true,
                "maskable": true
            },
            "linkGroup": {
                "name": "linkGroup",
                "type": "void",
                "doc": "Links a SoftLayer_User_Permission_Group object to the role. ",
                "parameters": [
                    {
                        "name": "group",
                        "type": "SoftLayer_User_Permission_Group",
                        "doc": "Link role to provided group."
                    }
                ]
            },
            "removeUser": {
                "name": "removeUser",
                "type": "void",
                "doc": "Unassigns a SoftLayer_User_Customer object from the role. ",
                "parameters": [
                    {
                        "name": "user",
                        "type": "SoftLayer_User_Customer",
                        "doc": "Remove role from provided user."
                    }
                ]
            },
            "unlinkGroup": {
                "name": "unlinkGroup",
                "type": "void",
                "doc": "Unlinks a SoftLayer_User_Permission_Group object to the role. ",
                "parameters": [
                    {
                        "name": "group",
                        "type": "SoftLayer_User_Permission_Group",
                        "doc": "Unink role to provided group."
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_User_Permission_Role data type contains local attributes to identify and describe the permission roles that have been created within IMS.  These includes a name, description, and account id.  Permission groups are defined specifically for a single [[SoftLayer_Account]]. \n\nIt also contains relational attributes that indicate what SoftLayer_User_Permission_Group objects are linked to a particular role, and the SoftLayer_User_Customer objects assigned to the role. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational"
            },
            "actions": {
                "name": "actions",
                "type": "SoftLayer_User_Permission_Action",
                "form": "relational",
                "typeArray": true
            },
            "groups": {
                "name": "groups",
                "type": "SoftLayer_User_Permission_Group",
                "form": "relational",
                "typeArray": true
            },
            "users": {
                "name": "users",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "Id of a [[SoftLayer_Account]] to which this role belongs."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the permission role record was created."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the permission role."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A permission roles internal identifying number."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date the permission role record was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the permission role."
            },
            "newUserDefaultFlag": {
                "name": "newUserDefaultFlag",
                "type": "int",
                "form": "local",
                "doc": "A flag showing if new users should be automatically added to this role."
            },
            "systemFlag": {
                "name": "systemFlag",
                "type": "int",
                "form": "local",
                "doc": "A flag showing if the permission role was created by our internal system for a single user. If this flag is set, only a single user can be assigned to this permission role and it can not be deleted. "
            },
            "actionCount": {
                "name": "actionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "groupCount": {
                "name": "groupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "userCount": {
                "name": "userCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_User_Preference": {
        "name": "SoftLayer_User_Preference",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_User_Preference data type contains a single user preference to a specific preference type. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "relational",
                "doc": "Description of the user preference"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_User_Preference_Type",
                "form": "relational",
                "doc": "Type of user preference"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The users current preference value"
            }
        }
    },
    "SoftLayer_User_Preference_Type": {
        "name": "SoftLayer_User_Preference_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_User_Preference_Type data type contains a single preference type including the accepted values. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A description of the preference type"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the preference type"
            },
            "valueExample": {
                "name": "valueExample",
                "type": "string",
                "form": "local",
                "doc": "An example of accepted preference values"
            }
        }
    },
    "SoftLayer_User_Security_Question": {
        "name": "SoftLayer_User_Security_Question",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Every user has an option of a secondary security login feature. This SoftLayer_User_Security_Question service provides a list of security questions. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_User_Security_Question",
                "typeArray": true,
                "doc": "Retrieve all viewable security questions.",
                "static": true,
                "noauth": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_User_Security_Question",
                "doc": "getAllObjects retrieves all the SoftLayer_User_Security_Question objects where it is set to be viewable. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_User_Security_Question data type contains questions. ",
        "properties": {
            "displayOrder": {
                "name": "displayOrder",
                "type": "int",
                "form": "local",
                "doc": "A security question's display order."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A security question's internal identifying number."
            },
            "question": {
                "name": "question",
                "type": "string",
                "form": "local",
                "doc": "A security question's question."
            },
            "viewable": {
                "name": "viewable",
                "type": "int",
                "form": "local",
                "doc": "A security question's viewable flag."
            }
        }
    },
    "SoftLayer_Utility_Network": {
        "name": "SoftLayer_Utility_Network",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Utility_Network service allows users to send network diagnostic requests from SoftLayer's application servers to a given host on the Internet. ",
        "methods": {
            "nsLookup": {
                "name": "nsLookup",
                "type": "string",
                "doc": "A method used to return the nameserver information for a given address",
                "static": true,
                "parameters": [
                    {
                        "name": "address",
                        "type": "string",
                        "doc": "An IP address or hostname to nslookup."
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "doc": "The type of record to return A, MX, NS, CNAME, TXT.",
                        "defaultValue": "A"
                    }
                ]
            },
            "whois": {
                "name": "whois",
                "type": "string",
                "doc": "Perform a WHOIS lookup from SoftLayer's application servers on the given IP address or hostname and return the raw results of that command. The returned result is similar to the result received from running the command `whois` from a UNIX command shell. A WHOIS lookup queries a host's registrar to retrieve domain registrant information including registration date, expiry date, and the administrative, technical, billing, and abuse contacts responsible for a domain. WHOIS lookups are useful for determining a physical contact responsible for a particular domain. WHOIS lookups are also useful for determining domain availability. Running a WHOIS lookup on an IP address queries ARIN for that IP block's ownership, and is helpful for determining a physical entity responsible for a certain IP address. ",
                "static": true,
                "parameters": [
                    {
                        "name": "address",
                        "type": "string",
                        "doc": "An IP address or hostname to whois."
                    }
                ]
            }
        }
    },
    "SoftLayer_Utility_ObjectFilter": {
        "name": "SoftLayer_Utility_ObjectFilter",
        "base": "SoftLayer_Entity",
        "noservice": true
    },
    "SoftLayer_Utility_ObjectFilter_Operation": {
        "name": "SoftLayer_Utility_ObjectFilter_Operation",
        "base": "SoftLayer_Entity",
        "noservice": true
    },
    "SoftLayer_Utility_ObjectFilter_Operation_Option": {
        "name": "SoftLayer_Utility_ObjectFilter_Operation_Option",
        "base": "SoftLayer_Entity",
        "noservice": true
    },
    "SoftLayer_Vendor_Type": {
        "name": "SoftLayer_Vendor_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Virtual_BrowserConsoleAccessLog": {
        "name": "SoftLayer_Virtual_BrowserConsoleAccessLog",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Virtual_BrowserConsoleAccessLog data type presents the data for events associated with accessing a VSIs console via the browser interface. ",
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date created "
            },
            "eventType": {
                "name": "eventType",
                "type": "string",
                "form": "local",
                "doc": "The event type that was triggered "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for a console log event instance. "
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "The message for the event "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date modified "
            },
            "sourceIp": {
                "name": "sourceIp",
                "type": "string",
                "form": "local",
                "doc": "The IP address of the client that triggered the event "
            },
            "sourcePort": {
                "name": "sourcePort",
                "type": "int",
                "form": "local",
                "doc": "The IP port of the client that triggered the event "
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The user id that triggered the event "
            },
            "userType": {
                "name": "userType",
                "type": "string",
                "form": "local",
                "doc": "The user type that triggered the event "
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username of the user that triggered the event "
            }
        }
    },
    "SoftLayer_Virtual_DedicatedHost": {
        "name": "SoftLayer_Virtual_DedicatedHost",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Virtual_DedicatedHost models a single tenant virtual host dedicated to a specific account. ",
        "methods": {
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "This method will cancel a dedicated host immediately. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit a dedicated host's properties. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_DedicatedHost",
                        "doc": "A skeleton SoftLayer_Virtual_DedicatedHost object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAvailableRouters": {
                "name": "getAvailableRouters",
                "type": "SoftLayer_Hardware",
                "typeArray": true,
                "doc": "This method will get the available backend routers to order a dedicated host. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "dedicatedHost",
                        "type": "SoftLayer_Virtual_DedicatedHost",
                        "doc": "Template object used to specify datacenter and configuration sizes"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "filterable": true,
                "maskable": true
            },
            "setTags": {
                "name": "setTags",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string"
                    }
                ]
            }
        },
        "typeDoc": "This data type presents the structure for a dedicated host. The data type contains relational properties to distinguish a dedicated host and associate an account to it. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that the dedicated host belongs to."
            },
            "allocationStatus": {
                "name": "allocationStatus",
                "type": "SoftLayer_Container_Virtual_DedicatedHost_AllocationStatus",
                "form": "relational",
                "doc": "The container that represents allocations on the dedicated host."
            },
            "backendRouter": {
                "name": "backendRouter",
                "type": "SoftLayer_Hardware_Router_Backend",
                "form": "relational",
                "doc": "The backend router behind dedicated host's pool of resources."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item_Virtual_DedicatedHost",
                "form": "relational",
                "doc": "The billing item for the dedicated host."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The datacenter that the dedicated host resides in."
            },
            "guests": {
                "name": "guests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The guests associated with the dedicated host."
            },
            "internalTagReferences": {
                "name": "internalTagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true
            },
            "pciDeviceAllocationStatus": {
                "name": "pciDeviceAllocationStatus",
                "type": "SoftLayer_Container_Virtual_DedicatedHost_Pci_Device_AllocationStatus",
                "form": "relational",
                "doc": "The container that represents PCI device allocations on the dedicated host."
            },
            "pciDevices": {
                "name": "pciDevices",
                "type": "SoftLayer_Virtual_Host_PciDevice",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of SoftLayer_Virtual_Host_PciDevice objects on the host."
            },
            "tagReferences": {
                "name": "tagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The dedicated host's associated account id. "
            },
            "cpuCount": {
                "name": "cpuCount",
                "type": "int",
                "form": "local",
                "doc": "The capacity that the dedicated host's CPU allocation is restricted to. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the dedicated host was created. "
            },
            "diskCapacity": {
                "name": "diskCapacity",
                "type": "int",
                "form": "local",
                "doc": "The capacity that the dedicated host's disk allocation is restricted to. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The dedicated host's associated unique id. "
            },
            "memoryCapacity": {
                "name": "memoryCapacity",
                "type": "int",
                "form": "local",
                "doc": "The capacity that the dedicated host's memory allocation is restricted to. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the dedicated host was last modified. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The dedicated host's name. "
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A note of up to 1,000 characters about a dedicated host. "
            },
            "guestCount": {
                "name": "guestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the guests associated with the dedicated host."
            },
            "internalTagReferenceCount": {
                "name": "internalTagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "pciDeviceCount": {
                "name": "pciDeviceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of SoftLayer_Virtual_Host_PciDevice objects on the host."
            },
            "tagReferenceCount": {
                "name": "tagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Virtual_Disk_Image": {
        "name": "SoftLayer_Virtual_Disk_Image",
        "base": "SoftLayer_Entity",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_Disk_Image",
                        "doc": "A skeleton SoftLayer_Virtual_Disk_Image object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAvailableBootModes": {
                "name": "getAvailableBootModes",
                "type": "string",
                "typeArray": true,
                "doc": "Returns a collection of boot modes that are supported for primary disks. ",
                "static": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_Disk_Image",
                "filterable": true,
                "maskable": true
            },
            "getPublicIsoImages": {
                "name": "getPublicIsoImages",
                "type": "SoftLayer_Virtual_Disk_Image",
                "typeArray": true,
                "doc": "Retrieves images from the public ISO repository ",
                "static": true,
                "limitable": true,
                "maskable": true
            }
        },
        "typeDoc": "The virtual disk image data type presents the structure in which a virtual disk image will be presented. \n\nVirtual block devices are assigned to disk images. ",
        "properties": {
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item_Virtual_Disk_Image",
                "form": "relational",
                "doc": "The billing item for a virtual disk image."
            },
            "blockDevices": {
                "name": "blockDevices",
                "type": "SoftLayer_Virtual_Guest_Block_Device",
                "form": "relational",
                "typeArray": true,
                "doc": "The block devices that a disk image is attached to. Block devices connect computing instances to disk images."
            },
            "bootableVolumeFlag": {
                "name": "bootableVolumeFlag",
                "type": "boolean",
                "form": "relational"
            },
            "cloudInitFlag": {
                "name": "cloudInitFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Check if cloud-init is enabled."
            },
            "coalescedDiskImages": {
                "name": "coalescedDiskImages",
                "type": "SoftLayer_Virtual_Disk_Image",
                "form": "relational",
                "typeArray": true
            },
            "copyOnWriteFlag": {
                "name": "copyOnWriteFlag",
                "type": "boolean",
                "form": "relational"
            },
            "diskFileExtension": {
                "name": "diskFileExtension",
                "type": "string",
                "form": "relational",
                "doc": "Return disk file extension"
            },
            "diskImageStorageGroup": {
                "name": "diskImageStorageGroup",
                "type": "SoftLayer_Configuration_Storage_Group",
                "form": "relational"
            },
            "importedDiskType": {
                "name": "importedDiskType",
                "type": "string",
                "form": "relational",
                "doc": "Return imported disk type"
            },
            "isEncrypted": {
                "name": "isEncrypted",
                "type": "boolean",
                "form": "relational",
                "doc": "Return if image is encrypted"
            },
            "localDiskFlag": {
                "name": "localDiskFlag",
                "type": "boolean",
                "form": "relational"
            },
            "metadataFlag": {
                "name": "metadataFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether this disk image is meant for storage of custom user data supplied with a Cloud Computing Instance order."
            },
            "softwareReferences": {
                "name": "softwareReferences",
                "type": "SoftLayer_Virtual_Disk_Image_Software",
                "form": "relational",
                "typeArray": true,
                "doc": "References to the software that resides on a disk image."
            },
            "sourceDiskImage": {
                "name": "sourceDiskImage",
                "type": "SoftLayer_Virtual_Disk_Image",
                "form": "relational",
                "doc": "The original disk image that the current disk image was cloned from."
            },
            "storageGroupDetails": {
                "name": "storageGroupDetails",
                "type": "SoftLayer_Container_Image_StorageGroupDetails",
                "form": "relational",
                "doc": "Return storage group details for symantec disk"
            },
            "storageGroups": {
                "name": "storageGroups",
                "type": "SoftLayer_Configuration_Storage_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "The storage group for a virtual disk image."
            },
            "storageRepository": {
                "name": "storageRepository",
                "type": "SoftLayer_Virtual_Storage_Repository",
                "form": "relational",
                "doc": "The storage repository that a disk image resides in."
            },
            "storageRepositoryType": {
                "name": "storageRepositoryType",
                "type": "SoftLayer_Virtual_Storage_Repository_Type",
                "form": "relational",
                "doc": "The type of storage repository that a disk image resides in."
            },
            "supportedHardware": {
                "name": "supportedHardware",
                "type": "string",
                "form": "relational",
                "doc": "Return supported hardware component IDs for symantec disk"
            },
            "templateBlockDevice": {
                "name": "templateBlockDevice",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template",
                "form": "relational",
                "doc": "The template that attaches a disk image to a [[SoftLayer_Virtual_Guest_Block_Device_Template_Group|archive]]."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Virtual_Disk_Image_Type",
                "form": "relational",
                "doc": "A virtual disk image's type."
            },
            "capacity": {
                "name": "capacity",
                "type": "int",
                "form": "local",
                "doc": "A disk image's size measured in gigabytes. "
            },
            "checksum": {
                "name": "checksum",
                "type": "string",
                "form": "local",
                "doc": "A disk image's unique md5 checksum. "
            },
            "checksumAlgorithm": {
                "name": "checksumAlgorithm",
                "type": "string",
                "form": "local",
                "doc": "A column to save the Algorithm being used to store the checksum. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a disk image was created. "
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A brief description of a virtual disk image. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A disk image's unique ID. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a disk image was last modified. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A descriptive name used to identify a disk image to a user. "
            },
            "parentId": {
                "name": "parentId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the the disk image that this disk image is based on, if applicable. "
            },
            "storageRepositoryId": {
                "name": "storageRepositoryId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Virtual_Storage_Repository|storage repository]] that a disk image is in. "
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "A disk image's [[SoftLayer_Virtual_Disk_Image_Type|type]] ID "
            },
            "units": {
                "name": "units",
                "type": "string",
                "form": "local",
                "doc": "The unit of storage in which the size of the image is measured. Defaults to \"GB\" for gigabytes. "
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "A disk image's unique ID on a virtualization platform. "
            },
            "blockDeviceCount": {
                "name": "blockDeviceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the block devices that a disk image is attached to. Block devices connect computing instances to disk images."
            },
            "coalescedDiskImageCount": {
                "name": "coalescedDiskImageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "softwareReferenceCount": {
                "name": "softwareReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of references to the software that resides on a disk image."
            },
            "storageGroupCount": {
                "name": "storageGroupCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the storage group for a virtual disk image."
            }
        }
    },
    "SoftLayer_Virtual_Disk_Image_Software": {
        "name": "SoftLayer_Virtual_Disk_Image_Software",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A SoftLayer_Virtual_Disk_Image_Software record connects a computing instance's virtual disk images with software records. This can be useful if a disk image is directly associated with software such as operating systems. ",
        "properties": {
            "diskImage": {
                "name": "diskImage",
                "type": "SoftLayer_Virtual_Disk_Image",
                "form": "relational",
                "doc": "The virtual disk image that is associated with software."
            },
            "passwords": {
                "name": "passwords",
                "type": "SoftLayer_Virtual_Disk_Image_Software_Password",
                "form": "relational",
                "typeArray": true,
                "doc": "Username/Password pairs used for access to a Software Installation."
            },
            "softwareDescription": {
                "name": "softwareDescription",
                "type": "SoftLayer_Software_Description",
                "form": "relational",
                "doc": "The software associated with a virtual disk image."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of a virtual disk image to software relationship. "
            },
            "softwareDescriptionId": {
                "name": "softwareDescriptionId",
                "type": "int",
                "form": "local",
                "doc": "The unique identifier of the software that a virtual disk image is associated with. "
            },
            "passwordCount": {
                "name": "passwordCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of username/Password pairs used for access to a Software Installation."
            }
        }
    },
    "SoftLayer_Virtual_Disk_Image_Software_Password": {
        "name": "SoftLayer_Virtual_Disk_Image_Software_Password",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This SoftLayer_Virtual_Disk_Image_Software_Password data type contains a password for a specific virtual disk image software instance. ",
        "properties": {
            "software": {
                "name": "software",
                "type": "SoftLayer_Virtual_Disk_Image_Software",
                "form": "relational",
                "doc": "The instance that this username/password pair is valid for."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "A virtual disk images' password."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "A virtual disk images' username."
            }
        }
    },
    "SoftLayer_Virtual_Disk_Image_Type": {
        "name": "SoftLayer_Virtual_Disk_Image_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Virtual_Disk_Image_Type models the types of virtual disk images available to CloudLayer Computing Instances. Virtual disk image types describe if an image's data is preservable when upgraded, whether a disk contains a suspended virtual image, or if a disk contains crash dump information. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A brief description of a virtual disk image type's function. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "A virtual disk image type's key name. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A virtual disk image type's name. "
            }
        }
    },
    "SoftLayer_Virtual_Guest": {
        "name": "SoftLayer_Virtual_Guest",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The virtual guest service provides a common interface to any virtualization platform supported by SoftLayer. The interaction with various third party APIs is not needed when implementing this service to administer your guests. The SoftLayer_Virtual_Guest service also controls individual CloudLayer Computing Instances purchased from SoftLayer in a way that is analogous to the [[SoftLayer_Hardware_Server]] service's control over physical hardware purchased form SoftLayer. ",
        "methods": {
            "activatePrivatePort": {
                "name": "activatePrivatePort",
                "type": "boolean",
                "doc": "Activate the private network port"
            },
            "activatePublicPort": {
                "name": "activatePublicPort",
                "type": "boolean",
                "doc": "Activate the public network port"
            },
            "allowAccessToNetworkStorage": {
                "name": "allowAccessToNetworkStorage",
                "type": "boolean",
                "doc": "This method is used to allow access to a SoftLayer_Network_Storage volume that supports host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObject",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            },
            "allowAccessToNetworkStorageList": {
                "name": "allowAccessToNetworkStorageList",
                "type": "boolean",
                "doc": "This method is used to allow access to multiple SoftLayer_Network_Storage volumes that support host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObjects",
                        "type": "SoftLayer_Network_Storage",
                        "typeArray": true
                    }
                ]
            },
            "attachDiskImage": {
                "name": "attachDiskImage",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "Creates a transaction to attach a guest's disk image. If the disk image is already attached it will be ignored. \n\nWARNING: SoftLayer_Virtual_Guest::checkHostDiskAvailability should be called before this method. If the SoftLayer_Virtual_Guest::checkHostDiskAvailability method is not called before this method, the guest migration will happen automatically. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "imageId",
                        "type": "int",
                        "defaultValue": null
                    }
                ]
            },
            "cancelIsolationForDestructiveAction": {
                "name": "cancelIsolationForDestructiveAction",
                "type": "void",
                "doc": "Reopens the public and/or private ports to reverse the changes made when the server was isolated for a destructive action. "
            },
            "captureImage": {
                "name": "captureImage",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "doc": "Captures a Flex Image of the hard disk on the virtual machine, based on the capture template parameter. Returns the image template group containing the disk image. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "captureTemplate",
                        "type": "SoftLayer_Container_Disk_Image_Capture_Template"
                    }
                ]
            },
            "checkHostDiskAvailability": {
                "name": "checkHostDiskAvailability",
                "type": "boolean",
                "doc": "Checks the associated host for available disk space to determine if guest migration is necessary. This method is only used with local disks. If this method returns false, calling attachDiskImage($imageId) will automatically migrate the destination guest to a new host before attaching the portable volume. ",
                "parameters": [
                    {
                        "name": "diskCapacity",
                        "type": "int"
                    }
                ]
            },
            "configureMetadataDisk": {
                "name": "configureMetadataDisk",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "Creates a transaction to configure the guest's metadata disk. If the guest has user data associated with it, the transaction will create a small virtual drive and write the metadata to a file on the drive; if the drive already exists, the metadata will be rewritten. If the guest has no user data associated with it, the transaction will remove the virtual drive if it exists. \n\nWARNING: The transaction created by this service will shut down the guest while the metadata disk is configured. The guest will be turned back on once this process is complete. ",
                "maskable": true
            },
            "createArchiveTemplate": {
                "name": "createArchiveTemplate",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "doc": "Create a transaction to archive a computing instance's block devices",
                "maskable": true,
                "parameters": [
                    {
                        "name": "groupName",
                        "type": "string",
                        "doc": "The group name for the archive.",
                        "defaultValue": null
                    },
                    {
                        "name": "blockDevices",
                        "type": "SoftLayer_Virtual_Guest_Block_Device",
                        "typeArray": true,
                        "doc": "The block devices to archive.",
                        "defaultValue": null
                    },
                    {
                        "name": "note",
                        "type": "string",
                        "doc": "A long note describing the image template.",
                        "defaultValue": null
                    }
                ]
            },
            "createArchiveTransaction": {
                "name": "createArchiveTransaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "Create a transaction to archive a computing instance's block devices",
                "maskable": true,
                "parameters": [
                    {
                        "name": "groupName",
                        "type": "string",
                        "doc": "The group name for the archive.",
                        "defaultValue": null
                    },
                    {
                        "name": "blockDevices",
                        "type": "SoftLayer_Virtual_Guest_Block_Device",
                        "typeArray": true,
                        "doc": "The block devices to archive.",
                        "defaultValue": null
                    },
                    {
                        "name": "note",
                        "type": "string",
                        "doc": "A long note describing the image template.",
                        "defaultValue": null
                    }
                ]
            },
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Virtual_Guest",
                "doc": "\ncreateObject() enables the creation of computing instances on an account. This method is a simplified alternative to interacting with the ordering system directly. \n\n\nIn order to create a computing instance, a template object must be sent in with a few required values. \n\n\nWhen this method returns an order will have been placed for a computing instance of the specified configuration. \n\n\nTo determine when the instance is available you can poll the instance via [[SoftLayer_Virtual_Guest/getObject]], with an object mask requesting the `provisionDate` relational property. When `provisionDate` is not `null`, the instance will be ready. \n\n\n> **Warning:** Computing instances created via this method will incur charges on your account. For testing input parameters see [[SoftLayer_Virtual_Guest/generateOrderTemplate]]. \n\n\n### Required Input [[SoftLayer_Virtual_Guest]]\n\n\n\n- `Hostname`  String **Required** \n    + Hostname for the computing instance. \n- `Domain` String **Required** \n    + Domain for the computing instance. \n- `startCpus` Integer **Required** \n    + The number of CPU cores to allocate. \n    + See [[SoftLayer_Virtual_Guest/getCreateObjectOptions]] for available options. \n- `maxMemory` Integer **Required** \n    + The amount of memory to allocate in megabytes. \n    + See [[SoftLayer_Virtual_Guest/getCreateObjectOptions]] for available options. \n- `datacenter.name` *String* **Required** \n    + Specifies which datacenter the instance is to be provisioned in. Needs to be a nested object. \n    + Example: `\"datacenter\": {\"name\": \"dal05\"}` \n    + See [[SoftLayer_Virtual_Guest/getCreateObjectOptions]] for available options. \n\n\n- `hourlyBillingFlag` Boolean **Required** \n    + Specifies the billing type for the instance. \n    + True for hourly billing, False for monthly billing. \n- `localDiskFlag` Boolean **Required** \n    + Specifies the disk type for the instance. \n    + True for local to the instance disks, False for SAN disks. \n- `dedicatedAccountHostOnlyFlag` Boolean \n    + When true this flag specifies that a compute instance is to run on hosts that only have guests from the same account. \n    + Default: False \n- `operatingSystemReferenceCode` String **Conditionally required** \n    + An identifier for the operating system to provision the computing instance with. \n    + Not required when using a `blockDeviceTemplateGroup.globalIdentifier`, as the template will have its own operating system. \n    + See [[SoftLayer_Virtual_Guest/getCreateObjectOptions]] for available options. \n    + **Notice**: Some operating systems are billed based on the number of CPUs the guest has. The price which is used can be determined by calling \n           [[SoftLayer_Virtual_Guest/generateOrderTemplate]] with your desired device specifications. \n- `blockDeviceTemplateGroup.globalIdentifier` String \n    + The GUID for the template to be used to provision the computing instance. \n    + Conflicts with `operatingSystemReferenceCode` \n    + **Notice**: Some operating systems are billed based on the number of CPUs the guest has. The price which is used can be determined by calling \n           [[SoftLayer_Virtual_Guest/generateOrderTemplate]] with your desired device specifications. \n    + A list of public images may be obtained via a request to [[SoftLayer_Virtual_Guest_Block_Device_Template_Group/getPublicImages]] \n    + A list of private images may be obtained via a request to [[SoftLayer_Account/getPrivateBlockDeviceTemplateGroups]] \n    + Example: `\"blockDeviceTemplateGroup\": { globalIdentifier\": \"07beadaa-1e11-476e-a188-3f7795feb9fb\"` \n- `networkComponents.maxSpeed` Integer \n    + Specifies the connection speed for the instance's network components. \n    +  The `networkComponents` property is an array with a single [[SoftLayer_Virtual_Guest_Network_Component]] structure. \n           The `maxSpeed` property must be set to specify the network uplink speed, in megabits per second, of the computing instance. \n    +  See [[SoftLayer_Virtual_Guest/getCreateObjectOptions]] for available options. \n    + Default: 10 \n    + Example: `\"networkComponents\": [{\"maxSpeed\": 1000}]` \n- `privateNetworkOnlyFlag` Boolean \n    + When true this flag specifies that a compute instance is to only have access to the private network. \n    + Default: False \n- `primaryNetworkComponent.networkVlan.id` Integer \n    + Specifies the network vlan which is to be used for the frontend interface of the computing instance. \n    + The `primaryNetworkComponent` property is a [[SoftLayer_Virtual_Guest_Network_Component]] structure with the `networkVlan` property populated with a i \n          [[SoftLayer_Network_Vlan]] structure. The `id` property must be set to specify the frontend network vlan of the computing instance. \n    + *NOTE* This is the VLAN `id`, NOT the vlan number. \n    + Example: `\"primaryNetworkComponent\":{\"networkVlan\": {\"id\": 1234567}}` \n- `backendNetworkComponent.networkVlan.id` Integer \n    + Specifies the network vlan which is to be used for the backend interface of the computing instance. \n    + The `backendNetworkComponent` property is a [[SoftLayer_Virtual_Guest_Network_Component]] structure with the `networkVlan` property populated with a \n           [[SoftLayer_Network_Vlan]] structure. The `id` property must be set to specify the backend network vlan of the computing instance. \n    + *NOTE* This is the VLAN `id`, NOT the vlan number. \n    + Example: `\"backendNetworkComponent\":{\"networkVlan\": {\"id\": 1234567}}` \n- `primaryNetworkComponent.securityGroupBindings` [[SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding]][] \n    + Specifies the security groups to be attached to this VSI's frontend network adapter \n    + The `primaryNetworkComponent` property is a [[SoftLayer_Virtual_Guest_Network_Component]] structure with the `securityGroupBindings` property populated \n           with an array of [[SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding]] structures. The `securityGroup` property in each must be set to \n           specify the security group to be attached to the primary frontend network component. \n    + Example: \n        ``` \n        \"primaryNetworkComponent\": { \n            \"securityGroupBindings\": [ \n                {\"securityGroup\":{\"id\": 5555555}}, \n                {\"securityGroup\":{\"id\": 1112223}}, \n            ] \n        } \n        ``` \n- `primaryBackendNetworkComponent.securityGroupBindings` [[SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding]][] \n    + Specifies the security groups to be attached to this VSI's backend network adapter \n    + The `primaryNetworkComponent` property is a [[SoftLayer_Virtual_Guest_Network_Component]] structure with the `securityGroupBindings` property populated \n           with an array of [[SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding]] structures. The `securityGroup` property in each must be set to \n           specify the security group to be attached to the primary frontend network component. \n    + Example: \n        ``` \n        \"primaryBackendNetworkComponent\": { \n            \"securityGroupBindings\": [ \n                {\"securityGroup\":{\"id\": 33322211}}, \n                {\"securityGroup\":{\"id\": 77777222}}, \n            ] \n        } \n        ``` \n- `blockDevices` [[SoftLayer_Virtual_Guest_Block_Device]][] \n    + Block device and disk image settings for the computing instance \n    + The `blockDevices` property is an array of [[SoftLayer_Virtual_Guest_Block_Device]] structures. Each block device must specify the `device` property \n          along with the `diskImage`  property, which is a [[SoftLayer_Virtual_Disk_Image]] structure with the `capacity` property set. The `device` number `'1'` \n          is reserved for the SWAP disk attached to the computing instance. \n    + Default: The smallest available capacity for the primary disk will be used. If an image template is specified the disk capacity will be be provided by the template. \n    + Example: \n        ``` \n        \"blockDevices\":[{\"device\": \"0\", \"diskImage\": {\"capacity\": 100}}], \n        \"localDiskFlag\": true \n        ``` \n    +  See [[SoftLayer_Virtual_Guest/getCreateObjectOptions]] for available options. \n- `userData.value`  String \n    + Arbitrary data to be made available to the computing instance. \n    + The `userData` property is an array with a single [[SoftLayer_Virtual_Guest_Attribute]] structure with the `value` property set to an arbitrary value. \n          This value can be retrieved via the [[SoftLayer_Resource_Metadata/getUserMetadata]] method from a request originating from the computing instance. \n          This is primarily useful for providing data to software that may be on the instance and configured to execute upon first boot. \n    + Example: `\"userData\":[{\"value\": \"testData\"}]` \n- `sshKeys` [[SoftLayer_Security_Ssh_Key]][] \n    + The `sshKeys` property is an array of [[SoftLayer_Security_Ssh_Key]] structures with the `id` property set to the value of an existing SSH key. \n    + To create a new SSH key, call [[SoftLayer_Security_Ssh_Key/createObject|createObject]]. \n    + To obtain a list of existing SSH keys, call [[SoftLayer_Account/getSshKeys]] \n    + Example: `\"sshKeys\":[{\"id\": 1234567}]` \n- `postInstallScriptUri` String \n    + Specifies the uri location of the script to be downloaded and run after installation is complete. Only scripts from HTTPS servers are executed on startup. \n\n\nREST Example: \n``` \ncurl -X POST -d '{ \n    \"parameters\":[ \n        { \n            \"hostname\": \"host1\", \n            \"domain\": \"example.com\", \n            \"startCpus\": 1, \n            \"maxMemory\": 1024, \n            \"hourlyBillingFlag\": true, \n            \"localDiskFlag\": true, \n            \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\" \n        } \n}' https://api.softlayer.com/rest/v3.1/SoftLayer_Virtual_Guest/createObject.json \n\n\nHTTP/1.1 201 Created \nLocation: https://api.softlayer.com/rest/v3.1/SoftLayer_Virtual_Guest/1301396/getObject \n\n\n{ \n  \"accountId\": 232298, \n  \"createDate\": \"2012-11-30T16:28:17-06:00\", \n  \"dedicatedAccountHostOnlyFlag\": false, \n  \"domain\": \"example.com\", \n  \"hostname\": \"host1\", \n  \"id\": 1301396, \n  \"lastPowerStateId\": null, \n  \"lastVerifiedDate\": null, \n  \"maxCpu\": 1, \n  \"maxCpuUnits\": \"CORE\", \n  \"maxMemory\": 1024, \n  \"metricPollDate\": null, \n  \"modifyDate\": null, \n  \"privateNetworkOnlyFlag\": false, \n  \"startCpus\": 1, \n  \"statusId\": 1001, \n  \"globalIdentifier\": \"2d203774-0ee1-49f5-9599-6ef67358dd31\" \n} \n``` ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_Guest",
                        "doc": "The SoftLayer_Virtual_Guest object that you wish to create."
                    }
                ]
            },
            "createObjects": {
                "name": "createObjects",
                "type": "SoftLayer_Virtual_Guest",
                "typeArray": true,
                "doc": "\ncreateObjects() enables the creation of multiple computing instances on an account in a single call. This \nmethod is a simplified alternative to interacting with the ordering system directly. \n\n\nIn order to create a computing instance a set of template objects must be sent in with a few required \nvalues. \n\n\n<b>Warning:</b> Computing instances created via this method will incur charges on your account. \n\n\nSee [[SoftLayer_Virtual_Guest/createObject|createObject]] for specifics on the requirements of each template object. \n\n\n<h1>Example</h1> \n<http title=\"Request\">curl -X POST -d '{ \n \"parameters\":[ \n     [ \n         { \n             \"hostname\": \"host1\", \n             \"domain\": \"example.com\", \n             \"startCpus\": 1, \n             \"maxMemory\": 1024, \n             \"hourlyBillingFlag\": true, \n             \"localDiskFlag\": true, \n             \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\" \n         }, \n         { \n             \"hostname\": \"host2\", \n             \"domain\": \"example.com\", \n             \"startCpus\": 1, \n             \"maxMemory\": 1024, \n             \"hourlyBillingFlag\": true, \n             \"localDiskFlag\": true, \n             \"operatingSystemReferenceCode\": \"UBUNTU_LATEST\" \n         } \n     ] \n ] \n}' https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/createObjects.json \n</http> \n<http title=\"Response\">HTTP/1.1 200 OK \n\n\n[ \n    { \n        \"accountId\": 232298, \n        \"createDate\": \"2012-11-30T23:56:48-06:00\", \n        \"dedicatedAccountHostOnlyFlag\": false, \n        \"domain\": \"softlayer.com\", \n        \"hostname\": \"ubuntu1\", \n        \"id\": 1301456, \n        \"lastPowerStateId\": null, \n        \"lastVerifiedDate\": null, \n        \"maxCpu\": 1, \n        \"maxCpuUnits\": \"CORE\", \n        \"maxMemory\": 1024, \n        \"metricPollDate\": null, \n        \"modifyDate\": null, \n        \"privateNetworkOnlyFlag\": false, \n        \"startCpus\": 1, \n        \"statusId\": 1001, \n        \"globalIdentifier\": \"fed4c822-48c0-45d0-85e2-90476aa0c542\" \n    }, \n    { \n        \"accountId\": 232298, \n        \"createDate\": \"2012-11-30T23:56:49-06:00\", \n        \"dedicatedAccountHostOnlyFlag\": false, \n        \"domain\": \"softlayer.com\", \n        \"hostname\": \"ubuntu2\", \n        \"id\": 1301457, \n        \"lastPowerStateId\": null, \n        \"lastVerifiedDate\": null, \n        \"maxCpu\": 1, \n        \"maxCpuUnits\": \"CORE\", \n        \"maxMemory\": 1024, \n        \"metricPollDate\": null, \n        \"modifyDate\": null, \n        \"privateNetworkOnlyFlag\": false, \n        \"startCpus\": 1, \n        \"statusId\": 1001, \n        \"globalIdentifier\": \"bed4c686-9562-4ade-9049-dc4d5b6b200c\" \n    } \n] \n</http> ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObjects",
                        "type": "SoftLayer_Virtual_Guest",
                        "typeArray": true,
                        "doc": "An array of SoftLayer_Virtual_Guest objects that you wish to create."
                    }
                ]
            },
            "createPostSoftwareInstallTransaction": {
                "name": "createPostSoftwareInstallTransaction",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "data",
                        "type": "string",
                        "doc": "comma seperated string of install codes"
                    },
                    {
                        "name": "returnBoolean",
                        "type": "boolean",
                        "doc": "return a true/false or an exception and a transaction",
                        "defaultValue": false
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "\nThis method will cancel a computing instance effective immediately. For instances billed hourly, the charges will stop immediately after the method returns. "
            },
            "deleteTag": {
                "name": "deleteTag",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "tagName",
                        "type": "string",
                        "doc": "The name of the tag to delete."
                    }
                ]
            },
            "deleteTransientWebhook": {
                "name": "deleteTransientWebhook",
                "type": "void"
            },
            "detachDiskImage": {
                "name": "detachDiskImage",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "Creates a transaction to detach a guest's disk image. If the disk image is already detached it will be ignored. \n\nWARNING: The transaction created by this service will shut down the guest while the disk image is attached. The guest will be turned back on once this process is complete. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "imageId",
                        "type": "int",
                        "defaultValue": null
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit a computing instance's properties ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_Guest",
                        "doc": "A skeleton SoftLayer_Virtual_Guest object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "executeIderaBareMetalRestore": {
                "name": "executeIderaBareMetalRestore",
                "type": "boolean",
                "doc": "Reboot a guest into the Idera Bare Metal Restore image. "
            },
            "executeR1SoftBareMetalRestore": {
                "name": "executeR1SoftBareMetalRestore",
                "type": "boolean",
                "doc": "Reboot a guest into the R1Soft Bare Metal Restore image. "
            },
            "executeRemoteScript": {
                "name": "executeRemoteScript",
                "type": "void",
                "doc": "Download and run remote script from uri on virtual guests.",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string",
                        "doc": "Location of the remote script"
                    }
                ]
            },
            "executeRescueLayer": {
                "name": "executeRescueLayer",
                "type": "boolean",
                "doc": "Reboot a Linux guest into the Xen rescue image. "
            },
            "findByHostname": {
                "name": "findByHostname",
                "type": "SoftLayer_Virtual_Guest",
                "typeArray": true,
                "doc": "Find VSIs by hostname. ",
                "static": true,
                "limitable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "hostname",
                        "type": "string",
                        "doc": "The hostname to search for"
                    }
                ]
            },
            "findByIpAddress": {
                "name": "findByIpAddress",
                "type": "SoftLayer_Virtual_Guest",
                "doc": "Find CCI by only its primary public or private IP address. IP addresses within secondary subnets tied to the CCI will not return the CCI. If no CCI is found, no errors are generated and no data is returned. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "ipAddress",
                        "type": "string",
                        "doc": "An IP (ipv4) address by which to search for CCI"
                    }
                ]
            },
            "generateOrderTemplate": {
                "name": "generateOrderTemplate",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "\nObtain an [[SoftLayer_Container_Product_Order_Virtual_Guest (type)|order container]] that can be sent to [[SoftLayer_Product_Order/verifyOrder|verifyOrder]] or [[SoftLayer_Product_Order/placeOrder|placeOrder]]. \n\n\nThis is primarily useful when there is a necessity to confirm the price which will be charged for an order. \n\n\nSee [[SoftLayer_Virtual_Guest/createObject|createObject]] for specifics on the requirements of the template object parameter. ",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_Guest"
                    }
                ]
            },
            "getAdditionalRequiredPricesForOsReload": {
                "name": "getAdditionalRequiredPricesForOsReload",
                "type": "SoftLayer_Product_Item_Price",
                "typeArray": true,
                "doc": "Return a collection of SoftLayer_Item_Price objects for an OS reload",
                "maskable": true,
                "parameters": [
                    {
                        "name": "config",
                        "type": "SoftLayer_Container_Hardware_Server_Configuration",
                        "doc": "The new cloud configuration for the reload.",
                        "defaultValue": null
                    }
                ]
            },
            "getAttachedNetworkStorages": {
                "name": "getAttachedNetworkStorages",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "This method is retrieve a list of SoftLayer_Network_Storage volumes that are authorized access to this SoftLayer_Virtual_Guest. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "nasType",
                        "type": "string",
                        "doc": "either 'ISCSI', 'NAS', or '*' for both",
                        "defaultValue": "*"
                    }
                ]
            },
            "getAvailableBlockDevicePositions": {
                "name": "getAvailableBlockDevicePositions",
                "type": "string",
                "typeArray": true
            },
            "getAvailableNetworkStorages": {
                "name": "getAvailableNetworkStorages",
                "type": "SoftLayer_Network_Storage",
                "typeArray": true,
                "doc": "This method retrieves a list of SoftLayer_Network_Storage volumes that can be authorized to this SoftLayer_Virtual_Guest. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "nasType",
                        "type": "string",
                        "doc": "either 'ISCSI', 'NAS', or '*' for both",
                        "defaultValue": "*"
                    }
                ]
            },
            "getBandwidthDataByDate": {
                "name": "getBandwidthDataByDate",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Use this method when needing the metric data for bandwidth for a single guest.  It will gather the correct input parameters based on the date ranges ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    },
                    {
                        "name": "networkType",
                        "type": "string",
                        "doc": "type of the graph, either \"public\" or \"private\""
                    }
                ]
            },
            "getBandwidthForDateRange": {
                "name": "getBandwidthForDateRange",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve a collection of bandwidth data from an individual public or private network tracking object. Data is ideal if you with to employ your own traffic storage and graphing systems. ",
                "parameters": [
                    {
                        "name": "startDate",
                        "type": "dateTime"
                    },
                    {
                        "name": "endDate",
                        "type": "dateTime"
                    }
                ]
            },
            "getBandwidthImage": {
                "name": "getBandwidthImage",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Use this method when needing a bandwidth image for a single guest.  It will gather the correct input parameters for the generic graphing utility automatically based on the snapshot specified. ",
                "parameters": [
                    {
                        "name": "networkType",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"public\">public</li> <li title=\"private\">private</li> </ul>"
                    },
                    {
                        "name": "snapshotRange",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"day\">day</li> <li title=\"week\">week</li> <li title=\"30day\">30day</li> <li title=\"previous_calendar_month\">previous_calendar_month</li> <li title=\"current_calendar_month\">current_calendar_month</li> <li title=\"current_billing_cycle\">current_billing_cycle</li> <li title=\"previous_billing_cycle\">previous_billing_cycle</li> <li title=\"specified_day\">specified_day</li> <li title=\"specified_range\">specified_range</li> </ul>"
                    },
                    {
                        "name": "dateSpecified",
                        "type": "dateTime",
                        "doc": "Include this parameter when snapshot is 'specified_day' or 'specified_range'.  Needs to be formatted as: 'MM/DD/YYYY'",
                        "defaultValue": null
                    },
                    {
                        "name": "dateSpecifiedEnd",
                        "type": "dateTime",
                        "doc": "Include this parameter when snapshotRange is 'specified_range'.  Also formatted as 'MM/DD/YYYY'.'",
                        "defaultValue": null
                    }
                ]
            },
            "getBandwidthImageByDate": {
                "name": "getBandwidthImageByDate",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Use this method when needing a bandwidth image for a single guest.  It will gather the correct input parameters for the generic graphing utility based on the date ranges ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    },
                    {
                        "name": "networkType",
                        "type": "string",
                        "doc": "type of the graph, either \"public\" or \"private\""
                    }
                ]
            },
            "getBandwidthTotal": {
                "name": "getBandwidthTotal",
                "type": "unsignedLong",
                "doc": "Returns the total amount of bandwidth used during the time specified for a computing instance. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "timestamp of the starting date",
                        "defaultValue": null
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "timestamp of the ending date",
                        "defaultValue": null
                    },
                    {
                        "name": "direction",
                        "type": "string",
                        "doc": "either \"IN\", \"OUT\", or \"BOTH\" with BOTH being default",
                        "defaultValue": "BOTH"
                    },
                    {
                        "name": "side",
                        "type": "string",
                        "doc": "either \"PUBLIC\", \"PRIVATE\", or \"BOTH\" with PUBLIC being default",
                        "defaultValue": "PUBLIC"
                    }
                ]
            },
            "getBootMode": {
                "name": "getBootMode",
                "type": "string",
                "doc": "Retrieves the boot mode of the VSI. "
            },
            "getBootOrder": {
                "name": "getBootOrder",
                "type": "string"
            },
            "getConsoleAccessLog": {
                "name": "getConsoleAccessLog",
                "type": "SoftLayer_Network_Logging_Syslog",
                "typeArray": true,
                "doc": "Gets the console access logs for a computing instance ",
                "limitable": true,
                "maskable": true
            },
            "getCoreRestrictedOperatingSystemPrice": {
                "name": "getCoreRestrictedOperatingSystemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "doc": "If the virtual server currently has an operating system that has a core capacity restriction, return the associated core-restricted operating system item price. Some operating systems (e.g., Red Hat Enterprise Linux) may be billed by the number of processor cores, so therefore require that a certain number of cores be present on the server. ",
                "maskable": true
            },
            "getCpuMetricDataByDate": {
                "name": "getCpuMetricDataByDate",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Use this method when needing the metric data for a single guest's CPUs.  It will gather the correct input parameters based on the date ranges ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    },
                    {
                        "name": "cpuIndexes",
                        "type": "int",
                        "typeArray": true,
                        "doc": "reserved for future use. An array of cpu index numbers to specify which cpus to graph"
                    }
                ]
            },
            "getCpuMetricImage": {
                "name": "getCpuMetricImage",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Use this method when needing a cpu usage image for a single guest.  It will gather the correct input parameters for the generic graphing utility automatically based on the snapshot specified. ",
                "parameters": [
                    {
                        "name": "snapshotRange",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"day\">day</li> <li title=\"week\">week</li> <li title=\"30day\">30day</li> <li title=\"previous_calendar_month\">previous_calendar_month</li> <li title=\"current_calendar_month\">current_calendar_month</li> <li title=\"current_billing_cycle\">current_billing_cycle</li> <li title=\"previous_billing_cycle\">previous_billing_cycle</li> <li title=\"specified_day\">specified_day</li> </ul>"
                    },
                    {
                        "name": "dateSpecified",
                        "type": "dateTime",
                        "doc": "Include this parameter when snapshot is 'specified_day'.  Needs to be formatted as: 'MM/DD/YYYY HH:00'",
                        "defaultValue": null
                    }
                ]
            },
            "getCpuMetricImageByDate": {
                "name": "getCpuMetricImageByDate",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Use this method when needing a CPU usage image for a single guest.  It will gather the correct input parameters for the generic graphing utility based on the date ranges ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    },
                    {
                        "name": "cpuIndexes",
                        "type": "int",
                        "typeArray": true,
                        "doc": "reserved for future use. An array of cpu index numbers to specify which cpus to graph"
                    }
                ]
            },
            "getCreateObjectOptions": {
                "name": "getCreateObjectOptions",
                "type": "SoftLayer_Container_Virtual_Guest_Configuration",
                "doc": "\nThere are many options that may be provided while ordering a computing instance, this method can be used to determine what these options are. \n\n\nDetailed information on the return value can be found on the data type page for [[SoftLayer_Container_Virtual_Guest_Configuration (type)]]. ",
                "static": true
            },
            "getCurrentBillingDetail": {
                "name": "getCurrentBillingDetail",
                "type": "SoftLayer_Billing_Item",
                "typeArray": true,
                "doc": "Get the billing detail for this instance for the current billing period. This does not include bandwidth usage. ",
                "maskable": true
            },
            "getCurrentBillingTotal": {
                "name": "getCurrentBillingTotal",
                "type": "decimal",
                "doc": "Get the total bill amount in US Dollars ($) for this instance in the current billing period. This includes all bandwidth used up to the point this method is called on the instance. "
            },
            "getCustomBandwidthDataByDate": {
                "name": "getCustomBandwidthDataByDate",
                "type": "SoftLayer_Container_Graph",
                "doc": "Retrieve bandwidth graph by date. ",
                "parameters": [
                    {
                        "name": "graphData",
                        "type": "SoftLayer_Container_Graph"
                    }
                ]
            },
            "getCustomMetricDataByDate": {
                "name": "getCustomMetricDataByDate",
                "type": "SoftLayer_Container_Graph",
                "doc": "Retrieve bandwidth graph by date. ",
                "parameters": [
                    {
                        "name": "graphData",
                        "type": "SoftLayer_Container_Graph"
                    }
                ]
            },
            "getDriveRetentionItemPrice": {
                "name": "getDriveRetentionItemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "doc": "Return a drive retention SoftLayer_Item_Price object for a guest.",
                "maskable": true
            },
            "getFirewallProtectableSubnets": {
                "name": "getFirewallProtectableSubnets",
                "type": "SoftLayer_Network_Subnet",
                "typeArray": true,
                "doc": "Get the subnets associated with this CloudLayer computing instance that are protectable by a network component firewall. ",
                "maskable": true
            },
            "getFirstAvailableBlockDevicePosition": {
                "name": "getFirstAvailableBlockDevicePosition",
                "type": "string"
            },
            "getIsoBootImage": {
                "name": "getIsoBootImage",
                "type": "SoftLayer_Virtual_Disk_Image",
                "maskable": true
            },
            "getItemPricesFromSoftwareDescriptions": {
                "name": "getItemPricesFromSoftwareDescriptions",
                "type": "SoftLayer_Product_Item",
                "typeArray": true,
                "doc": "Return a collection of SoftLayer_Item_Price objects from a collection of SoftLayer_Software_Description",
                "maskable": true,
                "parameters": [
                    {
                        "name": "softwareDescriptions",
                        "type": "SoftLayer_Software_Description",
                        "typeArray": true,
                        "doc": "The software that the item prices will be returned for."
                    },
                    {
                        "name": "includeTranslationsFlag",
                        "type": "boolean",
                        "doc": "The flag to specify whether software translations should be considered when looking at the software descriptions.",
                        "defaultValue": false
                    },
                    {
                        "name": "returnAllPricesFlag",
                        "type": "boolean",
                        "doc": "The flag to specify whether all item prices or just the first price for the software descriptions.",
                        "defaultValue": false
                    }
                ]
            },
            "getMemoryMetricDataByDate": {
                "name": "getMemoryMetricDataByDate",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Use this method when needing the metric data for memory for a single computing instance. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ]
            },
            "getMemoryMetricImage": {
                "name": "getMemoryMetricImage",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Use this method when needing a memory usage image for a single guest.  It will gather the correct input parameters for the generic graphing utility automatically based on the snapshot specified. ",
                "parameters": [
                    {
                        "name": "snapshotRange",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"day\">day</li> <li title=\"week\">week</li> <li title=\"30day\">30day</li> <li title=\"previous_calendar_month\">previous_calendar_month</li> <li title=\"current_calendar_month\">current_calendar_month</li> <li title=\"current_billing_cycle\">current_billing_cycle</li> <li title=\"previous_billing_cycle\">previous_billing_cycle</li> <li title=\"specified_day\">specified_day</li> <li title=\"specified_range\">specified_range</li> </ul>"
                    },
                    {
                        "name": "dateSpecified",
                        "type": "dateTime",
                        "doc": "Include this parameter when snapshot is 'specified_day' or 'specified_range'.  Needs to be formatted as: 'MM/DD/YYYY'",
                        "defaultValue": null
                    }
                ]
            },
            "getMemoryMetricImageByDate": {
                "name": "getMemoryMetricImageByDate",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Use this method when needing a image displaying the amount of memory used over time for a single computing instance. It will gather the correct input parameters for the generic graphing utility based on the date ranges ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ]
            },
            "getNetworkComponentFirewallProtectableIpAddresses": {
                "name": "getNetworkComponentFirewallProtectableIpAddresses",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "typeArray": true,
                "doc": "Get the IP addresses associated with this CloudLayer computing instance that are protectable by a network component firewall. Note, this may not return all values for IPv6 subnets for this CloudLayer computing instance. Please use getFirewallProtectableSubnets to get all protectable subnets. ",
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_Guest",
                "filterable": true,
                "maskable": true
            },
            "getOrderTemplate": {
                "name": "getOrderTemplate",
                "type": "SoftLayer_Container_Product_Order",
                "doc": "Obtain an order container that is ready to be sent to the [[SoftLayer_Product_Order#placeOrder|SoftLayer_Product_Order::placeOrder]] method. This container will include all services that the selected computing instance has. If desired you may remove prices which were returned. ",
                "parameters": [
                    {
                        "name": "billingType",
                        "type": "enum",
                        "doc": "<ul type=\"xsd:string\"> <li title=\"Monthly Billing\">MONTHLY</li> <li title=\"Hourly Billing\">HOURLY</li> </ul>"
                    },
                    {
                        "name": "orderPrices",
                        "type": "SoftLayer_Product_Item_Price",
                        "typeArray": true,
                        "doc": "This is a list of prices that could replace options that are normally selected by matching the items to the existing virtual server.",
                        "defaultValue": null
                    }
                ]
            },
            "getPendingMaintenanceActions": {
                "name": "getPendingMaintenanceActions",
                "type": "SoftLayer_Container_Virtual_Guest_PendingMaintenanceAction",
                "typeArray": true,
                "doc": "Returns a list of all the pending maintenance actions affecting this guest. "
            },
            "getProvisionDate": {
                "name": "getProvisionDate",
                "type": "dateTime"
            },
            "getRecentMetricData": {
                "name": "getRecentMetricData",
                "type": "SoftLayer_Metric_Tracking_Object",
                "typeArray": true,
                "doc": "Recent metric data for a guest ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "time",
                        "type": "unsignedInt",
                        "doc": "The amount of time (in seconds) in the past to retrieve data for. This parameter is not supported by some virtualization platforms at this time."
                    }
                ]
            },
            "getReverseDomainRecords": {
                "name": "getReverseDomainRecords",
                "type": "SoftLayer_Dns_Domain",
                "typeArray": true,
                "doc": "Retrieve the reverse domain records associated with this server. ",
                "maskable": true
            },
            "getUpgradeItemPrices": {
                "name": "getUpgradeItemPrices",
                "type": "SoftLayer_Product_Item_Price",
                "typeArray": true,
                "doc": "Retrieves a list of all upgrades available to a virtual server. Upgradeable items include, but are not limited to, number of cores, amount of RAM, storage configuration, and network port speed. \n\nThis method exclude downgrade item prices by default. You can set the \"includeDowngradeItemPrices\" parameter to true so that it can include downgrade item prices. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "includeDowngradeItemPrices",
                        "type": "boolean",
                        "doc": "If set to true, this method will include the downgrade item prices.",
                        "defaultValue": false
                    }
                ]
            },
            "getValidBlockDeviceTemplateGroups": {
                "name": "getValidBlockDeviceTemplateGroups",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "typeArray": true,
                "doc": "This method will return the list of block device template groups that are valid to the host. For instance, it will validate that the template groups returned are compatible with the size and number of disks on the host. ",
                "limitable": true,
                "filterable": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "visibility",
                        "type": "string",
                        "doc": "whether to return the private, shared, public or all image templates.  possible values are: private, shared, public, all",
                        "defaultValue": "all"
                    }
                ]
            },
            "isBackendPingable": {
                "name": "isBackendPingable",
                "type": "boolean",
                "doc": "Issues a ping command and returns the success (true) or failure (false) of the ping command. "
            },
            "isCloudInit": {
                "name": "isCloudInit",
                "type": "boolean",
                "doc": "Determines if the virtual guest was provisioned from a cloud-init enabled image. "
            },
            "isPingable": {
                "name": "isPingable",
                "type": "boolean",
                "doc": "Issues a ping command and returns the success (true) or failure (false) of the ping command. "
            },
            "isolateInstanceForDestructiveAction": {
                "name": "isolateInstanceForDestructiveAction",
                "type": "void",
                "doc": "Closes the public or private ports to isolate the instance before a destructive action. "
            },
            "migrate": {
                "name": "migrate",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "Creates a transaction to migrate a virtual guest to a new host. NOTE: Will only migrate if SoftLayer_Virtual_Guest property pendingMigrationFlag = true",
                "maskable": true
            },
            "migrateDedicatedHost": {
                "name": "migrateDedicatedHost",
                "type": "void",
                "doc": "Create a transaction to migrate an instance from one dedicated host to another dedicated host ",
                "parameters": [
                    {
                        "name": "destinationHostId",
                        "type": "int",
                        "doc": "Id for destination dedicated host for VSI migration"
                    }
                ]
            },
            "mountIsoImage": {
                "name": "mountIsoImage",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "maskable": true,
                "parameters": [
                    {
                        "name": "diskImageId",
                        "type": "int",
                        "doc": "ID of the SoftLayer_Virtual_Disk_Image to boot"
                    }
                ]
            },
            "pause": {
                "name": "pause",
                "type": "boolean",
                "doc": "Pause a virtual guest. This can only be called when the specified VM is in the Running state. "
            },
            "powerCycle": {
                "name": "powerCycle",
                "type": "boolean",
                "doc": "Power cycle a virtual guest "
            },
            "powerOff": {
                "name": "powerOff",
                "type": "boolean",
                "doc": "Power off a virtual guest "
            },
            "powerOffSoft": {
                "name": "powerOffSoft",
                "type": "boolean",
                "doc": "Power off a virtual guest "
            },
            "powerOn": {
                "name": "powerOn",
                "type": "boolean",
                "doc": "Power on a virtual guest "
            },
            "rebootDefault": {
                "name": "rebootDefault",
                "type": "boolean",
                "doc": "Power cycle a virtual guest "
            },
            "rebootHard": {
                "name": "rebootHard",
                "type": "boolean",
                "doc": "Power cycle a guest. "
            },
            "rebootSoft": {
                "name": "rebootSoft",
                "type": "boolean",
                "doc": "Attempt to complete a soft reboot of a guest by shutting down the operating system. "
            },
            "reloadCurrentOperatingSystemConfiguration": {
                "name": "reloadCurrentOperatingSystemConfiguration",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "Create a transaction to perform an OS reload ",
                "maskable": true
            },
            "reloadOperatingSystem": {
                "name": "reloadOperatingSystem",
                "type": "string",
                "doc": "Reloads current operating system configuration. \n\nThis service has a confirmation protocol for proceeding with the reload. To proceed with the reload without confirmation, simply pass in 'FORCE' as the token parameter. To proceed with the reload with confirmation, simply call the service with no parameter. A token string will be returned by this service. The token will remain active for 10 minutes. Use this token as the parameter to confirm that a reload is to be performed for the server. \n\nAs a precaution, we strongly  recommend backing up all data before reloading the operating system. The reload will format the primary disk and will reconfigure the computing instance to the current specifications on record. \n\nIf reloading from an image template, we recommend first getting the list of valid private block device template groups, by calling the getOperatingSystemReloadImages method. ",
                "parameters": [
                    {
                        "name": "token",
                        "type": "string",
                        "doc": "The token returned by this service as a confirmation to proceed with the reload.",
                        "defaultValue": null
                    },
                    {
                        "name": "config",
                        "type": "SoftLayer_Container_Hardware_Server_Configuration",
                        "doc": "The new cloud configuration for the reload.",
                        "defaultValue": null
                    }
                ]
            },
            "removeAccessToNetworkStorage": {
                "name": "removeAccessToNetworkStorage",
                "type": "boolean",
                "doc": "This method is used to remove access to a SoftLayer_Network_Storage volume that supports host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObject",
                        "type": "SoftLayer_Network_Storage"
                    }
                ]
            },
            "removeAccessToNetworkStorageList": {
                "name": "removeAccessToNetworkStorageList",
                "type": "boolean",
                "doc": "This method is used to allow access to multiple SoftLayer_Network_Storage volumes that support host- or network-level access control. ",
                "parameters": [
                    {
                        "name": "networkStorageTemplateObjects",
                        "type": "SoftLayer_Network_Storage",
                        "typeArray": true
                    }
                ]
            },
            "removeTags": {
                "name": "removeTags",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "comma separated list of tags inputted by user"
                    }
                ]
            },
            "resume": {
                "name": "resume",
                "type": "boolean",
                "doc": "Resume a virtual guest, this can only be called when a VSI is in Suspended state. "
            },
            "sendTestReclaimScheduledAlert": {
                "name": "sendTestReclaimScheduledAlert",
                "type": "void"
            },
            "setPrivateNetworkInterfaceSpeed": {
                "name": "setPrivateNetworkInterfaceSpeed",
                "type": "boolean",
                "doc": "Sets the private network interface speed to the new speed. Speed values can only be 0 (Disconnect), 10, 100, or 1000. The new speed must be equal to or less than the max speed of the interface. \n\nIt will take less than a minute to update the port speed. ",
                "parameters": [
                    {
                        "name": "newSpeed",
                        "type": "int",
                        "doc": "New speed for private network component",
                        "defaultValue": null
                    }
                ]
            },
            "setPublicNetworkInterfaceSpeed": {
                "name": "setPublicNetworkInterfaceSpeed",
                "type": "boolean",
                "doc": "Sets the public network interface speed to the new speed. Speed values can only be 0 (Disconnect), 10, 100, or 1000. The new speed must be equal to or less than the max speed of the interface. \n\nIt will take less than a minute to update the port speed. ",
                "parameters": [
                    {
                        "name": "newSpeed",
                        "type": "int",
                        "doc": "New speed for public network component",
                        "defaultValue": null
                    }
                ]
            },
            "setTags": {
                "name": "setTags",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "comma separated list of tags inputted by user"
                    }
                ]
            },
            "setTransientWebhook": {
                "name": "setTransientWebhook",
                "type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "secret",
                        "type": "string"
                    }
                ]
            },
            "setUserMetadata": {
                "name": "setUserMetadata",
                "type": "boolean",
                "doc": "Sets the data that will be written to the configuration drive. ",
                "parameters": [
                    {
                        "name": "metadata",
                        "type": "string",
                        "typeArray": true,
                        "doc": "base64 encoded strings that will be written to the configuration drive",
                        "defaultValue": []
                    }
                ]
            },
            "shutdownPrivatePort": {
                "name": "shutdownPrivatePort",
                "type": "boolean",
                "doc": "Shuts down the private network port"
            },
            "shutdownPublicPort": {
                "name": "shutdownPublicPort",
                "type": "boolean",
                "doc": "Shuts down the public network port"
            },
            "unmountIsoImage": {
                "name": "unmountIsoImage",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "maskable": true
            },
            "validateImageTemplate": {
                "name": "validateImageTemplate",
                "type": "boolean",
                "doc": "Validate an image template for OS Reload ",
                "parameters": [
                    {
                        "name": "imageTemplateId",
                        "type": "int",
                        "defaultValue": null
                    }
                ]
            },
            "verifyReloadOperatingSystem": {
                "name": "verifyReloadOperatingSystem",
                "type": "boolean",
                "doc": "Verify that a virtual server can go through the operating system reload process. It may be useful to call this method before attempting to actually reload the operating system just to verify that the reload will go smoothly. If the server configuration is not setup correctly or there is some other issue, an exception will be thrown indicating the error. If there were no issues, this will just return true. ",
                "parameters": [
                    {
                        "name": "config",
                        "type": "SoftLayer_Container_Hardware_Server_Configuration",
                        "doc": "The new cloud configuration for the reload.",
                        "defaultValue": null
                    }
                ]
            }
        },
        "typeDoc": "The virtual guest data type presents the structure in which all virtual guests will be presented. Internally, the structure supports various virtualization platforms with no change to external interaction. \n\nA guest, also known as a virtual server, represents an allocation of resources on a virtual host. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that a virtual guest belongs to."
            },
            "accountOwnedPoolFlag": {
                "name": "accountOwnedPoolFlag",
                "type": "boolean",
                "form": "relational"
            },
            "activeNetworkMonitorIncident": {
                "name": "activeNetworkMonitorIncident",
                "type": "SoftLayer_Network_Monitor_Version1_Incident",
                "form": "relational",
                "typeArray": true,
                "doc": "A virtual guest's currently active network monitoring incidents."
            },
            "activeTickets": {
                "name": "activeTickets",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "typeArray": true
            },
            "activeTransaction": {
                "name": "activeTransaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "A transaction that is still be performed on a cloud server."
            },
            "activeTransactions": {
                "name": "activeTransactions",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "typeArray": true,
                "doc": "Any active transaction(s) that are currently running for the server (example: os reload)."
            },
            "allowedHost": {
                "name": "allowedHost",
                "type": "SoftLayer_Network_Storage_Allowed_Host",
                "form": "relational",
                "doc": "The SoftLayer_Network_Storage_Allowed_Host information to connect this Virtual Guest to Network Storage volumes that require access control lists."
            },
            "allowedNetworkStorage": {
                "name": "allowedNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage objects that this SoftLayer_Virtual_Guest has access to."
            },
            "allowedNetworkStorageReplicas": {
                "name": "allowedNetworkStorageReplicas",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "The SoftLayer_Network_Storage objects whose Replica that this SoftLayer_Virtual_Guest has access to."
            },
            "antivirusSpywareSoftwareComponent": {
                "name": "antivirusSpywareSoftwareComponent",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "A antivirus / spyware software component object."
            },
            "applicationDeliveryController": {
                "name": "applicationDeliveryController",
                "type": "SoftLayer_Network_Application_Delivery_Controller",
                "form": "relational"
            },
            "attributes": {
                "name": "attributes",
                "type": "SoftLayer_Virtual_Guest_Attribute",
                "form": "relational",
                "typeArray": true
            },
            "availableMonitoring": {
                "name": "availableMonitoring",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host_Stratum",
                "form": "relational",
                "typeArray": true,
                "doc": "An object that stores the maximum level for the monitoring query types and response types."
            },
            "averageDailyPrivateBandwidthUsage": {
                "name": "averageDailyPrivateBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The average daily private bandwidth usage for the current billing cycle."
            },
            "averageDailyPublicBandwidthUsage": {
                "name": "averageDailyPublicBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The average daily public bandwidth usage for the current billing cycle."
            },
            "backendNetworkComponents": {
                "name": "backendNetworkComponents",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A guests's backend network components."
            },
            "backendRouters": {
                "name": "backendRouters",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "typeArray": true,
                "doc": "A guest's backend or private router."
            },
            "bandwidthAllocation": {
                "name": "bandwidthAllocation",
                "type": "decimal",
                "form": "relational",
                "doc": "A computing instance's allotted bandwidth (measured in GB)."
            },
            "bandwidthAllotmentDetail": {
                "name": "bandwidthAllotmentDetail",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment_Detail",
                "form": "relational",
                "doc": "A computing instance's allotted detail record. Allotment details link bandwidth allocation with allotments."
            },
            "billingCycleBandwidthUsage": {
                "name": "billingCycleBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "typeArray": true,
                "doc": "The raw bandwidth usage data for the current billing cycle. One object will be returned for each network this server is attached to."
            },
            "billingCyclePrivateBandwidthUsage": {
                "name": "billingCyclePrivateBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "The raw private bandwidth usage data for the current billing cycle."
            },
            "billingCyclePublicBandwidthUsage": {
                "name": "billingCyclePublicBandwidthUsage",
                "type": "SoftLayer_Network_Bandwidth_Usage",
                "form": "relational",
                "doc": "The raw public bandwidth usage data for the current billing cycle."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item_Virtual_Guest",
                "form": "relational",
                "doc": "The billing item for a CloudLayer Compute Instance."
            },
            "blockCancelBecauseDisconnectedFlag": {
                "name": "blockCancelBecauseDisconnectedFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Determines whether the instance is ineligible for cancellation because it is disconnected."
            },
            "blockDeviceTemplateGroup": {
                "name": "blockDeviceTemplateGroup",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational",
                "doc": "The global identifier for the image template that was used to provision or reload a guest."
            },
            "blockDevices": {
                "name": "blockDevices",
                "type": "SoftLayer_Virtual_Guest_Block_Device",
                "form": "relational",
                "typeArray": true,
                "doc": "A computing instance's block devices. Block devices link [[SoftLayer_Virtual_Disk_Image|disk images]] to computing instances."
            },
            "browserConsoleAccessLogs": {
                "name": "browserConsoleAccessLogs",
                "type": "SoftLayer_Virtual_BrowserConsoleAccessLog",
                "form": "relational",
                "typeArray": true,
                "doc": "A virtual guest's browser access logs."
            },
            "consoleData": {
                "name": "consoleData",
                "type": "SoftLayer_Container_Virtual_ConsoleData",
                "form": "relational",
                "doc": "A container for a guest's console data"
            },
            "consoleIpAddressFlag": {
                "name": "consoleIpAddressFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating a computing instance's console IP address is assigned."
            },
            "consoleIpAddressRecord": {
                "name": "consoleIpAddressRecord",
                "type": "SoftLayer_Virtual_Guest_Network_Component_IpAddress",
                "form": "relational",
                "doc": "A record containing information about a computing instance's console IP and port number."
            },
            "continuousDataProtectionSoftwareComponent": {
                "name": "continuousDataProtectionSoftwareComponent",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "A continuous data protection software component object."
            },
            "controlPanel": {
                "name": "controlPanel",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "A guest's control panel."
            },
            "currentBandwidthSummary": {
                "name": "currentBandwidthSummary",
                "type": "SoftLayer_Metric_Tracking_Object_Bandwidth_Summary",
                "form": "relational",
                "doc": "An object that provides commonly used bandwidth summary components for the current billing cycle."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The datacenter that a virtual guest resides in."
            },
            "dedicatedHost": {
                "name": "dedicatedHost",
                "type": "SoftLayer_Virtual_DedicatedHost",
                "form": "relational",
                "doc": "The dedicated host associated with this guest."
            },
            "evaultNetworkStorage": {
                "name": "evaultNetworkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "A guest's associated EVault network storage service account."
            },
            "firewallServiceComponent": {
                "name": "firewallServiceComponent",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "A computing instance's hardware firewall services."
            },
            "frontendNetworkComponents": {
                "name": "frontendNetworkComponents",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A guest's frontend network components."
            },
            "frontendRouters": {
                "name": "frontendRouters",
                "type": "SoftLayer_Hardware",
                "form": "relational",
                "doc": "A guest's frontend or public router."
            },
            "globalIdentifier": {
                "name": "globalIdentifier",
                "type": "string",
                "form": "relational",
                "doc": "A guest's universally unique identifier."
            },
            "gpuCount": {
                "name": "gpuCount",
                "type": "int",
                "form": "relational",
                "doc": "The number of GPUs attached to the guest."
            },
            "gpuType": {
                "name": "gpuType",
                "type": "string",
                "form": "relational",
                "doc": "The name of the GPU type attached to the guest."
            },
            "guestBootParameter": {
                "name": "guestBootParameter",
                "type": "SoftLayer_Virtual_Guest_Boot_Parameter",
                "form": "relational"
            },
            "hardwareFunctionDescription": {
                "name": "hardwareFunctionDescription",
                "type": "string",
                "form": "relational",
                "doc": "The object's function."
            },
            "host": {
                "name": "host",
                "type": "SoftLayer_Virtual_Host",
                "form": "relational",
                "doc": "The virtual host on which a virtual guest resides (available only on private clouds)."
            },
            "hostIpsSoftwareComponent": {
                "name": "hostIpsSoftwareComponent",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "doc": "A host IPS software component object."
            },
            "hourlyBillingFlag": {
                "name": "hourlyBillingFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A guest's hourly billing status."
            },
            "inboundPrivateBandwidthUsage": {
                "name": "inboundPrivateBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private inbound bandwidth for this computing instance for the current billing cycle."
            },
            "inboundPublicBandwidthUsage": {
                "name": "inboundPublicBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public inbound bandwidth for this computing instance for the current billing cycle."
            },
            "internalTagReferences": {
                "name": "internalTagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true
            },
            "lastKnownPowerState": {
                "name": "lastKnownPowerState",
                "type": "SoftLayer_Virtual_Guest_Power_State",
                "form": "relational",
                "doc": "The last known power state of a virtual guest in the event the guest is turned off outside of IMS or has gone offline."
            },
            "lastOperatingSystemReload": {
                "name": "lastOperatingSystemReload",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "The last transaction that a cloud server's operating system was loaded."
            },
            "lastTransaction": {
                "name": "lastTransaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "The last transaction a cloud server had performed."
            },
            "latestNetworkMonitorIncident": {
                "name": "latestNetworkMonitorIncident",
                "type": "SoftLayer_Network_Monitor_Version1_Incident",
                "form": "relational",
                "doc": "A virtual guest's latest network monitoring incident."
            },
            "localDiskFlag": {
                "name": "localDiskFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that the virtual guest has at least one disk which is local to the host it runs on. This does not include a SWAP device."
            },
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "Where guest is located within SoftLayer's location hierarchy."
            },
            "managedResourceFlag": {
                "name": "managedResourceFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that the virtual guest is a managed resource."
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object",
                "form": "relational",
                "doc": "A guest's metric tracking object."
            },
            "metricTrackingObjectId": {
                "name": "metricTrackingObjectId",
                "type": "int",
                "form": "relational",
                "doc": "The metric tracking object id for this guest."
            },
            "monitoringRobot": {
                "name": "monitoringRobot",
                "type": "SoftLayer_Monitoring_Robot",
                "form": "relational"
            },
            "monitoringServiceComponent": {
                "name": "monitoringServiceComponent",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host_Stratum",
                "form": "relational",
                "doc": "A virtual guest's network monitoring services."
            },
            "monitoringServiceEligibilityFlag": {
                "name": "monitoringServiceEligibilityFlag",
                "type": "boolean",
                "form": "relational"
            },
            "monitoringUserNotification": {
                "name": "monitoringUserNotification",
                "type": "SoftLayer_User_Customer_Notification_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The monitoring notification objects for this guest. Each object links this guest instance to a user account that will be notified if monitoring on this guest object fails"
            },
            "networkComponents": {
                "name": "networkComponents",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A guests's network components."
            },
            "networkMonitorIncidents": {
                "name": "networkMonitorIncidents",
                "type": "SoftLayer_Network_Monitor_Version1_Incident",
                "form": "relational",
                "typeArray": true,
                "doc": "All of a virtual guest's network monitoring incidents."
            },
            "networkMonitors": {
                "name": "networkMonitors",
                "type": "SoftLayer_Network_Monitor_Version1_Query_Host",
                "form": "relational",
                "typeArray": true,
                "doc": "A guests's network monitors."
            },
            "networkStorage": {
                "name": "networkStorage",
                "type": "SoftLayer_Network_Storage",
                "form": "relational",
                "typeArray": true,
                "doc": "A guest's associated network storage accounts."
            },
            "networkVlans": {
                "name": "networkVlans",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "typeArray": true,
                "doc": "The network Vlans that a guest's network components are associated with."
            },
            "openCancellationTicket": {
                "name": "openCancellationTicket",
                "type": "SoftLayer_Ticket",
                "form": "relational",
                "doc": "An open ticket requesting cancellation of this server, if one exists."
            },
            "operatingSystem": {
                "name": "operatingSystem",
                "type": "SoftLayer_Software_Component_OperatingSystem",
                "form": "relational",
                "doc": "A guest's operating system."
            },
            "operatingSystemReferenceCode": {
                "name": "operatingSystemReferenceCode",
                "type": "string",
                "form": "relational",
                "doc": "A guest's operating system software description."
            },
            "orderedPackageId": {
                "name": "orderedPackageId",
                "type": "string",
                "form": "relational",
                "doc": "The original package id provided with the order for a Cloud Computing Instance."
            },
            "outboundPrivateBandwidthUsage": {
                "name": "outboundPrivateBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total private outbound bandwidth for this computing instance for the current billing cycle."
            },
            "outboundPublicBandwidthUsage": {
                "name": "outboundPublicBandwidthUsage",
                "type": "decimal",
                "form": "relational",
                "doc": "The total public outbound bandwidth for this computing instance for the current billing cycle."
            },
            "overBandwidthAllocationFlag": {
                "name": "overBandwidthAllocationFlag",
                "type": "int",
                "form": "relational",
                "doc": "Whether the bandwidth usage for this computing instance for the current billing cycle exceeds the allocation."
            },
            "pendingMigrationFlag": {
                "name": "pendingMigrationFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "When true this virtual guest must be migrated using SoftLayer_Virtual_Guest::migrate."
            },
            "placementGroup": {
                "name": "placementGroup",
                "type": "SoftLayer_Virtual_PlacementGroup",
                "form": "relational",
                "doc": "The placement group that a virtual guest belongs to."
            },
            "powerState": {
                "name": "powerState",
                "type": "SoftLayer_Virtual_Guest_Power_State",
                "form": "relational",
                "doc": "The current power state of a virtual guest."
            },
            "primaryBackendIpAddress": {
                "name": "primaryBackendIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "A guest's primary private IP address."
            },
            "primaryBackendNetworkComponent": {
                "name": "primaryBackendNetworkComponent",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "doc": "A guest's primary backend network component."
            },
            "primaryIpAddress": {
                "name": "primaryIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "The guest's primary public IP address."
            },
            "primaryNetworkComponent": {
                "name": "primaryNetworkComponent",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "doc": "A guest's primary public network component."
            },
            "privateNetworkOnlyFlag": {
                "name": "privateNetworkOnlyFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether the computing instance only has access to the private network."
            },
            "projectedOverBandwidthAllocationFlag": {
                "name": "projectedOverBandwidthAllocationFlag",
                "type": "int",
                "form": "relational",
                "doc": "Whether the bandwidth usage for this computing instance for the current billing cycle is projected to exceed the allocation."
            },
            "projectedPublicBandwidthUsage": {
                "name": "projectedPublicBandwidthUsage",
                "type": "float",
                "form": "relational",
                "doc": "The projected public outbound bandwidth for this computing instance for the current billing cycle."
            },
            "recentEvents": {
                "name": "recentEvents",
                "type": "SoftLayer_Notification_Occurrence_Event",
                "form": "relational",
                "typeArray": true,
                "doc": "Recent events that impact this computing instance."
            },
            "regionalGroup": {
                "name": "regionalGroup",
                "type": "SoftLayer_Location_Group_Regional",
                "form": "relational",
                "doc": "The regional group this guest is in."
            },
            "regionalInternetRegistry": {
                "name": "regionalInternetRegistry",
                "type": "SoftLayer_Network_Regional_Internet_Registry",
                "form": "relational"
            },
            "reservedCapacityGroup": {
                "name": "reservedCapacityGroup",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup",
                "form": "relational",
                "doc": "The reserved capacity group the guest is associated with."
            },
            "reservedCapacityGroupFlag": {
                "name": "reservedCapacityGroupFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Flag to indicate whether or not a guest is part of a reserved capacity group."
            },
            "reservedCapacityGroupInstance": {
                "name": "reservedCapacityGroupInstance",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup_Instance",
                "form": "relational",
                "doc": "The reserved capacity group instance the guest is associated with."
            },
            "scaleAssets": {
                "name": "scaleAssets",
                "type": "SoftLayer_Scale_Asset",
                "form": "relational",
                "typeArray": true,
                "doc": "Collection of scale assets this guest corresponds to."
            },
            "scaleMember": {
                "name": "scaleMember",
                "type": "SoftLayer_Scale_Member_Virtual_Guest",
                "form": "relational",
                "doc": "The scale member for this guest, if applicable."
            },
            "scaledFlag": {
                "name": "scaledFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not this guest is a member of a scale group and was automatically created as part of a scale group action."
            },
            "securityScanRequests": {
                "name": "securityScanRequests",
                "type": "SoftLayer_Network_Security_Scanner_Request",
                "form": "relational",
                "typeArray": true,
                "doc": "A guest's vulnerability scan requests."
            },
            "serverRoom": {
                "name": "serverRoom",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The server room that a guest is located at. There may be more than one server room for every data center."
            },
            "softwareComponents": {
                "name": "softwareComponents",
                "type": "SoftLayer_Software_Component",
                "form": "relational",
                "typeArray": true,
                "doc": "A guest's installed software."
            },
            "sshKeys": {
                "name": "sshKeys",
                "type": "SoftLayer_Security_Ssh_Key",
                "form": "relational",
                "typeArray": true,
                "doc": "SSH keys to be installed on the server during provisioning or an OS reload."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Virtual_Guest_Status",
                "form": "relational",
                "doc": "A computing instance's status."
            },
            "tagReferences": {
                "name": "tagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true
            },
            "transientGuestFlag": {
                "name": "transientGuestFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Whether or not a computing instance is a Transient Instance."
            },
            "transientWebhookURI": {
                "name": "transientWebhookURI",
                "type": "SoftLayer_Virtual_Guest_Attribute",
                "form": "relational",
                "doc": "The endpoint used to notify customers their transient guest is terminating."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Virtual_Guest_Type",
                "form": "relational",
                "doc": "The type of this virtual guest."
            },
            "upgradeRequest": {
                "name": "upgradeRequest",
                "type": "SoftLayer_Product_Upgrade_Request",
                "form": "relational",
                "doc": "A computing instance's associated upgrade request object if any."
            },
            "userData": {
                "name": "userData",
                "type": "SoftLayer_Virtual_Guest_Attribute",
                "form": "relational",
                "typeArray": true,
                "doc": "A base64 encoded string containing custom user data for a Cloud Computing Instance order."
            },
            "users": {
                "name": "users",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "typeArray": true,
                "doc": "A list of users that have access to this computing instance."
            },
            "virtualRack": {
                "name": "virtualRack",
                "type": "SoftLayer_Network_Bandwidth_Version1_Allotment",
                "form": "relational",
                "doc": "The name of the bandwidth allotment that a hardware belongs too."
            },
            "virtualRackId": {
                "name": "virtualRackId",
                "type": "int",
                "form": "relational",
                "doc": "The id of the bandwidth allotment that a computing instance belongs too."
            },
            "virtualRackName": {
                "name": "virtualRackName",
                "type": "string",
                "form": "relational",
                "doc": "The name of the bandwidth allotment that a computing instance belongs too."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A computing instance's associated [[SoftLayer_Account|account]] id "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a virtual computing instance was created. "
            },
            "dedicatedAccountHostOnlyFlag": {
                "name": "dedicatedAccountHostOnlyFlag",
                "type": "boolean",
                "form": "local",
                "doc": "When true this flag specifies that a compute instance is to run on hosts that only have guests from the same account. "
            },
            "domain": {
                "name": "domain",
                "type": "string",
                "form": "local",
                "doc": "A computing instance's domain name "
            },
            "fullyQualifiedDomainName": {
                "name": "fullyQualifiedDomainName",
                "type": "string",
                "form": "local",
                "doc": "A name reflecting the hostname and domain of the computing instance."
            },
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local",
                "doc": "A virtual computing instance's hostname "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for a computing instance. "
            },
            "lastPowerStateId": {
                "name": "lastPowerStateId",
                "type": "int",
                "form": "local"
            },
            "lastVerifiedDate": {
                "name": "lastVerifiedDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last timestamp of when the guest was verified as a resident virtual machine on the host's hypervisor platform. "
            },
            "maxCpu": {
                "name": "maxCpu",
                "type": "int",
                "form": "local",
                "doc": "The maximum amount of CPU resources a computing instance may utilize. "
            },
            "maxCpuUnits": {
                "name": "maxCpuUnits",
                "type": "string",
                "form": "local",
                "doc": "The unit of the maximum amount of CPU resources a computing instance may utilize. "
            },
            "maxMemory": {
                "name": "maxMemory",
                "type": "int",
                "form": "local",
                "doc": "The maximum amount of memory a computing instance may utilize. "
            },
            "metricPollDate": {
                "name": "metricPollDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date of the most recent metric tracking poll performed. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a virtual computing instance was last modified. "
            },
            "notes": {
                "name": "notes",
                "type": "string",
                "form": "local",
                "doc": "A note of up to 1,000 characters about a virtual server. "
            },
            "placementGroupId": {
                "name": "placementGroupId",
                "type": "int",
                "form": "local",
                "doc": "The placement group ID that the virtual guest belongs to. "
            },
            "postInstallScriptUri": {
                "name": "postInstallScriptUri",
                "type": "string",
                "form": "local",
                "doc": "URI of the script to be downloaded and executed after installation is complete. This is deprecated in favor of supplementalCreateObjectOptions' postInstallScriptUri. "
            },
            "provisionDate": {
                "name": "provisionDate",
                "type": "dateTime",
                "form": "local"
            },
            "startCpus": {
                "name": "startCpus",
                "type": "int",
                "form": "local",
                "doc": "The number of CPUs available to a computing instance upon startup. "
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "A computing instances [[SoftLayer_Virtual_Guest_Status|status]] ID "
            },
            "supplementalCreateObjectOptions": {
                "name": "supplementalCreateObjectOptions",
                "type": "SoftLayer_Virtual_Guest_SupplementalCreateObjectOptions",
                "form": "local",
                "doc": "Extra options needed for [[SoftLayer_Virtual_Guest/createObject|createObject]] and [[SoftLayer_Virtual_Guest/createObjects|createObjects]]. "
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "Gives the type of guest categorized as PUBLIC, DEDICATED or PRIVATE. "
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "Unique ID for a computing instance's record on a virtualization platform. "
            },
            "activeNetworkMonitorIncidentCount": {
                "name": "activeNetworkMonitorIncidentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a virtual guest's currently active network monitoring incidents."
            },
            "activeTicketCount": {
                "name": "activeTicketCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "activeTransactionCount": {
                "name": "activeTransactionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of any active transaction(s) that are currently running for the server (example: os reload)."
            },
            "allowedNetworkStorageCount": {
                "name": "allowedNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage objects that this SoftLayer_Virtual_Guest has access to."
            },
            "allowedNetworkStorageReplicaCount": {
                "name": "allowedNetworkStorageReplicaCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the SoftLayer_Network_Storage objects whose Replica that this SoftLayer_Virtual_Guest has access to."
            },
            "attributeCount": {
                "name": "attributeCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "availableMonitoringCount": {
                "name": "availableMonitoringCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of an object that stores the maximum level for the monitoring query types and response types."
            },
            "backendNetworkComponentCount": {
                "name": "backendNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a guests's backend network components."
            },
            "backendRouterCount": {
                "name": "backendRouterCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a guest's backend or private router."
            },
            "billingCycleBandwidthUsageCount": {
                "name": "billingCycleBandwidthUsageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the raw bandwidth usage data for the current billing cycle. One object will be returned for each network this server is attached to."
            },
            "blockDeviceCount": {
                "name": "blockDeviceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a computing instance's block devices. Block devices link [[SoftLayer_Virtual_Disk_Image|disk images]] to computing instances."
            },
            "browserConsoleAccessLogCount": {
                "name": "browserConsoleAccessLogCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a virtual guest's browser access logs."
            },
            "evaultNetworkStorageCount": {
                "name": "evaultNetworkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a guest's associated EVault network storage service account."
            },
            "frontendNetworkComponentCount": {
                "name": "frontendNetworkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a guest's frontend network components."
            },
            "internalTagReferenceCount": {
                "name": "internalTagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "monitoringUserNotificationCount": {
                "name": "monitoringUserNotificationCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the monitoring notification objects for this guest. Each object links this guest instance to a user account that will be notified if monitoring on this guest object fails"
            },
            "networkComponentCount": {
                "name": "networkComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a guests's network components."
            },
            "networkMonitorCount": {
                "name": "networkMonitorCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a guests's network monitors."
            },
            "networkMonitorIncidentCount": {
                "name": "networkMonitorIncidentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of all of a virtual guest's network monitoring incidents."
            },
            "networkStorageCount": {
                "name": "networkStorageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a guest's associated network storage accounts."
            },
            "networkVlanCount": {
                "name": "networkVlanCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the network Vlans that a guest's network components are associated with."
            },
            "recentEventCount": {
                "name": "recentEventCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of recent events that impact this computing instance."
            },
            "scaleAssetCount": {
                "name": "scaleAssetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of collection of scale assets this guest corresponds to."
            },
            "securityScanRequestCount": {
                "name": "securityScanRequestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a guest's vulnerability scan requests."
            },
            "softwareComponentCount": {
                "name": "softwareComponentCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a guest's installed software."
            },
            "sshKeyCount": {
                "name": "sshKeyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of sSH keys to be installed on the server during provisioning or an OS reload."
            },
            "tagReferenceCount": {
                "name": "tagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "userCount": {
                "name": "userCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a list of users that have access to this computing instance."
            },
            "userDataCount": {
                "name": "userDataCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a base64 encoded string containing custom user data for a Cloud Computing Instance order."
            }
        }
    },
    "SoftLayer_Virtual_Guest_Attribute": {
        "name": "SoftLayer_Virtual_Guest_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational"
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Virtual_Guest_Attribute_Type",
                "form": "relational"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "A guest attribute's value."
            }
        }
    },
    "SoftLayer_Virtual_Guest_Attribute_Type": {
        "name": "SoftLayer_Virtual_Guest_Attribute_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyname": {
                "name": "keyname",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Virtual_Guest_Attribute_UserData": {
        "name": "SoftLayer_Virtual_Guest_Attribute_UserData",
        "base": "SoftLayer_Virtual_Guest_Attribute",
        "noservice": true
    },
    "SoftLayer_Virtual_Guest_Block_Device": {
        "name": "SoftLayer_Virtual_Guest_Block_Device",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The block device data type presents the structure in which all block devices will be presented. A block device attaches a disk image to a guest. Internally, the structure supports various virtualization platforms with no change to external interaction. \n\nA guest, also known as a virtual server, represents an allocation of resources on a virtual host. ",
        "properties": {
            "diskImage": {
                "name": "diskImage",
                "type": "SoftLayer_Virtual_Disk_Image",
                "form": "relational",
                "doc": "The disk image that a block device connects to in a computing instance."
            },
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The computing instance that this block device is attached to."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Status",
                "form": "relational"
            },
            "bootableFlag": {
                "name": "bootableFlag",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating if a block device can be booted from. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a block device was created. "
            },
            "device": {
                "name": "device",
                "type": "string",
                "form": "local",
                "doc": "A name used to identify a block device. "
            },
            "diskImageId": {
                "name": "diskImageId",
                "type": "int",
                "form": "local",
                "doc": "A block device [[SoftLayer_Virtual_Disk_Image|disk image]]'s unique ID. "
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Virtual_Guest|computing instance]] that a block device is associated with. "
            },
            "hotPlugFlag": {
                "name": "hotPlugFlag",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating if a block device can be plugged into a computing instance without having to shut down the instance. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A computing instance block device's unique ID. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The data a block device was last modified. "
            },
            "mountMode": {
                "name": "mountMode",
                "type": "string",
                "form": "local",
                "doc": "The writing mode that a virtual block device is mounted as, either \"RO\" for read-only mode or \"RW\" for read and write mode. "
            },
            "mountType": {
                "name": "mountType",
                "type": "string",
                "form": "local",
                "doc": "The type of device that a virtual block device is mounted as, either \"Disk\" for a directly connected storage disk or \"CD\" for devices that are mounted as optical drives.. "
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "The status of the device, either disconnected or connected "
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "A block device's unique ID on a virtualization platform. "
            }
        }
    },
    "SoftLayer_Virtual_Guest_Block_Device_Status": {
        "name": "SoftLayer_Virtual_Guest_Block_Device_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Virtual_Guest_Block_Device_Template": {
        "name": "SoftLayer_Virtual_Guest_Block_Device_Template",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The virtual block device template data type presents the structure in which all archived image templates are presented. \n\nA virtual block device template, also known as a image template, represents the image of a virtual guest instance. ",
        "properties": {
            "diskImage": {
                "name": "diskImage",
                "type": "SoftLayer_Virtual_Disk_Image",
                "form": "relational",
                "doc": "A block device template's disk image."
            },
            "group": {
                "name": "group",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational",
                "doc": "A block device template's group. Several block device templates can be combined together into a group for archiving purposes."
            },
            "device": {
                "name": "device",
                "type": "string",
                "form": "local",
                "doc": "A name that identifies a block device template. "
            },
            "diskImageId": {
                "name": "diskImageId",
                "type": "int",
                "form": "local",
                "doc": "A block device template's [[SoftLayer_Virtual_Disk_Image|disk image]] ID. "
            },
            "diskSpace": {
                "name": "diskSpace",
                "type": "float",
                "form": "local",
                "doc": "The amount of disk space that a block device template is using.  Use this number along with the units property to obtain the correct space used. "
            },
            "groupId": {
                "name": "groupId",
                "type": "int",
                "form": "local",
                "doc": "A block device template's [[SoftLayer_Virtual_Guest_Block_Device_Template_Group|group]] ID. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A block device template's unique ID. "
            },
            "units": {
                "name": "units",
                "type": "string",
                "form": "local",
                "doc": "The units that will be used with the disk space property to identify the amount of disk space used. "
            }
        }
    },
    "SoftLayer_Virtual_Guest_Block_Device_Template_Group": {
        "name": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The virtual guest block device template group service provides a common interface to an accounts archived image templates The interaction with various third party APIs is not needed when implementing this service to administer your guests. ",
        "methods": {
            "addByolAttribute": {
                "name": "addByolAttribute",
                "type": "boolean",
                "doc": "This method allows you to mark this image template as customer managed software license (BYOL) "
            },
            "addCloudInitAttribute": {
                "name": "addCloudInitAttribute",
                "type": "boolean",
                "doc": "This method allows you to mark this image template as cloud init "
            },
            "addLocations": {
                "name": "addLocations",
                "type": "boolean",
                "doc": "This method will create transaction(s) to add available locations to an archive image template.",
                "parameters": [
                    {
                        "name": "locations",
                        "type": "SoftLayer_Location",
                        "typeArray": true,
                        "doc": "to add to the image template."
                    }
                ]
            },
            "addSupportedBootMode": {
                "name": "addSupportedBootMode",
                "type": "boolean",
                "doc": "This method allows you to mark this image's supported boot modes as 'HVM' or 'PV'. ",
                "parameters": [
                    {
                        "name": "bootMode",
                        "type": "string",
                        "doc": "Boot mode type to add to SUPPORTED_BOOT_MODE."
                    }
                ]
            },
            "copyToExternalSource": {
                "name": "copyToExternalSource",
                "type": "boolean",
                "doc": "Create a transaction to export/copy a template to an external source.",
                "parameters": [
                    {
                        "name": "configuration",
                        "type": "SoftLayer_Container_Virtual_Guest_Block_Device_Template_Configuration"
                    }
                ]
            },
            "copyToIcos": {
                "name": "copyToIcos",
                "type": "boolean",
                "doc": "Create a transaction to export/copy a template to an ICOS.",
                "parameters": [
                    {
                        "name": "configuration",
                        "type": "SoftLayer_Container_Virtual_Guest_Block_Device_Template_Configuration"
                    }
                ]
            },
            "createFromExternalSource": {
                "name": "createFromExternalSource",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "doc": "Create a transaction to import a disk image from an external source and create a standard image template.",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "configuration",
                        "type": "SoftLayer_Container_Virtual_Guest_Block_Device_Template_Configuration"
                    }
                ]
            },
            "createFromIcos": {
                "name": "createFromIcos",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "doc": "Create a process to import a disk image from ICOS and create a standard",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "configuration",
                        "type": "SoftLayer_Container_Virtual_Guest_Block_Device_Template_Configuration"
                    }
                ]
            },
            "createPublicArchiveTransaction": {
                "name": "createPublicArchiveTransaction",
                "type": "int",
                "doc": "Create a transaction to copy archived block devices into public repository",
                "parameters": [
                    {
                        "name": "groupName",
                        "type": "string",
                        "doc": "The group name for an existing archive",
                        "defaultValue": null
                    },
                    {
                        "name": "summary",
                        "type": "string",
                        "doc": "A summary describing the public image",
                        "defaultValue": null
                    },
                    {
                        "name": "note",
                        "type": "string",
                        "doc": "A long description describing the public image",
                        "defaultValue": null
                    },
                    {
                        "name": "locations",
                        "type": "SoftLayer_Location",
                        "typeArray": true,
                        "doc": "Destination location id(s) of the public image",
                        "defaultValue": null
                    }
                ]
            },
            "deleteByolAttribute": {
                "name": "deleteByolAttribute",
                "type": "boolean",
                "doc": "This method allows you to remove BYOL attribute for a given image template. "
            },
            "deleteCloudInitAttribute": {
                "name": "deleteCloudInitAttribute",
                "type": "boolean",
                "doc": "This method allows you to remove cloud init attribute for a given image template. "
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "doc": "Deleting a block device template group is different from the deletion of other objects.  A block device template group can contain several gigabytes of data in its disk images.  This may take some time to delete and requires a transaction to be created.  This method creates a transaction that will delete all resources associated with the block device template group. ",
                "maskable": true
            },
            "denySharingAccess": {
                "name": "denySharingAccess",
                "type": "boolean",
                "doc": "This method will deny another SoftLayer customer account's previously given access to provision CloudLayer Computing Instances from an image template group. Template access should only be removed from the parent template group object, not the child. ",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "The account id that you wish to deny sharing an image template group with."
                    }
                ]
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Edit an image template group's associated name and note. All other properties in the SoftLayer_Virtual_Guest_Block_Device_Template_Group data type are read-only. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                        "doc": "A skeleton SoftLayer_Virtual_Guest_Block_Device_Template_Group object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "findGcImagesByCurrentUser": {
                "name": "findGcImagesByCurrentUser",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "typeArray": true,
                "doc": "Find block device template groups containing a GC enabled cloudinit image for the current active user. A sorted collection of groups is returned. The Caller can optionally specify data center or region names to retrieve GC images from only those locations. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "dataCenters",
                        "type": "string",
                        "typeArray": true,
                        "doc": "The name of the region containing the images",
                        "defaultValue": null
                    },
                    {
                        "name": "regions",
                        "type": "string",
                        "typeArray": true,
                        "doc": "The name of the data center containing the images",
                        "defaultValue": null
                    }
                ]
            },
            "getAllAvailableCompatiblePlatformNames": {
                "name": "getAllAvailableCompatiblePlatformNames",
                "type": "string",
                "typeArray": true,
                "doc": "Get all available compatible platform names that can be added to a template group. ",
                "static": true
            },
            "getBootMode": {
                "name": "getBootMode",
                "type": "string",
                "doc": "This method returns the boot mode, if any, set on a given image template. "
            },
            "getCurrentCompatiblePlatformNames": {
                "name": "getCurrentCompatiblePlatformNames",
                "type": "string",
                "typeArray": true,
                "doc": "Get compatible platform names currently set on the template group. "
            },
            "getDefaultBootMode": {
                "name": "getDefaultBootMode",
                "type": "string",
                "doc": "This method returns the default boot mode set by the software description "
            },
            "getEncryptionAttributes": {
                "name": "getEncryptionAttributes",
                "type": "string",
                "typeArray": true,
                "doc": "This method returns an array of encryption values, or empty array if none are found "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "filterable": true,
                "maskable": true
            },
            "getPublicCustomerOwnedImages": {
                "name": "getPublicCustomerOwnedImages",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "typeArray": true,
                "doc": "This method gets all public customer owned image templates that the user is allowed to see. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getPublicImages": {
                "name": "getPublicImages",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "typeArray": true,
                "doc": "This method gets all public image templates that the user is allowed to see. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getRiasAccount": {
                "name": "getRiasAccount",
                "type": "SoftLayer_Container_Virtual_Guest_Block_Device_Template_Group_RiasAccount",
                "static": true,
                "parameters": [
                    {
                        "name": "secret",
                        "type": "string"
                    }
                ]
            },
            "getStorageLocations": {
                "name": "getStorageLocations",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "Returns the image storage locations. ",
                "maskable": true
            },
            "getSupportedBootModes": {
                "name": "getSupportedBootModes",
                "type": "string",
                "typeArray": true,
                "doc": "This method indicates which boot modes are supported by the image. "
            },
            "getTemplateDataCenterName": {
                "name": "getTemplateDataCenterName",
                "type": "string",
                "doc": "This method allows you to grab the first data center that the image(s) reside on so we can pull it from there. "
            },
            "getVhdImportSoftwareDescriptions": {
                "name": "getVhdImportSoftwareDescriptions",
                "type": "SoftLayer_Software_Description",
                "typeArray": true,
                "doc": "Returns an array of SoftLayer_Software_Description that are supported for VHD imports. ",
                "static": true,
                "maskable": true
            },
            "isByol": {
                "name": "isByol",
                "type": "boolean",
                "doc": "This method indicates whether or not this image is a customer supplied license image. "
            },
            "isByolCapableOperatingSystem": {
                "name": "isByolCapableOperatingSystem",
                "type": "boolean",
                "doc": "This method indicates whether or not this image uses an operating system capable of using a customer supplied license image. "
            },
            "isByolOnlyOperatingSystem": {
                "name": "isByolOnlyOperatingSystem",
                "type": "boolean",
                "doc": "This method indicates whether or not this image uses an operating system that requires using a customer supplied license image "
            },
            "isCloudInit": {
                "name": "isCloudInit",
                "type": "boolean",
                "doc": "This method indicates whether or not this image is a cloud-init image. "
            },
            "isCloudInitOnlyOperatingSystem": {
                "name": "isCloudInitOnlyOperatingSystem",
                "type": "boolean",
                "doc": "This method indicates whether or not this image uses an operating system that requires cloud init "
            },
            "isEncrypted": {
                "name": "isEncrypted",
                "type": "boolean",
                "doc": "This method indicates whether this image template contains an encrypted disk image. "
            },
            "permitSharingAccess": {
                "name": "permitSharingAccess",
                "type": "boolean",
                "doc": "This method will permit another SoftLayer customer account access to provision CloudLayer Computing Instances from an image template group. Template access should only be given to the parent template group object, not the child. ",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "int",
                        "doc": "The account id that you wish to share an image template group with."
                    }
                ]
            },
            "removeCompatiblePlatforms": {
                "name": "removeCompatiblePlatforms",
                "type": "boolean",
                "doc": "Removes compatible platforms on the template group. ",
                "parameters": [
                    {
                        "name": "platformNames",
                        "type": "string",
                        "typeArray": true
                    }
                ]
            },
            "removeLocations": {
                "name": "removeLocations",
                "type": "boolean",
                "doc": "This method will create transaction(s) to remove available locations from an archive image template.",
                "parameters": [
                    {
                        "name": "locations",
                        "type": "SoftLayer_Location",
                        "typeArray": true,
                        "doc": "to remove from the image template."
                    }
                ]
            },
            "removeSupportedBootMode": {
                "name": "removeSupportedBootMode",
                "type": "boolean",
                "doc": "This method allows you to remove a supported boot mode attribute for a given image template. ",
                "parameters": [
                    {
                        "name": "bootMode",
                        "type": "string",
                        "doc": "Boot mode type to add to SUPPORTED_BOOT_MODE."
                    }
                ]
            },
            "setAvailableLocations": {
                "name": "setAvailableLocations",
                "type": "boolean",
                "doc": "Create transaction(s) to set the archived block device available locations",
                "parameters": [
                    {
                        "name": "locations",
                        "type": "SoftLayer_Location",
                        "typeArray": true,
                        "doc": "location(s)of the archived block devices",
                        "defaultValue": null
                    }
                ]
            },
            "setBootMode": {
                "name": "setBootMode",
                "type": "boolean",
                "doc": "This method allows you to specify the boot mode for a given image template. ",
                "parameters": [
                    {
                        "name": "newBootMode",
                        "type": "string"
                    }
                ]
            },
            "setCompatiblePlatforms": {
                "name": "setCompatiblePlatforms",
                "type": "boolean",
                "doc": "Sets compatible platforms on the template group. ",
                "parameters": [
                    {
                        "name": "platformNames",
                        "type": "string",
                        "typeArray": true
                    }
                ]
            },
            "setTags": {
                "name": "setTags",
                "type": "boolean",
                "doc": "Set the tags for this template group.",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "string",
                        "doc": "comma separated list of tags inputted by user"
                    }
                ]
            }
        },
        "typeDoc": "The virtual block device template group data type presents the structure in which a group of archived image templates will be presented. The structure consists of a parent template group which contain multiple child template group objects.  Each child template group object represents the image template in a particular location. Unless editing/deleting a specific child template group object, it is best to use the parent object. \n\nA virtual block device template group, also known as an image template group, represents an image of a virtual guest instance. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "A block device template group's [[SoftLayer_Account|account]]."
            },
            "accountContacts": {
                "name": "accountContacts",
                "type": "SoftLayer_Account_Contact",
                "form": "relational",
                "typeArray": true
            },
            "accountReferences": {
                "name": "accountReferences",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group_Accounts",
                "form": "relational",
                "typeArray": true,
                "doc": "The accounts which may have read-only access to an image template group. Will only be populated for parent template group objects."
            },
            "blockDevices": {
                "name": "blockDevices",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template",
                "form": "relational",
                "typeArray": true,
                "doc": "The block devices that are part of an image template group"
            },
            "blockDevicesDiskSpaceTotal": {
                "name": "blockDevicesDiskSpaceTotal",
                "type": "float",
                "form": "relational",
                "doc": "The total disk space of all images in a image template group."
            },
            "byolFlag": {
                "name": "byolFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating that customer is providing the software licenses."
            },
            "children": {
                "name": "children",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational",
                "typeArray": true,
                "doc": "The image template groups that are clones of an image template group."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The location containing this image template group. Will only be populated for child template group objects."
            },
            "datacenters": {
                "name": "datacenters",
                "type": "SoftLayer_Location",
                "form": "relational",
                "typeArray": true,
                "doc": "A collection of locations containing a copy of this image template group. Will only be populated for parent template group objects."
            },
            "firstChild": {
                "name": "firstChild",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational",
                "doc": "The first clone of the image template group"
            },
            "flexImageFlag": {
                "name": "flexImageFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating if this is a flex image."
            },
            "globalIdentifier": {
                "name": "globalIdentifier",
                "type": "string",
                "form": "relational",
                "doc": "An image template's universally unique identifier."
            },
            "imageType": {
                "name": "imageType",
                "type": "SoftLayer_Virtual_Disk_Image_Type",
                "form": "relational",
                "doc": "The virtual disk image type of this template. Value will be populated on parent and child, but only supports object filtering on the parent."
            },
            "imageTypeKeyName": {
                "name": "imageTypeKeyName",
                "type": "string",
                "form": "relational",
                "doc": "The virtual disk image type keyname (e.g. SYSTEM, DISK_CAPTURE, ISO, etc) of this template. Value will be populated on parent and child, but only supports object filtering on the parent."
            },
            "nextGenFlag": {
                "name": "nextGenFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "A flag indicating if this is a next generation image."
            },
            "parent": {
                "name": "parent",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational",
                "doc": "The image template group that another image template group was cloned from."
            },
            "region": {
                "name": "region",
                "type": "SoftLayer_Network_Service_Resource",
                "form": "relational"
            },
            "regions": {
                "name": "regions",
                "type": "SoftLayer_Network_Service_Resource",
                "form": "relational",
                "typeArray": true
            },
            "sshKeys": {
                "name": "sshKeys",
                "type": "SoftLayer_Security_Ssh_Key",
                "form": "relational",
                "typeArray": true,
                "doc": "The ssh keys to be implemented on the server when provisioned or reloaded from an image template group."
            },
            "status": {
                "name": "status",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group_Status",
                "form": "relational",
                "doc": "A template group's status."
            },
            "storageRepository": {
                "name": "storageRepository",
                "type": "SoftLayer_Virtual_Storage_Repository",
                "form": "relational",
                "doc": "The storage repository that an image template group resides on."
            },
            "tagReferences": {
                "name": "tagReferences",
                "type": "SoftLayer_Tag_Reference",
                "form": "relational",
                "typeArray": true,
                "doc": "The tags associated with this image template group."
            },
            "transaction": {
                "name": "transaction",
                "type": "SoftLayer_Provisioning_Version1_Transaction",
                "form": "relational",
                "doc": "A transaction that is being performed on a image template group."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A block device template group's [[SoftLayer_Account|account]] ID "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a block device template group was created. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A block device template group's unique ID. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A user definable and optional name of a block device template group. "
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local",
                "doc": "A block device template group's user defined note. "
            },
            "parentId": {
                "name": "parentId",
                "type": "int",
                "form": "local",
                "doc": "A block device template group's [[SoftLayer_Virtual_Guest_Block_Device_Template_Group|parent]] ID.  This will only be set when a template group is created from a previously existing template group "
            },
            "publicFlag": {
                "name": "publicFlag",
                "type": "int",
                "form": "local"
            },
            "statusId": {
                "name": "statusId",
                "type": "int",
                "form": "local",
                "doc": "A block device template group's [[SoftLayer_Virtual_Guest_Block_Device_Template_Group_Status|status]] ID "
            },
            "summary": {
                "name": "summary",
                "type": "string",
                "form": "local",
                "doc": "A block device template group's user defined summary. "
            },
            "transactionId": {
                "name": "transactionId",
                "type": "int",
                "form": "local",
                "doc": "A block device template group's [[SoftLayer_Provisioning_Version1_Transaction|transaction]] ID.  This will only be set when there is a transaction being performed on the block device template group. "
            },
            "userRecordId": {
                "name": "userRecordId",
                "type": "int",
                "form": "local",
                "doc": "A block device template group's [[SoftLayer_User_Customer]] ID "
            },
            "accountContactCount": {
                "name": "accountContactCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "accountReferenceCount": {
                "name": "accountReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the accounts which may have read-only access to an image template group. Will only be populated for parent template group objects."
            },
            "blockDeviceCount": {
                "name": "blockDeviceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the block devices that are part of an image template group"
            },
            "childrenCount": {
                "name": "childrenCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the image template groups that are clones of an image template group."
            },
            "datacenterCount": {
                "name": "datacenterCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a collection of locations containing a copy of this image template group. Will only be populated for parent template group objects."
            },
            "regionCount": {
                "name": "regionCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            },
            "sshKeyCount": {
                "name": "sshKeyCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the ssh keys to be implemented on the server when provisioned or reloaded from an image template group."
            },
            "tagReferenceCount": {
                "name": "tagReferenceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the tags associated with this image template group."
            }
        }
    },
    "SoftLayer_Virtual_Guest_Block_Device_Template_Group_Accounts": {
        "name": "SoftLayer_Virtual_Guest_Block_Device_Template_Group_Accounts",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Virtual_Guest_Block_Device_Template_Group_Accounts data type represents the SoftLayer customer accounts which have access to provision CloudLayer Computing Instances from an image template group. \n\nAll accounts other than the image template group owner have read-only access to that image template group. \n\nIt is important to note that this data type should only exist to give accounts access to the parent template group object, not the child.  All image template sharing between accounts should occur on the parent object. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The [[SoftLayer_Account|account]] that an image template group is shared with."
            },
            "group": {
                "name": "group",
                "type": "SoftLayer_Virtual_Guest_Block_Device_Template_Group",
                "form": "relational",
                "doc": "The [[SoftLayer_Virtual_Guest_Block_Device_Template_Group|image template group]] that is shared with an account."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Account|account]] ID which will have access to an image. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date access was granted to an account. "
            },
            "groupId": {
                "name": "groupId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Virtual_Guest_Block_Device_Template_Group|group]] ID which access will be granted to. "
            }
        }
    },
    "SoftLayer_Virtual_Guest_Block_Device_Template_Group_Status": {
        "name": "SoftLayer_Virtual_Guest_Block_Device_Template_Group_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The virtual block device template group status data type represents the current status of the image template. Depending upon the status, the image template can be used for provisioning or reloading. \n\nFor an operating system reload, the image template will need to have a status of 'Active' or 'Deprecated'. For a provision, the image template will need to have a status of 'Active' \n\n",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Virtual_Guest_Boot_Parameter": {
        "name": "SoftLayer_Virtual_Guest_Boot_Parameter",
        "base": "SoftLayer_Entity",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "boolean",
                "static": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_Guest_Boot_Parameter",
                        "doc": "The SoftLayer_Virtual_Guest_Boot_Parameter object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean"
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_Guest_Boot_Parameter",
                        "doc": "A skeleton SoftLayer_Virtual_Guest_Boot_Parameter object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_Guest_Boot_Parameter",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational"
            },
            "guestBootParameterType": {
                "name": "guestBootParameterType",
                "type": "SoftLayer_Virtual_Guest_Boot_Parameter_Type",
                "form": "relational"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "guestBootParameterTypeId": {
                "name": "guestBootParameterTypeId",
                "type": "int",
                "form": "local"
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Virtual_Guest_Boot_Parameter_Type": {
        "name": "SoftLayer_Virtual_Guest_Boot_Parameter_Type",
        "base": "SoftLayer_Entity",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Virtual_Guest_Boot_Parameter_Type",
                "typeArray": true,
                "static": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_Guest_Boot_Parameter_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "Describes a virtual guest boot parameter. In this the word class is used in the context of arguments sent to cloud computing instances such as single user mode and boot into bash. ",
        "properties": {
            "bootOption": {
                "name": "bootOption",
                "type": "string",
                "form": "local",
                "doc": "Available boot options."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A description of the boot parameter"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Indentifier for record."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The key name of the boot parameter."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The common name of the boot parameter."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The virtual machine arguments"
            }
        }
    },
    "SoftLayer_Virtual_Guest_Network_Component": {
        "name": "SoftLayer_Virtual_Guest_Network_Component",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The virtual guest network component service provides a common interface to a [[SoftLayer_Virtual_Guest|computing instance's]] network component. Interaction with various third party APIs is not needed when implementing this service to administer your computing instances. ",
        "methods": {
            "disable": {
                "name": "disable",
                "type": "boolean",
                "doc": "Completely restrict all incoming and outgoing bandwidth traffic to a network component "
            },
            "enable": {
                "name": "enable",
                "type": "boolean",
                "doc": "Allow incoming and outgoing bandwidth traffic to a network component "
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "filterable": true,
                "maskable": true
            },
            "isPingable": {
                "name": "isPingable",
                "type": "boolean",
                "doc": "Issues a ping command and returns the success (true) or failure (false) of the ping command. "
            },
            "securityGroupsReady": {
                "name": "securityGroupsReady",
                "type": "boolean"
            }
        },
        "typeDoc": "The virtual guest network component data type presents the structure in which all computing instance network components are presented. Internally, the structure supports various virtualization platforms with no change to external interaction. \n\nA guest, also known as a virtual server, represents an allocation of resources on a virtual host. ",
        "properties": {
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The computing instance that this network component exists on."
            },
            "highAvailabilityFirewallFlag": {
                "name": "highAvailabilityFirewallFlag",
                "type": "boolean",
                "form": "relational"
            },
            "icpBinding": {
                "name": "icpBinding",
                "type": "SoftLayer_Virtual_Guest_Network_Component_IcpBinding",
                "form": "relational"
            },
            "ipAddressBindings": {
                "name": "ipAddressBindings",
                "type": "SoftLayer_Virtual_Guest_Network_Component_IpAddress",
                "form": "relational",
                "typeArray": true,
                "doc": "The records of all IP addresses bound to a computing instance's network component."
            },
            "networkComponentFirewall": {
                "name": "networkComponentFirewall",
                "type": "SoftLayer_Network_Component_Firewall",
                "form": "relational",
                "doc": "The upstream network component firewall."
            },
            "networkVlan": {
                "name": "networkVlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "The VLAN that a computing instance network component's subnet is associated with."
            },
            "primaryIpAddress": {
                "name": "primaryIpAddress",
                "type": "string",
                "form": "relational",
                "doc": "A computing instance network component's primary IP address."
            },
            "primaryIpAddressRecord": {
                "name": "primaryIpAddressRecord",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational"
            },
            "primarySubnet": {
                "name": "primarySubnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "doc": "A network component's subnet for its primary IP address"
            },
            "primaryVersion6IpAddressRecord": {
                "name": "primaryVersion6IpAddressRecord",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "A network component's primary IPv6 IP address record."
            },
            "router": {
                "name": "router",
                "type": "SoftLayer_Hardware_Router",
                "form": "relational",
                "doc": "A network component's routers."
            },
            "securityGroupBindings": {
                "name": "securityGroupBindings",
                "type": "SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding",
                "form": "relational",
                "typeArray": true,
                "doc": "The bindings associating security groups to this network component"
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "relational",
                "typeArray": true,
                "doc": "A network component's subnets. A subnet is a group of IP addresses"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a computing instance's network component was created."
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "The unique ID of the [[SoftLayer_Virtual_Guest|computing instance]] that this network component belongs to. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "A computing instance's network component's unique ID. "
            },
            "macAddress": {
                "name": "macAddress",
                "type": "string",
                "form": "local",
                "doc": "A computing instance network component's unique MAC address. "
            },
            "maxSpeed": {
                "name": "maxSpeed",
                "type": "int",
                "form": "local",
                "doc": "A computing instance network component's maximum allowed speed, measured in Mbit per second. ''maxSpeed'' is determined by the capabilities of the network interface and the port speed purchased on your SoftLayer computing instance. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a computing instance's network component was last modified."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A computing instance network component's short name. This is usually ''eth''. Use this in conjunction with the ''port'' property to identify a network component. For instance, the \"eth0\" interface on a server has the network component name \"eth\" and port 0. "
            },
            "networkId": {
                "name": "networkId",
                "type": "int",
                "form": "local",
                "doc": "A computing instance's network component's [[SoftLayer_Virtual_Network|network]] ID "
            },
            "port": {
                "name": "port",
                "type": "int",
                "form": "local",
                "doc": "A computing instance network component's port number. Most computing instances have more than one network interface. The port property separates these interfaces. Use this in conjunction with the ''name'' property to identify a network component. For instance, the \"eth0\" interface on a server has the network component name \"eth\" and port 0. "
            },
            "speed": {
                "name": "speed",
                "type": "int",
                "form": "local",
                "doc": "A computing instance network component's speed, measured in Mbit per second."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "A computing instance network component's status. This can be one of four possible values: \"ACTIVE\", \"DISABLED\", \"INACTIVE\", or \"ABUSE_DISCONNECT\". \"ACTIVE\" network components are enabled and in use on a cloud instance. \"ABUSE_DISCONNECT\" status components have been administratively disabled by SoftLayer accounting or abuse. \"DISABLED\" components have been administratively disabled by you, the user. You should never see a network interface in MACWAIT state. If you happen to see one please contact SoftLayer support. "
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "A computing instance's network component's unique ID on a virtualization platform. "
            },
            "ipAddressBindingCount": {
                "name": "ipAddressBindingCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the records of all IP addresses bound to a computing instance's network component."
            },
            "securityGroupBindingCount": {
                "name": "securityGroupBindingCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the bindings associating security groups to this network component"
            },
            "subnetCount": {
                "name": "subnetCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of a network component's subnets. A subnet is a group of IP addresses"
            }
        }
    },
    "SoftLayer_Virtual_Guest_Network_Component_IcpBinding": {
        "name": "SoftLayer_Virtual_Guest_Network_Component_IcpBinding",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "doc": "The network component associated with this object."
            },
            "interfaceId": {
                "name": "interfaceId",
                "type": "string",
                "form": "local"
            },
            "ipAllocationId": {
                "name": "ipAllocationId",
                "type": "string",
                "form": "local"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of IP that this IP allocation id record references.  Set to PRIMARY for the first servic port. "
            },
            "vpcId": {
                "name": "vpcId",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Virtual_Guest_Network_Component_IpAddress": {
        "name": "SoftLayer_Virtual_Guest_Network_Component_IpAddress",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Virtual_Guest_Network_Component_IpAddress data type contains general information relating to the binding of a single network component to a single SoftLayer IP address. ",
        "properties": {
            "ipAddress": {
                "name": "ipAddress",
                "type": "SoftLayer_Network_Subnet_IpAddress",
                "form": "relational",
                "doc": "The IP address associated with this object's network component."
            },
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational",
                "doc": "The network component associated with this object's IP address."
            },
            "ipAddressId": {
                "name": "ipAddressId",
                "type": "int",
                "form": "local",
                "doc": "The unique ID of the [[SoftLayer_Network_Subnet_ipAddress|ip address]] this virtual IP address is associated with. "
            },
            "port": {
                "name": "port",
                "type": "int",
                "form": "local",
                "doc": "The port that a network component has reserved.  This field is only required for some IP address types. "
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of IP that this IP address record references.  Some examples are PRIMARY for the network component's primary IP address and CONSOLE_PROXY which represents the IP information for logging into a computing instance's console. "
            }
        }
    },
    "SoftLayer_Virtual_Guest_Power_State": {
        "name": "SoftLayer_Virtual_Guest_Power_State",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The power state class provides a common set of values for which a guest's power state will be presented in the SoftLayer API. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of a power state "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The key name of a power state "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a power state "
            }
        }
    },
    "SoftLayer_Virtual_Guest_Status": {
        "name": "SoftLayer_Virtual_Guest_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Virtual_Guest_SupplementalCreateObjectOptions": {
        "name": "SoftLayer_Virtual_Guest_SupplementalCreateObjectOptions",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "bootMode": {
                "name": "bootMode",
                "type": "string",
                "form": "local",
                "doc": "The mode used to boot the [[SoftLayer_Virtual_Guest]].  Supported values are 'PV' and 'HVM'. "
            },
            "flavorKeyName": {
                "name": "flavorKeyName",
                "type": "string",
                "form": "local",
                "doc": "When set the startCpus and maxMemory are defined by the flavor. If the flavor includes local storage blockDevice 0 is also defined by the flavor. When startCpus, maxMemory, or blockDevice 0 are also provided on the template object they are validated against the flavor provided. "
            },
            "immediateApprovalOnlyFlag": {
                "name": "immediateApprovalOnlyFlag",
                "type": "boolean",
                "form": "local",
                "doc": "When explicitly set to true, createObject(s) will fail unless the order is started automatically. This can be used by automated systems to fail an order that might otherwise require manual approval. For multi-guest orders via [[SoftLayer_Virtual_Guest/createObjects|createObjects]], this value must be the exact same for every item. "
            },
            "postInstallScriptUri": {
                "name": "postInstallScriptUri",
                "type": "string",
                "form": "local",
                "doc": "URI of the script to be downloaded and executed after installation is complete. This can be different for each virtual guest when multiple are sent to [[SoftLayer_Virtual_Guest/createObjects|createObjects]]. "
            }
        }
    },
    "SoftLayer_Virtual_Guest_Type": {
        "name": "SoftLayer_Virtual_Guest_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Virtual_Guest_Type models the type of a [[SoftLayer_Virtual_Guest]] (PUBLIC | DEDICATED | PRIVATE) ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Virtual_Guest_Vpc_IpAllocation": {
        "name": "SoftLayer_Virtual_Guest_Vpc_IpAllocation",
        "base": "SoftLayer_Entity",
        "noservice": true
    },
    "SoftLayer_Virtual_Guest_Vpc_Subnet": {
        "name": "SoftLayer_Virtual_Guest_Vpc_Subnet",
        "base": "SoftLayer_Entity",
        "noservice": true
    },
    "SoftLayer_Virtual_Host": {
        "name": "SoftLayer_Virtual_Host",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The virtual host service provides a common interface to any virtualization platform supported by SoftLayer. Interaction with various third party APIs is not needed when implementing this service to administer your hosts. ",
        "methods": {
            "getLiveGuestByUuid": {
                "name": "getLiveGuestByUuid",
                "type": "SoftLayer_Virtual_Guest",
                "doc": "Query a virtualization platform directly to retrieve details regarding a guest. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "doc": "The Universally Unique Identifier for the guest to fetch"
                    }
                ]
            },
            "getLiveGuestList": {
                "name": "getLiveGuestList",
                "type": "SoftLayer_Virtual_Guest",
                "typeArray": true,
                "doc": "Query a virtualization platform directly to retrieve a list of known guests. ",
                "maskable": true
            },
            "getLiveGuestRecentMetricData": {
                "name": "getLiveGuestRecentMetricData",
                "type": "SoftLayer_Metric_Tracking_Object",
                "typeArray": true,
                "doc": "Query a virtualization platform directly to retrieve recent metric data for a guest. ",
                "maskable": true,
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "doc": "The Universally Unique Identifier for the guest to fetch"
                    },
                    {
                        "name": "time",
                        "type": "int",
                        "doc": "Start time",
                        "defaultValue": 300
                    },
                    {
                        "name": "limit",
                        "type": "int",
                        "doc": "Number of data points to return",
                        "defaultValue": 60
                    },
                    {
                        "name": "interval",
                        "type": "int",
                        "doc": "Data point stepping",
                        "defaultValue": 5
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_Host",
                "filterable": true,
                "maskable": true
            },
            "pauseLiveGuest": {
                "name": "pauseLiveGuest",
                "type": "boolean",
                "doc": "Pause a virtual guest ",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "doc": "Unique identifier for the guest"
                    }
                ]
            },
            "powerCycleLiveGuest": {
                "name": "powerCycleLiveGuest",
                "type": "boolean",
                "doc": "Power cycle a virtual guest ",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "doc": "Unique identifier for the guest"
                    }
                ]
            },
            "powerOffLiveGuest": {
                "name": "powerOffLiveGuest",
                "type": "boolean",
                "doc": "Power off a virtual guest ",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "doc": "Unique identifier for the guest"
                    }
                ]
            },
            "powerOnLiveGuest": {
                "name": "powerOnLiveGuest",
                "type": "boolean",
                "doc": "Power on a virtual guest ",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "doc": "Unique identifier for the guest"
                    }
                ]
            },
            "rebootSoftLiveGuest": {
                "name": "rebootSoftLiveGuest",
                "type": "boolean",
                "doc": "Attempt to complete a soft reboot of a guest by shutting down the operating system. ",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "doc": "Unique identifier for the guest"
                    }
                ]
            },
            "resumeLiveGuest": {
                "name": "resumeLiveGuest",
                "type": "boolean",
                "doc": "Resume a virtual guest ",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string",
                        "doc": "Unique identifier for the guest"
                    }
                ]
            }
        },
        "typeDoc": "The virtual host represents the platform on which virtual guests reside. At times a virtual host has no allocations on the physical server, however with many modern platforms it is a virtual machine with small CPU and Memory allocations that runs in the Control Domain. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account which a virtual host belongs to."
            },
            "billedPerGuestFlag": {
                "name": "billedPerGuestFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Boolean flag indicating whether this virtualization platform gets billed per guest rather than at a fixed rate."
            },
            "billedPerMemoryUsageFlag": {
                "name": "billedPerMemoryUsageFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Boolean flag indicating whether this virtualization platform gets billed per memory usage rather than at a fixed rate."
            },
            "guests": {
                "name": "guests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The guests associated with a virtual host."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware_Server",
                "form": "relational",
                "doc": "The hardware record which a virtual host resides on."
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object",
                "form": "relational",
                "doc": "The metric tracking object for this virtual host."
            },
            "pciDevices": {
                "name": "pciDevices",
                "type": "SoftLayer_Virtual_Host_PciDevice",
                "form": "relational",
                "typeArray": true
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "A virtual host's associated account id "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a virtual host was created. "
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A virtual host's description. "
            },
            "enabledFlag": {
                "name": "enabledFlag",
                "type": "int",
                "form": "local",
                "doc": "The enabled flag specifies whether a virtual host can run guests. "
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "A hardware device which a virtual host resides. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for a virtual host. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a virtual host was last modified. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A virtual host's name. "
            },
            "physicalMemoryCapacity": {
                "name": "physicalMemoryCapacity",
                "type": "int",
                "form": "local",
                "doc": "The amount of memory physically available for a virtual host. "
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "Unique ID for a virtual host's record on a virtualization platform. "
            },
            "guestCount": {
                "name": "guestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the guests associated with a virtual host."
            },
            "pciDeviceCount": {
                "name": "pciDeviceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of "
            }
        }
    },
    "SoftLayer_Virtual_Host_PciDevice": {
        "name": "SoftLayer_Virtual_Host_PciDevice",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This type represents a PCI device on a host. ",
        "properties": {
            "hardwareComponentModel": {
                "name": "hardwareComponentModel",
                "type": "SoftLayer_Hardware_Component_Model",
                "form": "relational"
            },
            "host": {
                "name": "host",
                "type": "SoftLayer_Virtual_Host",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "ID of the PCI device. "
            },
            "uuid": {
                "name": "uuid",
                "type": "string",
                "form": "local",
                "doc": "The unique id of the PCI device's record on a virtualization platform. "
            },
            "xenPciId": {
                "name": "xenPciId",
                "type": "string",
                "form": "local",
                "doc": "The BDF (Domain:Bus:Device.Function) id of the PCI device in XenServer. "
            }
        }
    },
    "SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding": {
        "name": "SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Virtual_Network_SecurityGroup_NetworkComponentBinding data type contains general information for a single binding. A binding associates a [[SoftLayer_Virtual_Guest_Network_Component]] with a [[SoftLayer_Network_SecurityGroup]]. ",
        "properties": {
            "networkComponent": {
                "name": "networkComponent",
                "type": "SoftLayer_Virtual_Guest_Network_Component",
                "form": "relational"
            },
            "securityGroup": {
                "name": "securityGroup",
                "type": "SoftLayer_Network_SecurityGroup",
                "form": "relational"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The unique ID for a binding."
            },
            "networkComponentId": {
                "name": "networkComponentId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the network component."
            },
            "securityGroupId": {
                "name": "securityGroupId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the security group."
            }
        }
    },
    "SoftLayer_Virtual_PlacementGroup": {
        "name": "SoftLayer_Virtual_PlacementGroup",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Virtual_PlacementGroup is a collection of virtual guests to be placed relative to each other according to a rule. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Virtual_PlacementGroup",
                "doc": "Add a placement group to your account for use during VSI provisioning. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_PlacementGroup",
                        "doc": "The SoftLayer_Virtual_PlacementGroup object that you wish to create."
                    }
                ]
            },
            "deleteObject": {
                "name": "deleteObject",
                "type": "boolean",
                "doc": "Delete a placement group from your account. "
            },
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Update a placement group. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_PlacementGroup",
                        "doc": "A skeleton SoftLayer_Virtual_PlacementGroup object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getAvailableRouters": {
                "name": "getAvailableRouters",
                "type": "SoftLayer_Hardware",
                "typeArray": true,
                "doc": "Returns all routers available for use with placement groups. If a datacenter location ID is provided, this method will further restrict the list of routers to ones contained within that datacenter. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "datacenterId",
                        "type": "int",
                        "doc": "An optional datacenter ID to restrict the list of routers to.",
                        "defaultValue": null
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_PlacementGroup",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This data type presents the structure for a virtual guest placement group. The data type contains relational properties to the virtual guest placement group rule class. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that the placement group is implemented on."
            },
            "backendRouter": {
                "name": "backendRouter",
                "type": "SoftLayer_Hardware_Router_Backend",
                "form": "relational",
                "doc": "The router the placement group is implemented on."
            },
            "guests": {
                "name": "guests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The virtual guests that are members of the placement group."
            },
            "rule": {
                "name": "rule",
                "type": "SoftLayer_Virtual_PlacementGroup_Rule",
                "form": "relational",
                "doc": "The placement rule that the placement group is implementing."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The unique ID of the account that created the placement group. "
            },
            "backendRouterId": {
                "name": "backendRouterId",
                "type": "int",
                "form": "local",
                "doc": "The placement group's backend router's associated unique ID. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The placement group's date of creation. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The placement group's associated unique ID. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The placement group's date of most recent modification. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The placement group's name. "
            },
            "ruleId": {
                "name": "ruleId",
                "type": "int",
                "form": "local",
                "doc": "The associated unique ID of the placement group's rule. "
            },
            "guestCount": {
                "name": "guestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the virtual guests that are members of the placement group."
            }
        }
    },
    "SoftLayer_Virtual_PlacementGroup_Rule": {
        "name": "SoftLayer_Virtual_PlacementGroup_Rule",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Virtual_PlacementGroup_Rule is the placement rule that a virtual guest placement group follows. ",
        "methods": {
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Virtual_PlacementGroup_Rule",
                "typeArray": true,
                "doc": "Get all placement group rules.",
                "static": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_PlacementGroup_Rule",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This data type presents the structure of a virtual guest placement group rule. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The placement group rule's associated unique ID. "
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The placement group rule's key name. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The placement group rule's name. "
            }
        }
    },
    "SoftLayer_Virtual_ReservedCapacityGroup": {
        "name": "SoftLayer_Virtual_ReservedCapacityGroup",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Virtual_ReservedCapacityGroup reserves capacity for a group of guests that have not yet been provisioned. ",
        "methods": {
            "editObject": {
                "name": "editObject",
                "type": "boolean",
                "doc": "Update a reserved capacity group. ",
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Virtual_ReservedCapacityGroup",
                        "doc": "A skeleton SoftLayer_Virtual_ReservedCapacityGroup object with only the properties defined that you wish to change. Unchanged properties are left alone."
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This data type presents the structure for a virtual reserved capacity group. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The account that the reserved capacity group is implemented on."
            },
            "availableInstances": {
                "name": "availableInstances",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup_Instance",
                "form": "relational",
                "typeArray": true,
                "doc": "The instances available for guest provisions on this reserved capacity group."
            },
            "backendRouter": {
                "name": "backendRouter",
                "type": "SoftLayer_Hardware_Router_Backend",
                "form": "relational",
                "doc": "The router the reserved capacity group is implemented on."
            },
            "instances": {
                "name": "instances",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup_Instance",
                "form": "relational",
                "typeArray": true,
                "doc": "The guest instances that are members of this reserved capacity group."
            },
            "instancesCount": {
                "name": "instancesCount",
                "type": "unsignedInt",
                "form": "relational",
                "doc": "The number of instances that are members of this reserved capacity group."
            },
            "occupiedInstances": {
                "name": "occupiedInstances",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup_Instance",
                "form": "relational",
                "typeArray": true,
                "doc": "The instances already occupied by a guest on this reserved capacity group."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The unique ID of the account that created the reserved capacity group. "
            },
            "backendRouterId": {
                "name": "backendRouterId",
                "type": "int",
                "form": "local",
                "doc": "The reserved capacity group's backend router's associated unique ID. "
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the reserved capacity group was created. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The reserved capacity group's associated unique ID. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the reserved capacity group was last modified. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The reserved capacity group's name. "
            },
            "availableInstanceCount": {
                "name": "availableInstanceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the instances available for guest provisions on this reserved capacity group."
            },
            "instanceCount": {
                "name": "instanceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the guest instances that are members of this reserved capacity group."
            },
            "occupiedInstanceCount": {
                "name": "occupiedInstanceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the instances already occupied by a guest on this reserved capacity group."
            }
        }
    },
    "SoftLayer_Virtual_ReservedCapacityGroup_Instance": {
        "name": "SoftLayer_Virtual_ReservedCapacityGroup_Instance",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Virtual_ReservedCapacityGroup_Instance reserves capacity for a single instance of a reserved capacity group. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup_Instance",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "This data type presents the structure for a virtual reserved capacity group instance. ",
        "properties": {
            "availableFlag": {
                "name": "availableFlag",
                "type": "boolean",
                "form": "relational",
                "doc": "Flag to indecate whether or not the reserved instance is available or not."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The billing item for the reserved capacity group instance."
            },
            "guest": {
                "name": "guest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "doc": "The virtual guest associated with this reserved capacity group instance."
            },
            "reservedCapacityGroup": {
                "name": "reservedCapacityGroup",
                "type": "SoftLayer_Virtual_ReservedCapacityGroup",
                "form": "relational",
                "doc": "The reserved instances that are members of this reserved capacity group."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the reserved capacity group instance was created. "
            },
            "guestId": {
                "name": "guestId",
                "type": "int",
                "form": "local",
                "doc": "The virtual guest ID associated with this reserved capacity group instance. "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The reserved capacity group instance's associated unique ID. "
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that the reserved capacity group instance was last modified. "
            },
            "reservedCapacityGroupId": {
                "name": "reservedCapacityGroupId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the reserved capacity group this instance is associated with. "
            }
        }
    },
    "SoftLayer_Virtual_Storage_Repository": {
        "name": "SoftLayer_Virtual_Storage_Repository",
        "base": "SoftLayer_Entity",
        "serviceDoc": "Storage Repositories are storage systems that are accessible through the internet and can be accessed through many types of devices, interfaces, and other resources such as NFS (Network File System).  They can contain 1 or more [[SoftLayer_Virtual_Disk_Image]] and can be attached to more than one [[SoftLayer_Virtual_Host|host]]. ",
        "methods": {
            "getArchiveDiskUsageRatePerGb": {
                "name": "getArchiveDiskUsageRatePerGb",
                "type": "decimal",
                "doc": "Returns the archive storage disk usage fee rate per gigabyte. "
            },
            "getAverageDiskUsageMetricDataFromInfluxByDate": {
                "name": "getAverageDiskUsageMetricDataFromInfluxByDate",
                "type": "float",
                "doc": "Returns the average disk space usage for a storage repository. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ]
            },
            "getAverageUsageMetricDataByDate": {
                "name": "getAverageUsageMetricDataByDate",
                "type": "float",
                "doc": "Returns the average disk space usage for a storage repository. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Virtual_Storage_Repository",
                "filterable": true,
                "maskable": true
            },
            "getPublicImageDiskUsageRatePerGb": {
                "name": "getPublicImageDiskUsageRatePerGb",
                "type": "decimal",
                "doc": "Returns the public image storage disk usage fee rate per gigabyte. "
            },
            "getStorageLocations": {
                "name": "getStorageLocations",
                "type": "SoftLayer_Location",
                "typeArray": true,
                "doc": "Returns the public image storage locations. ",
                "maskable": true
            },
            "getUsageMetricDataByDate": {
                "name": "getUsageMetricDataByDate",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "typeArray": true,
                "doc": "Retrieve disk usage data on a [[SoftLayer_Virtual_Guest|Cloud Computing Instance]] image for the time range you provide.  Each data entry objects contain ''dateTime'' and ''counter'' properties. ''dateTime'' property indicates the time that the disk usage data was measured and ''counter'' property holds the disk usage in bytes. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ]
            },
            "getUsageMetricImageByDate": {
                "name": "getUsageMetricImageByDate",
                "type": "SoftLayer_Container_Bandwidth_GraphOutputs",
                "doc": "Returns a disk usage image based on disk usage specified by the input parameters. ",
                "parameters": [
                    {
                        "name": "startDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the start date of the graph"
                    },
                    {
                        "name": "endDateTime",
                        "type": "dateTime",
                        "doc": "datetime of the ending date of the graph"
                    }
                ]
            }
        },
        "typeDoc": "The SoftLayer_Virtual_Storage_Repository represents a web based storage system that can be accessed through many types of devices, interfaces, and other resources. ",
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The [[SoftLayer_Account|account]] that a storage repository belongs to."
            },
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The current billing item for a storage repository."
            },
            "datacenter": {
                "name": "datacenter",
                "type": "SoftLayer_Location",
                "form": "relational",
                "doc": "The datacenter that a virtual storage repository resides in."
            },
            "diskImages": {
                "name": "diskImages",
                "type": "SoftLayer_Virtual_Disk_Image",
                "form": "relational",
                "typeArray": true,
                "doc": "The [[SoftLayer_Virtual_Disk_Image|disk images]] that are in a storage repository. Disk images are the virtual hard drives for a virtual guest."
            },
            "guests": {
                "name": "guests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "relational",
                "typeArray": true,
                "doc": "The computing instances that have disk images in a storage repository."
            },
            "metricTrackingObject": {
                "name": "metricTrackingObject",
                "type": "SoftLayer_Metric_Tracking_Object_Virtual_Storage_Repository",
                "form": "relational"
            },
            "publicImageBillingItem": {
                "name": "publicImageBillingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational",
                "doc": "The current billing item for a public storage repository."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Virtual_Storage_Repository_Type",
                "form": "relational",
                "doc": "A storage repository's [[SoftLayer_Virtual_Storage_Repository_Type|type]]."
            },
            "capacity": {
                "name": "capacity",
                "type": "float",
                "form": "local",
                "doc": "A storage repositories capacity measured in Giga-Bytes (GB) "
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A storage repositories description that describes its purpose or contents "
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique ID for a storage repository. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A storage repositories name that describes its purpose or contents "
            },
            "publicFlag": {
                "name": "publicFlag",
                "type": "int",
                "form": "local"
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "A storage repositories [[SoftLayer_Virtual_Storage_Repository_Type|type]] ID "
            },
            "diskImageCount": {
                "name": "diskImageCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the [[SoftLayer_Virtual_Disk_Image|disk images]] that are in a storage repository. Disk images are the virtual hard drives for a virtual guest."
            },
            "guestCount": {
                "name": "guestCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the computing instances that have disk images in a storage repository."
            }
        }
    },
    "SoftLayer_Virtual_Storage_Repository_Type": {
        "name": "SoftLayer_Virtual_Storage_Repository_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer employs many different types of repositories that computing instances use as their storage volume. SoftLayer_Virtual_Storage_Repository_Type models a single storage type. Common types of storage repositories include networked file systems, logical volume management, and local disk volumes for swap and page file management. ",
        "properties": {
            "storageRepositories": {
                "name": "storageRepositories",
                "type": "SoftLayer_Virtual_Storage_Repository",
                "form": "relational",
                "typeArray": true,
                "doc": "The storage repositories on a SoftLayer customer account that belong to this type."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A brief description os a storage repository type."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A storage repository type's name."
            },
            "storageRepositoryCount": {
                "name": "storageRepositoryCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of the storage repositories on a SoftLayer customer account that belong to this type."
            }
        }
    },
    "SoftLayer_Workload_Citrix_Client": {
        "name": "SoftLayer_Workload_Citrix_Client",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Workload_Citrix_Client data type contains functionality to validate a Citrix account. ",
        "methods": {
            "createResourceLocation": {
                "name": "createResourceLocation",
                "type": "SoftLayer_Workload_Citrix_Client_Response",
                "static": true,
                "parameters": [
                    {
                        "name": "citrixCredentials",
                        "type": "SoftLayer_Workload_Citrix_Request",
                        "doc": "null $citrixCredentials"
                    }
                ]
            },
            "getResourceLocations": {
                "name": "getResourceLocations",
                "type": "SoftLayer_Workload_Citrix_Client_Response",
                "static": true,
                "parameters": [
                    {
                        "name": "citrixCredentials",
                        "type": "SoftLayer_Workload_Citrix_Request",
                        "doc": "null $citrixCredentials"
                    }
                ]
            },
            "validateCitrixCredentials": {
                "name": "validateCitrixCredentials",
                "type": "SoftLayer_Workload_Citrix_Client_Response",
                "static": true,
                "parameters": [
                    {
                        "name": "citrixCredentials",
                        "type": "SoftLayer_Workload_Citrix_Request",
                        "doc": "null $citrixCredentials"
                    }
                ]
            }
        }
    },
    "SoftLayer_Workload_Citrix_Client_Response": {
        "name": "SoftLayer_Workload_Citrix_Client_Response",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "messageId": {
                "name": "messageId",
                "type": "string",
                "form": "local",
                "doc": "messageId of Citrix account validation response."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "status of Citrix account validation."
            },
            "statusMessage": {
                "name": "statusMessage",
                "type": "string",
                "form": "local",
                "doc": "status message of Citrix account validation."
            }
        }
    },
    "SoftLayer_Workload_Citrix_Client_Response_ResourceLocations": {
        "name": "SoftLayer_Workload_Citrix_Client_Response_ResourceLocations",
        "base": "SoftLayer_Workload_Citrix_Client_Response",
        "noservice": true,
        "properties": {
            "resourceLocations": {
                "name": "resourceLocations",
                "type": "string",
                "form": "local",
                "typeArray": true
            }
        }
    },
    "SoftLayer_Workload_Citrix_Deployment": {
        "name": "SoftLayer_Workload_Citrix_Deployment",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Workload_Citrix_Deployment service allows viewing the resources ordered for Citrix Virtual Apps and Desktops. \n\nThe deployment resources include Cloud Connectors, Active Directory domain controller, Bare Metal servers, File Storage, VLAN, Primary/Portable subnets, DHCP server, and Proxy server. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Workload_Citrix_Deployment",
                "doc": "Creates a new Citrix Virtual Apps and Desktops deployment. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Workload_Citrix_Deployment",
                        "doc": "The SoftLayer_Workload_Citrix_Deployment object that you wish to create."
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Workload_Citrix_Deployment",
                "typeArray": true,
                "doc": "Get all Citrix Virtual Apps And Desktop deployments. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getDeployment": {
                "name": "getDeployment",
                "type": "SoftLayer_Workload_Citrix_Deployment_Response",
                "doc": "Returns a response object [[SoftLayer_Workload_Citrix_Deployment_Response]] which represents the CVAD deployment [[SoftLayer_Workload_Citrix_Deployment]] together with all the resources ordered under the CVAD order. \n\nThe deployment resources are represented by object [[SoftLayer_Workload_Citrix_Deployment_Resource_Response]]. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "deploymentId",
                        "type": "int"
                    }
                ]
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Workload_Citrix_Deployment",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "relational",
                "doc": "The [[SoftLayer_Account]] to which the deployment belongs."
            },
            "resources": {
                "name": "resources",
                "type": "SoftLayer_Workload_Citrix_Deployment_Resource",
                "form": "relational",
                "typeArray": true,
                "doc": "It contains a collection of items under the CVAD deployment."
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Workload_Citrix_Deployment_Type",
                "form": "relational",
                "doc": "It shows if the deployment is for Citrix Hypervisor or VMware."
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "relational",
                "doc": "It is the [[SoftLayer_User_Customer]] who placed the order for CVAD."
            },
            "vlan": {
                "name": "vlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "relational",
                "doc": "It is the VLAN resource for the CVAD deployment."
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account ID to which the deployment belongs."
            },
            "activeDirectoryTopology": {
                "name": "activeDirectoryTopology",
                "type": "string",
                "form": "local",
                "doc": "Topology used for the Citrix Virtual Apps And  Desktop deployment."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date when this record was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "It is the unique identifier for the deployment."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date when this record was last modified."
            },
            "typeId": {
                "name": "typeId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Workload_Citrix_Deployment_Type]] of the deployment."
            },
            "userRecordId": {
                "name": "userRecordId",
                "type": "int",
                "form": "local",
                "doc": "The identifier for the customer who placed the CVAD order."
            },
            "vlanId": {
                "name": "vlanId",
                "type": "int",
                "form": "local",
                "doc": "VLAN ID of the deployment."
            },
            "vmwareOrderId": {
                "name": "vmwareOrderId",
                "type": "string",
                "form": "local",
                "doc": "It is an internal identifier for the VMware solution. It gets set if the CVAD order is for VMware. "
            },
            "resourceCount": {
                "name": "resourceCount",
                "type": "unsignedLong",
                "form": "count",
                "doc": "A count of it contains a collection of items under the CVAD deployment."
            }
        }
    },
    "SoftLayer_Workload_Citrix_Deployment_Resource": {
        "name": "SoftLayer_Workload_Citrix_Deployment_Resource",
        "base": "SoftLayer_Entity",
        "serviceDoc": "SoftLayer_Workload_Citrix_Deployment_Resource represents the resource of Citrix Virtual Apps & Desktops deployment. ",
        "methods": {
            "createObject": {
                "name": "createObject",
                "type": "SoftLayer_Workload_Citrix_Deployment_Resource",
                "doc": "This will add the resource into CVAD deployment. ",
                "static": true,
                "maskable": true,
                "parameters": [
                    {
                        "name": "templateObject",
                        "type": "SoftLayer_Workload_Citrix_Deployment_Resource",
                        "doc": "The SoftLayer_Workload_Citrix_Deployment_Resource object that you wish to create."
                    }
                ]
            },
            "getAllObjects": {
                "name": "getAllObjects",
                "type": "SoftLayer_Workload_Citrix_Deployment_Resource",
                "typeArray": true,
                "doc": "Get all the resources of Citrix Deployments. ",
                "static": true,
                "limitable": true,
                "filterable": true,
                "maskable": true
            },
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Workload_Citrix_Deployment_Resource",
                "doc": "getObject retrieves the SoftLayer_Workload_Citrix_Deployment_Resource object whose ID number corresponds to the ID number of the init parameter passed to the SoftLayer_Workload_Citrix_Deployment_Resource service. You can only retrieve resources that are assigned to your portal user's account. ",
                "filterable": true,
                "maskable": true
            }
        },
        "typeDoc": "The SoftLayer_Workload_Citrix_Deployment_Resource type contains the information of the resource such as the Deployment ID, resource's Billing Item ID, Order ID and Role of the resource in the CVAD deployment. ",
        "properties": {
            "billingItem": {
                "name": "billingItem",
                "type": "SoftLayer_Billing_Item",
                "form": "relational"
            },
            "deployment": {
                "name": "deployment",
                "type": "SoftLayer_Workload_Citrix_Deployment",
                "form": "relational"
            },
            "order": {
                "name": "order",
                "type": "SoftLayer_Billing_Order",
                "form": "relational"
            },
            "role": {
                "name": "role",
                "type": "SoftLayer_Workload_Citrix_Deployment_Resource_Role",
                "form": "relational"
            },
            "billingItemId": {
                "name": "billingItemId",
                "type": "int",
                "form": "local",
                "doc": "Billing item ID of the resource"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The point in time at which the resource was ordered."
            },
            "deploymentId": {
                "name": "deploymentId",
                "type": "int",
                "form": "local",
                "doc": "CVAD Deployment ID of the resource"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Unique Identifier of the CVAD Deployment Resource"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last time when the resource was modified."
            },
            "orderId": {
                "name": "orderId",
                "type": "int",
                "form": "local",
                "doc": "Billing Order ID of the resource"
            },
            "orderedByCvad": {
                "name": "orderedByCvad",
                "type": "boolean",
                "form": "local",
                "doc": "This flag indicates that whether the CVAD APIs have control over this resource. This resource can be cancelled using CVAD cancellation APIs only if this flag is true. "
            },
            "roleId": {
                "name": "roleId",
                "type": "int",
                "form": "local",
                "doc": "Role of the resource within the CVAD deployment. For example, a VSI can have different roles such as Proxy Server or DHCP Server. "
            }
        }
    },
    "SoftLayer_Workload_Citrix_Deployment_Resource_Response": {
        "name": "SoftLayer_Workload_Citrix_Deployment_Resource_Response",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Workload_Citrix_Deployment_Resource_Response constructs a response object for [[SoftLayer_Workload_Citrix_Deployment_Resource_Response]] for the CVAD resource. ",
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "local",
                "doc": "Represents the hardware resource of the CVAD deployment."
            },
            "isDeploymentOwned": {
                "name": "isDeploymentOwned",
                "type": "boolean",
                "form": "local",
                "doc": "It is a flag for internal usage that represents if the underlying resource is ordered by another system of the same infrastructure provider. "
            },
            "role": {
                "name": "role",
                "type": "SoftLayer_Workload_Citrix_Deployment_Resource_Role",
                "form": "local",
                "doc": "It represents the role of a VSI resource in the CVAD deployment, e.g., a proxy server, DHCP server, cloud connector. "
            },
            "storage": {
                "name": "storage",
                "type": "SoftLayer_Network_Storage",
                "form": "local",
                "doc": "Storage resource for the CVAD deployment."
            },
            "subnet": {
                "name": "subnet",
                "type": "SoftLayer_Network_Subnet",
                "form": "local",
                "doc": "Represents the subnet resource of the CVAD deployment."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "It contains the category of the item which is set for the current response. "
            },
            "virtualGuest": {
                "name": "virtualGuest",
                "type": "SoftLayer_Virtual_Guest",
                "form": "local",
                "doc": "VSI resource for the CVAD deployment."
            },
            "vlan": {
                "name": "vlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "local",
                "doc": "Represents the VLAN resource of the CVAD deployment."
            }
        }
    },
    "SoftLayer_Workload_Citrix_Deployment_Resource_Role": {
        "name": "SoftLayer_Workload_Citrix_Deployment_Resource_Role",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Workload_Citrix_Deployment_Resource_Role contains the role and its description of any resource of Citrix Virtual Apps & Desktops deployment. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of the resource role"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "ID of the role"
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "Unique keyName of the role"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of the role"
            }
        }
    },
    "SoftLayer_Workload_Citrix_Deployment_Response": {
        "name": "SoftLayer_Workload_Citrix_Deployment_Response",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Workload_Citrix_Deployment_Response constructs a response object for the [[SoftLayer_Workload_Citrix_Deployment]] that includes all resources, i.e., [[SoftLayer_Workload_Citrix_Deployment_Resource]]. ",
        "properties": {
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "The account ID to which the deployment belongs."
            },
            "activeDirectoryTopology": {
                "name": "activeDirectoryTopology",
                "type": "string",
                "form": "local",
                "doc": "Topology used for the CVAD deployment"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date when this deployment was created."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "ID of the CVAD deployment."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date when this deployment was modified."
            },
            "resources": {
                "name": "resources",
                "type": "SoftLayer_Workload_Citrix_Deployment_Resource_Response",
                "form": "local",
                "typeArray": true,
                "doc": "It is a collection of objects representing deployment resources such as VLAN, subnet, bare metal, proxy, DHCP, cloud connectors. "
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Workload_Citrix_Deployment_Type",
                "form": "local",
                "doc": "Represents if the deployment is for Citrix Hypervisor or VMware"
            },
            "userRecordId": {
                "name": "userRecordId",
                "type": "int",
                "form": "local",
                "doc": "The identifier for the customer who placed the CVAD order."
            },
            "vlanId": {
                "name": "vlanId",
                "type": "int",
                "form": "local",
                "doc": "VLAN ID of the deployment."
            },
            "vmwareOrderId": {
                "name": "vmwareOrderId",
                "type": "string",
                "form": "local",
                "doc": "It is an internal identifier for the VMware solution. It gets set if the CVAD order is for VMware. "
            }
        }
    },
    "SoftLayer_Workload_Citrix_Deployment_Type": {
        "name": "SoftLayer_Workload_Citrix_Deployment_Type",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Workload_Citrix_Deployment_Type service tells the kind of Citrix Virtual Apps and Desktop deployment order. \n\nThe Citrix Virtual Apps and Desktop deployment can be in one of the following two types, - Citrix Hypervisor: This type of deployment uses XenServer Hypervisor provided by Citrix to create virtual machines - VMware: This type of deployment uses VMware hypervisor with NFS or VSAN for the storage solution. ",
        "methods": {
            "getObject": {
                "name": "getObject",
                "type": "SoftLayer_Workload_Citrix_Deployment_Type",
                "filterable": true,
                "maskable": true
            }
        },
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of the deployment type."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The identifer of the deployment type."
            },
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "KeyName of the deployment type."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of the deployment type."
            }
        }
    },
    "SoftLayer_Workload_Citrix_Request": {
        "name": "SoftLayer_Workload_Citrix_Request",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "clientId": {
                "name": "clientId",
                "type": "string",
                "form": "local"
            },
            "clientSecret": {
                "name": "clientSecret",
                "type": "string",
                "form": "local"
            },
            "customerId": {
                "name": "customerId",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Workload_Citrix_Request_CreateResourceLocation": {
        "name": "SoftLayer_Workload_Citrix_Request_CreateResourceLocation",
        "base": "SoftLayer_Workload_Citrix_Request",
        "noservice": true,
        "properties": {
            "resourceLocationName": {
                "name": "resourceLocationName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Workload_Citrix_Workspace_Order": {
        "name": "SoftLayer_Workload_Citrix_Workspace_Order",
        "base": "SoftLayer_Entity",
        "serviceDoc": "This service is used to order an implementation of Citrix Virtual Apps and Desktops running on IBM Cloud ",
        "methods": {
            "cancelWorkspaceResources": {
                "name": "cancelWorkspaceResources",
                "type": "SoftLayer_Workload_Citrix_Workspace_Response_Result",
                "doc": "This method will cancel the resources associated with the provided VLAN and have a 'cvad' tag reference. ",
                "static": true,
                "parameters": [
                    {
                        "name": "vlanIdentifier",
                        "type": "string",
                        "doc": "The name, id or identifier (mex09.bcr22.1157) for the vlan."
                    },
                    {
                        "name": "cancelImmediately",
                        "type": "boolean",
                        "doc": "This will trigger an immediate cancellation with a reclaim of the resource."
                    },
                    {
                        "name": "customerNote",
                        "type": "string",
                        "doc": "Tracks any additional information that the customer wanted to provide."
                    }
                ]
            },
            "getWorkspaceNames": {
                "name": "getWorkspaceNames",
                "type": "SoftLayer_Workload_Citrix_Workspace_Response_Result",
                "doc": "This method will return the list of names of VLANs which have a 'cvad' tag reference.  This name can be used with the cancelWorkspaceOrders method. ",
                "static": true
            },
            "getWorkspaceResources": {
                "name": "getWorkspaceResources",
                "type": "SoftLayer_Workload_Citrix_Workspace_Response_Result",
                "doc": "This method will return the list of resources which could be cancelled using cancelWorkspaceResources ",
                "static": true,
                "parameters": [
                    {
                        "name": "vlanIdentifier",
                        "type": "string",
                        "doc": "The name, id or identifier (e.g. mex09.bcr22.1157) for the vlan."
                    }
                ]
            },
            "placeWorkspaceOrder": {
                "name": "placeWorkspaceOrder",
                "type": "SoftLayer_Workload_Citrix_Workspace_Response",
                "static": true,
                "parameters": [
                    {
                        "name": "orderContainer",
                        "type": "SoftLayer_Workload_Citrix_Workspace_Order_Container"
                    }
                ]
            },
            "verifyWorkspaceOrder": {
                "name": "verifyWorkspaceOrder",
                "type": "SoftLayer_Workload_Citrix_Workspace_Response",
                "doc": "This service is used to verify that an order meets all the necessary requirements to purchase Citrix Virtual Apps and Desktops running on IBM cloud. ",
                "static": true,
                "parameters": [
                    {
                        "name": "orderContainer",
                        "type": "SoftLayer_Workload_Citrix_Workspace_Order_Container"
                    }
                ]
            }
        }
    },
    "SoftLayer_Workload_Citrix_Workspace_Order_Container": {
        "name": "SoftLayer_Workload_Citrix_Workspace_Order_Container",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Workload_Citrix_Workspace_Order::placeWorkspaceOrder. ",
        "properties": {
            "activeDirectoryDomainName": {
                "name": "activeDirectoryDomainName",
                "type": "string",
                "form": "local",
                "doc": "The active directory domain name"
            },
            "activeDirectoryNetbiosName": {
                "name": "activeDirectoryNetbiosName",
                "type": "string",
                "form": "local",
                "doc": "The active directory netbios name (optional)"
            },
            "activeDirectorySafeModePassword": {
                "name": "activeDirectorySafeModePassword",
                "type": "string",
                "form": "local",
                "doc": "The active directory safe mode password"
            },
            "activeDirectoryTopology": {
                "name": "activeDirectoryTopology",
                "type": "string",
                "form": "local",
                "doc": "The active directory topology"
            },
            "citrixAPIClientId": {
                "name": "citrixAPIClientId",
                "type": "string",
                "form": "local",
                "doc": "The Citrix API Client Id"
            },
            "citrixAPIClientSecret": {
                "name": "citrixAPIClientSecret",
                "type": "string",
                "form": "local",
                "doc": "The Citrix API Client Secret"
            },
            "citrixCustomerId": {
                "name": "citrixCustomerId",
                "type": "string",
                "form": "local",
                "doc": "The Citrix customer id"
            },
            "citrixResourceLocationName": {
                "name": "citrixResourceLocationName",
                "type": "string",
                "form": "local",
                "doc": "The Citrix resource location name"
            },
            "domain": {
                "name": "domain",
                "type": "string",
                "form": "local",
                "doc": "The default domain to be used for all server orders where the domain is not specified. "
            },
            "location": {
                "name": "location",
                "type": "string",
                "form": "local",
                "doc": "The specific [[SoftLayer_Location_Datacenter]] id where the order should be provisioned. "
            },
            "orderContainers": {
                "name": "orderContainers",
                "type": "SoftLayer_Container_Product_Order",
                "form": "local",
                "typeArray": true,
                "doc": "There should be one child orderContainer for each component ordered.  The containerIdentifier should be set on each and have these exact values: proxy server, bare metal server with hypervisor, dhcp server, citrix connector servers, active directory server, vlan, subnet, storage "
            },
            "vmwareContainer": {
                "name": "vmwareContainer",
                "type": "SoftLayer_Workload_Citrix_Workspace_Order_VMwareContainer",
                "form": "local",
                "doc": "Set this value to order IBM Cloud for VMware Solutions servers as part of your Citrix Virtual Apps and Desktops order "
            }
        }
    },
    "SoftLayer_Workload_Citrix_Workspace_Order_LicenseKey": {
        "name": "SoftLayer_Workload_Citrix_Workspace_Order_LicenseKey",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that can be populated by the customer to provide license key information for VMware orders. ",
        "properties": {
            "key": {
                "name": "key",
                "type": "string",
                "form": "local",
                "doc": "The license key"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of the product (e.g. vcenter, nsx, vsphere, vsan)"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The license type"
            }
        }
    },
    "SoftLayer_Workload_Citrix_Workspace_Order_SharedStorage": {
        "name": "SoftLayer_Workload_Citrix_Workspace_Order_SharedStorage",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that can be populated by the customer to provide NFS shared storage information for VMware orders. ",
        "properties": {
            "iops": {
                "name": "iops",
                "type": "string",
                "form": "local",
                "doc": "Which storage tier: e.g. READHEAVY_TIER"
            },
            "quantity": {
                "name": "quantity",
                "type": "int",
                "form": "local",
                "doc": "The number of shared storages to order"
            },
            "size": {
                "name": "size",
                "type": "string",
                "form": "local",
                "doc": "The size of the storage (e.g. STORAGE_SPACE_FOR_2_IOPS_PER_GB)"
            },
            "volume": {
                "name": "volume",
                "type": "int",
                "form": "local",
                "doc": "The volume"
            }
        }
    },
    "SoftLayer_Workload_Citrix_Workspace_Order_VMwareContainer": {
        "name": "SoftLayer_Workload_Citrix_Workspace_Order_VMwareContainer",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Workload_Citrix_Workspace_Order::placeWorkspaceOrder to order and provision one or more VMware server instances to be used with Citrix Virtual Apps and Desktops. ",
        "properties": {
            "disks": {
                "name": "disks",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "The bare metal disks"
            },
            "domain": {
                "name": "domain",
                "type": "string",
                "form": "local",
                "doc": "The domain for the ordered hosts (e.g. example.org)"
            },
            "licenseKeys": {
                "name": "licenseKeys",
                "type": "SoftLayer_Workload_Citrix_Workspace_Order_LicenseKey",
                "form": "local",
                "typeArray": true,
                "doc": "Customer provided license keys (optional)"
            },
            "location": {
                "name": "location",
                "type": "string",
                "form": "local",
                "doc": "The datacenter location"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name associated with the order"
            },
            "nickname": {
                "name": "nickname",
                "type": "string",
                "form": "local",
                "doc": "The nickname for the vSRX service"
            },
            "quantity": {
                "name": "quantity",
                "type": "int",
                "form": "local",
                "doc": "The number of instances to order"
            },
            "ram": {
                "name": "ram",
                "type": "string",
                "form": "local",
                "doc": "The bare metal ram type"
            },
            "server": {
                "name": "server",
                "type": "string",
                "form": "local",
                "doc": "The bare metal server type"
            },
            "sharedStorage": {
                "name": "sharedStorage",
                "type": "SoftLayer_Workload_Citrix_Workspace_Order_SharedStorage",
                "form": "local",
                "typeArray": true,
                "doc": "The bare metal shared nfs storage (optional)"
            },
            "subdomain": {
                "name": "subdomain",
                "type": "string",
                "form": "local",
                "doc": "The subdomain for the ordered hosts (e.g. corp)."
            },
            "vsanCacheDisks": {
                "name": "vsanCacheDisks",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "The bare metal vsan cache disks (optional)"
            }
        }
    },
    "SoftLayer_Workload_Citrix_Workspace_Response": {
        "name": "SoftLayer_Workload_Citrix_Workspace_Response",
        "base": "SoftLayer_Entity",
        "serviceDoc": "The SoftLayer_Workload_Citrix_Response constructs a response object for [[SoftLayer_Workload_Citrix_Order]]. ",
        "properties": {
            "messageId": {
                "name": "messageId",
                "type": "string",
                "form": "local",
                "doc": "messageId associated with any error"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "status of service methods"
            },
            "statusMessage": {
                "name": "statusMessage",
                "type": "string",
                "form": "local",
                "doc": "status message"
            }
        }
    },
    "SoftLayer_Workload_Citrix_Workspace_Response_Item": {
        "name": "SoftLayer_Workload_Citrix_Workspace_Response_Item",
        "base": "SoftLayer_Workload_Citrix_Workspace_Response",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "string",
                "form": "local",
                "doc": "the id of the resource (HARDWARE, GUEST, VLAN, SUBNET, VMWARE)"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "the name associated with the resource (e.g. name, hostname)"
            },
            "typeName": {
                "name": "typeName",
                "type": "string",
                "form": "local",
                "doc": "the type of resource (HARDWARE, GUEST, NETWORK_VLAN, SUBNET)"
            }
        }
    },
    "SoftLayer_Workload_Citrix_Workspace_Response_Result": {
        "name": "SoftLayer_Workload_Citrix_Workspace_Response_Result",
        "base": "SoftLayer_Workload_Citrix_Workspace_Response",
        "noservice": true,
        "properties": {
            "items": {
                "name": "items",
                "type": "SoftLayer_Workload_Citrix_Workspace_Response",
                "form": "local",
                "typeArray": true,
                "doc": "identification and operation result for each item"
            }
        }
    },
    "SoftLayer_Container_Account_Authentication_OpenIdConnect_UsernameLookupContainer": {
        "name": "SoftLayer_Container_Account_Authentication_OpenIdConnect_UsernameLookupContainer",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "active": {
                "name": "active",
                "type": "boolean",
                "form": "local"
            },
            "emailAddress": {
                "name": "emailAddress",
                "type": "string",
                "form": "local"
            },
            "federated": {
                "name": "federated",
                "type": "boolean",
                "form": "local"
            },
            "foundAs": {
                "name": "foundAs",
                "type": "string",
                "form": "local"
            },
            "numberOfIbmIdsWithEmailAddress": {
                "name": "numberOfIbmIdsWithEmailAddress",
                "type": "int",
                "form": "local"
            },
            "realm": {
                "name": "realm",
                "type": "string",
                "form": "local"
            },
            "uniqueId": {
                "name": "uniqueId",
                "type": "string",
                "form": "local"
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Account_Discount_Program": {
        "name": "SoftLayer_Container_Account_Discount_Program",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Account_Discount_Program models a single outbound object for a graph of given data sets.",
        "properties": {
            "appliedCredit": {
                "name": "appliedCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The credit allowance that has already been applied during the current billing cycle. If the lifetime limit has been or soon will be reached, this amount may included credit applied in previous billing cycles. "
            },
            "isParticipant": {
                "name": "isParticipant",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to signify whether the account is a participant in the discount program."
            },
            "lifetimeAppliedCredit": {
                "name": "lifetimeAppliedCredit",
                "type": "decimal",
                "form": "local",
                "doc": "Credit allowance applied over the course of the entire program enrollment. For enrollments without a lifetime restriction, this property will not be populated as credit will be tracked on a purely monthly basis. "
            },
            "lifetimeCredit": {
                "name": "lifetimeCredit",
                "type": "decimal",
                "form": "local",
                "doc": "Credit allowance available over the course of the entire program enrollment. If null, enrollment credit is applied on a strictly monthly basis and there is no lifetime maximum. Enrollments with non-null lifetime credit will receive the lesser of the remaining monthly credit or the remaining lifetime credit. "
            },
            "lifetimeRemainingCredit": {
                "name": "lifetimeRemainingCredit",
                "type": "decimal",
                "form": "local",
                "doc": "Remaining credit allowance available over the remaining duration of the program enrollment. If null, enrollment credit is applied on a strictly monthly basis and there is no lifetime maximum. Enrollments with non-null remaining lifetime credit will receive the lesser of the remaining monthly credit or the remaining lifetime credit. "
            },
            "maximumActiveOrders": {
                "name": "maximumActiveOrders",
                "type": "decimal",
                "form": "local",
                "doc": "Maximum number of orders the enrolled account is allowed to have open at one time. If null, then the Flexible Credit Program does not impose an order limit. "
            },
            "monthlyCredit": {
                "name": "monthlyCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The monthly credit allowance that is available at the beginning of the billing cycle."
            },
            "postTaxRemainingCredit": {
                "name": "postTaxRemainingCredit",
                "type": "decimal",
                "form": "local",
                "doc": "DEPRECATED: Taxes are calculated in real time and discount amounts are shown pre-tax in all cases. Tax values in the SoftLayer_Container_Account_Discount_Program container are now populated with the related pre-tax values. "
            },
            "programEndDate": {
                "name": "programEndDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date at which the program expires in MM/DD/YYYY format."
            },
            "programName": {
                "name": "programName",
                "type": "string",
                "form": "local",
                "doc": "Name of the Flexible Credit Program the account is enrolled in."
            },
            "remainingCredit": {
                "name": "remainingCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The credit allowance that is available during the current billing cycle. If the lifetime limit has been or soon will be reached, this amount may be reduced by credit applied in previous billing cycles. "
            },
            "remainingCreditTax": {
                "name": "remainingCreditTax",
                "type": "decimal",
                "form": "local",
                "doc": "DEPRECATED: Taxes are calculated in real time and discount amounts are shown pre-tax in all cases. Tax values in the SoftLayer_Container_Account_Discount_Program container are now populated with the related pre-tax values. "
            }
        }
    },
    "SoftLayer_Container_Account_Discount_Program_Collection": {
        "name": "SoftLayer_Container_Account_Discount_Program_Collection",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "accountLevelAppliedCredit": {
                "name": "accountLevelAppliedCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of credit that has been used by all account level enrollments in the billing cycle. "
            },
            "accountLevelLifetimeAppliedCredit": {
                "name": "accountLevelLifetimeAppliedCredit",
                "type": "decimal",
                "form": "local",
                "doc": "Account level credit allowance applied over the course of entire active program enrollments. For enrollments without a lifetime restriction, this property will not be populated as credit will be tracked on a purely monthly basis. "
            },
            "accountLevelLifetimeCredit": {
                "name": "accountLevelLifetimeCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The total account level credit over the course of an entire program enrollment. This value may be null, in which case the enrollment credit is applied on a monthly basis and there is no lifetime maximum. "
            },
            "accountLevelLifetimeRemainingCredit": {
                "name": "accountLevelLifetimeRemainingCredit",
                "type": "decimal",
                "form": "local",
                "doc": "Remaining account level credit allowance available over the remaining duration of the program enrollments. If null, enrollment credit is applied on a strictly monthly basis and there is no lifetime maximum. Enrollments with non-null remaining lifetime credit will receive the lesser of the remaining monthly credit or the remaining lifetime credit. "
            },
            "accountLevelMonthlyCredit": {
                "name": "accountLevelMonthlyCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The total account level monthly credit allowance available at the beginning of a billing cycle. "
            },
            "accountLevelRemainingCredit": {
                "name": "accountLevelRemainingCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The total account level credit allowance still available during the current billing cycle. "
            },
            "enrollments": {
                "name": "enrollments",
                "type": "SoftLayer_FlexibleCredit_Enrollment",
                "form": "local",
                "typeArray": true,
                "doc": "The active enrollments for this account. "
            },
            "isAccountLevelParticipantFlag": {
                "name": "isAccountLevelParticipantFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates whether or not the account is participating in any account level Flexible Credit programs. "
            },
            "isParticipantFlag": {
                "name": "isParticipantFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates whether or not the account is participating in any Flexible Credit programs. "
            },
            "isProductSpecificParticipantFlag": {
                "name": "isProductSpecificParticipantFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates whether or not the account is participating in any product specific level Flexible Credit programs. "
            },
            "productSpecificAppliedCredit": {
                "name": "productSpecificAppliedCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The amount of credit that has been used by all product specific enrollments in the billing cycle. "
            },
            "productSpecificLifetimeAppliedCredit": {
                "name": "productSpecificLifetimeAppliedCredit",
                "type": "decimal",
                "form": "local",
                "doc": "Product specific credit allowance applied over the course of entire active program enrollments. For enrollments without a lifetime restriction, this property will not be populated as credit will be tracked on a purely monthly basis. "
            },
            "productSpecificLifetimeCredit": {
                "name": "productSpecificLifetimeCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The total product specific credit over the course of an entire program enrollment. This value may be null, in which case the enrollment credit is applied on a monthly basis and there is no lifetime maximum. "
            },
            "productSpecificLifetimeRemainingCredit": {
                "name": "productSpecificLifetimeRemainingCredit",
                "type": "decimal",
                "form": "local",
                "doc": "Remaining product specific level credit allowance available over the remaining duration of the program enrollments. If null, enrollment credit is applied on a strictly monthly basis and there is no lifetime maximum. Enrollments with non-null remaining lifetime credit will receive the lesser of the remaining monthly credit or the remaining lifetime credit. "
            },
            "productSpecificMonthlyCredit": {
                "name": "productSpecificMonthlyCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The total product specific monthly credit allowance available at the beginning of a billing cycle. "
            },
            "productSpecificRemainingCredit": {
                "name": "productSpecificRemainingCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The total product specific credit allowance still available during the current billing cycle. "
            },
            "totalAppliedCredit": {
                "name": "totalAppliedCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The credit allowance that has already been applied during the current billing cycle from all enrollments. If the lifetime limit has been or soon will be reached, this amount may included credit applied in previous billing cycles. "
            },
            "totalRemainingCredit": {
                "name": "totalRemainingCredit",
                "type": "decimal",
                "form": "local",
                "doc": "The credit allowance that is available during the current billing cycle from all enrollments. If the lifetime limit has been or soon will be reached, this amount may be reduced by credit applied in previous billing cycles. "
            }
        }
    },
    "SoftLayer_Container_Account_External_Setup_ProvisioningHoldLifted": {
        "name": "SoftLayer_Container_Account_External_Setup_ProvisioningHoldLifted",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "additionalAttributes": {
                "name": "additionalAttributes",
                "type": "SoftLayer_Container_Account_External_Setup_ProvisioningHoldLifted_Attributes",
                "form": "local"
            },
            "code": {
                "name": "code",
                "type": "string",
                "form": "local"
            },
            "error": {
                "name": "error",
                "type": "string",
                "form": "local"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Account_External_Setup_ProvisioningHoldLifted_Attributes": {
        "name": "SoftLayer_Container_Account_External_Setup_ProvisioningHoldLifted_Attributes",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "brandKeyName": {
                "name": "brandKeyName",
                "type": "string",
                "form": "local"
            },
            "softLayerBrandMoveDate": {
                "name": "softLayerBrandMoveDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Account_Graph_Outputs": {
        "name": "SoftLayer_Container_Account_Graph_Outputs",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Models a single outbound object for a graph of given data sets.",
        "properties": {
            "closedTickets": {
                "name": "closedTickets",
                "type": "string",
                "form": "local",
                "doc": "The count of closed tickets included in this graph."
            },
            "completedBackupCount": {
                "name": "completedBackupCount",
                "type": "string",
                "form": "local",
                "doc": "The count of completed backups included in this graph."
            },
            "conflictBackupCount": {
                "name": "conflictBackupCount",
                "type": "string",
                "form": "local",
                "doc": "The count of conflicted backups included in this graph."
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The maximum date included in this graph."
            },
            "failedBackupCount": {
                "name": "failedBackupCount",
                "type": "string",
                "form": "local",
                "doc": "The count of failed backups included in this graph."
            },
            "graphError": {
                "name": "graphError",
                "type": "string",
                "form": "local",
                "doc": "Error message encountered during graphing"
            },
            "graphImage": {
                "name": "graphImage",
                "type": "base64Binary",
                "form": "local",
                "doc": "The raw PNG binary data to be displayed once the graph is drawn."
            },
            "hardwareUptime": {
                "name": "hardwareUptime",
                "type": "string",
                "form": "local",
                "doc": "The average of hardware uptime included in this graph."
            },
            "inboundUsage": {
                "name": "inboundUsage",
                "type": "string",
                "form": "local",
                "doc": "The inbound bandwidth usage shown in this graph."
            },
            "openTickets": {
                "name": "openTickets",
                "type": "string",
                "form": "local",
                "doc": "The count of open tickets included in this graph."
            },
            "outboundUsage": {
                "name": "outboundUsage",
                "type": "string",
                "form": "local",
                "doc": "The outbound bandwidth usage shown in this graph."
            },
            "pendingCustomerResponseTicketCount": {
                "name": "pendingCustomerResponseTicketCount",
                "type": "string",
                "form": "local",
                "doc": "The count of tickets included in this graph."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The minimum date included in this graph."
            },
            "urlUptime": {
                "name": "urlUptime",
                "type": "string",
                "form": "local",
                "doc": "The average of url uptime included in this graph."
            },
            "waitingEmployeeResponseTicketCount": {
                "name": "waitingEmployeeResponseTicketCount",
                "type": "string",
                "form": "local",
                "doc": "The count of tickets included in this graph."
            }
        }
    },
    "SoftLayer_Container_Account_Historical_Summary": {
        "name": "SoftLayer_Container_Account_Historical_Summary",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Historical Summary Container for account resource details ",
        "properties": {
            "details": {
                "name": "details",
                "type": "SoftLayer_Container_Account_Historical_Summary_Detail",
                "form": "local",
                "typeArray": true,
                "doc": "Array of server uptime detail containers"
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The maximum date included in the summary."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The minimum date included in the summary."
            }
        }
    },
    "SoftLayer_Container_Account_Historical_Summary_Detail": {
        "name": "SoftLayer_Container_Account_Historical_Summary_Detail",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Historical Summary Details Container for a resource's data ",
        "properties": {
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The maximum date included in the detail."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The minimum date included in the detail."
            }
        }
    },
    "SoftLayer_Container_Account_Historical_Summary_Detail_Uptime": {
        "name": "SoftLayer_Container_Account_Historical_Summary_Detail_Uptime",
        "base": "SoftLayer_Container_Account_Historical_Summary_Detail",
        "noservice": true,
        "typeDoc": "Historical Summary Details Container for a host resource uptime ",
        "properties": {
            "cloudComputingInstance": {
                "name": "cloudComputingInstance",
                "type": "SoftLayer_Virtual_Guest",
                "form": "local",
                "doc": "The hardware for uptime details."
            },
            "data": {
                "name": "data",
                "type": "SoftLayer_Metric_Tracking_Object_Data",
                "form": "local",
                "typeArray": true,
                "doc": "The data associated with a host uptime details."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "local",
                "doc": "The hardware for uptime details."
            }
        }
    },
    "SoftLayer_Container_Account_Historical_Summary_Uptime": {
        "name": "SoftLayer_Container_Account_Historical_Summary_Uptime",
        "base": "SoftLayer_Container_Account_Historical_Summary",
        "noservice": true,
        "typeDoc": "Historical Summary Container for account host's resource uptime details "
    },
    "SoftLayer_Container_Account_Internal_Ibm_Request": {
        "name": "SoftLayer_Container_Account_Internal_Ibm_Request",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Contains data required to both request a new IaaS account for active IBM employees and review pending requests. Fields used exclusively in the review process are scrubbed of user input. ",
        "properties": {
            "accountType": {
                "name": "accountType",
                "type": "string",
                "form": "local",
                "doc": "Purpose of the internal IBM account chosen from the list of available"
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "If not provided, will attempt to retrieve from BluePages"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "If no address provided, will attempt to retrieve from BluePages"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "If not provided, will attempt to retrieve from BluePages"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local",
                "doc": "Name of the company displayed on the IaaS account"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "If not provided, will attempt to retrieve from BluePages"
            },
            "deniedFlag": {
                "name": "deniedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "True if the request has been denied by either the IaaS team or the"
            },
            "departmentCode": {
                "name": "departmentCode",
                "type": "string",
                "form": "local",
                "doc": "Department within the division which will be changed during cost recovery."
            },
            "departmentCountry": {
                "name": "departmentCountry",
                "type": "string",
                "form": "local",
                "doc": "Country assigned to the department for cost recovery."
            },
            "divisionCode": {
                "name": "divisionCode",
                "type": "string",
                "form": "local",
                "doc": "Division code used for cost recovery."
            },
            "emailAddress": {
                "name": "emailAddress",
                "type": "string",
                "form": "local",
                "doc": "Account owner's IBM email address. Must be a discoverable email"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "Applicant's first name, as provided by IBM BluePages API."
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Applicant's last name, as provided by IBM BluePages API."
            },
            "managerApprovalStatus": {
                "name": "managerApprovalStatus",
                "type": "string",
                "form": "local",
                "doc": "APPROVED if the request has been approved by the first-line manager,"
            },
            "multiTenantFlag": {
                "name": "multiTenantFlag",
                "type": "boolean",
                "form": "local",
                "doc": "True for accounts intended to be multi-tenant and false otherwise"
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local",
                "doc": "Account owner's primary phone number. If no phone number is available"
            },
            "paasAccountId": {
                "name": "paasAccountId",
                "type": "string",
                "form": "local",
                "doc": "Bluemix PaaS 32 digit hexadecimal account id being automatically linked"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "If not provided, will attempt to retrieve from BluePages"
            },
            "purpose": {
                "name": "purpose",
                "type": "string",
                "form": "local",
                "doc": "Stated purpose of the new account this request would create"
            },
            "securitySubjectMatterExpertEmail": {
                "name": "securitySubjectMatterExpertEmail",
                "type": "string",
                "form": "local",
                "doc": "Division's security SME's email address, if available"
            },
            "securitySubjectMatterExpertName": {
                "name": "securitySubjectMatterExpertName",
                "type": "string",
                "form": "local",
                "doc": "Division's security SME's name, if available"
            },
            "securitySubjectMatterExpertPhone": {
                "name": "securitySubjectMatterExpertPhone",
                "type": "string",
                "form": "local",
                "doc": "Division's security SME's phone, if available"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "If required for chosen country and not provided, will attempt"
            }
        }
    },
    "SoftLayer_Container_Account_Payment_Method_CreditCard": {
        "name": "SoftLayer_Container_Account_Payment_Method_CreditCard",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local"
            },
            "currencyShortName": {
                "name": "currencyShortName",
                "type": "string",
                "form": "local"
            },
            "cybersourceAssignedCardType": {
                "name": "cybersourceAssignedCardType",
                "type": "string",
                "form": "local"
            },
            "expireMonth": {
                "name": "expireMonth",
                "type": "string",
                "form": "local"
            },
            "expireYear": {
                "name": "expireYear",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "lastFourDigits": {
                "name": "lastFourDigits",
                "type": "string",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            },
            "nickname": {
                "name": "nickname",
                "type": "string",
                "form": "local"
            },
            "paymentMethodRoleName": {
                "name": "paymentMethodRoleName",
                "type": "string",
                "form": "local"
            },
            "paymentTypeId": {
                "name": "paymentTypeId",
                "type": "string",
                "form": "local"
            },
            "paymentTypeName": {
                "name": "paymentTypeName",
                "type": "string",
                "form": "local"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Account_PersonalInformation": {
        "name": "SoftLayer_Container_Account_PersonalInformation",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local"
            },
            "alternatePhone": {
                "name": "alternatePhone",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local"
            },
            "requestDate": {
                "name": "requestDate",
                "type": "dateTime",
                "form": "local"
            },
            "requestId": {
                "name": "requestId",
                "type": "int",
                "form": "local"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Contact_Customer": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Contact_Customer",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The customer and prospective owner of a proof of concept account established by an IBMer. ",
        "properties": {
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "Customer's address"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "Customer's address"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "Customer's city"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "Customer's ISO country code"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "Customer's email address"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "Customer's first name"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Customer's last name"
            },
            "phone": {
                "name": "phone",
                "type": "string",
                "form": "local",
                "doc": "Customer's primary phone number"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "Customer's postal code"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "Customer's state"
            },
            "vatId": {
                "name": "vatId",
                "type": "string",
                "form": "local",
                "doc": "Customer's VAT ID"
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Contact_Ibmer_Requester": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Contact_Ibmer_Requester",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "IBMer who is submitting a proof of concept request on behalf of a prospective customer. ",
        "properties": {
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "Customer's address"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "Customer's address"
            },
            "businessUnit": {
                "name": "businessUnit",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "Customer's city"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "Customer's ISO country code"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "Customer's email address"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "Customer's first name"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Customer's last name"
            },
            "organizationCountry": {
                "name": "organizationCountry",
                "type": "string",
                "form": "local"
            },
            "paasAccountId": {
                "name": "paasAccountId",
                "type": "string",
                "form": "local"
            },
            "phone": {
                "name": "phone",
                "type": "string",
                "form": "local",
                "doc": "Customer's primary phone number"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "Customer's postal code"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "Customer's state"
            },
            "subOrganization": {
                "name": "subOrganization",
                "type": "string",
                "form": "local"
            },
            "uid": {
                "name": "uid",
                "type": "string",
                "form": "local"
            },
            "vatId": {
                "name": "vatId",
                "type": "string",
                "form": "local",
                "doc": "Customer's VAT ID"
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Contact_Ibmer_Technical": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Contact_Ibmer_Technical",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "IBMer who will assist the requester with technical aspects of configuring the proof of concept account. ",
        "properties": {
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "Customer's address"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "Customer's address"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "Customer's city"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "Customer's ISO country code"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "Customer's email address"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "Customer's first name"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "Customer's last name"
            },
            "phone": {
                "name": "phone",
                "type": "string",
                "form": "local",
                "doc": "Customer's primary phone number"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "Customer's postal code"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "Customer's state"
            },
            "uid": {
                "name": "uid",
                "type": "string",
                "form": "local"
            },
            "vatId": {
                "name": "vatId",
                "type": "string",
                "form": "local",
                "doc": "Customer's VAT ID"
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Request_AccountFunded": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Request_AccountFunded",
        "base": "SoftLayer_Container_Account_ProofOfConcept_Request_GlobalFunded",
        "noservice": true,
        "typeDoc": "Proof of concept request using the account team funding model. Note that proof of concept account request are available only to internal IBM employees. ",
        "properties": {
            "costRecoveryRequest": {
                "name": "costRecoveryRequest",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Request_CostRecovery",
                "form": "local",
                "doc": "Billing codes for the department paying for the proof of concept account"
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Request_CostRecovery": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Request_CostRecovery",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Funding codes for the department paying for the proof of concept account. ",
        "properties": {
            "countryCode": {
                "name": "countryCode",
                "type": "string",
                "form": "local",
                "doc": "Internal billing system country code"
            },
            "departmentCode": {
                "name": "departmentCode",
                "type": "string",
                "form": "local",
                "doc": "Customer's Internal billing system department code"
            },
            "divisionCode": {
                "name": "divisionCode",
                "type": "string",
                "form": "local",
                "doc": "Internal billing system division code"
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Request_GlobalFunded": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Request_GlobalFunded",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Proof of concept request using the global funding model. Note that proof of concept account request are available only to internal IBM employees. ",
        "properties": {
            "amount": {
                "name": "amount",
                "type": "float",
                "form": "local",
                "doc": "Dollar amount of funding requested for the proof of concept period"
            },
            "customer": {
                "name": "customer",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Contact_Customer",
                "form": "local",
                "doc": "Customer intended to take over ownership and and billing of the account"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Explanation of the purpose of the proof of concept request"
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "End date for the proof of concept period"
            },
            "opportunity": {
                "name": "opportunity",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Request_Opportunity",
                "form": "local",
                "doc": "Internal opportunity system details"
            },
            "projectName": {
                "name": "projectName",
                "type": "string",
                "form": "local",
                "doc": "Name of the project or company and will become the account companyName"
            },
            "regionKeyName": {
                "name": "regionKeyName",
                "type": "string",
                "form": "local",
                "doc": "IBM region responsible for overseeing the proof of concept account"
            },
            "requester": {
                "name": "requester",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Contact_Ibmer_Requester",
                "form": "local",
                "doc": "IBMer requesting the proof of concept account"
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Start date for the proof of concept period"
            },
            "technicalContact": {
                "name": "technicalContact",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Contact_Ibmer_Technical",
                "form": "local",
                "doc": "IBMer assisting with technical aspects of account configuration"
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Request_Opportunity": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Request_Opportunity",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Internal IBM opportunity codes required when applying for a Proof of Concept account. ",
        "properties": {
            "campaignCode": {
                "name": "campaignCode",
                "type": "string",
                "form": "local",
                "doc": "The campaign or promotion code for this request, provided by Sales."
            },
            "monthlyRecurringRevenue": {
                "name": "monthlyRecurringRevenue",
                "type": "decimal",
                "form": "local",
                "doc": "Expected monthly revenue."
            },
            "opportunityNumber": {
                "name": "opportunityNumber",
                "type": "string",
                "form": "local",
                "doc": "Internal system identifier."
            },
            "totalContractValue": {
                "name": "totalContractValue",
                "type": "decimal",
                "form": "local",
                "doc": "Expected overall contract value."
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Review": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Review",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Full details presented to reviewers when determining whether or not to accept a proof of concept request. Note that reviewers are internal IBM employees and reviews are not exposed to external users. ",
        "properties": {
            "accountType": {
                "name": "accountType",
                "type": "string",
                "form": "local",
                "doc": "Type of brand the account will use"
            },
            "costRecoveryCodes": {
                "name": "costRecoveryCodes",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Request_CostRecovery",
                "form": "local",
                "doc": "Internal billing codes"
            },
            "customer": {
                "name": "customer",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Contact_Customer",
                "form": "local",
                "doc": "Customer intended to take over billing after the proof of concept period"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Describes the purpose and rationale of the request"
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Expected end date of the proof of concept period"
            },
            "fundingAmount": {
                "name": "fundingAmount",
                "type": "float",
                "form": "local",
                "doc": "Dollar amount of funding requested"
            },
            "fundingType": {
                "name": "fundingType",
                "type": "string",
                "form": "local",
                "doc": "Funding option chosen for the request"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "System id of the request"
            },
            "iotLeadName": {
                "name": "iotLeadName",
                "type": "string",
                "form": "local",
                "doc": "Name of the integrated offering team lead reviewing the request"
            },
            "iotRegionName": {
                "name": "iotRegionName",
                "type": "string",
                "form": "local",
                "doc": "Name of the integrated offering team region"
            },
            "managerName": {
                "name": "managerName",
                "type": "string",
                "form": "local",
                "doc": "Name of requesting IBMer's manager"
            },
            "opportunity": {
                "name": "opportunity",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Request_Opportunity",
                "form": "local",
                "doc": "Internal opportunity tracking information"
            },
            "projectName": {
                "name": "projectName",
                "type": "string",
                "form": "local",
                "doc": "Project name chosen by the requesting IBMer"
            },
            "requester": {
                "name": "requester",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Contact_Ibmer_Requester",
                "form": "local",
                "doc": "IBMer requesting the account on behalf of a customer"
            },
            "reviewHistory": {
                "name": "reviewHistory",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Review_History",
                "form": "local",
                "doc": "Summary of request's review activity"
            },
            "reviewUrl": {
                "name": "reviewUrl",
                "type": "string",
                "form": "local",
                "doc": "URL for the individual review"
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Expected start date of the proof of concept period"
            },
            "technicalContact": {
                "name": "technicalContact",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Contact_Ibmer_Technical",
                "form": "local",
                "doc": "Additional IBMer responsible for configuring the cloud capabilities"
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Review_Event": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Review_Event",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Review event within proof of concept request review period. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Explanation of the event."
            },
            "reviewerEmail": {
                "name": "reviewerEmail",
                "type": "string",
                "form": "local",
                "doc": "Reviewer's email address."
            },
            "reviewerUid": {
                "name": "reviewerUid",
                "type": "string",
                "form": "local",
                "doc": "Reviewer's BluePages UID."
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Review_History": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Review_History",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Summary of review activity for a proof of concept request. ",
        "properties": {
            "accountCreatedFlag": {
                "name": "accountCreatedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "True for approved requests associated with a new account and false otherwise."
            },
            "deniedFlag": {
                "name": "deniedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "True for denied requests and false otherwise."
            },
            "events": {
                "name": "events",
                "type": "SoftLayer_Container_Account_ProofOfConcept_Review_Event",
                "form": "local",
                "typeArray": true,
                "doc": "List of events occurring during the review."
            },
            "reviewCompleteFlag": {
                "name": "reviewCompleteFlag",
                "type": "boolean",
                "form": "local",
                "doc": "True for fully reviewed requests and false otherwise."
            }
        }
    },
    "SoftLayer_Container_Account_ProofOfConcept_Review_Summary": {
        "name": "SoftLayer_Container_Account_ProofOfConcept_Review_Summary",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Summary presented to reviewers when determining whether or not to accept a proof of concept request. Note that reviewers are internal IBM employees and reviews are not exposed to external users. ",
        "properties": {
            "accountName": {
                "name": "accountName",
                "type": "string",
                "form": "local",
                "doc": "Account's companyName"
            },
            "accountOwnerName": {
                "name": "accountOwnerName",
                "type": "string",
                "form": "local",
                "doc": "Current account owner"
            },
            "amount": {
                "name": "amount",
                "type": "float",
                "form": "local",
                "doc": "Dollar amount requested"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date the request was submitted"
            },
            "customerEmail": {
                "name": "customerEmail",
                "type": "string",
                "form": "local",
                "doc": "Email of the customer receiving the proof of concept account"
            },
            "customerName": {
                "name": "customerName",
                "type": "string",
                "form": "local",
                "doc": "Name of the customer receiving the proof of concept account"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Request record's id"
            },
            "lastUpdate": {
                "name": "lastUpdate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date of the last state change on the request"
            },
            "nextApproverEmail": {
                "name": "nextApproverEmail",
                "type": "string",
                "form": "local",
                "doc": "Email address of the reviewer, if any, currently reviewing the request"
            },
            "requesterEmail": {
                "name": "requesterEmail",
                "type": "string",
                "form": "local",
                "doc": "Email address of the requester"
            },
            "requesterName": {
                "name": "requesterName",
                "type": "string",
                "form": "local",
                "doc": "Requesting IBMer's full name"
            },
            "reviewUrl": {
                "name": "reviewUrl",
                "type": "string",
                "form": "local",
                "doc": "URL for the individual review"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "Request's current status (Pending, Denied, or Approved)"
            }
        }
    },
    "SoftLayer_Container_Account_Update_Response": {
        "name": "SoftLayer_Container_Account_Update_Response",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Contains data related to an account after editing its information. ",
        "properties": {
            "acceptedFlag": {
                "name": "acceptedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Whether or not the update was accepted and applied."
            },
            "account": {
                "name": "account",
                "type": "SoftLayer_Account",
                "form": "local",
                "doc": "The updated SoftLayer_Account."
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "local",
                "doc": "If a manual review is required, this will be populated with the SoftLayer_Ticket for that review."
            }
        }
    },
    "SoftLayer_Container_Authentication_Request_Common": {
        "name": "SoftLayer_Container_Authentication_Request_Common",
        "base": "SoftLayer_Container_Authentication_Request_Contract",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_Common data type contains common information for requests to the getPortalLogin API. This is an abstract class that serves as a base that more specialized classes will derive from. For example, a request class specific to SoftLayer Native IMS Login (username and password). ",
        "properties": {
            "securityQuestionAnswer": {
                "name": "securityQuestionAnswer",
                "type": "string",
                "form": "local",
                "doc": "The answer to your security question."
            },
            "securityQuestionId": {
                "name": "securityQuestionId",
                "type": "int",
                "form": "local",
                "doc": "A security question you wish to answer when authenticating to the SoftLayer customer portal. This parameter isn't required if no security questions are set on your portal account or if your account is configured to not require answering a security account upon login."
            }
        }
    },
    "SoftLayer_Container_Authentication_Request_Contract": {
        "name": "SoftLayer_Container_Authentication_Request_Contract",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_Contract provides a common set of operations for implementing classes. "
    },
    "SoftLayer_Container_Authentication_Request_Native": {
        "name": "SoftLayer_Container_Authentication_Request_Native",
        "base": "SoftLayer_Container_Authentication_Request_Common",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_Native data type contains information for requests to the getPortalLogin API. This class is specific to the SoftLayer Native login (username/password). The request information will be verified to ensure it is valid, and then there will be an attempt to obtain a portal login token in authenticating the user with the provided information. ",
        "properties": {
            "auxiliaryClaimsMiniToken": {
                "name": "auxiliaryClaimsMiniToken",
                "type": "string",
                "form": "local"
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "Your SoftLayer customer portal user's portal password."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username you wish to authenticate to the SoftLayer customer portal with."
            }
        }
    },
    "SoftLayer_Container_Authentication_Request_Native_External": {
        "name": "SoftLayer_Container_Authentication_Request_Native_External",
        "base": "SoftLayer_Container_Authentication_Request_Native",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_Native_External data type contains information for requests to the getPortalLogin API. This class serves as a base class for more specialized external authentication classes to the SoftLayer Native login (username/password). "
    },
    "SoftLayer_Container_Authentication_Request_Native_External_Totp": {
        "name": "SoftLayer_Container_Authentication_Request_Native_External_Totp",
        "base": "SoftLayer_Container_Authentication_Request_Native_External",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_Native_External_Totp data type contains information for requests to the getPortalLogin API. This class provides information to allow the user to submit a request to the native SoftLayer (username/password) login service for a portal login token, as well as submitting a request to the TOTP 2 factor authentication service. ",
        "properties": {
            "secondSecurityCode": {
                "name": "secondSecurityCode",
                "type": "string",
                "form": "local"
            },
            "securityCode": {
                "name": "securityCode",
                "type": "string",
                "form": "local"
            },
            "vendor": {
                "name": "vendor",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Request_Native_External_Verisign": {
        "name": "SoftLayer_Container_Authentication_Request_Native_External_Verisign",
        "base": "SoftLayer_Container_Authentication_Request_Native_External",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_Native_External_Verisign data type contains information for requests to the getPortalLogin API. This class provides information to allow the user to submit a request to the native SoftLayer (username/password) login service for a portal login token, as well as submitting a request to the Verisign 2 factor authentication service. ",
        "properties": {
            "secondSecurityCode": {
                "name": "secondSecurityCode",
                "type": "string",
                "form": "local"
            },
            "securityCode": {
                "name": "securityCode",
                "type": "string",
                "form": "local"
            },
            "vendor": {
                "name": "vendor",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Request_OpenIdConnect": {
        "name": "SoftLayer_Container_Authentication_Request_OpenIdConnect",
        "base": "SoftLayer_Container_Authentication_Request_Common",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_OpenIdConnect data type contains information for requests to the getPortalLogin API. This class is specific to the SoftLayer Cloud Token login. The request information will be verified to ensure it is valid, and then there will be an attempt to obtain a portal login token in authenticating the user with the provided information. ",
        "properties": {
            "openIdConnectAccessToken": {
                "name": "openIdConnectAccessToken",
                "type": "string",
                "form": "local"
            },
            "openIdConnectAccountId": {
                "name": "openIdConnectAccountId",
                "type": "int",
                "form": "local"
            },
            "openIdConnectProvider": {
                "name": "openIdConnectProvider",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Request_OpenIdConnect_External": {
        "name": "SoftLayer_Container_Authentication_Request_OpenIdConnect_External",
        "base": "SoftLayer_Container_Authentication_Request_OpenIdConnect",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_OpenIdConnect_External data type contains information for requests to the getPortalLogin API. This class serves as a base class for more specialized external authentication classes to the SoftLayer OpenIdConnect login service. "
    },
    "SoftLayer_Container_Authentication_Request_OpenIdConnect_External_Totp": {
        "name": "SoftLayer_Container_Authentication_Request_OpenIdConnect_External_Totp",
        "base": "SoftLayer_Container_Authentication_Request_OpenIdConnect_External",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_OpenIdConnect_External_Totp data type contains information for requests to the getPortalLogin API. This class provides information to allow the user to submit a request to the SoftLayer OpenIdConnect (token) login service for a portal login token, as well as submitting a request to the TOTP 2 factor authentication service. ",
        "properties": {
            "secondSecurityCode": {
                "name": "secondSecurityCode",
                "type": "string",
                "form": "local"
            },
            "securityCode": {
                "name": "securityCode",
                "type": "string",
                "form": "local"
            },
            "vendor": {
                "name": "vendor",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Request_OpenIdConnect_External_Verisign": {
        "name": "SoftLayer_Container_Authentication_Request_OpenIdConnect_External_Verisign",
        "base": "SoftLayer_Container_Authentication_Request_OpenIdConnect_External",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Request_OpenIdConnect_External_Verisign data type contains information for requests to the getPortalLogin API. This class provides information to allow the user to submit a request to the SoftLayer OpenIdConnect (token) login service for a portal login token, as well as submitting a request to the Verisign 2 factor authentication service. ",
        "properties": {
            "secondSecurityCode": {
                "name": "secondSecurityCode",
                "type": "string",
                "form": "local"
            },
            "securityCode": {
                "name": "securityCode",
                "type": "int",
                "form": "local"
            },
            "vendor": {
                "name": "vendor",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Response_2FactorAuthenticationNeeded": {
        "name": "SoftLayer_Container_Authentication_Response_2FactorAuthenticationNeeded",
        "base": "SoftLayer_Container_Authentication_Response_Common",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Response_2FactorAuthenticationNeeded data type contains information for specific responses from the getPortalLogin API. This class is indicative of a request that is missing the appropriate 2FA information. ",
        "properties": {
            "additionalData": {
                "name": "additionalData",
                "type": "SoftLayer_Container_Authentication_Response_Common",
                "form": "local"
            },
            "statusKeyName": {
                "name": "statusKeyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Response_Account": {
        "name": "SoftLayer_Container_Authentication_Response_Account",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Response_Account data type contains account information for responses from the getPortalLogin API. ",
        "properties": {
            "accountCompanyName": {
                "name": "accountCompanyName",
                "type": "string",
                "form": "local"
            },
            "accountCountry": {
                "name": "accountCountry",
                "type": "string",
                "form": "local"
            },
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "accountStatusName": {
                "name": "accountStatusName",
                "type": "string",
                "form": "local"
            },
            "bluemixAccountId": {
                "name": "bluemixAccountId",
                "type": "string",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "defaultAccount": {
                "name": "defaultAccount",
                "type": "boolean",
                "form": "local"
            },
            "ipAddressCheckRequired": {
                "name": "ipAddressCheckRequired",
                "type": "boolean",
                "form": "local"
            },
            "isMasterUserFlag": {
                "name": "isMasterUserFlag",
                "type": "boolean",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "phoneFactorExternalAuthenticationRequired": {
                "name": "phoneFactorExternalAuthenticationRequired",
                "type": "boolean",
                "form": "local"
            },
            "securityQuestionRequired": {
                "name": "securityQuestionRequired",
                "type": "boolean",
                "form": "local"
            },
            "totpExternalAuthenticationRequired": {
                "name": "totpExternalAuthenticationRequired",
                "type": "boolean",
                "form": "local"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local"
            },
            "verisignExternalAuthenticationRequired": {
                "name": "verisignExternalAuthenticationRequired",
                "type": "boolean",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Response_AccountIdMissing": {
        "name": "SoftLayer_Container_Authentication_Response_AccountIdMissing",
        "base": "SoftLayer_Container_Authentication_Response_Common",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Response_AccountIdMissing data type contains information for specific responses from the getPortalLogin API. This class is indicative of a request that is missing the account id. ",
        "properties": {
            "statusKeyName": {
                "name": "statusKeyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Response_Common": {
        "name": "SoftLayer_Container_Authentication_Response_Common",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Response_Common data type contains common information for responses from the getPortalLogin API. This is an abstract class that serves as a base that more specialized classes will derive from. For example, a response class that is specific to a successful response from the getPortalLogin API. ",
        "properties": {
            "accounts": {
                "name": "accounts",
                "type": "SoftLayer_Container_Authentication_Response_Account",
                "form": "local",
                "typeArray": true,
                "doc": "The list of linked accounts for the authenticated SoftLayer customer portal user."
            }
        }
    },
    "SoftLayer_Container_Authentication_Response_IpAddressRestrictionCheckNeeded": {
        "name": "SoftLayer_Container_Authentication_Response_IpAddressRestrictionCheckNeeded",
        "base": "SoftLayer_Container_Authentication_Response_Common",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Response_IpAddressRestrictionCheckNeeded data type indicates that the caller (IAM presumably) needs to do an IP address check of the logging-in user against the restricted IP list kept in BSS.  We don't know the IP address of the user here (only IAM does) so we return an indicator of which user matched the username and expect IAM to come back with another login call that will include a mini-JWT token that contains an assertion that the IP address was checked. ",
        "properties": {
            "statusKeyName": {
                "name": "statusKeyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Response_LoginFailed": {
        "name": "SoftLayer_Container_Authentication_Response_LoginFailed",
        "base": "SoftLayer_Container_Authentication_Response_Common",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Response_LOGIN_FAILED data type contains information for specific responses from the getPortalLogin API. This class is indicative of a request where there was an inability to login based on the information that was provided. ",
        "properties": {
            "errorMessage": {
                "name": "errorMessage",
                "type": "string",
                "form": "local"
            },
            "statusKeyName": {
                "name": "statusKeyName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Authentication_Response_Success": {
        "name": "SoftLayer_Container_Authentication_Response_Success",
        "base": "SoftLayer_Container_Authentication_Response_Common",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Authentication_Response_SUCCESS data type contains information for specific responses from the getPortalLogin API. This class is indicative of a request that was successful in obtaining a portal login token from the getPortalLogin API. ",
        "properties": {
            "statusKeyName": {
                "name": "statusKeyName",
                "type": "string",
                "form": "local"
            },
            "token": {
                "name": "token",
                "type": "SoftLayer_Container_User_Authentication_Token",
                "form": "local",
                "doc": "The token for interacting with the SoftLayer customer portal."
            }
        }
    },
    "SoftLayer_Container_Auxiliary_Network_Status_Reading": {
        "name": "SoftLayer_Container_Auxiliary_Network_Status_Reading",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Auxiliary_Network_Status_Reading data type contains information relating to an object being monitored from outside the SoftLayer network.  It is primarily used to check the status of our edge routers from multiple locations around the world. ",
        "properties": {
            "averagePing": {
                "name": "averagePing",
                "type": "float",
                "form": "local",
                "doc": "Average packet round-trip time."
            },
            "fails": {
                "name": "fails",
                "type": "int",
                "form": "local",
                "doc": "Number of failures since the target was last detected to be working properly."
            },
            "frequency": {
                "name": "frequency",
                "type": "int",
                "form": "local",
                "doc": "Monitoring frequency in minutes."
            },
            "label": {
                "name": "label",
                "type": "string",
                "form": "local",
                "doc": "The target babel."
            },
            "lastCheckDate": {
                "name": "lastCheckDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Last check date and time."
            },
            "lastDownDate": {
                "name": "lastDownDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date and time of the last problem detected."
            },
            "latency": {
                "name": "latency",
                "type": "float",
                "form": "local",
                "doc": "The total response time in seconds calculated during the last check."
            },
            "location": {
                "name": "location",
                "type": "string",
                "form": "local",
                "doc": "The monitoring location name."
            },
            "maximumPing": {
                "name": "maximumPing",
                "type": "float",
                "form": "local",
                "doc": "Maximum packet round-trip time."
            },
            "minimumPing": {
                "name": "minimumPing",
                "type": "float",
                "form": "local",
                "doc": "Minimum packet round-trip time."
            },
            "pingLoss": {
                "name": "pingLoss",
                "type": "float",
                "form": "local",
                "doc": "Packet loss percentage."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date monitoring first began"
            },
            "statusCode": {
                "name": "statusCode",
                "type": "string",
                "form": "local",
                "doc": "Status Code - one of UP, Down, Test pending."
            },
            "statusMessage": {
                "name": "statusMessage",
                "type": "string",
                "form": "local",
                "doc": "The status message from the last effective check."
            },
            "target": {
                "name": "target",
                "type": "string",
                "form": "local",
                "doc": "The target object."
            },
            "targetType": {
                "name": "targetType",
                "type": "string",
                "form": "local",
                "doc": "A letter indicating the target type."
            }
        }
    },
    "SoftLayer_Container_Bandwidth_GraphInputs": {
        "name": "SoftLayer_Container_Bandwidth_GraphInputs",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Bandwidth_GraphInputs models a single inbound object for a given bandwidth graph.",
        "properties": {
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "This is a unix timestamp that represents the stop date/time for a graph."
            },
            "networkInterfaceId": {
                "name": "networkInterfaceId",
                "type": "int",
                "form": "local",
                "doc": "The front-end or back-end network uplink interface associated with this server."
            },
            "pod": {
                "name": "pod",
                "type": "int",
                "form": "local",
                "doc": "*"
            },
            "serverName": {
                "name": "serverName",
                "type": "string",
                "form": "local",
                "doc": "This is a human readable name for the server or rack being graphed."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "This is a unix timestamp that represents the begin date/time for a graph."
            }
        }
    },
    "SoftLayer_Container_Bandwidth_GraphOutputs": {
        "name": "SoftLayer_Container_Bandwidth_GraphOutputs",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Bandwidth_GraphOutputs models a single outbound object for a given bandwidth graph.",
        "properties": {
            "graphImage": {
                "name": "graphImage",
                "type": "base64Binary",
                "form": "local",
                "doc": "The raw PNG binary data to be displayed once the graph is drawn."
            },
            "graphTitle": {
                "name": "graphTitle",
                "type": "string",
                "form": "local",
                "doc": "The title that ended up being displayed as part of the graph image."
            },
            "maxEndDate": {
                "name": "maxEndDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The maximum date included in this graph."
            },
            "minStartDate": {
                "name": "minStartDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The minimum date included in this graph."
            }
        }
    },
    "SoftLayer_Container_Bandwidth_GraphOutputsExtended": {
        "name": "SoftLayer_Container_Bandwidth_GraphOutputsExtended",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Bandwidth_GraphOutputs models an individual bandwidth graph image and certain details about that graph image.",
        "properties": {
            "graphImage": {
                "name": "graphImage",
                "type": "base64Binary",
                "form": "local",
                "doc": "The raw PNG binary data of a bandwidth graph image."
            },
            "graphTitle": {
                "name": "graphTitle",
                "type": "string",
                "form": "local",
                "doc": "A bandwidth graph's title."
            },
            "inBoundTotalBytes": {
                "name": "inBoundTotalBytes",
                "type": "unsignedLong",
                "form": "local",
                "doc": "The amount of inbound traffic reported on a bandwidth graph image."
            },
            "maxEndDate": {
                "name": "maxEndDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The ending date of the data represented in a bandwidth graph."
            },
            "minStartDate": {
                "name": "minStartDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The beginning date of the data represented in a bandwidth graph."
            },
            "outBoundTotalBytes": {
                "name": "outBoundTotalBytes",
                "type": "unsignedLong",
                "form": "local",
                "doc": "The amount of outbound traffic reported on a bandwidth graph image."
            }
        }
    },
    "SoftLayer_Container_Bandwidth_Projection": {
        "name": "SoftLayer_Container_Bandwidth_Projection",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Bandwidth_Projection models projected bandwidth use over a time range.",
        "properties": {
            "allowedUsage": {
                "name": "allowedUsage",
                "type": "string",
                "form": "local",
                "doc": "Bandwidth limit for this hardware."
            },
            "estimatedUsage": {
                "name": "estimatedUsage",
                "type": "string",
                "form": "local",
                "doc": "Estimated bandwidth usage so far this billing cycle."
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "Hardware ID of server to monitor."
            },
            "projectedUsage": {
                "name": "projectedUsage",
                "type": "string",
                "form": "local",
                "doc": "Projected usage for this hardware based on previous usage this billing cycle."
            },
            "serverName": {
                "name": "serverName",
                "type": "string",
                "form": "local",
                "doc": "the text name of the server being monitored."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The minimum date included in this list."
            }
        }
    },
    "SoftLayer_Container_Bandwidth_Usage": {
        "name": "SoftLayer_Container_Bandwidth_Usage",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "When a customer uses SoftLayer_Account::getBandwidthUsage, this container is used to return their usage information in bytes ",
        "properties": {
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local"
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local"
            },
            "privateInUsage": {
                "name": "privateInUsage",
                "type": "float",
                "form": "local"
            },
            "privateOutUsage": {
                "name": "privateOutUsage",
                "type": "float",
                "form": "local"
            },
            "publicInUsage": {
                "name": "publicInUsage",
                "type": "float",
                "form": "local"
            },
            "publicOutUsage": {
                "name": "publicOutUsage",
                "type": "float",
                "form": "local"
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Billing_Currency_Country": {
        "name": "SoftLayer_Container_Billing_Currency_Country",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "availableCurrencies": {
                "name": "availableCurrencies",
                "type": "SoftLayer_Billing_Currency",
                "form": "local",
                "typeArray": true
            },
            "country": {
                "name": "country",
                "type": "SoftLayer_Locale_Country",
                "form": "local"
            },
            "currencyCountryLocales": {
                "name": "currencyCountryLocales",
                "type": "SoftLayer_Billing_Currency_Country",
                "form": "local",
                "typeArray": true
            }
        }
    },
    "SoftLayer_Container_Billing_Currency_Format": {
        "name": "SoftLayer_Container_Billing_Currency_Format",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "currency": {
                "name": "currency",
                "type": "string",
                "form": "local"
            },
            "display": {
                "name": "display",
                "type": "int",
                "form": "local"
            },
            "format": {
                "name": "format",
                "type": "string",
                "form": "local"
            },
            "locale": {
                "name": "locale",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "position": {
                "name": "position",
                "type": "int",
                "form": "local"
            },
            "precision": {
                "name": "precision",
                "type": "int",
                "form": "local"
            },
            "script": {
                "name": "script",
                "type": "string",
                "form": "local"
            },
            "service": {
                "name": "service",
                "type": "string",
                "form": "local"
            },
            "symbol": {
                "name": "symbol",
                "type": "string",
                "form": "local"
            },
            "tag": {
                "name": "tag",
                "type": "string",
                "form": "local"
            },
            "value": {
                "name": "value",
                "type": "float",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Billing_Info_Ach": {
        "name": "SoftLayer_Container_Billing_Info_Ach",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "accountNumber": {
                "name": "accountNumber",
                "type": "string",
                "form": "local"
            },
            "accountType": {
                "name": "accountType",
                "type": "string",
                "form": "local"
            },
            "bankTransitNumber": {
                "name": "bankTransitNumber",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local"
            },
            "federalTaxId": {
                "name": "federalTaxId",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            },
            "phoneNumber": {
                "name": "phoneNumber",
                "type": "string",
                "form": "local"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            },
            "street1": {
                "name": "street1",
                "type": "string",
                "form": "local"
            },
            "street2": {
                "name": "street2",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Billing_Invoice_Email": {
        "name": "SoftLayer_Container_Billing_Invoice_Email",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container is used to provide all the options for [[SoftLayer_Billing_Invoice/emailInvoices|emailInvoices]] in order to have the necessary invoices generated and links sent to the user's email. ",
        "properties": {
            "excelInvoiceIds": {
                "name": "excelInvoiceIds",
                "type": "int",
                "form": "local",
                "typeArray": true,
                "doc": "Excel Invoices to email"
            },
            "pdfDetailedInvoiceIds": {
                "name": "pdfDetailedInvoiceIds",
                "type": "int",
                "form": "local",
                "typeArray": true,
                "doc": "PDF Invoice Details to email"
            },
            "pdfInvoiceIds": {
                "name": "pdfInvoiceIds",
                "type": "int",
                "form": "local",
                "typeArray": true,
                "doc": "PDF Invoices to email"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of Invoices to be emailed [current|next]. If next is selected, the account id will be used."
            }
        }
    },
    "SoftLayer_Container_Billing_Order_Status": {
        "name": "SoftLayer_Container_Billing_Order_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Billing_Order_Status models an order status.",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the status."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "The keyname of the status."
            }
        }
    },
    "SoftLayer_Container_Catalyst_ManualEnrollmentRequest": {
        "name": "SoftLayer_Container_Catalyst_ManualEnrollmentRequest",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Contains user information used to request a manual Catalyst enrollment. ",
        "properties": {
            "customerEmail": {
                "name": "customerEmail",
                "type": "string",
                "form": "local",
                "doc": "Applicant's email address"
            },
            "customerName": {
                "name": "customerName",
                "type": "string",
                "form": "local",
                "doc": "Applicant's first and last name"
            },
            "startupName": {
                "name": "startupName",
                "type": "string",
                "form": "local",
                "doc": "Name of applicant's startup company"
            },
            "ventureAffiliationFlag": {
                "name": "ventureAffiliationFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating whether (true) or not (false) and applicant is"
            },
            "ventureFundName": {
                "name": "ventureFundName",
                "type": "string",
                "form": "local",
                "doc": "Name of the venture capital fund, if any, applicant is affiliated with"
            }
        }
    },
    "SoftLayer_Container_Collection_Locale_CountryCode": {
        "name": "SoftLayer_Container_Collection_Locale_CountryCode",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container is used to hold country locale information. ",
        "properties": {
            "longName": {
                "name": "longName",
                "type": "string",
                "form": "local"
            },
            "shortName": {
                "name": "shortName",
                "type": "string",
                "form": "local"
            },
            "stateCodes": {
                "name": "stateCodes",
                "type": "SoftLayer_Container_Collection_Locale_StateCode",
                "form": "local",
                "typeArray": true
            }
        }
    },
    "SoftLayer_Container_Collection_Locale_StateCode": {
        "name": "SoftLayer_Container_Collection_Locale_StateCode",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container is used to hold information regarding a state or province. ",
        "properties": {
            "longName": {
                "name": "longName",
                "type": "string",
                "form": "local"
            },
            "shortName": {
                "name": "shortName",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Collection_Locale_VatCountryCodeAndFormat": {
        "name": "SoftLayer_Container_Collection_Locale_VatCountryCodeAndFormat",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container is used to hold VAT information. ",
        "properties": {
            "countryCode": {
                "name": "countryCode",
                "type": "string",
                "form": "local"
            },
            "regex": {
                "name": "regex",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_Contact": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_Contact",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Contact information container for domain registration ",
        "properties": {
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "The street address of the contact."
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "The second line in the address of the contact."
            },
            "address3": {
                "name": "address3",
                "type": "string",
                "form": "local",
                "doc": "The third line in the address of the contact."
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The city of the contact."
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "The 2-character Country code. (i.e. US)"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local",
                "doc": "The email address of the contact."
            },
            "fax": {
                "name": "fax",
                "type": "string",
                "form": "local",
                "doc": "The fax number of the contact."
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "The first name of the contact."
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "The last name of the contact."
            },
            "organizationName": {
                "name": "organizationName",
                "type": "string",
                "form": "local",
                "doc": "The organization name of the contact."
            },
            "phone": {
                "name": "phone",
                "type": "string",
                "form": "local",
                "doc": "The phone number of the contact."
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The postal code of the contact."
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "The state of the contact."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of contact. The following are the valid types of contacts: \n* admin\n* owner\n* billing\n* tech"
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container data type contains extended attributes information for a domain of country code TLD. ",
        "properties": {
            "childFlag": {
                "name": "childFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates if this is a child of another extended attribute."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of an extended attribute."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of an extended attribute."
            },
            "options": {
                "name": "options",
                "type": "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute_Option",
                "form": "local",
                "typeArray": true,
                "doc": "The collection of options for an extended attribute."
            },
            "requiredFlag": {
                "name": "requiredFlag",
                "type": "int",
                "form": "local",
                "doc": "Indicates if extended attribute is required."
            },
            "userDefinedFlag": {
                "name": "userDefinedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "User defined indicates that the value is required from outside sources."
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute_Configuration": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute_Configuration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the data type that may need to be populated to complete registraton for domains that are country code TLD's. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The extended attribute name."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The extended attribute option value."
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute_Option": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute_Option",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container data type contains extended attribute options information for a domain of country code TLD. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of an option."
            },
            "requireExtendedAttributes": {
                "name": "requireExtendedAttributes",
                "type": "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute_Option_Require",
                "form": "local",
                "typeArray": true,
                "doc": "Extended Attribute that is required for an option."
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "The title of an option."
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value of an option."
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute_Option_Require": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute_Option_Require",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container data type contains the extended attribute name that is required by an extended attribute option. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of an extended attribute that is required by an extended attribute option."
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_Information": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_Information",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Information container for domain registration ",
        "properties": {
            "contacts": {
                "name": "contacts",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Contact",
                "form": "local",
                "typeArray": true,
                "doc": "The information of the registered domain."
            },
            "expireDate": {
                "name": "expireDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date that a domain is set to expire."
            },
            "nameservers": {
                "name": "nameservers",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Nameserver",
                "form": "local",
                "typeArray": true,
                "doc": "The list of nameservers for the domain."
            },
            "registryCreateDate": {
                "name": "registryCreateDate",
                "type": "dateTime",
                "form": "local"
            },
            "registryExpireDate": {
                "name": "registryExpireDate",
                "type": "dateTime",
                "form": "local"
            },
            "registryUpdateDate": {
                "name": "registryUpdateDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_List": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_List",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "domainName": {
                "name": "domainName",
                "type": "string",
                "form": "local",
                "doc": "The domain name."
            },
            "encodingType": {
                "name": "encodingType",
                "type": "string",
                "form": "local",
                "doc": "Three-character language tag for the IDN domain that you're trying to register. This is only required for IDN domains. "
            },
            "extendedAttributeConfiguration": {
                "name": "extendedAttributeConfiguration",
                "type": "SoftLayer_Container_Dns_Domain_Registration_ExtendedAttribute_Configuration",
                "form": "local",
                "typeArray": true,
                "doc": "Data required by the Registry for some country code top level domains (i.e. example.us). \n\nIn order to determine if a domain requires extended attributes, use [[SoftLayer_Dns_Domain_Registration::getExtendedAttributes|domain registration]] service. "
            },
            "registrationPeriod": {
                "name": "registrationPeriod",
                "type": "int",
                "form": "local",
                "doc": "The length of the registration period in years. Valid values are 1 \u2013 10. "
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_Lookup": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_Lookup",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Lookup domain container for domain registration ",
        "properties": {
            "items": {
                "name": "items",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Lookup_Items",
                "form": "local",
                "typeArray": true,
                "doc": "The list of available and taken domain names."
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_Lookup_Items": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_Lookup_Items",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Lookup items container for domain registration ",
        "properties": {
            "domainName": {
                "name": "domainName",
                "type": "string",
                "form": "local",
                "doc": "The domain name."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "The status of the domain name if available and can be registered."
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_Nameserver": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_Nameserver",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Nameserver container for domain registration ",
        "properties": {
            "nameservers": {
                "name": "nameservers",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Nameserver_List",
                "form": "local",
                "typeArray": true,
                "doc": "The list of fully qualified names of the nameserver."
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_Nameserver_List": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_Nameserver_List",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Nameservers list container for domain registration ",
        "properties": {
            "ipv4Address": {
                "name": "ipv4Address",
                "type": "string",
                "form": "local",
                "doc": "The IPv4 address of the nameserver."
            },
            "ipv6Address": {
                "name": "ipv6Address",
                "type": "string",
                "form": "local",
                "doc": "The IPv6 address of the nameserver."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The fully qualified name of the nameserver"
            },
            "sortOrder": {
                "name": "sortOrder",
                "type": "int",
                "form": "local",
                "doc": "The sort order of the nameserver"
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_Registrant_Verification_StatusDetail": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_Registrant_Verification_StatusDetail",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "status": {
                "name": "status",
                "type": "SoftLayer_Dns_Domain_Registration_Registrant_Verification_Status",
                "form": "local",
                "doc": "The current status of the verification."
            },
            "verificationDeadlineDate": {
                "name": "verificationDeadlineDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The adate when the domain will be suspended."
            }
        }
    },
    "SoftLayer_Container_Dns_Domain_Registration_Transfer_Information": {
        "name": "SoftLayer_Container_Dns_Domain_Registration_Transfer_Information",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Transfer Information container for domain registration ",
        "properties": {
            "reason": {
                "name": "reason",
                "type": "string",
                "form": "local",
                "doc": "The reason why a domain is not transferable."
            },
            "registrantEmail": {
                "name": "registrantEmail",
                "type": "string",
                "form": "local",
                "doc": "The registrant email."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "The status of the latest transfer on the domain."
            },
            "timeStamp": {
                "name": "timeStamp",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time of the most recent update to the state of the transfer."
            },
            "transferrable": {
                "name": "transferrable",
                "type": "int",
                "form": "local",
                "doc": "Indicates if the domain can be transferred."
            }
        }
    },
    "SoftLayer_Container_Exception": {
        "name": "SoftLayer_Container_Exception",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Exception data type represents a SoftLayer_Exception. ",
        "properties": {
            "exceptionClass": {
                "name": "exceptionClass",
                "type": "string",
                "form": "local",
                "doc": "The SoftLayer_Exception class that the error is."
            },
            "exceptionMessage": {
                "name": "exceptionMessage",
                "type": "string",
                "form": "local",
                "doc": "The exception message."
            }
        }
    },
    "SoftLayer_Container_Graph": {
        "name": "SoftLayer_Container_Graph",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "baseUnit": {
                "name": "baseUnit",
                "type": "string",
                "form": "local",
                "doc": "base units associated with the graph."
            },
            "endDatetime": {
                "name": "endDatetime",
                "type": "string",
                "form": "local",
                "doc": "Graph range end datetime."
            },
            "height": {
                "name": "height",
                "type": "int",
                "form": "local",
                "doc": "The height of the graph image."
            },
            "image": {
                "name": "image",
                "type": "base64Binary",
                "form": "local",
                "doc": "The graph image."
            },
            "interval": {
                "name": "interval",
                "type": "int",
                "form": "local",
                "doc": "The graph interval in seconds."
            },
            "metrics": {
                "name": "metrics",
                "type": "SoftLayer_Container_Metric_Data_Type",
                "form": "local",
                "typeArray": true,
                "doc": "Metric types associated with the graph."
            },
            "normalizeFlag": {
                "name": "normalizeFlag",
                "type": "base64Binary",
                "form": "local",
                "doc": "Indicator to control whether the graph data is normalized."
            },
            "options": {
                "name": "options",
                "type": "SoftLayer_Container_Graph_Option",
                "form": "local",
                "typeArray": true,
                "doc": "The options used to control the graph appearance."
            },
            "plots": {
                "name": "plots",
                "type": "SoftLayer_Container_Graph_Plot",
                "form": "local",
                "typeArray": true,
                "doc": "A collection of graph plots."
            },
            "returnImage": {
                "name": "returnImage",
                "type": "boolean",
                "form": "local",
                "doc": "option to not return the image."
            },
            "startDatetime": {
                "name": "startDatetime",
                "type": "string",
                "form": "local",
                "doc": "Graph range start datetime."
            },
            "template": {
                "name": "template",
                "type": "string",
                "form": "local",
                "doc": "The name of the template to use; may be null."
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "The title of the graph image."
            },
            "width": {
                "name": "width",
                "type": "int",
                "form": "local",
                "doc": "The width of the graph image."
            }
        }
    },
    "SoftLayer_Container_Graph_Option": {
        "name": "SoftLayer_Container_Graph_Option",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Graph_Plot": {
        "name": "SoftLayer_Container_Graph_Plot",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "data": {
                "name": "data",
                "type": "SoftLayer_Container_Graph_Plot_Coordinate",
                "form": "local",
                "typeArray": true
            },
            "metric": {
                "name": "metric",
                "type": "SoftLayer_Container_Metric_Data_Type",
                "form": "local"
            },
            "unit": {
                "name": "unit",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Graph_Plot_Coordinate": {
        "name": "SoftLayer_Container_Graph_Plot_Coordinate",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "xValue": {
                "name": "xValue",
                "type": "float",
                "form": "local"
            },
            "yValue": {
                "name": "yValue",
                "type": "float",
                "form": "local"
            },
            "zValue": {
                "name": "zValue",
                "type": "float",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Hardware_CaptureEnabled": {
        "name": "SoftLayer_Container_Hardware_CaptureEnabled",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "enabled": {
                "name": "enabled",
                "type": "boolean",
                "form": "local"
            },
            "reasons": {
                "name": "reasons",
                "type": "string",
                "form": "local",
                "typeArray": true
            }
        }
    },
    "SoftLayer_Container_Hardware_Configuration": {
        "name": "SoftLayer_Container_Hardware_Configuration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The hardware configuration container is used to provide configuration options for servers. \n\nEach configuration option will include both an <code>itemPrice</code> and a <code>template</code>. \n\nThe <code>itemPrice</code> value will provide hourly and monthly costs (if either are applicable), and a description of the option. \n\nThe <code>template</code> will provide a fragment of the request with the properties and values that must be sent when creating a server with the option. \n\nThe [[SoftLayer_Hardware/getCreateObjectOptions|getCreateObjectOptions]] method returns this data structure. \n\n<style type=\"text/css\">#properties .views-field-body p { margin-top: 1.5em; };</style> ",
        "properties": {
            "datacenters": {
                "name": "datacenters",
                "type": "SoftLayer_Container_Hardware_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable datacenter options. \n\n\nThe <code>datacenter.name</code> value in the template represents which datacenter the server will be provisioned in. \n</div> "
            },
            "fixedConfigurationPresets": {
                "name": "fixedConfigurationPresets",
                "type": "SoftLayer_Container_Hardware_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable fixed configuration preset options. \n\n\nThe <code>fixedConfigurationPreset.keyName</code> value in the template is an identifier for a particular fixed configuration. When provided exactly as shown in the template, that fixed configuration will be used. \n\n\nWhen providing a <code>fixedConfigurationPreset.keyName</code> while ordering a server the <code>processors</code> and <code>hardDrives</code> configuration options cannot be used. \n</div> "
            },
            "hardDrives": {
                "name": "hardDrives",
                "type": "SoftLayer_Container_Hardware_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable hard drive options. \n\n\nA server will have at least one hard drive. \n\n\nThe <code>hardDrives.capacity</code> value in the template represents the size, in gigabytes, of the disk. \n</div> "
            },
            "networkComponents": {
                "name": "networkComponents",
                "type": "SoftLayer_Container_Hardware_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable network component options. \n\n\nThe <code>networkComponent.maxSpeed</code> value in the template represents the link speed, in megabits per second, of the network connections for a server. \n</div> "
            },
            "operatingSystems": {
                "name": "operatingSystems",
                "type": "SoftLayer_Container_Hardware_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable operating system options. \n\n\nThe <code>operatingSystemReferenceCode</code> value in the template is an identifier for a particular operating system. When provided exactly as shown in the template, that operating system will be used. \n\n\nA reference code is structured as three tokens separated by underscores. The first token represents the product, the second is the version of the product, and the third is whether the OS is 32 or 64bit. \n\n\nWhen providing an <code>operatingSystemReferenceCode</code> while ordering a server the only token required to match exactly is the product. The version token may be given as 'LATEST', else it will require an exact match as well. When the bits token is not provided, 64 bits will be assumed. \n\n\nProviding the value of 'LATEST' for a version will select the latest release of that product for the operating system. As this may change over time, you should be sure that the release version is irrelevant for your applications. \n\n\nFor Windows based operating systems the version will represent both the release version (2008, 2012, etc) and the edition (Standard, Enterprise, etc). For all other operating systems the version will represent the major version (Centos 6, Ubuntu 12, etc) of that operating system, minor versions are represented in few reference codes where they are significant. \n</div> "
            },
            "processors": {
                "name": "processors",
                "type": "SoftLayer_Container_Hardware_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable processor options. \n\n\nThe <code>processorCoreAmount</code> value in the template represents the number of cores allocated to the server. \nThe <code>memoryCapacity</code> value in the template represents the amount of memory, in gigabytes, allocated to the server. \n</div> "
            }
        }
    },
    "SoftLayer_Container_Hardware_Configuration_Option": {
        "name": "SoftLayer_Container_Hardware_Configuration_Option",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "An option found within a [[SoftLayer_Container_Hardware_Configuration (type)]] structure. ",
        "properties": {
            "itemPrice": {
                "name": "itemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "doc": "\nProvides hourly and monthly costs (if either are applicable), and a description of the option. "
            },
            "preset": {
                "name": "preset",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "local",
                "doc": "\nProvides a description of a fixed configuration preset with monthly and hourly costs. "
            },
            "template": {
                "name": "template",
                "type": "SoftLayer_Hardware",
                "form": "local",
                "doc": "\nProvides a fragment of the request with the properties and values that must be sent when creating a server with the option. "
            }
        }
    },
    "SoftLayer_Container_Hardware_DiskImageMap": {
        "name": "SoftLayer_Container_Hardware_DiskImageMap",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "bootFlag": {
                "name": "bootFlag",
                "type": "int",
                "form": "local"
            },
            "diskImageUUID": {
                "name": "diskImageUUID",
                "type": "string",
                "form": "local"
            },
            "diskSerialNumber": {
                "name": "diskSerialNumber",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Hardware_MassUpdate": {
        "name": "SoftLayer_Container_Hardware_MassUpdate",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "The hardwares updated by the mass update tool"
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "Errors encountered while mass updating hardwares"
            },
            "successFlag": {
                "name": "successFlag",
                "type": "string",
                "form": "local",
                "doc": "The hardwares that failed to update"
            }
        }
    },
    "SoftLayer_Container_Hardware_Pool_Details": {
        "name": "SoftLayer_Container_Hardware_Pool_Details",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "pendingOrders": {
                "name": "pendingOrders",
                "type": "int",
                "form": "local"
            },
            "pendingTransactions": {
                "name": "pendingTransactions",
                "type": "int",
                "form": "local"
            },
            "poolDescription": {
                "name": "poolDescription",
                "type": "string",
                "form": "local"
            },
            "poolKeyName": {
                "name": "poolKeyName",
                "type": "string",
                "form": "local"
            },
            "poolName": {
                "name": "poolName",
                "type": "string",
                "form": "local"
            },
            "routers": {
                "name": "routers",
                "type": "SoftLayer_Container_Hardware_Pool_Details_Router",
                "form": "local",
                "typeArray": true
            },
            "totalHardware": {
                "name": "totalHardware",
                "type": "int",
                "form": "local"
            },
            "totalInventoryHardware": {
                "name": "totalInventoryHardware",
                "type": "int",
                "form": "local"
            },
            "totalProvisionedHardware": {
                "name": "totalProvisionedHardware",
                "type": "int",
                "form": "local"
            },
            "totalTestedHardware": {
                "name": "totalTestedHardware",
                "type": "int",
                "form": "local"
            },
            "totalTestingHardware": {
                "name": "totalTestingHardware",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Hardware_Pool_Details_Router": {
        "name": "SoftLayer_Container_Hardware_Pool_Details_Router",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "poolThreshold": {
                "name": "poolThreshold",
                "type": "int",
                "form": "local"
            },
            "routerId": {
                "name": "routerId",
                "type": "int",
                "form": "local"
            },
            "routerName": {
                "name": "routerName",
                "type": "string",
                "form": "local"
            },
            "totalHardware": {
                "name": "totalHardware",
                "type": "int",
                "form": "local"
            },
            "totalInventoryHardware": {
                "name": "totalInventoryHardware",
                "type": "int",
                "form": "local"
            },
            "totalProvisionedHardware": {
                "name": "totalProvisionedHardware",
                "type": "int",
                "form": "local"
            },
            "totalTestedHardware": {
                "name": "totalTestedHardware",
                "type": "int",
                "form": "local"
            },
            "totalTestingHardware": {
                "name": "totalTestingHardware",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Hardware_Server_Configuration": {
        "name": "SoftLayer_Container_Hardware_Server_Configuration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Hardware_Server_Configuration data type contains information relating to a server's item price information, and hard drive partition information. ",
        "properties": {
            "addToSparePoolAfterOsReload": {
                "name": "addToSparePoolAfterOsReload",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating that the server will be moved into the spare pool after an Operating system reload."
            },
            "customProvisionScriptUri": {
                "name": "customProvisionScriptUri",
                "type": "string",
                "form": "local",
                "doc": "The customer provision uri will be used to download and execute a customer defined script on the host at the end of provisioning."
            },
            "driveRetentionFlag": {
                "name": "driveRetentionFlag",
                "type": "boolean",
                "form": "local",
                "doc": "A flag indicating that the primary drive will be converted to a portable storage volume during an Operating System reload."
            },
            "eraseHardDrives": {
                "name": "eraseHardDrives",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating that all data will be erased from drives during an Operating System reload."
            },
            "hardDrives": {
                "name": "hardDrives",
                "type": "SoftLayer_Hardware_Component",
                "form": "local",
                "typeArray": true,
                "doc": "The hard drive partitions that a server can be partitioned with."
            },
            "imageTemplateId": {
                "name": "imageTemplateId",
                "type": "int",
                "form": "local",
                "doc": "An Image Template ID [[SoftLayer_Virtual_Guest_Block_Device_Template_Group]] that will be deployed to the host.  If provided no item prices are required."
            },
            "itemPrices": {
                "name": "itemPrices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "typeArray": true,
                "doc": "The item prices that a server can be configured with."
            },
            "lvmFlag": {
                "name": "lvmFlag",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating that the provision should use LVM for all logical drives."
            },
            "resetIpmiPassword": {
                "name": "resetIpmiPassword",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating that the remote management cards password will be reset."
            },
            "serviceToken": {
                "name": "serviceToken",
                "type": "string",
                "form": "local",
                "doc": "The token of the requesting service. Do not set."
            },
            "sshKeyIds": {
                "name": "sshKeyIds",
                "type": "int",
                "form": "local",
                "typeArray": true,
                "doc": "IDs to SoftLayer_Security_Ssh_Key objects on the current account which will be added to the server for authentication. SSH Keys will not be added to servers with Microsoft Windows. "
            },
            "upgradeBios": {
                "name": "upgradeBios",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating that the BIOS will be updated when installing the operating system."
            },
            "upgradeHardDriveFirmware": {
                "name": "upgradeHardDriveFirmware",
                "type": "int",
                "form": "local",
                "doc": "A flag indicating that the firmware on all hard drives will be updated when installing the operating system."
            }
        }
    },
    "SoftLayer_Container_Hardware_Server_Details": {
        "name": "SoftLayer_Container_Hardware_Server_Details",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Hardware_Server_Details data type contains information relating to a server's component information, network information, and software information. ",
        "properties": {
            "components": {
                "name": "components",
                "type": "SoftLayer_Hardware_Component",
                "form": "local",
                "typeArray": true,
                "doc": "The components that belong to a piece of hardware."
            },
            "networkComponents": {
                "name": "networkComponents",
                "type": "SoftLayer_Network_Component",
                "form": "local",
                "typeArray": true,
                "doc": "The network components that belong to a piece of hardware."
            },
            "software": {
                "name": "software",
                "type": "SoftLayer_Software_Component",
                "form": "local",
                "typeArray": true,
                "doc": "The software that belong to a piece of hardware."
            }
        }
    },
    "SoftLayer_Container_Hardware_Server_Request": {
        "name": "SoftLayer_Container_Hardware_Server_Request",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local"
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local"
            },
            "successFlag": {
                "name": "successFlag",
                "type": "boolean",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Image_StorageGroupDetails": {
        "name": "SoftLayer_Container_Image_StorageGroupDetails",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "drives": {
                "name": "drives",
                "type": "SoftLayer_Container_Image_StorageGroupDetails_Drives",
                "form": "local",
                "typeArray": true
            },
            "storageGroupName": {
                "name": "storageGroupName",
                "type": "string",
                "form": "local"
            },
            "storageGroupType": {
                "name": "storageGroupType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Image_StorageGroupDetails_Drives": {
        "name": "SoftLayer_Container_Image_StorageGroupDetails_Drives",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local"
            },
            "diskSpace": {
                "name": "diskSpace",
                "type": "string",
                "form": "local"
            },
            "units": {
                "name": "units",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_KnowledgeLayer_QuestionAnswer": {
        "name": "SoftLayer_Container_KnowledgeLayer_QuestionAnswer",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_KnowledgeLayer_QuestionAnswer models a single question and answer pair from SoftLayer's KnowledgeLayer knowledge base. SoftLayer's backend network interfaces with the KnowledgeLayer to recommend helpful articles when support tickets are created. ",
        "properties": {
            "answer": {
                "name": "answer",
                "type": "string",
                "form": "local",
                "doc": "The answer to a question asked on the SoftLayer KnowledgeLayer."
            },
            "link": {
                "name": "link",
                "type": "string",
                "form": "local",
                "doc": "The link to a question asked on the SoftLayer KnowledgeLayer."
            },
            "question": {
                "name": "question",
                "type": "string",
                "form": "local",
                "doc": "A question asked on the SoftLayer KnowledgeLayer."
            }
        }
    },
    "SoftLayer_Container_Message": {
        "name": "SoftLayer_Container_Message",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "message": {
                "name": "message",
                "type": "string",
                "form": "local"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Metric_Data_Type": {
        "name": "SoftLayer_Container_Metric_Data_Type",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "summaryType": {
                "name": "summaryType",
                "type": "string",
                "form": "local"
            },
            "unit": {
                "name": "unit",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Metric_Tracking_Object_Details": {
        "name": "SoftLayer_Container_Metric_Tracking_Object_Details",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Metric_Tracking_Object_Details This container is a parent class for detailing diverse metrics.",
        "properties": {
            "metricName": {
                "name": "metricName",
                "type": "string",
                "form": "local",
                "doc": "The name that best describes the metric being collected."
            }
        }
    },
    "SoftLayer_Container_Metric_Tracking_Object_Summary": {
        "name": "SoftLayer_Container_Metric_Tracking_Object_Summary",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Metric_Tracking_Object_Summary This container is a parent class for summarizing diverse metrics.",
        "properties": {
            "metricName": {
                "name": "metricName",
                "type": "string",
                "form": "local",
                "doc": "The name that best describes the metric being collected."
            }
        }
    },
    "SoftLayer_Container_Metric_Tracking_Object_Virtual_Host_Details": {
        "name": "SoftLayer_Container_Metric_Tracking_Object_Virtual_Host_Details",
        "base": "SoftLayer_Container_Metric_Tracking_Object_Details",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Metric_Tracking_Object_Virtual_Host_Details This container details a virtual host's metric data.",
        "properties": {
            "day": {
                "name": "day",
                "type": "dateTime",
                "form": "local",
                "doc": "The day this metric was collected."
            },
            "maxInstances": {
                "name": "maxInstances",
                "type": "int",
                "form": "local",
                "doc": "The maximum number of guests hosted by this platform for the given day."
            },
            "maxMemoryUsage": {
                "name": "maxMemoryUsage",
                "type": "int",
                "form": "local",
                "doc": "The maximum amount of memory utilized by this platform for the given day."
            },
            "meanInstances": {
                "name": "meanInstances",
                "type": "float",
                "form": "local",
                "doc": "The mean number of guests hosted by this platform for the given day."
            },
            "meanMemoryUsage": {
                "name": "meanMemoryUsage",
                "type": "float",
                "form": "local",
                "doc": "The mean amount of memory utilized by this platform for the given day."
            },
            "minInstances": {
                "name": "minInstances",
                "type": "int",
                "form": "local",
                "doc": "The minimum number of guests hosted by this platform for the given day."
            },
            "minMemoryUsage": {
                "name": "minMemoryUsage",
                "type": "int",
                "form": "local",
                "doc": "The minimum amount of memory utilized by this platform for the given day."
            }
        }
    },
    "SoftLayer_Container_Metric_Tracking_Object_Virtual_Host_Summary": {
        "name": "SoftLayer_Container_Metric_Tracking_Object_Virtual_Host_Summary",
        "base": "SoftLayer_Container_Metric_Tracking_Object_Summary",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Metric_Tracking_Object_Virtual_Host_Summary This container summarizes a virtual host's metric data.",
        "properties": {
            "avgMemoryUsageInBillingCycle": {
                "name": "avgMemoryUsageInBillingCycle",
                "type": "int",
                "form": "local",
                "doc": "The average amount of memory usage thus far in this billing cycle."
            },
            "currentBillCycleEnd": {
                "name": "currentBillCycleEnd",
                "type": "dateTime",
                "form": "local",
                "doc": "Current bill cycle end date."
            },
            "currentBillCycleStart": {
                "name": "currentBillCycleStart",
                "type": "dateTime",
                "form": "local",
                "doc": "Current bill cycle start date."
            },
            "lastInstanceCount": {
                "name": "lastInstanceCount",
                "type": "int",
                "form": "local",
                "doc": "The last count of instances this platform was hosting."
            },
            "lastMemoryUsageAmount": {
                "name": "lastMemoryUsageAmount",
                "type": "int",
                "form": "local",
                "doc": "The last amount of memory this platform was using."
            },
            "lastPollTime": {
                "name": "lastPollTime",
                "type": "dateTime",
                "form": "local",
                "doc": "The last time this virtual host was polled for metrics."
            },
            "maxInstanceInBillingCycle": {
                "name": "maxInstanceInBillingCycle",
                "type": "int",
                "form": "local",
                "doc": "The max number of instances hosted thus far in this billing cycle."
            },
            "previousBillCycleEnd": {
                "name": "previousBillCycleEnd",
                "type": "dateTime",
                "form": "local",
                "doc": "Previous bill cycle end date."
            },
            "previousBillCycleStart": {
                "name": "previousBillCycleStart",
                "type": "dateTime",
                "form": "local",
                "doc": "Previous bill cycle start date."
            },
            "virtualPlatformName": {
                "name": "virtualPlatformName",
                "type": "string",
                "form": "local",
                "doc": "This virtual hosting platform name."
            }
        }
    },
    "SoftLayer_Container_Monitoring_Alarm_History": {
        "name": "SoftLayer_Container_Monitoring_Alarm_History",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Monitoring_Alarm_History data type contains information relating to SoftLayer monitoring alarm history. ",
        "properties": {
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local",
                "doc": "Account ID that this alarm belongs to"
            },
            "agentId": {
                "name": "agentId",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. ID of the monitoring agent that triggered this alarm"
            },
            "alarmId": {
                "name": "alarmId",
                "type": "string",
                "form": "local",
                "doc": "Alarm ID"
            },
            "closedDate": {
                "name": "closedDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Time that an alarm was closed."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Time that an alarm was triggered"
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "Alarm message"
            },
            "robotId": {
                "name": "robotId",
                "type": "int",
                "form": "local",
                "doc": "DEPRECATED. Robot ID"
            },
            "severity": {
                "name": "severity",
                "type": "string",
                "form": "local",
                "doc": "Severity of an alarm"
            }
        }
    },
    "SoftLayer_Container_Network_Authentication_Data": {
        "name": "SoftLayer_Container_Network_Authentication_Data",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This object holds authentication data to a server. ",
        "properties": {
            "host": {
                "name": "host",
                "type": "string",
                "form": "local",
                "doc": "The name of a host"
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "The authentication password"
            },
            "port": {
                "name": "port",
                "type": "int",
                "form": "local",
                "doc": "The port number"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of network protocol. This can be ftp, ssh and so on."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The authentication username"
            }
        }
    },
    "SoftLayer_Container_Network_Bandwidth_Data_Summary": {
        "name": "SoftLayer_Container_Network_Bandwidth_Data_Summary",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Bandwidth_Data_Summary models an interface's overall bandwidth usage during it's current billing cycle. ",
        "properties": {
            "allowedUsage": {
                "name": "allowedUsage",
                "type": "float",
                "form": "local",
                "doc": "The amount of bandwidth a server has allocated to it in it's current billing period."
            },
            "estimatedUsage": {
                "name": "estimatedUsage",
                "type": "float",
                "form": "local",
                "doc": "The amount of bandwidth that a server has used within it's current billing period."
            },
            "projectedUsage": {
                "name": "projectedUsage",
                "type": "float",
                "form": "local",
                "doc": "The amount of bandwidth a server is projected to use within its billing period, based on it's current usage."
            },
            "usageUnits": {
                "name": "usageUnits",
                "type": "string",
                "form": "local",
                "doc": "The unit of measurement used in a bandwidth data summary."
            }
        }
    },
    "SoftLayer_Container_Network_Bandwidth_Version1_Usage": {
        "name": "SoftLayer_Container_Network_Bandwidth_Version1_Usage",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Bandwidth_Version1_Usage models an hourly bandwidth record.",
        "properties": {
            "incomingAmount": {
                "name": "incomingAmount",
                "type": "float",
                "form": "local",
                "doc": "The amount of incoming bandwidth that a server has used within the hour of the recordedDate."
            },
            "outgoingAmount": {
                "name": "outgoingAmount",
                "type": "float",
                "form": "local",
                "doc": "The amount of outgoing bandwidth that a server has used within the hour of the recordedDate."
            },
            "recordedDate": {
                "name": "recordedDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date and time that the bandwidth was used by a piece of hardware"
            }
        }
    },
    "SoftLayer_Container_Network_Directory_Listing": {
        "name": "SoftLayer_Container_Network_Directory_Listing",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Directory_Listing represents a single entry in a listing of files within a remote directory. API methods that return remote directory listings typically return arrays of SoftLayer_Container_Network_Directory_Listing objects. ",
        "properties": {
            "fileCount": {
                "name": "fileCount",
                "type": "int",
                "form": "local",
                "doc": "If the file in a directory listing is a directory itself then fileCount is the number of files within the directory. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a directory or a file within a directory listing."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of file in a directory listing. If a directory listing entry is a directory itself then type is set to \"directory\". Otherwise, type is a blank string. "
            }
        }
    },
    "SoftLayer_Container_Network_LoadBalancer_StatusEntry": {
        "name": "SoftLayer_Container_Network_LoadBalancer_StatusEntry",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The LoadBalancer_StatusEntry object stores information about the current status of a particular load balancer service. \n\nIt is a data container that cannot be edited, deleted, or saved. \n\nIt is returned exclusively by the getStatus method on the [[SoftLayer_Network_LoadBalancer_Service]] service ",
        "properties": {
            "content": {
                "name": "content",
                "type": "string",
                "form": "local",
                "doc": "The value of the entry."
            },
            "label": {
                "name": "label",
                "type": "string",
                "form": "local",
                "doc": "Text description of the status entry"
            }
        }
    },
    "SoftLayer_Container_Network_Media_Information": {
        "name": "SoftLayer_Container_Network_Media_Information",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container class holds information on a media file such as file name, codec, frame rate and so on ",
        "properties": {
            "audioBitRate": {
                "name": "audioBitRate",
                "type": "int",
                "form": "local",
                "doc": "The audio bit rate"
            },
            "audioChannelMode": {
                "name": "audioChannelMode",
                "type": "string",
                "form": "local",
                "doc": "The audio channel mode"
            },
            "audioChannels": {
                "name": "audioChannels",
                "type": "int",
                "form": "local",
                "doc": "The number of audio channels"
            },
            "audioCodec": {
                "name": "audioCodec",
                "type": "string",
                "form": "local",
                "doc": "The audio codec name"
            },
            "audioSampleRate": {
                "name": "audioSampleRate",
                "type": "int",
                "form": "local",
                "doc": "The audio sample rate"
            },
            "duration": {
                "name": "duration",
                "type": "float",
                "form": "local",
                "doc": "The duration of a media"
            },
            "errorMessage": {
                "name": "errorMessage",
                "type": "string",
                "form": "local",
                "doc": "The error message if any."
            },
            "file": {
                "name": "file",
                "type": "string",
                "form": "local",
                "doc": "The name of a media file"
            },
            "fileFormat": {
                "name": "fileFormat",
                "type": "string",
                "form": "local",
                "doc": "The file format"
            },
            "fileSize": {
                "name": "fileSize",
                "type": "unsignedLong",
                "form": "local",
                "doc": "The size of a media file in byte"
            },
            "frameRate": {
                "name": "frameRate",
                "type": "float",
                "form": "local",
                "doc": "The frame rate"
            },
            "sizeX": {
                "name": "sizeX",
                "type": "int",
                "form": "local",
                "doc": "The width of a media in pixel"
            },
            "sizeY": {
                "name": "sizeY",
                "type": "int",
                "form": "local",
                "doc": "The height of a media in pixel"
            },
            "totalFrames": {
                "name": "totalFrames",
                "type": "unsignedLong",
                "form": "local",
                "doc": "The total of frames"
            },
            "videoAspectX": {
                "name": "videoAspectX",
                "type": "float",
                "form": "local",
                "doc": "The width in a video's width to height aspect ratio"
            },
            "videoAspectY": {
                "name": "videoAspectY",
                "type": "int",
                "form": "local",
                "doc": "The height in a video's width to height aspect ratio"
            },
            "videoCodec": {
                "name": "videoCodec",
                "type": "string",
                "form": "local",
                "doc": "The video codec name"
            }
        }
    },
    "SoftLayer_Container_Network_Media_Transcode_Job_Watermark": {
        "name": "SoftLayer_Container_Network_Media_Transcode_Job_Watermark",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "endTime": {
                "name": "endTime",
                "type": "int",
                "form": "local",
                "doc": "Time to stop showing watermark in milliseconds"
            },
            "fileName": {
                "name": "fileName",
                "type": "string",
                "form": "local",
                "doc": "Filename of image to use as watermark in transcoding job"
            },
            "position": {
                "name": "position",
                "type": "SoftLayer_Container_Network_Media_Transcode_Job_Watermark_Position",
                "form": "local",
                "doc": "Position to place watermark at"
            },
            "startTime": {
                "name": "startTime",
                "type": "int",
                "form": "local",
                "doc": "Time to start showing watermark in milliseconds"
            },
            "text": {
                "name": "text",
                "type": "string",
                "form": "local",
                "doc": "Text to Place in Watermark"
            },
            "transparencyPercentage": {
                "name": "transparencyPercentage",
                "type": "int",
                "form": "local",
                "doc": "Percentage Transparent watermark should be"
            }
        }
    },
    "SoftLayer_Container_Network_Media_Transcode_Job_Watermark_Position": {
        "name": "SoftLayer_Container_Network_Media_Transcode_Job_Watermark_Position",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "x": {
                "name": "x",
                "type": "int",
                "form": "local",
                "doc": "X Coordinate of Watermark"
            },
            "y": {
                "name": "y",
                "type": "int",
                "form": "local",
                "doc": "vertical Coordinate of Watermark"
            }
        }
    },
    "SoftLayer_Container_Network_Media_Transcode_Preset": {
        "name": "SoftLayer_Container_Network_Media_Transcode_Preset",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Transcode preset is a set of configuration parameters that defines a Transcode output format. SoftLayer_Container_Network_Media_Transcode_Preset contains a preset information defined on a Transcode server ",
        "properties": {
            "GUID": {
                "name": "GUID",
                "type": "string",
                "form": "local",
                "doc": "The unique id that is used by a Transcode server"
            },
            "category": {
                "name": "category",
                "type": "string",
                "form": "local",
                "doc": "The category that a preset belongs to"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of the preset"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The friendly name of a preset"
            }
        }
    },
    "SoftLayer_Container_Network_Media_Transcode_Preset_Element": {
        "name": "SoftLayer_Container_Network_Media_Transcode_Preset_Element",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Transcode preset element ",
        "properties": {
            "additionalElements": {
                "name": "additionalElements",
                "type": "SoftLayer_Container_Network_Media_Transcode_Preset_Element_Option",
                "form": "local",
                "typeArray": true,
                "doc": "The additional elements for DROPDOWNLIST element"
            },
            "defaultValue": {
                "name": "defaultValue",
                "type": "string",
                "form": "local",
                "doc": "The default value of an element."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description of a preset element"
            },
            "enabled": {
                "name": "enabled",
                "type": "boolean",
                "form": "local",
                "doc": "The flag that indicates whether an element is enabled or not"
            },
            "extendedDescription": {
                "name": "extendedDescription",
                "type": "string",
                "form": "local",
                "doc": "The extended description of a preset element"
            },
            "hidden": {
                "name": "hidden",
                "type": "boolean",
                "form": "local",
                "doc": "The flag that indicates whether an element is hidden or not"
            },
            "maximumValue": {
                "name": "maximumValue",
                "type": "int",
                "form": "local",
                "doc": "The maximum value of an element"
            },
            "minimumValue": {
                "name": "minimumValue",
                "type": "int",
                "form": "local",
                "doc": "The minimum value of an element"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of an preset element"
            },
            "parentName": {
                "name": "parentName",
                "type": "string",
                "form": "local",
                "doc": "The name of a parent element"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "The type of an preset element."
            }
        }
    },
    "SoftLayer_Container_Network_Media_Transcode_Preset_Element_Option": {
        "name": "SoftLayer_Container_Network_Media_Transcode_Preset_Element_Option",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Transcode preset element ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of a additional preset element"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The value of a additional preset element"
            }
        }
    },
    "SoftLayer_Container_Network_Message_Delivery_Email": {
        "name": "SoftLayer_Container_Network_Message_Delivery_Email",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This datatype is deprecated and will be removed in API version 3.2.",
        "properties": {
            "body": {
                "name": "body",
                "type": "string",
                "form": "local"
            },
            "containsHtml": {
                "name": "containsHtml",
                "type": "boolean",
                "form": "local"
            },
            "from": {
                "name": "from",
                "type": "string",
                "form": "local"
            },
            "subject": {
                "name": "subject",
                "type": "string",
                "form": "local"
            },
            "to": {
                "name": "to",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Account_Overview": {
        "name": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Account_Overview",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "creditsAllowed": {
                "name": "creditsAllowed",
                "type": "int",
                "form": "local"
            },
            "creditsOverage": {
                "name": "creditsOverage",
                "type": "int",
                "form": "local"
            },
            "creditsRemain": {
                "name": "creditsRemain",
                "type": "int",
                "form": "local"
            },
            "creditsUsed": {
                "name": "creditsUsed",
                "type": "int",
                "form": "local"
            },
            "package": {
                "name": "package",
                "type": "string",
                "form": "local"
            },
            "reputation": {
                "name": "reputation",
                "type": "int",
                "form": "local"
            },
            "requests": {
                "name": "requests",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Customer_Profile": {
        "name": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Customer_Profile",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "address": {
                "name": "address",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            },
            "phone": {
                "name": "phone",
                "type": "string",
                "form": "local"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            },
            "website": {
                "name": "website",
                "type": "string",
                "form": "local"
            },
            "zip": {
                "name": "zip",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_List_Entry": {
        "name": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_List_Entry",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "created": {
                "name": "created",
                "type": "string",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local"
            },
            "reason": {
                "name": "reason",
                "type": "string",
                "form": "local"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics": {
        "name": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "blocks": {
                "name": "blocks",
                "type": "int",
                "form": "local"
            },
            "bounces": {
                "name": "bounces",
                "type": "int",
                "form": "local"
            },
            "clicks": {
                "name": "clicks",
                "type": "int",
                "form": "local"
            },
            "date": {
                "name": "date",
                "type": "string",
                "form": "local"
            },
            "delivered": {
                "name": "delivered",
                "type": "int",
                "form": "local"
            },
            "invalidEmail": {
                "name": "invalidEmail",
                "type": "int",
                "form": "local"
            },
            "opens": {
                "name": "opens",
                "type": "int",
                "form": "local"
            },
            "repeatBounces": {
                "name": "repeatBounces",
                "type": "int",
                "form": "local"
            },
            "repeatSpamReports": {
                "name": "repeatSpamReports",
                "type": "int",
                "form": "local"
            },
            "repeatUnsubscribes": {
                "name": "repeatUnsubscribes",
                "type": "int",
                "form": "local"
            },
            "requests": {
                "name": "requests",
                "type": "int",
                "form": "local"
            },
            "spamReports": {
                "name": "spamReports",
                "type": "int",
                "form": "local"
            },
            "uniqueClicks": {
                "name": "uniqueClicks",
                "type": "int",
                "form": "local"
            },
            "uniqueOpens": {
                "name": "uniqueOpens",
                "type": "int",
                "form": "local"
            },
            "unsubscribes": {
                "name": "unsubscribes",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics_Graph": {
        "name": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics_Graph",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "graphError": {
                "name": "graphError",
                "type": "string",
                "form": "local"
            },
            "graphImage": {
                "name": "graphImage",
                "type": "base64Binary",
                "form": "local"
            },
            "graphTitle": {
                "name": "graphTitle",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics_Options": {
        "name": "SoftLayer_Container_Network_Message_Delivery_Email_Sendgrid_Statistics_Options",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "aggregatesOnly": {
                "name": "aggregatesOnly",
                "type": "boolean",
                "form": "local"
            },
            "category": {
                "name": "category",
                "type": "string",
                "form": "local"
            },
            "days": {
                "name": "days",
                "type": "int",
                "form": "local"
            },
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local"
            },
            "selectedStatistics": {
                "name": "selectedStatistics",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Port_Statistic": {
        "name": "SoftLayer_Container_Network_Port_Statistic",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "administrativeStatus": {
                "name": "administrativeStatus",
                "type": "int",
                "form": "local"
            },
            "inDiscardPackets": {
                "name": "inDiscardPackets",
                "type": "unsignedLong",
                "form": "local"
            },
            "inErrorPackets": {
                "name": "inErrorPackets",
                "type": "unsignedLong",
                "form": "local"
            },
            "inOctets": {
                "name": "inOctets",
                "type": "unsignedLong",
                "form": "local"
            },
            "inUnicastPackets": {
                "name": "inUnicastPackets",
                "type": "unsignedLong",
                "form": "local"
            },
            "maximumTransmissionUnit": {
                "name": "maximumTransmissionUnit",
                "type": "unsignedLong",
                "form": "local"
            },
            "operationalStatus": {
                "name": "operationalStatus",
                "type": "int",
                "form": "local"
            },
            "outDiscardPackets": {
                "name": "outDiscardPackets",
                "type": "unsignedLong",
                "form": "local"
            },
            "outErrorPackets": {
                "name": "outErrorPackets",
                "type": "unsignedLong",
                "form": "local"
            },
            "outOctets": {
                "name": "outOctets",
                "type": "unsignedLong",
                "form": "local"
            },
            "outUnicastPackets": {
                "name": "outUnicastPackets",
                "type": "unsignedLong",
                "form": "local"
            },
            "portDuplex": {
                "name": "portDuplex",
                "type": "unsignedLong",
                "form": "local"
            },
            "speed": {
                "name": "speed",
                "type": "unsignedLong",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_SecurityGroup_Limit": {
        "name": "SoftLayer_Container_Network_SecurityGroup_Limit",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "typeKey": {
                "name": "typeKey",
                "type": "string",
                "form": "local",
                "doc": "A key value describing what type of limit."
            },
            "value": {
                "name": "value",
                "type": "int",
                "form": "local",
                "doc": "The value of the security group limit."
            }
        }
    },
    "SoftLayer_Container_Network_Service_Resource_ObjectStorage_ConnectionInformation": {
        "name": "SoftLayer_Container_Network_Service_Resource_ObjectStorage_ConnectionInformation",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "datacenter": {
                "name": "datacenter",
                "type": "string",
                "form": "local"
            },
            "datacenterShortName": {
                "name": "datacenterShortName",
                "type": "string",
                "form": "local"
            },
            "privateEndpoint": {
                "name": "privateEndpoint",
                "type": "string",
                "form": "local"
            },
            "publicEndpoint": {
                "name": "publicEndpoint",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Backup_Evault_WebCc_Authentication_Details": {
        "name": "SoftLayer_Container_Network_Storage_Backup_Evault_WebCc_Authentication_Details",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "eventValidation": {
                "name": "eventValidation",
                "type": "string",
                "form": "local"
            },
            "viewState": {
                "name": "viewState",
                "type": "string",
                "form": "local"
            },
            "webCcFormName": {
                "name": "webCcFormName",
                "type": "string",
                "form": "local"
            },
            "webCcUrl": {
                "name": "webCcUrl",
                "type": "string",
                "form": "local"
            },
            "webCcUserId": {
                "name": "webCcUserId",
                "type": "string",
                "form": "local"
            },
            "webCcUserPassword": {
                "name": "webCcUserPassword",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Evault_Vault_Task": {
        "name": "SoftLayer_Container_Network_Storage_Evault_Vault_Task",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer's StorageLayer Evault services provides details regarding the the purchased vault. \n\nWhen a job is created using the Webcc Console, the job created is identified as a task on the vault. Using this service, information regarding the task can be retrieved. \n\n",
        "properties": {
            "id": {
                "name": "id",
                "type": "unsignedInt",
                "form": "local",
                "doc": "Unique identifier for the task."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The hostname provided at time of agent registration."
            },
            "usedPoolsize": {
                "name": "usedPoolsize",
                "type": "unsignedLong",
                "form": "local",
                "doc": "Total compressed bytes used for the task."
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Evault_WebCc_AgentStatus": {
        "name": "SoftLayer_Container_Network_Storage_Evault_WebCc_AgentStatus",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Network_Storage_Evault_WebCc_AgentStatus will contain the timestamp of the last backup performed by the EVault agent.  The agent status will also be returned. ",
        "properties": {
            "lastBackup": {
                "name": "lastBackup",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of last backup performed by the EVault backup agent"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "Status indicating the accumulative status result of all jobs performed by the evault agent.  For example, if one job out three jobs failed agent status will by \"Failed Backup(s)\". "
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Evault_WebCc_BackupResults": {
        "name": "SoftLayer_Container_Network_Storage_Evault_WebCc_BackupResults",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Network_Storage_Evault_WebCc_BackupResults will contain the timeframe of backups and the results will also be returned. ",
        "properties": {
            "beginTime": {
                "name": "beginTime",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of begin time"
            },
            "conflict": {
                "name": "conflict",
                "type": "string",
                "form": "local",
                "doc": "Count of backups with conflicts. "
            },
            "endTime": {
                "name": "endTime",
                "type": "dateTime",
                "form": "local",
                "doc": "Timestamp of end time"
            },
            "failed": {
                "name": "failed",
                "type": "string",
                "form": "local",
                "doc": "Count of failed backups. "
            },
            "success": {
                "name": "success",
                "type": "string",
                "form": "local",
                "doc": "Count of successfull backups. "
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Evault_WebCc_JobDetails": {
        "name": "SoftLayer_Container_Network_Storage_Evault_WebCc_JobDetails",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Network_Storage_Evault_WebCc_JobDetails will contain basic details for all backup and restore jobs performed by the StorageLayer EVault service offering. ",
        "properties": {
            "bytesUsed": {
                "name": "bytesUsed",
                "type": "unsignedLong",
                "form": "local",
                "doc": "The number of bytes currently used by the backup job. (provided only for backup jobs)"
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "Description of the backup/restore job"
            },
            "hardwareId": {
                "name": "hardwareId",
                "type": "int",
                "form": "local",
                "doc": "hardware id"
            },
            "lastRunDate": {
                "name": "lastRunDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Date of the last jobrun."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of the backup/restore job"
            },
            "originalSize": {
                "name": "originalSize",
                "type": "unsignedLong",
                "form": "local",
                "doc": "Size of backup job when it was first run. (provided only for backup jobs)"
            },
            "percentageOfTotalUsage": {
                "name": "percentageOfTotalUsage",
                "type": "int",
                "form": "local",
                "doc": "Percentage of overall used space allocated by the job. (provided only for backup jobs)"
            },
            "result": {
                "name": "result",
                "type": "string",
                "form": "local",
                "doc": "Result of the latest jobrun."
            },
            "virtualGuestId": {
                "name": "virtualGuestId",
                "type": "int",
                "form": "local",
                "doc": "virtual guest id"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Host": {
        "name": "SoftLayer_Container_Network_Storage_Host",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Network_Storage_Host will contain the reference id field for the object associated with the host.  The host object type will also be returned. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "Reference id field for object associated with host."
            },
            "objectType": {
                "name": "objectType",
                "type": "string",
                "form": "local",
                "doc": "Type for the object associated with host"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Bucket": {
        "name": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Bucket",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Bucket provides description of a bucket ",
        "properties": {
            "bytesUsed": {
                "name": "bytesUsed",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "objectCount": {
                "name": "objectCount",
                "type": "int",
                "form": "local"
            },
            "storageLocation": {
                "name": "storageLocation",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_ContentDeliveryUrl": {
        "name": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_ContentDeliveryUrl",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_ContentDeliveryUrl provides specific details is a container which contains the cdn urls associated with an object storage account ",
        "properties": {
            "datacenter": {
                "name": "datacenter",
                "type": "string",
                "form": "local"
            },
            "flashUrl": {
                "name": "flashUrl",
                "type": "string",
                "form": "local"
            },
            "httpUrl": {
                "name": "httpUrl",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Endpoint": {
        "name": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Endpoint",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Endpoint provides specific details on available endpoint URLs and locations. ",
        "properties": {
            "legacy": {
                "name": "legacy",
                "type": "boolean",
                "form": "local"
            },
            "location": {
                "name": "location",
                "type": "string",
                "form": "local"
            },
            "region": {
                "name": "region",
                "type": "string",
                "form": "local"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local"
            },
            "url": {
                "name": "url",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_File": {
        "name": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_File",
        "base": "SoftLayer_Container_Utility_File_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_File provides specific details that only apply to files that are sent or received from CloudLayer storage resources. ",
        "properties": {
            "folder": {
                "name": "folder",
                "type": "string",
                "form": "local"
            },
            "hash": {
                "name": "hash",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Folder": {
        "name": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Folder",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Storage_Hub_Container provides details about containers which store collections of files. ",
        "properties": {
            "bytes": {
                "name": "bytes",
                "type": "unsignedLong",
                "form": "local"
            },
            "count": {
                "name": "count",
                "type": "unsignedLong",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Node": {
        "name": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Node",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Node provides detailed information for a particular object storage node ",
        "properties": {
            "deviceName": {
                "name": "deviceName",
                "type": "string",
                "form": "local"
            },
            "resourceName": {
                "name": "resourceName",
                "type": "string",
                "form": "local"
            },
            "userAuthUrl": {
                "name": "userAuthUrl",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Policy": {
        "name": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Policy",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Policy provides specific details on available storage policies. ",
        "properties": {
            "policyCode": {
                "name": "policyCode",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Provision": {
        "name": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Provision",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Storage_Hub_ObjectStorage_Provision provides description of a provision ",
        "properties": {
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "provision": {
                "name": "provision",
                "type": "string",
                "form": "local"
            },
            "provisionCreateDate": {
                "name": "provisionCreateDate",
                "type": "dateTime",
                "form": "local"
            },
            "provisionModifyDate": {
                "name": "provisionModifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "provisionTime": {
                "name": "provisionTime",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_MassDataMigration_Request_Address": {
        "name": "SoftLayer_Container_Network_Storage_MassDataMigration_Request_Address",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "Line 1 of the address - typically the number and street address the MDMS device will be delivered to"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "Line 2 of the address"
            },
            "addressAttention": {
                "name": "addressAttention",
                "type": "string",
                "form": "local",
                "doc": "First and last name of the customer on the shipping address"
            },
            "addressNickname": {
                "name": "addressNickname",
                "type": "string",
                "form": "local",
                "doc": "The datacenter name where the MDMS device will be shipped to"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The shipping address city"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local",
                "doc": "Name of the company device is being shipped to"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "The shipping address country"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The shipping address postal code"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "The shipping address state"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_NetworkConnectionInformation": {
        "name": "SoftLayer_Container_Network_Storage_NetworkConnectionInformation",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "string",
                "form": "local"
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local"
            },
            "storageType": {
                "name": "storageType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Network_Storage_VolumeDuplicateParameters": {
        "name": "SoftLayer_Container_Network_Storage_VolumeDuplicateParameters",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Container for Volume Duplicate Information ",
        "properties": {
            "iopsPerGb": {
                "name": "iopsPerGb",
                "type": "float",
                "form": "local",
                "doc": "The iopsPerGB of the volume"
            },
            "isDuplicatable": {
                "name": "isDuplicatable",
                "type": "boolean",
                "form": "local",
                "doc": "Returns true if volume can be duplicated; false otherwise"
            },
            "locationId": {
                "name": "locationId",
                "type": "int",
                "form": "local",
                "doc": "This represents the location id"
            },
            "locationName": {
                "name": "locationName",
                "type": "string",
                "form": "local",
                "doc": "This represents the location name"
            },
            "maximumIopsPerGb": {
                "name": "maximumIopsPerGb",
                "type": "float",
                "form": "local",
                "doc": "The maximumIopsPerGb allowed for a duplicated volume"
            },
            "maximumIopsTier": {
                "name": "maximumIopsTier",
                "type": "float",
                "form": "local",
                "doc": "The maximumIopsTier allowed for a duplicated volume"
            },
            "maximumVolumeSize": {
                "name": "maximumVolumeSize",
                "type": "int",
                "form": "local",
                "doc": "The maximumVolumeSize allowed for a duplicated volume"
            },
            "minimumIopsPerGb": {
                "name": "minimumIopsPerGb",
                "type": "float",
                "form": "local",
                "doc": "The minimumIopsPerGb allowed for a duplicated volume"
            },
            "minimumIopsTier": {
                "name": "minimumIopsTier",
                "type": "float",
                "form": "local",
                "doc": "The minimumIopsTier allowed for a duplicated volume"
            },
            "minimumVolumeSize": {
                "name": "minimumVolumeSize",
                "type": "int",
                "form": "local",
                "doc": "The minimumVolumeSize allowed for a duplicated volume"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "The volume duplicate status description"
            },
            "volumeUsername": {
                "name": "volumeUsername",
                "type": "string",
                "form": "local",
                "doc": "This represents the volume username"
            }
        }
    },
    "SoftLayer_Container_Network_Subnet_IpAddress": {
        "name": "SoftLayer_Container_Network_Subnet_IpAddress",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Subnet_IPAddress models an IP v4 address as it exists as a member of it's subnet, letting the user know if it is a network identifier, gateway, broadcast, or useable address. Addresses that are neither the network identifier nor the gateway nor the broadcast addresses are usable by SoftLayer servers. ",
        "properties": {
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "local",
                "doc": "The hardware that an IP address is associated with."
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local",
                "doc": "An IP address expressed in dotted-quad notation."
            },
            "isBroadcastAddress": {
                "name": "isBroadcastAddress",
                "type": "boolean",
                "form": "local",
                "doc": "Whether an IP address is its subnet's broadcast address."
            },
            "isGatewayAddress": {
                "name": "isGatewayAddress",
                "type": "boolean",
                "form": "local",
                "doc": "Whether an IP address is its subnet's gateway address. Gateway addresses exist on SoftLayer's routers and many not be assigned to servers."
            },
            "isNetworkAddress": {
                "name": "isNetworkAddress",
                "type": "boolean",
                "form": "local",
                "doc": "Whether an IP address is its subnet's network identifier address."
            }
        }
    },
    "SoftLayer_Container_Network_Subnet_Registration_SubnetReference": {
        "name": "SoftLayer_Container_Network_Subnet_Registration_SubnetReference",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Network_Subnet_Registration_SubnetReference is provided to reference [[SoftLayer_Network_Subnet_Registration]] object and the [[SoftLayer_Network_Subnet]] it references, in CIDR form. ",
        "properties": {
            "registrationId": {
                "name": "registrationId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the [[SoftLayer_Network_Subnet_Registration]] object."
            },
            "subnetCidr": {
                "name": "subnetCidr",
                "type": "string",
                "form": "local",
                "doc": "The subnet address in CIDR form."
            }
        }
    },
    "SoftLayer_Container_Network_Subnet_Registration_TransactionDetails": {
        "name": "SoftLayer_Container_Network_Subnet_Registration_TransactionDetails",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Subnet_Registration_TransactionDetails is provided to return details of a newly created Subnet Registration Transaction. ",
        "properties": {
            "subnetReferences": {
                "name": "subnetReferences",
                "type": "SoftLayer_Container_Network_Subnet_Registration_SubnetReference",
                "form": "local",
                "typeArray": true,
                "doc": "The IDs and Subnets of the [[SoftLayer_Network_Subnet_Registration]] object."
            },
            "transactionId": {
                "name": "transactionId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the Transaction object."
            }
        }
    },
    "SoftLayer_Container_Notification_Mass_Filter_TemplateKey": {
        "name": "SoftLayer_Container_Notification_Mass_Filter_TemplateKey",
        "base": "SoftLayer_Entity",
        "noservice": true
    },
    "SoftLayer_Container_Notification_Mass_Filter_TemplateValue": {
        "name": "SoftLayer_Container_Notification_Mass_Filter_TemplateValue",
        "base": "SoftLayer_Entity",
        "noservice": true
    },
    "SoftLayer_Container_Policy_Acceptance": {
        "name": "SoftLayer_Container_Policy_Acceptance",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Represents the acceptance status of a Policy.",
        "properties": {
            "acceptedFlag": {
                "name": "acceptedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate if a policy has been previously accepted."
            },
            "policyName": {
                "name": "policyName",
                "type": "string",
                "form": "local",
                "doc": "Name of the policy for which we are representing it's acceptance status."
            },
            "productPolicyAssignmentId": {
                "name": "productPolicyAssignmentId",
                "type": "int",
                "form": "local",
                "doc": "ID of the [[SoftLayer_Product_Item_Policy_Assignment]]."
            }
        }
    },
    "SoftLayer_Container_Product_Item_Category": {
        "name": "SoftLayer_Container_Product_Item_Category",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Product_Item_Category data type represents a single product item category. ",
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "identifier for category."
            }
        }
    },
    "SoftLayer_Container_Product_Item_Category_Question_Answer": {
        "name": "SoftLayer_Container_Product_Item_Category_Question_Answer",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Product_Item_Category_Question_Answer data type represents an answer to an item category question.  It contains the category, the question being answered, and the answer. ",
        "properties": {
            "answer": {
                "name": "answer",
                "type": "string",
                "form": "local",
                "doc": "The answer to the question."
            },
            "categoryCode": {
                "name": "categoryCode",
                "type": "string",
                "form": "local",
                "doc": "The product item category code."
            },
            "categoryId": {
                "name": "categoryId",
                "type": "int",
                "form": "local",
                "doc": "The product item category id."
            },
            "questionId": {
                "name": "questionId",
                "type": "int",
                "form": "local",
                "doc": "The product item category question id."
            }
        }
    },
    "SoftLayer_Container_Product_Item_Category_ZeroFee_Count": {
        "name": "SoftLayer_Container_Product_Item_Category_ZeroFee_Count",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Product_Item_Category_ZeroFee_Count data type represents a count of zero fee billing/invoice items. ",
        "properties": {
            "categoryCode": {
                "name": "categoryCode",
                "type": "string",
                "form": "local",
                "doc": "The product item category code."
            },
            "categoryId": {
                "name": "categoryId",
                "type": "int",
                "form": "local",
                "doc": "The product item category id."
            },
            "categoryName": {
                "name": "categoryName",
                "type": "string",
                "form": "local",
                "doc": "The product item category name."
            },
            "count": {
                "name": "count",
                "type": "int",
                "form": "local",
                "doc": "The count of zero fee items for this category."
            }
        }
    },
    "SoftLayer_Container_Product_Item_Discount_Program": {
        "name": "SoftLayer_Container_Product_Item_Discount_Program",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Product_Item_Discount_Program data type represents the information about a discount that is related to a specific product item. ",
        "properties": {
            "applicableQuantity": {
                "name": "applicableQuantity",
                "type": "int",
                "form": "local",
                "doc": "The number of times the item discount(s) may be applied for that order container.  At a minimum the number will be 1 and at most, it will match the quantity of the order container."
            },
            "item": {
                "name": "item",
                "type": "SoftLayer_Product_Item",
                "form": "local",
                "doc": "The product item that the discount applies to."
            },
            "oneTimeAmount": {
                "name": "oneTimeAmount",
                "type": "decimal",
                "form": "local",
                "doc": "The sum of the one time fees (one time, setup and labor) of the prices of this container multiplied by the applicable quantity of this container."
            },
            "oneTimeTax": {
                "name": "oneTimeTax",
                "type": "decimal",
                "form": "local",
                "doc": "The tax amount on the one time fees (one time, setup and labor) of the prices of this container mulitiplied by the applicable quantity of this container."
            },
            "prices": {
                "name": "prices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "typeArray": true,
                "doc": "The item prices that contain the amount of the discount in the recurringFee field.  There may be one or more prices."
            },
            "proratedOneTimeAmount": {
                "name": "proratedOneTimeAmount",
                "type": "decimal",
                "form": "local",
                "doc": "The sum of the one time fees (one time, setup and labor) of the prices of this container multiplied by the applicable quantity of this container with the proration factor applied."
            },
            "proratedOneTimeTax": {
                "name": "proratedOneTimeTax",
                "type": "decimal",
                "form": "local",
                "doc": "The tax amount on the one time fees (one time, setup and labor) of the prices of this container mulitiplied by the applicable quantity of this container with the proration factor applied."
            },
            "proratedRecurringAmount": {
                "name": "proratedRecurringAmount",
                "type": "decimal",
                "form": "local",
                "doc": "The sum of the recurring fees of the prices of this container multiplied by the applicable quantity of this container with the proration factor applied."
            },
            "proratedRecurringTax": {
                "name": "proratedRecurringTax",
                "type": "decimal",
                "form": "local",
                "doc": "The tax amount on the recurring fees of the prices of this container mulitiplied by the applicable quantity of this container with the proration factor applied."
            },
            "recurringAmount": {
                "name": "recurringAmount",
                "type": "decimal",
                "form": "local",
                "doc": "The sum of the recurring fees of the prices of this container multiplied by the applicable quantity of this container."
            },
            "recurringTax": {
                "name": "recurringTax",
                "type": "decimal",
                "form": "local",
                "doc": "The tax amount on the recurring fees of the prices of this container mulitiplied by the applicable quantity of this container."
            }
        }
    },
    "SoftLayer_Container_Product_Order": {
        "name": "SoftLayer_Container_Product_Order",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order with SoftLayer. ",
        "properties": {
            "bigDataOrderFlag": {
                "name": "bigDataOrderFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag for identifying an order for Big Data Deployment."
            },
            "billingInformation": {
                "name": "billingInformation",
                "type": "SoftLayer_Container_Product_Order_Billing_Information",
                "form": "local",
                "doc": "Billing Information associated with an order. For existing customers this information is completely ignored. Do not send this information for existing customers. "
            },
            "billingOrderItemId": {
                "name": "billingOrderItemId",
                "type": "int",
                "form": "local",
                "doc": "This is the ID of the [[SoftLayer_Billing_Order_Item]] of this configuration/container. It is used for rebuilding an order container from a quote and is set automatically. "
            },
            "cancelUrl": {
                "name": "cancelUrl",
                "type": "string",
                "form": "local",
                "doc": "The URL to which PayPal redirects browser after checkout has been canceled before completion of a payment."
            },
            "containerIdentifier": {
                "name": "containerIdentifier",
                "type": "string",
                "form": "local",
                "doc": "User-specified description to identify a particular order container. This is useful if you have a multi-configuration order (multiple <code>orderContainers</code>) and you want to be able to easily determine one from another. Populating this value may be helpful if an exception is thrown when placing an order and it's tied to a specific order container. "
            },
            "containerSplHash": {
                "name": "containerSplHash",
                "type": "string",
                "form": "local",
                "doc": "This hash is internally-generated and is used to for tracking order containers."
            },
            "currencyShortName": {
                "name": "currencyShortName",
                "type": "string",
                "form": "local",
                "doc": "The currency type chosen at checkout. "
            },
            "deviceFingerprintId": {
                "name": "deviceFingerprintId",
                "type": "string",
                "form": "local",
                "doc": "Device Fingerprint Identifier - Optional."
            },
            "displayLayerSessionId": {
                "name": "displayLayerSessionId",
                "type": "string",
                "form": "local",
                "doc": "This has been deprecated. It is the identifier used to track configurations in legacy order forms. "
            },
            "extendedHardwareTesting": {
                "name": "extendedHardwareTesting",
                "type": "boolean",
                "form": "local"
            },
            "flexibleCreditProgramPrice": {
                "name": "flexibleCreditProgramPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "doc": "The [[SoftLayer_Product_Item_Price]] for the Flexible Credit Program discount.  The <code>oneTimeFee</code> field contains the calculated discount being applied to the order. "
            },
            "gdprConsentFlag": {
                "name": "gdprConsentFlag",
                "type": "boolean",
                "form": "local",
                "doc": "This flag indicates that the customer consented to the GDPR terms for the quote."
            },
            "hardware": {
                "name": "hardware",
                "type": "SoftLayer_Hardware",
                "form": "local",
                "typeArray": true,
                "doc": "For orders that contain servers (bare metal, virtual server, big data, etc.), the hardware property is required. This property is an array of [[SoftLayer_Hardware]] objects. The <code>hostname</code> and <code>domain</code> properties are required for each hardware object. Note that virtual server ([[SoftLayer_Container_Product_Order_Virtual_Guest]]) orders may populate this field instead of the <code>virtualGuests</code> property. "
            },
            "imageTemplateGlobalIdentifier": {
                "name": "imageTemplateGlobalIdentifier",
                "type": "string",
                "form": "local",
                "doc": "An optional virtual disk image template identifier to be used as an installation base for a computing instance order"
            },
            "imageTemplateId": {
                "name": "imageTemplateId",
                "type": "int",
                "form": "local",
                "doc": "An optional virtual disk image template identifier to be used as an installation base for a computing instance order"
            },
            "isManagedOrder": {
                "name": "isManagedOrder",
                "type": "int",
                "form": "local",
                "doc": "Flag to identify a \"managed\" order. This value is set internally."
            },
            "itemCategoryQuestionAnswers": {
                "name": "itemCategoryQuestionAnswers",
                "type": "SoftLayer_Container_Product_Item_Category_Question_Answer",
                "form": "local",
                "typeArray": true,
                "doc": "The collection of [[SoftLayer_Container_Product_Item_Category_Question_Answer]] for any product category that has additional questions requiring user input. "
            },
            "location": {
                "name": "location",
                "type": "string",
                "form": "local",
                "doc": "The [[SoftLayer_Location_Region]] keyname or specific [[SoftLayer_Location_Datacenter]] id where the order should be provisioned. If this value is provided and the <code>regionalGroup</code> property is also specified, an exception will be thrown indicating that only 1 is allowed. "
            },
            "locationObject": {
                "name": "locationObject",
                "type": "SoftLayer_Location",
                "form": "local",
                "doc": "This [[SoftLayer_Location]] object will be determined from the <code>location</code> property and will be returned in the order verification or placement response. Any value specified here will get overwritten by the verification process. "
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local",
                "doc": "A generic message about the order. Does not need to be sent in with any orders. "
            },
            "orderContainers": {
                "name": "orderContainers",
                "type": "SoftLayer_Container_Product_Order",
                "form": "local",
                "typeArray": true,
                "doc": "Orders may contain an array of configurations. Populating this property allows you to purchase multiple configurations within a single order. Each order container will have its own individual settings independent of the other order containers. For example, it is possible to order a bare metal server in one configuration and a virtual server in another. \n\nIf <code>orderContainers</code> is populated on the base order container, most of the configuration-specific properties are ignored on the base container. For example, <code>prices</code>, <code>location</code> and <code>packageId</code> will be ignored on the base container, but since the <code>billingInformation</code> is a property that's not specific to a single order container (but the order as a whole) it must be populated on the base container. "
            },
            "orderHostnames": {
                "name": "orderHostnames",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "This is deprecated and does not do anything. "
            },
            "orderVerificationExceptions": {
                "name": "orderVerificationExceptions",
                "type": "SoftLayer_Container_Exception",
                "form": "local",
                "typeArray": true,
                "doc": "Collection of exceptions resulting from the verification of the order. This value is set internally and is not required for end users when placing an order. When placing API orders, users can use this value to determine the container-specific exception that was thrown. "
            },
            "packageId": {
                "name": "packageId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Product_Package]] id for an order container. This is required to place an order."
            },
            "paymentType": {
                "name": "paymentType",
                "type": "string",
                "form": "local",
                "doc": "The Payment Type is Optional. If nothing is sent in, then the normal method of payment will be used. For paypal customers, this means a paypalToken will be returned in the receipt. This token is to be used on the paypal website to complete the order. For Credit Card customers, the card on file in our system will be used to make an initial authorization. To force the order to use a payment type, use one of the following: CARD_ON_FILE or PAYPAL "
            },
            "postTaxRecurring": {
                "name": "postTaxRecurring",
                "type": "decimal",
                "form": "local",
                "doc": "The post-tax recurring charge for the order. This is the sum of preTaxRecurring + totalRecurringTax."
            },
            "postTaxRecurringHourly": {
                "name": "postTaxRecurringHourly",
                "type": "decimal",
                "form": "local",
                "doc": "The post-tax recurring hourly charge for the order. Since taxes are not calculated for hourly orders, this value will be the same as preTaxRecurringHourly. "
            },
            "postTaxRecurringMonthly": {
                "name": "postTaxRecurringMonthly",
                "type": "decimal",
                "form": "local",
                "doc": "The post-tax recurring monthly charge for the order. This is the sum of preTaxRecurringMonthly + totalRecurringTax. "
            },
            "postTaxSetup": {
                "name": "postTaxSetup",
                "type": "decimal",
                "form": "local",
                "doc": "The post-tax setup fees of the order. This is the sum of preTaxSetup + totalSetupTax;"
            },
            "preTaxRecurring": {
                "name": "preTaxRecurring",
                "type": "decimal",
                "form": "local",
                "doc": "The pre-tax recurring total of the order. If there are mixed monthly and hourly prices on the order, this will be the sum of preTaxRecurringHourly and preTaxRecurringMonthly. "
            },
            "preTaxRecurringHourly": {
                "name": "preTaxRecurringHourly",
                "type": "decimal",
                "form": "local",
                "doc": "The pre-tax hourly recurring total of the order. If there are only monthly prices on the order, this value will be 0. "
            },
            "preTaxRecurringMonthly": {
                "name": "preTaxRecurringMonthly",
                "type": "decimal",
                "form": "local",
                "doc": "The pre-tax monthly recurring total of the order. If there are only hourly prices on the order, this value will be 0. "
            },
            "preTaxSetup": {
                "name": "preTaxSetup",
                "type": "decimal",
                "form": "local",
                "doc": "The pre-tax setup fee total of the order."
            },
            "presaleEvent": {
                "name": "presaleEvent",
                "type": "SoftLayer_Sales_Presale_Event",
                "form": "local",
                "doc": "If there are any presale events available for an order, this value will be populated. It is set internally and is not required for end users when placing an order. See [[SoftLayer_Sales_Presale_Event]] for more info. "
            },
            "presetId": {
                "name": "presetId",
                "type": "int",
                "form": "local",
                "doc": "A preset configuration id for the package. Is required if not submitting any prices."
            },
            "prices": {
                "name": "prices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "typeArray": true,
                "doc": "This is a collection of [[SoftLayer_Product_Item_Price]] objects. The only required property to populate for an item price object when ordering is its <code>id</code> - all other supplied information about the price (e.g., recurringFee, setupFee, etc.) will be ignored. Unless the [[SoftLayer_Product_Package]] associated with the order allows for preset prices, this property is required to place an order. "
            },
            "primaryDiskPartitionId": {
                "name": "primaryDiskPartitionId",
                "type": "int",
                "form": "local",
                "doc": "The id of a [[SoftLayer_Hardware_Component_Partition_Template]]. This property is optional. If no partition template is provided, a default will be used according to the operating system chosen with the order. Using the [[SoftLayer_Hardware_Component_Partition_OperatingSystem]] service, getPartitionTemplates will return those available for the particular operating system. "
            },
            "priorities": {
                "name": "priorities",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "Priorities to set on replication set servers."
            },
            "privateCloudOrderFlag": {
                "name": "privateCloudOrderFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag for identifying a container as Virtual Server (Private Node)."
            },
            "privateCloudOrderType": {
                "name": "privateCloudOrderType",
                "type": "string",
                "form": "local",
                "doc": "Type of Virtual Server (Private Node) order. Potential values: INITIAL, ADDHOST, ADDIPS, ADDZONE "
            },
            "promotionCode": {
                "name": "promotionCode",
                "type": "string",
                "form": "local",
                "doc": "Optional promotion code for an order."
            },
            "properties": {
                "name": "properties",
                "type": "SoftLayer_Container_Product_Order_Property",
                "form": "local",
                "typeArray": true,
                "doc": "Generic properties."
            },
            "proratedInitialCharge": {
                "name": "proratedInitialCharge",
                "type": "decimal",
                "form": "local",
                "doc": "The Prorated Initial Charge plus the balance on the account. Only the recurring fees are prorated. Here's how the calculation works: We take the postTaxRecurring value and we prorate it based on the time between now and the next bill date for this account. After this, we add in the setup fee since this is not prorated. Then, if there is a balance on the account, we add that to the account. In the event that there is a credit balance on the account, we will subtract this amount from the order total. If the credit balance on the account is greater than the prorated initial charge, the order will go through without a charge to the credit card on the account or requiring a paypal payment. The credit on the account will be reduced by the order total, and the order will await approval from sales, as normal. If there is a pending order already in the system, We will ignore the balance on the account completely, in the calculation of the initial charge. This is to protect against two orders coming into the system and getting the benefit of a credit balance, or worse, both orders being charged the order amount + the balance on the account. "
            },
            "proratedOrderTotal": {
                "name": "proratedOrderTotal",
                "type": "decimal",
                "form": "local",
                "doc": "This is the same as the proratedInitialCharge, except the balance on the account is ignored. This is the prorated total amount of the order. "
            },
            "provisionScripts": {
                "name": "provisionScripts",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "The URLs for scripts to execute on their respective servers after they have been provisioned. Provision scripts are not available for Microsoft Windows servers."
            },
            "quantity": {
                "name": "quantity",
                "type": "int",
                "form": "local",
                "doc": "The quantity of the item being ordered"
            },
            "quoteName": {
                "name": "quoteName",
                "type": "string",
                "form": "local",
                "doc": "A custom name to be assigned to the quote. "
            },
            "regionalGroup": {
                "name": "regionalGroup",
                "type": "string",
                "form": "local",
                "doc": "Specifying a regional group name allows you to not worry about placing your server or service at a specific datacenter, but to any datacenter within that regional group. See [[SoftLayer_Location_Group_Regional]] to get a list of available regional group names. \n\n<code>location</code> and <code>regionalGroup</code> are mutually exclusive on an order container. If both location and regionalGroup are provided, an exception will be thrown indicating that only 1 is allowed. \n\nIf a regional group is provided and VLANs are specified (within the <code>hardware</code> or <code>virtualGuests</code> properties), we will use the datacenter where the VLANs are located. If no VLANs are specified, we will use the preferred datacenter on the regional group object. "
            },
            "resourceGroupId": {
                "name": "resourceGroupId",
                "type": "int",
                "form": "local",
                "doc": "An optional resource group identifier specifying the resource group to attach the order to"
            },
            "resourceGroupName": {
                "name": "resourceGroupName",
                "type": "string",
                "form": "local",
                "doc": "This variable specifies the name of the resource group the server configuration belongs to. For MongoDB Replica sets, it would be the replica set name."
            },
            "resourceGroupTemplateId": {
                "name": "resourceGroupTemplateId",
                "type": "int",
                "form": "local",
                "doc": "An optional resource group template identifier to be used as a deployment base for a Virtual Server (Private Node) order. "
            },
            "returnUrl": {
                "name": "returnUrl",
                "type": "string",
                "form": "local",
                "doc": "The URL to which PayPal redirects browser after a payment is completed."
            },
            "sendQuoteEmailFlag": {
                "name": "sendQuoteEmailFlag",
                "type": "boolean",
                "form": "local",
                "doc": "This flag indicates that the quote should be sent to the email address associated with the account or order."
            },
            "serverCoreCount": {
                "name": "serverCoreCount",
                "type": "int",
                "form": "local",
                "doc": "The number of cores for the server being ordered. This value is set internally. "
            },
            "serviceToken": {
                "name": "serviceToken",
                "type": "string",
                "form": "local",
                "doc": "The token of a requesting service. Do not set."
            },
            "sourceVirtualGuestId": {
                "name": "sourceVirtualGuestId",
                "type": "int",
                "form": "local",
                "doc": "An optional computing instance identifier to be used as an installation base for a computing instance order"
            },
            "sshKeys": {
                "name": "sshKeys",
                "type": "SoftLayer_Container_Product_Order_SshKeys",
                "form": "local",
                "typeArray": true,
                "doc": "The containers which hold SoftLayer_Security_Ssh_Key IDs to add to their respective servers. The order of containers passed in needs to match the order they are assigned to either hardware or virtualGuests. SSH Keys will not be assigned for servers with Microsoft Windows. "
            },
            "stepId": {
                "name": "stepId",
                "type": "int",
                "form": "local",
                "doc": "An optional parameter for step-based order processing."
            },
            "storageGroups": {
                "name": "storageGroups",
                "type": "SoftLayer_Container_Product_Order_Storage_Group",
                "form": "local",
                "typeArray": true,
                "doc": "\n\nFor orders that want to add storage groups such as RAID across multiple disks, simply add [[SoftLayer_Container_Product_Order_Storage_Group]] objects to this array. Storage groups will only be used if the 'RAID' disk controller price is selected. Any other disk controller types will ignore the storage groups set here. \n\nThe first storage group in this array will be considered the primary storage group, which is used for the OS. Any other storage groups will act as data storage. \n\n"
            },
            "taxCacheHash": {
                "name": "taxCacheHash",
                "type": "string",
                "form": "local",
                "doc": "The order container may not contain the final tax rates when it is returned from [[SoftLayer_Product_Order/verifyOrder|verifyOrder]]. This hash will facilitate checking if the tax rates have finished being calculated and retrieving the accurate tax rate values. "
            },
            "taxCompletedFlag": {
                "name": "taxCompletedFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Flag to indicate if the order container has the final tax rates for the order. Some tax rates are calculated in the background because they take longer, and they might not be finished when the container is returned from [[SoftLayer_Product_Order/verifyOrder|verifyOrder]]. "
            },
            "techIncubatorItemPrice": {
                "name": "techIncubatorItemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "doc": "The SoftLayer_Product_Item_Price for the Tech Incubator discount.  The oneTimeFee field contain the calculated discount being applied to the order. "
            },
            "totalRecurringTax": {
                "name": "totalRecurringTax",
                "type": "decimal",
                "form": "local",
                "doc": "The total tax portion of the recurring fees."
            },
            "totalSetupTax": {
                "name": "totalSetupTax",
                "type": "decimal",
                "form": "local",
                "doc": "The tax amount of the setup fees."
            },
            "usagePrices": {
                "name": "usagePrices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "typeArray": true,
                "doc": "This is a collection of [[SoftLayer_Product_Item_Price]] objects which will be used when the service offering being ordered generates usage. This is a read-only property. Setting this property will not change the order. "
            },
            "useHourlyPricing": {
                "name": "useHourlyPricing",
                "type": "boolean",
                "form": "local",
                "doc": "An optional flag to use hourly pricing instead of standard monthly pricing."
            },
            "virtualGuests": {
                "name": "virtualGuests",
                "type": "SoftLayer_Virtual_Guest",
                "form": "local",
                "typeArray": true,
                "doc": "For virtual guest (virtual server) orders, this property is required if you did not specify data in the <code>hardware</code> property. This is an array of [[SoftLayer_Virtual_Guest]] objects. The <code>hostname</code> and <code>domain</code> properties are required for each virtual guest object. There is no need to specify data in this property and the <code>hardware</code> property - only one is required for virtual server orders. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Account_Media_Data_Transfer_Request": {
        "name": "SoftLayer_Container_Product_Order_Account_Media_Data_Transfer_Request",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This datatype is to be used for data transfer requests. ",
        "properties": {
            "request": {
                "name": "request",
                "type": "SoftLayer_Account_Media_Data_Transfer_Request",
                "form": "local",
                "doc": "An instance of [[SoftLayer_Account_Media_Data_Transfer_Request]]"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Attribute_Address": {
        "name": "SoftLayer_Container_Product_Order_Attribute_Address",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. The SoftLayer_Container_Product_Order_Attribute_Address datatype contains the address information. ",
        "properties": {
            "addressLine1": {
                "name": "addressLine1",
                "type": "string",
                "form": "local",
                "doc": "The physical street address."
            },
            "addressLine2": {
                "name": "addressLine2",
                "type": "string",
                "form": "local",
                "doc": "The second line in the address. Information such as suite number goes here."
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The city name"
            },
            "countryCode": {
                "name": "countryCode",
                "type": "string",
                "form": "local",
                "doc": "The 2-character Country code. (i.e. US)"
            },
            "nonUsState": {
                "name": "nonUsState",
                "type": "string",
                "form": "local",
                "doc": "State, Region or Province not part of the U.S. or Canada."
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The Zip or Postal Code."
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "U.S. State, Region or Canadian Province."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Attribute_Contact": {
        "name": "SoftLayer_Container_Product_Order_Attribute_Contact",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. The SoftLayer_Container_Product_Order_Attribute_Contact datatype contains the contact information. ",
        "properties": {
            "address": {
                "name": "address",
                "type": "SoftLayer_Container_Product_Order_Attribute_Address",
                "form": "local",
                "doc": "The address information of the contact."
            },
            "emailAddress": {
                "name": "emailAddress",
                "type": "string",
                "form": "local",
                "doc": "The email address of the contact."
            },
            "faxNumber": {
                "name": "faxNumber",
                "type": "string",
                "form": "local",
                "doc": "The fax number associated with a contact. This is an optional value."
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local",
                "doc": "The first name of the contact."
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local",
                "doc": "The last name of the contact."
            },
            "organizationName": {
                "name": "organizationName",
                "type": "string",
                "form": "local",
                "doc": "The organization name of the contact."
            },
            "phoneNumber": {
                "name": "phoneNumber",
                "type": "string",
                "form": "local",
                "doc": "The phone number associated with a contact."
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "The title of the contact."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Attribute_Organization": {
        "name": "SoftLayer_Container_Product_Order_Attribute_Organization",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. The SoftLayer_Container_Product_Order_Attribute_Organization datatype contains the organization information. ",
        "properties": {
            "address": {
                "name": "address",
                "type": "SoftLayer_Container_Product_Order_Attribute_Address",
                "form": "local",
                "doc": "The address information of the contact."
            },
            "faxNumber": {
                "name": "faxNumber",
                "type": "string",
                "form": "local",
                "doc": "The fax number associated with an organization. This is an optional value."
            },
            "organizationName": {
                "name": "organizationName",
                "type": "string",
                "form": "local",
                "doc": "The name of an organization."
            },
            "phoneNumber": {
                "name": "phoneNumber",
                "type": "string",
                "form": "local",
                "doc": "The phone number associated with an organization."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Billing_Information": {
        "name": "SoftLayer_Container_Product_Order_Billing_Information",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order with SoftLayer. ",
        "properties": {
            "billingAddressLine1": {
                "name": "billingAddressLine1",
                "type": "string",
                "form": "local",
                "doc": "The physical street address. Reserve information such as \"apartment #123\" or \"Suite 2\" for line 1."
            },
            "billingAddressLine2": {
                "name": "billingAddressLine2",
                "type": "string",
                "form": "local",
                "doc": "The second line in the address. Information such as suite number goes here."
            },
            "billingCity": {
                "name": "billingCity",
                "type": "string",
                "form": "local",
                "doc": "The city in which a customer's account resides."
            },
            "billingCountryCode": {
                "name": "billingCountryCode",
                "type": "string",
                "form": "local",
                "doc": "The 2-character Country code for an account's address. (i.e. US)"
            },
            "billingEmail": {
                "name": "billingEmail",
                "type": "string",
                "form": "local",
                "doc": "The email address associated with a customer account."
            },
            "billingNameCompany": {
                "name": "billingNameCompany",
                "type": "string",
                "form": "local",
                "doc": "the company name for an account."
            },
            "billingNameFirst": {
                "name": "billingNameFirst",
                "type": "string",
                "form": "local",
                "doc": "The first name of the customer account owner."
            },
            "billingNameLast": {
                "name": "billingNameLast",
                "type": "string",
                "form": "local",
                "doc": "The last name of the customer account owner"
            },
            "billingPhoneFax": {
                "name": "billingPhoneFax",
                "type": "string",
                "form": "local",
                "doc": "The fax number associated with a customer account."
            },
            "billingPhoneVoice": {
                "name": "billingPhoneVoice",
                "type": "string",
                "form": "local",
                "doc": "The phone number associated with a customer account."
            },
            "billingPostalCode": {
                "name": "billingPostalCode",
                "type": "string",
                "form": "local",
                "doc": "The Zip or Postal Code for the billing address on an account."
            },
            "billingState": {
                "name": "billingState",
                "type": "string",
                "form": "local",
                "doc": "The State for the account."
            },
            "cardAccountNumber": {
                "name": "cardAccountNumber",
                "type": "string",
                "form": "local",
                "doc": "The credit card number to use."
            },
            "cardExpirationMonth": {
                "name": "cardExpirationMonth",
                "type": "int",
                "form": "local",
                "doc": "The payment card expiration month"
            },
            "cardExpirationYear": {
                "name": "cardExpirationYear",
                "type": "int",
                "form": "local",
                "doc": "The payment card expiration year"
            },
            "creditCardVerificationNumber": {
                "name": "creditCardVerificationNumber",
                "type": "string",
                "form": "local",
                "doc": "The Card Verification Value Code (CVV) number"
            },
            "euSupported": {
                "name": "euSupported",
                "type": "boolean",
                "form": "local",
                "doc": "1 = opted in,  0 = not opted in. Select the EU Supported option if you use IBM Bluemix Infrastructure services to process EU citizens' personal data. This option limits Level 1 and Level 2 support to the EU. However, IBM Bluemix and SoftLayer teams outside the EU perform processing activities when they are not resolved at Level 1 or 2. These activities are always at your instruction and do not impact the security or privacy of your data. As with our standard services, you must review the impact these cross-border processing activities have on your services and take any necessary measures, including review of IBM's US-EU Privacy Shield registration and Data Processing Addendum.  If you select products, services, or locations outside the EU, all processing activities will be performed outside of the EU. If you select other IBM services in addition to Bluemix IaaS (IBM or a third party), determine the service location in order to meet any additional data protection or processing requirements that permit cross-border transfers. "
            },
            "isBusinessFlag": {
                "name": "isBusinessFlag",
                "type": "boolean",
                "form": "local",
                "doc": "If true, order is being placed by a business. "
            },
            "payerAuthenticationEnrollmentReferenceId": {
                "name": "payerAuthenticationEnrollmentReferenceId",
                "type": "string",
                "form": "local",
                "doc": "The purpose of this property is to allow enablement of 3D Secure (3DS). This is the Reference ID that corresponds to the device data for Payer Authentication. In order to properly enable 3DS, this will require implementation of Cardinal Cruise Hybrid. \n\nPlease refer to https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/360668/Cardinal+Cruise+Hybrid and view section under \"DFReferenceId / ReferenceId\" to populate this property accordingly. "
            },
            "payerAuthenticationWebToken": {
                "name": "payerAuthenticationWebToken",
                "type": "string",
                "form": "local",
                "doc": "\"Continue with Consumer Authentication\" decoded response JWT (JSON Web Token) after successful authentication. The response is part of the implementation of Cardinal Cruise Hybrid. \n\nPlease refer to https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/360668/Cardinal+Cruise+Hybrid and view section under \"Continue with Consumer Authentication\" to populate this property accordingly based on the CCA response. "
            },
            "taxExempt": {
                "name": "taxExempt",
                "type": "int",
                "form": "local",
                "doc": "Tax exempt status. 1 = exempt (not taxable),  0 = not exempt (taxable)"
            },
            "vatId": {
                "name": "vatId",
                "type": "string",
                "form": "local",
                "doc": "The VAT ID entered at checkout"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Dns_Domain_Registration": {
        "name": "SoftLayer_Container_Product_Order_Dns_Domain_Registration",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. The SoftLayer_Container_Product_Order_Dns_Domain_Registration datatype contains everything required to place a domain registration order with SoftLayer. ",
        "properties": {
            "administrativeContact": {
                "name": "administrativeContact",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Contact",
                "form": "local",
                "doc": "Administrative contact information associated with an registraton or transfer. This is required if registration type is 'new' or 'transfer'. "
            },
            "billingContact": {
                "name": "billingContact",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Contact",
                "form": "local",
                "doc": "Billing contact information associated with an registraton or transfer. This is required if registration type is 'new' or 'transfer'. "
            },
            "domainRegistrationList": {
                "name": "domainRegistrationList",
                "type": "SoftLayer_Container_Dns_Domain_Registration_List",
                "form": "local",
                "typeArray": true,
                "doc": "The list of domains to be registered. This is required if registration type is 'new', 'renew', or 'transfer'. "
            },
            "ownerContact": {
                "name": "ownerContact",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Contact",
                "form": "local",
                "doc": "Owner contact information associated with an registraton or transfer. This is required if registration type is 'new' or 'transfer'. "
            },
            "registrationType": {
                "name": "registrationType",
                "type": "string",
                "form": "local",
                "doc": "The type of a domain registration order. The registration type is Required. Allowed values are new, transfer, and renew "
            },
            "technicalContact": {
                "name": "technicalContact",
                "type": "SoftLayer_Container_Dns_Domain_Registration_Contact",
                "form": "local",
                "doc": "Technical contact information associated with an registraton or transfer. This is required if registration type is 'new' or 'transfer'. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Dns_Domain_Reseller": {
        "name": "SoftLayer_Container_Product_Order_Dns_Domain_Reseller",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. The SoftLayer_Container_Product_Order_Dns_Domain_Reseller datatype contains everything required to place a domain reseller credit order with SoftLayer. ",
        "properties": {
            "creditAmount": {
                "name": "creditAmount",
                "type": "decimal",
                "form": "local",
                "doc": "Amount to be credited to the domain reseller account. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Gateway_Appliance_Cluster": {
        "name": "SoftLayer_Container_Product_Order_Gateway_Appliance_Cluster",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a Gateway Appliance Cluster order with SoftLayer. ",
        "properties": {
            "clusterIdentifier": {
                "name": "clusterIdentifier",
                "type": "string",
                "form": "local",
                "doc": "Used to identify which items on an order belong in the same cluster."
            },
            "clusterOrderType": {
                "name": "clusterOrderType",
                "type": "string",
                "form": "local",
                "doc": "Indicates what type of cluster order is being placed (HA, Provision)."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Gateway_Appliance_Upgrade": {
        "name": "SoftLayer_Container_Product_Order_Gateway_Appliance_Upgrade",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to upgrade a [[SoftLayer_Network_Gateway (type)|network gateway]]. ",
        "properties": {
            "gatewayId": {
                "name": "gatewayId",
                "type": "int",
                "form": "local",
                "doc": "Identifier for the [[SoftLayer_Network_Gateway (type)|network gateway]] being upgraded."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Hardware_Security_Module": {
        "name": "SoftLayer_Container_Product_Order_Hardware_Security_Module",
        "base": "SoftLayer_Container_Product_Order_Hardware_Server",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a hardware security module order with SoftLayer. "
    },
    "SoftLayer_Container_Product_Order_Hardware_Server": {
        "name": "SoftLayer_Container_Product_Order_Hardware_Server",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order with SoftLayer. ",
        "properties": {
            "bootCategoryCode": {
                "name": "bootCategoryCode",
                "type": "string",
                "form": "local",
                "doc": "Used to identify which category should be used for the boot disk."
            },
            "clusterIdentifier": {
                "name": "clusterIdentifier",
                "type": "string",
                "form": "local",
                "doc": "Used to identify which items on an order belong in the same cluster."
            },
            "clusterOrderType": {
                "name": "clusterOrderType",
                "type": "string",
                "form": "local",
                "doc": "Indicates what type of cluster order is being placed (HA, Provision)."
            },
            "clusterResourceId": {
                "name": "clusterResourceId",
                "type": "int",
                "form": "local",
                "doc": "Used to identify which gateway is being upgraded to HA."
            },
            "driveDestructionDisks": {
                "name": "driveDestructionDisks",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "Array of disk drive slot categories to destroy on reclaim. For example: ['disk0', 'disk1', 'disk2']. One drive_destruction price must be included for each slot provided. Note that once the initial order or upgrade order are approved, the destruction property <strong>is not removable</strong> and the drives will be destroyed at the end of the server's lifecycle. Not all drive slots are required, but all can be provided. "
            },
            "monitoringAgentConfigurationTemplateGroupId": {
                "name": "monitoringAgentConfigurationTemplateGroupId",
                "type": "int",
                "form": "local",
                "doc": "Id used with the monitoring package. (Deprecated)"
            },
            "privateCloudServerRole": {
                "name": "privateCloudServerRole",
                "type": "string",
                "form": "local",
                "doc": "When ordering Virtual Server (Private Node), this variable specifies the role of the server configuration. (Deprecated)"
            },
            "requiredUpstreamDeviceId": {
                "name": "requiredUpstreamDeviceId",
                "type": "int",
                "form": "local",
                "doc": "Used to identify which device the new server should be attached to."
            },
            "tags": {
                "name": "tags",
                "type": "SoftLayer_Container_Product_Order_Property",
                "form": "local",
                "typeArray": true,
                "doc": "tags (used in MongoDB deployments). (Deprecated)"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Hardware_Server_Colocation": {
        "name": "SoftLayer_Container_Product_Order_Hardware_Server_Colocation",
        "base": "SoftLayer_Container_Product_Order_Hardware_Server",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order with SoftLayer. "
    },
    "SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance": {
        "name": "SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance",
        "base": "SoftLayer_Container_Product_Order_Hardware_Server",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a Gateway Appliance order. "
    },
    "SoftLayer_Container_Product_Order_Hardware_Server_Upgrade": {
        "name": "SoftLayer_Container_Product_Order_Hardware_Server_Upgrade",
        "base": "SoftLayer_Container_Product_Order_Hardware_Server",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a hardware upgrade. "
    },
    "SoftLayer_Container_Product_Order_Hardware_Server_Upgrade_MigrateToReserved": {
        "name": "SoftLayer_Container_Product_Order_Hardware_Server_Upgrade_MigrateToReserved",
        "base": "SoftLayer_Container_Product_Order_Hardware_Server_Upgrade",
        "noservice": true,
        "typeDoc": "Use this datatype to upgrade your existing monthly-billed server to term based pricing. Only monthly to 1 year, and 1 year to 3 year migrations are available. A new billing agreement contract will be created upon order approval, starting at the next billing cycle. A price is required for each existing billing item and all term-based prices must match in length. Hourly billed servers are not eligible for this upgrade. Downgrading to a shorter term is not available. Multiple term upgrades per billing cycle are not allowed. ",
        "properties": {
            "termLength": {
                "name": "termLength",
                "type": "int",
                "form": "local"
            },
            "termStartDate": {
                "name": "termStartDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Hardware_Server_Vpc": {
        "name": "SoftLayer_Container_Product_Order_Hardware_Server_Vpc",
        "base": "SoftLayer_Container_Product_Order_Hardware_Server",
        "noservice": true,
        "properties": {
            "crn": {
                "name": "crn",
                "type": "string",
                "form": "local"
            },
            "instanceProfile": {
                "name": "instanceProfile",
                "type": "string",
                "form": "local"
            },
            "ipAllocations": {
                "name": "ipAllocations",
                "type": "SoftLayer_Container_Product_Order_Vpc_IpAllocation",
                "form": "local",
                "typeArray": true
            },
            "resourceGroup": {
                "name": "resourceGroup",
                "type": "string",
                "form": "local"
            },
            "serverId": {
                "name": "serverId",
                "type": "string",
                "form": "local"
            },
            "servicePortInterfaceId": {
                "name": "servicePortInterfaceId",
                "type": "string",
                "form": "local"
            },
            "servicePortIpAllocationId": {
                "name": "servicePortIpAllocationId",
                "type": "string",
                "form": "local"
            },
            "servicePortVpcId": {
                "name": "servicePortVpcId",
                "type": "string",
                "form": "local"
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Container_Product_Order_Vpc_Subnet",
                "form": "local",
                "typeArray": true
            },
            "zone": {
                "name": "zone",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Monitoring_Package": {
        "name": "SoftLayer_Container_Product_Order_Monitoring_Package",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a Monitoring Package order with SoftLayer. This class is no longer available. ",
        "properties": {
            "serverType": {
                "name": "serverType",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Order_MultiConfiguration": {
        "name": "SoftLayer_Container_Product_Order_MultiConfiguration",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is a datatype used with multi-configuration deployments. Multi-configuration deployments also have a deployment specific datatype that should be used in lieu of this one. "
    },
    "SoftLayer_Container_Product_Order_MultiConfiguration_Tornado": {
        "name": "SoftLayer_Container_Product_Order_MultiConfiguration_Tornado",
        "base": "SoftLayer_Container_Product_Order_MultiConfiguration",
        "noservice": true
    },
    "SoftLayer_Container_Product_Order_Network": {
        "name": "SoftLayer_Container_Product_Order_Network",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "(DEPRECATED) This type contains the structure of network-related objects that may be specified when ordering services. ",
        "properties": {
            "network": {
                "name": "network",
                "type": "SoftLayer_Network",
                "form": "local",
                "doc": "The [[SoftLayer_Network]] object."
            },
            "publicVlans": {
                "name": "publicVlans",
                "type": "SoftLayer_Container_Product_Order",
                "form": "local",
                "typeArray": true,
                "doc": "The list of public [[SoftLayer_Container_Product_Order_Network_Vlan|vlans]] available for ordering. Each VLAN will have list of public subnets that are accessible to the VLAN. "
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Container_Product_Order",
                "form": "local",
                "typeArray": true,
                "doc": "The list of private [[SoftLayer_Container_Product_Order_Network_Subnet|subnets]] available for ordering with a description of their available IP space. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Application_Delivery_Controller": {
        "name": "SoftLayer_Container_Product_Order_Network_Application_Delivery_Controller",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an application delivery controller order with SoftLayer. ",
        "properties": {
            "applicationDeliveryControllerId": {
                "name": "applicationDeliveryControllerId",
                "type": "int",
                "form": "local",
                "doc": "An optional [[SoftLayer_Network_Application_Delivery_Controller]] identifier that is used for upgrading an existing application delivery controller. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Interconnect": {
        "name": "SoftLayer_Container_Product_Order_Network_Interconnect",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder when purchasing a Network Interconnect. ",
        "properties": {
            "bgpAsn": {
                "name": "bgpAsn",
                "type": "string",
                "form": "local",
                "doc": "The BGP ASN."
            },
            "interconnectId": {
                "name": "interconnectId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Network_Interconnect]] for this order, ID must be provided."
            },
            "interconnectLocation": {
                "name": "interconnectLocation",
                "type": "SoftLayer_Network_DirectLink_Location",
                "form": "local",
                "doc": "The [[SoftLayer_Network_DirectLink_Location]] for this order, ID must be provided."
            },
            "interconnectTenant": {
                "name": "interconnectTenant",
                "type": "SoftLayer_Network_Interconnect_Tenant",
                "form": "local",
                "doc": "The [[SoftLayer_Network_Interconnect_Tenant]] being ordered. Only the ID is required. If this ID is specified, then properties such as networkIdentifier, ipAddressRange, and interconnectId do not need to be specified. "
            },
            "ipAddressRange": {
                "name": "ipAddressRange",
                "type": "string",
                "form": "local",
                "doc": "Optional IP address for this link."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A name to identify this Direct Link resource."
            },
            "networkIdentifier": {
                "name": "networkIdentifier",
                "type": "string",
                "form": "local",
                "doc": "Optional network identifier for this link."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Interconnect_Upgrade": {
        "name": "SoftLayer_Container_Product_Order_Network_Interconnect_Upgrade",
        "base": "SoftLayer_Container_Product_Order_Network_Interconnect",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an upgrade order for Direct Link. "
    },
    "SoftLayer_Container_Product_Order_Network_LoadBalancer": {
        "name": "SoftLayer_Container_Product_Order_Network_LoadBalancer",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the default container type for network load balancer orders. "
    },
    "SoftLayer_Container_Product_Order_Network_LoadBalancer_AsAService": {
        "name": "SoftLayer_Container_Product_Order_Network_LoadBalancer_AsAService",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order for a Load Balancer as a Service. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A description of this Load Balancer."
            },
            "healthMonitorConfigurations": {
                "name": "healthMonitorConfigurations",
                "type": "SoftLayer_Network_LBaaS_LoadBalancerHealthMonitorConfiguration",
                "form": "local",
                "typeArray": true,
                "doc": "The [[SoftLayer_Network_LBaaS_LoadBalancerHealthMonitorConfiguration]]s for this Load Balancer."
            },
            "isPublic": {
                "name": "isPublic",
                "type": "boolean",
                "form": "local",
                "doc": "Specify whether this load balancer is a public or internal facing load balancer. If this value is omitted, the value will default to true. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A name to identify this Load Balancer."
            },
            "protocolConfigurations": {
                "name": "protocolConfigurations",
                "type": "SoftLayer_Network_LBaaS_LoadBalancerProtocolConfiguration",
                "form": "local",
                "typeArray": true,
                "doc": "The [[SoftLayer_Network_LBaaS_LoadBalancerProtocolConfiguration]]s for this Load Balancer."
            },
            "publicSubnets": {
                "name": "publicSubnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "local",
                "typeArray": true,
                "doc": "Specify the public subnet where this load balancer will be provisioned when useSystemPublicIpPool is false. This is valid only for public(1) load balancer. The public subnet should match the private subnet. "
            },
            "serverInstancesInformation": {
                "name": "serverInstancesInformation",
                "type": "SoftLayer_Network_LBaaS_LoadBalancerServerInstanceInfo",
                "form": "local",
                "typeArray": true,
                "doc": "The [[SoftLayer_Network_LBaaS_LoadBalancerServerInstanceInfo]]s for this Load Balancer."
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Network_Subnet",
                "form": "local",
                "typeArray": true,
                "doc": "The [[SoftLayer_Network_Subnet]]s where this Load Balancer will be provisioned."
            },
            "type": {
                "name": "type",
                "type": "int",
                "form": "local",
                "doc": "Specify the type of this load balancer. If isPublic is omitted, it specifies the load balacner as private(0), public(1) or public to public(2). If isPublic is set as True, only public(1) or public to public(2) is valid. If isPublic is set as False, this value is ignored. If this value is omitted, the value will be set according to isPublic value. "
            },
            "useSystemPublicIpPool": {
                "name": "useSystemPublicIpPool",
                "type": "boolean",
                "form": "local",
                "doc": "Specify if this load balancer uses system IP pool (true, default) or customer's (null|false) public subnet to allocate IP addresses."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_LoadBalancer_Global": {
        "name": "SoftLayer_Container_Product_Order_Network_LoadBalancer_Global",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "The global load balancer service has been deprecated and is no longer available. \n\nThis is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a global load balancer order with SoftLayer. ",
        "properties": {
            "domain": {
                "name": "domain",
                "type": "string",
                "form": "local",
                "doc": "The domain name that will be load balanced."
            },
            "hostname": {
                "name": "hostname",
                "type": "string",
                "form": "local",
                "doc": "The hostname that will be load balanced."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Message_Delivery": {
        "name": "SoftLayer_Container_Product_Order_Network_Message_Delivery",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a network message delivery order with SoftLayer. ",
        "properties": {
            "accountPassword": {
                "name": "accountPassword",
                "type": "string",
                "form": "local",
                "doc": "The account password for SendGrid enrollment."
            },
            "accountUsername": {
                "name": "accountUsername",
                "type": "string",
                "form": "local",
                "doc": "The username for SendGrid enrollment."
            },
            "emailAddress": {
                "name": "emailAddress",
                "type": "string",
                "form": "local",
                "doc": "The email address for SendGrid enrollment."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_PerformanceStorage": {
        "name": "SoftLayer_Container_Product_Order_Network_PerformanceStorage",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the base data type for Performance storage order containers. If you wish to place an order you must not use this class and instead use the appropriate child container for the type of storage you would like to order: [[SoftLayer_Container_Product_Order_Network_PerformanceStorage_Nfs]] for File and [[SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi]] for Block storage. "
    },
    "SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi": {
        "name": "SoftLayer_Container_Product_Order_Network_PerformanceStorage_Iscsi",
        "base": "SoftLayer_Container_Product_Order_Network_PerformanceStorage",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order for iSCSI (Block) Performance Storage ",
        "properties": {
            "osFormatType": {
                "name": "osFormatType",
                "type": "SoftLayer_Network_Storage_Iscsi_OS_Type",
                "form": "local",
                "doc": "OS Type to be used when formatting the storage space, this should match the OS type that will be connecting to the LUN. The only required property its the keyName of the OS type. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_PerformanceStorage_Nfs": {
        "name": "SoftLayer_Container_Product_Order_Network_PerformanceStorage_Nfs",
        "base": "SoftLayer_Container_Product_Order_Network_PerformanceStorage",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order for NFS (File) Performance Storage "
    },
    "SoftLayer_Container_Product_Order_Network_Protection_Firewall": {
        "name": "SoftLayer_Container_Product_Order_Network_Protection_Firewall",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a hardware firewall order with SoftLayer. "
    },
    "SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated": {
        "name": "SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a hardware (dedicated) firewall order with SoftLayer. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "routerId": {
                "name": "routerId",
                "type": "int",
                "form": "local"
            },
            "vlan": {
                "name": "vlan",
                "type": "SoftLayer_Network_Vlan",
                "form": "local",
                "doc": "generic properties."
            },
            "vlanId": {
                "name": "vlanId",
                "type": "int",
                "form": "local",
                "doc": "generic properties."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated_Upgrade": {
        "name": "SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated_Upgrade",
        "base": "SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order with SoftLayer. ",
        "properties": {
            "firewallId": {
                "name": "firewallId",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_AsAService": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_AsAService",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order for Storage as a Service. ",
        "properties": {
            "dedicatedCluster": {
                "name": "dedicatedCluster",
                "type": "SoftLayer_Network_Storage_DedicatedCluster",
                "form": "local",
                "doc": "Optional property to specify provisioning to a dedicated cluster at order time. The `id` property of the [[SoftLayer_Network_Storage_DedicatedCluster]] should be provided to dictate where to provision storage to. Note your account must be enabled to order into the desired location(s) prior to placing the order. "
            },
            "duplicateOriginSnapshotId": {
                "name": "duplicateOriginSnapshotId",
                "type": "int",
                "form": "local",
                "doc": "This must be populated only for duplicating a specific snapshot for volume duplicating. It represents the identifier of the origin [[SoftLayer_Network_Storage_Snapshot]] "
            },
            "duplicateOriginVolumeId": {
                "name": "duplicateOriginVolumeId",
                "type": "int",
                "form": "local",
                "doc": "This must be populated only for duplicate volume ordering. It represents the identifier of the origin [[SoftLayer_Network_Storage]]. "
            },
            "iops": {
                "name": "iops",
                "type": "int",
                "form": "local",
                "doc": "When ordering performance by IOPS, populate this property with how many."
            },
            "isDependentDuplicateFlag": {
                "name": "isDependentDuplicateFlag",
                "type": "boolean",
                "form": "local",
                "doc": "This can be optionally populated only for duplicate volume ordering. When set, this flag denotes that the duplicate volume being ordered can refresh its data using snapshots from the specified origin volume. "
            },
            "originVolumeId": {
                "name": "originVolumeId",
                "type": "int",
                "form": "local",
                "doc": "This must be populated only for replicant volume ordering. It represents the identifier of the origin [[SoftLayer_Network_Storage]]. "
            },
            "originVolumeScheduleId": {
                "name": "originVolumeScheduleId",
                "type": "int",
                "form": "local",
                "doc": "This must be populated only for replicant volume ordering. It represents the [[SoftLayer_Network_Storage_Schedule]] that will be be used to replicate the origin [[SoftLayer_Network_Storage]] volume. "
            },
            "osFormatType": {
                "name": "osFormatType",
                "type": "SoftLayer_Network_Storage_Iscsi_OS_Type",
                "form": "local",
                "doc": "This must be populated for block storage orders. This should match the OS type of the host(s) that will connect to the volume. The only required property is the keyName of the OS type. This property is ignored for file storage orders. "
            },
            "volumeSize": {
                "name": "volumeSize",
                "type": "int",
                "form": "local",
                "doc": "Volume size in GB's."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_AsAService_Upgrade": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_AsAService_Upgrade",
        "base": "SoftLayer_Container_Product_Order_Network_Storage_AsAService",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an upgrade order for Storage as a Service. ",
        "properties": {
            "volume": {
                "name": "volume",
                "type": "SoftLayer_Network_Storage",
                "form": "local",
                "doc": "The [[SoftLayer_Network_Storage]] being upgraded. Only it's ID is required. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Plugin": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Plugin",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order for additional Evault plugins. "
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Vault": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Vault",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an Evault order with SoftLayer. "
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Enterprise": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Enterprise",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order for Enterprise Storage ",
        "properties": {
            "originVolumeId": {
                "name": "originVolumeId",
                "type": "int",
                "form": "local",
                "doc": "This must be populated only for replicant volume ordering. It represents the identifier of the origin [[SoftLayer_Network_Storage]]. "
            },
            "originVolumeScheduleId": {
                "name": "originVolumeScheduleId",
                "type": "int",
                "form": "local",
                "doc": "This must be populated only for replicant volume ordering. It represents the [[SoftLayer_Network_Storage_Schedule]] that will be be used to replicate the origin [[SoftLayer_Network_Storage]] volume. "
            },
            "osFormatType": {
                "name": "osFormatType",
                "type": "SoftLayer_Network_Storage_Iscsi_OS_Type",
                "form": "local",
                "doc": "This must be populated for block storage orders. This should match the OS type of the host(s) that will connect to the volume. The only required property is the keyName of the OS type. This property is ignored for file storage orders. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Enterprise_SnapshotSpace": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Enterprise_SnapshotSpace",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order for Enterprise Storage Snapshot Space. ",
        "properties": {
            "volumeId": {
                "name": "volumeId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Network_Storage]] id for which snapshot space is being ordered for. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Enterprise_SnapshotSpace_Upgrade": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Enterprise_SnapshotSpace_Upgrade",
        "base": "SoftLayer_Container_Product_Order_Network_Storage_Enterprise_SnapshotSpace",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an upgrade order for Enterprise Storage Snapshot Space. "
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Hub": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Hub",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This datatype is to be used for object storage orders. "
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Hub_Datacenter": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Hub_Datacenter",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This class is used to contain a datacenter location and its associated active usage rate prices for object storage ordering. ",
        "properties": {
            "location": {
                "name": "location",
                "type": "SoftLayer_Location",
                "form": "local",
                "doc": "The datacenter location where object storage is available."
            },
            "usageRatePrices": {
                "name": "usageRatePrices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "typeArray": true,
                "doc": "The collection of active usage rate item prices."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Iscsi": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Iscsi",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an ISCSI order with SoftLayer. "
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Iscsi_Replication": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Iscsi_Replication",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an ISCSI Replication order with SoftLayer. ",
        "properties": {
            "volumeId": {
                "name": "volumeId",
                "type": "int",
                "form": "local",
                "doc": "the [[SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3]] Id."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Iscsi_SnapshotSpace": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Iscsi_SnapshotSpace",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an ISCSI Snapshot Space order with SoftLayer. ",
        "properties": {
            "volumeId": {
                "name": "volumeId",
                "type": "int",
                "form": "local",
                "doc": "the [[SoftLayer_Network_Storage_Iscsi_EqualLogic_Version3]] Id."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_MassDataMigration_Request": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_MassDataMigration_Request",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This datatype is to be used for mass data migration requests. ",
        "properties": {
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local",
                "doc": "Line 1 of the address - typically the number and street address the MDMS device will be delivered to"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local",
                "doc": "Line 2 of the address"
            },
            "addressAttention": {
                "name": "addressAttention",
                "type": "string",
                "form": "local",
                "doc": "First and last name of the customer on the shipping address"
            },
            "addressNickname": {
                "name": "addressNickname",
                "type": "string",
                "form": "local",
                "doc": "The datacenter name where the MDMS device will be shipped to"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local",
                "doc": "The shipping address city"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local",
                "doc": "Name of the company device is being shipped to"
            },
            "cosAccountId": {
                "name": "cosAccountId",
                "type": "string",
                "form": "local",
                "doc": "Cloud Object Storage Account ID for the data offload destination"
            },
            "cosBucketName": {
                "name": "cosBucketName",
                "type": "string",
                "form": "local",
                "doc": "Cloud Object Storage Bucket for the data offload destination"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local",
                "doc": "The shipping address country"
            },
            "eth1DefaultGateway": {
                "name": "eth1DefaultGateway",
                "type": "string",
                "form": "local",
                "doc": "Default Gateway used for preconfiguring the Eth1 port on the MDMS device to access the user interface"
            },
            "eth1Netmask": {
                "name": "eth1Netmask",
                "type": "string",
                "form": "local",
                "doc": "Netmask used for preconfiguring the Eth1 port on the MDMS device to access the user interface"
            },
            "eth1StaticIp": {
                "name": "eth1StaticIp",
                "type": "string",
                "form": "local",
                "doc": "Static IP Address used for preconfiguring the Eth1 port on the MDMS device to access the user interface"
            },
            "eth3Netmask": {
                "name": "eth3Netmask",
                "type": "string",
                "form": "local",
                "doc": "Netmask used for preconfiguring the Eth3 port on the MDMS device to enable data transfer"
            },
            "eth3StaticIp": {
                "name": "eth3StaticIp",
                "type": "string",
                "form": "local",
                "doc": "Static IP Address used for preconfiguring the Eth3 port on the MDMS device to enable data transfer"
            },
            "keyContactEmails": {
                "name": "keyContactEmails",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "The e-mails of the MDMS key contacts"
            },
            "keyContactNames": {
                "name": "keyContactNames",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "The names of the MDMS key contacts"
            },
            "keyContactPhoneNumbers": {
                "name": "keyContactPhoneNumbers",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "The phone numbers of the MDMS key contacts"
            },
            "keyContactRoles": {
                "name": "keyContactRoles",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "The roles of the MDMS key contacts"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local",
                "doc": "The shipping address postal code"
            },
            "requestName": {
                "name": "requestName",
                "type": "string",
                "form": "local",
                "doc": "Name of the Mass Data Migration Service job request"
            },
            "shippingAddress": {
                "name": "shippingAddress",
                "type": "SoftLayer_Container_Network_Storage_MassDataMigration_Request_Address",
                "form": "local",
                "doc": "Shipping address and information where device will be shipped to"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local",
                "doc": "The shipping address state"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Modification": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Modification",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Product_Order_Network_Storage_Modification datatype has everything required to place a modification to an existing StorageLayer account with SoftLayer. Modifications, at present time, include upgrade and downgrades only. The ''volumeId'' property must be set to the network storage volume id to be upgraded. Once populated send this container to the [[SoftLayer_Product_Order::placeOrder]] method. \n\nThe ''packageId'' property passed in for CloudLayer storage accounts must be set to 0 (zero) and the ''quantity'' property must be set to 1. The location does not have to be set. Please use the [[SoftLayer_Product_Package]] service to retrieve a list of CloudLayer items. \n\nNOTE: When upgrading CloudLayer storage service from a metered plan (pay as you go) to a non-metered plan, make sure the chosen plan's storage allotment has enough space to cover the current usage. If the chosen plan's usage allotment is less than the CloudLayer storage's usage the order will be rejected. ",
        "properties": {
            "volumeId": {
                "name": "volumeId",
                "type": "int",
                "form": "local",
                "doc": "The id of the StorageLayer account to modify."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Nas": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Nas",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder when placing network attached storage orders. "
    },
    "SoftLayer_Container_Product_Order_Network_Storage_Object": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_Object",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This datatype is to be used for ordering object storage products using the object_storage [[SoftLayer_Product_Item_Category|category]]. For object storage products using hub [[SoftLayer_Product_Item_Category|category]] use the [[SoftLayer_Container_Product_Order_Network_Storage_Hub]] order container. "
    },
    "SoftLayer_Container_Product_Order_Network_Storage_ObjectStorage_LocationGroup": {
        "name": "SoftLayer_Container_Product_Order_Network_Storage_ObjectStorage_LocationGroup",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This class is used to contain a location group and its associated active usage rate prices for object storage ordering. ",
        "properties": {
            "clusterGeolocationType": {
                "name": "clusterGeolocationType",
                "type": "string",
                "form": "local",
                "doc": "The datacenter location where object storage is available."
            },
            "locationGroup": {
                "name": "locationGroup",
                "type": "SoftLayer_Location_Group",
                "form": "local",
                "doc": "The datacenter location where object storage is available."
            },
            "usageRatePrices": {
                "name": "usageRatePrices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "typeArray": true,
                "doc": "The collection of active usage rate item prices."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Subnet": {
        "name": "SoftLayer_Container_Product_Order_Network_Subnet",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a subnet order with SoftLayer. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description which includes the network identifier, Classless Inter-Domain Routing prefix and the available slot count."
            },
            "endPointIpAddressId": {
                "name": "endPointIpAddressId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Network_Subnet_IpAddress]] id."
            },
            "endPointVlanId": {
                "name": "endPointVlanId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Network_Vlan]] id."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Network_Subnet]] id."
            },
            "routerHostname": {
                "name": "routerHostname",
                "type": "string",
                "form": "local",
                "doc": "This is the hostname for the router associated with the [[SoftLayer_Network_Subnet|subnet]]. This is a readonly property. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Tunnel_Ipsec": {
        "name": "SoftLayer_Container_Product_Order_Network_Tunnel_Ipsec",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a network ipsec vpn order with SoftLayer. "
    },
    "SoftLayer_Container_Product_Order_Network_Vlan": {
        "name": "SoftLayer_Container_Product_Order_Network_Vlan",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a network vlan order with SoftLayer. ",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The description which includes the primary router's hostname plus the vlan number."
            },
            "hostnameDatacenter": {
                "name": "hostnameDatacenter",
                "type": "string",
                "form": "local",
                "doc": "The datacenter portion of the hostname."
            },
            "hostnameRouter": {
                "name": "hostnameRouter",
                "type": "string",
                "form": "local",
                "doc": "The router portion of the hostname."
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_Network_Vlan]] id."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The optional name for this VLAN"
            },
            "router": {
                "name": "router",
                "type": "SoftLayer_Hardware",
                "form": "local",
                "doc": "The router object on which the new VLAN should be created."
            },
            "routerId": {
                "name": "routerId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the [[SoftLayer_Hardware_Router]] object on which the new VLAN should be created."
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Container_Product_Order",
                "form": "local",
                "typeArray": true,
                "doc": "The collection of subnets associated with this vlan."
            },
            "vlanNumber": {
                "name": "vlanNumber",
                "type": "int",
                "form": "local",
                "doc": "The vlan number."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Network_Vlans": {
        "name": "SoftLayer_Container_Product_Order_Network_Vlans",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This class contains the collections of public and private VLANs that are available during the ordering process. ",
        "properties": {
            "privateVlans": {
                "name": "privateVlans",
                "type": "SoftLayer_Container_Product_Order",
                "form": "local",
                "typeArray": true,
                "doc": "The collection of private vlans available during ordering."
            },
            "publicVlans": {
                "name": "publicVlans",
                "type": "SoftLayer_Container_Product_Order",
                "form": "local",
                "typeArray": true,
                "doc": "The collection of public vlans available during ordering."
            }
        }
    },
    "SoftLayer_Container_Product_Order_NewCustomerSetup": {
        "name": "SoftLayer_Container_Product_Order_NewCustomerSetup",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder when linking a Bluemix account to a newly created SoftLayer account. ",
        "properties": {
            "authorizationToken": {
                "name": "authorizationToken",
                "type": "string",
                "form": "local"
            },
            "externalAccountId": {
                "name": "externalAccountId",
                "type": "string",
                "form": "local"
            },
            "externalServiceProviderKey": {
                "name": "externalServiceProviderKey",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Private_Cloud": {
        "name": "SoftLayer_Container_Product_Order_Private_Cloud",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order for Private Cloud. "
    },
    "SoftLayer_Container_Product_Order_Property": {
        "name": "SoftLayer_Container_Product_Order_Property",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is used for storing various items about the order. Currently used for storing additional raid information when ordering servers. This is optional ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The property name"
            },
            "value": {
                "name": "value",
                "type": "string",
                "form": "local",
                "doc": "The property value"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Receipt": {
        "name": "SoftLayer_Container_Product_Order_Receipt",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "When an order is placed (SoftLayer_Product_Order::placeOrder), a receipt is returned when the order is created successfully. The information in the receipt helps explain information about the order. It's order ID, and all the data within the order as well. \n\nFor PayPal Orders, an URL is also returned to the user so that the user can complete the transaction. Users paying with PayPal must continue on to this URL, login and pay. When doing this, PayPal will redirect the user back to a SoftLayer page which will then \"finalize\" the authorization process. From here, Sales will verify the order by contacting the user in some way, unless sales has already spoken to the user about approving the order. \n\nFor users paying with a credit card, a receipt means the order has gone to sales and is awaiting approval. ",
        "properties": {
            "externalPaymentCheckoutUrl": {
                "name": "externalPaymentCheckoutUrl",
                "type": "string",
                "form": "local",
                "doc": "This URL refers to the location where you will visit to complete the payment authorization for an external service, such as PayPal. This property is associated with <code>externalPaymentToken</code> and will only be populated when purchasing products with an external service. \n\nOnce you visit this location, you will be presented with the options to confirm payment or deny payment. If you confirm payment, you will be redirected back to the receipt for your order. If you deny, you will be redirected back to the cancel order page where you do not need to take any additional action. \n\nUntil you confirm payment with the external service, your products will not be provisioned or accessible for your consumption. Upon successfully confirming payment, our system will be notified and the order approval and provisioning systems will begin processing. After provisioning is complete, your services will be available. "
            },
            "externalPaymentToken": {
                "name": "externalPaymentToken",
                "type": "string",
                "form": "local",
                "doc": "This token refers to the identifier for the external payment authorization. This token is associated with the <code>externalPaymentCheckoutUrl</code> and is only populated when purchasing products with an external service like PayPal. "
            },
            "orderDate": {
                "name": "orderDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date when SoftLayer received the order."
            },
            "orderDetails": {
                "name": "orderDetails",
                "type": "SoftLayer_Container_Product_Order",
                "form": "local",
                "doc": "This is a copy of the order container (SoftLayer_Container_Product_Order) which holds all the data related to an order. This will only return when an order is processed successfully. It will contain all the items in an order as well as the order totals. "
            },
            "orderId": {
                "name": "orderId",
                "type": "int",
                "form": "local",
                "doc": "SoftLayer's unique identifier for the order."
            },
            "paypalCheckoutUrl": {
                "name": "paypalCheckoutUrl",
                "type": "string",
                "form": "local",
                "doc": "Deprecation notice: use <code>externalPaymentCheckoutUrl</code> instead of this property. \n\nThis URL refers to the location where you will visit to complete the payment authorization for PayPal. This property is associated with <code>paypalToken</code> and will only be populated when purchasing products with PayPal. \n\nOnce you visit PayPal's site, you will be presented with the options to confirm payment or deny payment. If you confirm payment, you will be redirected back to the receipt for your order. If you deny, you will be redirected back to the cancel order page where you do not need to take any additional action. \n\nUntil you confirm payment with PayPal, your products will not be provisioned or accessible for your consumption. Upon successfully confirming payment, our system will be notified and the order approval and provisioning systems will begin processing. After provisioning is complete, your services will be available. "
            },
            "paypalToken": {
                "name": "paypalToken",
                "type": "string",
                "form": "local",
                "doc": "Deprecation notice: use <code>externalPaymentToken</code> instead of this property. \n\nThis token refers to the identifier provided when payment is processed via PayPal. This token is associated with the <code>paypalCheckoutUrl</code>. "
            },
            "placedOrder": {
                "name": "placedOrder",
                "type": "SoftLayer_Billing_Order",
                "form": "local",
                "doc": "This is a copy of the order that was successfully placed (SoftLayer_Billing_Order). This will only return when an order is processed successfully. "
            },
            "quote": {
                "name": "quote",
                "type": "SoftLayer_Billing_Order_Quote",
                "form": "local",
                "doc": "This is a copy of the quote container (SoftLayer_Billing_Order_Quote) which holds all the data related to a quote. This will only return when a quote is processed successfully. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Security_Certificate": {
        "name": "SoftLayer_Container_Product_Order_Security_Certificate",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype contains everything required to place a secure certificate order with SoftLayer. ",
        "properties": {
            "administrativeContact": {
                "name": "administrativeContact",
                "type": "SoftLayer_Container_Product_Order_Attribute_Contact",
                "form": "local",
                "doc": "The administrator contact associated with a SSL certificate. If the contact is not provided the technical contact will be used. If the address is not provided the organization information address will be used. "
            },
            "billingContact": {
                "name": "billingContact",
                "type": "SoftLayer_Container_Product_Order_Attribute_Contact",
                "form": "local",
                "doc": "The billing contact associated with a SSL certificate. If the contact is not provided the technical contact will be used. If the address is not provided the organization information address will be used. "
            },
            "certificateSigningRequest": {
                "name": "certificateSigningRequest",
                "type": "string",
                "form": "local",
                "doc": "The base64 encoded string that sent from an applicant to a certificate authority. The CSR contains information identifying the applicant and the public key chosen by the applicant. The corresponding private key should not be included. "
            },
            "orderApproverEmailAddress": {
                "name": "orderApproverEmailAddress",
                "type": "string",
                "form": "local",
                "doc": "The email address that can approve a secure certificate order."
            },
            "organizationInformation": {
                "name": "organizationInformation",
                "type": "SoftLayer_Container_Product_Order_Attribute_Organization",
                "form": "local",
                "doc": "The organization information associated with a SSL certificate. "
            },
            "renewalFlag": {
                "name": "renewalFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates if it is an renewal order of an existing SSL certificate."
            },
            "serverCount": {
                "name": "serverCount",
                "type": "int",
                "form": "local",
                "doc": "(DEPRECATED) Do not set this property, as it will always be set to 1. "
            },
            "serverType": {
                "name": "serverType",
                "type": "string",
                "form": "local",
                "doc": "The server type. This is the name from a [[SoftLayer_Security_Certificate_Request_ServerType]] object. "
            },
            "technicalContact": {
                "name": "technicalContact",
                "type": "SoftLayer_Container_Product_Order_Attribute_Contact",
                "form": "local",
                "doc": "The technical contact associated with a SSL certificate. If the address is not provided the organization information address will be used. "
            },
            "validityMonths": {
                "name": "validityMonths",
                "type": "int",
                "form": "local",
                "doc": "(DEPRECATED) The period that a SSL certificate is valid for.  For example, 12, 24, 36. This property will be set automatically based on the certificate product ordered when verifying or placing orders. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Service": {
        "name": "SoftLayer_Container_Product_Order_Service",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. "
    },
    "SoftLayer_Container_Product_Order_Service_External": {
        "name": "SoftLayer_Container_Product_Order_Service_External",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. ",
        "properties": {
            "externalResources": {
                "name": "externalResources",
                "type": "SoftLayer_Service_External_Resource",
                "form": "local",
                "typeArray": true,
                "doc": "For orders that contain servers (bare metal, virtual server, big data, etc.), the hardware property is required. This property is an array of [[SoftLayer_Hardware]] objects. The <code>hostname</code> and <code>domain</code> properties are required for each hardware object. Note that virtual server ([[SoftLayer_Container_Product_Order_Virtual_Guest]]) orders may populate this field instead of the <code>virtualGuests</code> property. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Software_Component_Virtual": {
        "name": "SoftLayer_Container_Product_Order_Software_Component_Virtual",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a virtual license order with SoftLayer. ",
        "properties": {
            "endPointIpAddressIds": {
                "name": "endPointIpAddressIds",
                "type": "int",
                "form": "local",
                "typeArray": true,
                "doc": "array of ip address ids for which a license should be allocated for."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Software_License": {
        "name": "SoftLayer_Container_Product_Order_Software_License",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a hardware security module order with SoftLayer. "
    },
    "SoftLayer_Container_Product_Order_SshKeys": {
        "name": "SoftLayer_Container_Product_Order_SshKeys",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This object holds all of the ssh key ids that will allow authentication to a single server. ",
        "properties": {
            "sshKeyIds": {
                "name": "sshKeyIds",
                "type": "int",
                "form": "local",
                "typeArray": true,
                "doc": "An array of SoftLayer_Security_Ssh_Key IDs to assign to a server."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Storage_Group": {
        "name": "SoftLayer_Container_Product_Order_Storage_Group",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A single storage group container used for a hardware server order. \n\nThis object describes a single storage group that can be added to an order container. ",
        "properties": {
            "arraySize": {
                "name": "arraySize",
                "type": "decimal",
                "form": "local",
                "doc": "Size of the array in gigabytes. Must be within limitations of the smallest drive assigned to the storage group and the storage group type. "
            },
            "arrayTypeId": {
                "name": "arrayTypeId",
                "type": "int",
                "form": "local",
                "doc": "The array type id from a [[SoftLayer_Configuration_Storage_Group_Array_Type]] object. "
            },
            "diskControllerIndex": {
                "name": "diskControllerIndex",
                "type": "int",
                "form": "local",
                "doc": "Defines the disk controller to put the storage group and the hard drives on. \n\nThis must match a disk controller price on the order. The disk controller index is 0-indexed. 'disk_controller' = 0 'disk_controller1' = 1 'disk_controller2' = 2 "
            },
            "hardDrives": {
                "name": "hardDrives",
                "type": "int",
                "form": "local",
                "typeArray": true,
                "doc": "Integer array of drive indexes to use in the storage group."
            },
            "hotSpareDrives": {
                "name": "hotSpareDrives",
                "type": "int",
                "form": "local",
                "typeArray": true,
                "doc": "If an array should be protected by an hotspare, the drive index of the hotspares should be here. \n\nIf a drive is a hotspare for all arrays then a separate storage group with array type GLOBAL_HOT_SPARE should be used "
            },
            "lvmFlag": {
                "name": "lvmFlag",
                "type": "boolean",
                "form": "local",
                "doc": "<< EOT"
            },
            "partitionTemplateId": {
                "name": "partitionTemplateId",
                "type": "int",
                "form": "local",
                "doc": "The id for a [[SoftLayer_Hardware_Component_Partition_Template]] object, which will determine the partitions to add to the storage group. \n\nIf this storage group is not a primary storage group, then this will not be used. "
            },
            "partitions": {
                "name": "partitions",
                "type": "SoftLayer_Container_Product_Order_Storage_Group_Partition",
                "form": "local",
                "typeArray": true,
                "doc": "Defines the partitions for the storage group. \n\nIf this storage group is not a secondary storage group, then this will not be used. "
            }
        }
    },
    "SoftLayer_Container_Product_Order_Storage_Group_Partition": {
        "name": "SoftLayer_Container_Product_Order_Storage_Group_Partition",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "A storage group partition container used for a hardware server order. \n\nThis object describes the partitions for a single storage group that can be added to an order container. ",
        "properties": {
            "isGrow": {
                "name": "isGrow",
                "type": "boolean",
                "form": "local",
                "doc": "Is this a grow partition"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of this partition"
            },
            "size": {
                "name": "size",
                "type": "decimal",
                "form": "local",
                "doc": "The size of this partition"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Support": {
        "name": "SoftLayer_Container_Product_Order_Support",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "When ordering paid support this datatype needs to be populated and sent to SoftLayer_Product_Order::placeOrder. "
    },
    "SoftLayer_Container_Product_Order_User_Customer_External_Binding": {
        "name": "SoftLayer_Container_Product_Order_User_Customer_External_Binding",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This container type is used for placing orders for external authentication, such as phone-based authentication. ",
        "properties": {
            "externalId": {
                "name": "externalId",
                "type": "string",
                "form": "local",
                "doc": "The external id that access to external authentication is being purchased for."
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The SoftLayer [[SoftLayer_User_Customer|user]] identifier that an external binding is being purchased for."
            },
            "vendorId": {
                "name": "vendorId",
                "type": "int",
                "form": "local",
                "doc": "The [[SoftLayer_User_Customer_External_Binding_Vendor|vendor]] identifier for the external binding being purchased."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Virtual_DedicatedHost": {
        "name": "SoftLayer_Container_Product_Order_Virtual_DedicatedHost",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the default container type for Dedicated Virtual Host orders. "
    },
    "SoftLayer_Container_Product_Order_Virtual_Disk_Image": {
        "name": "SoftLayer_Container_Product_Order_Virtual_Disk_Image",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place a Portable Storage order with SoftLayer. ",
        "properties": {
            "diskDescription": {
                "name": "diskDescription",
                "type": "string",
                "form": "local",
                "doc": "Label for the portable storage volume."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Virtual_Guest": {
        "name": "SoftLayer_Container_Product_Order_Virtual_Guest",
        "base": "SoftLayer_Container_Product_Order_Hardware_Server",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order with SoftLayer. ",
        "properties": {
            "bootMode": {
                "name": "bootMode",
                "type": "string",
                "form": "local",
                "doc": "The mode used to boot the [[SoftLayer_Virtual_Guest]].  Supported values are 'PV' and 'HVM'."
            },
            "bootableDiskId": {
                "name": "bootableDiskId",
                "type": "int",
                "form": "local",
                "doc": "Identifier of the [[SoftLayer_Virtual_Disk_Image]] to boot from."
            },
            "hostId": {
                "name": "hostId",
                "type": "int",
                "form": "local",
                "doc": "Identifier of [[SoftLayer_Virtual_DedicatedHost]] to order"
            },
            "reservedCapacityId": {
                "name": "reservedCapacityId",
                "type": "int",
                "form": "local",
                "doc": "Identifier of [[SoftLayer_Virtual_ReservedCapacityGroup]] to order"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade": {
        "name": "SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade",
        "base": "SoftLayer_Container_Product_Order_Virtual_Guest",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Product_Order::placeOrder. This datatype has everything required to place an order with SoftLayer. "
    },
    "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc": {
        "name": "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc",
        "base": "SoftLayer_Container_Product_Order_Virtual_Guest",
        "noservice": true,
        "properties": {
            "additionalNetworkInterfaces": {
                "name": "additionalNetworkInterfaces",
                "type": "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc_NetworkInterface",
                "form": "local",
                "typeArray": true
            },
            "crn": {
                "name": "crn",
                "type": "string",
                "form": "local"
            },
            "instanceProfile": {
                "name": "instanceProfile",
                "type": "string",
                "form": "local"
            },
            "ipAllocations": {
                "name": "ipAllocations",
                "type": "SoftLayer_Container_Product_Order_Vpc_IpAllocation",
                "form": "local",
                "typeArray": true
            },
            "overlayNetworkFlag": {
                "name": "overlayNetworkFlag",
                "type": "boolean",
                "form": "local"
            },
            "resourceGroup": {
                "name": "resourceGroup",
                "type": "string",
                "form": "local"
            },
            "serverId": {
                "name": "serverId",
                "type": "string",
                "form": "local"
            },
            "servicePortCidr": {
                "name": "servicePortCidr",
                "type": "string",
                "form": "local"
            },
            "servicePortDns": {
                "name": "servicePortDns",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "servicePortGateway": {
                "name": "servicePortGateway",
                "type": "string",
                "form": "local"
            },
            "servicePortInterfaceId": {
                "name": "servicePortInterfaceId",
                "type": "string",
                "form": "local"
            },
            "servicePortIpAddress": {
                "name": "servicePortIpAddress",
                "type": "string",
                "form": "local"
            },
            "servicePortIpAllocationId": {
                "name": "servicePortIpAllocationId",
                "type": "string",
                "form": "local"
            },
            "servicePortVpcId": {
                "name": "servicePortVpcId",
                "type": "string",
                "form": "local"
            },
            "storageVolumes": {
                "name": "storageVolumes",
                "type": "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc_StorageVolume",
                "form": "local",
                "typeArray": true
            },
            "subnets": {
                "name": "subnets",
                "type": "SoftLayer_Container_Product_Order_Vpc_Subnet",
                "form": "local",
                "typeArray": true
            },
            "zone": {
                "name": "zone",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc_NetworkInterface": {
        "name": "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc_NetworkInterface",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "cidr": {
                "name": "cidr",
                "type": "string",
                "form": "local"
            },
            "dns": {
                "name": "dns",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "gateway": {
                "name": "gateway",
                "type": "string",
                "form": "local"
            },
            "interfaceId": {
                "name": "interfaceId",
                "type": "string",
                "form": "local"
            },
            "ipAddress": {
                "name": "ipAddress",
                "type": "string",
                "form": "local"
            },
            "ipAllocationId": {
                "name": "ipAllocationId",
                "type": "string",
                "form": "local"
            },
            "securityGroupIds": {
                "name": "securityGroupIds",
                "type": "int",
                "form": "local",
                "typeArray": true
            },
            "subnetId": {
                "name": "subnetId",
                "type": "string",
                "form": "local"
            },
            "vpcId": {
                "name": "vpcId",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc_StorageVolume": {
        "name": "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc_StorageVolume",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "attachmentName": {
                "name": "attachmentName",
                "type": "string",
                "form": "local"
            },
            "capacity": {
                "name": "capacity",
                "type": "int",
                "form": "local"
            },
            "deleteOnReclaim": {
                "name": "deleteOnReclaim",
                "type": "boolean",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "string",
                "form": "local"
            },
            "index": {
                "name": "index",
                "type": "int",
                "form": "local"
            },
            "iops": {
                "name": "iops",
                "type": "int",
                "form": "local"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "profile": {
                "name": "profile",
                "type": "string",
                "form": "local"
            },
            "resourceGroup": {
                "name": "resourceGroup",
                "type": "string",
                "form": "local"
            },
            "rootKeyCrn": {
                "name": "rootKeyCrn",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc_Upgrade": {
        "name": "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc_Upgrade",
        "base": "SoftLayer_Container_Product_Order_Virtual_Guest_Vpc",
        "noservice": true
    },
    "SoftLayer_Container_Product_Order_Virtual_ReservedCapacity": {
        "name": "SoftLayer_Container_Product_Order_Virtual_ReservedCapacity",
        "base": "SoftLayer_Container_Product_Order",
        "noservice": true,
        "typeDoc": "This is the default container type for Reserved Capacity orders. ",
        "properties": {
            "backendRouterId": {
                "name": "backendRouterId",
                "type": "int",
                "form": "local",
                "doc": "Identifier of [[SoftLayer_Hardware_Router]] on which the capacity will be"
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name for the [[SoftLayer_Virtual_ReservedCapacityGroup]] being ordered."
            }
        }
    },
    "SoftLayer_Container_Product_Order_Vpc_IpAllocation": {
        "name": "SoftLayer_Container_Product_Order_Vpc_IpAllocation",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "string",
                "form": "local"
            },
            "ip": {
                "name": "ip",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Order_Vpc_Subnet": {
        "name": "SoftLayer_Container_Product_Order_Vpc_Subnet",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "cidr": {
                "name": "cidr",
                "type": "string",
                "form": "local"
            },
            "dns": {
                "name": "dns",
                "type": "string",
                "form": "local"
            },
            "gateway": {
                "name": "gateway",
                "type": "string",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "string",
                "form": "local"
            },
            "vlan": {
                "name": "vlan",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Product_Promotion": {
        "name": "SoftLayer_Container_Product_Promotion",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Product_Promotion data type contains information about a promotion and its requirements. ",
        "properties": {
            "code": {
                "name": "code",
                "type": "string",
                "form": "local"
            },
            "expirationDate": {
                "name": "expirationDate",
                "type": "dateTime",
                "form": "local"
            },
            "locations": {
                "name": "locations",
                "type": "SoftLayer_Location",
                "form": "local",
                "typeArray": true
            },
            "requirementGroups": {
                "name": "requirementGroups",
                "type": "SoftLayer_Container_Product_Promotion_RequirementGroup",
                "form": "local",
                "typeArray": true
            }
        }
    },
    "SoftLayer_Container_Product_Promotion_RequirementGroup": {
        "name": "SoftLayer_Container_Product_Promotion_RequirementGroup",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Product_Promotion_RequirementGroup data type contains the required options that must be present on an order for the promotion to be applied. At least one of the categories, presets, or prices must be on the order. ",
        "properties": {
            "categories": {
                "name": "categories",
                "type": "SoftLayer_Product_Item_Category",
                "form": "local",
                "typeArray": true,
                "doc": "The category options to choose from for this requirement group "
            },
            "presets": {
                "name": "presets",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "local",
                "typeArray": true,
                "doc": "The preset options to choose from for this requirement group "
            },
            "prices": {
                "name": "prices",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "typeArray": true,
                "doc": "The price options to choose from for this requirement group "
            }
        }
    },
    "SoftLayer_Container_Provisioning_Maintenance_Window": {
        "name": "SoftLayer_Container_Provisioning_Maintenance_Window",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This is the datatype that needs to be populated and sent to SoftLayer_Provisioning_Maintenance_Window::addCustomerUpgradeWindow. This datatype has everything required to place an order with SoftLayer. ",
        "properties": {
            "classificationIds": {
                "name": "classificationIds",
                "type": "SoftLayer_Provisioning_Maintenance_Classification",
                "form": "local",
                "typeArray": true,
                "doc": "Maintenance classifications."
            },
            "itemCategoryIds": {
                "name": "itemCategoryIds",
                "type": "SoftLayer_Product_Item_Category",
                "form": "local",
                "typeArray": true,
                "doc": "Maintenance classifications."
            },
            "maintenanceWindowId": {
                "name": "maintenanceWindowId",
                "type": "int",
                "form": "local",
                "doc": "The maintenance window id"
            },
            "ticketId": {
                "name": "ticketId",
                "type": "int",
                "form": "local",
                "doc": "Maintenance window ticket id"
            },
            "windowMaintenanceDate": {
                "name": "windowMaintenanceDate",
                "type": "dateTime",
                "form": "local",
                "doc": "Maintenance window date"
            }
        }
    },
    "SoftLayer_Container_Referral_Partner_Commission": {
        "name": "SoftLayer_Container_Referral_Partner_Commission",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "commissionAmount": {
                "name": "commissionAmount",
                "type": "decimal",
                "form": "local"
            },
            "commissionRate": {
                "name": "commissionRate",
                "type": "decimal",
                "form": "local"
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "referralAccountId": {
                "name": "referralAccountId",
                "type": "int",
                "form": "local"
            },
            "referralCompanyName": {
                "name": "referralCompanyName",
                "type": "string",
                "form": "local"
            },
            "referralPartnerAccountId": {
                "name": "referralPartnerAccountId",
                "type": "int",
                "form": "local"
            },
            "referralRevenue": {
                "name": "referralRevenue",
                "type": "decimal",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Referral_Partner_Payment_Option": {
        "name": "SoftLayer_Container_Referral_Partner_Payment_Option",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "accountNumber": {
                "name": "accountNumber",
                "type": "string",
                "form": "local"
            },
            "accountType": {
                "name": "accountType",
                "type": "string",
                "form": "local"
            },
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local"
            },
            "bankTransitNumber": {
                "name": "bankTransitNumber",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local"
            },
            "federalTaxId": {
                "name": "federalTaxId",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            },
            "paymentType": {
                "name": "paymentType",
                "type": "string",
                "form": "local"
            },
            "paypalEmail": {
                "name": "paypalEmail",
                "type": "string",
                "form": "local"
            },
            "phoneNumber": {
                "name": "phoneNumber",
                "type": "string",
                "form": "local"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local"
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Referral_Partner_Prospect": {
        "name": "SoftLayer_Container_Referral_Partner_Prospect",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "address1": {
                "name": "address1",
                "type": "string",
                "form": "local"
            },
            "address2": {
                "name": "address2",
                "type": "string",
                "form": "local"
            },
            "city": {
                "name": "city",
                "type": "string",
                "form": "local"
            },
            "companyName": {
                "name": "companyName",
                "type": "string",
                "form": "local"
            },
            "country": {
                "name": "country",
                "type": "string",
                "form": "local"
            },
            "email": {
                "name": "email",
                "type": "string",
                "form": "local"
            },
            "firstName": {
                "name": "firstName",
                "type": "string",
                "form": "local"
            },
            "lastName": {
                "name": "lastName",
                "type": "string",
                "form": "local"
            },
            "officePhone": {
                "name": "officePhone",
                "type": "string",
                "form": "local"
            },
            "postalCode": {
                "name": "postalCode",
                "type": "string",
                "form": "local"
            },
            "questions": {
                "name": "questions",
                "type": "string",
                "form": "local",
                "typeArray": true
            },
            "responses": {
                "name": "responses",
                "type": "SoftLayer_Survey_Response",
                "form": "local",
                "typeArray": true
            },
            "state": {
                "name": "state",
                "type": "string",
                "form": "local"
            },
            "surveyId": {
                "name": "surveyId",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_RemoteManagement_Graphs_SensorSpeed": {
        "name": "SoftLayer_Container_RemoteManagement_Graphs_SensorSpeed",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_RemoteManagement_Graphs_SensorSpeed contains graphs to  display speed for each of the server's fans.  Fan speeds are gathered from the server's remote management card. ",
        "properties": {
            "graph": {
                "name": "graph",
                "type": "base64Binary",
                "form": "local",
                "doc": "The graph to display the server's fan speed."
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "A title that may be used to display for the graph."
            }
        }
    },
    "SoftLayer_Container_RemoteManagement_Graphs_SensorTemperature": {
        "name": "SoftLayer_Container_RemoteManagement_Graphs_SensorTemperature",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_RemoteManagement_Graphs_SensorTemperature contains graphs to display the cpu(s) and system temperatures retrieved from the management card using thermometer graphs. ",
        "properties": {
            "graph": {
                "name": "graph",
                "type": "base64Binary",
                "form": "local",
                "doc": "The graph to display the server's cpu(s) and system temperatures."
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "A title that may be used to display for the graph."
            }
        }
    },
    "SoftLayer_Container_RemoteManagement_PmInfo": {
        "name": "SoftLayer_Container_RemoteManagement_PmInfo",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_RemoteManagement_PmInfo contains pminfo information retrieved from a server's remote management card. ",
        "properties": {
            "pmInfoId": {
                "name": "pmInfoId",
                "type": "string",
                "form": "local",
                "doc": "PmInfo ID"
            },
            "pmInfoReading": {
                "name": "pmInfoReading",
                "type": "string",
                "form": "local",
                "doc": "PmInfo Reading"
            }
        }
    },
    "SoftLayer_Container_RemoteManagement_SensorReading": {
        "name": "SoftLayer_Container_RemoteManagement_SensorReading",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_RemoteManagement_SensorReadings contains sensor information retrieved from a server's remote management card. ",
        "properties": {
            "lowerCritical": {
                "name": "lowerCritical",
                "type": "string",
                "form": "local",
                "doc": "Lower Non-Recoverable threshold"
            },
            "lowerNonCritical": {
                "name": "lowerNonCritical",
                "type": "string",
                "form": "local",
                "doc": "Lower Non-Critical threshold"
            },
            "lowerNonRecoverable": {
                "name": "lowerNonRecoverable",
                "type": "string",
                "form": "local",
                "doc": "Lower Non-Recoverable threshold"
            },
            "sensorId": {
                "name": "sensorId",
                "type": "string",
                "form": "local",
                "doc": "Sensor ID"
            },
            "sensorReading": {
                "name": "sensorReading",
                "type": "string",
                "form": "local",
                "doc": "Sensor Reading"
            },
            "sensorUnits": {
                "name": "sensorUnits",
                "type": "string",
                "form": "local",
                "doc": "Sensor Units"
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "Sensor Status"
            },
            "upperCritical": {
                "name": "upperCritical",
                "type": "string",
                "form": "local",
                "doc": "Upper Critical threshold"
            },
            "upperNonCritical": {
                "name": "upperNonCritical",
                "type": "string",
                "form": "local",
                "doc": "Upper Non-Critical threshold"
            },
            "upperNonRecoverable": {
                "name": "upperNonRecoverable",
                "type": "string",
                "form": "local",
                "doc": "Upper Non-Recoverable threshold"
            }
        }
    },
    "SoftLayer_Container_RemoteManagement_SensorReadingsWithGraphs": {
        "name": "SoftLayer_Container_RemoteManagement_SensorReadingsWithGraphs",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_RemoteManagement_SensorReadingsWithGraphs contains the raw data retrieved from a server's remote management card.  Along with the raw data, two sets of graphs will be returned.  One set of graphs is used to display, using thermometer graphs, the temperatures (cpu(s) and system) retrieved from the management card.  The other set is used to display speed for each of the server's fans. ",
        "properties": {
            "rawData": {
                "name": "rawData",
                "type": "SoftLayer_Container_RemoteManagement_SensorReading",
                "form": "local",
                "typeArray": true,
                "doc": "The raw data returned from the server's remote management card."
            },
            "speedGraphs": {
                "name": "speedGraphs",
                "type": "SoftLayer_Container_RemoteManagement_Graphs_SensorSpeed",
                "form": "local",
                "typeArray": true,
                "doc": "The graph(s) to display the server's fan speeds."
            },
            "temperatureGraphs": {
                "name": "temperatureGraphs",
                "type": "SoftLayer_Container_RemoteManagement_Graphs_SensorTemperature",
                "form": "local",
                "typeArray": true,
                "doc": "The graph(s) to display the server's cpu(s) and system temperatures."
            }
        }
    },
    "SoftLayer_Container_Resource_Metadata_ServiceResource": {
        "name": "SoftLayer_Container_Resource_Metadata_ServiceResource",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The metadata service resource container is used to store information about a single service resource. ",
        "properties": {
            "backendIpAddress": {
                "name": "backendIpAddress",
                "type": "string",
                "form": "local",
                "doc": "The backend IP address for this resource "
            },
            "type": {
                "name": "type",
                "type": "SoftLayer_Network_Service_Resource_Type",
                "form": "local",
                "doc": "The type for this resource "
            }
        }
    },
    "SoftLayer_Container_Search_ObjectType": {
        "name": "SoftLayer_Container_Search_ObjectType",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This data type is a container that stores information about a single indexed object type.  Object type information can be used for discovery of searchable data and for creation or validation of object index search strings.  Each of these containers holds a collection of <b>[[SoftLayer_Container_Search_ObjectType_Property (type)|SoftLayer_Container_Search_ObjectType_Property]]</b> objects, specifying which object properties are exposed for the current user.  Refer to the the documentation for the <b>[[SoftLayer_Search/search|search()]]</b> method for information on using object types in search strings. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of object type. "
            },
            "properties": {
                "name": "properties",
                "type": "SoftLayer_Container_Search_ObjectType_Property",
                "form": "local",
                "typeArray": true,
                "doc": "A collection of [[SoftLayer_Container_Search_ObjectType_Property|object properties]]. "
            }
        }
    },
    "SoftLayer_Container_Search_ObjectType_Property": {
        "name": "SoftLayer_Container_Search_ObjectType_Property",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This data type is a container that stores information about a single property of a searchable object type.  Each <b>[[SoftLayer_Container_Search_ObjectType (type)|SoftLayer_Container_Search_ObjectType]]</b> object holds a collection of these properties.  Property information can be used for discovery of searchable data and for the creation or validation of object index search strings.  Note that properties are only understood by the <b>[[SoftLayer_Search/advancedSearch|advancedSearch()]]</b> method.  Refer to the <b>advancedSearch()</b> method for information on using properties in search strings. ",
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "Name of property. "
            },
            "sortableFlag": {
                "name": "sortableFlag",
                "type": "boolean",
                "form": "local",
                "doc": "Indicates if this property can be sorted. "
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "Property data type.  Valid values include 'boolean', 'integer', 'date', 'string' or 'text'. "
            }
        }
    },
    "SoftLayer_Container_Search_Result": {
        "name": "SoftLayer_Container_Search_Result",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Search_Result data type represents a result row from an execution of Search service. ",
        "properties": {
            "matchedTerms": {
                "name": "matchedTerms",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "An array of terms that were matched in the resource object."
            },
            "relevanceScore": {
                "name": "relevanceScore",
                "type": "decimal",
                "form": "local",
                "doc": "The score ratio of the result for relevance to the search criteria."
            },
            "resource": {
                "name": "resource",
                "type": "SoftLayer_Entity",
                "form": "local",
                "doc": "A search results resource object that matched search criteria."
            },
            "resourceType": {
                "name": "resourceType",
                "type": "string",
                "form": "local",
                "doc": "The type of the resource object that matched search criteria."
            }
        }
    },
    "SoftLayer_Container_Software_Component_HostIps_Policy": {
        "name": "SoftLayer_Container_Software_Component_HostIps_Policy",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Software_Component_HostIps_Policy container holds the title and value of a current host ips policy.",
        "properties": {
            "policy": {
                "name": "policy",
                "type": "string",
                "form": "local",
                "doc": "The value of a host ips category."
            },
            "policyTitle": {
                "name": "policyTitle",
                "type": "string",
                "form": "local",
                "doc": "The category title of a host ips policy."
            }
        }
    },
    "SoftLayer_Container_Tax_Cache": {
        "name": "SoftLayer_Container_Tax_Cache",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "These are the results of a tax calculation. The tax calculation was kicked off but allowed to run in the background. This type stores the results so that an interface can be updated with up-to-date information. ",
        "properties": {
            "effectiveTaxRate": {
                "name": "effectiveTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The percentage of the final total that should be tax."
            },
            "failureMessage": {
                "name": "failureMessage",
                "type": "string",
                "form": "local"
            },
            "items": {
                "name": "items",
                "type": "SoftLayer_Container_Tax_Cache_Item",
                "form": "local",
                "typeArray": true,
                "doc": "The container that holds the four actual tax rates, one for each fee type."
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "The status of the tax request. This should be PENDING, FAILED, or COMPLETED."
            },
            "totalTaxAmount": {
                "name": "totalTaxAmount",
                "type": "decimal",
                "form": "local",
                "doc": "The final amount of tax for the order."
            }
        }
    },
    "SoftLayer_Container_Tax_Cache_Item": {
        "name": "SoftLayer_Container_Tax_Cache_Item",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This represents one order item in a tax calculation. ",
        "properties": {
            "categoryCode": {
                "name": "categoryCode",
                "type": "string",
                "form": "local",
                "doc": "The category code for the referenced product."
            },
            "containerHash": {
                "name": "containerHash",
                "type": "string",
                "form": "local",
                "doc": "This hash will match to the hash on an order container."
            },
            "itemPriceId": {
                "name": "itemPriceId",
                "type": "int",
                "form": "local",
                "doc": "The reference to the price for this order item."
            },
            "taxRates": {
                "name": "taxRates",
                "type": "SoftLayer_Container_Tax_Rates",
                "form": "local",
                "doc": "This is the container containing the individual tax rates."
            }
        }
    },
    "SoftLayer_Container_Tax_Rates": {
        "name": "SoftLayer_Container_Tax_Rates",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This contains the four tax rates, one for each fee type. ",
        "properties": {
            "laborTaxRate": {
                "name": "laborTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The tax rate associated with the labor fee."
            },
            "locationId": {
                "name": "locationId",
                "type": "decimal",
                "form": "local",
                "doc": "A reference to a location."
            },
            "oneTimeTaxRate": {
                "name": "oneTimeTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The tax rate associated with the one-time fee."
            },
            "recurringTaxRate": {
                "name": "recurringTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The tax rate associated with the recurring fee."
            },
            "setupTaxRate": {
                "name": "setupTaxRate",
                "type": "decimal",
                "form": "local",
                "doc": "The tax rate associated with the setup fee."
            }
        }
    },
    "SoftLayer_Container_Ticket_GraphInputs": {
        "name": "SoftLayer_Container_Ticket_GraphInputs",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Ticket_GraphInputs models a single inbound object for a given ticket graph.",
        "properties": {
            "endDate": {
                "name": "endDate",
                "type": "dateTime",
                "form": "local",
                "doc": "This is a unix timestamp that represents the stop date/time for a graph."
            },
            "networkInterfaceId": {
                "name": "networkInterfaceId",
                "type": "int",
                "form": "local",
                "doc": "The front-end or back-end network uplink interface associated with this server."
            },
            "pod": {
                "name": "pod",
                "type": "int",
                "form": "local",
                "doc": "*"
            },
            "serverName": {
                "name": "serverName",
                "type": "string",
                "form": "local",
                "doc": "This is a human readable name for the server or rack being graphed."
            },
            "startDate": {
                "name": "startDate",
                "type": "dateTime",
                "form": "local",
                "doc": "This is a unix timestamp that represents the begin date/time for a graph."
            }
        }
    },
    "SoftLayer_Container_Ticket_GraphOutputs": {
        "name": "SoftLayer_Container_Ticket_GraphOutputs",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Ticket_GraphOutputs models a single outbound object for a given bandwidth graph.",
        "properties": {
            "graphImage": {
                "name": "graphImage",
                "type": "base64Binary",
                "form": "local",
                "doc": "The raw PNG binary data to be displayed once the graph is drawn."
            },
            "graphTitle": {
                "name": "graphTitle",
                "type": "string",
                "form": "local",
                "doc": "The title that ended up being displayed as part of the graph image."
            },
            "maxEndDate": {
                "name": "maxEndDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The maximum date included in this graph."
            },
            "minStartDate": {
                "name": "minStartDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The minimum date included in this graph."
            }
        }
    },
    "SoftLayer_Container_Ticket_Priority": {
        "name": "SoftLayer_Container_Ticket_Priority",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "name": {
                "name": "name",
                "type": "string",
                "form": "local"
            },
            "value": {
                "name": "value",
                "type": "int",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Ticket_Survey_Preference": {
        "name": "SoftLayer_Container_Ticket_Survey_Preference",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "applicable": {
                "name": "applicable",
                "type": "boolean",
                "form": "local"
            },
            "optedOut": {
                "name": "optedOut",
                "type": "boolean",
                "form": "local"
            },
            "optedOutDate": {
                "name": "optedOutDate",
                "type": "dateTime",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_User_Authentication_Token": {
        "name": "SoftLayer_Container_User_Authentication_Token",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Container class used to hold user authentication token ",
        "properties": {
            "hash": {
                "name": "hash",
                "type": "string",
                "form": "local",
                "doc": "hash that gets populated for user authentication"
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "local",
                "doc": "the user authenticated object"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "the id of the user to authenticate"
            }
        }
    },
    "SoftLayer_Container_User_Customer_External_Binding": {
        "name": "SoftLayer_Container_User_Customer_External_Binding",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Container classed used to hold external authentication information ",
        "properties": {
            "authenticationToken": {
                "name": "authenticationToken",
                "type": "string",
                "form": "local",
                "doc": "The unique token that is created by an external authentication request."
            },
            "openIdConnectAccessToken": {
                "name": "openIdConnectAccessToken",
                "type": "string",
                "form": "local",
                "doc": "The OpenID Connect access token which provides access to a resource by the OpenID Connect provider."
            },
            "openIdConnectAccountId": {
                "name": "openIdConnectAccountId",
                "type": "int",
                "form": "local",
                "doc": "The account to login to, if not provided a default will be used."
            },
            "openIdConnectProvider": {
                "name": "openIdConnectProvider",
                "type": "string",
                "form": "local",
                "doc": "The OpenID Connect provider type, as a string."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "Your SoftLayer customer portal user's portal password."
            },
            "securityQuestionAnswer": {
                "name": "securityQuestionAnswer",
                "type": "string",
                "form": "local",
                "doc": "The answer to your security question."
            },
            "securityQuestionId": {
                "name": "securityQuestionId",
                "type": "int",
                "form": "local",
                "doc": "A security question you wish to answer when authenticating to the SoftLayer customer portal. This parameter isn't required if no security questions are set on your portal account or if your account is configured to not require answering a security account upon login."
            },
            "username": {
                "name": "username",
                "type": "string",
                "form": "local",
                "doc": "The username you wish to authenticate to the SoftLayer customer portal with."
            },
            "vendor": {
                "name": "vendor",
                "type": "string",
                "form": "local",
                "doc": "The name of the vendor that will be used for external authentication"
            }
        }
    },
    "SoftLayer_Container_User_Customer_External_Binding_Phone": {
        "name": "SoftLayer_Container_User_Customer_External_Binding_Phone",
        "base": "SoftLayer_Container_User_Customer_External_Binding",
        "noservice": true,
        "typeDoc": "Container classed used to hold portal token "
    },
    "SoftLayer_Container_User_Customer_External_Binding_Phone_Mode": {
        "name": "SoftLayer_Container_User_Customer_External_Binding_Phone_Mode",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container can be used to configure the phone authentication mode. By default, \"VOICE_CALL\" in \"STANDARD\" mode with no Pin number will be used. With the default mode, you will have to answer a phone call from a trusted 2 form factor vendor during authentication process. You have to answer the call and follow the instruction in order to complete the authentication. \n\nYou can also use SMS text message or PhoneFactor mobile app modes (in case you're using PhoneFactor). Additionally, you can set up a Pin number. By requiring you to verify your secret PIN, you can ensure that you have possession of your phone. ",
        "properties": {
            "mode": {
                "name": "mode",
                "type": "string",
                "form": "local",
                "doc": "Authentication mode. Valid modes are: VOICE_CALL, SMS_TEXT, PHONE_APP \n\n\n*VOICE_CALL\nIn this mode, users will receive a phone call to authenticate. Using PIN can enhance the security of the phone authentication by requiring the user to enter a PIN during the authentication call. Valid Pin modes are: PIN, VOICE_PRINT, STANDARD \n\n\n**STANDARD: (default) No PIN is used.\n**PIN: 4 to 10 digit numeric value\n**VOICE_PRINT: The user's voice will be used to identify the user.\n\n\n*SMS_TEXT\nSMS Text mode will send a SMS text message to the user's phone to complete the authentication.  There are 2 different pin modes: \n\n\n**OTP: (default) A text message containing a One-Time Passcode (OTP) is sent to the user. The user must reply to the text message entering this OTP to complete the authentication.\n**OTP_PIN: This mode enhances the security of the authentication by requiring the user to enter the OTP + their PIN in the text reply.\n\n\n\n\n*PHONE_APP\nThis mode is applicable for PhoneFactor. Phone App mode results in a notification being sent to the user's PhoneFactor phone app. There are 2 different pin modes for the mobile app authentication. \n**STANDARD: (default) The first authentication is when the user signs on using a username and password.\nThe second authentication is when the user receives a notification in the PhoneFactor phone app. In Standard Mode, users will prompted to authenticate, deny, or deny and report fraud. \n**PIN: This mode enhances the security of the authentication by requiring the user to enter their PIN in the phone app."
            },
            "pin": {
                "name": "pin",
                "type": "string",
                "form": "local",
                "doc": "Optional authentication pin."
            },
            "pinMode": {
                "name": "pinMode",
                "type": "string",
                "form": "local",
                "doc": "Available Pin modes are: PIN, VOICE_PRINT, STANDARD Default: STANDARD (Pin is not used) "
            }
        }
    },
    "SoftLayer_Container_User_Customer_External_Binding_Totp": {
        "name": "SoftLayer_Container_User_Customer_External_Binding_Totp",
        "base": "SoftLayer_Container_User_Customer_External_Binding",
        "noservice": true,
        "typeDoc": "Container classed used to hold portal token ",
        "properties": {
            "securityCode": {
                "name": "securityCode",
                "type": "string",
                "form": "local",
                "doc": "The security code used to validate a Totp credential."
            }
        }
    },
    "SoftLayer_Container_User_Customer_External_Binding_Vendor": {
        "name": "SoftLayer_Container_User_Customer_External_Binding_Vendor",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Container classed used to hold details about an external authentication vendor. ",
        "properties": {
            "keyName": {
                "name": "keyName",
                "type": "string",
                "form": "local",
                "doc": "The keyname used to identify an external authentication vendor."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The name of an external authentication vendor."
            }
        }
    },
    "SoftLayer_Container_User_Customer_External_Binding_Verisign": {
        "name": "SoftLayer_Container_User_Customer_External_Binding_Verisign",
        "base": "SoftLayer_Container_User_Customer_External_Binding",
        "noservice": true,
        "typeDoc": "Container classed used to hold portal token ",
        "properties": {
            "secondSecurityCode": {
                "name": "secondSecurityCode",
                "type": "string",
                "form": "local",
                "doc": "A second security code that is only required if your credential has become unsynchronized."
            },
            "securityCode": {
                "name": "securityCode",
                "type": "string",
                "form": "local",
                "doc": "The security code used to validate a VeriSign credential."
            }
        }
    },
    "SoftLayer_Container_User_Customer_OpenIdConnect_LoginAccountInfo": {
        "name": "SoftLayer_Container_User_Customer_OpenIdConnect_LoginAccountInfo",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "id": {
                "name": "id",
                "type": "int",
                "form": "local",
                "doc": "The customer account's internal identifier."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The company name associated with an account."
            }
        }
    },
    "SoftLayer_Container_User_Customer_OpenIdConnect_MigrationState": {
        "name": "SoftLayer_Container_User_Customer_OpenIdConnect_MigrationState",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "daysToGracePeriodEnd": {
                "name": "daysToGracePeriodEnd",
                "type": "int",
                "form": "local",
                "doc": "The number of days remaining in the grace period for this user's account to"
            },
            "emailAlreadyUsedForInvitationToAccount": {
                "name": "emailAlreadyUsedForInvitationToAccount",
                "type": "boolean",
                "form": "local",
                "doc": "Flag for whether the email address inside this SoftLayer_User_Customer object"
            },
            "emailAlreadyUsedForLinkToAccount": {
                "name": "emailAlreadyUsedForLinkToAccount",
                "type": "boolean",
                "form": "local",
                "doc": "Flag for whether the email address inside this SoftLayer_User_Customer object"
            },
            "existingInvitationOpenIdConnectName": {
                "name": "existingInvitationOpenIdConnectName",
                "type": "string",
                "form": "local",
                "doc": "The IBMid email address where an invitation was sent."
            },
            "isAccountOpenIdConnectAuthenticated": {
                "name": "isAccountOpenIdConnectAuthenticated",
                "type": "boolean",
                "form": "local",
                "doc": "Flag for whether the account is OpenIdConnect authenticated or not."
            }
        }
    },
    "SoftLayer_Container_User_Customer_PasswordSet": {
        "name": "SoftLayer_Container_User_Customer_PasswordSet",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Container for holding information necessary for the setting and resetting of customer passwords ",
        "properties": {
            "answeredSecurityQuestionId": {
                "name": "answeredSecurityQuestionId",
                "type": "int",
                "form": "local",
                "doc": "Id of SoftLayer_User_Security_Question."
            },
            "authenticationMethods": {
                "name": "authenticationMethods",
                "type": "int",
                "form": "local",
                "typeArray": true,
                "doc": "The authentication methods required."
            },
            "digitCountRequirement": {
                "name": "digitCountRequirement",
                "type": "int",
                "form": "local",
                "doc": "The number of digits required."
            },
            "key": {
                "name": "key",
                "type": "string",
                "form": "local",
                "doc": "The password key provided to user in the password set url link sent via email. "
            },
            "lowercaseCountRequirement": {
                "name": "lowercaseCountRequirement",
                "type": "int",
                "form": "local",
                "doc": "The number of lowercase letters required."
            },
            "maximumPasswordLengthRequirement": {
                "name": "maximumPasswordLengthRequirement",
                "type": "int",
                "form": "local",
                "doc": "The maximum password length requirement."
            },
            "minimumPasswordLengthRequirement": {
                "name": "minimumPasswordLengthRequirement",
                "type": "int",
                "form": "local",
                "doc": "The minimum password length requirement."
            },
            "password": {
                "name": "password",
                "type": "string",
                "form": "local",
                "doc": "The user's new password."
            },
            "securityAnswer": {
                "name": "securityAnswer",
                "type": "string",
                "form": "local",
                "doc": "Answer to security question provided by the user."
            },
            "securityQuestions": {
                "name": "securityQuestions",
                "type": "SoftLayer_User_Security_Question",
                "form": "local",
                "typeArray": true,
                "doc": "Array of SoftLayer_User_Security_Question."
            },
            "specialCharacterCountRequirement": {
                "name": "specialCharacterCountRequirement",
                "type": "int",
                "form": "local",
                "doc": "The number of special characters required."
            },
            "specialCharactersAllowed": {
                "name": "specialCharactersAllowed",
                "type": "string",
                "form": "local",
                "doc": "List of the allowed special characters."
            },
            "uppercaseCountRequirement": {
                "name": "uppercaseCountRequirement",
                "type": "int",
                "form": "local",
                "doc": "The number of uppercase letters required."
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "The id of the user to authenticate."
            }
        }
    },
    "SoftLayer_Container_User_Customer_Portal_MobileToken": {
        "name": "SoftLayer_Container_User_Customer_Portal_MobileToken",
        "base": "SoftLayer_Container_User_Customer_Portal_Token",
        "noservice": true,
        "typeDoc": "Container classed used to hold mobile portal token ",
        "properties": {
            "hasExternalBinding": {
                "name": "hasExternalBinding",
                "type": "boolean",
                "form": "local",
                "doc": "True if this user login required an external binding."
            }
        }
    },
    "SoftLayer_Container_User_Customer_Portal_Token": {
        "name": "SoftLayer_Container_User_Customer_Portal_Token",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Container classed used to hold portal token ",
        "properties": {
            "hash": {
                "name": "hash",
                "type": "string",
                "form": "local",
                "doc": "hash of logged in user session id"
            },
            "user": {
                "name": "user",
                "type": "SoftLayer_User_Customer",
                "form": "local",
                "doc": "the logged in user data"
            },
            "userId": {
                "name": "userId",
                "type": "int",
                "form": "local",
                "doc": "the id of the logged in user"
            }
        }
    },
    "SoftLayer_Container_User_Data_Phone": {
        "name": "SoftLayer_Container_User_Data_Phone",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This container holds user's phone information. ",
        "properties": {
            "countryCode": {
                "name": "countryCode",
                "type": "int",
                "form": "local",
                "doc": "Country code number for the phone number Default: 1 (United States & Canada +1) "
            },
            "extension": {
                "name": "extension",
                "type": "string",
                "form": "local",
                "doc": "Phone extension code. It can be digits, commas, *, and # are allowed. "
            },
            "phone": {
                "name": "phone",
                "type": "string",
                "form": "local",
                "doc": "Phone number can be a mobile phone number, desk phone number, or some other option. The phone number format must match the format selected in the country code. "
            },
            "phoneType": {
                "name": "phoneType",
                "type": "string",
                "form": "local",
                "doc": "Type of phone number such as \"primary\", \"office\" or \"home\" "
            }
        }
    },
    "SoftLayer_Container_User_Employee_External_Binding_Verisign": {
        "name": "SoftLayer_Container_User_Employee_External_Binding_Verisign",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "Container classed used to hold portal token "
    },
    "SoftLayer_Container_Utility_File_Attachment": {
        "name": "SoftLayer_Container_Utility_File_Attachment",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "At times,such as when attaching files to tickets, it is necessary to send files to SoftLayer API methods. The SoftLayer_Container_Utility_File_Attachment data type models a single file to upload to the API. ",
        "properties": {
            "data": {
                "name": "data",
                "type": "base64Binary",
                "form": "local",
                "doc": "The contents of a file that is uploaded to the SoftLayer API."
            },
            "filename": {
                "name": "filename",
                "type": "string",
                "form": "local",
                "doc": "The name of a file that is uploaded to the SoftLayer API."
            }
        }
    },
    "SoftLayer_Container_Utility_File_Entity": {
        "name": "SoftLayer_Container_Utility_File_Entity",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Utility_File_Entity data type models a single entity on a storage resource. Entities can include anything within a storage volume including files, folders, directories, and CloudLayer storage projects. ",
        "properties": {
            "content": {
                "name": "content",
                "type": "base64Binary",
                "form": "local",
                "doc": "A file entity's raw content."
            },
            "contentType": {
                "name": "contentType",
                "type": "string",
                "form": "local",
                "doc": "A file entity's MIME content type."
            },
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a file entity was created."
            },
            "deleteDate": {
                "name": "deleteDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a CloudLayer storage file entity was moved into the recycle bin. This field applies to files that are pending deletion in the recycle bin."
            },
            "id": {
                "name": "id",
                "type": "string",
                "form": "local",
                "doc": "Unique identifier for the file. This can be either a number or guid."
            },
            "isShared": {
                "name": "isShared",
                "type": "int",
                "form": "local",
                "doc": "Whether a CloudLayer storage file entity is shared with another CloudLayer user."
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The date a file entity was last changed."
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "A file entity's name."
            },
            "owner": {
                "name": "owner",
                "type": "string",
                "form": "local",
                "doc": "The owner is usually the account who first upload or created the file on the resource or the account who is responsible for the file at the moment. "
            },
            "size": {
                "name": "size",
                "type": "unsignedLong",
                "form": "local",
                "doc": "The size of a file entity in bytes."
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local",
                "doc": "A CloudLayer storage file entity's type. Types can include \"file\", \"folder\", \"dir\", and \"project\". "
            },
            "version": {
                "name": "version",
                "type": "int",
                "form": "local",
                "doc": "The latest revision of a file on a CloudLayer storage volume. This number increments each time a new revision of the file is uploaded. "
            }
        }
    },
    "SoftLayer_Container_Utility_Message": {
        "name": "SoftLayer_Container_Utility_Message",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "createDate": {
                "name": "createDate",
                "type": "dateTime",
                "form": "local"
            },
            "id": {
                "name": "id",
                "type": "int",
                "form": "local"
            },
            "message": {
                "name": "message",
                "type": "string",
                "form": "local"
            },
            "modifyDate": {
                "name": "modifyDate",
                "type": "dateTime",
                "form": "local"
            },
            "summary": {
                "name": "summary",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_Status": {
        "name": "SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_Status",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer customer servers that are purchased with the Microsoft Windows operating system are configured by default to retrieve updates from SoftLayer's local Windows Server Update Services (WSUS) server. Periodically, these servers synchronize and check for new updates from their local WSUS server. SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_Status models the results of a server's last synchronization attempt as queried from SoftLayer's WSUS servers. ",
        "properties": {
            "lastRebootDate": {
                "name": "lastRebootDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last time a server rebooted due to a Windows Update."
            },
            "lastStatusDate": {
                "name": "lastStatusDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last time that SoftLayer's local WSUS server received a status update from a customer server."
            },
            "lastSyncDate": {
                "name": "lastSyncDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The last time a server synchronized with SoftLayer's local WSUS server."
            },
            "privateIPAddress": {
                "name": "privateIPAddress",
                "type": "string",
                "form": "local",
                "doc": "This is the private IP address for this server."
            },
            "syncStatus": {
                "name": "syncStatus",
                "type": "string",
                "form": "local",
                "doc": "The status message returned from a server's last synchronization with SoftLayer's local WSUS server."
            },
            "updateStatus": {
                "name": "updateStatus",
                "type": "string",
                "form": "local",
                "doc": "A server's update status, as retrieved form SoftLayer's local WSUS server."
            }
        }
    },
    "SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_UpdateItem": {
        "name": "SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_UpdateItem",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "SoftLayer_Container_Utility_Microsoft_Windows_UpdateServices_UpdateItem models a single Microsoft Update as reported by SoftLayer's private Windows Server Update Services (WSUS) services. All servers purchased with Microsoft Windows retrieve updates from SoftLayer's WSUS servers by default.",
        "properties": {
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "A short description of a Microsoft Windows Update."
            },
            "failed": {
                "name": "failed",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating that this patch failed to properly install"
            },
            "kbArticleNumber": {
                "name": "kbArticleNumber",
                "type": "int",
                "form": "local",
                "doc": "A Windows Update's knowledge base article number. Every Windows Update can be referenced on the Microsoft Help and Support site at the URL <nowiki>http://support.microsoft.com/kb/<article number></nowiki>. "
            },
            "optional": {
                "name": "optional",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating that the update is entirely optionals"
            },
            "requiresReboot": {
                "name": "requiresReboot",
                "type": "boolean",
                "form": "local",
                "doc": "Flag indicating that a reboot is needed for this update to be fully applied"
            }
        }
    },
    "SoftLayer_Container_Utility_Network_Firewall_Rule_Attribute": {
        "name": "SoftLayer_Container_Utility_Network_Firewall_Rule_Attribute",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Utility_Network_Firewall_Rule_Attribute data type contains information relating to a single firewall rule. ",
        "properties": {
            "actions": {
                "name": "actions",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "The valid actions for use with rules."
            },
            "maximumRuleCount": {
                "name": "maximumRuleCount",
                "type": "int",
                "form": "local",
                "doc": "Maximum allowed number of rules."
            },
            "protocols": {
                "name": "protocols",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "The valid protocols for use with rules."
            },
            "sourceIpSubnetMasks": {
                "name": "sourceIpSubnetMasks",
                "type": "SoftLayer_Container_Utility_Network_Subnet_Mask_Generic_Detail",
                "form": "local",
                "typeArray": true,
                "doc": "The valid source ip subnet masks for use with rules."
            }
        }
    },
    "SoftLayer_Container_Utility_Network_Subnet_Mask_Generic_Detail": {
        "name": "SoftLayer_Container_Utility_Network_Subnet_Mask_Generic_Detail",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Utility_Network_Subnet_Mask_Generic_Detail data type contains information relating to a subnet mask and details associated with that object. ",
        "properties": {
            "cidr": {
                "name": "cidr",
                "type": "string",
                "form": "local",
                "doc": "The subnet cidr prefix."
            },
            "description": {
                "name": "description",
                "type": "string",
                "form": "local",
                "doc": "The subnet mask description."
            },
            "mask": {
                "name": "mask",
                "type": "string",
                "form": "local",
                "doc": "The subnet mask."
            }
        }
    },
    "SoftLayer_Container_Virtual_ConsoleData": {
        "name": "SoftLayer_Container_Virtual_ConsoleData",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Virtual_ConsoleData data type contains information used to access a VSIs console ",
        "properties": {
            "websocketHost": {
                "name": "websocketHost",
                "type": "string",
                "form": "local",
                "doc": "The websocket host address used to access the console"
            },
            "websocketPath": {
                "name": "websocketPath",
                "type": "string",
                "form": "local",
                "doc": "The path to the websocket"
            },
            "websocketPort": {
                "name": "websocketPort",
                "type": "string",
                "form": "local",
                "doc": "The websocket port used to access the console"
            },
            "websocketToken": {
                "name": "websocketToken",
                "type": "string",
                "form": "local",
                "doc": "The token used to authenticate with the console websocket"
            }
        }
    },
    "SoftLayer_Container_Virtual_DedicatedHost_AllocationStatus": {
        "name": "SoftLayer_Container_Virtual_DedicatedHost_AllocationStatus",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This data type represents the structure to hold the allocation properties of a [[SoftLayer_Virtual_DedicatedHost]]. ",
        "properties": {
            "cpuAllocated": {
                "name": "cpuAllocated",
                "type": "int",
                "form": "local",
                "doc": "Number of allocated CPU cores on the specified dedicated host."
            },
            "cpuAvailable": {
                "name": "cpuAvailable",
                "type": "int",
                "form": "local",
                "doc": "Number of available CPU cores on the specified dedicated host."
            },
            "cpuCount": {
                "name": "cpuCount",
                "type": "int",
                "form": "local",
                "doc": "Total number of CPU cores on the dedicated host."
            },
            "diskAllocated": {
                "name": "diskAllocated",
                "type": "int",
                "form": "local",
                "doc": "Amount of allocated disk space on the specified dedicated host."
            },
            "diskAvailable": {
                "name": "diskAvailable",
                "type": "int",
                "form": "local",
                "doc": "Amount of available disk space on the specified dedicated host."
            },
            "diskCapacity": {
                "name": "diskCapacity",
                "type": "int",
                "form": "local",
                "doc": "Total amount of disk capacity on the dedicated host."
            },
            "guestCount": {
                "name": "guestCount",
                "type": "int",
                "form": "local",
                "doc": "Number of allocated guests on the specified dedicated host."
            },
            "memoryAllocated": {
                "name": "memoryAllocated",
                "type": "int",
                "form": "local",
                "doc": "Amount of allocated memory on the specified dedicated host."
            },
            "memoryAvailable": {
                "name": "memoryAvailable",
                "type": "int",
                "form": "local",
                "doc": "Amount of available memory on the specified dedicated host."
            },
            "memoryCapacity": {
                "name": "memoryCapacity",
                "type": "int",
                "form": "local",
                "doc": "Total amount of memory capacity on the dedicated host."
            }
        }
    },
    "SoftLayer_Container_Virtual_DedicatedHost_Pci_Device_AllocationStatus": {
        "name": "SoftLayer_Container_Virtual_DedicatedHost_Pci_Device_AllocationStatus",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This data type represents PCI device allocation properties of a [[SoftLayer_Virtual_DedicatedHost]]. ",
        "properties": {
            "deviceCount": {
                "name": "deviceCount",
                "type": "int",
                "form": "local",
                "doc": "The number of PCI devices on the host."
            },
            "deviceName": {
                "name": "deviceName",
                "type": "string",
                "form": "local",
                "doc": "The name of the PCI devices on the host."
            },
            "devicesAllocated": {
                "name": "devicesAllocated",
                "type": "int",
                "form": "local",
                "doc": "The number of PCI devices currently allocated to guests."
            },
            "devicesAvailable": {
                "name": "devicesAvailable",
                "type": "int",
                "form": "local",
                "doc": "The number of PCI devices available for allocation."
            },
            "hardwareComponentModelGenericId": {
                "name": "hardwareComponentModelGenericId",
                "type": "int",
                "form": "local",
                "doc": "The generic component model ID of the PCI device."
            },
            "hostId": {
                "name": "hostId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the host that the dedicated host is on."
            }
        }
    },
    "SoftLayer_Container_Virtual_Guest_Block_Device_Template_Configuration": {
        "name": "SoftLayer_Container_Virtual_Guest_Block_Device_Template_Configuration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Virtual_Guest_Block_Device_Template_Configuration data type contains information relating to a template's external location for importing and exporting ",
        "properties": {
            "bootMode": {
                "name": "bootMode",
                "type": "string",
                "form": "local",
                "doc": "\nOptional virtualization boot mode parameter, if set, can mark a template to boot specifically into PV or HVM. "
            },
            "byol": {
                "name": "byol",
                "type": "boolean",
                "form": "local",
                "doc": "\nSpecifies if image is using a customer's software license. "
            },
            "cloudInit": {
                "name": "cloudInit",
                "type": "boolean",
                "form": "local",
                "doc": "\nSpecifies if image requires cloud-init. "
            },
            "crkCrn": {
                "name": "crkCrn",
                "type": "string",
                "form": "local",
                "doc": "\nCRN to customer root key "
            },
            "environmentType": {
                "name": "environmentType",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "\nFor future use; not currently defined. "
            },
            "ibmAccessKey": {
                "name": "ibmAccessKey",
                "type": "string",
                "form": "local",
                "doc": "\nIBM Cloud HMAC Access Key "
            },
            "ibmApiKey": {
                "name": "ibmApiKey",
                "type": "string",
                "form": "local",
                "doc": "\nIBM Cloud (Bluemix) API Key "
            },
            "ibmSecretKey": {
                "name": "ibmSecretKey",
                "type": "string",
                "form": "local",
                "doc": "\nIBM HMAC Secret Key "
            },
            "isEncrypted": {
                "name": "isEncrypted",
                "type": "boolean",
                "form": "local",
                "doc": "\nSpecifies if image is encrypted or not. "
            },
            "name": {
                "name": "name",
                "type": "string",
                "form": "local",
                "doc": "The group name to be applied to the imported template"
            },
            "note": {
                "name": "note",
                "type": "string",
                "form": "local",
                "doc": "The note to be applied to the imported template"
            },
            "operatingSystemReferenceCode": {
                "name": "operatingSystemReferenceCode",
                "type": "string",
                "form": "local",
                "doc": "\nThe referenceCode of the operating system software description for the imported VHD "
            },
            "rootKeyId": {
                "name": "rootKeyId",
                "type": "string",
                "form": "local",
                "doc": "\nName of the IBM Key Protect Key Name. Required if using an encrypted image. "
            },
            "supportedBootModes": {
                "name": "supportedBootModes",
                "type": "string",
                "form": "local",
                "typeArray": true,
                "doc": "\nOptional Collection of modes that this template supports booting into. "
            },
            "uri": {
                "name": "uri",
                "type": "string",
                "form": "local",
                "doc": "\nThe URI for an object storage object (.vhd/.iso file) \n<code>swift://<ObjectStorageAccountName>@<clusterName>/<containerName>/<fileName.(vhd|iso)></code> "
            },
            "wrappedDek": {
                "name": "wrappedDek",
                "type": "string",
                "form": "local",
                "doc": "\nWrapped Decryption Key provided by IBM Key Protect "
            }
        }
    },
    "SoftLayer_Container_Virtual_Guest_Block_Device_Template_Group_RiasAccount": {
        "name": "SoftLayer_Container_Virtual_Guest_Block_Device_Template_Group_RiasAccount",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "properties": {
            "accountId": {
                "name": "accountId",
                "type": "int",
                "form": "local"
            },
            "masterUserId": {
                "name": "masterUserId",
                "type": "int",
                "form": "local"
            },
            "token": {
                "name": "token",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Container_Virtual_Guest_Configuration": {
        "name": "SoftLayer_Container_Virtual_Guest_Configuration",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The guest configuration container is used to provide configuration options for creating computing instances. \n\nEach configuration option will include both an <code>itemPrice</code> and a <code>template</code>. \n\nThe <code>itemPrice</code> value will provide hourly and monthly costs (if either are applicable), and a description of the option. \n\nThe <code>template</code> will provide a fragment of the request with the properties and values that must be sent when creating a computing instance with the option. \n\nThe [[SoftLayer_Virtual_Guest/getCreateObjectOptions|getCreateObjectOptions]] method returns this data structure. \n\n<style type=\"text/css\">#properties .views-field-body p { margin-top: 1.5em; };</style> ",
        "properties": {
            "blockDevices": {
                "name": "blockDevices",
                "type": "SoftLayer_Container_Virtual_Guest_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable block device options. \n\n\nA computing instance will have at least one block device represented by a <code>device</code> number of <code>'0'</code>. \n\n\nThe <code>blockDevices.device</code> value in the template represents which device the option is for. \nThe <code>blockDevices.diskImage.capacity</code> value in the template represents the size, in gigabytes, of the disk. \nThe <code>localDiskFlag</code> value in the template represents whether the option is a local or SAN based disk. \n\n\nNote: The block device number <code>'1'</code> is reserved for the SWAP disk attached to the computing instance. \n</div> "
            },
            "datacenters": {
                "name": "datacenters",
                "type": "SoftLayer_Container_Virtual_Guest_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable datacenter options. \n\n\nThe <code>datacenter.name</code> value in the template represents which datacenter the computing instance will be provisioned in. \n</div> "
            },
            "flavors": {
                "name": "flavors",
                "type": "SoftLayer_Container_Virtual_Guest_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \n\n\nAvailable flavor options. \n\n\nThe <code>supplementalCreateObjectOptions.flavorKeyName</code> value in the template is an identifier for a particular core, ram, and primary disk configuration. \n\n\nWhen providing a <code>supplementalCreateObjectOptions.flavorKeyName</code> option the core, ram, and primary disk options are not needed. If those options are provided they are validated against the flavor. \n</div> "
            },
            "memory": {
                "name": "memory",
                "type": "SoftLayer_Container_Virtual_Guest_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable memory options. \n\n\nThe <code>maxMemory</code> value in the template represents the amount of memory, in megabytes, allocated to the computing instance. \n</div> "
            },
            "networkComponents": {
                "name": "networkComponents",
                "type": "SoftLayer_Container_Virtual_Guest_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable network component options. \n\n\nThe <code>networkComponent.maxSpeed</code> value in the template represents the link speed, in megabits per second, of the network connections for a computing instance. \n</div> "
            },
            "operatingSystems": {
                "name": "operatingSystems",
                "type": "SoftLayer_Container_Virtual_Guest_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable operating system options. \n\n\nThe <code>operatingSystemReferenceCode</code> value in the template is an identifier for a particular operating system. When provided exactly as shown in the template, that operating system will be used. \n\n\nA reference code is structured as three tokens separated by underscores. The first token represents the product, the second is the version of the product, and the third is whether the OS is 32 or 64bit. \n\n\nWhen providing an <code>operatingSystemReferenceCode</code> while ordering a computing instance the only token required to match exactly is the product. The version token may be given as 'LATEST', else it will require an exact match as well. When the bits token is not provided, 64 bits will be assumed. \n\n\nProviding the value of 'LATEST' for a version will select the latest release of that product for the operating system. As this may change over time, you should be sure that the release version is irrelevant for your applications. \n\n\nFor Windows based operating systems the version will represent both the release version (2008, 2012, etc) and the edition (Standard, Enterprise, etc). For all other operating systems the version will represent the major version (Centos 6, Ubuntu 12, etc) of that operating system, minor versions are not represented in a reference code. \n\n\n<b>Notice</b> - Some operating systems are charged based on the value specified in <code>startCpus</code>. The price which is used can be determined by calling [[SoftLayer_Virtual_Guest/generateOrderTemplate|generateOrderTemplate]] with your desired device specifications. \n</div> "
            },
            "processors": {
                "name": "processors",
                "type": "SoftLayer_Container_Virtual_Guest_Configuration_Option",
                "form": "local",
                "typeArray": true,
                "doc": "\n<div style=\"width: 200%\"> \nAvailable processor options. \n\n\nThe <code>startCpus</code> value in the template represents the number of cores allocated to the computing instance. \nThe <code>dedicatedAccountHostOnlyFlag</code> value in the template represents whether the instance will run on hosts with instances belonging to other accounts. \n</div> "
            }
        }
    },
    "SoftLayer_Container_Virtual_Guest_Configuration_Option": {
        "name": "SoftLayer_Container_Virtual_Guest_Configuration_Option",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "An option found within a [[SoftLayer_Container_Virtual_Guest_Configuration (type)]] structure. ",
        "properties": {
            "flavor": {
                "name": "flavor",
                "type": "SoftLayer_Product_Package_Preset",
                "form": "local",
                "doc": "\nProvides a description of a pre-defined configuration with monthly and hourly costs. "
            },
            "itemPrice": {
                "name": "itemPrice",
                "type": "SoftLayer_Product_Item_Price",
                "form": "local",
                "doc": "\nProvides hourly and monthly costs (if either are applicable), and a description of the option. "
            },
            "template": {
                "name": "template",
                "type": "SoftLayer_Virtual_Guest",
                "form": "local",
                "doc": "\nProvides a fragment of the request with the properties and values that must be sent when creating a computing instance with the option. "
            }
        }
    },
    "SoftLayer_Container_Virtual_Guest_PendingMaintenanceAction": {
        "name": "SoftLayer_Container_Virtual_Guest_PendingMaintenanceAction",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "The SoftLayer_Container_Virtual_Guest_PendingMaintenanceAction data type contains information relating to a SoftLayer_Virtual_Guest's pending maintenance actions. ",
        "properties": {
            "actionId": {
                "name": "actionId",
                "type": "int",
                "form": "local",
                "doc": "The ID of the associated action. "
            },
            "dueDate": {
                "name": "dueDate",
                "type": "dateTime",
                "form": "local",
                "doc": "The datetime at which this action will be initiated regardless of customer action (if it has not already been completed). "
            },
            "status": {
                "name": "status",
                "type": "string",
                "form": "local",
                "doc": "User-friendly status. \n\nThe <code>Completed</code> status means that it is done, no further action is required. The <code>Scheduled</code> status means that the action is pending and will start on the <code>dueDate</code> if no customer action is taken before such time. The <code>In Progress</code> status means the action is currently being executed. "
            },
            "ticket": {
                "name": "ticket",
                "type": "SoftLayer_Ticket",
                "form": "local",
                "doc": "The ticket associated with this maintenance action. "
            },
            "title": {
                "name": "title",
                "type": "string",
                "form": "local",
                "doc": "The Title for the associated action. "
            },
            "triggerExplanation": {
                "name": "triggerExplanation",
                "type": "string",
                "form": "local",
                "doc": "The Trigger Explanation for the associated action. "
            }
        }
    },
    "SoftLayer_Entity": {
        "name": "SoftLayer_Entity",
        "noservice": true
    },
    "SoftLayer_Exception_Brand_Creation": {
        "name": "SoftLayer_Exception_Brand_Creation",
        "base": "SoftLayer_Entity",
        "typeDoc": "Throw this exception if there are validation errors. The types are specified in SoftLayer_Brand_Creation_Input including: KEY_NAME, PREFIX, NAME, LONG_NAME, SUPPORT_POLICY, POLICY_ACKNOWLEDGEMENT_FLAG, etc. ",
        "properties": {
            "message": {
                "name": "message",
                "type": "string",
                "form": "local"
            },
            "type": {
                "name": "type",
                "type": "string",
                "form": "local"
            }
        }
    },
    "SoftLayer_Exception_Hardware_Component_Locator_ComponentLocatorException": {
        "name": "SoftLayer_Exception_Hardware_Component_Locator_ComponentLocatorException",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This exception is thrown if the component locator client cannot find or communicate with the component locator service. "
    },
    "SoftLayer_Exception_Hardware_Component_Locator_InvalidGenericComponentArgument": {
        "name": "SoftLayer_Exception_Hardware_Component_Locator_InvalidGenericComponentArgument",
        "base": "SoftLayer_Entity",
        "noservice": true,
        "typeDoc": "This exception is thrown if the argument is of incorrect type. "
    }
}