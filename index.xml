<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Wed, 11 Nov 2015 00:00:00 UTC</updated>
    
    <item>
      <title>Order Server with security software</title>
      <link>https://softlayer.github.io/php/orderBareMetal/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/orderBareMetal/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

require_once &#39;./vendor/autoload.php&#39;;

class Example
{
    function __construct() {
        $this-&amp;gt;apiUsername = &#39;&#39;;
        $this-&amp;gt;apiKey = &#39;&#39;;
    }

    function getAllPackages() {
        $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $packages = $packageClient-&amp;gt;getAllObjects();

        print &amp;quot;ID -&amp;gt; Name \n&amp;quot;;
        foreach($packages as $package) {
            print $package-&amp;gt;id . &amp;quot; -&amp;gt; &amp;quot; . $package-&amp;gt;name . &amp;quot;\n&amp;quot;;
        }
    }


    function getPackageById($id=0, $onlyShow=0, $showPrices = 1) {
        $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $package = $packageClient-&amp;gt;getItems();
        print &amp;quot;ID, KeyName, Description \n&amp;quot;;
        foreach ($package as $item) {
            if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) {
                print $item-&amp;gt;id . &amp;quot; , &amp;quot; . $item-&amp;gt;keyName . &amp;quot; , &amp;quot; . $item-&amp;gt;description . &amp;quot;\n&amp;quot; ;
                if ($showPrices) {
                    print_r($item-&amp;gt;prices); 
                }
            }
        }
    }

    function getActiveRamItems($packageId = 0) {
        $client = \SoftLayer\XmlRpcClient::getClient(&#39;SoftLayer_Product_Package&#39;, $packageId, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $items = $client-&amp;gt;getActiveRamItems();
        print_r($items);
    }

    function getActiveServerItems($packageId = 0) {
        $client = \SoftLayer\XmlRpcClient::getClient(&#39;SoftLayer_Product_Package&#39;, $packageId, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $items = $client-&amp;gt;getActiveServerItems();
        print_r($items);
    }



    function placeOrder() {

        $client = \SoftLayer\XmlRpcClient::getClient(&#39;SoftLayer_Product_Order&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $order = new stdClass();
        $container = new stdClass();

        $priceArray = array(
            49485, //INTEL_XEON_2650_2_00
            36253, //OS_WINDOWS_2012_R2_FULL_DC_64_BIT_2         
            49405, //RAM_16_GB
            876, //DISK_CONTROLLER_NONRAID
            49759, //HARD_DRIVE_1_00_TB_SATA_2
            49759, //HARD_DRIVE_1_00_TB_SATA_2
            274, //1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS
            50261, //BANDWIDTH_20000_GB
            21, //1_IP_ADDRESS
            906, //REBOOT_KVM_OVER_IP
            420, //UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT
            56, //MONITORING_HOST_PING_AND_TCP_SERVICE
            57, //NOTIFICATION_EMAIL_AND_TICKET
            58, // response, AUTOMATED_NOTIFICATION
            418, //NESSUS_VULNERABILITY_ASSESSMENT_REPORTING
            413, //MCAFEE_HOST_INTRUSION_PROTECTION_WREPORTING
            594, //MCAFEE_VIRUSSCAN_ANTIVIRUS_WINDOWS                    
        );
        $container-&amp;gt;prices = array();
        foreach ($priceArray as $item) {
            $priceId = new stdClass();
            $priceId-&amp;gt;id = $item;
            $container-&amp;gt;prices[] = $priceId;
        }

        $container-&amp;gt;complexType = &amp;quot;SoftLayer_Container_Product_Order_Hardware_Server&amp;quot;;
        $container-&amp;gt;packageId = 273;
        $container-&amp;gt;quantity = 1;
        $container-&amp;gt;location = 448994;  //DAL05
        $container-&amp;gt;serverCount = 1;

        $hardware = new stdClass();
        $hardware-&amp;gt;domain = &amp;quot;test.com&amp;quot;;
        $hardware-&amp;gt;hostname = &amp;quot;thisIsTest&amp;quot;;
        $container-&amp;gt;hardware = $hardware;

        $order-&amp;gt;orderContainers = array();
        $order-&amp;gt;orderContainers[0] = $container;
        print_r($order);
        $result = $client-&amp;gt;verifyOrder($order);
        print_r($result);
    }
}


$example = new Example();
// $example-&amp;gt;getAllPackages();

// Your package needs to have both activeRamItems and activeServerItems to be orderable.
// $example-&amp;gt;getActiveRamItems(273);
// $example-&amp;gt;getActiveServerItems(273);

//All price ids are from this function
// $example-&amp;gt;getPackageById(273,0,1);

$example-&amp;gt;placeOrder();    

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Order Firewall and Security Appliances</title>
      <link>https://softlayer.github.io/php/orderFirewalls/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/orderFirewalls/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

require_once &#39;./vendor/autoload.php&#39;;

class Example
{
    function __construct() {
        $this-&amp;gt;apiUsername = &#39;&#39;;
        $this-&amp;gt;apiKey = &#39;&#39;;
    }

    function getAllPackages() {
        $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $packages = $packageClient-&amp;gt;getAllObjects();
        print &amp;quot;ID -&amp;gt; Name \n&amp;quot;;
        foreach($packages as $package) {
            print $package-&amp;gt;id . &amp;quot; -&amp;gt; &amp;quot; . $package-&amp;gt;name . &amp;quot;\n&amp;quot;;
        }
    }


    function getPackageById($id=0, $onlyShow=0, $showPrices=1) {
        $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $package = $packageClient-&amp;gt;getItems();
        print &amp;quot;ID, KeyName, Description \n&amp;quot;;
        foreach ($package as $item) {
            if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) {
                print $item-&amp;gt;id . &amp;quot; , &amp;quot; . $item-&amp;gt;keyName . &amp;quot; , &amp;quot; . $item-&amp;gt;description . &amp;quot;\n&amp;quot; ;
                if($showPrices) {
                    print_r($item-&amp;gt;prices); 
                }
            }
        }
    }

    function placeOrderHardwareFirewall() {
        // http://sldn.softlayer.com/blog/phil/Getting-Started-Firewalls
        // The speed of the firewall needs to match speed of the server
       
        // 3896 , HARDWARE_FIREWALL_HIGH_AVAILABILITY , Hardware Firewall (High Availability)
        // 297 , 1000MBPS_HARDWARE_FIREWALL , 1000Mbps Hardware Firewall
        // 298 , 100MBPS_HARDWARE_FIREWALL , 100Mbps Hardware Firewall
        // 1296 , 2000MBPS_HARDWARE_FIREWALL , 2000Mbps Hardware Firewall
        // 4550 , 20MBPS_HARDWARE_FIREWALL , 20Mbps Hardware Firewall
        // 299 , 10MBPS_HARDWARE_FIREWALL , 10Mbps Hardware Firewall
        // 1329 , HARDWARE_FIREWALL_DEDICATED , Hardware Firewall (Dedicated)
        // 4551 , 200MBPS_HARDWARE_FIREWALL , 200Mbps Hardware Firewall
        // $example-&amp;gt;getPackageById(0, 297 );
        // Generic Location Price
        // (
        //  [id] =&amp;gt; 408
        //  [itemId] =&amp;gt; 297
        //  [locationGroupId] =&amp;gt;
        //  [oneTimeFee] =&amp;gt; 0
        //  [recurringFee] =&amp;gt; 199
        //  [setupFee] =&amp;gt; 0
        // )
        $client = \SoftLayer\XmlRpcClient::getClient(&#39;SoftLayer_Product_Order&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $order = new stdClass();

        $price = new stdClass();
        $price-&amp;gt;id = 408;

        // http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Protection_Firewall/
        $container = new stdClass();
        $container-&amp;gt;complexType = &amp;quot;SoftLayer_Container_Product_Order_Network_Protection_Firewall&amp;quot;;
        $container-&amp;gt;packageId = 0;
        $container-&amp;gt;quantity = 1;
        $container-&amp;gt;prices = array($price);
        $container-&amp;gt;hardware = array();

        // Put your serverId here
        $serverToFirewall = new stdClass();
        $serverToFirewall-&amp;gt;id = 12345;
        $container-&amp;gt;hardware[0] = $serverToFirewall;

        $order-&amp;gt;orderContainers = array();
        $order-&amp;gt;orderContainers[0] = $container;
        $result = $client-&amp;gt;verifyOrder($order);
        print_r($result);
    }


    function placeOrderFortigateAppliance() {
        // The speed of the firewall needs to match speed of the server
        // $example-&amp;gt;getPackageById(0, 4337 );
        // 4337 , FORTIGATE_SECURITY_APPLIANCE , FortiGate Security Appliance
        // 4338 , FORTIGATE_SECURITY_APPLIANCE_HIGH_AVAILABILITY , FortiGate Security Appliance (High Availability)
        // Generic Location Price
        // [id] =&amp;gt; 21514
        // [itemId] =&amp;gt; 4337
        // [locationGroupId] =&amp;gt;
        // [recurringFee] =&amp;gt; 999
        $client = \SoftLayer\XmlRpcClient::getClient(&#39;SoftLayer_Product_Order&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $order = new stdClass();

        $price = new stdClass();
        $price-&amp;gt;id = 21514;

        // http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated/
        $container = new stdClass();
        $container-&amp;gt;complexType = &amp;quot;SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated&amp;quot;;
        $container-&amp;gt;packageId = 0;
        $container-&amp;gt;quantity = 1;
        $container-&amp;gt;prices = array($price);
        $container-&amp;gt;hardware = array();
        // Put the vlan id that you want to protect here
        $container-&amp;gt;vlanId = 12345;

        $order-&amp;gt;orderContainers = array();
        $order-&amp;gt;orderContainers[0] = $container;
        $result = $client-&amp;gt;verifyOrder($order);
        print_r($result);
    }

}


$example = new Example();
// $example-&amp;gt;getAllPackages();
// $example-&amp;gt;getPackageById(0, 297 );
// $example-&amp;gt;placeOrderHardwareFirewall();
// $example-&amp;gt;getPackageById(0, 4337 );
// $example-&amp;gt;placeOrderFortigateAppliance();    

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Order an SSL Certificate</title>
      <link>https://softlayer.github.io/php/orderSSLCert/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/orderSSLCert/</guid>
      <description>

&lt;h4 id=&#34;generating-a-csr:a798909b54a41db7cd3faf021a46bea5&#34;&gt;Generating a CSR&lt;/h4&gt;

&lt;p&gt;You will need a csr to make this request, it should be on your local file system.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl genrsa -out domain.key 2048
openssl req -new -sha256 -key domain.key -out domain.csr
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

require_once &#39;./vendor/autoload.php&#39;;
class Example
{
    function __construct() {
        $this-&amp;gt;apiUsername = &#39;&#39;;
        $this-&amp;gt;apiKey = &#39;&#39;;
    }

    /*
    * Package 0 is the &amp;quot;Everything else&amp;quot; pacakge, which contains SSL certain. But if you didn&#39;t remember that
    * this function will get you that information
    */
    function getAllPackages() {
        $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $packages = $packageClient-&amp;gt;getAllObjects();

        print &amp;quot;ID -&amp;gt; Name \n&amp;quot;;
        foreach($packages as $package) {
            print $package-&amp;gt;id . &amp;quot; -&amp;gt; &amp;quot; . $package-&amp;gt;name . &amp;quot;\n&amp;quot;;
        }
    }

    /*
    * Each package has a lot of items, so this function will show you all of those along with their prices. 
    * Search through it for the proper SSL item you want to order, and take note of its price
    */
    function getPackageById($id=0, $onlyShow=0) {
        $packageClient = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $package = $packageClient-&amp;gt;getItems();
        print &amp;quot;ID, KeyName, Description \n&amp;quot;;
        foreach ($package as $item) {
            if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) {
                print $item-&amp;gt;id . &amp;quot; , &amp;quot; . $item-&amp;gt;keyName . &amp;quot; , &amp;quot; . $item-&amp;gt;description . &amp;quot;\n&amp;quot; ;
                print_r($item-&amp;gt;prices); 
            }
        }
    }


    /*
    * Change verifyOrder to placeOrder when you are actually ready to make a certificate 
    */
    function placeOrder($csrFilename=&#39;./domain.csr&#39;) {

        $csr = file_get_contents($csrFilename);
        $client = \SoftLayer\XmlRpcClient::getClient(&#39;SoftLayer_Product_Order&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $order = new stdClass();

        $addressInfo = new stdClass();
        $addressInfo-&amp;gt;address = new stdClass();
        $addressInfo-&amp;gt;address-&amp;gt;addressLine1 = &amp;quot;1234 fleet street&amp;quot;;
        $addressInfo-&amp;gt;address-&amp;gt;city = &amp;quot;Houston&amp;quot;;
        $addressInfo-&amp;gt;address-&amp;gt;countryCode = &amp;quot;US&amp;quot;;
        $addressInfo-&amp;gt;address-&amp;gt;postalCode =  &amp;quot;77002&amp;quot;;
        $addressInfo-&amp;gt;address-&amp;gt;state = &amp;quot;TX&amp;quot;;
        $addressInfo-&amp;gt;emailAddress =&amp;quot;chgallo@lablayer.info&amp;quot;;
        $addressInfo-&amp;gt;firstName = &amp;quot;Christopher&amp;quot;;
        $addressInfo-&amp;gt;lastName = &amp;quot;Gallo&amp;quot;;
        $addressInfo-&amp;gt;organizationName = &amp;quot;SoftLayer&amp;quot;;
        $addressInfo-&amp;gt;phoneNumber = &amp;quot;281-123-4567&amp;quot;;
        $addressInfo-&amp;gt;title = &amp;quot;Dev&amp;quot;; 

        $price = new stdClass();
        $price-&amp;gt;id = 1836;

        $container = new stdClass();
        $container-&amp;gt;complexType = &amp;quot;SoftLayer_Container_Product_Order_Security_Certificate&amp;quot;;
        $container-&amp;gt;packageId = 0;
        $container-&amp;gt;quantity = 1;
        $container-&amp;gt;serverCount = 1;
        $container-&amp;gt;serverType = &#39;apacheapachessl&#39;;
        $container-&amp;gt;prices = array($price);
        $container-&amp;gt;certificateSigningRequest = $csr;

        $container-&amp;gt;technicalContact = $addressInfo;
        $container-&amp;gt;administrativeContact = $addressInfo;
        $container-&amp;gt;organizationInformation = $addressInfo;
        $container-&amp;gt;billingContact = $addressInfo;
        # Needs to be a VERY specific email @ the domain you are registering
        # admin / administrator / hostmaster / root / webmaster / mailmaster
        $container-&amp;gt;orderApproverEmailAddress = &amp;quot;admin@lablayer.info&amp;quot;;  

        $order-&amp;gt;orderContainers = array();
        $order-&amp;gt;orderContainers[0] = $container;
        // print_r($order);
        $result = $client-&amp;gt;verifyOrder($order);
        print_r($result);
    }

    /*
    * This info is required for the serverType property. 
    */
    function getServerTypes() {
        // http://sldn.softlayer.com/reference/services/SoftLayer_Security_Certificate_Request_ServerType
        $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Security_Certificate_Request_ServerType&#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey );
        $types = $client-&amp;gt;getAllObjects();
        print_r($types);
    }

}


$example = new Example();
// Figure out which package has the SSL certs
$example-&amp;gt;getAllPackages();

// Package 0, item 964 is the ssl cert we want to see the prices for.
$example-&amp;gt;getPackageById(0, 964 );

// 964 , SSL_CERTIFICATE_RAPIDSSL_1_YEAR , RapidSSL - 1 year
// [id] =&amp;gt; 1836
// [setupFee] =&amp;gt; 19

$example-&amp;gt;getServerTypes();
/*
[1] =&amp;gt; stdClass Object
    (
        [description] =&amp;gt; Apache + ApacheSSL
        [id] =&amp;gt; 2
        [name] =&amp;gt; apacheapachessl
        [value] =&amp;gt; 22
    )
*/
$example-&amp;gt;placeOrder();    
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Order an SSL Certificate</title>
      <link>https://softlayer.github.io/python/orderSSLCert/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/orderSSLCert/</guid>
      <description>

&lt;h4 id=&#34;generating-a-csr:a798909b54a41db7cd3faf021a46bea5&#34;&gt;Generating a CSR&lt;/h4&gt;

&lt;p&gt;You will need a csr to make this request, it should be on your local file system.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl genrsa -out domain.key 2048
openssl req -new -sha256 -key domain.key -out domain.csr
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;import SoftLayer
import pprint
import logging

class example():

    def __init__(self):
        self.client = SoftLayer.Client()

    def main(self):
        logger = logging.getLogger()
        logger.addHandler(logging.StreamHandler())
        logger.setLevel(3)
        pp = pprint.PrettyPrinter(indent=4)
        filename = &#39;./domain.csr&#39;

        cert = self.file_get_contents(filename)
        cert64 = base64.b64encode(cert)
        addressInfo =  {
                    &amp;quot;addressLine1&amp;quot; : &amp;quot;1234 fleet street&amp;quot;,
                    &amp;quot;city&amp;quot; : &amp;quot;Houston&amp;quot;,
                    &amp;quot;countryCode&amp;quot; : &amp;quot;US&amp;quot;,
                    &amp;quot;postalCode&amp;quot; : &amp;quot;77090&amp;quot;,
                    &amp;quot;state&amp;quot; : &amp;quot;TX&amp;quot;
                }
        contactInfo = {
                &amp;quot;address&amp;quot;: addressInfo,
                &amp;quot;emailAddress&amp;quot;: &amp;quot;chgallo@lablayer.info&amp;quot;,
                &amp;quot;firstName&amp;quot;: &amp;quot;Christopher&amp;quot;,
                &amp;quot;lastName&amp;quot;: &amp;quot;Gallo&amp;quot;,
                &amp;quot;organizationName&amp;quot;: &amp;quot;SoftLayer&amp;quot;,
                &amp;quot;phoneNumber&amp;quot;: &amp;quot;281-123-4567&amp;quot;,
                &amp;quot;title&amp;quot;: &amp;quot;Dev&amp;quot;
            }
        sslContainer= {&#39;orderContainers&#39;: [
        {
            &amp;quot;complexType&amp;quot;: &amp;quot;SoftLayer_Container_Product_Order_Security_Certificate&amp;quot;,
            &amp;quot;packageId&amp;quot;:0,
            &amp;quot;quantity&amp;quot;:1,
            &amp;quot;serverCount&amp;quot;:1,
            &amp;quot;certificateSigningRequest&amp;quot;: cert,
            &amp;quot;serverType&amp;quot;: &amp;quot;apacheopenssl&amp;quot;,
            # Needs to be a VERY specific email @ the domain you are registering
            # admin / administrator / hostmaster / root / webmaster / mailmaster
            &amp;quot;orderApproverEmailAddress&amp;quot;: &amp;quot;admin@lablayer.info&amp;quot;,
            &amp;quot;technicalContact&amp;quot;: contactInfo,
            &amp;quot;administrativeContact&amp;quot;: contactInfo,
            &amp;quot;billingContact&amp;quot;: contactInfo,
            &amp;quot;organizationInformation&amp;quot;: {
                &amp;quot;address&amp;quot; :addressInfo,
                &amp;quot;organizationName&amp;quot; : &amp;quot;SoftLayer&amp;quot;,
                &amp;quot;phoneNumber&amp;quot;: &amp;quot;281-123-4567&amp;quot;
            },
            &amp;quot;prices&amp;quot;: [
                #SSL_CERTIFICATE_RAPIDSSL_1_YEAR
                {&#39;id&#39;:1836}
            ]
        }
        ]
        }

        pp.pprint(sslContainer)

        result = self.client[&#39;SoftLayer_Product_Order&#39;].verifyOrder(sslContainer)
        pp.pprint(result)

    def file_get_contents(self,filename):
        with open(filename) as f:
            return f.read()

if __name__ == &amp;quot;__main__&amp;quot;:
    main = example()
    main.main()

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: November 10, 2015</title>
      <link>https://softlayer.github.io/release_notes/20151110/</link>
      <pubDate>Tue, 10 Nov 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20151110/</guid>
      <description>

&lt;h4 id=&#34;portal:3d4758b232e1a60f1a7e0b43b65df4c4&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Improved the error message on the Catalyst self-enrollment page when user enters invalid credit card information.&lt;/li&gt;
&lt;li&gt;&amp;lsquo;NEW&amp;rsquo; Invoices will now properly display the last 4 digits of the credit card.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:3d4758b232e1a60f1a7e0b43b65df4c4&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix issue in which objectFilter values for (SoftLayer_Network_Subnet)[&lt;a href=&#34;http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Subnet&#34;&gt;http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Subnet&lt;/a&gt;] addressSpace and subnetType were being ignored.&lt;/li&gt;
&lt;li&gt;Fixed an issue that When a SSL certificate is being activated on a load balancer which is already active, the load balancer sends a response which was being improperly handled as an error.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: November 5, 2015</title>
      <link>https://softlayer.github.io/release_notes/20151105/</link>
      <pubDate>Thu, 05 Nov 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20151105/</guid>
      <description>

&lt;h4 id=&#34;portal:845cada06249b6bb50535ffaf81f4cd3&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Next and Pending invoices are cached once requested, greatly reducing the time it takes to download the invoice again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:845cada06249b6bb50535ffaf81f4cd3&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixes an issue where tokens were not being properly replaced in the subject field for ticket watch notification emails&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: November 3, 2015</title>
      <link>https://softlayer.github.io/release_notes/20151103/</link>
      <pubDate>Tue, 03 Nov 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20151103/</guid>
      <description>

&lt;h4 id=&#34;portal:b64c673fc1931ce32de387f3ae6d8b69&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Changed the region sort order on order forms to be more friendly.&lt;/li&gt;
&lt;li&gt;Removed forum auto-login link.&lt;/li&gt;
&lt;li&gt;Restrict the length of first name field for credit cards to match those enforced by account first name field (30 characters)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:b64c673fc1931ce32de387f3ae6d8b69&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Improved Virtual Guest provisioning times by parallelizing some provisioning transactions.&lt;/li&gt;
&lt;li&gt;Fixed an error preventing some Fast Provision Servers from getting past the SEND_SOFTWARE_INSTALL transaction.&lt;/li&gt;
&lt;li&gt;Failed post install scripts on unsupported OSes will now include a message that the OS is unsupported.&lt;/li&gt;
&lt;li&gt;Corrects an issue in which network monitoring of a primary IP address from a trunked VLAN of the network component was no longer allowed.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: October 29, 2015</title>
      <link>https://softlayer.github.io/release_notes/20151029/</link>
      <pubDate>Thu, 29 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20151029/</guid>
      <description>

&lt;h4 id=&#34;portal:1fd057a593da5f2e0628632558a917de&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Improved device list performance for customers with NetScaler MPX devices&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:1fd057a593da5f2e0628632558a917de&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;New accounts will have outbound port 25 blocked by default. More information &lt;a href=&#34;http://knowledgelayer.softlayer.com/content/outbound-email-port-25&#34;&gt;here&lt;/a&gt;, &lt;a href=&#34;http://knowledgelayer.softlayer.com/learning/softlayer-e-mail-delivery-service-overview&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;http://blog.softlayer.com/2015/ongoing-actions-eliminate-spam-hosting&#34;&gt;here&lt;/a&gt;. This effects any new accounts created through the web sign-up process, and &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Brand/createCustomerAccount&#34;&gt;SoftLayer_Brand::createCustomerAccount&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getTransactionHistory&#34;&gt;SoftLayer_Hardware_Server::getTransactionHistory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improved backend performance for block and file storage provisioning.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: October 26, 2015</title>
      <link>https://softlayer.github.io/release_notes/20151026/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20151026/</guid>
      <description>

&lt;h4 id=&#34;portal:f734aaaecea1922135bd162d66279fff&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Improved reliability of File and Block Storage provisioning.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:f734aaaecea1922135bd162d66279fff&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Brand Master Accounts may no longer place orders&lt;/li&gt;
&lt;li&gt;Added an API endpoint that allows brands to disconnect, reconnect, and disable their customer accounts. &lt;a href=&#34;SoftLayer_Account_Lockdown_Request&#34;&gt;SoftLayer_Account_Lockdown_Request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: October 19, 2015</title>
      <link>https://softlayer.github.io/release_notes/20151019/</link>
      <pubDate>Mon, 19 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20151019/</guid>
      <description>

&lt;h4 id=&#34;portal:0471df1c12c5ae57c3a20da9a956fe80&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Storage groups default to max size if no size is specified.&lt;/li&gt;
&lt;li&gt;Changed generic error messages on Catalyst enrollment to specify more clearly the problem encountered.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: October 14, 2015</title>
      <link>https://softlayer.github.io/release_notes/20151014/</link>
      <pubDate>Wed, 14 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20151014/</guid>
      <description>

&lt;h4 id=&#34;portal:a47924ad456eda2761b6d6897feed2dc&#34;&gt;Portal&lt;/h4&gt;

&lt;h4 id=&#34;api:a47924ad456eda2761b6d6897feed2dc&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Updated documentation on &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_server/reloadOperatingSystem&#34;&gt;SoftLayer_Hardware_Server::reloadOperatingSystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improved performance of &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account/updateVpnUsersForResource&#34;&gt;SoftLayer_Account::updateVpnUsersForResource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Speed improvement to Cloud Migrate transaction&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: October 12, 2015</title>
      <link>https://softlayer.github.io/release_notes/20151012/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20151012/</guid>
      <description>

&lt;h4 id=&#34;portal:4ba4eef57dff2877b1657e4ffd947bac&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue with some Object Storage accounts not being listed properly&lt;/li&gt;
&lt;li&gt;Fixed an issue where some ticket attachments were not getting uploaded.&lt;/li&gt;
&lt;li&gt;Adds restrictions on ordering a server in the India DC. &lt;a href=&#34;http://knowledgelayer.softlayer.com/learning/ordering-restrictions-chennai-data-center-che01&#34;&gt;More Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fixed creation of billing item for managed resources that require a transfer price&lt;/li&gt;
&lt;li&gt;Eliminates false errors from being thrown during bandwidth usage polling&lt;/li&gt;
&lt;li&gt;Fixes No-OS rescue transactions from failing. No-OS rescues now default to a Linux rescue environment. There will be a future issue to allow customers to choose between Linux and Windows rescues environments for No-OS rescues.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:4ba4eef57dff2877b1657e4ffd947bac&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue with ticket routing for branded account upgrades&lt;/li&gt;
&lt;li&gt;Correct issue wherein secondary subnets were not being configured on inside VLANs when unrouted from a Gateway Device&lt;/li&gt;
&lt;li&gt;Reverted restrictions on user creation added in the &lt;a href=&#34;http://softlayer.github.io/release_notes/20151007/&#34;&gt;2010-10-07&lt;/a&gt; release.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Find active VMs of specified creator</title>
      <link>https://softlayer.github.io/ruby/find_my_vms/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/find_my_vms/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Code example of how to list virtual instances from a SoftLayer account.
# You can call the script from the command and provide the username you
# want to filter on. The script expects that you have the SoftLayer gem
# installed and have it configured with the credentials you&#39;d like
# to use with SoftLayer.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44.
#
# You can run the script with the username you&#39;d like to check under
# the account you have configured:
# find_my_active_vms userid
#
# The output of the script is in a csv format with commas as the
# column separator.
require &#39;softlayer_api&#39;
require &#39;vine&#39;
require &#39;csv&#39;

client = SoftLayer::Client.new
account_service = client[&#39;Account&#39;]
object_mask = &#39;mask[id,fullyQualifiedDomainName,primaryIpAddress,createDate,billingItem[orderItem[description,order[userRecord[username],id]]]]&#39;

USER_ID = ARGV[0] || client.username

vms = account_service.object_mask(object_mask).getVirtualGuests

csv_string = CSV.generate do |csv|
  csv &amp;lt;&amp;lt; [&#39;VM ID&#39;, &#39;Host&#39;, &#39;Public IP&#39;, &#39;Create Date&#39;] # table headers
  vms.each do |vm|
    creator = vm.access(&#39;billingItem.orderItem.order.userRecord.username&#39;)
    next unless creator == USER_ID
    csv &amp;lt;&amp;lt; [vm[&#39;id&#39;], vm[&#39;fullyQualifiedDomainName&#39;], vm[&#39;primaryIpAddress&#39;], vm[&#39;createDate&#39;]]
  end
end

puts csv_string
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>List Packages</title>
      <link>https://softlayer.github.io/ruby/list_packages/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/list_packages/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

# Helper function to fetch through all results from SoftLayer api
# using small page sizes and sleeping before every new page fetch.
def fetch_all(service, method)
  records = []; offset = 0; limit = 10
  loop do
    results = service.result_limit(offset, limit).send(method)
    records += results
    break if results.size &amp;lt; limit
    offset += limit
    sleep 3
  end
  records
end

# Credentials to the SoftLayer API are grabbed from the config file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
client = SoftLayer::Client.new
package_service = client[&#39;Product_Package&#39;]

# Show all packages
mask = &#39;mask[id,name,description,itemPrices]&#39;
all_packages = fetch_all(package_service.object_mask(mask), :getAllObjects)

all_packages.each do |package|
  puts &amp;quot;#{package[&#39;id&#39;]} - #{package[&#39;name&#39;]}&amp;quot;
  package[&#39;itemPrices&#39;].each do |price|
    puts &amp;quot;#{price[&#39;id&#39;]} - #{price[&#39;item&#39;][&#39;description&#39;]}&amp;quot;
  end
end

PACKAGE_ID = 126
mask = &#39;mask[id,name,description,items[id,description,keyName,prices[id,locationGroupId]]]&#39;
product_package = package_service.object_mask(mask).object_with_id(PACKAGE_ID).getObject

# Get locations in which package is available
puts &#39;PACKAGE LOCATIONS&#39;
pp package_service.object_with_id(PACKAGE_ID).getLocations

# Show a specific product&#39;s items with prices
product_package[&#39;items&#39;].each do |item|
  puts &amp;quot;#{item[&#39;id&#39;]} - #{item[&#39;description&#39;]} - #{item[&#39;keyName&#39;]}&amp;quot;
  item[&#39;prices&#39;].each do |price|
    puts &amp;quot;\t#{price[&#39;id&#39;]} - locationGroupId: #{price[&#39;locationGroupId&#39;]}&amp;quot;
  end
end

# Will only get the server items for this package
# puts &#39;SERVER ITEMS&#39;
# pp package_service.object_with_id(PACKAGE_ID).getActiveServerItems

# Will only get the RAM items for the package
# puts &#39;RAM ITEMS&#39;
# pp package_service.object_with_id(PACKAGE_ID).getActiveRamItems

# Get all locations
mask = &#39;mask[id,locations[id,name]]&#39;
puts &#39;ALL LOCATIONS&#39;
pp client[&#39;Location_Group_Pricing&#39;].object_mask(mask).getAllObjects
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>getCustomGraphData</title>
      <link>https://softlayer.github.io/python/tracking_objects/</link>
      <pubDate>Sun, 11 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/tracking_objects/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
from pprint import pprint as pp

class example():

    def __init__(self):
        self.client = SoftLayer.Client()

    def main(self):

        client = SoftLayer.Client()
        result = client[&#39;SoftLayer_Metric_Tracking_Object&#39;].getBandwidthData(&#39;2015-10-01&#39;,&#39;2015-11-31&#39;,&#39;public&#39;,600,id=10413573)
        result = client[&#39;SoftLayer_Metric_Tracking_Object&#39;].getSummaryData(&#39;2015-11-01&#39;,&#39;2015-11-02&#39;,[{&#39;keyName&#39;:&#39;PUBLICIN&#39;,&#39;summaryType&#39;:&#39;counter&#39;,&#39;name&#39;:&#39;vif_1_rx&#39;}],600,id=10413573)
        args = {
            &#39;startDateTime&#39; : &#39;2015-11-01&#39;,
            &#39;endDateTime&#39;:&#39;2015-11-02&#39;,
            &#39;metrics&#39;: [{&#39;keyName&#39;:&#39;PUBLICIN&#39;,&#39;summaryType&#39;:&#39;counter&#39;,&#39;name&#39;:&#39;vif_1_rx&#39;}],
            &#39;interval&#39;:600,
            &#39;returnImage&#39;: False
        }
        result = client[&#39;SoftLayer_Metric_Tracking_Object&#39;].getCustomGraphData(args,id=10413573)
        pp(result)

if __name__ == &amp;quot;__main__&amp;quot;:
    main = example()
    main.main()

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>