<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>SoftLayer API on SoftLayer API </title>
    <link>https://softlayer.github.io/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Thu, 05 Apr 2018 00:00:00 UTC</updated>
    
    <item>
      <title>Events</title>
      <link>https://softlayer.github.io/rest/events/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/events/</guid>
      <description>

&lt;h1 id=&#34;events&#34;&gt;Events&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Notification_Occurrence_Event/&#34;&gt;SoftLayer_Notification_Occurrence_Events&lt;/a&gt; at SoftLayer are how we communicate maintenance, outages, and other disruptive events to customers. In the control portal, you can find these at &lt;a href=&#34;https://control.softlayer.com/event/announcement&#34;&gt;https://control.softlayer.com/event/announcement&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;get-all-events&#34;&gt;Get All Events&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Notification_Occurrence_Event/getAllObjects/&#34;&gt;SoftLayer_Notification_Occurrence_Event::getAllObjects()&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output will look something like this, but will have every event that has ever been reported on your account. For brevity I have only included 1 Event&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;[
    {
        &amp;#34;endDate&amp;#34;: null,
        &amp;#34;id&amp;#34;: 2584,
        &amp;#34;lastImpactedUserCount&amp;#34;: 11232,
        &amp;#34;modifyDate&amp;#34;: &amp;#34;2016-06-13T08:27:20-06:00&amp;#34;,
        &amp;#34;recoveryTime&amp;#34;: null,
        &amp;#34;startDate&amp;#34;: &amp;#34;2014-03-31T00:35:00-06:00&amp;#34;,
        &amp;#34;statusCode&amp;#34;: {
            &amp;#34;keyName&amp;#34;: &amp;#34;COMPLETED&amp;#34;,
            &amp;#34;name&amp;#34;: &amp;#34;Completed&amp;#34;
        },
        &amp;#34;subject&amp;#34;: &amp;#34;IPv6 Sessions Down on FCR02.DAL05&amp;#34;,
        &amp;#34;summary&amp;#34;: &amp;#34;At 31-Mar-2014 06:35 UTC the Network Operations Center was alerted that the IPv6 BGP session on frontend customer router (FCR) fcr02.dal05 had dropped.  Network Engineers began investigating the issue and found a customer was sending a high rate of IPv6 packets destined to fcr02.dal05.  Network Engineers mitigated the issue at 31-Mar-2014 07:16 UTC.&amp;#34;,
        &amp;#34;systemTicketId&amp;#34;: 9266184
    }
]&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;get-open-events&#34;&gt;Get Open Events&lt;/h2&gt;

&lt;p&gt;To find all the open events, look for statusCode = ACTIVE&lt;/p&gt;

&lt;p&gt;statusCode = COMPLETED is also an option.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json?
objectMask=mask[notificationOccurrenceEventType]
resultLimit=0,10
objectFilter={&amp;#34;statusCode&amp;#34;:+{&amp;#34;keyName&amp;#34;:+{&amp;#34;operation&amp;#34;:+&amp;#34;ACTIVE&amp;#34;}}}&amp;#39;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json?objectMask=mask%5BnotificationOccurrenceEventType%5D&amp;amp;resultLimit=0%2C10&amp;amp;objectFilter=%7B%22statusCode%22%3A+%7B%22keyName%22%3A+%7B%22operation%22%3A+%22ACTIVE%22%7D%7D%7D&amp;#39;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{&amp;#39;endDate&amp;#39;: &amp;#39;2018-04-05T17:00:00-06:00&amp;#39;,
  &amp;#39;id&amp;#39;: 116425,
  &amp;#39;lastImpactedUserCount&amp;#39;: 581,
  &amp;#39;modifyDate&amp;#39;: &amp;#39;2018-04-05T07:35:20-06:00&amp;#39;,
  &amp;#39;notificationOccurrenceEventType&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;PLANNED&amp;#39;},
  &amp;#39;recoveryTime&amp;#39;: None,
  &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-05T04:00:00-06:00&amp;#39;,
  &amp;#39;statusCode&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;ACTIVE&amp;#39;, &amp;#39;name&amp;#39;: &amp;#39;Active&amp;#39;},
  &amp;#39;subject&amp;#39;: &amp;#39;Scheduled Maintenance: WDC04 Critical Power Maintenance&amp;#39;,
  &amp;#39;summary&amp;#39;: &amp;#39;Dear IBM Customer, \r\n&amp;#39;
             &amp;#39;\r\n&amp;#39;
             &amp;#39;IBM Cloud in coordination with our vendors will be performing a &amp;#39;
             &amp;#39;Critical Power Maintenance at WDC04 starting on Thursday, April &amp;#39;
             &amp;#39;5th, 2018.  The window for this maintenance is 06:00am EST to &amp;#39;
             &amp;#39;19:00pm EST.\r\n&amp;#39;
             &amp;#39;\r\n&amp;#39;
             &amp;#39;We Do not expect any major impact to our servers or services &amp;#39;
             &amp;#39;during this maintenance.  The only expected impact during this &amp;#39;
             &amp;#39;maintenance will be a loss of redundancy at the server level &amp;#39;
             &amp;#39;only for a short period of time as they work on the Secondary &amp;#39;
             &amp;#39;power source and a 5-10 minute loss of IPMI functionality during &amp;#39;
             &amp;#39;the transition to alternative power source at the start and end &amp;#39;
             &amp;#39;of the maintenace but will not be an extended period of time.\r\n&amp;#39;
             &amp;#39;\r\n&amp;#39;
             &amp;#39;If additional preventative course of action is required to &amp;#39;
             &amp;#39;minimize service impact, further notification(s) will be &amp;#39;
             &amp;#39;provided. In the event of an unexpected impact, we will work &amp;#39;
             &amp;#39;with our Data Center Staff and on-site Engineers to take &amp;#39;
             &amp;#39;immediate action to bring critical services back on-line as &amp;#39;
             &amp;#39;quickly as possible. \r\n&amp;#39;
             &amp;#39;\r\n&amp;#39;
             &amp;#39;\r\n&amp;#39;
             &amp;#39;***Scheduled Date(s): Thursday, April 5th, 2018 \r\n&amp;#39;
             &amp;#39;***Scheduled Time(s): 06:00am EST to 19:00pm EST Please contact &amp;#39;
             &amp;#39;our support department should you have any questions or &amp;#39;
             &amp;#39;concerns.&amp;#39;,
  &amp;#39;systemTicketId&amp;#39;: 58076149},&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;event-types&#34;&gt;Event Types&lt;/h1&gt;

&lt;p&gt;Events can be PLANNED, UNPLANNED_INCIDENT, or ANNOUNCEMENT.&lt;/p&gt;

&lt;h2 id=&#34;planned&#34;&gt;PLANNED&lt;/h2&gt;

&lt;p&gt;Planned events are usually announced a few weeks in advanced, and cover things like router upgrades, VSI reboots, and other work that needs to be done to improve our products.&lt;/p&gt;

&lt;p&gt;This will get all the PLANNED and ACTIVE events going on.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json?
objectMask=mask[notificationOccurrenceEventType]&amp;amp;
objectFilter={
    &amp;#34;notificationOccurrenceEventType&amp;#34;:{&amp;#34;keyName&amp;#34;:{&amp;#34;operation&amp;#34;:+&amp;#34;PLANNED&amp;#34;}},
    &amp;#34;statusCode&amp;#34;:{&amp;#34;keyName&amp;#34;:{&amp;#34;operation&amp;#34;:&amp;#34;ACTIVE&amp;#34;}}}&amp;#39;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json?objectMask=mask%5BnotificationOccurrenceEventType%5D&amp;amp;objectFilter=%7B%22notificationOccurrenceEventType%22%3A+%7B%22keyName%22%3A+%7B%22operation%22%3A+%22PLANNED%22%7D%7D%2C+%22statusCode%22%3A+%7B%22keyName%22%3A+%7B%22operation%22%3A+%22ACTIVE%22%7D%7D%7D&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt; {&amp;#39;endDate&amp;#39;: &amp;#39;2017-08-19T19:00:00-06:00&amp;#39;,
  &amp;#39;id&amp;#39;: 81507,
  &amp;#39;lastImpactedUserCount&amp;#39;: 284685,
  &amp;#39;modifyDate&amp;#39;: &amp;#39;2017-08-19T13:25:50-06:00&amp;#39;,
  &amp;#39;notificationOccurrenceEventType&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;PLANNED&amp;#39;},
  &amp;#39;recoveryTime&amp;#39;: None,
  &amp;#39;startDate&amp;#39;: &amp;#39;2017-08-19T13:00:00-06:00&amp;#39;,
  &amp;#39;statusCode&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;ACTIVE&amp;#39;, &amp;#39;name&amp;#39;: &amp;#39;Active&amp;#39;},
  &amp;#39;subject&amp;#39;: &amp;#39;Emergency Planned IMS Maintenance&amp;#39;,
  &amp;#39;summary&amp;#39;: &amp;#39;The IBM Cloud system engineers will be performing an emergency &amp;#39;
             &amp;#39;IMS application database system maintenance. During this &amp;#39;
             &amp;#39;maintenance we do not expect any IMS database or application &amp;#39;
             &amp;#39;system downtime. The purpose of the maintenance is to resolve &amp;#39;
             &amp;#39;IMS database system issues. When the maintenance tasks are &amp;#39;
             &amp;#39;completed, notifications will be sent out stating that IMS &amp;#39;
             &amp;#39;application database maintenance has been successfully &amp;#39;
             &amp;#39;completed.\r\n&amp;#39;,
  &amp;#39;systemTicketId&amp;#39;: 44279325}&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;unplanned-incident&#34;&gt;UNPLANNED_INCIDENT&lt;/h2&gt;

&lt;p&gt;Unplanned incidents are a whole variety of things that might impact services.&lt;/p&gt;

&lt;p&gt;This query will get all the UNPLANNED_INCIDENTS that were created AFTER  04/01/2018 01:00:00. &lt;a href=&#34;https://softlayer.github.io/article/object-filters/&#34;&gt;https://softlayer.github.io/article/object-filters/&lt;/a&gt; has more details on other date time operations you can use.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json?
objectMask=mask[id,+startDate,+notificationOccurrenceEventType]&amp;amp;
objectFilter={
    &amp;#34;notificationOccurrenceEventType&amp;#34;:
        {&amp;#34;keyName&amp;#34;:{&amp;#34;operation&amp;#34;:&amp;#34;UNPLANNED_INCIDENT&amp;#34;}
    }
    &amp;#34;startDate&amp;#34;:
        {&amp;#34;operation&amp;#34;:&amp;#34;greaterThanDate&amp;#34;,
         &amp;#34;options&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;date&amp;#34;,&amp;#34;value&amp;#34;:[&amp;#34;04/01/2018 01:00:00&amp;#34;]}]
    }
}&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json?objectMask=mask%5Bid%2C+startDate%2C+notificationOccurrenceEventType%5D&amp;amp;objectFilter=%7B%22notificationOccurrenceEventType%22%3A+%7B%22keyName%22%3A+%7B%22operation%22%3A+%22UNPLANNED_INCIDENT%22%7D%7D%2C+%22startDate%22%3A+%7B%22operation%22%3A+%22greaterThanDate%22%2C+%22options%22%3A+%5B%7B%22name%22%3A+%22date%22%2C+%22value%22%3A+%5B%2204%2F01%2F2018+01%3A00%3A00%22%5D%7D%5D%7D%7D&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{&amp;#39;endDate&amp;#39;: &amp;#39;2018-04-02T23:41:00-06:00&amp;#39;,
  &amp;#39;id&amp;#39;: 116225,
  &amp;#39;lastImpactedUserCount&amp;#39;: 7905,
  &amp;#39;modifyDate&amp;#39;: &amp;#39;2018-04-03T11:04:32-06:00&amp;#39;,
  &amp;#39;notificationOccurrenceEventType&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;UNPLANNED_INCIDENT&amp;#39;},
  &amp;#39;recoveryTime&amp;#39;: None,
  &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-02T23:34:00-06:00&amp;#39;,
  &amp;#39;statusCode&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;ACTIVE&amp;#39;, &amp;#39;name&amp;#39;: &amp;#39;Active&amp;#39;},
  &amp;#39;subject&amp;#39;: &amp;#39;Private network degradation in DCs in Dallas region&amp;#39;,
  &amp;#39;summary&amp;#39;: &amp;#39;At 03-Apr-2018 5:03 UTC the Network Operation Center was alerted &amp;#39;
             &amp;#39;to communication failures for the backend private networks in &amp;#39;
             &amp;#39;the Dallas Region. Network Engineers are investigating at this &amp;#39;
             &amp;#39;time. We will provide more detail as it becomes available.&amp;#39;,
  &amp;#39;systemTicketId&amp;#39;: 58021829}&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;announcement&#34;&gt;ANNOUNCEMENT&lt;/h2&gt;

&lt;p&gt;Announcements are the &amp;lsquo;everything else&amp;rsquo; category. Not usually disruptive, will usually be things like end of life announcements.&lt;/p&gt;

&lt;p&gt;This time I&amp;rsquo;ve changed the objectMask to include the lastUpdate and restrict other local fields to limit the amount of information we get back to fields I care about at the moment.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json?
objectMask=mask[
    id, startDate, subject, lastUpdate ,notificationOccurrenceEventType
]&amp;amp;
objectFilter=
    {&amp;#34;notificationOccurrenceEventType&amp;#34;:
        {&amp;#34;keyName&amp;#34;:{&amp;#34;operation&amp;#34;:&amp;#34;ANNOUNCEMENT&amp;#34;}}
    }&amp;#39;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json?objectMask=mask%5Bid%2CstartDate%2Csubject%2ClastUpdate%2CnotificationOccurrenceEventType%5D&amp;amp;objectFilter=%7B%22notificationOccurrenceEventType%22%3A+%7B%22keyName%22%3A+%7B%22operation%22%3A+%22ANNOUNCEMENT%22%7D%7D%7D&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;  &amp;#39;id&amp;#39;: 106105,
  &amp;#39;lastUpdate&amp;#39;: {&amp;#39;contents&amp;#39;: &amp;#39;IBM Cloud engineers have received patches from &amp;#39;
                             &amp;#39;Red Hat that address the Meltdown and Spectre &amp;#39;
                             &amp;#39;security vulnerabilities.\r\n&amp;#39;
                             &amp;#39;\r\n&amp;#39;
                             &amp;#39;New image only available for Red Hat Enterprise &amp;#39;
                             &amp;#39;Linux 7.x at this time. \r\n&amp;#39;
                             &amp;#39;\r\n&amp;#39;
                             &amp;#39;As always - before applying new images, IBM &amp;#39;
                             &amp;#39;Cloud recommends testing to ensure a smooth &amp;#39;
                             &amp;#39;transition for your environment.\r\n&amp;#39;
                             &amp;#39;\r\n&amp;#39;
                             &amp;#39;\r\n&amp;#39;
                             &amp;#39;IBM Cloud&amp;#39;,
                 &amp;#39;createDate&amp;#39;: &amp;#39;2018-01-17T13:44:51-06:00&amp;#39;,
                 &amp;#39;endDate&amp;#39;: None,
                 &amp;#39;startDate&amp;#39;: &amp;#39;2018-01-17T13:44:51-06:00&amp;#39;},
  &amp;#39;notificationOccurrenceEventType&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;ANNOUNCEMENT&amp;#39;},
  &amp;#39;startDate&amp;#39;: None,
  &amp;#39;subject&amp;#39;: &amp;#39;New Red Hat Enterprise Linux 7 Images Available&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;event-specifics&#34;&gt;Event Specifics&lt;/h1&gt;

&lt;p&gt;Now that we know how to deal with getting a list of all events, lets dive into a specific event.&lt;/p&gt;

&lt;p&gt;The most recent Active event I have is going to be this one.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;  &amp;#39;endDate&amp;#39;: &amp;#39;2018-04-02T23:41:00-06:00&amp;#39;,
  &amp;#39;id&amp;#39;: 116225,
  &amp;#39;lastImpactedUserCount&amp;#39;: 7905,
  &amp;#39;modifyDate&amp;#39;: &amp;#39;2018-04-03T11:04:32-06:00&amp;#39;,
  &amp;#39;notificationOccurrenceEventType&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;UNPLANNED_INCIDENT&amp;#39;},
  &amp;#39;recoveryTime&amp;#39;: None,
  &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-02T23:34:00-06:00&amp;#39;,
  &amp;#39;statusCode&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;ACTIVE&amp;#39;, &amp;#39;name&amp;#39;: &amp;#39;Active&amp;#39;},
  &amp;#39;subject&amp;#39;: &amp;#39;Private network degradation in DCs in Dallas region&amp;#39;,&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;effected-machines&#34;&gt;Effected Machines&lt;/h2&gt;

&lt;p&gt;To see what machines on our account are effected by this event, we need to tap into the &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Notification_Occurrence_Resource/&#34;&gt;impactedResources&lt;/a&gt; relational property. There is also impactedAccounts and impactedUsers that work the same way.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/116225/getObject.json?objectMask=mask%5Bid%2CstartDate%2Csubject%2CimpactedResources%5D&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{&amp;#39;id&amp;#39;: 116225,
 &amp;#39;impactedResources&amp;#39;: [{&amp;#39;active&amp;#39;: 1,
                        &amp;#39;filterLabel&amp;#39;: &amp;#39;dal01&amp;#39;,
                        &amp;#39;hostname&amp;#39;: &amp;#39;testvpn.test.com&amp;#39;,
                        &amp;#39;notificationOccurrenceEventId&amp;#39;: 116225,
                        &amp;#39;privateIp&amp;#39;: &amp;#39;10.17.223.157&amp;#39;,
                        &amp;#39;publicIp&amp;#39;: &amp;#39;208.43.49.207&amp;#39;,
                        &amp;#39;resourceAccountId&amp;#39;: 307608,
                        &amp;#39;resourceName&amp;#39;: &amp;#39;testvpn.test.com&amp;#39;,
                        &amp;#39;resourceTableId&amp;#39;: 218467,
                        &amp;#39;resourceType&amp;#39;: &amp;#39;SERVER&amp;#39;},
                       {&amp;#39;active&amp;#39;: 1,
                        &amp;#39;filterLabel&amp;#39;: &amp;#39;dal01&amp;#39;,
                        &amp;#39;hostname&amp;#39;: &amp;#39;domain-master.lablayer.info&amp;#39;,
                        &amp;#39;notificationOccurrenceEventId&amp;#39;: 116225,
                        &amp;#39;privateIp&amp;#39;: &amp;#39;10.37.82.159&amp;#39;,
                        &amp;#39;publicIp&amp;#39;: &amp;#39;173.193.23.40&amp;#39;,
                        &amp;#39;resourceAccountId&amp;#39;: 307608,
                        &amp;#39;resourceName&amp;#39;: &amp;#39;domain-master.lablayer.info&amp;#39;,
                        &amp;#39;resourceTableId&amp;#39;: 662657,
                        &amp;#39;resourceType&amp;#39;: &amp;#39;SERVER&amp;#39;}],
 &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-02T23:34:00-06:00&amp;#39;,
 &amp;#39;subject&amp;#39;: &amp;#39;Private network degradation in DCs in Dallas region&amp;#39;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the resource is a storage volume, the output would look more like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{&amp;#39;id&amp;#39;: 115025,
 &amp;#39;impactedResources&amp;#39;: [{&amp;#39;active&amp;#39;: 1,
                        &amp;#39;filterLabel&amp;#39;: &amp;#39;Storage Type 02 File Cluster &amp;#39;
                                       &amp;#39;stff-syd0101&amp;#39;,
                        &amp;#39;hostname&amp;#39;: &amp;#39;SL02SV307608_1&amp;#39;,
                        &amp;#39;notificationOccurrenceEventId&amp;#39;: 115025,
                        &amp;#39;privateIp&amp;#39;: &amp;#39;fsf-syd0101a-fz.service.softlayer.com&amp;#39;,
                        &amp;#39;resourceAccountId&amp;#39;: 307608,
                        &amp;#39;resourceName&amp;#39;: &amp;#39;SL02SV307608_1&amp;#39;,
                        &amp;#39;resourceTableId&amp;#39;: 39134586,
                        &amp;#39;resourceType&amp;#39;: &amp;#39;STORAGE_NAS&amp;#39;}],
 &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-02T05:20:00-06:00&amp;#39;,
 &amp;#39;subject&amp;#39;: &amp;#39;PLANNED MAINTENANCE: Performance/Endurance File Storage Services &amp;#39;
            &amp;#39;in SYD01&amp;#39;}&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;updates&#34;&gt;Updates&lt;/h2&gt;

&lt;p&gt;Over the course of an event, SoftLayer employees working to resolve the event will update it with progress if needed. To get that information, tap into the &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Notification_Occurrence_Update&#34;&gt;updates&lt;/a&gt; relational property&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/116225/getObject.json?objectMask=mask%5Bid%2CstartDate%2Csubject%2Cupdates%5D&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{&amp;#39;id&amp;#39;: 116225,
 &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-02T23:34:00-06:00&amp;#39;,
 &amp;#39;subject&amp;#39;: &amp;#39;Private network degradation in DCs in Dallas region&amp;#39;,
 &amp;#39;updates&amp;#39;: [{&amp;#39;contents&amp;#39;: &amp;#39;At 06:48 UTC network engineers performed a &amp;#39;
                          &amp;#39;supervisor failover on mbr01.dal01 which restored &amp;#39;
                          &amp;#39;backend connectivity for affected hosts. A reboot &amp;#39;
                          &amp;#39;and disk check may be required for virtual hosts &amp;#39;
                          &amp;#34;which use SAN. If you&amp;#39;re still experiencing issues &amp;#34;
                          &amp;#39;please contact support via phone, chat or ticket &amp;#39;
                          &amp;#39;and reference event ID #58021829.&amp;#39;,
              &amp;#39;createDate&amp;#39;: &amp;#39;2018-04-03T01:45:20-06:00&amp;#39;,
              &amp;#39;endDate&amp;#39;: None,
              &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-03T01:44:00-06:00&amp;#39;},
             {&amp;#39;contents&amp;#39;: &amp;#39;As of 03-April-2018 06:45 UTC network engineers are &amp;#39;
                          &amp;#39;still investigating and working to restore &amp;#39;
                          &amp;#39;connectivity as soon as possible.&amp;#39;,
              &amp;#39;createDate&amp;#39;: &amp;#39;2018-04-03T00:50:08-06:00&amp;#39;,
              &amp;#39;endDate&amp;#39;: None,
              &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-03T00:49:00-06:00&amp;#39;},
             {&amp;#39;contents&amp;#39;: &amp;#39;At 03-Apr-2018 5:03 UTC the Network Operation &amp;#39;
                          &amp;#39;Center was alerted to communication failures for &amp;#39;
                          &amp;#39;the backend private networks in the Dallas Region. &amp;#39;
                          &amp;#39;Network Engineers are investigating at this time. &amp;#39;
                          &amp;#39;We will provide more detail as it becomes &amp;#39;
                          &amp;#39;available.&amp;#39;,
              &amp;#39;createDate&amp;#39;: &amp;#39;2018-04-02T23:36:57-06:00&amp;#39;,
              &amp;#39;endDate&amp;#39;: None,
              &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-02T23:36:57-06:00&amp;#39;}]}&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;ack-events&#34;&gt;Ack Events&lt;/h2&gt;

&lt;p&gt;To Acknowledge events (this just makes them not pop-up in the control portal) use the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Notification_Occurrence_Event/acknowledgeNotification/&#34;&gt;acknowledgeNotification method&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use the &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Notification_Occurrence_Event/#acknowledgedFlag&#34;&gt;acknowledgeFlag&lt;/a&gt; to determine if an incident is in an acknowledged state or not.&lt;/p&gt;

&lt;p&gt;List all unacknowledged events&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json?objectMask=mask%5Bid%2CstartDate%2Csubject%2CnotificationOccurrenceEventType%2CacknowledgedFlag%5D&amp;amp;objectFilter=%7B%22acknowledgedFlag%22%3A+%7B%22operation%22%3A+0%7D%7D&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get the event, notice its unacknowledged&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/116225/getObject.json?objectMask=mask%5Bid%2CstartDate%2Csubject%2CnotificationOccurrenceEventType%2CacknowledgedFlag%5D&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acknowledge an event&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/116225/acknowledgeNotification.json&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get the event, notice its acknowledged&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; -H &amp;#34;Accept-Encoding: gzip, deflate, compress&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/116225/getObject.json?objectMask=mask%5Bid%2CstartDate%2Csubject%2CnotificationOccurrenceEventType%2CacknowledgedFlag%5D&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{&amp;#39;acknowledgedFlag&amp;#39;: False,
 &amp;#39;id&amp;#39;: 116225,
 &amp;#39;notificationOccurrenceEventType&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;UNPLANNED_INCIDENT&amp;#39;},
 &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-02T23:34:00-06:00&amp;#39;,
 &amp;#39;subject&amp;#39;: &amp;#39;Private network degradation in DCs in Dallas region&amp;#39;}
True
{&amp;#39;acknowledgedFlag&amp;#39;: True,
 &amp;#39;id&amp;#39;: 116225,
 &amp;#39;notificationOccurrenceEventType&amp;#39;: {&amp;#39;keyName&amp;#39;: &amp;#39;UNPLANNED_INCIDENT&amp;#39;},
 &amp;#39;startDate&amp;#39;: &amp;#39;2018-04-02T23:34:00-06:00&amp;#39;,
 &amp;#39;subject&amp;#39;: &amp;#39;Private network degradation in DCs in Dallas region&amp;#39;}&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Ordering Vyatta Network Gateways</title>
      <link>https://softlayer.github.io/python/orderVyatta/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/orderVyatta/</guid>
      <description>&lt;p&gt;This example goes over how to order a Single or HA vyatta with a bunch of optional settings. More context around ordering can be found in  &lt;a href=&#34;https://softlayer.github.io/python/orderBareMetal/&#34;&gt;https://softlayer.github.io/python/orderBareMetal/&lt;/a&gt; and  &lt;a href=&#34;https://softlayer.github.io/python/ordering_slcli/&#34;&gt;https://softlayer.github.io/python/ordering_slcli/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; SoftLayer.managers &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ordering
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt;  pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; logging


logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;debug(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starting up&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# Requires softlayer-python 5.4.3+&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vyattaOrderer&lt;/span&gt;():

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__version__ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;v5.4.3&amp;#39;&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoftLayer needs to be 5.4.3+, is currently &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__version__)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
        &lt;span style=&#34;color:#75715e&#34;&gt;# slcli order package-list --package_type BARE_METAL_GATEWAY &lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# Will get you available package keynames&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;package_keyname &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2U_NETWORK_GATEWAY_APPLIANCE_1O_GBPS&amp;#34;&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;complex_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance&amp;#39;&lt;/span&gt;


    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;orderVyatta&lt;/span&gt;(self, dc, pub_vlan&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, prv_vlan&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Actually orders a vyatts
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Required
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - dc
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - Server Chassis
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - RAM
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - OS (not really though)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - HD (number, raid, partition)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - Bandwidth 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - Port Speed
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - IPv6
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Options
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - vlans
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - provision scrips
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - ssh keys
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - userdata
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                - hostname, domain
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        
        order_svc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Order&amp;#39;&lt;/span&gt;]

        order_items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;itemKeynameList()

        extras &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
        extras[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hardware&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generateHardwareEntry(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vyatta1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.com&amp;#39;&lt;/span&gt;, pub_vlan, prv_vlan, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vyatta1 Test&amp;#39;&lt;/span&gt;)
        ]
        extras[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;storageGroups&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generateRaidEntry()]
        extras[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshKeys&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshKeyIds&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;87634&lt;/span&gt;]}]
        extras[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;provisionScripts&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://raw.githubusercontent.com/softlayer/softlayer.github.io/master/provision-test.sh&amp;#39;&lt;/span&gt;
        ]

        vyatta_order &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getOrderObject(dc, order_items, extras, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        order_object &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderContainers&amp;#39;&lt;/span&gt;: [
                vyatta_order
            ]
        }

        verify &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; order_svc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verifyOrder(order_object)
        &lt;span style=&#34;color:#75715e&#34;&gt;# verify = order_svc.placeOrder(order_object)&lt;/span&gt;
        pp(verify)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;done&amp;#34;&lt;/span&gt;)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;orderVyattaHA&lt;/span&gt;(self, dc, pub_vlan&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, prv_vlan&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;):
        order_svc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Order&amp;#39;&lt;/span&gt;]
        om &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ordering&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OrderingManager(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client)

        order_items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;itemKeynameList()

        extras &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
        extras[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hardware&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generateHardwareEntry(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vyatta1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.com&amp;#39;&lt;/span&gt;, pub_vlan, prv_vlan, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vyatta1 Test&amp;#39;&lt;/span&gt;),
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generateHardwareEntry(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vyatta2&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.com&amp;#39;&lt;/span&gt;, pub_vlan, prv_vlan, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vyatta2 Test&amp;#39;&lt;/span&gt;)
        ]
        extras[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;storageGroups&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generateRaidEntry()]
        mySshKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;87634&lt;/span&gt;
        extras[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshKeys&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshKeyIds&amp;#39;&lt;/span&gt;: [mySshKey]}, {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshKeyIds&amp;#39;&lt;/span&gt;: [mySshKey]}]
        &lt;span style=&#34;color:#75715e&#34;&gt;# Each server needs a provision script&lt;/span&gt;
        extras[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;provisionScripts&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://raw.githubusercontent.com/softlayer/softlayer.github.io/master/provision-test.sh&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://raw.githubusercontent.com/softlayer/softlayer.github.io/master/provision-test.sh&amp;#39;&lt;/span&gt;
        ]
        extras[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clusterIdentifier&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myTestClusterOfVyattas&amp;#39;&lt;/span&gt;

        vyatta_order &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getOrderObject(dc, order_items, extras, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)

        cluster_extras &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clusterIdentifier&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myTestClusterOfVyattas&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sshKeys&amp;#34;&lt;/span&gt;: [{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sshKeyIds&amp;#34;&lt;/span&gt;: [mySshKey]}]
        }
        cluster_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoftLayer_Container_Product_Order_Gateway_Appliance_Cluster&amp;#34;&lt;/span&gt;
        cluster_object &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; om&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generate_order(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NETWORK_GATEWAY_APPLIANCE_CLUSTER&amp;#39;&lt;/span&gt;, dc, [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GATEWAY_APPLIANCE_CLUSTER&amp;#39;&lt;/span&gt;],
                                            cluster_type, False, None, cluster_extras, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        &lt;span style=&#34;color:#75715e&#34;&gt;# the cluster order object is a bit special, and we need to remove these for it to work properly&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; cluster_object[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; cluster_object[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;useHourlyPricing&amp;#39;&lt;/span&gt;]
        order_object &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderContainers&amp;#39;&lt;/span&gt;: [
                vyatta_order,
                cluster_object
            ]
        }

        verify &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; order_svc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verifyOrder(order_object)
        &lt;span style=&#34;color:#75715e&#34;&gt;# verify = order_svc.placeOrder(order_object)&lt;/span&gt;
        pp(verify)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;done&amp;#34;&lt;/span&gt;)


    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;generateHardwareEntry&lt;/span&gt;(self, hostname, domain, prv_vlan&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, pub_vlan&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, userData&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;):
        hardware &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domain&amp;#39;&lt;/span&gt;: domain,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;: hostname,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;primaryBackendNetworkComponent&amp;#39;&lt;/span&gt;: 
                {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;networkVlan&amp;#39;&lt;/span&gt;: {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; : int(pub_vlan)}},
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;primaryNetworkComponent&amp;#39;&lt;/span&gt;: 
                {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;networkVlan&amp;#39;&lt;/span&gt;: {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; : int(prv_vlan)}},
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;userData&amp;#39;&lt;/span&gt;: [{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: userData}]
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; hardware

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;generateRaidEntry&lt;/span&gt;(self):
        storage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;arrayTypeId&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hardDrives&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;partitionTemplateId&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; storage

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getOrderObject&lt;/span&gt;(self, dc, items, extras, quantity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Uses the ordering manager to build a order object&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        om &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ordering&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OrderingManager(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client)
        order &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; om&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generate_order(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;package_keyname, dc, items, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;complex_type, False, None, extras, quantity)
        &lt;span style=&#34;color:#75715e&#34;&gt;# pp(order)&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; order



    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;datacenterList&lt;/span&gt;(self):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Prints a list of dcs and their ids&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        om &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ordering&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OrderingManager(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client)
        locations &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; om&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;package_locations(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;package_keyname)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ID, name, longName&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; region &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; locations:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; location &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; region[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;locations&amp;#39;&lt;/span&gt;]:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; location[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;locationPackageDetails&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;isAvailable&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
                    dc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; location[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;]
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (dc[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], dc[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;], dc[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longName&amp;#39;&lt;/span&gt;]))


    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;itemKeynameList&lt;/span&gt;(self):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Builds a list of item keyNames needed to order a VYATTA
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        To see what category of items are required, use this command
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        $&amp;gt; slcli order category-list 2U_NETWORK_GATEWAY_APPLIANCE_1O_GBPS
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        To see what items are in each category, use this command
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        $&amp;gt; slcli order item-list 2U_NETWORK_GATEWAY_APPLIANCE_1O_GBPS
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Price Ids are subject to change, so please use keynames to get price ids
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        at order time.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;# The junk all orders have to have&lt;/span&gt;
        required_items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AUTOMATED_NOTIFICATION&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MONITORING_HOST_PING&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NOTIFICATION_EMAIL_AND_TICKET&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;REBOOT_KVM_OVER_IP&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NESSUS_VULNERABILITY_ASSESSMENT_REPORTING&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;REDUNDANT_POWER_SUPPLY&amp;#39;&lt;/span&gt;,
        ]

        &lt;span style=&#34;color:#75715e&#34;&gt;# 20000GB is recommended. &lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# BANDWIDTH_0_GB_2 and BANDWIDTH_UNLIMITED_100_MBPS_UPLINK are also possible&lt;/span&gt;
        network_items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BANDWIDTH_20000_GB&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1_IP_ADDRESS&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1_IPV6_ADDRESS&amp;#39;&lt;/span&gt; 
        ]

        &lt;span style=&#34;color:#75715e&#34;&gt;# Were going to go with RAID1, 500GB. &lt;/span&gt;
        hard_drive &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HARD_DRIVE_500GB_SATA_II&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HARD_DRIVE_500GB_SATA_II&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DISK_CONTROLLER_RAID_1&amp;#39;&lt;/span&gt;
        ]

        ram &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;RAM_16_GB_DDR3_1333_ECC_REG&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RAM_32_GB_DDR3_1333_REG_2&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;RAM_64_GB_DDR3_1333_REG_2&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;RAM_48_GB_DDR3_1333_REG&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;RAM_96_GB_DDR3_1333_REG&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;RAM_128_GB_DDR3_1333_REG_2&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;RAM_256_GB_DDR3_1333_REG_2&amp;#39;&lt;/span&gt;
        ]

        &lt;span style=&#34;color:#75715e&#34;&gt;# Sets the server chassis and OS&lt;/span&gt;
        server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OS_VYATTA_5600_5_X_UP_TO_20GBPS_SUBSCRIPTION_EDITION_64_BIT&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;INTEL_XEON_2620_2_40&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;INTEL_INTEL_XEON_E52620_V4_2_10&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;INTEL_XEON_2650_2_30&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;INTEL_INTEL_XEON_E52650_V4_2_20&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;INTEL_XEON_2690_2_60&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;INTEL_INTEL_XEON_E52690_V4_2_60&amp;#39;&lt;/span&gt;
        ]

        allItems &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; required_items &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; network_items &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; hard_drive &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ram &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; server
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; allItems

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listAvailableVlans&lt;/span&gt;(self, dc_id):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Will find available VLANs that a vyatta can be ordered on&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

        mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;mask[
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            network, type, primaryRouter[datacenter], 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            attachedNetworkGatewayFlag, dedicatedFirewallFlag
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        ]&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

        _filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;networkVlans&amp;#39;&lt;/span&gt; : {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;primaryRouter&amp;#39;&lt;/span&gt;: {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt; : { &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;: dc_id} }
                }
            }
        }
        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getNetworkVlans(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask,filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_filter)

        &lt;span style=&#34;color:#75715e&#34;&gt;# Vlans that are not-standard, part of a firewall or gateway, can&amp;#39;t be ordered on. &lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ID, Vlan Number, Type, Router&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; vlan &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; result:
            vlan_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vlan[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;keyName&amp;#39;&lt;/span&gt;]
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; vlan_type &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GATEWAY&amp;#39;&lt;/span&gt;:
                vlan_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GATEWAY (No ordering)&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; vlan[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dedicatedFirewallFlag&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
                vlan_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/FIREWALL (No ordering)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; vlan_type
            &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; vlan[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;attachedNetworkGatewayFlag&amp;#39;&lt;/span&gt;]:
                vlan_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/GATEWAY MEMBER (No ordering)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; vlan_type

            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - VLAN: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - Type: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; 
                (vlan[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], 
                 vlan[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vlanNumber&amp;#39;&lt;/span&gt;],
                 vlan_type, 
                 vlan[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;primaryRouter&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;])
            )


&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    main &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vyattaOrderer()
    &lt;span style=&#34;color:#75715e&#34;&gt;# 2255245 - VLAN: 946 - Type: STANDARD - bcr01a.sjc04&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# 2255243 - VLAN: 913 - Type: STANDARD - fcr01a.sjc04&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# main.orderVyatta(&amp;#39;sjc04&amp;#39;, 2255243, 2255245)&lt;/span&gt;
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderVyattaHA(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sjc04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2255243&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2255245&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release notes: March 30, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180330/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180330/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Added feature to notify customers about host outages to the Virtual/viewMemberDetails/ page&lt;/li&gt;
&lt;li&gt;Removes Provision Scripts and User Data sections from the CHECKOUT page when ordering HSM devices.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Scale_Group/editObject/&#34;&gt;SoftLayer_Scale_Group&amp;rsquo;s editObject&lt;/a&gt; method to automatically scale the group up or down appropriately when the desiredMemberCount parameter is specified&lt;/li&gt;
&lt;li&gt;Fixes an issue that prevented the &amp;lsquo;IOPS&amp;rsquo; ORM value from being updated for performance replicas.&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Virtual_Disk_Image/getAvailableBootModes/&#34;&gt;SoftLayer_Virtual_Disk_Image::getAvailableBootModes()&lt;/a&gt; Method&lt;/li&gt;
&lt;li&gt;Expose &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Account/#securityLevel&#34;&gt;Account::securityLevel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Round up the Load Balancer as a Service telemetry monitoring metrics value to 3 decimal points.&lt;/li&gt;
&lt;li&gt;Update SLDN reference documentation to clarify setting ICMP type and code on a Security Group Rule.&lt;/li&gt;
&lt;li&gt;Disable Security Group Rule setting of ICMP type 255&lt;/li&gt;
&lt;li&gt;Updates SoftLayer_Hardware_User data to support 16kb of data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed a issue in which VLAN ordering would occasionally not honor the requested primary subnet size&lt;/li&gt;
&lt;li&gt;Fixed bandwidth overage notification empty ticket updates&lt;/li&gt;
&lt;li&gt;Refactored guest migration pre-checks and added a check to ensure the destination host is different from the source.&lt;/li&gt;
&lt;li&gt;Fixes an intermittent issue preventing iSCSI authorizations when credentials already exist.&lt;/li&gt;
&lt;li&gt;Refactored the script that checks for mixed-public/private VSIs on dedicated hosts and changed the behavior to not send emails when none are found.&lt;/li&gt;
&lt;li&gt;Fix an issue ordering IPv6 subnets on public VLANs under certain circumstances.&lt;/li&gt;
&lt;li&gt;EOL: Disable Flex Image Service for all Customers&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;slcli&#34;&gt;SLCLI&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/softlayer/softlayer-python/releases/tag/v5.4.3&#34;&gt;https://github.com/softlayer/softlayer-python/releases/tag/v5.4.3&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: March 15, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180315/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180315/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Adds the Hardware Security Module(HSM) to the manage order form. Adds a Learn More link to the sub-section header for HSM.&lt;/li&gt;
&lt;li&gt;Improve order forms rendering speed&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Added &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_Interconnect_Tenant/getAllPortLabelsWithCurrentUsage/&#34;&gt;SoftLayer_Network_Interconnect_Tenant::getAllPortLabelsWithCurrentUseage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adds SERIAL_NUMBER property to SoftLayer_Network_Storage_Iscsi volumes which can be used as an objectFilter&lt;/li&gt;
&lt;li&gt;Provide API to retrieve load balancer monitoring metrics and ssl ciphers

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Network_LBaaS_LoadBalancerMonitoringMetricDataPoint/&#34;&gt;Network_LBaaS_LoadBalancerMonitoringMetricDataPoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_LBaaS_LoadBalancer/getListenerTimeSeriesData&#34;&gt;Network_LBaaS_LoadBalancer::getListenerTimeSeriesData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_LBaaS_LoadBalancer/getSslCiphers/&#34;&gt;Network_LBaaS_LoadBalancer::getSslCiphers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_LBaaS_LoadBalancer/updateSslCiphers/&#34;&gt;Network_LBaaS_LoadBalancer::updateSslCiphers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Added HSM 750 compatibility to provisioning workflow&lt;/li&gt;
&lt;li&gt;Blocks monthly suspend-able virtual server orders. If the useHourlyPricing flag is not set or is false an error should be thrown&lt;/li&gt;
&lt;li&gt;Blocked image templates from being pushed to cache more then once in a set period of time.&lt;/li&gt;
&lt;li&gt;Logging Two Factor authentication failures&lt;/li&gt;
&lt;li&gt;Added eventLog calls for the creation and deletion of external bindings.&lt;/li&gt;
&lt;li&gt;Enable the Security Group feature in DAL09, WDC04&lt;/li&gt;
&lt;li&gt;Fix issues when ordering from an image template for a virtual server.&lt;/li&gt;
&lt;li&gt;Prevent the release of IP address reservation when in use by a gateway device.&lt;/li&gt;
&lt;li&gt;Prevent users from attaching security groups to network components on VSIs that have active transactions running against them.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: March 14, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180314/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180314/</guid>
      <description>

&lt;h1 id=&#34;added-sldn-documentation&#34;&gt;Added SLDN Documentation&lt;/h1&gt;

&lt;p&gt;We have finally retired the old &lt;a href=&#34;https://sldn.softlayer.com&#34;&gt;SLDN&lt;/a&gt; site, and migrated its content over to &lt;a href=&#34;https://softlayer.github.io&#34;&gt;softlayer.github.io&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following content types have been added, in addition to the existing release notes, and code examples.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/article/&#34;&gt;Articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/blog/&#34;&gt;Blogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/tags/service/&#34;&gt;Services&lt;/a&gt; and their associated &lt;a href=&#34;https://softlayer.github.io/tags/method/&#34;&gt;Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/tags/datatype/&#34;&gt;Datatypes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you notice any issues with the content here, please create an issue on our &lt;a href=&#34;https://github.com/softlayer/softlayer.github.io/issues&#34;&gt;github page&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Understanding and building an order using the Softlayer order CLI</title>
      <link>https://softlayer.github.io/article/understanding-ordering/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/article/understanding-ordering/</guid>
      <description>

&lt;p&gt;In version 5.4.0 of &lt;a href=&#34;https://github.com/softlayer/softlayer-python&#34;&gt;softlayer-python&lt;/a&gt;, there is a new slcli command for placing IaaS cloud server orders using the API. This command can also be used to place orders for products that are normally ordered through the IBM Cloud infrastructure customer portal. There are multiple helpers to assist you in creating a specific order. In these examples, you will learn how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build an order

&lt;ol&gt;
&lt;li&gt;Understand the order structure&lt;/li&gt;
&lt;li&gt;Search for server packages&lt;/li&gt;
&lt;li&gt;Identify categories of items&lt;/li&gt;
&lt;li&gt;Verify the order&lt;/li&gt;
&lt;li&gt;Place the order&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Place an order programmatically using Python.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;build-an-order&#34;&gt;Build an order&lt;/h2&gt;

&lt;h3 id=&#34;step-1-understand-the-order-structure&#34;&gt;Step 1: Understand the order structure&lt;/h3&gt;

&lt;p&gt;In the SoftLayer API, an order can consist of multiple order containers. For simplicity, the order CLI only works with one order container, so in these examples and explanations, the terms “order container” and “order” are synonymous.&lt;/p&gt;

&lt;p&gt;A package is the first component to look for when placing an order. Packages are divided among the different top-level products available for ordering in SoftLayer. Some example packages are &lt;em&gt;CLOUD_SERVER&lt;/em&gt; for VSIs, &lt;em&gt;BARE_METAL_SERVER&lt;/em&gt; for bare metal servers, and &lt;em&gt;STORAGE_AS_A_SERVICE_STAAS&lt;/em&gt; for Storage-as-a-Service. Within a package, there are items that are subdivided into categories. Some packages have presets for your convenience and others require that you specify items individually.  If a package’s category is required, an item from that category must be chosen to order the package.  Depending on the category, items within the category are mutually exclusive (for example, you can’t order both 8 GB and 16 GB of RAM for a VSI). Finally, each order must have an associated location (datacenter).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://softlayer.github.io/img/articles/Order_Structure.png&#34; alt=&#34;packages&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When using the order CLI, we build an order from the top (package) to the bottom (items). You can use the slcli order package-list to find the package you want to order. A &amp;ndash;keyword option is provided to perform some simple searching for filtering out packages, making it easier to find the package you need. For this example we will build a bare metal server order.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ slcli order package-list --help
Usage: slcli order package-list &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

  List packages that can be ordered via the placeOrder API.

  Example:
      &lt;span style=&#34;color:#75715e&#34;&gt;# List out all packages for ordering
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      slcli order package-list

  Keywords can also be used &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; some simple filtering functionality to help
  find a package easier.

  Example:
     &lt;span style=&#34;color:#75715e&#34;&gt;# List out all packages with &amp;#34;server&amp;#34; in the name
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      slcli order package-list --keyword server

Options:
  --keyword TEXT  A word &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;or string&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; used to filter package names.
  -h, --help      Show this message and exit.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;step-2-search-for-server-packages&#34;&gt;Step 2: Search for server packages&lt;/h3&gt;

&lt;p&gt;We can use the “server” keyword to search for server packages:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order package-list --keyword &amp;#34;Bare Metal&amp;#34;
:.....................:.....................:
:         name        :       keyName       :
:.....................:.....................:
: Bare Metal Instance : BARE_METAL_INSTANCE :
:  Bare Metal Server  :  BARE_METAL_SERVER  :
:.....................:.....................:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will be using the &lt;em&gt;BARE_METAL_SERVER&lt;/em&gt; package for this order. Bare metal servers offer preset configurations, so we will find and use one for our order. The preset-list command needs a package keyname (&lt;em&gt;BARE_METAL_SERVER&lt;/em&gt;) for listing the presets. There is also a &amp;ndash;keyword option for filtering the returned presets if needed.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order preset-list BARE_METAL_SERVER
:.............................................:...............................................:.................................................................:
:                     name                    :                    keyName                    :                           description                           :
:.............................................:...............................................:.................................................................:
:         S1270 32GB 1X1TBSATA NORAID         :          S1270_32GB_1X1TBSATA_NORAID          :      Single Xeon 1270, 32GB Ram, 1x1TB SATA disks, Non-RAID     :
:         S1270 32GB 2X960GBSSD NORAID        :          S1270_32GB_2X960GBSSD_NORAID         :     Single Xeon 1270, 32GB Ram, 2x960GB SSD disks, Non-RAID     :
:         D2690 128GB 2X600GBSAS RAID1        :         D2690_128GB_2X600GBSAS_RAID1_2        :       Dual Xeon 2690, 128GB Ram, 2x600GB SAS disks, RAID1       :
:        D2690 256GB 4X600GBSAS RAID10        :     D2690_256GB_4X600GBSAS_RAID10_RAID_10     :       Dual Xeon 2690, 256GB Ram, 4x600GB SAS disks, RAID10      :
:        D2620v4 64GB 1X1TBSATA NORAID        :         D2620V4_64GB_1X1TBSATA_NORAID         :      Dual Xeon 2620v4, 64GB Ram, 1x1TB SATA disks, Non-RAID     :
:     D2620 128GB 2X1T SATA RAID 1xM60 GPU    :     D2620_128GB_2X1TB_SATA_RAID_1_M60_GPU1    : Dual Xeon 2620, 128GB Ram, 2X1TB SATA disks, RAID 1   1xM60 GPU :
:    D2690 256GB 2x4TB SATA RAID1 2xM60 GPU   : D2690_256GB_2X4TB_SATA_RAID1_2XM60_GPU_RAID_1 :        Dual Xeon 2690, 256GB Ram, 2X4TB SATA disk, RAID 1       :
:       D2690v4 128GB 2X600GB SAS RAID 1      :        D2690V4_128GB_2X600GB_SAS_RAID_1       :      Dual Xeon 2690v4, 128GB Ram, 2x600GB SAS disks, RAID1      :
:        D2620v4 64GB 2X1TB SATA RAID 1       :         D2620V4_64GB_2X1TB_SATA_RAID_1        :       Dual Xeon 2620v4, 64GB Ram, 2x1TB SATA disks, RAID1       :
: D2620v4 128GB 2X800GB SSD RAID 1 K80 GPU(2) :   D2620V4_128GB_2X800GB_SSD_RAID_1_K80_GPU2   :      Dual Xeon 2620v4, 128GB Ram, 2x800GB SSD disks, RAID1      :
:  D2690v4 128GB 2X4TB SATA RAID 1 K2 GPU(2)  :    D2690V4_128GB_2X4TB_SATA_RAID_1_K2_GPU2    :            D2690v4 128GB 2x4TB SATA RAID 1 K2 GPU(2)            :
:      D2690v4 256GB 4X600GB SAS RAID 10      :       D2690V4_256GB_4X600GB_SAS_RAID_10       :     Dual Xeon 2690v4, 256GB Ram, 4x600GB SAS disks, RAID 10     :
:.............................................:...............................................:.................................................................:&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;step-3-identify-categories-of-items&#34;&gt;Step 3: Identify categories of items&lt;/h3&gt;

&lt;p&gt;For this example, we will use the &lt;em&gt;S1270_32GB_1X1TBSATA_NORAID&lt;/em&gt; preset. Now let’s find the categories of items we need to set for a bare metal order.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;slcli order category-list BARE_METAL_SERVER
:........................................:.......................:............:
:                  name                  :      categoryCode     : isRequired :
:........................................:.......................:............:
:                 Server                 :         server        :     Y      :
:        New Cloud Customer Setup        :   new_customer_setup  :     N      :
:               Surcharges               :        premium        :     N      :
:            Operating System            :           os          :     Y      :
:                  RAM                   :          ram          :     Y      :
:            Disk Controller             :    disk_controller    :     Y      :
:            First Hard Drive            :         disk0         :     Y      :
:           Second Hard Drive            :         disk1         :     N      :
:            Third Hard Drive            :         disk2         :     N      :
:           Fourth Hard Drive            :         disk3         :     N      :
:            Public Bandwidth            :       bandwidth       :     Y      :
:           Uplink Port Speeds           :       port_speed      :     Y      :
:           Remote Management            :   remote_management   :     Y      :
:          Primary IP Addresses          :    pri_ip_addresses   :     Y      :
:     Public Secondary IP Addresses      :    sec_ip_addresses   :     N      :
:              Power Supply              :      power_supply     :     N      :
:      Public Static IPv6 Addresses      : static_ipv6_addresses :     N      :
:         Primary IPv6 Addresses         :   pri_ipv6_addresses  :     N      :
:                 EVault                 :         evault        :     N      :
:        Graphics Processing Unit        :          gpu0         :     N      :
:   Secondary Graphics Processing Unit   :          gpu1         :     N      :
:                 Other                  :         other         :     N      :
:    VPN Management - Private Network    :     vpn_management    :     Y      :
: Vulnerability Assessments &amp;amp; Management : vulnerability_scanner :     N      :
:........................................:.......................:............:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a minimal order, so we are only specifying items that are required for the order. To find the items we’re required to fill, we can use the &amp;ndash;required option on the category-list command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order category-list BARE_METAL_SERVER --required
:..................................:...................:............:
:               name               :    categoryCode   : isRequired :
:..................................:...................:............:
:              Server              :       server      :     Y      :
:         Operating System         :         os        :     Y      :
:               RAM                :        ram        :     Y      :
:         Disk Controller          :  disk_controller  :     Y      :
:         First Hard Drive         :       disk0       :     Y      :
:         Public Bandwidth         :     bandwidth     :     Y      :
:        Uplink Port Speeds        :     port_speed    :     Y      :
:        Remote Management         : remote_management :     Y      :
:       Primary IP Addresses       :  pri_ip_addresses :     Y      :
: VPN Management - Private Network :   vpn_management  :     Y      :
:..................................:...................:............:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Most of these categories are already covered for us by the preset (Server, RAM, and Disk Controller, First Hard Drive). If you’re ever unsure of the required categories you may be missing in your order, you can use the place command with the &amp;ndash;verify flag, and if any categories are missing, they will be printed out for you.&lt;/p&gt;

&lt;p&gt;We can now select the rest of our items for our order using the item-list command. There are typically a lot of items to choose from in a package, so it is suggested to use the &amp;ndash;category option to only retrieve the items from the category you are interested in.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order item-list BARE_METAL_SERVER --category os
:.....................................................:..................................................................:
:                       keyName                       :                           description                            :
:.....................................................:..................................................................:
:       OS_RHEL_5_32_BIT_PER_PROCESSOR_LICENSING      : Red Hat Enterprise Linux 5.x (32 bit) (per-processor licensing)  :
:       OS_RHEL_6_64_BIT_PER_PROCESSOR_LICENSING      : Red Hat Enterprise Linux 6.x (64 bit) (per-processor licensing)  :
:                OS_FREEBSD_9_X_64_BIT                :                       FreeBSD 9.x (64 bit)                       :
:          OS_WINDOWS_2012_R2_FULL_STD_64_BIT         :         Windows Server 2012 R2 Standard Edition (64 bit)         :
:                OS_FREEBSD_10_X_64_BIT               :                      FreeBSD 10.x (64 bit)                       :
:                 OS_CENTOS_7_X_64_BIT                :                       CentOS 7.x (64 bit)                        :
:          OS_WINDOWS_2008_FULL_STD_64_BIT_R2         :         Windows Server 2008 R2 Standard Edition (64bit)          :
:                 OS_CENTOS_6_X_32_BIT                :                       CentOS 6.x (32 bit)                        :
:           OS_WINDOWS_2012_FULL_STD_64_BIT           :          Windows Server 2012 Standard Edition (64 bit)           :
:     OS_UBUNTU_12_04_LTS_PRECISE_PANGOLIN_64_BIT     :         Ubuntu Linux 12.04 LTS Precise Pangolin (64 bit)         :
:                OS_FREEBSD_10_X_32_BIT               :                      FreeBSD 10.x (32 bit)                       :
:                  OS_RHEL_7_1_64_BIT                 : Red Hat Enterprise Linux 7.x (64 bit)  (per-processor licensing) :
:       OS_UBUNTU_16_04_LTS_XENIAL_XERUS_64_BIT       :           Ubuntu Linux 16.04 LTS Xenial Xerus (64 bit)           :
:                 OS_CENTOS_6_X_64_BIT                :                       CentOS 6.x (64 bit)                        :
:            OS_CENTOS_7_X_MINIMAL_64_BIT_2           :              CentOS 7.x - Minimal Install (64 bit)               :
:     OS_UBUNTU_12_04_LTS_PRECISE_PANGOLIN_32_BIT     :         Ubuntu Linux 12.04 LTS Precise Pangolin (32 bit)         :
:                OS_NO_OPERATING_SYSTEM               :                       No Operating System                        :
:             OS_CENTOS_6_X_MINIMAL_64_BIT            :              CentOS 6.x - Minimal Install (64 bit)               :
:               OS_FREEBSD_9_X_32_BIT_2               :                       FreeBSD 9.x (32 bit)                       :
:        OS_UBUNTU_14_04_LTS_TRUSTY_TAHR_32_BIT       :           Ubuntu Linux 14.04 LTS Trusty Tahr (32 bit)            :
: OS_WINDOWS_SERVER_2012_STANDARD_EDITION_64_BIT_CORE :         Windows Server 2012 R2 Standard Edition (64 bit)         :
:        OS_WINDOWS_2008_FULL_WEB_64_BIT_R2_SP1       :            Windows Server 2008 R2 Web Edition (64bit)            :
:       OS_RHEL_5_64_BIT_PER_PROCESSOR_LICENSING      : Red Hat Enterprise Linux 5.x (64 bit) (per-processor licensing)  :
:       OS_RHEL_6_32_BIT_PER_PROCESSOR_LICENSING      : Red Hat Enterprise Linux 6.x (32 bit) (per-processor licensing)  :
:        OS_UBUNTU_14_04_LTS_TRUSTY_TAHR_64_BIT       :           Ubuntu Linux 14.04 LTS Trusty Tahr (64 bit)            :
:           OS_WINDOWS_2016_FULL_STD_64_BIT           :          Windows Server 2016 Standard Edition (64 bit)           :
:                OS_FREEBSD_11_X_64_BIT               :                      FreeBSD 11.x (64 bit)                       :
:.....................................................:..................................................................:&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$slcli order item-list BARE_METAL_SERVER --category bandwidth
:.....................................:.......................................:
:               keyName               :              description              :
:.....................................:.......................................:
:            BANDWIDTH_0_GB           :             0 GB Bandwidth            :
:           BANDWIDTH_500_GB          :            500 GB Bandwidth           :
: BANDWIDTH_UNLIMITED_100_MBPS_UPLINK : Unlimited Bandwidth (100 Mbps Uplink) :
:          BANDWIDTH_1000_GB          :           1000 GB Bandwidth           :
:          BANDWIDTH_5000_GB          :           5000 GB Bandwidth           :
:          BANDWIDTH_10000_GB         :           10000 GB Bandwidth          :
:           BANDWIDTH_0_GB_2          :             0 GB Bandwidth            :
:          BANDWIDTH_20000_GB         :           20000 GB Bandwidth          :
:.....................................:.......................................:&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order item-list BARE_METAL_SERVER --category port_speed
:......................................................:..........................................................:
:                       keyName                        :                       description                        :
:......................................................:..........................................................:
:            1_GBPS_PRIVATE_NETWORK_UPLINK             :              1 Gbps Private Network Uplink               :
:           100_MBPS_PRIVATE_NETWORK_UPLINK            :             100 Mbps Private Network Uplink              :
:   10_GBPS_REDUNDANT_PUBLIC_PRIVATE_NETWORK_UPLINKS   :    10 Gbps Redundant Public &amp;amp; Private Network Uplinks    :
:    10_GBPS_DUAL_PRIVATE_NETWORK_UPLINKS_UNBONDED     :     10 Gbps Dual Private Network Uplinks (Unbonded)      :
:        10_MBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS        :         10 Mbps Public &amp;amp; Private Network Uplinks         :
:        1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS         :         1 Gbps Public &amp;amp; Private Network Uplinks          :
:            10_MBPS_PRIVATE_NETWORK_UPLINK            :              10 Mbps Private Network Uplink              :
:      10_GBPS_REDUNDANT_PRIVATE_NETWORK_UPLINKS       :        10 Gbps Redundant Private Network Uplinks         :
:       100_MBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS        :        100 Mbps Public &amp;amp; Private Network Uplinks         :
:    1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS_UNBONDED    :    1 Gbps Public &amp;amp; Private Network Uplinks (Unbonded)    :
: 10_GBPS_DUAL_PUBLIC_PRIVATE_NETWORK_UPLINKS_UNBONDED : 10 Gbps Dual Public &amp;amp; Private Network Uplinks (Unbonded) :
:......................................................:..........................................................:&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order item-list BARE_METAL_SERVER --category remote_management
:....................:......................:
:      keyName       :     description      :
:....................:......................:
: REBOOT_KVM_OVER_IP : Reboot / KVM over IP :
:....................:......................:&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order item-list BARE_METAL_SERVER --category pri_ip_addresses
:..............:..............:
:   keyName    : description  :
:..............:..............:
: 1_IP_ADDRESS : 1 IP Address :
:..............:..............:&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order item-list BARE_METAL_SERVER --category vpn_management
:.....................................................:.......................................................:
:                       keyName                       :                      description                      :
:.....................................................:.......................................................:
: UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT : Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account :
:.....................................................:.......................................................:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some of these categories only have 1 item, so there isn’t much choice for those items. For this order, we will use the following items:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS_CENTOS_7_X_64_BIT&lt;/li&gt;
&lt;li&gt;BANDWIDTH_0_GB_2&lt;/li&gt;
&lt;li&gt;1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS&lt;/li&gt;
&lt;li&gt;REBOOT_KVM_OVER_IP, 1_IP_ADDRESS&lt;/li&gt;
&lt;li&gt;UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;step-4-verify-the-order&#34;&gt;Step 4: Verify the order&lt;/h3&gt;

&lt;p&gt;Now that we know the details of the bare metal server we will be ordering, we can try verifying the order we want to make. The place command takes in all the information for the order, and will attempt to verify the order (if &amp;ndash;verify is specified) or place the order. We need the following information to verify our order:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Package (BARE_METAL_SERVER)&lt;/li&gt;
&lt;li&gt;Location (DALLAS13)&lt;/li&gt;
&lt;li&gt;Billing term (hourly)&lt;/li&gt;
&lt;li&gt;Preset (S1270_32GB_1X1TBSATA_NORAID)&lt;/li&gt;
&lt;li&gt;Type (SoftLayer_Container_Product_Order_Hardware_Server)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: The type information is used by the order API to determine the data that is needed in the order. For bare metal servers, this type is SoftLayer_Container_Product_Order_Hardware_Server. These types can be found on &lt;a href=&#34;https://softlayer.github.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server&#34;&gt;SLDN&lt;/a&gt; and will typically begin with SoftLayer_Container_Product_Order.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order place --verify --billing hourly BARE_METAL_SERVER DALLAS13 --preset S1270_32GB_1X1TBSATA_NORAID BANDWIDTH_0_GB_2 1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS REBOOT_KVM_OVER_IP 1_IP_ADDRESS UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT OS_CENTOS_7_X_64_BIT --complex-type SoftLayer_Container_Product_Order_Hardware_Server
:.....................................................:.......................................................:......:
:                       keyName                       :                      description                      : cost :
:.....................................................:.......................................................:......:
:                   BANDWIDTH_0_GB_2                  :                     0 GB Bandwidth                    :  0   :
:        1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS        :        1 Gbps Public &amp;amp; Private Network Uplinks        : .04  :
:                  REBOOT_KVM_OVER_IP                 :                  Reboot / KVM over IP                 :  0   :
:                     1_IP_ADDRESS                    :                      1 IP Address                     :  0   :
: UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT : Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account :  0   :
:                 OS_CENTOS_7_X_64_BIT                :                  CentOS 7.x (64 bit)                  :  0   :
:               DISK_CONTROLLER_NONRAID               :                        Non-RAID                       :  0   :
:              HARD_DRIVE_1_00_TB_SATA_2              :                      1.00 TB SATA                     : .036 :
:             INTEL_SINGLE_XEON_1270_3_50             :    Single Intel Xeon E3-1270 v3 (4 Cores, 3.50 GHz)   : .173 :
:              RAM_32_GB_DDR3_1333_REG_2              :                       32 GB RAM                       : .356 :
:.....................................................:.......................................................:......:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output will show you each item being ordered, along with the cost associated with that item. If the order passes verification, that means there are no conflicting items, and all required categories have an item specified in the order.&lt;/p&gt;

&lt;h3 id=&#34;step-5-place-the-order&#34;&gt;Step 5: Place the order&lt;/h3&gt;

&lt;p&gt;The next step is to place the order.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order place --billing hourly BARE_METAL_SERVER DALLAS13 --preset S1270_32GB_1X1TBSATA_NORAID BANDWIDTH_0_GB_2 1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS REBOOT_KVM_OVER_IP 1_IP_ADDRESS UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT OS_CENTOS_7_X_64_BIT --complex-type SoftLayer_Container_Product_Order_Hardware_Server

This action will incur charges on your account. Continue? [y/N]: y

SoftLayerAPIError(SoftLayer_Exception_Order_InvalidData): Invalid data on the order for property: hardware. Hostname and domain are not set properly.&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the order placement, extra data is required based on the complex type. In this case, Bare Metal servers need extra hardware data to specify the hostname and domain of the server. This is specified using the &amp;ndash;extras option. Extras are specified as a JSON-encoded string. According to the error message, we need to specify a hardware property in our extras with the hostname and domain of the server. The structure of the JSON will be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hardware&amp;#34;&lt;/span&gt;: [
        {    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;yourhostname&amp;gt;&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;domain&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;yourdomain&amp;gt;&amp;#34;&lt;/span&gt;
        }
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can place the order with the extra data needed.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order place --billing hourly BARE_METAL_SERVER DALLAS13 \
    --preset S1270_32GB_1X1TBSATA_NORAID BANDWIDTH_0_GB_2 \
    1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS \
    REBOOT_KVM_OVER_IP \
    1_IP_ADDRESS  \
    UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT \
    OS_CENTOS_7_X_64_BIT  \
    --complex-type SoftLayer_Container_Product_Order_Hardware_Server  \
    --extras &amp;#39;{&amp;#34;hardware&amp;#34;: [{&amp;#34;hostname&amp;#34;: &amp;#34;test-demo&amp;#34;, &amp;#34;domain&amp;#34;: &amp;#34;softlayer.com&amp;#34;}]}&amp;#39;

This action will incur charges on your account. Continue? [y/N]: y

:.........:...........................:
:    name : value                     :
:.........:...........................:
:      id : 21924753                  :
: created : 2018-01-03T10:08:03-06:00 :
:  status : PENDING_APPROVAL          :
:.........:...........................:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have ordered a bare metal server!&lt;/p&gt;

&lt;h2 id=&#34;place-an-order-programmatically-with-python&#34;&gt;Place an order programmatically with Python&lt;/h2&gt;

&lt;p&gt;Now that we have used the CLI to build an order with the package and items that we want, we can convert this order to Python code and programmatically place the order.&lt;/p&gt;

&lt;h3 id=&#34;safety-of-item-keynames&#34;&gt;Safety of item keynames&lt;/h3&gt;

&lt;p&gt;Using item keynames is a more hardened way of placing orders. Item IDs may change, and orders placed with hard-coded IDs may not continually work. Keynames will allow orders to consistently work, because price IDs for the order are dynamically retrieved for you.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: If an item is removed from the ordering catalog due to deprecation, orders will still need to be updated to use the keyname of a more current item.&lt;/p&gt;

&lt;h3 id=&#34;converting-from-cli-calls-to-python-code&#34;&gt;Converting from CLI calls to Python code&lt;/h3&gt;

&lt;p&gt;If we take our previous example for creating a bare metal server on the CLI, we can very easily convert this over to Python code. As of version 3.4.0 of softlayer-python, functions have been added to the ordering manager for verifying and placing orders.&lt;/p&gt;

&lt;p&gt;Here is the place order command from before:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ slcli order place --billing hourly BARE_METAL_SERVER DALLAS13 --preset S1270_32GB_1X1TBSATA_NORAID BANDWIDTH_0_GB_2 1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS REBOOT_KVM_OVER_IP 1_IP_ADDRESS UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT OS_CENTOS_7_X_64_BIT --complex-type SoftLayer_Container_Product_Order_Hardware_Server --extras &amp;#39;{&amp;#34;hardware&amp;#34;: [{&amp;#34;hostname&amp;#34;: &amp;#34;test-demo&amp;#34;, &amp;#34;domain&amp;#34;: &amp;#34;softlayer.com&amp;#34;}]}&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The function for place_order on the ordering manager has arguments that are like the data given to the place order command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;place_order&lt;/span&gt;(self, package_keyname, location, item_keynames, complex_type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, hourly&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, preset_keyname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, extras&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, quantity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Python code for placing the order is similar to the place order command:
import SoftLayer&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;package &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BARE_METAL_SERVER&amp;#39;&lt;/span&gt;
location &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DALLAS13&amp;#39;&lt;/span&gt;
extras &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hardware&amp;#39;&lt;/span&gt;: [{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test-demo&amp;#39;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domain&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;softlayer.com&amp;#39;&lt;/span&gt;}]}
preset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;S1270_32GB_1X1TBSATA_NORAID&amp;#39;&lt;/span&gt;
items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BANDWIDTH_0_GB_2&amp;#39;&lt;/span&gt;,
         &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1_GBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS&amp;#39;&lt;/span&gt;,
         &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;REBOOT_KVM_OVER_IP&amp;#39;&lt;/span&gt;,
         &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1_IP_ADDRESS&amp;#39;&lt;/span&gt;,
         &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT&amp;#39;&lt;/span&gt;,
         &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OS_CENTOS_7_X_64_BIT&amp;#39;&lt;/span&gt;]
complex_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Container_Product_Order_Hardware_Server&amp;#39;&lt;/span&gt;

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()
order_mgr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OrderingManager(client)
order_mgr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verify_order(package, location, items,
                       hourly&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, preset_keyname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;preset,
                       complex_type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;complex_type,
                       extras&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;extras)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to programmatically verify your order rather than placing it, substitute verify_order() for place_order(). Both functions use the arguments the same way.&lt;/p&gt;

&lt;h3 id=&#34;converting-existing-python-code-to-use-keynames&#34;&gt;Converting existing Python code to use keynames&lt;/h3&gt;

&lt;p&gt;If you already place orders via Python code using hard-coded IDs, you can use this code snippet to do a one-time retrieval of the keynames from the IDs.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

package_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;
keyname_mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mask[keyName]&amp;#39;&lt;/span&gt;
package &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Package&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;package_id, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;keyname_mask)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Package:&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(package[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;keyName&amp;#39;&lt;/span&gt;])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)


prices &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1800&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;274&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;906&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;420&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;44988&lt;/span&gt;]
keyname_mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mask[keyName, prices[id]]&amp;#39;&lt;/span&gt;
keynames &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Items:&amp;#34;&lt;/span&gt;)
pkg_items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Package&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getItems(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;package_id,
                                               mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;keyname_mask)
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; price &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; prices:
    pkg_item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [i &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; pkg_items
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; price &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [p[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prices&amp;#39;&lt;/span&gt;]]][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(pkg_item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;keyName&amp;#39;&lt;/span&gt;])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>VSI Flavors</title>
      <link>https://softlayer.github.io/article/vsiflavors/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/article/vsiflavors/</guid>
      <description>

&lt;p&gt;The introduction of Flavors to VSI ordering significantly changes how VSIs are ordered, and the old style of ordering will eventually become unsupported. This page will hopefully explain what changes need to be made to any scripts that order VSIs.&lt;/p&gt;

&lt;p&gt;Support for flavors has been added to the &lt;a href=&#34;https://github.com/softlayer/softlayer-python&#34;&gt;SLCLI&lt;/a&gt;, so make sure you have at least version 5.4.0.&lt;/p&gt;

&lt;h1 id=&#34;getting-a-flavor-list&#34;&gt;Getting a Flavor List&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Virtual_Guest/getCreateObjectOptions/&#34;&gt;SoftLayer_Virtual_Guest::getCreateObjectOptions&lt;/a&gt; is where you can find out the flavor listing, along with all other options you might want to supply to &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Virtual_Guest/createObject&#34;&gt;SoftLayer_Virtual_Guest::createObject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the response from getCreateObjectOptions, will be a key &amp;ldquo;flavors&amp;rdquo;, with an array of different flavors and some information about their configuration.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ curl -g -u ${SLAUTH} &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/getCreateObjectOptions&amp;#34; | python -m json.tool


{ommitted}
    &amp;#34;flavors&amp;#34;: [
        {
            &amp;#34;flavor&amp;#34;: {
                &amp;#34;keyName&amp;#34;: &amp;#34;B1_1X2X25&amp;#34;,
                &amp;#34;name&amp;#34;: &amp;#34;B1.1x2x25&amp;#34;,
                &amp;#34;configuration&amp;#34;: [
                    {
                        &amp;#34;category&amp;#34;: {
                            &amp;#34;name&amp;#34;: &amp;#34;First Disk&amp;#34;
                        },
                        &amp;#34;price&amp;#34;: {
                            &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
                            &amp;#34;item&amp;#34;: {
                                &amp;#34;description&amp;#34;: &amp;#34;25 GB (SAN)&amp;#34;
                            }
                        }
                    },
                    {
                        &amp;#34;category&amp;#34;: {
                            &amp;#34;name&amp;#34;: &amp;#34;RAM&amp;#34;
                        },
                        &amp;#34;price&amp;#34;: {
                            &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;.03&amp;#34;,
                            &amp;#34;item&amp;#34;: {
                                &amp;#34;description&amp;#34;: &amp;#34;2 GB&amp;#34;
                            }
                        }
                    },
                    {
                        &amp;#34;category&amp;#34;: {
                            &amp;#34;name&amp;#34;: &amp;#34;Computing Instance&amp;#34;
                        },
                        &amp;#34;price&amp;#34;: {
                            &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;.023&amp;#34;,
                            &amp;#34;item&amp;#34;: {
                                &amp;#34;description&amp;#34;: &amp;#34;1 x 2.0 GHz Core&amp;#34;
                            }
                        }
                    }
                ],
                &amp;#34;totalMinimumHourlyFee&amp;#34;: &amp;#34;0.053&amp;#34;,
                &amp;#34;totalMinimumRecurringFee&amp;#34;: &amp;#34;35.17&amp;#34;
            },
            &amp;#34;template&amp;#34;: {
                &amp;#34;id&amp;#34;: null,
                &amp;#34;supplementalCreateObjectOptions&amp;#34;: {
                    &amp;#34;flavorKeyName&amp;#34;: &amp;#34;B1_1X2X25&amp;#34;
                }
            }
        },
{ommitted}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same information can be retrieved from the SLCLI as well.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;slcli vs create-options&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;ordering-a-flavor&#34;&gt;Ordering a Flavor&lt;/h1&gt;

&lt;p&gt;Basically, instead of specifying a CPU, Memory, and Disk specifically, you remove those options and instead add a new &amp;ldquo;&lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Virtual_Guest_SupplementalCreateObjectOptions/&#34;&gt;supplementalCreateObjectOptions&lt;/a&gt;&amp;rdquo; field that has the flavor. Here is a &lt;a href=&#34;https://console.bluemix.net/docs/vsi/vsi_provision_api.html#api-rest-public&#34;&gt;REST Example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here is how to use the SLCLI for ordering&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;slcli vs create --os=UBUNTU_LATEST_64 \
    --flavor=BL1_2X4X100  \
    --billing=hourly  \
    --domain=softlayer.com  \
    --hostname=sldn-testing  \
    --datacenter=hou02&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release Notes March 9, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180309/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180309/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Add new account attribute type &amp;lsquo;NEW_ASSIGN_NETWORK_ENABLED&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Updates the simple ordering methods, createObject and getCreateObjectOptions, to properly handle ordering suspend-able virtual servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Addresses a problem where SoftLayer_Network_Storage::enableSnapshots() wasn&amp;rsquo;t working properly for Weekly snapshot schedules.&lt;/li&gt;
&lt;li&gt;Block public image creation when incorrect location data is sent in.&lt;/li&gt;
&lt;li&gt;Removed trailing and ending spaces from ipAddressRestriction value before creating a user.&lt;/li&gt;
&lt;li&gt;Added try/catch block to Virtual Guest workflow in reclaim guest to catch exception where a Scale Group tries to provision a VSI to meet the member requirement when a VSI is reclaimed (causing the Scale Group to drop below the minimum). After catching the exception, the Scale Group is suspended, a ticket is created, and the VSI reclaim is continued.&lt;/li&gt;
&lt;li&gt;Now disabling IBMid authentication when SAML authentication is added to an account.&lt;/li&gt;
&lt;li&gt;Create transaction path for Brocade rename to At&amp;amp;t.&lt;/li&gt;
&lt;li&gt;Updates the post install script transaction&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How to order Vlans</title>
      <link>https://softlayer.github.io/rest/orderVlan/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/orderVlan/</guid>
      <description>

&lt;p&gt;There are a few steps in preparing to order a VLAN.&lt;/p&gt;

&lt;h2 id=&#34;find-the-dc-name&#34;&gt;Find the DC name&lt;/h2&gt;

&lt;p&gt;Lets start by finding the datacenter we want to order in.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Product_Package/571/getRegions.json?objectMask=mask\[description,keyname\]&amp;#39; | python -m json.tool&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep track of the KeyName of the location you want to order from.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;[{&amp;#34;description&amp;#34;: &amp;#34;HOU02 - Houston&amp;#34;, &amp;#34;keyname&amp;#34;: &amp;#34;HOUSTON02&amp;#34; }]&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;find-the-correct-router-optional&#34;&gt;Find the correct router (optional)&lt;/h2&gt;

&lt;p&gt;If you want the new VLAN to be behind a specific router, you need to find the ID of that router.&lt;/p&gt;

&lt;p&gt;To get a list of all the routers your account currently has VLANs on, you can use&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY &amp;#34;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/getRouters?objectMask=mask\[hostname,id\]&amp;#34; | python -m json.tool&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;[{ &amp;#34;hostname&amp;#34;: &amp;#34;bcr02a.hou02&amp;#34;, &amp;#34;id&amp;#34;: 112661 },]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have a Vyatta or other device you want this VLAN to be accessible to, you can find the Vyattas router and just use that.&lt;/p&gt;

&lt;p&gt;This will list all Gateway devices and their routers&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY &amp;#34;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/getNetworkGateways?objectMask=mask\[members\[hardware\[backendRouters\[hostname,id\],frontendRouters\[hostname,id\]\]\]\]&amp;#34; | python -m json.tool&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will list a specific gateway device and its routers&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY &amp;#34;https://api.softlayer.com/rest/v3.1/SoftLayer_Network_Gateway/172123/getObject?objectMask=mask\[members\[hardware\[backendRouters\[hostname,id\],frontendRouters\[hostname,id\]\]\]\]&amp;#34; | python -m json.tool&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which will output something like this. For Public VLANs, you will want the ID of the frontend router, for Private, the backend router. If there are 2 routers, use the id from the router labeled A&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;172123&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;houstonvpndemo&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;members&amp;#34;&lt;/span&gt;: [
        {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hardwareId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;149607&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;201323&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;networkGatewayId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;172123&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hardware&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;fullyQualifiedDomainName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;houstonvpndemo.example.com&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;149607&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;backendRouters&amp;#34;&lt;/span&gt;: [
                    {
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bcr02a.hou02&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;112661&lt;/span&gt;
                    },
                    {
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bcr02b.hou02&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;112660&lt;/span&gt;
                    }
                ],
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;frontendRouters&amp;#34;&lt;/span&gt;: [
                    {
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fcr02a.hou02&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;112561&lt;/span&gt;
                    },
                    {
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fcr02b.hou02&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;112560&lt;/span&gt;
                    }
                ]
            }
        }
        ]
    }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For this example, we are going to use &amp;ldquo;fcr02a.hou02&amp;rdquo;, or id=112561&lt;/p&gt;

&lt;h2 id=&#34;find-the-price-ids&#34;&gt;Find the price IDs&lt;/h2&gt;

&lt;p&gt;This is a several step process. The &lt;a href=&#34;https://softlayer-python.readthedocs.io/en/latest/cli/ordering.html&#34;&gt;SLCLI&lt;/a&gt; has a few helper functions for this. For this example though I will walk you through each REST call needed&lt;/p&gt;

&lt;h4 id=&#34;find-the-package&#34;&gt;Find the package&lt;/h4&gt;

&lt;p&gt;This will get all packages that are NOT bluemix services.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Product_Package/getAllObjects.json?objectMask=mask\[id,name,keyName,isActive,type\]&amp;amp;objectFilter=\{&amp;#34;type&amp;#34;:\{&amp;#34;keyName&amp;#34;:\{&amp;#34;operation&amp;#34;:&amp;#34;!=BLUEMIX_SERVICE&amp;#34;\}\}\}&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One of the results is going to be NETWORK_VLAN, which is what we want.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;571&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isActive&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;keyName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NETWORK_VLAN&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Network VLAN&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;495&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;keyName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ADDITIONAL_SERVICES_NETWORK_VLAN&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Network VLAN&amp;#34;&lt;/span&gt;
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since packages ids can change, it is a good idea to look these up in the future based on their keyName. &lt;em&gt;This object filter starts at keyName, the one above starts at type&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Product_Package/getAllObjects.json?objectMask=mask\[id,name,keyName,isActive,type\]&amp;amp;objectFilter=\{&amp;#34;keyName&amp;#34;:\{&amp;#34;operation&amp;#34;:&amp;#34;NETWORK_VLAN&amp;#34;\}\}&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;find-the-price-ids-1&#34;&gt;Find the price ids&lt;/h4&gt;

&lt;p&gt;From the above example, we know we need to get the items from package 571&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Product_Package/571/getItems.json?objectMask=mask\[id,keyName,itemCategory,prices\[id,locationGroupId\]\]&amp;#39; | python -m json.tool&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result should be similar to this. If a price has multiple ids, use the one iwth a locationGroupId = null&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;[
    {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1072&lt;/span&gt;, 
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;keyName&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PRIVATE_NETWORK_VLAN&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;itemCategory&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;network_vlan&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;113&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Network Vlan&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;quantityLimit&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sortOrder&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
        }
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prices&amp;#34;&lt;/span&gt;: [
            {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;locationGroupId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
            }
        ]
    },
    {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;583&lt;/span&gt;, 
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;keyName&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8_STATIC_PUBLIC_IP_ADDRESSES&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;itemCategory&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static_sec_ip_addresses&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Public Secondary Static IP Addresses&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;quantityLimit&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sortOrder&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;
        }
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prices&amp;#34;&lt;/span&gt;: [
            {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;36696&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;locationGroupId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
            }
        ]
    }
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;answer-the-ip-useage-questions&#34;&gt;Answer the IP useage questions&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Product_Item_Category/getQuestions/&#34;&gt;getQuestions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When ordering a new subnet of IP space, a few questions need to be answered for our records.&lt;/p&gt;

&lt;p&gt;ID 53 is from the above item category id.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Product_Item_Category/53/getQuestions.json&amp;#39; | python -m json.tool&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That will return a long list of questions you need to answer, which we will have to add when we make our order.&lt;/p&gt;

&lt;h2 id=&#34;placeing-the-order&#34;&gt;Placeing the order&lt;/h2&gt;

&lt;p&gt;Now that we have all the required information, we can build an order object.&lt;/p&gt;

&lt;h4 id=&#34;order-json&#34;&gt;order.json&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;parameters&amp;#34;&lt;/span&gt;: [
    {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HOUSTON02&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;routerId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;112661&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;packageId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;571&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prices&amp;#34;&lt;/span&gt;: [
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; 
        },
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;36696&lt;/span&gt; 
        }
      ],
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myNewVlan&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;complexType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoftLayer_Container_Product_Order_Network_Vlan&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;itemCategoryQuestionAnswers&amp;#34;&lt;/span&gt;: [
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static_sec_ip_addresses&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;questionId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;answer&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 
        },
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static_sec_ip_addresses&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;questionId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;answer&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; 
        },
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static_sec_ip_addresses&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;questionId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;answer&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;For more machines&amp;#34;&lt;/span&gt;
        },
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static_sec_ip_addresses&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;questionId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;answer&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Chris&amp;#34;&lt;/span&gt;
        },
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static_sec_ip_addresses&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;questionId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;answer&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Developer&amp;#34;&lt;/span&gt;
        },
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static_sec_ip_addresses&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;questionId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;answer&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chris@company.com&amp;#34;&lt;/span&gt;
        },
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static_sec_ip_addresses&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;questionId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;answer&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1234567890&amp;#34;&lt;/span&gt;  
        },
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;static_sec_ip_addresses&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;questionId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;,
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;answer&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;  
        }
      ]
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you create your order container file, then we should use &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Product_Order/verifyOrder/&#34;&gt;verifyOrder&lt;/a&gt; to make sure our data is ok.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY  --data @order.json  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Product_Order/verifyOrder&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you get back a json object, then it should be ok to order.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X POST  --data @order.json  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Product_Order/placeOrder&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If successful, you should get a large json object as a reciept when done. This will have your orderId on it, so you can look it up if needed.&lt;/p&gt;

&lt;p&gt;My order id was 23530337, so I will use the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Order/getObject/&#34;&gt;SoftLayer_Billing_Order&lt;/a&gt; setvice to view it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Billing_Order/23530337/getObject&amp;#39;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>API SERVICE DISRUPTION March 1, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180301/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180301/</guid>
      <description>

&lt;h1 id=&#34;span-style-color-red-api-service-disruption-march-1st-2018-span&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;API SERVICE DISRUPTION: March 1st, 2018&lt;/span&gt;&lt;/h1&gt;

&lt;p&gt;IBM Cloud will stop supporting TLS 1.0 and 1.1 on api.softlayer.com and api.service.softlayer.com&lt;/p&gt;

&lt;h2 id=&#34;what-is-happening&#34;&gt;What Is Happening?&lt;/h2&gt;

&lt;p&gt;On March 1, 2018 at 0900 UTC (0300 CDT) IBM Cloud Infrastructure will stop supporting TLS 1.0 and 1.1 encryption on api.softlayer.com and api.service.softlayer.com; these API endpoints will only support callers using TLS 1.2 encryption levels or higher.&lt;/p&gt;

&lt;h2 id=&#34;when-will-it-happen&#34;&gt;When Will It Happen?&lt;/h2&gt;

&lt;p&gt;On March 1, 2018 at 0900 UTC (0300 CDT) TLS 1.0 and TLS 1.1 will no longer be supported and TLS 1.2+ is required.&lt;/p&gt;

&lt;h2 id=&#34;who-will-this-affect&#34;&gt;Who Will This Affect?&lt;/h2&gt;

&lt;p&gt;Any users with code or services that reference the softlayer.com API endpoints for IBM Cloud Infrastructure services with encryption levels older than TLS 1.2.&lt;/p&gt;

&lt;p&gt;Confirming and Testing Upgrades to TLS 1.2 or Higher The enhanced security configuration is currently enforced on alternate endpoints. You can test your services against them now to ensure there will be no disruption once the primary endpoints receive the updated configuration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;api-dev.softlayer.com (instead of api.softlayer.com)&lt;/li&gt;
&lt;li&gt;api-dev.service.softlayer.com (instead of api.service.softlayer.com)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These alternative endpoints only use encryption levels TLS 1.2 or higher. Successfully testing your code and services against these alternative endpoints means your code and services will work properly on the transition date. These alternative endpoints will only be available until the transition date.&lt;/p&gt;

&lt;h2 id=&#34;what-do-i-do-next&#34;&gt;What Do I Do Next?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Test your service against the alternative endpoints listed above.&lt;/li&gt;
&lt;li&gt;If your code and service work as expected then update your production code to utilize TLS 1.2 in the current production environment and current production endpoints. Once that is complete no further action is required on your part.&lt;/li&gt;
&lt;li&gt;If your code or service fails change your code to utilize TLS 1.2 and test against the alternative endpoints and upon working properly update production.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;The current production environment supports TLS 1.0, TLS 1.1 and TLS 1.2.&lt;/li&gt;
&lt;li&gt;Once you have completed your TLS 1.2 testing against the temporary end points you can make your production code changes to utilize the production TLS 1.2 at any time prior to March 1, 2018.&lt;/li&gt;
&lt;li&gt;Once your production environment is utilizing TLS 1.2 you have no further action.&lt;/li&gt;
&lt;li&gt;If you make your production changes before March 1, 2018 you should see no impact on March 1, 2018 when TLS 1.0 and TLS 1.1 are no longer available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-will-happen-if-i-make-no-change&#34;&gt;What Will Happen If I Make No Change?&lt;/h2&gt;

&lt;p&gt;If you make no change and your code or services do not support encryption levels TLS 1.2 or higher, you will start to experience connection errors on the transition date. These errors may appear as &amp;ldquo;transport errors&amp;rdquo; and contain messages like SSLV3_ALERT_HANDSHAKE_FAILURE. Your code and services will no longer function until you upgrade it to support TLS 1.2 or higher.&lt;/p&gt;

&lt;p&gt;If My Code Starts Failing Do I Have Any Temporary Recourse?
If you start to experience connection errors on the transition date, the best course of action is to upgrade your code or services to support TLS 1.2 or higher. If you cannot do that immediately, there will be alternative endpoints provided temporarily to allow you to upgrade your code or services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;api-deprecated.softlayer.com (instead of api.softlayer.com)&lt;/li&gt;
&lt;li&gt;api-deprecated.service.softlayer.com (instead of api.service.softlayer.com)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These endpoints will become available on the transition date, and will continue to support TLS 1.0 and 1.1. You can change failing code or services to use these endpoints temporarily while you upgrade your systems to support TLS 1.2 or higher. These endpoints will only be available until March 30, 2018 to allow you to make this transition. You must upgrade all your systems and start using the standard API endpoints by March 1, 2018.&lt;/p&gt;

&lt;h2 id=&#34;why-are-we-making-this-change&#34;&gt;Why Are We Making This Change?&lt;/h2&gt;

&lt;p&gt;This is part of IBM&amp;rsquo;s commitment to offering a cloud that is secure to the core and in alignment with industry best practices for security and data privacy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Release Notes February 28, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180228/</link>
      <pubDate>Wed, 28 Feb 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180228/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;User should be get locked for 30 minutes when they enter invalid TOTP code more than 10 times.&lt;/li&gt;
&lt;li&gt;Remove forum link from Notification Messages&lt;/li&gt;
&lt;li&gt;Modifies translation text for the order checkout page to use &amp;lsquo;user data&amp;rsquo; instead of &amp;lsquo;metadata.&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Check if active user is parent of user being edited dutring addPortalPermission and removePortalPermission&lt;/li&gt;
&lt;li&gt;Support forced delete of scale groups regardless of status&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBootMode&#34;&gt;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBootMode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;updated validationRules for partitionName to allow for slashes.&lt;/li&gt;
&lt;li&gt;Improve performance of API calls to get order items.&lt;/li&gt;
&lt;li&gt;Add APIs to allow customer to specify preferred SSL ciphers for the load balancer&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed a bug where VLANs were not being properly reclained.&lt;/li&gt;
&lt;li&gt;Fixed a bug where some overage items would not be added to a bill.&lt;/li&gt;
&lt;li&gt;Keep company name synced with PaaS for linked accounts.&lt;/li&gt;
&lt;li&gt;Add storage chassis ordering capabilities for bare metal servers.\Improve validation of billing information on new customer orders.&lt;/li&gt;
&lt;li&gt;Validation for Object Storage orders with invalid datacenter names&lt;/li&gt;
&lt;li&gt;Fix bug with post provision script execution&lt;/li&gt;
&lt;li&gt;Fixed a bug where some snapshot creations would fail.&lt;/li&gt;
&lt;li&gt;Fixed an issue where Replicant volumes missed being updated on very rare occasion.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: February 16, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180216/</link>
      <pubDate>Fri, 16 Feb 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180216/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Improvement to verbiage shown for servers with active billing for an inactive package.&lt;/li&gt;
&lt;li&gt;GPU Flavor prices were not factoring the price of the GPU.&lt;/li&gt;
&lt;li&gt;Fixed an issue where the master user could set themselves as &amp;ldquo;VPN_ONLY&amp;rdquo; user.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix Reloads being blocked when a user suppresses the email for RELOAD_COMPLETE&lt;/li&gt;
&lt;li&gt;Fix Micron Hard Drive Storage Group Member&amp;rsquo;s Grow Flag&lt;/li&gt;
&lt;li&gt;Update automated messaging update on Data Transfer Request tickets&lt;/li&gt;
&lt;li&gt;Add dal10 to the list of data centers supporting security groups.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>API Reference</title>
      <link>https://softlayer.github.io/reference/softlayerapi/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/reference/softlayerapi/</guid>
      <description>&lt;p&gt;In effort to extend SoftLayers dedication to automation to our customers and partners, we have provided this set of APIs to interact with all of our products. The APIs listed below will be your programmatic access point for integrate with your SoftLayer services. Our customer portal was built on top of the same API set we provide to our customers and is a great example of the tasks which can be performed.&lt;/p&gt;

&lt;p&gt;For any issues with the documentation here, please create an issue here: &lt;a href=&#34;https://github.com/softlayer/softlayer.github.io&#34;&gt;https://github.com/softlayer/softlayer.github.io&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SoftLayer ObjectStorage API</title>
      <link>https://softlayer.github.io/reference/objectstorageapi/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/reference/objectstorageapi/</guid>
      <description>&lt;p&gt;SoftLayer Object Storage is built from &lt;a href=&#34;https://docs.openstack.org/swift/latest/&#34;&gt;Open Stack Swift&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: February 7, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180207/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180207/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Allow customers to suppress order emails&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Exception message should mention &amp;lsquo;.. to change a user link&amp;rsquo; instead of &amp;lsquo;to edit a user&amp;rsquo; when resetOpenIdConnectLink is called&lt;/li&gt;
&lt;li&gt;Exception message should mention &amp;lsquo;Access Denied. Only the Master user..&amp;rsquo; instead of &amp;lsquo;Account 1234 is authenticated by IBMid&amp;hellip;&amp;rsquo; when resetOpenIdConnectLink is called for subuser&lt;/li&gt;
&lt;li&gt;Validator added for bare metal servers orders that use the userData field, the allowed length is 2000 characters.&lt;/li&gt;
&lt;li&gt;Update getCreateObjectOptions to return Spot options&lt;/li&gt;
&lt;li&gt;Child user is now unable to delete his/her own Phone Factor authentication using the APIs&lt;/li&gt;
&lt;li&gt;A bootMode property is added to the SoftLayer_Container_Product_Order_Virtual_Guest class to allow customers to specify the mode the VSI should be booted in. A bootMode property is also added to SoftLayer_Virtual_Guest_SupplementalCreateObjectOptions so that the boot mode can be specified during when calling SoftLayer_Virtual_Guest::createObject. The data will be verified and the customer informed if they have submitted an invalid boot mode.&lt;/li&gt;
&lt;li&gt;Added the ability to getAllObjects on SoftLayer_Network_Storage_Allowed_Host using objectFilters and objectMask&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue where fixed configuration preset orders are verified but the preset is not entirely available yet provides more information about why it is failing to verify the order.&lt;/li&gt;
&lt;li&gt;Enable the Security Group feature in Dal01, Lon06, and Sea01.&lt;/li&gt;
&lt;li&gt;Support new VSI type called Spot&lt;/li&gt;
&lt;li&gt;Improve the audit log functionality of security groups.&lt;/li&gt;
&lt;li&gt;Modified provisioning to use boot mode provided by customer.&lt;/li&gt;
&lt;li&gt;When downgrading the CPU on a Guest with a Dedicated Host, the Guest Type is no longer overwritten as Public Guest&lt;/li&gt;
&lt;li&gt;Fix Storage As A Service orders validation which was previously accepting orders that did not conform to product business rules&lt;/li&gt;
&lt;li&gt;Fix bug that would delay the completion of an hourly volume reclaim process because it would create an unnecessary process instance.&lt;/li&gt;
&lt;li&gt;Adds complex password support for EVault. New passwords will be 12 characters long and contain special characters&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>