<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/index.xml</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Tue, 29 Nov 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Order a Netscaler</title>
      <link>https://softlayer.github.io/python/orderNetscaler/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/orderNetscaler/</guid>
      <description>&lt;pre&gt;&lt;code&gt;import SoftLayer
from pprint import pprint as pp

class orderNetscaler():

    def __init__(self):

        self.client = SoftLayer.Client()

    def main(self):

        productOrder = {
        &#39;orderContainers&#39;: [
            {&amp;quot;hardware&amp;quot;: [{
                &amp;quot;primaryBackendNetworkComponent&amp;quot;: {
                    # REPLACE THIS
                    &amp;quot;networkVlanId&amp;quot;: 1234
                },
                &amp;quot;primaryNetworkComponent&amp;quot;: {
                    # REPLACE THIS
                    &amp;quot;networkVlanId&amp;quot;: 456
                }
            }],
            # REPLACE THIS with your location
            &amp;quot;location&amp;quot;: &amp;quot;DALLAS09&amp;quot;,
            &amp;quot;packageId&amp;quot;: 192,
            &amp;quot;quantity&amp;quot;: 1,
            # Price IDS for Netscaler and 2 IPs
            &amp;quot;prices&amp;quot;: [
                {&amp;quot;id&amp;quot;: 44964}, 
                {&amp;quot;id&amp;quot;: 17238}
            ]
        }]
        }
        order = self.client[&#39;Product_Order&#39;].placeOrder(productOrder)
        pp(order)

if __name__ == &amp;quot;__main__&amp;quot;:
    main = example()
    main.main()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get a list of Virtual Guests and Bare Metal servers per Pod in a Datacenter</title>
      <link>https://softlayer.github.io/python/listByPod/</link>
      <pubDate>Fri, 18 Nov 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/listByPod/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
import pprint
from prettytable import PrettyTable

client = SoftLayer.Client()

# Define datacenter e.g: dal05, dal09, ams01, sao01, etc
datacenter = &#39;dal10&#39;

# Declare a new API service objects for SoftLayer_Account
accountClient = client[&#39;SoftLayer_Account&#39;]

# Define objectMask and objectFilters to get additional information
objectMask = &#39;mask[primaryNetworkComponent[router[hostname]]]&#39;
objectFilterBms = {&amp;quot;hardware&amp;quot;: {&amp;quot;datacenter&amp;quot;: {&amp;quot;name&amp;quot;: {&amp;quot;operation&amp;quot;: datacenter}}}}
objectFilterVsi = {&amp;quot;virtualGuests&amp;quot;: {&amp;quot;datacenter&amp;quot;: {&amp;quot;name&amp;quot;: {&amp;quot;operation&amp;quot;: datacenter}}}}

# Define array to add pods
pods = []

try:
    # Getting servers and vsis
    servers = accountClient.getHardware(mask=objectMask, filter=objectFilterBms)
    vsis = accountClient.getVirtualGuests(mask=objectMask, filter=objectFilterVsi)

    # Getting pods from servers
    for server in servers:
        if server[&#39;primaryNetworkComponent&#39;][&#39;router&#39;][&#39;hostname&#39;] not in pods:
            pods.append(server[&#39;primaryNetworkComponent&#39;][&#39;router&#39;][&#39;hostname&#39;])
    for vsi in vsis:
        if vsi[&#39;primaryNetworkComponent&#39;][&#39;router&#39;][&#39;hostname&#39;] not in pods:
            pods.append(vsi[&#39;primaryNetworkComponent&#39;][&#39;router&#39;][&#39;hostname&#39;])
    # Printing servers according pods
    for pod in pods:
        table = []
        tableDetails = PrettyTable([&#39;POD&#39;, &#39;Server Id&#39;, &#39;Hostname&#39;, &#39;Domain&#39;, &#39;Type&#39;])
        print(&amp;quot;POD: %s &amp;quot; % pod)
        for server in servers:
            if pod in server[&#39;primaryNetworkComponent&#39;][&#39;router&#39;][&#39;hostname&#39;]:
                tableDetails.add_row([pod, server[&#39;id&#39;], server[&#39;hostname&#39;], server[&#39;domain&#39;], &#39;Hardware&#39;])
        for vsi in vsis:
            if pod in vsi[&#39;primaryNetworkComponent&#39;][&#39;router&#39;][&#39;hostname&#39;]:
                tableDetails.add_row([pod, vsi[&#39;id&#39;], vsi[&#39;hostname&#39;], vsi[&#39;domain&#39;], &#39;Virtual Guest&#39;])
        print(tableDetails)

except SoftLayer.SoftLayerAPIError as e:
    print(&amp;quot;Error. &amp;quot; % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;POD: fcr01a.dal10
+--------------+-----------+-----------------+------------------------------+---------------+
|     POD      | Server Id |     Hostname    |            Domain            |      Type     |
+--------------+-----------+-----------------+------------------------------+---------------+
| fcr01a.dal10 |  xxxxxxx  | foundationtest0 |         vmonic.local         |    Hardware   |
| fcr01a.dal10 |  xxxxxxx  | foundationtest1 |         vmonic.local         |    Hardware   |
| fcr01a.dal10 |  xxxxxxx  | foundationtest2 |         vmonic.local         |    Hardware   |
| fcr01a.dal10 |  xxxxxxx  | foundationtest3 |         vmonic.local         |    Hardware   |
| fcr01a.dal10 |  xxxxxxx  |   sethjannygpu  |         example.com          |    Hardware   |
| fcr01a.dal10 |  xxxxxxx  |  vayatta-tester |         example.com          |    Hardware   |
| fcr01a.dal10 |  xxxxxxx  |  foundationtVW  | foundationtest.vsphere.local | Virtual Guest |
| fcr01a.dal10 |  xxxxxxx  |     jrh-oel     |         example.com          | Virtual Guest |
| fcr01a.dal10 |  xxxxxxx  |   sa.blmx.cli   |         example.com          | Virtual Guest |
+--------------+-----------+-----------------+------------------------------+---------------+
POD: fcr02a.dal10
+--------------+-----------+--------------+--------------------+---------------+
|     POD      | Server Id |   Hostname   |       Domain       |      Type     |
+--------------+-----------+--------------+--------------------+---------------+
| fcr02a.dal10 |  xxxxxxx  |  jrh-quanta  |      example.com   |    Hardware   |
| fcr02a.dal10 |  xxxxxxx  | msebastian1  |      example.com   | Virtual Guest |
| fcr02a.dal10 |  xxxxxxx  |  privdal10   |      example.com   | Virtual Guest |
| fcr02a.dal10 |  xxxxxxx  |   pubdal10   |      example.com   | Virtual Guest |
| fcr02a.dal10 |  xxxxxxx  | userdatatest |      example.com   | Virtual Guest |
+--------------+-----------+--------------+--------------------+---------------+
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: November 14, 2016</title>
      <link>https://softlayer.github.io/release_notes/20161114/</link>
      <pubDate>Mon, 14 Nov 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20161114/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Corrected an issue on the Bluemix order forms where the order form content appear in a different language based on the www.softlayer.com language cookie. The order forms are set to English until all language translations have been completed.&lt;/li&gt;
&lt;li&gt;Increased the space allowed for addresses when making payments via PayPal. The shorter space was causing PayPal transactions to fail when an account used a bunch of unicode characters.&lt;/li&gt;
&lt;li&gt;Fixed an issue where users might be immediately logged out after navigating to the order forms due to a non-public API call.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: November 8, 2016</title>
      <link>https://softlayer.github.io/release_notes/20161108/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20161108/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Improved the ordering form performance when provisioning (Beta) Object Storage offerings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Pushed code that would stop the sending of order completed and approved emails for Bluemix services on Linked Accounts.&lt;/li&gt;
&lt;li&gt;Resolved an issue that was causing Guest disk billing items to have incorrect category codes after an OS reload order was placed.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Creating a Virtual Guest</title>
      <link>https://softlayer.github.io/go/createVsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/go/createVsi/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;
package main

import (
    &amp;quot;fmt&amp;quot;

    &amp;quot;github.com/softlayer/softlayer-go/datatypes&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/services&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/session&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/sl&amp;quot;
)

func main() {

          sess := session.New()
          doCreateVMTest(sess)
}


func doCreateVMTest(sess *session.Session) {
    service := services.GetVirtualGuestService(sess)

    // Create a Virtual_Guest instance as a template
    vGuestTemplate := datatypes.Virtual_Guest{}

    //Set Creation values - use helpers from the sl package to set pointer values
    vGuestTemplate.Hostname = sl.String(&amp;quot;sample&amp;quot;)
    vGuestTemplate.Domain = sl.String(&amp;quot;example.com&amp;quot;)
    vGuestTemplate.MaxMemory = sl.Int(4096)
    vGuestTemplate.StartCpus = sl.Int(1)
    vGuestTemplate.Datacenter = &amp;amp;datatypes.Location{Name: sl.String(&amp;quot;wdc01&amp;quot;)}
    vGuestTemplate.OperatingSystemReferenceCode = sl.String(&amp;quot;UBUNTU_LATEST&amp;quot;)
    vGuestTemplate.LocalDiskFlag = sl.Bool(true)

    vGuest, err := service.Mask(&amp;quot;id;domain&amp;quot;).CreateObject(&amp;amp;vGuestTemplate)
    if err != nil {
        fmt.Printf(&amp;quot;%s\n&amp;quot;, err)
        return
    } else {
        fmt.Printf(&amp;quot;\nNew Virtual Guest created with ID %d\n&amp;quot;, *vGuest.Id)
        fmt.Printf(&amp;quot;Domain: %s\n&amp;quot;, *vGuest.Domain)
    }
}

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Listing Virtual Guests</title>
      <link>https://softlayer.github.io/go/listvsis/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/go/listvsis/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
    &amp;quot;fmt&amp;quot;

    &amp;quot;github.com/softlayer/softlayer-go/services&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/session&amp;quot;
    &amp;quot;github.com/softlayer/softlayer-go/sl&amp;quot;
)

func main() {

          sess := session.New()
          doListAccountVMsTest(sess)
}

func doListAccountVMsTest(sess *session.Session) {
    // Get the Account service
    service := services.GetAccountService(sess)

    // List VMs
    vms, err := service.Mask(&amp;quot;id;hostname;domain&amp;quot;).Limit(10).GetVirtualGuests()
    if err != nil {
        fmt.Printf(&amp;quot;Error retrieving Virtual Guests from Account: %s\n&amp;quot;, err)
        return
    } else {
        fmt.Println(&amp;quot;VMs under Account:&amp;quot;)
    }

    for _, vm := range vms {
        fmt.Printf(&amp;quot;\t[%d]%s.%s\n&amp;quot;, *vm.Id, *vm.Hostname, *vm.Domain)
    }
}

func handleError(err error) {
    apiErr := err.(sl.Error)
    fmt.Printf(
        &amp;quot;Exception: %s\nMessage: %s\nHTTP Status Code: %d\n&amp;quot;,
        apiErr.Exception,
        apiErr.Message,
        apiErr.StatusCode)
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://softlayer.github.io/python/migratevsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/migratevsi/</guid>
      <description>&lt;p&gt;You can use the following &lt;a href=&#34;https://softlayer.github.io/python/list_packages/&#34;&gt;python example&lt;/a&gt; to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
import json

# The package for Virtual Guests
packageId = 46

# Our exising VSI ID
virtualGuests = [
    {
        &amp;quot;id&amp;quot;:25367125
    }
]

# The price item id for a 25GB Local Primary Drive.
prices = [
   {
     &amp;quot;id&amp;quot;:13899,
     &amp;quot;categories&amp;quot;:[
        {
            &amp;quot;categoryCode&amp;quot;:&amp;quot;guest_disk0&amp;quot;,
            &amp;quot;id&amp;quot;:81,
            &amp;quot;name&amp;quot;:&amp;quot;First Disk&amp;quot;
        }
    ]
   }
]

# Maintenance Window time. The migration requires downtime
properties = [
    {
        &amp;quot;name&amp;quot;:&amp;quot;MAINTENANCE_WINDOW&amp;quot;,
        &amp;quot;value&amp;quot;:&amp;quot;now&amp;quot;
    }
]

# Declare the API client.
client = SoftLayer.Client()
productOrderService = client[&#39;SoftLayer_Product_Order&#39;]

# The parameters needed for the migration order
orderData = {
   &amp;quot;complexType&amp;quot;: &amp;quot;SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade&amp;quot;,
   &amp;quot;packageId&amp;quot;: packageId,
   &amp;quot;prices&amp;quot;: prices,
   &amp;quot;properties&amp;quot;: properties,
   &amp;quot;virtualGuests&amp;quot; : virtualGuests,
}

try:
   # verifyOrder() will check your order for errors. Replace this with a call to
   # placeOrder() when you&#39;re ready to order. Both calls return a receipt object
   # that you can use for your records.
   response = productOrderService.verifyOrder(orderData)
   print(json.dumps(response, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))
except SoftLayer.SoftLayerAPIError as e:
   # If there was an error returned from the SoftLayer API then bomb out with the
   # error message.
   print(&amp;quot;Unable to place the order. faultCode=%s, faultString=%s&amp;quot; % (e.faultCode, e.faultString))


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://softlayer.github.io/ruby/migrateVsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/migrateVsi/</guid>
      <description>&lt;p&gt;You can use the following &lt;a href=&#34;https://softlayer.github.io/ruby/list_packages/&#34;&gt;ruby example&lt;/a&gt; to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;
require &#39;softlayer_api&#39;
require &#39;pp&#39;

softlayer_client = SoftLayer::Client.new(:timeout =&amp;gt; 120)
client = softlayer_client.service_named(&#39;Product_Order&#39;)

# The package for Virtual Guests
packageId = 46

# The price item id for a 25GB Local Primary Drive.
prices = [
{
  &#39;id&#39; =&amp;gt; 13899,
    &#39;categories&#39; =&amp;gt; [
       {
           &#39;categoryCode&#39; =&amp;gt; &#39;guest_disk0&#39;,
           &#39;id&#39; =&amp;gt; 81,
           &#39;name&#39; =&amp;gt; &#39;First Disk&#39;
       }
   ]
  }
]

# Maintenance Window time. The migration requires downtime
properties = [
  {
      &#39;name&#39; =&amp;gt; &#39;MAINTENANCE_WINDOW&#39;,
      &#39;value&#39; =&amp;gt; &#39;now&#39;
  }
]

productOrder = {
  &#39;complexType&#39; =&amp;gt; &#39;SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade&#39;,
  &#39;packageId&#39; =&amp;gt; packageId,
  &#39;prices&#39; =&amp;gt; prices,
  &#39;properties&#39; =&amp;gt; properties,
  &#39;virtualGuests&#39; =&amp;gt; [ {&#39;id&#39; =&amp;gt; &#39;25367125&#39;} ]
}

begin
 # verifyOrder() will check your order for errors. Replace this with a call to
 # placeOrder() when you&#39;re ready to order. Both calls return a receipt object
 # that you can use for your records.
 #
 # Once your order is placed it&#39;ll go through SoftLayer&#39;s provisioning process.

 receipt = client.verifyOrder(productOrder)
 puts receipt
rescue Exception =&amp;gt; exception
 puts &amp;quot;There is an error in the order: #{exception}&amp;quot;
end
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://softlayer.github.io/rest/migrateVsiDisk/</link>
      <pubDate>Fri, 04 Nov 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/migrateVsiDisk/</guid>
      <description>

&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder/&#34;&gt;&lt;code&gt;SoftLayer_Product_Order::placeOrder()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Product_Order/verifyOrder`&lt;/p&gt;

&lt;h4 id=&#34;getting-the-proper-priceid&#34;&gt;Getting the proper priceId&lt;/h4&gt;

&lt;p&gt;You can use the following &lt;a href=&#34;https://softlayer.github.io/python/list_packages/&#34;&gt;python example&lt;/a&gt; to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from &lt;code&gt;main.getPackage(126)&lt;/code&gt; to &lt;code&gt;main.getPackage(46)&lt;/code&gt;. The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -X POST --data @migrate.json
https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/verifyOrder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Input JSON:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{  
   &amp;quot;parameters&amp;quot;:[  
      {  
         &amp;quot;complexType&amp;quot;:&amp;quot;SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade&amp;quot;,
         &amp;quot;packageId&amp;quot;:46,
         &amp;quot;prices&amp;quot;:[  
            {  
               &amp;quot;id&amp;quot;:13899,
               &amp;quot;categories&amp;quot;:[  
                  {  
                     &amp;quot;categoryCode&amp;quot;:&amp;quot;guest_disk0&amp;quot;,
                     &amp;quot;id&amp;quot;:81,
                     &amp;quot;name&amp;quot;:&amp;quot;First Disk&amp;quot;
                  }
               ]
            }
         ],
         &amp;quot;properties&amp;quot;:[  
            {  
               &amp;quot;name&amp;quot;:&amp;quot;MAINTENANCE_WINDOW&amp;quot;,
               &amp;quot;value&amp;quot;:&amp;quot;now&amp;quot;
            }
         ],
         &amp;quot;virtualGuests&amp;quot;:[  
            {  
               &amp;quot;id&amp;quot;:25367125
            }
         ]
      }
   ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: October 25, 2016</title>
      <link>https://softlayer.github.io/release_notes/20161024/</link>
      <pubDate>Tue, 25 Oct 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20161024/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Changed portal layout and color scheme to match the new IBM Bluemix branding.&lt;/li&gt;
&lt;li&gt;Fixed an issue where SoftLayer tiered support customers could create a ticket with severity level higher than 4.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Added the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/getFileBlockEncryptedLocations&#34;&gt;getFileBlockEncryptedLocations&lt;/a&gt; method to the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage&#34;&gt;SoftLayer_Network_Storage&lt;/a&gt; service. This method can be used to get a list of SoftLayer_Location objects corresponding to datacenters which support Encryption at Rest for File and Block Storage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;When a user&amp;rsquo;s password expired, we are no longer automatically sending the password reset email. Instead, the user will be informed that their password has expired and that they need to use the Reset Password link on the login page to change it.&lt;/li&gt;
&lt;li&gt;Updated automatically generated customer emails to reflect new branding.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>IBM Bluemix for AWS professionals</title>
      <link>https://softlayer.github.io/tools/compareorator/</link>
      <pubDate>Fri, 21 Oct 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/tools/compareorator/</guid>
      <description>

&lt;h2 id=&#34;ibm-bluemix-for-aws-professionals&#34;&gt;IBM Bluemix for AWS professionals&lt;/h2&gt;

&lt;p&gt;This article will hopefully help anyone coming from the AWS ecosystem translate their workloads into IBM Bluemix.&lt;/p&gt;

&lt;h2 id=&#34;basic-concepts&#34;&gt;Basic Concepts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://console.ng.bluemix.net/docs/overview/whatisbluemix.html#bluemixoverview&#34;&gt;Bluemix&lt;/a&gt; has three main silos. &lt;a href=&#34;https://console.ng.bluemix.net/catalog/?category=infrastructure&#34;&gt;Infrastructure&lt;/a&gt; , &lt;a href=&#34;https://console.ng.bluemix.net/catalog/?category=applications&#34;&gt;Applications&lt;/a&gt; , and &lt;a href=&#34;https://console.ng.bluemix.net/catalog/?category=services&#34;&gt;Services&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Infrastructure&lt;/em&gt; is built on &lt;a href=&#34;htts://www.softlayer.com&#34;&gt;SoftLayer&lt;/a&gt; and is available in over 30 &lt;a href=&#34;http://www.softlayer.com/data-centers&#34;&gt;SoftLayer Datacenters&lt;/a&gt; across the world. All of which are interconnect with our unmetered &lt;a href=&#34;http://www.softlayer.com/network&#34;&gt;private network&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Applications&lt;/em&gt; can be either &lt;a href=&#34;https://www.ibm.com/cloud-computing/bluemix/runtimes&#34;&gt;Cloud Foundry&lt;/a&gt;, &lt;a href=&#34;https://console.ng.bluemix.net/docs/containers/container_index.html&#34;&gt;Docker&lt;/a&gt;, or &lt;a href=&#34;https://console.ng.bluemix.net/openwhisk/&#34;&gt;Open Whisk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/?category=services&#34;&gt;&lt;em&gt;Services&lt;/em&gt;&lt;/a&gt; contain a huge catalog of pay as you go addons to your application, such as Watson, Databases and Analytics to name a few.&lt;/p&gt;

&lt;h2 id=&#34;network-http-www-softlayer-com-network&#34;&gt;&lt;a href=&#34;http://www.softlayer.com/network&#34;&gt;Network&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;On Bluemix Infrastructure (SoftLayer) you are only charged for bandwidth that leaves your account. Incoming traffic, and everything on the private network is unmetered, allowing you to take full advantage of our worldwide private network for shipping data between locations. For more information on bandwidth costs see our &lt;a href=&#34;http://www.softlayer.com/info/pricing&#34;&gt;pricing page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&#34;http://blog.softlayer.com/2013/deconstructing-softlayers-three-tiered-network&#34;&gt;Deconstructing SoftLayer&amp;rsquo;s Three Tiered Network&lt;/a&gt; for some more information on how it all works.&lt;/p&gt;

&lt;h2 id=&#34;bare-metal-http-www-softlayer-com-bare-metal-servers&#34;&gt;&lt;a href=&#34;http://www.softlayer.com/bare-metal-servers&#34;&gt;Bare Metal&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Standard-configuration servers available within 20-30 minutes, and fully customizable servers available within 4 hours. &lt;a href=&#34;http://www.softlayer.com/power-servers&#34;&gt;Power8 servers&lt;/a&gt; are available as well, built on IBM OpenPOWER architecture.&lt;/p&gt;

&lt;h2 id=&#34;watson-https-www-ibm-com-cloud-computing-bluemix-watson&#34;&gt;&lt;a href=&#34;https://www.ibm.com/cloud-computing/bluemix/watson&#34;&gt;Watson&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;With Watson on Bluemix, you have access to the widest range of cognitive technologies available today to quickly and securely build smart applications. From analyzing images and video to understanding sentiment, keywords and entities from text, our Watson services enable cognitive within your applications.&lt;/p&gt;

&lt;h2 id=&#34;api&#34;&gt;API&lt;/h2&gt;

&lt;p&gt;Everything in Bluemix can be managed with an API, for infrastructure this is done through the &lt;a href=&#34;http://sldn.softlayer.com/&#34;&gt;SoftLayer API&lt;/a&gt; and Bluemix Apps and Services can be managed through the &lt;a href=&#34;https://console.ng.bluemix.net/docs/cli/reference/cfcommands/index.html&#34;&gt;Bluemix CLI&lt;/a&gt; which is an implementation of the &lt;a href=&#34;https://apidocs.cloudfoundry.org/247/&#34;&gt;Cloud Foundry API&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;pricing-https-www-ibm-com-cloud-computing-bluemix-pricing&#34;&gt;&lt;a href=&#34;https://www.ibm.com/cloud-computing/bluemix/pricing&#34;&gt;Pricing&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Most Bluemix services have a very aggressive free trail / tier to get you started, and transparent pricing plans for when you need to scale up. More information on &lt;a href=&#34;https://console.ng.bluemix.net/docs/pricing/index.html#pricing&#34;&gt;Bluemix Pricing&lt;/a&gt; and &lt;a href=&#34;http://www.softlayer.com/tco/&#34;&gt;SoftLayer Pricing Calculator&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;What follows is a rough comaprison between Bluemix, AWS and Azure. Not all of these services will line up 1:1, but most of them are fairly close. Of course, if you have questions about anything in here, please &lt;a href=&#34;https://www.ibm.com/cloud-computing/bluemix/contact-us&#34;&gt;Contact Us&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;infrastructure&#34;&gt;Infrastructure&lt;/h2&gt;

&lt;h3 id=&#34;compute&#34;&gt;Compute&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/virtual-server-hourly/&#34;&gt;Virtual Server&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EC2&lt;/td&gt;
&lt;td&gt;Virtual Machines&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/bare-metal-server-monthly/&#34;&gt;Bare Metal Server&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.softlayer.com/gpu&#34;&gt;nVidia GPU&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EC2 Elastic GPUs&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.ibm.com/cloud-computing/solutions/ibm-vmware/console/&#34;&gt;Vmware Solution&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;VMware on AWS Cloud&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;storage&#34;&gt;Storage&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/block-storage---performance/&#34;&gt;Block Storage&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Elastic Block Storage&lt;/td&gt;
&lt;td&gt;Page Blog Premium Storage&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/file-storage---performance/&#34;&gt;File Storage&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Elastic File System&lt;/td&gt;
&lt;td&gt;File Storage&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/content-delivery-network/&#34;&gt;Content Delivery Network&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;CloudFront&lt;/td&gt;
&lt;td&gt;Content Delivery Network&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/ibm-cloud-object-storage--s3-api-open-trial/&#34;&gt;IBM Cloud Object Storage&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;S3&lt;/td&gt;
&lt;td&gt;Blob Storage&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/object-storage-standard-regional-swift-api/&#34;&gt;Swift Object Storage&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;S3&lt;/td&gt;
&lt;td&gt;Blob Storage&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;network&#34;&gt;Network&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/local-load-balancing/&#34;&gt;Local Load Balancing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Elastic Load Balancing&lt;/td&gt;
&lt;td&gt;Load balancer Application Gateway&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/citrix-netscaler-vpx-dedicated-load-balancer/&#34;&gt;Dedicated Netscaler VPX/MPX&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/domain-name-service/&#34;&gt;DNS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Route 53&lt;/td&gt;
&lt;td&gt;DNS (preview) traffic manager&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/direct-link-cloud-exchange/&#34;&gt;Direct Link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Direct Connect&lt;/td&gt;
&lt;td&gt;Express Route&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/vyatta-gateway-appliance/&#34;&gt;Vyatta Gateway Appliance&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/vlan-spanning/&#34;&gt;Private Network &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Virtual Private Cloud&lt;/td&gt;
&lt;td&gt;Virtual Network&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;network-security&#34;&gt;Network Security&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/fortigate-security-appliance/&#34;&gt;Fortigate Security Appliance&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/hardware-firewall-dedicated/&#34;&gt;Dedicated Hardware Firewall&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/fortigate-security-appliance/&#34;&gt;Hardware Firewall&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web Application Firewall&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/infrastructure/ssl-certificates/&#34;&gt;SSL Certificates&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;applications&#34;&gt;Applications&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/?category=runtimes&#34;&gt;Cloud Foundry&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Elastic Beanstalk&lt;/td&gt;
&lt;td&gt;Web Apps Cloud Services&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/docs/containers/container_index.html&#34;&gt;Docker&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EC2 Container Service/ Blox&lt;/td&gt;
&lt;td&gt;Container Service&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/openwhisk/&#34;&gt;OpenWhisk &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Lambda&lt;/td&gt;
&lt;td&gt;Functions Web Jobs Logic Apps&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;mobile&#34;&gt;Mobile&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/mobile-foundation/&#34;&gt;Mobile Foundation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mobile Hub&lt;/td&gt;
&lt;td&gt;Mobile Apps&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/mobile-analytics/&#34;&gt;Mobile Analytics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mobile Analytics&lt;/td&gt;
&lt;td&gt;Mobile Engagement&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/mobile-application-content-manager/&#34;&gt;Mobile Application Content Manager&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/mobile-client-access/&#34;&gt;Mobile Client Access&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/mobile-quality-assurance/&#34;&gt;Mobile Quality Assurance&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/push-notifications/&#34;&gt;Push Notifications&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Simple Notification Service&lt;/td&gt;
&lt;td&gt;Notification Hubs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;services&#34;&gt;Services&lt;/h2&gt;

&lt;h3 id=&#34;data-and-analytics&#34;&gt;Data and Analytics&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/apache-spark/&#34;&gt;Apache Spark &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/biginsights-for-apache-hadoop/&#34;&gt;BigInsights for Hadoop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/cloudant-nosql-db/&#34;&gt;Cloudant NoSQL &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;DynamoDB&lt;/td&gt;
&lt;td&gt;DocumentDB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/compose-for-elasticsearch/&#34;&gt;Compose Elasticsearch &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Elasticsearch Service&lt;/td&gt;
&lt;td&gt;Search&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/compose-for-etcd/&#34;&gt;Compose etcd&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/compose-for-mongodb/&#34;&gt;Compose MongoDB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;DynamoDB&lt;/td&gt;
&lt;td&gt;DocumentDB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/compose-for-postgresql/&#34;&gt;Compose PostgreSQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;RDS&lt;/td&gt;
&lt;td&gt;SQL Database&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/compose-for-rabbitmq/&#34;&gt;Compose RabbitMQ &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Simple Queue Service&lt;/td&gt;
&lt;td&gt;Queue Storage&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/compose-for-redis/&#34;&gt;Compose Redis&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ElastiCache&lt;/td&gt;
&lt;td&gt;Azure Redis Cache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/compose-for-rethinkdb/&#34;&gt;Compose RethinkDB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/dashdb/&#34;&gt;dashDB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Redshift&lt;/td&gt;
&lt;td&gt;SQL Data Warehouse (Preview)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/dashdb-for-transactions-sql-database/&#34;&gt;dashDB for Transactions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Redshift&lt;/td&gt;
&lt;td&gt;SQL Data Warehouse (Preview)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/data-connect/&#34;&gt;Data connect&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/decision-optimization/&#34;&gt;Decision Optimization&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/geospatial-analytics/&#34;&gt;Geospatial Analytics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/ibm-db2-on-cloud/&#34;&gt;IBM DB2 CLOUD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/ibm-graph/&#34;&gt;IBM Graph&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/ibm-master-data-management-on-cloud/&#34;&gt;IBM Master Data Management&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/ibm-master-data-management-on-cloud/&#34;&gt;IBM Watson Machine Learning&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Machine Learning&lt;/td&gt;
&lt;td&gt;Machine Learning&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/information-server-on-cloud/&#34;&gt;Information Server&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/informix-on-cloud/&#34;&gt;Informix&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/insights-for-twitter/&#34;&gt;Insights for Twitter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/lift/&#34;&gt;Lift&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Data Pipeline&lt;/td&gt;
&lt;td&gt;Data Factory&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/streaming-analytics/&#34;&gt;Streaming Analyics &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Kinesis Analytics (Preview)&lt;/td&gt;
&lt;td&gt;Data Lake Analytics (Preview)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/weather-company-data/&#34;&gt;Weather Company Data&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/api-connect/&#34;&gt;API Connect&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;API Gateway&lt;/td&gt;
&lt;td&gt;API Management&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;watson&#34;&gt;Watson&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/alchemyapi/&#34;&gt;AlchemyAPI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/conversation/&#34;&gt;Conversation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Lex&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/document-conversion/&#34;&gt;Document Conversion&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/language-translator/&#34;&gt;Language Translator&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/natural-language-classifier/&#34;&gt;Natural Language Classifier&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/personality-insights/&#34;&gt;Personality Insights &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/retrieve-and-rank/&#34;&gt;Retrieve and Rank&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/speech-to-text/&#34;&gt;Speech to Text&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/text-to-speech/&#34;&gt;Text to Speech&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Polly&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/tone-analyzer/&#34;&gt;Tone Analyzer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/tradeoff-analytics/&#34;&gt;Tradeoff Analytics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/visual-recognition/&#34;&gt;Visual Recognition&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Rekognition&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;internet-of-things-iot&#34;&gt;Internet of Things (IoT)&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/internet-of-things-platform/&#34;&gt;IoT Platform &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;IoT (Preview)/ Kinesis Firehose&lt;/td&gt;
&lt;td&gt;IoT Hub / Event Hubs&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/context-mapping/&#34;&gt;Context Mapping&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/driver-behavior/&#34;&gt; Driver Behavior&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/iot-for-electronics/&#34;&gt;IoT for Electronics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/iot-for-insurance/&#34;&gt;IoT for Insurance&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;application-security&#34;&gt;Application Security&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/access-trail/&#34;&gt;Access Trail&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Identity and Access Management&lt;/td&gt;
&lt;td&gt;Azure AD/Role-based access control&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/application-security-on-cloud/&#34;&gt;Application security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Inspector (Preview)&lt;/td&gt;
&lt;td&gt;Security Center (Preview)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/key-protect/&#34;&gt;Key Protect &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Key Management Service&lt;/td&gt;
&lt;td&gt;Key Vault&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/single-sign-on/&#34;&gt;Single Sign On&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Directory Service&lt;/td&gt;
&lt;td&gt;Azure Active Directory&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;devops&#34;&gt;DevOps&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/active-deploy/&#34;&gt;Active Deploy &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;OpsWorks CloudFormation&lt;/td&gt;
&lt;td&gt;Resource Manager Automation&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/auto-scaling/&#34;&gt;Auto-Scaling&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Autoscaling&lt;/td&gt;
&lt;td&gt;Autoscaling&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/availability-monitoring/&#34;&gt;Availability Monitoring&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;CloudWatch / CloudTrail&lt;/td&gt;
&lt;td&gt;Log Analytics Application Insights&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/continuous-delivery/&#34;&gt;Continuous Delivery&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/delivery-pipeline/&#34;&gt;Delivery Pipeline&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/globalization-pipeline/&#34;&gt;Globalization Pipeline&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/ibm-alert-notification/&#34;&gt;IBM Alert Notification&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/monitoring-and-analytics/&#34;&gt;Monitoring and Analytics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;CloudWatch / CloudTrail&lt;/td&gt;
&lt;td&gt;Log Analytics Application Insights&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/track--plan/&#34;&gt;Track and Plan&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;application-services&#34;&gt;Application Services&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bluemix&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;Azure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/blockchain/&#34;&gt;Blockchain&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/business-rules/&#34;&gt;Business Rules&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/message-hub/&#34;&gt;Message Hub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Simple Queue Service&lt;/td&gt;
&lt;td&gt;Queue Storage&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/session-cache/&#34;&gt;Session Cache&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ElastiCache&lt;/td&gt;
&lt;td&gt;Azure Redis Cache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/websphere-application-server/&#34;&gt;WebSphere Application Server&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/services/workload-scheduler/&#34;&gt;Workload Scheduler&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;helpful-links&#34;&gt;Helpful Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ibm-bluemix.github.io/&#34;&gt;https://ibm-bluemix.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/&#34;&gt;https://softlayer.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://console.ng.bluemix.net/catalog/&#34;&gt;https://console.ng.bluemix.net/catalog/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mycatalog.mybluemix.net/&#34;&gt;http://mycatalog.mybluemix.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: October 17, 2016</title>
      <link>https://softlayer.github.io/release_notes/20161017/</link>
      <pubDate>Mon, 17 Oct 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20161017/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Updated the page title and icon on the control portal compute order forms to reflect IBM Bluemix.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved an issue with the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_OpenIdConnect/getMappedAccounts&#34;&gt;getMappedAccounts&lt;/a&gt; method not correctly displaying the  accountLinks section of the output.&lt;/li&gt;
&lt;li&gt;When any sub-brand is created by a brand master account it now automatically has the brand attribute ALLOW_ACCOUNT_CREATION set to 1.This resolves an issue what required Sales Operations to manually set the ALLOW_ACCOUNT_CREATION to 1 on sub-branded accounts.&lt;/li&gt;
&lt;li&gt;Allowed the IAM token service to indicate that 2 factor authentication has been fulfilled in the case it has been performed recently. This will be done by including a flag in IAM token to indicate that 2FA is not needed. This is for the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_OpenIdConnect/getPortalLoginTokenOpenIdConnect&#34;&gt;getPortalLoginTokenOpenIdConnect&lt;/a&gt; method.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Monitoring Examples</title>
      <link>https://softlayer.github.io/python/monitoring/</link>
      <pubDate>Wed, 12 Oct 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/monitoring/</guid>
      <description>&lt;p&gt;ResponseStatus codes and what they mean.
&lt;a href=&#34;http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Monitor_Version1_Query_Result&#34;&gt;http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Monitor_Version1_Query_Result&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;0: CRITICAL&lt;/li&gt;
&lt;li&gt;1: Warning&lt;/li&gt;
&lt;li&gt;2: OK&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;4 - 5: Unknown Status, Contact Support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More information:
&lt;a href=&#34;https://stackoverflow.com/questions/37662607/python-api-monitoring-manager&#34;&gt;https://stackoverflow.com/questions/37662607/python-api-monitoring-manager&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This example gets the status of your Basic and Advanced monitoring.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
from pprint import pprint as pp

class example():

    def __init__(self):

        self.client = SoftLayer.Client()

    def main(self):
        return True

    def getBasicStatus(self, server_id):
        mask = &amp;quot;mask[fullyQualifiedDomainName, networkMonitors[lastResult]]&amp;quot;
        server = self.client[&#39;SoftLayer_Virtual_Guest&#39;].getObject(id=server_id, mask=mask )
        pp(server)

    def getAdvancedStatus(self, server_id):
        mask = &amp;quot;mask[fullyQualifiedDomainName, monitoringAgents[configurationValues[definition]]]&amp;quot;
        server = self.client[&#39;SoftLayer_Virtual_Guest&#39;].getObject(id=server_id, mask=mask )
        pp(server)

if __name__ == &amp;quot;__main__&amp;quot;:
    server = 24880113
    main = example()
    main.getBasicStatus(server)
    main.getAdvancedStatus(server)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This example configures the CPU monitor&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;
Configure the section &#39;CPU&#39; from the &#39;Cpu, Disk, and Memory Monitoring Agent&#39; agent.

Important manual pages
http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress
http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress
http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/applyConfigurationValues
http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent_Configuration_Value

License: http://sldn.softlayer.com/article/License
Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt;
&amp;quot;&amp;quot;&amp;quot;

import SoftLayer
import json

# The IP address of the server or VSI to configure.
ipAddres = &amp;quot;159.8.52.188&amp;quot;

configuration = {
    &#39;Graph System CPU Usage&#39;: &amp;quot;False&amp;quot;,
    &#39;Graph Total CPU Usage&#39;: &amp;quot;False&amp;quot;,
    &#39;Graph User CPU Usage&#39;: &amp;quot;True&amp;quot;,
    &#39;Graph I/O Wait CPU Usage&#39;: &amp;quot;True&amp;quot;,
    &#39;Processor Queue Length Alarm&#39;: &amp;quot;True&amp;quot;,
    &#39;CPU Usage Error Alarm&#39;: &amp;quot;True&amp;quot;,
    &#39;CPU Usage Error Alarm Threshold&#39;: &amp;quot;99&amp;quot;,
    &#39;CPU Usage Warning Alarm&#39;: &amp;quot;True&amp;quot;,
    &#39;CPU Usage Warning Alarm Threshold&#39;: &amp;quot;82&amp;quot;,
    &#39;Processor Queue Length Alarm&#39;: &amp;quot;True&amp;quot;,
    &#39;Max Queue Length&#39;: &amp;quot;4&amp;quot;
}

# The agent&#39;s name we wish to configure.
agentName = &#39;Cpu, Disk, and Memory Monitoring Agent&#39;

client = SoftLayer.Client()
vsiService = client[&#39;SoftLayer_Virtual_Guest&#39;]
hardwareService = client[&#39;SoftLayer_Hardware_Server&#39;]
monitoringService = client[&#39;SoftLayer_Monitoring_Agent&#39;]

# Getting the monitoring agents installed in the server or VSI.
try:
    objectMask = &#39;mask[monitoringAgents[configurationValues[definition]]]&#39;
    server = vsiService.findByIpAddress(ipAddres, mask=objectMask)
    if not &#39;id&#39; in server:
        server = hardwareService.findByIpAddress(ipAddres, mask=objectMask)
        if not &#39;id&#39; in server:
            print(&amp;quot;There is no a Server or VSI with the IP address: &amp;quot; + ipAddres)
            exit(1)
except SoftLayer.SoftLayerAPIError as e:
    print(&amp;quot;Unable to get the server &amp;quot;
          % (e.faultCode, e.faultString))
    exit(1)

# Getting the agent to configure.
agents = [agent for agent in server[&#39;monitoringAgents&#39;] if agent[&#39;name&#39;] == agentName]
if len(agents) == 0:
    print(&amp;quot;Unable to find the agent: &amp;quot; + agentName)
    exit(1)
agent = agents[0]

# Creating an SoftLayer_Monitoring_Agent_Configuration_Value skeleton
# which contains the configuration for the agent.
configurationValues = []
for item in configuration.keys():
    itemFound = False
    for value in agent[&#39;configurationValues&#39;]:
        if value[&#39;definition&#39;][&#39;name&#39;].strip().upper() == item.strip().upper():
            itemFound = True
            configurationValue = value
            configurationValue[&#39;value&#39;] = configuration[item].strip().upper()
            configurationValues.append(configurationValue)
            break
    if not itemFound:
        print(&amp;quot;The configuration: &amp;quot; + item + &amp;quot; is not available for the agent.&amp;quot;)


# Calling the SoftLayer_Monitoring_Agent::applyConfigurationValues method
# to apply the changes in the agent.
# Note: In case there is no changes in the agent configuration the method
# will return error.
try:
    result = monitoringService.applyConfigurationValues(configurationValues, id=agent[&#39;id&#39;])
    print(json.dumps(result, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))
except SoftLayer.SoftLayerAPIError as e:
    print(&amp;quot;Unable to apply the configuration in the monitoring agent.&amp;quot;
          % (e.faultCode, e.faultString))
    exit(1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This example GETs the monitoring configuration&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;quot;&amp;quot;&amp;quot;
Get the configuration of the monitoring agent in a server or VSI.

Important manual pages:
http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress
http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress
http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent/
http://sldn.softlayer.com/article/Object-Masks

License: http://sldn.softlayer.com/article/License
Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt;
&amp;quot;&amp;quot;&amp;quot;

import SoftLayer
import json

ipAddres = &amp;quot;169.54.54.164&amp;quot;

client = SoftLayer.Client()
vsiService = client[&#39;SoftLayer_Virtual_Guest&#39;]
hardwareService = client[&#39;SoftLayer_Hardware_Server&#39;]

try:
    objectMask = &#39;mask[monitoringAgents[configurationTemplate[configurationSections[subSections]],&#39; \
                 &#39;configurationValues[id, value, profileId, agentId, configurationDefinitionId,&#39; \
                 &#39;profile, definition[attributes, section, valueType]]]]&#39;
    server = vsiService.findByIpAddress(ipAddres, mask=objectMask)
    if not &#39;id&#39; in server:
        server = hardwareService.findByIpAddress(ipAddres, mask=objectMask)
        if not &#39;id&#39; in server:
            print(&amp;quot;There is no a Server or VSI with the IP address: &amp;quot; + ipAddres)
            exit(1)
except SoftLayer.SoftLayerAPIError as e:
    print(&amp;quot;Unable to get the server &amp;quot;
          % (e.faultCode, e.faultString))
    exit(1)

# We will get the configuration of the active agents
agents = [agent for agent in server[&#39;monitoringAgents&#39;] if agent[&#39;statusName&#39;] == &amp;quot;Active&amp;quot;]
server[&#39;monitoringAgents&#39;] = agents

configs = []
for agent in server[&#39;monitoringAgents&#39;]:
    config = {}
    config[&#39;agent&#39;] = agent[&#39;name&#39;]
    config[&#39;id&#39;] = agent[&#39;id&#39;]
    sections = []
    for section in agent[&#39;configurationTemplate&#39;][&#39;configurationSections&#39;]:
        sect = {}
        subsects = []
        hasProfile = False
        profileIds = []
        confs = []
        for subsection in section[&#39;subSections&#39;]:
            values = [value for value in agent[&#39;configurationValues&#39;] if
                      value[&#39;definition&#39;][&#39;sectionId&#39;] == subsection[&#39;id&#39;]]
            for value in values:
                conf = {}
                if value[&#39;profileId&#39;] == &amp;quot;&amp;quot;:
                    conf[value[&#39;definition&#39;][&#39;name&#39;]] = value[&#39;value&#39;]
                    confs.append(conf)
                else:
                    hasProfile = True
                    profileIds.append(value[&#39;profileId&#39;])      
        sect[&#39;name&#39;] = section[&#39;name&#39;]
        if not hasProfile:
            sect[&#39;configuration&#39;] = confs
            sections.append(sect)
        else:
            profileIds = list(set(profileIds))
            profiles = []
            for profileId in profileIds:
                profile = {}
                valueConfs = []
                valueProfiles = [value for value in agent[&#39;configurationValues&#39;] if
                                 value[&#39;profileId&#39;] == profileId]
                profile[&#39;name&#39;] = valueProfiles[0][&#39;profile&#39;][&#39;name&#39;]
                for valueProfile in valueProfiles:
                    value = {}
                    value[valueProfile[&#39;definition&#39;][&#39;name&#39;]] = valueProfile[&#39;value&#39;]
                    valueConfs.append(value)
                profile[&#39;configuration&#39;] = valueConfs
                profiles.append(profile)
            sect[&#39;profiles&#39;] = profiles
            sections.append(sect)
    config[&#39;sections&#39;] = sections
    configs.append(config)
print(json.dumps(configs, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This example views the results of the monitoring&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;quot;&amp;quot;&amp;quot;
View the reports for the  &amp;quot;CPU&amp;quot; section from the
&#39;Cpu, Disk, and Memory Monitoring Agent&#39; monitor agent.

Important manual pages
http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress
http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress
http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getGraphData
http://sldn.softlayer.com/reference/services/Monitoring_Agent_Configuration_Value/getMetricDataType

License: http://sldn.softlayer.com/article/License
Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt;
&amp;quot;&amp;quot;&amp;quot;

import SoftLayer
import json

# The IP address of the server or VSI to configure.
ipAddres = &amp;quot;159.8.52.188&amp;quot;

startDate = &#39;2016-01-02&#39;
endDate = &#39;2016-01-08&#39;

# Set &amp;quot;True&amp;quot; the reports you wish to see.
reports = {
    &#39;Graph System CPU Usage&#39;: &amp;quot;False&amp;quot;,
    &#39;Graph Total CPU Usage&#39;: &amp;quot;False&amp;quot;,
    &#39;Graph User CPU Usage&#39;: &amp;quot;False&amp;quot;,
    &#39;Graph I/O Wait CPU Usage&#39;: &amp;quot;True&amp;quot;,
}

# The agent&#39;s name we wish to see the reports.
agentName = &#39;Cpu, Disk, and Memory Monitoring Agent&#39;

client = SoftLayer.Client()
vsiService = client[&#39;SoftLayer_Virtual_Guest&#39;]
hardwareService = client[&#39;SoftLayer_Hardware_Server&#39;]
monitoringService = client[&#39;SoftLayer_Monitoring_Agent&#39;]
agentConfigurationService = client[&#39;Monitoring_Agent_Configuration_Value&#39;]

# Getting the monitoring agents installed in the server or VSI.
try:
    # Setting an object mask to retrieve information about the monitoring agents.
    objectMask = &#39;mask[monitoringAgents[configurationValues[definition]]]&#39;
    server = vsiService.findByIpAddress(ipAddres, mask=objectMask)
    if not &#39;id&#39; in server:
        server = hardwareService.findByIpAddress(ipAddres, mask=objectMask)
        if not &#39;id&#39; in server:
            print(&amp;quot;There is no a Server or VSI with the IP address: &amp;quot; + ipAddres)
            exit(1)
except SoftLayer.SoftLayerAPIError as e:
    print(&amp;quot;Unable to get the server &amp;quot;
          % (e.faultCode, e.faultString))
    exit(1)

# Getting the agent to see the reports.
agents = [agent for agent in server[&#39;monitoringAgents&#39;] if agent[&#39;name&#39;] == agentName]
if len(agents) == 0:
    print(&amp;quot;Unable to find the agent: &amp;quot; + agentName)
    exit(1)
agent = agents[0]

# Creating the list of SoftLayer_Container_Metric_Data_Type objects
metricDataTypes = []
for item in reports.keys():
    if reports[item].strip().upper() == &amp;quot;TRUE&amp;quot;:
        itemFound = False
        for value in agent[&#39;configurationValues&#39;]:
            if value[&#39;definition&#39;][&#39;name&#39;].strip().upper() == item.strip().upper():
                itemFound = True
                if value[&#39;value&#39;].strip().upper() == &amp;quot;TRUE&amp;quot;:
                    try:
                        metrics = agentConfigurationService.getMetricDataType(id=value[&#39;id&#39;])
                        metricDataTypes.append(metrics)
                    except SoftLayer.SoftLayerAPIError as e:
                        print(&amp;quot;Unable to get the metrics. &amp;quot; % (e.faultCode, e.faultString))
                else:
                    print(&amp;quot;The report: &amp;quot; + item + &amp;quot; is disable for the agent. Please review the agent configuration.&amp;quot;)
                    exit(1)
                break
        if not itemFound:
            print(&amp;quot;The configuration: &amp;quot; + item + &amp;quot; is not available for the agent.&amp;quot;)

# Getting the reports.
try:
    data = monitoringService.getGraphData(metricDataTypes, startDate, endDate, id=agent[&#39;id&#39;])
    print(json.dumps(data, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))
except SoftLayer.SoftLayerAPIError as e:
    print(&amp;quot;Unable to get the report. &amp;quot;  % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: October 11, 2016</title>
      <link>https://softlayer.github.io/release_notes/20161011/</link>
      <pubDate>Tue, 11 Oct 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20161011/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Updated the error message when ordering Public Subnets on a VLAN with HSRP.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Corrected an issue with the information for the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_OpenIdConnect/getOpenIdRegistrationInfoFromCode&#34;&gt;getOpenIdRegistrationInfoFromCode&lt;/a&gt; method for the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_OpenIdConnect&#34;&gt;SoftLayer_User_Customer_OpenIdConnect&lt;/a&gt; service.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed a potential issue that caused order verifications to fail in certain cases for accounts that have large numbers of Endurance or Performance volumes.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Advanced Quote Ordering</title>
      <link>https://softlayer.github.io/python/order_quote_advanced/</link>
      <pubDate>Wed, 05 Oct 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/order_quote_advanced/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
from pprint import pprint as pp

class example():

    def __init__(self):

        self.client = SoftLayer.Client()
        self.mgr = SoftLayer.OrderingManager(self.client)


    def orderQuote(self, quote_id):
        # If you have more than 1 server in the quote, you will need to append
        # 
        guests = {
            &#39;hostname&#39;: &#39;quotetest&#39;, 
            &#39;domain&#39;: &#39;example.com&#39;

        }
        
        quote = self.client[&#39;Billing_Order_Quote&#39;]
        quote_container = quote.getRecalculatedOrderContainer(id=quote_id)
        container = quote_container[&#39;orderContainers&#39;][0]

        container[&#39;quantity&#39;] = 1
        container[&#39;virtualGuests&#39;] = []
        container[&#39;virtualGuests&#39;].append(guests)

        # SoftLayer.exceptions.SoftLayerAPIError: SoftLayerAPIError(SoftLayer_Exception_Order_MismatchedQuantity): The number of servers (2) does not match the order quantity (1).
        # the hardware variable was getting filled out for some reason, even though there were no hardware on this quote.
        container[&#39;hardware&#39;] = None


        container[&#39;presetId&#39;] = None
        container[&#39;provisionScripts&#39;] = [&#39;https://gist.githubusercontent.com/myscript.py&#39;]
        # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order
        # The order of containers passed in needs to match the order they are assigned to either hardware or virtualGuests
        container[&#39;sshKeys&#39;] = [{&#39;sshKeyIds&#39;: [1234]} ]

        # Edit this ID to change the location of the order.
        # this is AMS03
        container[&#39;location&#39;] = 814994
        result = self.client[&#39;Product_Order&#39;].verifyOrder(container)
        pp(result)

    def getOrderContainer(self,quote_id):
        quote = self.client[&#39;Billing_Order_Quote&#39;]
        container = quote.getRecalculatedOrderContainer(id=quote_id)
        return container[&#39;orderContainers&#39;][0]


    def listQuotes(self):
        quotes = self.client[&#39;SoftLayer_Account&#39;].getActiveQuotes()
        pp(quotes)

    def listLocations(self):
        locations = self.client[&#39;SoftLayer_Location&#39;].getDatacenters()
        pp(locations)

    def listSshKeys(self):
        keys = self.client[&#39;SoftLayer_Account&#39;].getSshKeys()
        pp(keys)

if __name__ == &amp;quot;__main__&amp;quot;:
    quote_id = 1942633
    main = example()
    # main.main()
    # main.listQuotes()
    # quote = main.getOrderContainer(quote_id)
    # pp(quote)
    # main.listLocations()
    # main.listSshKeys()
    main.orderQuote(quote_id)

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>