<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Mon, 09 May 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Release notes: May 9, 2016</title>
      <link>https://softlayer.github.io/release_notes/20160509/</link>
      <pubDate>Mon, 09 May 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20160509/</guid>
      <description>

&lt;h4 id=&#34;portal:edd9ff234770975233b24460efd64f60&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue affecting the ability to edit a Saved Order or a Sales Order Quote.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:edd9ff234770975233b24460efd64f60&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend:edd9ff234770975233b24460efd64f60&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved an issue that was preventing a reclaim for Virtual Guests if they were powered off at the time of the cancellation request.&lt;/li&gt;
&lt;li&gt;Added translations for some email and ticket templates. Customers who set their user accounts to a non-English locale will see some emails and ticket updates translated into their locale.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://softlayer.github.io/rest/orderLB/</link>
      <pubDate>Thu, 05 May 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/orderLB/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder&#34;&gt;&lt;code&gt;SoftLayer_Product_Order::verifyOrder()&lt;/code&gt;&lt;/a&gt;
Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder&#34;&gt;&lt;code&gt;SoftLayer_Product_Order::placeOrder()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Product_Order/verifyOrder
URL: SoftLayer_Product_Order/placeOrder&lt;/p&gt;

&lt;p&gt;In the following example I am ordering a Local Load Balancer 500 VIP connections (PriceId: 2078) in the Dallas 06 Datacenter (locationId: 154820).&lt;/p&gt;

&lt;p&gt;Example CURL using verifyOrder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X POST -d &#39;{&amp;quot;parameters&amp;quot;:[{&amp;quot;packageId&amp;quot;:194,&amp;quot;location&amp;quot;:154820,&amp;quot;quantity&amp;quot;:1,&amp;quot;prices&amp;quot;:[{&amp;quot;id&amp;quot;:2078}]}]}&#39; &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/verifyOrder&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example CURL using placeOrder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; -k -X POST -d &#39;{&amp;quot;parameters&amp;quot;:[{&amp;quot;packageId&amp;quot;:194,&amp;quot;location&amp;quot;:154820,&amp;quot;quantity&amp;quot;:1,&amp;quot;prices&amp;quot;:[{&amp;quot;id&amp;quot;:2078}]}]}&#39; &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/placeOrder&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://softlayer.github.io/rest/createBWpool/</link>
      <pubDate>Mon, 02 May 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/createBWpool/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/createObject&#34;&gt;&lt;code&gt;SoftLayer_Network_Bandwidth_Version1_Allotment::createObject()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Network_Bandwidth_Version1_Allotment/createObject&lt;/p&gt;

&lt;p&gt;Example Payload:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
	&amp;quot;parameters&amp;quot;: [{
		&amp;quot;accountId&amp;quot;: 111111,
		&amp;quot;bandwidthAllotmentTypeId&amp;quot;: 2,
		&amp;quot;locationGroupId&amp;quot;: 1,
		&amp;quot;name&amp;quot;: &amp;quot;My_new_Bancwidth_Pool&amp;quot;,
		&amp;quot;serviceProviderId&amp;quot;: 1
	}]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -H &amp;quot;Content-Type: application/json&amp;quot; --data @createpool.json &amp;quot;https://$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY@api.softlayer.com/rest/v3/SoftLayer_Network_Bandwidth_Version1_Allotment/createObject&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://softlayer.github.io/python/createBWpool/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/createBWpool/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
# For nice debug output:
from pprint import pprint as pp


# Set the needed values to create a new item
accountId = 111111

# The values for bandwidthAllotmentTypeId are: (1) and (2)
# where: (1) means this allotment is marked as a virtual private rack or
#        (2) bandwidth pooling
bandwidthAllotmentTypeId = 2

# To get locationGroupId, execute: SoftLayer_Location_Group::getAllObjects
locationGroupId = 1
newBandwithPoolName = &#39;newBWpool&#39;

# Create an object template to create the item.
objectTemplate = {
    &#39;accountId&#39;: accountId,
    &#39;bandwidthAllotmentTypeId&#39;: bandwidthAllotmentTypeId,
    &#39;locationGroupId&#39;: locationGroupId,
    &#39;name&#39;: newBandwithPoolName
}

# Creates a new connection to the API service.
client = SoftLayer.Client()

try:
    result = client[&#39;SoftLayer_Network_Bandwidth_Version1_Allotment&#39;].createObject(objectTemplate)
    pp(result)

except SoftLayer.SoftLayerAPIError as e:
    pp(&#39;Failed ... Unable to create a new Bandwidth Pool  faultCode=%s, faultString=%s&#39;
        % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create A Domain</title>
      <link>https://softlayer.github.io/python/createDNS/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/createDNS/</guid>
      <description>&lt;pre&gt;&lt;code&gt;import SoftLayer
from pprint import pprint as pp

class example():

    def __init__(self):

        self.client = SoftLayer.Client()

    def main(self):
        zone_name = &#39;lablayer2.info&#39;
        zone_client = self.client[&#39;SoftLayer_Dns_Domain&#39;]
        the_zone =  {
            &#39;name&#39; : zone_name,
            &#39;resourceRecords&#39; : [ 
                {
                    &#39;data&#39; : &#39;123.123.123.123&#39;,
                    &#39;host&#39; : &#39;ns1&#39;,
                    &#39;type&#39; : &#39;a&#39;,
                },
                {
                    &#39;data&#39; : &#39;123.123.123.123&#39;,
                    &#39;host&#39; : &#39;ns2&#39;,
                    &#39;type&#39; : &#39;a&#39;,
                },
                {
                    &#39;data&#39; : &#39;123.123.123.123&#39;,
                    &#39;host&#39; : &#39;@&#39;,
                    &#39;type&#39; : &#39;a&#39;,
                },
                {
                    &#39;data&#39; : &#39;ns2.lablayer2.info.&#39;,
                    &#39;host&#39; : &#39;@&#39;,
                    &#39;type&#39; : &#39;ns&#39;,
                },
                {
                    &#39;data&#39; : &#39;ns1.lablayer2.info.&#39;,
                    &#39;host&#39; : &#39;@&#39;,
                    &#39;type&#39; : &#39;ns&#39;,
                }
            ]
        }
        the_soa = {
            &#39;data&#39; : &#39;ns1.lablayer2.info.&#39;,
            &#39;type&#39; : &#39;soa&#39;,
            &#39;responsiblePerson&#39; : &#39;root.lablayer2.info.&#39;
        }
        # result = zone_client.createObject(the_zone)
        # pp(result)

        mask = &amp;quot;mask[resourceRecords]&amp;quot;
        &amp;quot;&amp;quot;&amp;quot;
        getByDomainName will do a greedy search, so make sure you are searching for 
        the exact domain you want, otherwise you might get back more than 1 result.
        &amp;quot;&amp;quot;&amp;quot;
        zone_result = zone_client.getByDomainName(zone_name, mask=mask)
        # pp(zone_result)

        &amp;quot;&amp;quot;&amp;quot;
        SoftLayer creates each zone with a standard SOA record.
        The SOA record can only be changed after creation. This isn&#39;t
        usually needed, but here is how to do it.
        &amp;quot;&amp;quot;&amp;quot;
        for zone in zone_result[0][&#39;resourceRecords&#39;]:
            if zone[&#39;type&#39;].lower() is &#39;soa&#39;:
                zone_client.editObject(the_soa, id=zone[&#39;id&#39;])


if __name__ == &amp;quot;__main__&amp;quot;:
    main = example()
    main.main()

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://softlayer.github.io/python/createLBpython/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/createLBpython/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;quot;&amp;quot;&amp;quot;
Order a load balancer

Important manual pages:
http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order
http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price
http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder
http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder

License: http://sldn.softlayer.com/article/License
Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt;
&amp;quot;&amp;quot;&amp;quot;

import SoftLayer
import json


# The package to order load balancers.
packageId = 194

# Build a skeleton SoftLayer_Product_Item_Price objects. These objects contain
# much more than ids, but SoftLayer&#39;s ordering system only needs the price&#39;s id
# to know what you want to order.

# Since Load Balancers can have Location Specific itemPriceId&#39;s I am using the following script to
# return just the standard (location agnostic) itemPriceId&#39;s.
# https://gist.github.com/greyhoundforty/a0b55afcab9bc758405e21a39b93c63d
# In my case I am going with &#39;Load Balancer 500 VIP Connections&#39;

prices = [
   {
       &amp;quot;id&amp;quot;: 2078
   }
]

# Declare the API client.
client = SoftLayer.Client()
productOrderService = client[&#39;SoftLayer_Product_Order&#39;]

orderData = {
   &amp;quot;prices&amp;quot;: prices,
   &amp;quot;packageId&amp;quot;: packageId,
   &amp;quot;location&amp;quot;: &amp;quot;DALLAS06&amp;quot;
}

try:
   # verifyOrder() will check your order for errors. Replace this with a call to
   # placeOrder() when you&#39;re ready to order. Both calls return a receipt object
   # that you can use for your records.
   response = productOrderService.verifyOrder(orderData)
   print(json.dumps(response, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))
except SoftLayer.SoftLayerAPIError as e:
   # If there was an error returned from the SoftLayer API then bomb out with the
   # error message.
   print(&amp;quot;Unable to place the order. faultCode=%s, faultString=%s&amp;quot; % (e.faultCode, e.faultString))

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Adding/Removing Servers in a Bandwidth Pool</title>
      <link>https://softlayer.github.io/python/adjustpool/</link>
      <pubDate>Thu, 28 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/adjustpool/</guid>
      <description>&lt;p&gt;The following script allows you to add and remove servers in an existing bandwidth pool. The script requires empty arrays when not specifying a Bare Metal or Virtual Guest Id.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
from pprint import pprint as pp

client = SoftLayer.Client()

hardwareToAdd = [{&amp;quot;id&amp;quot;: 123456 }] # ID&#39;s for any bare metal servers to add to the pool
hardwareToRemove = [] # ID&#39;s for any bare metal servers to remove from the pool
cloudsToAdd = [] #  ID&#39;s for any virtual guests to add to the pool
cloudsToRemove = [{&amp;quot;id&amp;quot;: 987654 }] #  ID&#39;s for any virtual guests to remove from the pool

pool_id = &#39;11111111&#39; # Bandwidth Pool ID
adjustpool = client[&#39;SoftLayer_Network_Bandwidth_Version1_Allotment&#39;].requestVdrContentUpdates(hardwareToAdd, hardwareToRemove, cloudsToAdd, cloudsToRemove, id=pool_id)
pp(adjustpool)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: April 25, 2016</title>
      <link>https://softlayer.github.io/release_notes/20160425/</link>
      <pubDate>Mon, 25 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20160425/</guid>
      <description>

&lt;h4 id=&#34;portal:c24eb79dee0ca4c00431511210782430&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:c24eb79dee0ca4c00431511210782430&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved an issue with the syntax for getSnapshotRanges for the methods &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMemoryMetricImage&#34;&gt;getMemoryMetricImage&lt;/a&gt; and &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getCpuMetricImage&#34;&gt;getCpuMetricImage&lt;/a&gt; that was causing incorrect values to be returned.&lt;/li&gt;
&lt;li&gt;Corrected a bug in the Branded Agents Portals in which the count returned by &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event/getImpactedAccountCount&#34;&gt;getImpactedAccountCount&lt;/a&gt; did not match the result size of &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event/getImpactedAccounts&#34;&gt;getImpactedAccounts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend:c24eb79dee0ca4c00431511210782430&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved an issue that was causing host migrations to fail if a Virtual Guest was powered off.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Get Invoice for PowerShell</title>
      <link>https://softlayer.github.io/rest/getInvoicesPowershell/</link>
      <pubDate>Mon, 25 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/getInvoicesPowershell/</guid>
      <description>&lt;p&gt;This powershell script will get the filename for the PDF and Excel invoices and save them locally. Requires &lt;a href=&#34;http://social.technet.microsoft.com/wiki/contents/articles/21016.how-to-install-windows-powershell-4-0.aspx&#34;&gt;PowerShell Version 4&lt;/a&gt; for the Invoke-WebRequest and ConvertFrom-Json functions.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;# Start SL script
$MyScriptName = &amp;quot;_Call_SL_Rest&amp;quot;
$HomeDir = pwd
$date4file = get-date -uformat &amp;quot;%Y-%m-%d_%H%M%S&amp;quot;
$log = &amp;quot;$HomeDir\&amp;quot;+$date4file+$MyScriptName+&amp;quot;.log&amp;quot;
$BaseURL = &amp;quot;https://api.softlayer.com/rest/v3&amp;quot;
Add-Content $log &amp;quot;$(Get-Date -format s) : Start&amp;quot;

$SLUser = &amp;quot;SLUSERNAME&amp;quot;
$SLapikey =  &amp;quot;APIKEY&amp;quot;

$LoginPair = &amp;quot;$($SLUser):$($SLapikey)&amp;quot;
$encodedCreds = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($LoginPair))
$basicAuthValue = &amp;quot;Basic $encodedCreds&amp;quot;
$Headers = @{
    Authorization = $basicAuthValue
}

$GSTURL=&amp;quot;$($BaseURL)/SoftLayer_Account/getObject&amp;quot;
#$GSTURL=&amp;quot;$($BaseURL)/SoftLayer_Account/getObject?objectMask=mask[companyName,hardware[hostname]]&amp;quot;
Add-Content $log &amp;quot;$(Get-Date -format s) : Authenticate as User $($SLUser) at URL $($GSTURL)&amp;quot;
$GSTRequest = Invoke-WebRequest $GSTURL  -Headers $Headers -SessionVariable slsession
#Write-host $GSTRequest.content
$GSTanswerConv = ConvertFrom-Json $($GSTRequest.content)
Add-Content $log &amp;quot;$(Get-Date -format s) : Account Info: $($GSTanswerConv | select companyName , country , id)&amp;quot;

#########################
function CallURL($URL) {   
 Add-Content $log &amp;quot;$(Get-Date -format s) : Call URL $($URL)&amp;quot;
$Request = Invoke-WebRequest $URL  -WebSession $slsession 
$answerConv = ConvertFrom-Json $($Request.content)
 return $answerConv
 }
#########################
$URLcall=&amp;quot;$($BaseURL)/SoftLayer_Account/getLatestRecurringInvoice&amp;quot;
$Callanswer = CallURL($URLcall)

Add-Content $log &amp;quot;$(Get-Date -format s) : Invoice Info: $($Callanswer | select companyName , id,typeCode, modifyDate , createDate)&amp;quot;

$LastIvoiceID = $Callanswer.id

$URLcall=&amp;quot;$($BaseURL)/SoftLayer_Billing_Invoice/$($LastIvoiceID)/getPdfDetailedFilename&amp;quot;
$Callanswer = CallURL($URLcall)
Add-Content $log &amp;quot;$(Get-Date -format s) : Invoice FileName: $($Callanswer)&amp;quot;

$PdfDetailedFilename = $Callanswer
$FileDest = &amp;quot;$HomeDir\$PdfDetailedFilename&amp;quot;

$URLcall=&amp;quot;$($BaseURL)/SoftLayer_Billing_Invoice/$($LastIvoiceID)/getPdfDetailed&amp;quot;
$Callanswer = CallURL($URLcall)
$FileData = $Callanswer

$bytes=[System.Convert]::FromBase64String($FileData)
$decoded=[System.Text.Encoding]::Default.GetString($bytes)
[Byte[]]$bytes_FileData=[System.Text.Encoding]::Default.GetBytes($decoded)
set-content -encoding byte -Path $FileDest -value $bytes_FileData
$PdfFile = $FileDest

$URLcall=&amp;quot;$($BaseURL)/SoftLayer_Billing_Invoice/$($LastIvoiceID)/getXlsFilename&amp;quot;
$Callanswer = CallURL($URLcall)
Add-Content $log &amp;quot;$(Get-Date -format s) : Invoice FileName: $($Callanswer)&amp;quot;

$XlsFilename = $Callanswer
$FileDest = &amp;quot;$HomeDir\$XlsFilename&amp;quot;


$URLcall=&amp;quot;$($BaseURL)/SoftLayer_Billing_Invoice/$($LastIvoiceID)/getExcel&amp;quot;
$Callanswer = CallURL($URLcall)
$FileData = $Callanswer

$bytes=[System.Convert]::FromBase64String($FileData)
$decoded=[System.Text.Encoding]::Default.GetString($bytes)
[Byte[]]$bytes_FileData=[System.Text.Encoding]::Default.GetBytes($decoded)
set-content -encoding byte -Path $FileDest -value $bytes_FileData
$XlsFile = $FileDest

Add-Content $log &amp;quot;$(Get-Date -format s) : End&amp;quot;
#End
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: April 18, 2016</title>
      <link>https://softlayer.github.io/release_notes/20160418/</link>
      <pubDate>Mon, 18 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20160418/</guid>
      <description>

&lt;h4 id=&#34;portal:b0ae1fc0f77d3ea1dc28e8e43fcaa10d&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue where R1Soft Server options were not showing up while initiating an OS Reload.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:b0ae1fc0f77d3ea1dc28e8e43fcaa10d&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Added &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVmWareActiveAccountLicenseKeys&#34;&gt;getVmWareActiveAccountLicenseKeys&lt;/a&gt; to SoftLayer_Account service.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend:b0ae1fc0f77d3ea1dc28e8e43fcaa10d&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved a bug in which hosts authorized to multiple iSCSI Volumes became deauthorized from all iSCSI Volumes when one Volume was explicitly deauthorized.&lt;/li&gt;
&lt;li&gt;Resolved an issue that was preventing Local Load Balancers and Netscalers from completing the provisioning process due to an errant RAID card check.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Find Location specific pricing for a package</title>
      <link>https://softlayer.github.io/python/location_based_pricing/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/location_based_pricing/</guid>
      <description>&lt;p&gt;With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price&#34;&gt;SoftLayer_Product_Item_Price&lt;/a&gt; objects via the API. In the following example we will query for the Dallas 6 data center, and then filter our item (Local Load Balancer) and prices to include only the location-based pricing for the specific data center we&amp;rsquo;re in —or we can filter for the standard price if a location-based price doesn&amp;rsquo;t exist.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
import json

package_id = 194
datacenter = &#39;dal06&#39;

client = SoftLayer.Client()

location_object_filter = {
    &#39;name&#39;: {&#39;operation&#39;: datacenter}
}

location_object_mask = &amp;quot;priceGroups&amp;quot;

location = client[&amp;quot;SoftLayer_Location_Datacenter&amp;quot;].getDatacenters(filter=location_object_filter, mask=location_object_mask)

if len(location) == 0:
    # error handling
    exit()

# lookup location group ids
location_group_ids = []
for location_group in location[0][&amp;quot;priceGroups&amp;quot;]:
    location_group_ids.append(location_group[&amp;quot;id&amp;quot;])

object_filter_standard = {
    &#39;items&#39;: {
        &amp;quot;prices&amp;quot;: {
            &amp;quot;locationGroupId&amp;quot;: {
                &amp;quot;operation&amp;quot;: &amp;quot;is null&amp;quot;
            }
        }
    }
}

standard_items = client[&amp;quot;SoftLayer_Product_Package&amp;quot;].getItems(id=package_id, filter=object_filter_standard)

object_filter_location = {
    &#39;items&#39;: {
        &amp;quot;prices&amp;quot;: {
            &amp;quot;locationGroupId&amp;quot;: {
                &amp;quot;operation&amp;quot;: &amp;quot;in&amp;quot;,
                &amp;quot;options&amp;quot;: [
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;data&amp;quot;,
                        &amp;quot;value&amp;quot;: location_group_ids
                    }
                ]
            }
        }
    }
}

location_items = client[&amp;quot;SoftLayer_Product_Package&amp;quot;].getItems(id=package_id, filter=object_filter_location)

# let&#39;s key by item id
items = {}

for standard_item in standard_items:
    for location_item in location_items:
        if location_item[&amp;quot;id&amp;quot;] == standard_item[&amp;quot;id&amp;quot;]:
            items[location_item[&amp;quot;id&amp;quot;]] = location_item
            break

    if standard_item[&amp;quot;id&amp;quot;] not in items:
        items[standard_item[&amp;quot;id&amp;quot;]] = standard_item


print(json.dumps(items, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find standard location pricing for a package</title>
      <link>https://softlayer.github.io/python/standard_pricing/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/standard_pricing/</guid>
      <description>&lt;p&gt;With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price&#34;&gt;SoftLayer_Product_Item_Price&lt;/a&gt; objects via the API. The following example shows how to get the Standard priceItemId for a package regardless of the location.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
import SoftLayer
import json

object_filter = {
    &#39;items&#39;: {
        &#39;prices&#39;: {
            &#39;locationGroupId&#39;: {
                &#39;operation&#39;: &#39;is null&#39;
            }
        }
    }
}

client = SoftLayer.Client()
items = client[&amp;quot;SoftLayer_Product_Package&amp;quot;].getItems(id=194, filter=object_filter)

print(json.dumps(items, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: April 11, 2016</title>
      <link>https://softlayer.github.io/release_notes/20160411/</link>
      <pubDate>Mon, 11 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20160411/</guid>
      <description>

&lt;h4 id=&#34;portal:85777ae8ba6274540c4293927990daf8&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;To align closer to the IBM Cloud user experience the portal interface color scheme and feel have been updated. All functionality has remained in place.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:85777ae8ba6274540c4293927990daf8&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend:85777ae8ba6274540c4293927990daf8&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved an issue what was preventing upgrades of Network Gateway Devices in to a High Availability Pair.&lt;/li&gt;
&lt;li&gt;Added functionality to alert users via email when the email account or password is changed for their portal user.&lt;/li&gt;
&lt;li&gt;To speed up provisioning times and remove the need for manual intervention a function was implemented to pair a Raid Card when an order contains an SSD or SAS Drive during the provision process.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: April 4, 2016</title>
      <link>https://softlayer.github.io/release_notes/20160404/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20160404/</guid>
      <description>

&lt;h4 id=&#34;portal:460e5c802b9ca2a2382b95392cadb303&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue in which a ticket was unable to be updated if there was special text in the ticket update.&lt;/li&gt;
&lt;li&gt;Resolved an issue where the order forms were not loading properly for non-English languages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:460e5c802b9ca2a2382b95392cadb303&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved an issue where the description for &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getObject&#34;&gt;SoftLayer_Metric_Tracking_Object::getObject&lt;/a&gt; was not appearing on SLDN or API metadata.&lt;/li&gt;
&lt;li&gt;Resolved an issue in which creating a Bare Metal server via &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Hardware/createObject&#34;&gt;SoftLayer_Hardware::createObject&lt;/a&gt; was setting the RAM value to 0GB.&lt;/li&gt;
&lt;li&gt;Resolved an issue with &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Search/search&#34;&gt;SoftLayer_Search::search&lt;/a&gt; not returning the same results as &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch&#34;&gt;SoftLayer_Search::advancedSearch&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/createSnapshot&#34;&gt;createSnapshot&lt;/a&gt; method to Endurance storage volumes to enable manual snapshots to be created via API.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend:460e5c802b9ca2a2382b95392cadb303&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Updated code so that ticket updates no longer send duplicate emails if two subscribers/users exist with the same email address.&lt;/li&gt;
&lt;li&gt;Updated the logic on &lt;a href=&#34;http://www.softlayer.com/bare-metal-search&#34;&gt;http://www.softlayer.com/bare-metal-search&lt;/a&gt; so that when you choose a Bare Metal server the subsequent page will only show Datacenters in which that configuration is avilable.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: March 28, 2016</title>
      <link>https://softlayer.github.io/release_notes/20160328/</link>
      <pubDate>Mon, 28 Mar 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20160328/</guid>
      <description>

&lt;h4 id=&#34;portal:1081b0aac7560b053b9bd4652a2c481d&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue that was preventing customers from properly saving modifications on existing quotes from the Customer portal.&lt;/li&gt;
&lt;li&gt;Fixed a bug that was causing slow response on the ordering checkout page.&lt;/li&gt;
&lt;li&gt;Resolved an issue that was affecting upgrading a Vyatta to an High Availability pair.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:1081b0aac7560b053b9bd4652a2c481d&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend:1081b0aac7560b053b9bd4652a2c481d&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Enable Order support for Account Defined Networking Virtual Guests.&lt;/li&gt;
&lt;li&gt;Resolved an issue that caused snapshot space threshold alerts to repeatedly update tickets with the same information.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>