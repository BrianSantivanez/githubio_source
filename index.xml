<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>SoftLayer API on SoftLayer API </title>
    <link>https://softlayer.github.io/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Fri, 24 Aug 2018 00:00:00 UTC</updated>
    
    <item>
      <title>Release notes: August 24, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180824/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180824/</guid>
      <description>

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix bug that allows SL customer to change password via direct soap request without providing appropriate security question parameters.&lt;/li&gt;
&lt;li&gt;API orders from quote now properly validate the quote status&lt;/li&gt;
&lt;li&gt;Refactors and updates the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_Storage_Backup_Evault/getWebCCAuthenticationDetails/&#34;&gt;getWebCcAuthenticationDetails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disabled auto registration of a subnet during subnet assignment.
SoftLayer_Network_Subnet_Registration::createObject will validate the detailReferences(SoftLayer_Network_Subnet_Registration_Details), and network properties to better detect and error on conflicts.
SoftLayer_Network_Subnet_Registration::createObjects was added to enable creation of multiple registrations for the provided detailReferences(SoftLayer_Network_Subnet_Registration_Details).
Updated documentation for both endpoints.&lt;/li&gt;
&lt;li&gt;add a SUSPENDED_BILLING attribute on SoftLayer_Virtual_Guest_Attribute_Type so that customers can identify a suspendable VSI&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Enable upgrades / downgrades for Dedicated Host Instances w/ GPUs&lt;/li&gt;
&lt;li&gt;Add new updated software description vendor product codes for Veeam via migration.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Exception Handling in the SoftLayer API</title>
      <link>https://softlayer.github.io/article/exception-handling-softlayer-api/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/article/exception-handling-softlayer-api/</guid>
      <description>

&lt;p&gt;Like any programming interface the SoftLayer API at times needs to return error messages to its users. The SoftLayer API brings these exceptions forward to the user so their application can handle the unexpected result. Exceptions are returned as SOAP, REST, or XML-RPC faults depending on the RPC method used to execute your API method call. Programming and scripting languages with SOAP and XML-RPC support usually have built-in methods for handling faults.&lt;/p&gt;

&lt;h2 id=&#34;exceptions-by-endpoint&#34;&gt;Exceptions by Endpoint&lt;/h2&gt;

&lt;h4 id=&#34;soap-style-exceptions&#34;&gt;SOAP Style Exceptions&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;xml&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;SOAP-ENV:Fault&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;faultcode&amp;gt;&lt;/span&gt;MY_FAULT_CODE&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/faultcode&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;faultstring&amp;gt;&lt;/span&gt;MY_EXCEPTION&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/faultstring&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/SOAP-ENV:Fault&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/xml&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;xml-rpc-style-exceptions&#34;&gt;XML-RPC Style Exceptions&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;xml&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;methodResponse&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;fault&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;struct&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;member&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;faultCode&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;int&amp;gt;&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/int&amp;gt;&lt;/span&gt;
                     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
                 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/member&amp;gt;&lt;/span&gt;
                 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;member&amp;gt;&lt;/span&gt;
                     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;faultString&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
                     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
                         &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;MY_EXCEPTION&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
                 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/member&amp;gt;&lt;/span&gt;
             &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/struct&amp;gt;&lt;/span&gt;
         &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/fault&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/methodResponse&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/xml&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;rest-style-exceptions&#34;&gt;REST Style Exceptions&lt;/h4&gt;

&lt;p&gt;Rest API calls can have the results returned as XML, or JSON, depending on how you end your api call.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/BlockDeviceTemplateGroups1.xml:&#34;&gt;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/BlockDeviceTemplateGroups1.xml:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;root&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;error&amp;gt;&lt;/span&gt;Function (&amp;amp;quot;BlockDeviceTemplateGroups1&amp;amp;quot;) is not a valid method for this service.&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/error&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;code&amp;gt;&lt;/span&gt;SoftLayer_Exception_Public&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/code&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/BlockDeviceTemplateGroups1.json:&#34;&gt;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/BlockDeviceTemplateGroups1.json:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&amp;lt;json&amp;gt;
{
    &amp;#34;code&amp;#34;: &amp;#34;SoftLayer_Exception_Public&amp;#34;,
    &amp;#34;error&amp;#34;: &amp;#34;Function (\&amp;#34;BlockDeviceTemplateGroups1\&amp;#34;) is not a valid method for this service.&amp;#34;
}
&amp;lt;/json&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Method calls are halted if exceptions are encountered during their execution.  The specialized exceptions that a method can throw are listed on that method&amp;rsquo;s manual page.&lt;/p&gt;

&lt;h2 id=&#34;common-exceptions&#34;&gt;Common Exceptions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;SoftLayer_Exception_Public
This is the base exception class, and most exceptions will fall into this code. Generally you will need to read the error code to understand what exactly went wrong.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;{&amp;quot;error&amp;quot;:&amp;quot;Access Denied. &amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_Public&amp;quot;}&lt;/code&gt;
Check your username and API key to make sure they are still valid.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{&amp;quot;error&amp;quot;:&amp;quot;Internal Error&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_Public&amp;quot;}&lt;/code&gt;
Generally this indicates you are requesting too much data. Try limiting your objectMask to only the local and relational properties you need, or use a resultLimit.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SoftLayer_Exception_InvalidValue
&lt;code&gt;{&amp;quot;error&amp;quot;: The character @ must appear once and only once in an email address.&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_InvalidValue&amp;quot;}&lt;/code&gt;
Check the methods manual page to make sure the data you are sending matches the type expected.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;SoftLayer_Exception_ObjectNotFound
&lt;code&gt;{&amp;quot;error&amp;quot;:&amp;quot;Unable to find object with id of &#39;1&#39;.&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_ObjectNotFound&amp;quot;}&lt;/code&gt;
Either the ID you are looking for doesn&amp;rsquo;t exist, or you don&amp;rsquo;t have access to it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;SoftLayer_Exception_WebService_BadRequest
&lt;code&gt;{&amp;quot;error&amp;quot;:&amp;quot;Bad request&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_WebService_BadRequest&amp;quot;}&lt;/code&gt;
The API endpoint wasn&amp;rsquo;t able to figure out your request. Could be the result of trying to POST to a method that only accepts GET requests, or some other badly formed data.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: August 15, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180815/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180815/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Pre-select the first host in the Dedicated Hosts table when ordering a DH.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Correct validation when creating a quote&lt;/li&gt;
&lt;li&gt;Event logs for 2FA status change&lt;/li&gt;
&lt;li&gt;Adding the ability for customers to delete tags.&lt;/li&gt;
&lt;li&gt;Add check for SOAP request call to prevent commit in customer&amp;rsquo;s removeSecurityAnswers method.&lt;/li&gt;
&lt;li&gt;Added ability to filter Event_Logs based on username
&lt;code&gt;
https://api.softlayer.com/rest/v3.1/SoftLayer_Event_Log/getAllObjects.json?
resultLimit=0,100&amp;amp;
objectFilter={&amp;quot;eventName&amp;quot;:{&amp;quot;operation&amp;quot;:&amp;quot;Permission/Resource change&amp;quot;}, &amp;quot;label&amp;quot;:{&amp;quot;operation&amp;quot;:&amp;quot;sl205-mb-test02&amp;quot;}}
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fix bug to not allow editing of &amp;lsquo;name&amp;rsquo; and &amp;lsquo;category&amp;rsquo; in &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_Gateway/editObject/&#34;&gt;SoftLayer_Network_Gateway&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Removed FORUM_PASSWORD  from SoftLayer_User_Customer&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix issue where disk controller limits were incorrectly enforced on bare metal orders.&lt;/li&gt;
&lt;li&gt;Performance improvement when fetching tax calculations.&lt;/li&gt;
&lt;li&gt;Firewall names longer than 255 characters will be truncated to 255 characters.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Creating an Object Storage instance</title>
      <link>https://softlayer.github.io/article/create-object-storage/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/article/create-object-storage/</guid>
      <description>

&lt;h2 id=&#34;create-an-object-storage-instance&#34;&gt;Create an Object Storage Instance&lt;/h2&gt;

&lt;p&gt;This tutorial walks you through creating a IBM Cloud Object Storage instance.&lt;/p&gt;

&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create an object storage instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;services-used&#34;&gt;Services used&lt;/h2&gt;

&lt;p&gt;This tutorial uses the following technologies:
* &lt;a href=&#34;https://console.bluemix.net/docs/cli/index.html#overview&#34;&gt;ibmcloud&lt;/a&gt; IBM Cloud CLI&lt;/p&gt;

&lt;p&gt;This tutorial may incur costs. Use the &lt;a href=&#34;https://console.bluemix.net/pricing/&#34;&gt;Pricing Calculator&lt;/a&gt; to generate a cost estimate based on your projected usage.&lt;/p&gt;

&lt;h2 id=&#34;install-ibm-cloud-cli&#34;&gt;Install IBM Cloud CLI&lt;/h2&gt;

&lt;p&gt;To install the toolset, you can run the relevant command to start the installer. This installs the following recommended tools for {{site.data.keyword.Bluemix_notm}} development (if not already installed): Homebrew (Mac only), Git, Docker, Helm, kubectl, curl, {{site.data.keyword.Bluemix_notm}} CLI, {{site.data.keyword.dev_cli_notm}} plug-in, Cloud Functions plug-in, Container Registry plug-in, Container Service plug-in, and sdk-gen plug-in.&lt;/p&gt;

&lt;p&gt;Mac and Linux:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -sL https://ibm.biz/idt-installer | bash&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Windows 10:
    Note: Open Windows PowerShell by right-clicking the PowerShell icon and selecting &amp;ldquo;Run as Administrator&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;Set-ExecutionPolicy Unrestricted; iex(New-Object Net.WebClient).DownloadString(&amp;#39;http://ibm.biz/idt-win-installer&amp;#39;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify Installation&lt;/p&gt;

&lt;p&gt;To verify installation, run the help command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;ibmcloud dev help&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If installation was successful, the output should list usage instructions, the current version, and supported commands.&lt;/p&gt;

&lt;h2 id=&#34;authenticate&#34;&gt;Authenticate&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;ibmcloud login&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;create-cloud-object-storage-instance&#34;&gt;Create Cloud Object Storage instance&lt;/h2&gt;

&lt;p&gt;(&lt;a href=&#34;https://console.bluemix.net/docs/services/cloud-object-storage/basics/developers.html#for-developers&#34;&gt;https://console.bluemix.net/docs/services/cloud-object-storage/basics/developers.html#for-developers&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&amp;gt; ibmcloud resource service-instance-create &amp;lt;instance-name&amp;gt; cloud-object-storage &amp;lt;plan&amp;gt; global&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;check-for-the-newly-provisioned-service&#34;&gt;Check for the newly provisioned service&lt;/h2&gt;

&lt;p&gt;You should now see the new object storage instance.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;ibmcloud resource service-instances&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;create-a-bucket&#34;&gt;Create a bucket&lt;/h2&gt;

&lt;p&gt;Now that you have a service instance up and running, you can create a new bucket to store all future files to be uploaded to.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -X PUT &amp;#34;https://s3-api.us-geo.objectstorage.softlayer.net/&amp;lt;bucketname&amp;gt;&amp;#34; -H &amp;#34;Authorization: Bearer &amp;lt;token&amp;gt;&amp;#34; -H &amp;#34;ibm-service-instance-id: &amp;lt;instance-id&amp;gt;&amp;#34;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;list-buckets&#34;&gt;List buckets&lt;/h2&gt;

&lt;p&gt;You should now see the newly added bucket listed using the command below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl &amp;#34;https://s3-api.us-geo.objectstorage.softlayer.net&amp;#34; -H &amp;#34;Authorization: Bearer &amp;lt;token&amp;gt;&amp;#34; -H &amp;#34;ibm-service-instance-id: &amp;lt;instance-id&amp;gt;&amp;#34;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;further-documentation-for-more-expanded-use-of-object-storage-commands&#34;&gt;Further documentation for more expanded use of object storage commands&lt;/h2&gt;

&lt;p&gt;[](&lt;a href=&#34;https://console.bluemix.net/docs/services/cloud-object-storage/cli/curl.html&#34;&gt;https://console.bluemix.net/docs/services/cloud-object-storage/cli/curl.html&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Add second disk on flavor vsi</title>
      <link>https://softlayer.github.io/python/vsi_flavor_add_second_disk/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/vsi_flavor_add_second_disk/</guid>
      <description>&lt;p&gt;The example retrieves the packageId and presetId whit which the device was ordered, change the presetId if you wants to add the second disk and upgrade the CPU, RAM, or First Disk.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;example&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self):        
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
    
    &lt;span style=&#34;color:#75715e&#34;&gt;# Retrieve the packageId and presetId with which the device was ordered&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# and set them in the orderData&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setPackageAndPreset&lt;/span&gt;(self, guestId):
        mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id,orderItem[package,presetId]]&amp;#34;&lt;/span&gt;

        item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getBillingItem(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;guestId, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)
        
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;packageId&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderItem&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;presetId&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderItem&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;presetId&amp;#39;&lt;/span&gt;]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addSecondDisk&lt;/span&gt;(self, guestId, priceId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, note&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NOW&amp;#34;&lt;/span&gt;):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setPackageAndPreset(guestId)
        
        prices &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: priceId,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;: [{
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;categoryCode&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;guest_disk1&amp;#39;&lt;/span&gt;,    &lt;span style=&#34;color:#75715e&#34;&gt;#second disk&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complexType&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Product_Item_Category&amp;#39;&lt;/span&gt;
            }],
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complexType&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Product_Item_Price&amp;#39;&lt;/span&gt;
        }]

        &lt;span style=&#34;color:#75715e&#34;&gt;# Build a skeleton SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade object&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# containing the upgrade you wish to place.&lt;/span&gt;
        properties &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
            {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NOTE_GENERAL&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: note
            },   
            {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MAINTENANCE_WINDOW&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: date
            }
        ]

        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: guestId}]
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prices&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prices
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;properties&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; properties
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complexType&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade&amp;#39;&lt;/span&gt;
        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Use verifyOrder method to test that your upgrade is fine and
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            when you are ready you can call the placeOrder method.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
            result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verifyOrder(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(result, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            If there was an error returned from the SoftLayer API then bomb out with the
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            error message.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to upgrade VSI faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:    
    &lt;span style=&#34;color:#75715e&#34;&gt;# ID of virtual guest you want to add a second disk&lt;/span&gt;
    guestID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;58670025&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# The price id of disk you want to add as second disk. To get prices&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# you can call the SoftLayer_Virtual_Guest::getUpgradeItemPrices method&lt;/span&gt;
    priceID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;204661&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;# 100 GB (LOCAL)&lt;/span&gt;

    note &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adding second disk&amp;#34;&lt;/span&gt;
    date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NOW&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# Start the script&lt;/span&gt;
    main &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; example()
    
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addSecondDisk(guestID, priceId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;priceID, note&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;note, date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;date)    &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Manage Users</title>
      <link>https://softlayer.github.io/python/manageUsers/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/manageUsers/</guid>
      <description>

&lt;p&gt;This example is a set of scripts I&amp;rsquo;ve used for creating and disabling users. This will ONLY create SoftLayer users, and does not work for Bluemix/IbmCloud type accounts.&lt;/p&gt;

&lt;p&gt;Some of this functionality is also in the &lt;a href=&#34;https://softlayer-python.readthedocs.io/en/latest/cli/users.html&#34;&gt;SLCLI&lt;/a&gt; now.&lt;/p&gt;

&lt;h2 id=&#34;create-users&#34;&gt;Create Users&lt;/h2&gt;

&lt;p&gt;Creates a user, sets up proper permissions, sets up devices access restrictions, creates API keys and orders the user a server.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer.API
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_user&lt;/span&gt;(username, password):
    user_template &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;: username,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;firstName&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;API&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lastName&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Learner&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;email&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;someone@somewhere.com&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;companyName&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IBM&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address1&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;123 api road&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;city&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Houston&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;country&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;US&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;postalCode&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TX 77002&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;userStatusId&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1001&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;timezoneId&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;107&lt;/span&gt;
    }
    created_user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;createObject(
        user_template,
        password,
        password)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; created_user

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_permissions&lt;/span&gt;(_id):
    permissions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getPermissions(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_id)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; permissions

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;set_permissions&lt;/span&gt;(_id, permissions):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    To get permissions correct, I take the existing permissions of a user
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    that I already have, and set my new user&amp;#39;s permissions to be the same
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    with addBulkPortalPermission
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addBulkPortalPermission(
        permissions, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_id)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fix_permissions&lt;/span&gt;(user,permissions):
    &lt;span style=&#34;color:#75715e&#34;&gt;# I only want users to have access to this one host&lt;/span&gt;
    virtualGuestId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;22334455&lt;/span&gt;
    t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
    set_permissions(user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], permissions)
    client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;removeAllVirtualAccessForThisUser(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;t)
    client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;removeAllHardwareAccessForThisUser(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;t)
    client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addApiAuthenticationKey(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;t)
    client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addVirtualGuestAccess(virtualGuestId,id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;t)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;orderUserServer&lt;/span&gt;(user, apiKey):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Orders a server as the newly created user. 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    hostname &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-lab-server&amp;#34;&lt;/span&gt;
    guest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;startCpus&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;maxMemory&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localDiskFlag&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hostname
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domain&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.lablayer.info&amp;#34;&lt;/span&gt;
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hourlyBillingFlag&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tok02&amp;#39;&lt;/span&gt;
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blockDeviceTemplateGroup&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;globalIdentifier&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6c64f59a-edeb-4ba4-b992-d04972597357&amp;#34;&lt;/span&gt;}
    userClient &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client(
        username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user,
        api_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; apiKey )
    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; userClient[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;createObject(guest)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Added server id: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ( &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; )&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (result[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;],result[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fullyQualifiedDomainName&amp;#39;&lt;/span&gt;]) 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
   

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; argparse
    argsparse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ArgumentParser(description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Number of users&amp;#39;&lt;/span&gt;)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--num-users&amp;#39;&lt;/span&gt;, dest&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;num_users&amp;#39;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;int,
                           help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Number of users to provision.&amp;#39;&lt;/span&gt;)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--offset&amp;#39;&lt;/span&gt;, dest&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;offset&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;int,
                           default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Username offset&amp;#39;&lt;/span&gt;)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--prefix&amp;#39;&lt;/span&gt;,
                           help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Username prefix&amp;#39;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)
    args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse_args()

    &lt;span style=&#34;color:#75715e&#34;&gt;##### CHANGE THESE ##########&lt;/span&gt;
    template_user_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123456&lt;/span&gt;
    password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;APAsswordGoes!!!H3r3&amp;#39;&lt;/span&gt; 

    client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
    
    userPerms &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getPermissions(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;template_user_id)
   
    start_user_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;offset

    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;num_users):
        target_username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prefix,start_user_num)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            new_user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; create_user(target_username,password)
            fix_permissions(new_user,userPerms)
            client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addApiAuthenticationKey(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;new_user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exceptions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; error:
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            If the user already exists, an exception is thrown. 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Just reset their permissions and continue on.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
            oFilter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
            oFilter[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
            oFilter[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
            oFilter[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; target_username
            new_user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getUsers(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;oFilter)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
            fix_permissions(new_user,userPerms)

        newApiKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getApiAuthenticationKeys(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;new_user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (newApiKey[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;])
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;api_key =  &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (newApiKey[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;authenticationKey&amp;#39;&lt;/span&gt;])
        orderUserServer(newApiKey[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;],newApiKey[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;authenticationKey&amp;#39;&lt;/span&gt;])
        start_user_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start_user_num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;disable-users&#34;&gt;Disable Users&lt;/h2&gt;

&lt;p&gt;Disable user, changes their password, cancels their servers, and removes any sshKeys&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer.API
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_target_users&lt;/span&gt;(prefix):
    _filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*= &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (prefix)
            }
        }
    }
    _mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id,username]&amp;#34;&lt;/span&gt;
    _users &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getUsers(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_filter, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_mask)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; _users

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_target_keys&lt;/span&gt;(prefix):
    _filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshKeys&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*= &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (prefix)
            }
        }
    }

    _mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id,label]&amp;#34;&lt;/span&gt;
    _users &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getSshKeys(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_filter, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_mask)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; _users

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print_result&lt;/span&gt;(result, thing):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; True:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: &amp;#34;&lt;/span&gt;
        pp(thing)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; argparse
    argsparse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ArgumentParser(description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Number of users&amp;#39;&lt;/span&gt;)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--prefix&amp;#39;&lt;/span&gt;,
                           help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Username prefix&amp;#39;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--password&amp;#39;&lt;/span&gt;,
                           help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;New Password&amp;#39;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)
 
    args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse_args()

    client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
  
    users &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_target_users(args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prefix)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; user &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; users:
        password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;password
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Password: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; password 
        &lt;span style=&#34;color:#75715e&#34;&gt;# status 1021 disables the user&lt;/span&gt;
        template &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;],
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;userStatusId&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1021&lt;/span&gt;
        }

        &lt;span style=&#34;color:#75715e&#34;&gt;# Cancel any servers the user created&lt;/span&gt;
        servers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getVirtualGuests(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; virt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; servers: 
            &lt;span style=&#34;color:#75715e&#34;&gt;# the &amp;#34;,&amp;#34; and the end of print removes the automatic newline&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Canceling host... &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; virt[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fullyQualifiedDomainName&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(virt[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;),
            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deleteObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;virt[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
                print_result(result,virt)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exceptions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; error:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Exception, host might already be canceling...&amp;#34;&lt;/span&gt;)
                pp(error)

        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Changing password for...&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;),
        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;updatePassword(password, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
        print_result(result,user)
 
    sshkeys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_target_keys(args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prefix)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SSH Key Removal&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sshkeys:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deleting key... &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; key[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(key[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;),
        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Security_Ssh_Key&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deleteObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;key[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
        print_result(result,key)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Complete&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release notes: August 8, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180808/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180808/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue in the Bluemix control portal rendering the wrong template when an order failed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix incorrect totals calculation when using the getCurrentBillingTotal service methods on guests, hardware, and dedicated hosts.&lt;/li&gt;
&lt;li&gt;Exposing Device model through SLDN for a device that is assigned to a mass data migration request.&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_Gateway/getCapacity&#34;&gt;SoftLayer_Network_Gateway::getCapacity()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added CUSTOMER_EXTERNAL_BINDING_ACTIVATE and CUSTOMER_EXTERNAL_BINDING_DEACTIVATE SoftLayer_Event_Log_Type&lt;/li&gt;
&lt;li&gt;Added validation around name field when creating brands through the API&lt;/li&gt;
&lt;li&gt;Added API/Class called SoftLayer_Network_Gateway_Member_Attribute&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Restore ability to cancel global IP addresses&lt;/li&gt;
&lt;li&gt;Fixed an issue where users were unable to create federated user by SAML authentication if the &amp;ldquo;sn&amp;rdquo; and &amp;ldquo;givenName&amp;rdquo; are long&lt;/li&gt;
&lt;li&gt;Added more verbose metadata information on some eventlog entries&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Single Account Billing Detail</title>
      <link>https://softlayer.github.io/article/single-account-billing-detail/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/article/single-account-billing-detail/</guid>
      <description>

&lt;h1 id=&#34;account-level-billing&#34;&gt;Account Level Billing&lt;/h1&gt;

&lt;p&gt;This tutorial walks you through accessing detailed billing data for a single specified account using a specified time and date range.&lt;/p&gt;

&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Understand how to use multiple API services and methods to access detailed billing data for a specified account using a specified time and date range.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;services-used&#34;&gt;Services used&lt;/h2&gt;

&lt;p&gt;This tutorial uses the following technologies:
* &lt;a href=&#34;http://softlayer-python.readthedocs.io/en/latest/&#34;&gt;SoftLayer Python Library&lt;/a&gt;
* &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice/&#34;&gt;Billing_Invoice Service&lt;/a&gt;
* &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice_Item/&#34;&gt;Billing_Invoice_Item Service&lt;/a&gt;
* &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Item/&#34;&gt;Billing_item Service&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;/h2&gt;

&lt;p&gt;This tutorial will leverage account Invoice and Billing Item API&amp;rsquo;s to collect and display detailed billing detail for a specified time and date range.&lt;/p&gt;

&lt;h2 id=&#34;install-softlayer-python-library&#34;&gt;Install SoftLayer Python Library&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/softlayer/softlayer-python/blob/master/README.rst&#34;&gt;SoftLayer API Python Client Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;identify-and-access-invoices-for-specified-date-range&#34;&gt;Identify and access invoices for specified date range&lt;/h2&gt;

&lt;p&gt;Start by accessing invoices using the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Account/getInvoices/&#34;&gt;getInvoices&lt;/a&gt; method for specified account using the invoice type and date range filter.&lt;/p&gt;

&lt;p&gt;Their are several types of invoices which can be requested, for this example the typical type would be the &amp;ldquo;RECURRING&amp;rdquo; type, which includes all the monthly recurring and hourly usage charges incurred by the specified account.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;NEW&amp;rdquo; typeCode signifies an invoice for new service.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;RECURRING&amp;rdquo; invoices are generated on an accounts anniversary billing date for monthly services.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;ONE-TIME-CHARGE&amp;rdquo; invoices are generated when one-time charges are applied to an account.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;CREDIT&amp;rdquo; invoices are generated whenever IBM applies a credit against an account&amp;rsquo;s balance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The date and time range is specified using the format of &amp;ldquo;YYYY/MM/DD HH:MM:SS&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;InvoiceList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getInvoices(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoices&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;createDate&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;betweenDate&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;options&amp;#39;&lt;/span&gt;: [
                     {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;startDate&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: [startdate&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; 0:0:0&amp;#34;&lt;/span&gt;]},
                     {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;endDate&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: [enddate&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; 23:59:59&amp;#34;&lt;/span&gt;]}
                ]
            },
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;typeCode&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;in&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;options&amp;#39;&lt;/span&gt;: [
                    {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RECURRING&amp;#39;&lt;/span&gt;]}
                ]
            },
            }})  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;access-invoice-detail&#34;&gt;Access invoice detail&lt;/h2&gt;

&lt;p&gt;Using the list of invoices returned, use the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice/getInvoiceTopLevelItems/&#34;&gt;getInvoiceTopLevelItems&lt;/a&gt; method from the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice&#34;&gt;Billing_Invoice&lt;/a&gt; class to obtain the list of top level items being billed on the invoice specified.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;topLevelItems &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getInvoiceTopLevelItems(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoiceId)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;access-sub-item-details&#34;&gt;Access sub item details&lt;/h2&gt;

&lt;p&gt;If additional billing detail is desired, many items have associated children which have billing details associated with them such as memory, storage, or disk.   To access, the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice_Item/getNonZeroAssociatedChildren&#34;&gt;getNonZeroAssociatedChildren&lt;/a&gt; method in the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice_Item&#34;&gt;Billing_Invoice_Item&lt;/a&gt; class is used by passing the id received from the getInvoiceTopLevelItems call.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;nonZeroAssociatedChildren &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice_Item&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getNonZeroAssociatedChildren(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;topLevelItemId)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;sample-script&#34;&gt;Sample script&lt;/h2&gt;

&lt;p&gt;The following sample script creates a .csv file of all the billing level detail for an account.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; configparser&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; argparse&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; csv&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;logging&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;time

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getDescription&lt;/span&gt;(categoryCode, detail):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; detail:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;categoryCode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; item:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;categoryCode&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;categoryCode:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()

startDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-07-01T00:00:00&amp;#39;&lt;/span&gt;
endDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-07-31T23:59:59&amp;#39;&lt;/span&gt;
outputname &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;billing-export.csv&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# GET LIST OF INVOICES&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;

outfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(outputname, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;)
csvwriter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;writer(outfile, delimiter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, quotechar&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;, quoting&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;QUOTE_ALL)

fieldnames &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Invoice_Date&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Invoice_Number&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BillingItemId&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InstanceType&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostName&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Category&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;,
             &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hours&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hourly_Rate&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RecurringCharge&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InvoiceTotal&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InvoiceRecurring&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Type&amp;#39;&lt;/span&gt;]
csvwriter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DictWriter(outfile, delimiter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, fieldnames&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fieldnames)
csvwriter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;writerow(dict((fn, fn) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; fn &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; fieldnames))

&lt;span style=&#34;color:#75715e&#34;&gt;## OPEN CSV FILE FOR OUTPUT&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Looking up invoices....&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Build Filter for Invoices&lt;/span&gt;
InvoiceList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getInvoices(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoices&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;createDate&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;betweenDate&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;options&amp;#39;&lt;/span&gt;: [
                     {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;startDate&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: [startdate&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; 0:0:0&amp;#34;&lt;/span&gt;]},
                     {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;endDate&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: [enddate&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; 23:59:59&amp;#34;&lt;/span&gt;]}

                ]
            },
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;typeCode&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;in&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;options&amp;#39;&lt;/span&gt;: [
                    {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RECURRING&amp;#39;&lt;/span&gt;]}
                ]
                },
                    }
        })


&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; ()
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:&amp;lt;35} {:&amp;lt;30} {:&amp;gt;8} {:&amp;gt;16} {:&amp;gt;16} {:&amp;gt;16} {:&amp;lt;15}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invoice Date /&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invoice Number /&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Items&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Recurring Charge&amp;#34;&lt;/span&gt;,  &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invoice Amount&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Type&amp;#34;&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:&amp;lt;35} {:&amp;lt;30} {:&amp;gt;8} {:&amp;gt;16} {:&amp;gt;16} {:&amp;gt;16} {:&amp;lt;15}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;==============&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;================&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=====&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;================&amp;#34;&lt;/span&gt;,  &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;==============&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;====&amp;#34;&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; invoice &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; InvoiceList:
    invoiceID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; invoice[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
    invoiceInfo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoiceID,mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id,createDate,typeCode,invoiceTotalAmount,invoiceTotalRecurringAmount,invoiceTopLevelItemCount&amp;#34;&lt;/span&gt;)
    invoiceDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;createDate&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]
    invoiceTotalAmount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoiceTotalAmount&amp;#39;&lt;/span&gt;])
    invoiceTotalRecurringAmount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoiceTotalRecurringAmount&amp;#39;&lt;/span&gt;])
    invoiceType &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;typeCode&amp;#39;&lt;/span&gt;]
    totalItems&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoiceTopLevelItemCount&amp;#39;&lt;/span&gt;]

    &lt;span style=&#34;color:#75715e&#34;&gt;# PRINT INVOICE SUMMARY LINE&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:35} {:&amp;lt;30} {:&amp;gt;8} {:&amp;gt;16} {:&amp;gt;16,.2f} {:&amp;gt;16,.2f} {:&amp;lt;15}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(invoiceDate,
                                                                          invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;,
                                                                          totalItems,
                                                                          invoiceTotalAmount,
                                                                          invoiceTotalRecurringAmount, invoiceType))

    limit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;## set limit of record t&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; offset &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,totalItems,limit):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lookup at Offset &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; offset)
        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        Billing_Invoice &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getInvoiceTopLevelItems(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoiceID, limit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;limit, offset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;offset,
                                mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id, billingItemId, categoryCode, hostName, domainName, description, createDate, totalRecurringAmount,hourlyRecurringFee&amp;#39;&lt;/span&gt;)
        count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# ITERATE THROUGH DETAIL&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; Billing_Invoice:
            billingItemId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;billingItemId&amp;#39;&lt;/span&gt;]
            category &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;]

            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostName&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; item:
                hostName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostName&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domainName&amp;#39;&lt;/span&gt;]
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                hostName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unnamed Device&amp;#34;&lt;/span&gt;

            recurringFee &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;totalRecurringAmount&amp;#39;&lt;/span&gt;])

            &lt;span style=&#34;color:#75715e&#34;&gt;#IF Monthly calculate hourly rate and total hours&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hourlyRecurringFee&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; item:
                instanceType &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hourly&amp;#34;&lt;/span&gt;
                associated_children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; associated_children &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;:
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
                        associated_children &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice_Item&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getNonZeroAssociatedChildren(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;],mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hourlyRecurringFee&amp;#34;&lt;/span&gt;)
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
                        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;warning(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;getNonZeroAssociatedChildren(): &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))
                        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
                &lt;span style=&#34;color:#75715e&#34;&gt;#calculate total hourlyRecurringFree from associated childrent&lt;/span&gt;

                hourlyRecurringFee &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hourlyRecurringFee&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sum(float(child[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hourlyRecurringFee&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; child &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; associated_children)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; hourlyRecurringFee &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
                    hours &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; round(float(recurringFee) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; hourlyRecurringFee)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                    hours&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                instanceType &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Monthly/Other&amp;#34;&lt;/span&gt;
                hourlyRecurringFee &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
                hours &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; category&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;storage_service_enterprise&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; category&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;performance_storage_iscsi&amp;#34;&lt;/span&gt;:
                billing_detail&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; billing_detail &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;:
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
                        billing_detail &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice_Item&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getChildren(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description,categoryCode,product&amp;#34;&lt;/span&gt;)
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
                        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;warning(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))

                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; category&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;storage_service_enterprise&amp;#34;&lt;/span&gt;:
                    iops&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;storage_tier_level&amp;#34;&lt;/span&gt;, billing_detail)
                    storage&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;performance_storage_space&amp;#34;&lt;/span&gt;,billing_detail)
                    snapshot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;storage_snapshot_space&amp;#34;&lt;/span&gt;, billing_detail)
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; snapshot&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;:
                        description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;storage&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;iops&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                        description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;storage&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;iops&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; with &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;snapshot
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                    iops&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;performance_storage_iops&amp;#34;&lt;/span&gt;, billing_detail)
                    storage&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;performance_storage_space&amp;#34;&lt;/span&gt;, billing_detail)
                    description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;storage&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;iops
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;]
                description &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; description&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#75715e&#34;&gt;# BUILD CSV OUTPUT &amp;amp; WRITE ROW&lt;/span&gt;
            row &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Invoice_Date&amp;#39;&lt;/span&gt;: invoiceDate,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Invoice_Number&amp;#39;&lt;/span&gt;: invoiceID,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BillingItemId&amp;#39;&lt;/span&gt;: billingItemId,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InstanceType&amp;#39;&lt;/span&gt;: instanceType,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostName&amp;#39;&lt;/span&gt;: hostName,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Category&amp;#39;&lt;/span&gt;: category,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;: description,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hours&amp;#39;&lt;/span&gt;: hours,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hourly_Rate&amp;#39;&lt;/span&gt;: round(hourlyRecurringFee,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RecurringCharge&amp;#39;&lt;/span&gt;: round(recurringFee,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InvoiceTotal&amp;#39;&lt;/span&gt;: invoiceTotalAmount,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InvoiceRecurring&amp;#39;&lt;/span&gt;: invoiceTotalRecurringAmount,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Type&amp;#39;&lt;/span&gt;: invoiceType
                    }
            csvwriter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;writerow(row)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(row)
&lt;span style=&#34;color:#75715e&#34;&gt;##close CSV File&lt;/span&gt;
outfile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Advanced Quote Ordering</title>
      <link>https://softlayer.github.io/python/order_quote_advanced/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/order_quote_advanced/</guid>
      <description>

&lt;h2 id=&#34;quotes&#34;&gt;Quotes&lt;/h2&gt;

&lt;p&gt;Quotes are a way to save an order, and then easily duplicate the order later. You can create a quote from the control portal by going through the normal order process, and then instead of hitting &amp;ldquo;Order&amp;rdquo; at the end, there will be a button that says &amp;ldquo;Save Quote&amp;rdquo;, which will save the order for later. You can then use the quote service to pull down the information about it from the API. &lt;code&gt;listQuotes&lt;/code&gt; in the example below does exactly this.&lt;/p&gt;

&lt;p&gt;To order from a quote you will need the following bits of information
- Quote ID
- Datacenter ID where you want the order to end up
- Other bits of optional data, like SSH keys, vlan ids, image ids, etc.&lt;/p&gt;

&lt;h3 id=&#34;rest-api-call&#34;&gt;REST API Call&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;curl -u $SL_USER:$SL_APIKEY &#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/getActiveQuotes.json?objectMask=mask%5Border%5Bid%2C+orderTotalAmount%2C+orderTopLevelItems%5Bid%2C+description%5D%5D%2C+ordersFromQuoteCount%5D&#39;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;python-output&#34;&gt;Python Output&lt;/h3&gt;

&lt;p&gt;The sample code will output something like this. Quotes can be PENDING, which means they might expire if you don&amp;rsquo;t call &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Order_Quote/saveQuote/&#34;&gt;SoftLayer_Billing_Order_Quote::saveQuote(id=quoteId)&lt;/a&gt; before its expiration date. SAVED quotes will stick around until you call &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Order_Quote/deleteQuote/&#34;&gt;SoftLayer_Billing_Order_Quote::deleteQuote(id=quoteId)&lt;/a&gt;
The quoteId in the first column is what will be used for placing the order. Description is just the topLevelBillingItem for the quote.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;ID, createDate, name, status, order count, description
&lt;span style=&#34;color:#ae81ff&#34;&gt;2460465&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;-07-23T14:20:59-06:00, Ruber, SAVED, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, Single Intel Xeon E3-1270 v3 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; Cores, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;.50 GHz&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;2457385&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;-07-17T14:23:54-06:00, AJCB-TESTWITHSSHKEYS, PENDING, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, Single Intel Xeon E3-1270 v3 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; Cores, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;.50 GHz&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1528487&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt;-09-25T15:37:27-06:00, test-quote, SAVED, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;.0 GHz Core&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;finding-the-dc-id&#34;&gt;Finding the DC id&lt;/h2&gt;

&lt;p&gt;Now we need to figure out which DC we want to place the order in.
The way we are going to do this, is by checking the quote&amp;rsquo;s top level item, and see what DCs that package is available in. Using &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Location/getDatacenters/&#34;&gt;SoftLayer_Location::getDatacenters()&lt;/a&gt; would show you all datacenters, and not all packages are available in all datacenters.&lt;/p&gt;

&lt;h3 id=&#34;rest-call&#34;&gt;REST Call&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Billing_Order_Quote/&amp;lt;QUOTEID&amp;gt;/getObject.json?objectMask=mask[id,+order[id,orderTopLevelItems[id,package[id,availableLocations[location[longName,id]]]]]]&#39;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listLocationsForQuote&lt;/span&gt;(self, quoteId):
    mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id, order[id, orderTopLevelItems[id, package[id, availableLocations[location[longName, id]]]]]]&amp;#34;&lt;/span&gt;
    locations &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Order_Quote&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;quoteId, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)
    
    package_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; locations[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderTopLevelItems&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Package {} is available in the following locations...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(package_id))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; dc &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; locations[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderTopLevelItems&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;availableLocations&amp;#39;&lt;/span&gt;]:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}, id={}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(dc[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longName&amp;#39;&lt;/span&gt;], dc[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;Package &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt; is available in the following locations...
Seattle &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;18171&lt;/span&gt;
Dallas &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;138124&lt;/span&gt;
Houston &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;142775&lt;/span&gt;
Dallas &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;142776&lt;/span&gt;
San Jose &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;168642&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;building-our-new-order&#34;&gt;Building our new order&lt;/h2&gt;

&lt;p&gt;Ok, now we have a quote, a dc, now we just need to build our order out.&lt;/p&gt;

&lt;h3 id=&#34;softlayer-billing-order-quote-getrecalculatedordercontainer-https-softlayer-github-io-reference-services-softlayer-billing-order-quote-getrecalculatedordercontainer&#34;&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Order_Quote/getRecalculatedOrderContainer/&#34;&gt;SoftLayer_Billing_Order_Quote::getRecalculatedOrderContainer()&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Billing_Order_Quote/&amp;lt;QUOTEID&amp;gt;/getRecalculatedOrderContainer.json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This function takes a quote, and returns an order container with all the proper price ids filled in, which are required to place the actual order.&lt;/p&gt;

&lt;p&gt;With this order container, all we need to do is fill out some extra information (basically anything that would be on the last page of the order form).&lt;/p&gt;

&lt;h3 id=&#34;order-containers-https-softlayer-github-io-reference-datatypes-softlayer-container-product-order&#34;&gt;&lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order/&#34;&gt;Order containers&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The object you send in to the placeOrder method, is going to be a SoftLayer_Container_Product_Order, or possibly one of its child classes, like &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server/&#34;&gt;Hardware_Server&lt;/a&gt; or &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest/&#34;&gt;Virtual_Guest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The only data you have to change here is the hostname and domain for your servers, the location, and the quantity.
&amp;gt;If you are ordering baremetal, you need to change container[&amp;lsquo;hardware&amp;rsquo;], if you are ordering virtual guests, you need to change container[&amp;lsquo;virtualGuests&amp;rsquo;]&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;guests &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;quotetest&amp;#39;&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domain&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example.com&amp;#39;&lt;/span&gt;
}
quote &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Order_Quote&amp;#39;&lt;/span&gt;]
quote_container &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; quote&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getRecalculatedOrderContainer(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;quote_id)
container &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; quote_container
container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complexType&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoftLayer_Container_Product_Order_Virtual_Guest&amp;#34;&lt;/span&gt;
container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;quantity&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(guests)
container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(guests)
container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dc_id&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;container[&#39;virtualGuests&#39;]&lt;/code&gt; array should have 1 entry for each server you want to order. Since I am ordering 2 servers, I appeneded 2 entries to the array.&lt;/p&gt;

&lt;h3 id=&#34;complex-types&#34;&gt;Complex Types&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;getRecalculatedOrderContainer&lt;/code&gt; will return a generic Container_Product_Order type, so you will need to specify the correct type to be able to actually place an order. Orders can occasionally work without specifying this complexType, but its better to be sure. There are quite a lot of container types, the full list can be found here: &lt;a href=&#34;https://softlayer.github.io/reference/softlayerapi/&#34;&gt;https://softlayer.github.io/reference/softlayerapi/&lt;/a&gt; , and search for &lt;code&gt;Container_Product_Order&lt;/code&gt; to see all the options.&lt;/p&gt;

&lt;p&gt;The most common are:
+ &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server&#34;&gt;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server&lt;/a&gt;
+ &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance&#34;&gt;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance&lt;/a&gt;
+ &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Network_LoadBalancer_AsAService&#34;&gt;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Network_LoadBalancer_AsAService&lt;/a&gt;
+ &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_AsAService&#34;&gt;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_AsAService&lt;/a&gt;
+ &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan&#34;&gt;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan&lt;/a&gt;
+ &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest&#34;&gt;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;ssh-keys&#34;&gt;SSH keys&lt;/h3&gt;

&lt;p&gt;To have SSH keys installed on a server at order time, we need to specify them in the [sshKeys]&lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_SshKeys/)&#34;&gt;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_SshKeys/)&lt;/a&gt; property. This property is at the container level, NOT the guest level, even though guests have a sshKey property.
This propety is an array of sshKeys, which itself is an array of ids. This means that there needs to be 1 array of keys per server you are ordering, and the order they are applied should match the order they are listed in the virtualGuests propety. &lt;code&gt;sshKeys[0] =&amp;gt; virtualGuests[0]&lt;/code&gt;, &lt;code&gt;sshKeys[1] =&amp;gt; virtualGuests[1]&lt;/code&gt; and so on.&lt;/p&gt;

&lt;p&gt;An sshKey itself should look like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;sshKey = {
    &amp;#39;sshKeyIds&amp;#39; : [1234, 456, 11111]
}
container[&amp;#39;sshKeys&amp;#39;].append(sshKey)
container[&amp;#39;sshKeys&amp;#39;].append(sshKey)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a bit combersome, but it does allow you the flexibility to order different sshKeys on different servers if you need to.&lt;/p&gt;

&lt;h3 id=&#34;post-provision-scripts&#34;&gt;Post Provision Scripts&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest/#provisionScripts&#34;&gt;provisionScripts&lt;/a&gt; are simply an array of strings (urls) to apply to each server in order. Like sshKeys, the order these provision scripts are listed match up with their virtualGuests. Each guest will only have 1 provision script run on it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Post provision scripts need to be HTTPS to be executed, HTTP scripts just get downloaded&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;scriptUrl = &amp;#39;https://somesite.com/script.sh&amp;#39;
container[&amp;#39;provisionScripts&amp;#39;] = [scriptUrl, scriptUrl]&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;vlans-and-subnets&#34;&gt;Vlans and Subnets&lt;/h3&gt;

&lt;p&gt;Vlans and Subnets need to be specified at the guest level, not the container level. You will also need the VLAN/Subnet ID, which is different than the vlan number which can be a bit confusing to new api users.&lt;/p&gt;

&lt;p&gt;Public Vlans and Public Subnets need to be added to the &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Virtual_Guest/#primaryNetworkComponent&#34;&gt;primaryNetworkComponent&lt;/a&gt;.
Private Vlans and Private Subnets need to be added to the &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Virtual_Guest/#primaryBackendNetworkComponent&#34;&gt;primaryBackendNetworkComponent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This example selects a specific VLAN for the primaryNetwork, and a specific Subnet for the primaryBackendNetwork. You can have both a specific vlan and specific network, assuming the subnet is already routed to the vlan you specified.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;guest = {
    &amp;#39;hostname&amp;#39;: &amp;#39;tester&amp;#39;,
    &amp;#39;domain&amp;#39;: &amp;#39;example.com&amp;#39;,
    &amp;#39;primaryNetworkComponent&amp;#39;: {
        &amp;#34;networkVlan&amp;#34;: {&amp;#34;id&amp;#34;: int(public_vlan)}},
    &amp;#34;primaryBackendNetworkComponent&amp;#34;: {
        &amp;#34;primarySubnet&amp;#34;: {&amp;#34;id&amp;#34;: int(private_subnet)}}

}&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;image-templates&#34;&gt;Image Templates&lt;/h3&gt;

&lt;p&gt;Instead of specifying a fresh operating system, you can have a server provisioned from a imageTemplate by specifying its ID.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;container[&amp;#39;imageTemplateId&amp;#39;] = image_id&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This ISN&amp;rsquo;T an array, so the imageTemplate here will get applied to all guests in the order.&lt;/p&gt;

&lt;h2 id=&#34;the-whole-script&#34;&gt;The Whole Script&lt;/h2&gt;

&lt;p&gt;This is the script I use when testing out bits of the ordering API, and hopefully it will be helpful in building your own way to order image templates.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;example&lt;/span&gt;():

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
        debugger &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DebugTransport(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transport)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transport &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; debugger

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;orderQuote&lt;/span&gt;(self, quote_id, dc_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None, image_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None, private_vlan &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None, public_vlan &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None):
        &lt;span style=&#34;color:#75715e&#34;&gt;# If you have more than 1 server in the quote, you will need to append&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# a copy of this for each VSI, with hostnames changed as needed&lt;/span&gt;
        guests &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;quotetest&amp;#39;&lt;/span&gt;, 
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domain&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example.com&amp;#39;&lt;/span&gt;
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; public_vlan:
            guests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update({
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;primaryNetworkComponent&amp;#39;&lt;/span&gt;: {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;networkVlan&amp;#34;&lt;/span&gt;: {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: int(public_vlan)}}})
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; private_vlan:
            guests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update({
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;primaryBackendNetworkComponent&amp;#34;&lt;/span&gt;: {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;networkVlan&amp;#34;&lt;/span&gt;: {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: int(private_vlan)}}})

        quote &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Order_Quote&amp;#39;&lt;/span&gt;]
        quote_container &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; quote&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getRecalculatedOrderContainer(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;quote_id)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;================= QUOTE CONTAINER =================&amp;#34;&lt;/span&gt;)
        pp(quote_container)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;================= QUOTE CONTAINER =================&amp;#34;&lt;/span&gt;)

        container &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; quote_container
        container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complexType&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoftLayer_Container_Product_Order_Virtual_Guest&amp;#34;&lt;/span&gt;
        container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;quantity&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
        container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(guests)
        container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(guests)

        &lt;span style=&#34;color:#75715e&#34;&gt;# container[&amp;#39;provisionScripts&amp;#39;] = [&amp;#39;https://gist.githubusercontent.com/myscript.py&amp;#39;]&lt;/span&gt;
        sshKeys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshKeyIds&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;395515&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;87634&lt;/span&gt;]}
        container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshKeys&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [sshKeys, sshKeys]

        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; image_id &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; None:
            container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;imageTemplateId&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; image_id

        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; dc_id &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; None:
            container[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dc_id

        &lt;span style=&#34;color:#75715e&#34;&gt;# result = self.client[&amp;#39;Product_Order&amp;#39;].verifyOrder(container)&lt;/span&gt;
        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;placeOrder(container)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;================= RECEIPT CONTAINER =================&amp;#34;&lt;/span&gt;)
        pp(result)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;================= RECEIPT CONTAINER =================&amp;#34;&lt;/span&gt;)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listQuotes&lt;/span&gt;(self):
        &lt;span style=&#34;color:#75715e&#34;&gt;# https://softlayer.github.io/reference/datatypes/SoftLayer_Billing_Order_Quote/&lt;/span&gt;
        mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[order[id, orderTotalAmount, orderTopLevelItems[id, description]], ordersFromQuoteCount]&amp;#34;&lt;/span&gt;
        quotes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getActiveQuotes(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ID, createDate, name, status, order count, description&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; quote &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; quotes:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}, {}, {}, {}, {}, {}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(
                quote[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], quote[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;createDate&amp;#39;&lt;/span&gt;], quote[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;], quote[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;status&amp;#39;&lt;/span&gt;], 
                quote[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ordersFromQuoteCount&amp;#39;&lt;/span&gt;], quote[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderTopLevelItems&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;])
            )

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listLocations&lt;/span&gt;(self):
        locations &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Location&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getDatacenters()
        pp(locations)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listLocationsForQuote&lt;/span&gt;(self, quoteId):
        mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id, order[id, orderTopLevelItems[id, package[id, availableLocations[location[longName, id]]]]]]&amp;#34;&lt;/span&gt;
        locations &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Order_Quote&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;quoteId, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)

        package_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; locations[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderTopLevelItems&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Package {} is available in the following locations...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(package_id))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; dc &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; locations[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderTopLevelItems&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;availableLocations&amp;#39;&lt;/span&gt;]:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}, id={}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(dc[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longName&amp;#39;&lt;/span&gt;], dc[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]))

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listSshKeys&lt;/span&gt;(self):
        keys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getSshKeys()
        pp(keys)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listImageTemplates&lt;/span&gt;(self):
        mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id,name,note]&amp;#34;&lt;/span&gt;
        imageTemplates &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getPrivateBlockDeviceTemplateGroups(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ID - Name - Note&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; template &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; imageTemplates:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (template[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], template[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;], template[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;note&amp;#39;&lt;/span&gt;]))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KeyError&lt;/span&gt;:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (template[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], template[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;None&amp;#39;&lt;/span&gt;))

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listVlansInLocation&lt;/span&gt;(self, location_id):
        mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id,vlanNumber,primaryRouter[hostname,datacenter[id,name]]]&amp;#34;&lt;/span&gt;
        objfilter2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;networkVlans&amp;#34;&lt;/span&gt;:    
                        {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;primaryRouter&amp;#34;&lt;/span&gt;: 
                            {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datacenter&amp;#34;&lt;/span&gt;: { &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt; : {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;:location_id} } }
                        }
                    }
        subnets &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getNetworkVlans(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask,filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;objfilter2)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; subnet &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; subnets:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; ( subnet[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], subnet[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vlanNumber&amp;#39;&lt;/span&gt;], subnet[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;primaryRouter&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;]))

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;debug&lt;/span&gt;(self):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; call &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_last_calls():
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;print_reproduceable(call))


&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    quote_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1528487&lt;/span&gt;
    main &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; example()
    &lt;span style=&#34;color:#75715e&#34;&gt;# main.listImageTemplates()&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# main.listQuotes()&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# main.listLocationsForQuote(quote_id)&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# main.listLocations()&lt;/span&gt;
    dal13 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1854895&lt;/span&gt;
    ams03 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;814994&lt;/span&gt;
    dal09 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;449494&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# main.listSshKeys()&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# main.listVlansInLocation(dal13)&lt;/span&gt;
    backend_vlan &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2068355&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#951, bcr01a.dal13&lt;/span&gt;
    front_vlan &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2068353&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 907, fcr01a.dal13&lt;/span&gt;
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderQuote(quote_id, dc_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dal13, public_vlan&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;front_vlan,private_vlan&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;backend_vlan)
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;debug()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release notes: August 3, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180803/</link>
      <pubDate>Fri, 03 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180803/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed currency translations on the order page.&lt;/li&gt;
&lt;li&gt;Fix a bug that was preventing discounts from being properly applied to certain promos with special configuration rules.&lt;/li&gt;
&lt;li&gt;Updates the logo on invoices (pdf and Excel) from IBM Bluemix to IBM Cloud.&lt;/li&gt;
&lt;li&gt;Add Learn More link to Checkout page next to SSH keys label.&lt;/li&gt;
&lt;li&gt;Update order forms to support new Archive metrics for Cloud Object Storage.&lt;/li&gt;
&lt;li&gt;Allow customers to subscribe or unsubscribe unplanned incidents and maintenance events per severity level. Add sev3 and sev4 to unplanned. Expand severity to planned (high, med, low) and announement(major, minor) move to new subscription system depends on email template associated to each severity. thus providing a granular control.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue with SoftLayer_Event_Log::getAllObjects not returning correct number of results when using a resultLimit with Permission change log results.&lt;/li&gt;
&lt;li&gt;Fixed an issue with the permission change log, where if an add/remove action was performed shortly after each other, the log would show add/add instead of add/remove.&lt;/li&gt;
&lt;li&gt;Permission logs with deleted groups were not displayed on the event log API.&lt;/li&gt;
&lt;li&gt;Introduce IMS APIs to configure load balancer L7 policies&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Improved transaction creation process, making it overall faster.&lt;/li&gt;
&lt;li&gt;Improved Reset Provisioning Times for HSM provisions&lt;/li&gt;
&lt;li&gt;Improved reclaim process.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CDN Purge</title>
      <link>https://softlayer.github.io/java/CDNPurge/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/java/CDNPurge/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Akamai CDN&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.List&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.google.gson.Gson&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.google.gson.GsonBuilder&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.softlayer.api.ApiClient&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.softlayer.api.RestApiClient&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.softlayer.api.service.container.network.cdnmarketplace.configuration.cache.Purge&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AkamaiCDNPurge&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;        
        &lt;span style=&#34;color:#75715e&#34;&gt;// Your SoftLayer API username and key.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;set me&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
        String apiKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;set me&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
                
        &lt;span style=&#34;color:#75715e&#34;&gt;// ID of Akamai CDN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String cdnId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;11334422425697&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// Standard Unix path syntax to reach the file you wish to purge.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/folderPath/file&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// API client
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ApiClient client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; RestApiClient&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;withCredentials&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; apiKey&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// SoftLayer_Network_CdnMarketplace_Configuration_Cache_Purge service
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        com&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;softlayer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;network&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cdnmarketplace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;configuration&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cache&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Purge&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Service&lt;/span&gt; purgeService &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
        com&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;softlayer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;network&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cdnmarketplace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;configuration&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cache&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Purge&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
		
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// Purge and retrieve list of SoftLayer_Cointainer_Network_CdnMarketplace_Configuration_Cache_Purge
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Purge&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; container &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; purgeService&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createPurge&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cdnId&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; path&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// Print results
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            Gson gson &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; GsonBuilder&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrettyPrinting&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gson&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toJson&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;container&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Exception e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; e&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Verizon  CDN&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To purge stale content from the CDN, enter up to 15 URLs on the list. Within 3-5 minutes, the content will be removed from all points.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.List&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.google.gson.Gson&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.google.gson.GsonBuilder&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.softlayer.api.ApiClient&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.softlayer.api.RestApiClient&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.softlayer.api.service.container.network.contentdelivery.purgeservice.Response&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;


&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CDNPurge&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;        
        &lt;span style=&#34;color:#75715e&#34;&gt;// Your SoftLayer API username and key.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        String user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;set me&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
        String apiKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;set me&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
                
        &lt;span style=&#34;color:#75715e&#34;&gt;// ID of CDN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        Long cdnId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Long&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1166&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// List of URL contents
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; urlContents &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        urlContents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://1122.http.cdn.softlayer.net/00001/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;// API client
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ApiClient client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; RestApiClient&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;withCredentials&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; apiKey&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// SoftLayer_Network_ContentDelivery_Account service
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        com&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;softlayer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;network&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;contentdelivery&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Account&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Service&lt;/span&gt; cdnService &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
        com&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;softlayer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;network&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;contentdelivery&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Account&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; cdnId&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
		
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// Purge and retrieve list of SoftLayer_Container_Network_ContentDelivery_PurgeService_Response
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Response&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cdnService&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;purgeCache&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;urlContents&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// Print results
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            Gson gson &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; GsonBuilder&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrettyPrinting&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gson&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toJson&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;response&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Exception e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; e&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release notes: July 27, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180727/</link>
      <pubDate>Fri, 27 Jul 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180727/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Public changes to our WWW order form to improve the experience when applying promo codes to an order&lt;/li&gt;
&lt;li&gt;Fix an issue where pricing was not properly filtered based on other order form selection&lt;/li&gt;
&lt;li&gt;Update redirect to control for login to a HTTP code 302&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Prevent fatal error when loading active usage prices&lt;/li&gt;
&lt;li&gt;Fix rule validator for IPv6 addresses when creating firewall rules&lt;/li&gt;
&lt;li&gt;When a .vhd or .iso file is imported the API should not allow any encryption parameter to be specified. If the user specified encryption fields with a .vhd or .iso the API should return an exception.&lt;/li&gt;
&lt;li&gt;Update SoftLayer API documentation for SoftLayer_Network_Component, as SoftLayer_Network_Subnet::getNetworkComponent link causes a 404.&lt;/li&gt;
&lt;li&gt;Fixed an issue with  SoftLayer_Network_Storage_Iscsi::createSnapshot not immediately creating a snapshot in some cases.&lt;/li&gt;
&lt;li&gt;Improved query used in SoftLayer_Network_SecurityGroup::getSupportedDataCenters&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;When a NetScaler device delete is attempted the delete may fail because the SoftLayer_Virtual_Guest is being referenced in the accounts &amp;ldquo;applicationDeliveryControllers&amp;rdquo;.  This causes the NetScaler device to remain on the accounts Device List but no actions are available.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>LBaaS Examples</title>
      <link>https://softlayer.github.io/python/lbaas/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/lbaas/</guid>
      <description>&lt;p&gt;This example covers a variety of API calls that you might want to use when interacting with the Load Balancer as a Service offering. General information about this service can be found on the &lt;a href=&#34;https://console.bluemix.net/docs/infrastructure/loadbalancer-service/getting-started.html#getting-started&#34;&gt;Load Balancer as a Service Documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Manages LBaaS instances.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;This sample shows how to use a variety of the common methods when working with LBaaS instances. This example is more a proof of concept to show basically how it all works, and not really intended to be used as is.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lbaas&lt;/span&gt;():
    GREEN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[92m&amp;#39;&lt;/span&gt;    
    UNDERLINE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[4m&amp;#39;&lt;/span&gt;
    END &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[0m&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getLBaaSByName&lt;/span&gt;(self, name):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Finds a LBaaS instance uuid based on its name &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;: name}}
        lbaas_items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_LoadBalancer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getAllObjects(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;filter)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; lbaas_items:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The LBaaS name &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; doesn&amp;#39;t exists.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; name)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; lbaas_items[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getLBaaSById&lt;/span&gt;(self, lbaasId):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Finds a LBaaS instance based uuid on its Id&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        lbaas &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_LoadBalancer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;lbaasId)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cancelLBaaS&lt;/span&gt;(self, uuid):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Cancel a Load Balancer as a Service &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_LoadBalancer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cancelLoadBalancer(uuid)

            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; response:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The LBaaS was successfuly canceled&amp;#34;&lt;/span&gt;)

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; (SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError, &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to cancel the LBaaS: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addProtocols&lt;/span&gt;(self, uuid, protocolConfig):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; This sample shows how to add protocols to the LBaaS.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            https://softlayer.github.io/reference/services/SoftLayer_Network_LBaaS_Listener/updateLoadBalancerProtocols/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            https://softlayer.github.io/reference/datatypes/SoftLayer_Network_LBaaS_LoadBalancerProtocolConfiguration
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# Create the service and add the protocols&lt;/span&gt;
            lbaasListenerService &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_Listener&amp;#39;&lt;/span&gt;]
            response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lbaasListenerService&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;updateLoadBalancerProtocols(uuid, protocolConfig)

            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(response, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; (SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError, &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to add protocols: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))


    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addServerInstances&lt;/span&gt;(self, uuid, serverInstances):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; This sample shows how to add server instances to the LBaaS.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            https://softlayer.github.io/reference/services/SoftLayer_Network_LBaaS_Member/addLoadBalancerMembers/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            https://softlayer.github.io/reference/datatypes/SoftLayer_Network_LBaaS_LoadBalancerServerInstanceInfo/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# Create the service and add new members (server instances)&lt;/span&gt;
            lbaasMemberService &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_Member&amp;#39;&lt;/span&gt;]
            response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lbaasMemberService&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addLoadBalancerMembers(uuid, serverInstances)

            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(response, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; (SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError, &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to add members (server instances): &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;removeServerInstances&lt;/span&gt;(self, uuid, members&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; This sample shows how to remove LBaaS servers (members).
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        https://softlayer.github.io/reference/services/SoftLayer_Network_LBaaS_LoadBalancer/getLoadBalancer
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        https://softlayer.github.io/reference/services/SoftLayer_Network_LBaaS_Member/deleteLoadBalancerMembers/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        https://softlayer.github.io/reference/services/SoftLayer_Network_LBaaS_LoadBalancer/getMembers/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# Create the service and delete selected server instances&lt;/span&gt;
            lbaasMemberService &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_Member&amp;#39;&lt;/span&gt;]
            response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lbaasMemberService&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deleteLoadBalancerMembers(uuid, members)

            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(response, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; (SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError, &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to remove instances: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString)) 

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;(self, text):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Prints out a pretty colored title&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GREEN &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;UNDERLINE &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; text &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;END &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;convertToMB&lt;/span&gt;(self, value):    
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;quick math&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{0:.2f}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(float(value)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;))
   
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printOverview&lt;/span&gt;(self, uuid, listeners):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Prints out some general info about a LBaaS&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        statusTable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PrettyTable([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Instances Up&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Instances Down&amp;#39;&lt;/span&gt;])
        metricsTable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PrettyTable([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Throughput (bps)&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Data Processed (MB)&amp;#39;&lt;/span&gt;, 
                                    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Conection Rate (cps)&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Active Connections&amp;#39;&lt;/span&gt;])
        healthTable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PrettyTable([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Front-End Protocol&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Front-End Port&amp;#39;&lt;/span&gt;, 
                                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Back-End Protocol&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Back-End Port&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Is Healthy&amp;#39;&lt;/span&gt;])

        statusTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SERVER STATUS&amp;#34;&lt;/span&gt;
        metricsTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;METRICS&amp;#34;&lt;/span&gt;
        healthTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HEALTH STATUS&amp;#34;&lt;/span&gt;
                        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:  
            &lt;span style=&#34;color:#75715e&#34;&gt;# Following retrieves statistics anmd members which are used to print &lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# information about status and metrics         &lt;/span&gt;
            statics &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_LoadBalancer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getLoadBalancerStatistics(uuid)
            members &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_LoadBalancer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getLoadBalancerMemberHealth(uuid)

            &lt;span style=&#34;color:#75715e&#34;&gt;# Adding data about status and metrics&lt;/span&gt;
            statusTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([statics[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;numberOfMembersUp&amp;#39;&lt;/span&gt;], statics[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;numberOfMembersDown&amp;#39;&lt;/span&gt;]])
            metricsTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([statics[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;throughput&amp;#39;&lt;/span&gt;], self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convertToMB(statics[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dataProcessedByMonth&amp;#39;&lt;/span&gt;]), 
                                  statics[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;connectionRate&amp;#39;&lt;/span&gt;], statics[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;totalConnections&amp;#39;&lt;/span&gt;]])
            &lt;span style=&#34;color:#75715e&#34;&gt;# Adding data about health status if there are members&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; members:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; listener &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; listeners:
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; member &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; members:
                        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; listener[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;defaultPool&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; member[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;poolUuid&amp;#39;&lt;/span&gt;]:
                            healthy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; all(m[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;status&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UP&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; member[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;membersHealth&amp;#39;&lt;/span&gt;])

                    healthTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([listener[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocol&amp;#39;&lt;/span&gt;], listener[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocolPort&amp;#39;&lt;/span&gt;], 
                                         listener[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;defaultPool&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocol&amp;#39;&lt;/span&gt;], 
                                         listener[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;defaultPool&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocolPort&amp;#39;&lt;/span&gt;], healthy])

            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OVERVIEW:&amp;#34;&lt;/span&gt;))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (statusTable)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (metricsTable)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (healthTable)

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to retrieve LBaaS overview:: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printServerInstances&lt;/span&gt;(self, dc, members):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Prints out some details about the servers on a LB&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        instancesTable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PrettyTable([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Id&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Type&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Private Ip&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Weight&amp;#39;&lt;/span&gt;])

        &lt;span style=&#34;color:#75715e&#34;&gt;# Filters in order to retrieve only instances in the same datacenter&lt;/span&gt;
        guestFilter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtualGuests&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datacenter&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;: dc}}}}
        hardwareFilter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hardware&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datacenter&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;: dc}}}}
        mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id,fullyQualifiedDomainName,primaryBackendIpAddress]&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# Retrieve instances&lt;/span&gt;
        guests &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getVirtualGuests(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;guestFilter, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)
        servers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getHardware(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;hardwareFilter, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)

        &lt;span style=&#34;color:#75715e&#34;&gt;# Adding data to the table about the instances  &lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; members:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; g &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; guests:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; g[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;primaryBackendIpAddress&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; m[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;]:
                    instancesTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([g[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], g[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fullyQualifiedDomainName&amp;#39;&lt;/span&gt;],
                                            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Virtual Server&amp;#34;&lt;/span&gt;,m[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;], m[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;]])
            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; servers:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; s[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;primaryBackendIpAddress&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; m[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;]:
                    instancesTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([s[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], s[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fullyQualifiedDomainName&amp;#39;&lt;/span&gt;],
                                            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hardware Server&amp;#34;&lt;/span&gt;,m[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;], m[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;]])

        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SERVER INSTANCES:&amp;#34;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (instancesTable)
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printHealthChecks&lt;/span&gt;(self, listeners, healthMonitors):
        healthMTable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PrettyTable([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Protocol&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Port&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Interval (sec)&amp;#39;&lt;/span&gt;,
                                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Timeout (sec)&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Max Trials&amp;#39;&lt;/span&gt;])
        &lt;span style=&#34;color:#75715e&#34;&gt;# Adding data to the table&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; hm &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; healthMonitors:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; l &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; listeners:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; l[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;defaultPool&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;healthMonitor&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; hm[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;]:
                    healthMTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([hm[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;monitorType&amp;#39;&lt;/span&gt;], l[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;defaultPool&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocolPort&amp;#39;&lt;/span&gt;], 
                                          hm[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;interval&amp;#39;&lt;/span&gt;], hm[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;], hm[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;maxRetries&amp;#39;&lt;/span&gt;]])

        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HEALTH CHECKS:&amp;#34;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (healthMTable)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printDetails&lt;/span&gt;(self, uuid, servers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False, checks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Prints out details of a LBaaS&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        table &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PrettyTable([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UUID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;, 
                             &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Address&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Type&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Location&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Status&amp;#39;&lt;/span&gt;])
                        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# Retrieve needed LBaaS information by using masks in the getLoadBalancer method&lt;/span&gt;
            mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[members,listeners[defaultPool[healthMonitor]],healthMonitors]&amp;#34;&lt;/span&gt;
            lbaas &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_LoadBalancer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getLoadBalancer(uuid, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)
            
            isPublic &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Public&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;isPublic&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Private&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# Adding data to the table&lt;/span&gt;
            table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LBaaS Name: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;]
            table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;], lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;], lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;],
                              isPublic,lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longName&amp;#39;&lt;/span&gt;],lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operatingStatus&amp;#39;&lt;/span&gt;]])

            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DETAILS:&amp;#34;&lt;/span&gt;))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (table)

            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;printOverview(uuid, lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;listeners&amp;#39;&lt;/span&gt;])

            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; servers:
                self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;printServerInstances(lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;], lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;members&amp;#39;&lt;/span&gt;])
            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; checks:
                self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;printHealthChecks(lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;listeners&amp;#39;&lt;/span&gt;], lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;healthMonitors&amp;#39;&lt;/span&gt;])
            
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to retrieve LBaaS details: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;selectProtocol&lt;/span&gt;(self, uuid):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;It prints a table and waits until an option is selected&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        protocolTable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PrettyTable([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Option&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UUID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Front-End Protocol&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Front-End Port&amp;#39;&lt;/span&gt;, 
                                     &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Back-End Protocol&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Back-End Port&amp;#39;&lt;/span&gt;])
        protocolTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROTOCOLS&amp;#34;&lt;/span&gt;
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# Retrieve the listeners in LBaaS using masks&lt;/span&gt;
        mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[members,listeners[defaultPool]]&amp;#34;&lt;/span&gt;
        lbaas &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_LoadBalancer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getLoadBalancer(uuid, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)
        listeners &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lbaas[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;listeners&amp;#39;&lt;/span&gt;]

        &lt;span style=&#34;color:#75715e&#34;&gt;# Adding data about health status if there are members&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; l &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; listeners:
            protocolTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([str(listeners&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(l)), l[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;],
                                   l[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocol&amp;#39;&lt;/span&gt;], l[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocolPort&amp;#39;&lt;/span&gt;], 
                                   l[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;defaultPool&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocol&amp;#39;&lt;/span&gt;], 
                                   l[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;defaultPool&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocolPort&amp;#39;&lt;/span&gt;]])

        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (protocolTable)
        var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(input(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Select the protocol you want to remove (0 to &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(len(listeners) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;) : &amp;#34;&lt;/span&gt;))

        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; [str(protocolTable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_rows[var][&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;removeProtocols&lt;/span&gt;(self, uuid, listeners&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Removes the selected protocols from a LBaaS&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; listeners:
            listeners &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;selectProtocol(uuid)

        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# Create the service and delete selected protocols&lt;/span&gt;
            lbaasListenerService &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_Listener&amp;#39;&lt;/span&gt;]
            response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lbaasListenerService&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deleteLoadBalancerProtocols(uuid, listeners)

            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(response, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; (SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError, &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to remove the protocols: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listLBaaSItems&lt;/span&gt;(self, dc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; List all LBaaS items in the account. &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
        table &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PrettyTable([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UUID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;, 
                             &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Address&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Type&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Location&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Status&amp;#39;&lt;/span&gt;])
        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; dc:
            filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datacenter&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;: dc}}}
        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# Retrieves all LBaaS in the account&lt;/span&gt;
            items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Network_LBaaS_LoadBalancer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getAllObjects(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;filter)
            &lt;span style=&#34;color:#75715e&#34;&gt;# Add data to the table and print the list&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; items:
                isPublic &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Public&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;isPublic&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Private&amp;#34;&lt;/span&gt;
                table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uuid&amp;#39;&lt;/span&gt;], i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;], i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;], i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;],
                              isPublic,i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longName&amp;#39;&lt;/span&gt;],i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operatingStatus&amp;#39;&lt;/span&gt;]])

            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (table)

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to list all LBaaS in the account: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getPackageId&lt;/span&gt;(self, pkg):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Finds the packageId for the LBaaS&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;keyName&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;:pkg}}
        pkg_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Package&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getAllObjects(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;filter)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; pkg_list[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getStandardPrices&lt;/span&gt;(self,pkg_id):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Gets price IDs needed to order a LBaaS&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        key_names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LOAD_BALANCER_BANDWIDTH&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LOAD_BALANCER_DATA_PROCESSED&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LOAD_BALANCER_UPTIME&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LOAD_BALANCER_AS_A_SERVICE&amp;#34;&lt;/span&gt;]
                
        items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Package&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getItems(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pkg_id)
        prices &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item_keyname &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; key_names:
            matching_item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [i &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; items
                                 &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;keyName&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; item_keyname][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
            
            price_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [p[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; matching_item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prices&amp;#39;&lt;/span&gt;]
                            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; p[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;locationGroupId&amp;#39;&lt;/span&gt;]][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
            prices&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(price_id)
        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; prices

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setPlan&lt;/span&gt;(self, dc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, pkg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LBAAS&amp;#34;&lt;/span&gt;):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Sets basic order information&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# Retrieve the package id&lt;/span&gt;
        pkg_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getPackageId(pkg)
        &lt;span style=&#34;color:#75715e&#34;&gt;# We&amp;#39;ll retrieve generic prices according to the package&lt;/span&gt;
        prices &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getStandardPrices(pkg_id)
        &lt;span style=&#34;color:#75715e&#34;&gt;# Starting building the orderData&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complexType&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoftLayer_Container_Product_Order_Network_LoadBalancer_AsAService&amp;#34;&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dc
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;packageId&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pkg_id
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;useHourlyPricing&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True            &lt;span style=&#34;color:#75715e&#34;&gt;# LBaaS service is only available as an hourly service&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prices&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: price_id} &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; price_id &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; prices]
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setNetworkSettings&lt;/span&gt;(self, is_public&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, ibm_allocation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, subnet&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Sets the basic network settings for a LBaaS order&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;isPublic&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; is_public
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; is_public:            
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;useSystemPublicIpPool&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ibm_allocation
        
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;subnets&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: subnet}]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setBasicAndHealthChecks&lt;/span&gt;(self, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, desc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, protocolConfigs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, health_checks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Sets healthchecks for a LBaaS order&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; name
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; desc
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;protocolConfigurations&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; protocolConfigs
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;healthMonitorConfigurations&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; health_checks
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setServerInstances&lt;/span&gt;(self, server_instances&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Sets server instances for a LBaaS order&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;serverInstancesInformation&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server_instances
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;orderLBaaS&lt;/span&gt;(self, placeOrder):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Orders a LBaaS instance&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# verifyOrder() will check your order for errors.&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# placeOrder() when you&amp;#39;re ready to order. &lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; placeOrder:
                response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verifyOrder(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;placeOrder(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData)
            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Detailed information below about the order:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(response, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to place the order: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))        

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    &lt;span style=&#34;color:#75715e&#34;&gt;# Set Name, ID, or UUID for LBaaS&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# lbaasName = &amp;#34;My-LBaaS-Name&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# lbaasId = 12345&lt;/span&gt;
    lbaasUUID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1f454229-a7b0-4182-8953-975c0a045f79&amp;#34;&lt;/span&gt;
    main &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lbaas()


    &lt;span style=&#34;color:#75715e&#34;&gt;# Set the datacener location where you want to order&lt;/span&gt;
    package &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LBAAS&amp;#34;&lt;/span&gt;
    datacenter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MEXICO&amp;#34;&lt;/span&gt;

    lbass_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My-LBaaS-name&amp;#34;&lt;/span&gt;
    description &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A description sample&amp;#34;&lt;/span&gt;
    
    &lt;span style=&#34;color:#75715e&#34;&gt;# Set False for private network&lt;/span&gt;
    isPublic &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
    &lt;span style=&#34;color:#75715e&#34;&gt;# Set False if you want to allocate from a Public Subnet, please ensure &lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# that TCP port 56501 is not blocked by a firewall or any other services.&lt;/span&gt;
    ibmAllocation &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
    &lt;span style=&#34;color:#75715e&#34;&gt;# The private subnet id you want to place the load balancer&lt;/span&gt;
    subnetId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;830460&lt;/span&gt;                      

    &lt;span style=&#34;color:#75715e&#34;&gt;# Protocol Configuration sample&lt;/span&gt;
    protocolConfigurations &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frontendProtocol&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTTP&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frontendPort&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;backendProtocol&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTTP&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;backendPort&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sslCertificate&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,                    &lt;span style=&#34;color:#75715e&#34;&gt;# ID of SSL Certificate if you have one&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;loadBalancingMethod&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ROUNDROBIN&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ROUNDROBIN, LEASTCONNECTION, WEIGHTED_RR&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxConn&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;
    }]

    &lt;span style=&#34;color:#75715e&#34;&gt;# It must have the same number of objects than protocolConfigurations. &lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# LBaaS will be ordered with default values if it is not set.&lt;/span&gt;
    healthChecks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[{
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;protocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTTP&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;interval&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxTrials&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    }]

    serverInstances &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        { &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;privateIpAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10.148.92.136&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;weight&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt; },
        { &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;privateIpAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10.190.112.133&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;weight&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; }
    ]

    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setPlan(dc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;datacenter, pkg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;package)    
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setNetworkSettings(is_public&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;isPublic, ibm_allocation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ibmAllocation, subnet&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;subnetId)
    
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setBasicAndHealthChecks(name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;lbass_name, desc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;description, 
                                 protocolConfigs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;protocolConfigurations,
                                 health_checks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;healthChecks)
    &lt;span style=&#34;color:#75715e&#34;&gt;# Set server instances if you want to assign baremetals and virtual guests&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# during the order&lt;/span&gt;
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setServerInstances(server_instances&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;servers)
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderLBaaS(True)

    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addServerInstances(uuid, serverInstances)

    protocolConfigurations &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;backendPort&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1350&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;backendProtocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TCP&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frontendPort&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1450&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frontendProtocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TCP&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;loadBalancingMethod&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WEIGHTED_RR&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#75715e&#34;&gt;# ROUNDROBIN, LEASTCONNECTION, WEIGHTED_RR&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxConn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sessionType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SOURCE_IP&amp;#34;&lt;/span&gt;
        },
        {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;backendPort&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1200&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;backendProtocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTTP&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frontendPort&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1150&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frontendProtocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTTP&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;loadBalancingMethod&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ROUNDROBIN&amp;#34;&lt;/span&gt;,    &lt;span style=&#34;color:#75715e&#34;&gt;# ROUNDROBIN, LEASTCONNECTION, WEIGHTED_RR&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxConn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sessionType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SOURCE_IP&amp;#34;&lt;/span&gt;
        }
    ]
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addProtocols(uuid, protocolConfigurations)
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;printDetails(uuid, servers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, checks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
    listenerUuids &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1d72f3cc-7903-484e-b5c0-507fd81ab852&amp;#34;&lt;/span&gt;,
                     &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a1908b08-1ef2-4fe4-bac3-f433589ba3cb&amp;#34;&lt;/span&gt;]
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;removeProtocols(uuid, listeners&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;listenerUuids)

    &lt;span style=&#34;color:#75715e&#34;&gt;# Use SoftLayer_Network_LBaaS_LoadBalancer::getMembers or&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# SoftLayer_Network_LBaaS_LoadBalancer::getLoadBalancer with masks&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# to retrive member uuid values&lt;/span&gt;
    memberUuids &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ed25c408-4b26-4f22-ba1f-32b6af7e36da&amp;#34;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ba9d6df6-c4e6-46a3-9a11-1e901de37932&amp;#34;&lt;/span&gt;]
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;removeServerInstances(uuid, members&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;memberUuids)
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cancelLBaaS(lbaasUUID)
    
    &lt;span style=&#34;color:#75715e&#34;&gt;# With following you can cancel it through the its name or id&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# main.cancelLBaaSById(lbaasId)&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# main.cancelLBaaSByName(lbaasName)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Automating Block Storage</title>
      <link>https://softlayer.github.io/article/AutomatingStorage/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/article/AutomatingStorage/</guid>
      <description>

&lt;h2 id=&#34;the-process&#34;&gt;The Process&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Order a VSI with a postInstall script&lt;/li&gt;
&lt;li&gt;Order a storage volume&lt;/li&gt;
&lt;li&gt;Update the metadata of the VSI to include the needed information to mount the storage volume&lt;/li&gt;
&lt;li&gt;postInstall script gets metadata from the metadata service, and mounts the volume&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;ordering-code&#34;&gt;Ordering Code&lt;/h2&gt;

&lt;p&gt;This script will order a VSI, based on a configuration in the file, then order some storage, authorize storage to the new VSI, and set the VSI&amp;rsquo;s metadata with the needed information for it to be mounted.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Create a new Virtual Guest and block storage.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;allowAccessToNetworkStorageList, setUserMetadata
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;createObject() enables the creation of computing instances on an account.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;This method is a simplified alternative to interacting with the ordering
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;system directly.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Important manual pages:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;https://softlayer.github.io/reference/services/SoftLayer_Product_Order/placeOrder/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;https://softlayer.github.io/reference/services/SoftLayer_Billing_Order/getObject/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;https://softlayer.github.io/reference/services/SoftLayer_Account/getNetworkStorage/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;https://softlayer.github.io/reference/services/SoftLayer_Virtual_Guest/setUserMetadata/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/generateOrderTemplate
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;https://softlayer.github.io/reference/services/SoftLayer_Virtual_Guest/allowAccessToNetworkStorageList/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;License: http://sldn.softlayer.com/article/License
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer


&lt;span style=&#34;color:#75715e&#34;&gt;# For nice debug output:&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp



&lt;span style=&#34;color:#75715e&#34;&gt;# Initial setup of some variables&lt;/span&gt;

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()
storage_manager &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BlockStorageManager(client)
guest_manager &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;VSManager(client)

vmId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
targetAddress &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
blockStorageId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
blockStorageOrderId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
allowAccessToNetworkStorage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None


&lt;span style=&#34;color:#75715e&#34;&gt;# Describes the VM we want to order&lt;/span&gt;
templateVirtualGuest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tester&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;domain&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ibm.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datacenter&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dal13&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flavor&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BL2_2X4X100&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hourlyBillingFlag&amp;#34;&lt;/span&gt;: True,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;os_code&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CENTOS_7_64&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nic_speed&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;postInstallScriptUri&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://pastebin.com/whatever&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssh_keys&amp;#34;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;87634&lt;/span&gt;],
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;public_security_groups&amp;#34;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;128321&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;128323&lt;/span&gt;]
}

&lt;span style=&#34;color:#75715e&#34;&gt;# === ORDERS THE VM ===&lt;/span&gt;
virtualGuestResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; guest_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_instance(&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;templateVirtualGuest)
vmId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; virtualGuestResponse[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtualGuestId &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(vmId))


&lt;span style=&#34;color:#75715e&#34;&gt;# === ORDERS THE STORAGE ===&lt;/span&gt;
blockStorageOrder &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; storage_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;order_block_volume(
    storage_type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;performance&amp;#34;&lt;/span&gt;,
    location&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dal13&amp;#34;&lt;/span&gt;,
    size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
    os_type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LINUX&amp;#34;&lt;/span&gt;,
    iops&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;,
    snapshot_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None,
    service_offering&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;storage_as_a_service&amp;#39;&lt;/span&gt;,
    hourly_billing_flag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True
)

blockStorageOrderId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; blockStorageOrder[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderId&amp;#39;&lt;/span&gt;]
pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blockStorageOrderId &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(blockStorageOrderId))

status &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; status &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;APPROVED&amp;#34;&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Checking storage order status...&amp;#34;&lt;/span&gt;)
    orderStatus &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;blockStorageOrderId)
    status &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; orderStatus[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;status&amp;#39;&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; status &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;APPROVED&amp;#34;&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Order pending approval&amp;#34;&lt;/span&gt;)
        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Used to lookup the storage id based on its order&lt;/span&gt;
objectFilter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;networkStorage&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;billingItem&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;orderItem&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;order&amp;#34;&lt;/span&gt;: {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: {
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;: blockStorageOrderId
                        }
                    }
                }
            }
        }
    }

objectMask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mask[billingItem[orderItem[order[id]]]]&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Getting block storage info&amp;#34;&lt;/span&gt;)
blockStorageArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getNetworkStorage(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;objectFilter, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;objectMask)

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; blockStorage &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; blockStorageArray:
    blockStorageId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; blockStorage[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blockStorageId &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(blockStorageId))

&lt;span style=&#34;color:#75715e&#34;&gt;# Can&amp;#39;t autorize a volume while there is an active transaction&lt;/span&gt;
activeTransaction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Network_Storage&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getActiveTransactions(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;blockStorageId)
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (len(activeTransaction) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;):
    activeTransaction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Network_Storage&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getActiveTransactions(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;blockStorageId)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;There is a block storage transaction running&amp;#39;&lt;/span&gt;)
    time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

blockStorageObject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ {  &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: blockStorageId } ]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Granting vm {} access to {}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(vmId, blockStorageId))
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
    allowAccessToNetworkStorage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;allowAccessToNetworkStorageList(blockStorageObject, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;vmId)
&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exceptions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoftLayer_Exception_Network_Storage_Group_MassAccessControlModification&amp;#34;&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;This host is already allowed access&amp;#34;&lt;/span&gt;)



&lt;span style=&#34;color:#75715e&#34;&gt;# Find out the username/password/ip for our iscsi target&lt;/span&gt;
objectMask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;mask[id, iscsiTargetIpAddresses, allowedVirtualGuests[fullyQualifiedDomainName, 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;allowedHost[id,name,resourceTableId,resourceTableName, credential[id,username,password],sourceSubnet]]]&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
blockStorageCredentials &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Network_Storage&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;objectMask, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;blockStorageId)

&lt;span style=&#34;color:#75715e&#34;&gt;# We assume this volume only has 1 host authorized to mount it.&lt;/span&gt;
pp(blockStorageCredentials)
allowedHost &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; blockStorageCredentials[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;allowedVirtualGuests&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
credentials &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; allowedHost[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;allowedHost&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;credential&amp;#39;&lt;/span&gt;]
targetAddress &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; blockStorageCredentials[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;iscsiTargetIpAddresses&amp;#39;&lt;/span&gt;]
username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; credentials[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;]
password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; credentials[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;]
iqn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; allowedHost[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;allowedHost&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;# Set the meta data for the vm&lt;/span&gt;
meta_string &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{storageId}, {iqn}, {target}, {user}, {password}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(
                storageId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;blockStorageId, target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(targetAddress), user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;username, password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;password, iqn&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iqn)
metadata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [meta_string]

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Setting MetaData:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; metadata)
metadataSet &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setUserMetadata(metadata, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;vmId)



mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[userData]&amp;#34;&lt;/span&gt;
virtualGuestData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;vmId)
pp(virtualGuestData)

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FINISHED&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;post-install-script&#34;&gt;Post install script&lt;/h2&gt;

&lt;p&gt;Most of the configuration for this script comes from &lt;a href=&#34;https://console.bluemix.net/docs/infrastructure/BlockStorage/accessing_block_storage_linux.html#connecting-to-mpio-iscsi-luns-on-linux&#34;&gt;https://console.bluemix.net/docs/infrastructure/BlockStorage/accessing_block_storage_linux.html#connecting-to-mpio-iscsi-luns-on-linux&lt;/a&gt; and this specific script is meant to run on Centos7. If you are not using Centos7, you will need to make some minor adjustments to the configuration files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# *************************  Connecting to MPIO ISCSI lun on Linux OS *************************
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# The following script uses steps for CentOS distribution only, to change configuration please review the following url:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://console.bluemix.net/docs/infrastructure/BlockStorage/accessing_block_storage_linux.html#connecting-to-mpio-iscsi-luns-on-linux
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Get the metadata
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;IFS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt; read -ra METAAA &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;curl https://api.service.softlayer.com/rest/v3.1/SoftLayer_Resource_Metadata/getUserMetadata&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
USERNAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;METAAA[4]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
IP_1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;METAAA[3]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
IP_2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;METAAA[2]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# This removes the trailing \&amp;#34; that comes from the curl command
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;METAAA[5]%&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
INITIATOR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;METAAA[1]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#1 Install the iSCSI and multipath utilities to your host.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;yum -y install iscsi-initiator-utils device-mapper-multipath

&lt;span style=&#34;color:#75715e&#34;&gt;#2 Create/edit /etc/multipath.conf with the minimum configuration that is provided in the following commands. 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MINIMUMCONFIGURATION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;defaults {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;user_friendly_names no
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;max_fds max
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;flush_on_last_del yes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;queue_without_daemon no
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;dev_loss_tmo infinity
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;fast_io_fail_tmo 5
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# All data under blacklist must be specific to your system.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;blacklist {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;wwid &amp;#34;SAdaptec*&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;devnode &amp;#34;^hd[a-z]&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;devnode &amp;#34;^(ram|raw|loop|fd|md|dm-|sr|scd|st)[0-9]*&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;devnode &amp;#34;^cciss.*&amp;#34;  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;devices {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;device {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;vendor &amp;#34;NETAPP&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;product &amp;#34;LUN&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;path_grouping_policy group_by_prio
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;features &amp;#34;3 queue_if_no_path pg_init_retries 50&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;prio &amp;#34;alua&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;path_checker tur
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;failback immediate
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;path_selector &amp;#34;round-robin 0&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hardware_handler &amp;#34;1 alua&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;rr_weight uniform
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;rr_min_io 128
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$MINIMUMCONFIGURATION&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt; /etc/multipath.conf

&lt;span style=&#34;color:#75715e&#34;&gt;#3 Load the multipath module, start multipath services, and set it start on boot.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# CentOS 7 commands, change the following according the SO type.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;modprobe dm-multipath
systemctl start multipathd
systemctl enable multipathd

&lt;span style=&#34;color:#75715e&#34;&gt;#4 Verify that multipath is working.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;multipath -ll

&lt;span style=&#34;color:#75715e&#34;&gt;#5 Update /etc/iscsi/initiatorname.iscsi file with the IQN from the IBM Cloud infrastructure customer portal. 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  Enter the value as lowercase.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;InitiatorName=&lt;/span&gt;$INITIATOR&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt; /etc/iscsi/initiatorname.iscsi

&lt;span style=&#34;color:#75715e&#34;&gt;#6 Edit the CHAP settings in /etc/iscsi/iscsid.conf by using the user name and password from the IBM Cloud infrastructure customer portal. 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  Use uppercase for CHAP names.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;ISCSIDCONF&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;iscsid.startup = /bin/systemctl start iscsid.socket iscsiuio.socket
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.startup = automatic
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.leading_login = No
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.timeo.replacement_timeout = 120
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.conn[0].timeo.login_timeout = 15
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.conn[0].timeo.logout_timeout = 15
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.conn[0].timeo.noop_out_interval = 5
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.conn[0].timeo.noop_out_timeout = 5
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.err_timeo.abort_timeout = 15
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.err_timeo.lu_reset_timeout = 30
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.err_timeo.tgt_reset_timeout = 30
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.initial_login_retry_max = 8
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.cmds_max = 128
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.queue_depth = 32
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.xmit_thread_priority = -20
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.iscsi.InitialR2T = No
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.iscsi.ImmediateData = Yes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.iscsi.FirstBurstLength = 262144
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.iscsi.MaxBurstLength = 16776192
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.conn[0].iscsi.MaxRecvDataSegmentLength = 262144
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.conn[0].iscsi.MaxXmitDataSegmentLength = 0
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;discovery.sendtargets.iscsi.MaxRecvDataSegmentLength = 32768
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.conn[0].iscsi.HeaderDigest = None
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.nr_sessions = 1
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.iscsi.FastAbort = Yes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.scan = auto
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.auth.authmethod = CHAP
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.auth.username = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;USERNAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;node.session.auth.password =  &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PASSWORD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;discovery.sendtargets.auth.authmethod = CHAP
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;discovery.sendtargets.auth.username =  &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;USERNAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;discovery.sendtargets.auth.password =  &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PASSWORD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ISCSIDCONF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt; /etc/iscsi/iscsid.conf
 
&lt;span style=&#34;color:#75715e&#34;&gt;#7 Set iSCSI to start at boot and start it now.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;systemctl enable iscsi
systemctl enable iscsid
systemctl start iscsi
systemctl start iscsid

&lt;span style=&#34;color:#75715e&#34;&gt;#8 Discover the device by using the Target IP address that was obtained from the IBM Cloud infrastructure customer portal.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#A. Run the discovery against the iSCSI array.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
iscsiadm -m discovery -t sendtargets -p $IP_1

&lt;span style=&#34;color:#75715e&#34;&gt;#B. Set the host to automatically log in to the iSCSI array.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;iscsiadm -m node -L automatic

&lt;span style=&#34;color:#75715e&#34;&gt;#9 Verify that the host is logged in to the iSCSI array and maintained its sessions.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;iscsiadm -m session
multipath -l

&lt;span style=&#34;color:#75715e&#34;&gt;#10 Verify that the device is connected. 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   By default the device attaches to /dev/mapper/mpathX where X is the generated ID of the connected device.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;fdisk -l | grep /dev/mapper&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Sub-Organization Billing Detail</title>
      <link>https://softlayer.github.io/article/sub-org-billing-detail/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/article/sub-org-billing-detail/</guid>
      <description>

&lt;h1 id=&#34;sub-org-billing-detail&#34;&gt;Sub-org Billing Detail&lt;/h1&gt;

&lt;p&gt;This tutorial walks you through accessing the steps required to access detailed billing data across sub-organization accounts using a specified date and time range.&lt;/p&gt;

&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;

&lt;p&gt;Understand how to use multiple API services and methods to access detailed billing data for all sub organization accounts for a specified time and date range.&lt;/p&gt;

&lt;h2 id=&#34;services-used&#34;&gt;Services used&lt;/h2&gt;

&lt;p&gt;This tutorial uses the following technologies:
* &lt;a href=&#34;http://softlayer-python.readthedocs.io/en/latest/&#34;&gt;SoftLayer Python Library&lt;/a&gt;
* &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Account&#34;&gt;Account Service&lt;/a&gt;
* &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice/&#34;&gt;Billing_Invoice Service&lt;/a&gt;
* &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice_Item/&#34;&gt;Billing_Invoice_Item Service&lt;/a&gt;
* &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Item/&#34;&gt;Billing_item Service&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;/h2&gt;

&lt;p&gt;Accounts (refered to in this document as a sub account) can be owned by a Brand Account, which is the top level
account type for an organization which can enable sub-organizational level billing.  The API Key for a Brand Account
has access billing data for it&amp;rsquo;s sub accounts. This tutorial demonstrates how to leverage Account, Invoice and Billing
API&amp;rsquo;s to identify invoices accross the multiple sub accounts owned by an organization for a specific range of
dates.  For each invoice, a list of top level billing items are  retreived, such as the billing data for a single
virtual machine.   These top level items, often have detailed sub-billing items such as memory, disk, or cpu which
are also retreived.&lt;/p&gt;

&lt;h2 id=&#34;install-softlayer-python-library&#34;&gt;Install SoftLayer Python Library&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/softlayer/softlayer-python/blob/master/README.rst&#34;&gt;SoftLayer API Python Client Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;obtain-a-list-of-invoices-for-all-owned-sub-accounts&#34;&gt;Obtain a list of invoices for all owned Sub Accounts&lt;/h2&gt;

&lt;p&gt;Using the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Account/getObject&#34;&gt;getObject&lt;/a&gt; method of
the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Account&#34;&gt;Account&lt;/a&gt; class and a nested account mask you can return a list of invoices for all brands owned accounts.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ownedBrands &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ownedBrands.allOwnedAccounts.invoices&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are several types of invoices which will be returned, for this example the typical invoice type that would be of interest
 is the &amp;ldquo;RECURRING&amp;rdquo; type, which includes all the monthly recurring and hourly usage charges incurred on that invoice.&lt;/p&gt;

&lt;p&gt;Invoice Types:
* &amp;ldquo;NEW&amp;rdquo; typeCode signifies an invoice for new service.
* &amp;ldquo;RECURRING&amp;rdquo; invoices are generated on an accounts anniversary billing date for monthly services.
* &amp;ldquo;ONE-TIME-CHARGE&amp;rdquo; invoices are generated when one-time charges are applied to an account.
* &amp;ldquo;CREDIT&amp;rdquo; invoices are generated whenever IBM applies a credit against an account&amp;rsquo;s balance.&lt;/p&gt;

&lt;p&gt;The list of invoices should then be filtered to include just the specific type of invoices and dates ranges to be
evaluated.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ownedBrands &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ownedBrands.allOwnedAccounts.invoices&amp;#34;&lt;/span&gt;)

startDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2018-04-01T00:00:00-06:00&amp;#34;&lt;/span&gt;
endDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2018-05-01T11:59:59-06:00&amp;#34;&lt;/span&gt;

invoiceType &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RECURRING&amp;#34;&lt;/span&gt;
invoiceList&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; brand &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; ownedBrands[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ownedBrands&amp;#39;&lt;/span&gt;]:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; account &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; brand[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;allOwnedAccounts&amp;#39;&lt;/span&gt;]:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; invoice &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; account[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoices&amp;#39;&lt;/span&gt;]:
            invoiceCreateDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; invoice[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;createDate&amp;#39;&lt;/span&gt;]
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (invoice[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;typeCode&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; invoiceType) \
                    &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; (dateutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(invoiceCreateDate) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; dateutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(startDate)
                         &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dateutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(invoiceCreateDate) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; dateutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(endDate)):
                invoiceInfo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoice[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;],
                    mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id,createDate,typeCode,invoiceTotalAmount,invoiceTotalRecurringAmount,invoiceTopLevelItemCount&amp;#34;&lt;/span&gt;)
                invoiceList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(invoiceInfo)

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (invoiceList)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;access-invoice-detail&#34;&gt;Access invoice detail&lt;/h2&gt;

&lt;p&gt;Using the list of invoices returned, use the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice/getInvoiceTopLevelItems/&#34;&gt;getInvoiceTopLevelItems&lt;/a&gt;
method from the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice&#34;&gt;Billing_Invoice&lt;/a&gt; class to obtain the list of top level items being billed on the invoice specified.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; invoice &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; InvoiceList:
    topLevelItems &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getInvoiceTopLevelItems(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoice[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (topLevelItems)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;access-sub-item-details&#34;&gt;Access sub item details&lt;/h2&gt;

&lt;p&gt;If additional billing detail is desired for topLevelItems, many items have associated children which have billing details
that make up to the top level item such as memory, storage, or disk.   To access, the details use  &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice_Item/getNonZeroAssociatedChildren&#34;&gt;getNonZeroAssociatedChildren&lt;/a&gt; method in the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Billing_Invoice_Item&#34;&gt;Billing_Invoice_Item&lt;/a&gt;
class, by passing the id received from the getInvoiceTopLevelItems call.  The method only returns those associated children with a non-zero cost.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;nonZeroAssociatedChildren &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice_Item&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getNonZeroAssociatedChildren(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;topLevelItemId)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;sample-script&#34;&gt;Sample script&lt;/h2&gt;

&lt;p&gt;The following sample script creates a .csv file of all the billing level detail for each owned sub account for the dates specified.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; argparse&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; csv&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;logging&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;time
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; dateutil.parser

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getDescription&lt;/span&gt;(categoryCode, detail):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; detail:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;categoryCode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; item:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;categoryCode&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;categoryCode:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()

startDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-07-01T00:00:00&amp;#39;&lt;/span&gt;
endDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-07-31T23:59:59&amp;#39;&lt;/span&gt;
outputname &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;billing-export.csv&amp;#39;&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;## OPEN CSV FILE FOR OUTPUT&lt;/span&gt;
outfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(outputname, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;)
csvwriter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;writer(outfile, delimiter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, quotechar&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;, quoting&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;QUOTE_ALL)

fieldnames &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Invoice_Date&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account_Id&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Invoice_Number&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BillingItemId&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InstanceType&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostName&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Category&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;,
             &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hours&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hourly_Rate&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RecurringCharge&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InvoiceTotal&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InvoiceRecurring&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Type&amp;#39;&lt;/span&gt;]
csvwriter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DictWriter(outfile, delimiter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, fieldnames&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fieldnames)
csvwriter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;writerow(dict((fn, fn) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; fn &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; fieldnames))


&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# GET LIST OF INVOICES FOR ALL BRAND OWNED ACCOUNTS&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Looking up invoices for brand....&amp;#34;&lt;/span&gt;)
ownedBrands &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ownedBrands.allOwnedAccounts.invoices&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# FILTER INVOICES FOR INVOICETYPE AND DATE RANGE REQUESTED&lt;/span&gt;

invoiceType &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RECURRING&amp;#34;&lt;/span&gt;
invoiceList&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; brand &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; ownedBrands[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ownedBrands&amp;#39;&lt;/span&gt;]:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; account &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; brand[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;allOwnedAccounts&amp;#39;&lt;/span&gt;]:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; invoice &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; account[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoices&amp;#39;&lt;/span&gt;]:
            invoiceCreateDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; invoice[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;createDate&amp;#39;&lt;/span&gt;]
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (invoice[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;typeCode&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; invoiceType) \
                    &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; (dateutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(invoiceCreateDate) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; dateutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(startDate)
                         &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dateutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(invoiceCreateDate) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; dateutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(endDate)):
                invoiceInfo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoice[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;],
                    mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id,createDate,typeCode,invoiceTotalAmount,invoiceTotalRecurringAmount,invoiceTopLevelItemCount&amp;#34;&lt;/span&gt;)
                invoiceList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(invoiceInfo)


&lt;span style=&#34;color:#75715e&#34;&gt;## OBTAIN TOP LEVEL DETAIL FROM EACH INVOICE&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; ()
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:&amp;lt;35} {:&amp;lt;15} {:&amp;lt;15} {:&amp;gt;8} {:&amp;gt;16} {:&amp;gt;16} {:&amp;gt;16} {:&amp;lt;15}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invoice Date /&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Account&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invoice&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Items&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Recurring Charge&amp;#34;&lt;/span&gt;,  &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invoice Amount&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Type&amp;#34;&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:&amp;lt;35} {:&amp;lt;15} {:&amp;lt;15} {:&amp;gt;8} {:&amp;gt;16} {:&amp;gt;16} {:&amp;gt;16} {:&amp;lt;15}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;==============&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=======&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=======&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=====&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;================&amp;#34;&lt;/span&gt;,  &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;==============&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;====&amp;#34;&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; invoice &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; invoiceList:
    invoiceId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; invoice[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
    invoiceInfo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoiceId,mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;accountId, id,createDate,typeCode,invoiceTotalAmount,invoiceTotalRecurringAmount,invoiceTopLevelItemCount&amp;#34;&lt;/span&gt;)
    accountId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;accountId&amp;#39;&lt;/span&gt;]
    invoiceDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;createDate&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]
    invoiceTotalAmount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoiceTotalAmount&amp;#39;&lt;/span&gt;])
    invoiceTotalRecurringAmount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoiceTotalRecurringAmount&amp;#39;&lt;/span&gt;])
    invoiceType &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;typeCode&amp;#39;&lt;/span&gt;]
    totalItems&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoiceInfo[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;invoiceTopLevelItemCount&amp;#39;&lt;/span&gt;]

    &lt;span style=&#34;color:#75715e&#34;&gt;# PRINT INVOICE SUMMARY LINE&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:35} {:&amp;lt;15} {:&amp;lt;15} {:&amp;gt;8} {:&amp;gt;16} {:&amp;gt;16,.2f} {:&amp;gt;16,.2f} {:&amp;lt;15}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(invoiceDate,
                                                                          accountId, invoiceId, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;,
                                                                          totalItems,
                                                                          invoiceTotalAmount,
                                                                          invoiceTotalRecurringAmount, invoiceType))

    limit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;## set limit of record t&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; offset &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,totalItems,limit):
        &lt;span style=&#34;color:#75715e&#34;&gt;#print (&amp;#34;Lookup at Offset %s&amp;#34; % offset)&lt;/span&gt;
        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        Billing_Invoice &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getInvoiceTopLevelItems(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;invoiceId, limit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;limit, offset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;offset,
                                mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id, billingItemId, categoryCode, hostName, domainName, description, createDate, totalRecurringAmount,hourlyRecurringFee&amp;#39;&lt;/span&gt;)
        count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# ITERATE THROUGH DETAIL&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; Billing_Invoice:
            billingItemId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;billingItemId&amp;#39;&lt;/span&gt;]
            category &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;categoryCode&amp;#34;&lt;/span&gt;]

            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostName&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; item:
                hostName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostName&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domainName&amp;#39;&lt;/span&gt;]
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                hostName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unnamed Device&amp;#34;&lt;/span&gt;

            recurringFee &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;totalRecurringAmount&amp;#39;&lt;/span&gt;])

            &lt;span style=&#34;color:#75715e&#34;&gt;#IF Monthly calculate hourly rate and total hours&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hourlyRecurringFee&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; item:
                instanceType &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hourly&amp;#34;&lt;/span&gt;
                associated_children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; associated_children &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;:
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
                        associated_children &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice_Item&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getNonZeroAssociatedChildren(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;],mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hourlyRecurringFee&amp;#34;&lt;/span&gt;)
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
                        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;warning(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;getNonZeroAssociatedChildren(): &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))
                        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
                &lt;span style=&#34;color:#75715e&#34;&gt;#calculate total hourlyRecurringFree from associated childrent&lt;/span&gt;

                hourlyRecurringFee &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hourlyRecurringFee&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sum(float(child[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hourlyRecurringFee&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; child &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; associated_children)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; hourlyRecurringFee &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
                    hours &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; round(float(recurringFee) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; hourlyRecurringFee)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                    hours&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                instanceType &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Monthly/Other&amp;#34;&lt;/span&gt;
                hourlyRecurringFee &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
                hours &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; category&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;storage_service_enterprise&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; category&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;performance_storage_iscsi&amp;#34;&lt;/span&gt;:
                billing_detail&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; billing_detail &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;:
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
                        billing_detail &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Billing_Invoice_Item&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getChildren(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description,categoryCode,product&amp;#34;&lt;/span&gt;)
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
                        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;warning(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))

                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; category&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;storage_service_enterprise&amp;#34;&lt;/span&gt;:
                    iops&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;storage_tier_level&amp;#34;&lt;/span&gt;, billing_detail)
                    storage&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;performance_storage_space&amp;#34;&lt;/span&gt;,billing_detail)
                    snapshot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;storage_snapshot_space&amp;#34;&lt;/span&gt;, billing_detail)
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; snapshot&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;:
                        description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;storage&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;iops&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                        description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;storage&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;iops&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; with &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;snapshot
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                    iops&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;performance_storage_iops&amp;#34;&lt;/span&gt;, billing_detail)
                    storage&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getDescription(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;performance_storage_space&amp;#34;&lt;/span&gt;, billing_detail)
                    description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;storage&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;iops
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;]
                description &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; description&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#75715e&#34;&gt;# BUILD CSV OUTPUT &amp;amp; WRITE ROW&lt;/span&gt;
            row &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Invoice_Date&amp;#39;&lt;/span&gt;: invoiceDate,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account_Id&amp;#39;&lt;/span&gt;: accountId,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Invoice_Number&amp;#39;&lt;/span&gt;: invoiceId,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BillingItemId&amp;#39;&lt;/span&gt;: billingItemId,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InstanceType&amp;#39;&lt;/span&gt;: instanceType,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostName&amp;#39;&lt;/span&gt;: hostName,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Category&amp;#39;&lt;/span&gt;: category,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;: description,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hours&amp;#39;&lt;/span&gt;: hours,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hourly_Rate&amp;#39;&lt;/span&gt;: round(hourlyRecurringFee,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RecurringCharge&amp;#39;&lt;/span&gt;: round(recurringFee,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InvoiceTotal&amp;#39;&lt;/span&gt;: invoiceTotalAmount,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InvoiceRecurring&amp;#39;&lt;/span&gt;: invoiceTotalRecurringAmount,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Type&amp;#39;&lt;/span&gt;: invoiceType
                    }
            csvwriter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;writerow(row)
            &lt;span style=&#34;color:#75715e&#34;&gt;#print(row)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##close CSV File&lt;/span&gt;
outfile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>