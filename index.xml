<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/index.xml</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Wed, 26 Apr 2017 00:00:00 UTC</updated>
    
    <item>
      <title>Release notes: April 26, 2017</title>
      <link>https://softlayer.github.io/release_notes/20170426/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20170426/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Pushed code to resolve an issue where mixed case IBMId accounts were unable to upgrade to a Pay as you Go Bluemix Developer Services account.&lt;/li&gt;
&lt;li&gt;Resolved an issue that was causing NetScaler provisions to fail due to the license not being bound to a valid MAC address on the host system.&lt;/li&gt;
&lt;li&gt;Pushed code which added the requirement of using an IBMid in order to link a Platform as a Service account to an Infrastructure as a Service account.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: April 19, 2017</title>
      <link>https://softlayer.github.io/release_notes/20170419/</link>
      <pubDate>Wed, 19 Apr 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20170419/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue that prevented the relevant locations from being returned on replicas with Account Defined Networking.&lt;/li&gt;
&lt;li&gt;Fixed an issue that prevented the relevant mounting point from being returned on accounts with Account Defined Networking.&lt;/li&gt;
&lt;li&gt;Resolved a bug which allowed servers to be ordered with IPv6 subnets for the primary interfaces. This causes servers to fail provisioning.&lt;/li&gt;
&lt;li&gt;Added userData field to the order forms for Bare Metal Servers. Previously only supported on Virtual Guests.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: April 12, 2017</title>
      <link>https://softlayer.github.io/release_notes/20170412/</link>
      <pubDate>Wed, 12 Apr 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20170412/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Rolled out code that improves order form performance on page load time.&lt;/li&gt;
&lt;li&gt;Fixed issue where order validation was not always consistent between regular orders and orders from quotes, such as with hostname and domain validation.&lt;/li&gt;
&lt;li&gt;Corrected the error message when customers without the MANAGE_USER permission attempted to create sub-users.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed a bug causing customer ISO image templates to fail to transfer to new Datacenters.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: April 5, 2017</title>
      <link>https://softlayer.github.io/release_notes/20170405/</link>
      <pubDate>Wed, 05 Apr 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20170405/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed a bug to enforce correct cancellation order of volumes with replicas. Previously it was possible to cancel storage with replica, but the process would fail as the replica must be cancelled first. The portal will now direct to you first cancel the replica volume.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Updated the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest&#34;&gt;SoftLayer_Virtual_Guest&lt;/a&gt; service&amp;rsquo;s &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getCreateObjectOptions&#34;&gt;getCreateObjectOptions&lt;/a&gt; method to not show options that are no longer available, such as old operating systems that are no longer supported.&lt;/li&gt;
&lt;li&gt;Added massReloadOperatingSystem and massFirmwareUpdate to the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server&#34;&gt;SoftLayer_Hardware_Server&lt;/a&gt; Service.&lt;/li&gt;
&lt;li&gt;Fixed the error message returned when calling &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_Notification_Virtual_Guest/createObject&#34;&gt;SoftLayer_User_Customer_Notification_Virtual_Guest::createObject &lt;/a&gt; with an invalid User.&lt;/li&gt;
&lt;li&gt;Deprecated the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price/getRequiredCoreCount&#34;&gt;requiredCoreCount&lt;/a&gt; from being included by default on &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price&#34;&gt;SoftLayer_Product_Item_Price&lt;/a&gt; objects to improve API performance. If you have API requests that use &lt;code&gt;requiredCoreCount&lt;/code&gt; implicitly, please ensure it is included in object masks or move to using &lt;code&gt;capacityRestrictionType&lt;/code&gt;, &lt;code&gt;capacityRestrictionMin&lt;/code&gt;, and &lt;code&gt;capacityRestrictionMax&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue where ordering IP addresses sometimes failed when using the PayPal payment method or when attempting to order from a quote.&lt;/li&gt;
&lt;li&gt;Changed SoftLayer to IBM Bluemix in a number of automated emails and tickets.&lt;/li&gt;
&lt;li&gt;Mass Reboot and Migrate tickets now send out the contents of the ticket updates in emails. Previously they just included links to the ticket in the customer portal.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Show storage on all Virtual Guests</title>
      <link>https://softlayer.github.io/ruby/listVsiBlockDeviceSizes/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/listVsiBlockDeviceSizes/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

# Create a SoftLayer API client object
client = SoftLayer::Client.new()

account_service = client[&#39;SoftLayer_Account&#39;]

# We will retrieve the additional information for each VSI:
mask = &#39;mask[id,hostname,blockDevices[id,mountType,diskImage[capacity]]]&#39;
begin
  # getVirtualGuests() will get all the VSIs that an account has.
  result = account_service.object_mask(mask).getVirtualGuests
  pp result
rescue StandardError =&amp;gt; exception
  puts &amp;quot;Unable to  get the VSIs: #{exception}&amp;quot;
end
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get Notifications</title>
      <link>https://softlayer.github.io/ruby/getNotifications/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/getNotifications/</guid>
      <description>&lt;p&gt;Retrieves all notifications that were created on January 1, 2016.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

theDate = &#39;01/01/2017 01:00:00&#39;
theFilter = {
                &#39;startDate&#39;=&amp;gt; { 
                    &#39;operation&#39;=&amp;gt; &#39;greaterThanDate&#39;,
                    &#39;options&#39;=&amp;gt; [
                        {&#39;name&#39;=&amp;gt; &#39;date&#39;, &#39;value&#39; =&amp;gt; [theDate]}
                    ]
                }
            }



getresults = client[&#39;SoftLayer_Notification_Occurrence_Event&#39;].getAllObjects(filter=theFilter)
pp getresults
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Reload with SSH keys</title>
      <link>https://softlayer.github.io/ruby/reloadWithSshhardware/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/reloadWithSshhardware/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

imageId = 1234567
sshKey1 = 876543
sshKey2 = 456789
serverId = 1154265
        config = {
            &#39;imageTemplateId&#39;=&amp;gt; imageId, 
            &#39;sshKeyIds&#39; =&amp;gt; [sshKey1, sshKey2]
        }

setclient = client[&#39;Hardware_Server&#39;]
reload = setclient.object_with_id(serverId).reloadOperatingSystem(&#39;FORCE&#39;, config)
pp reload	        
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Order a Netscaler</title>
      <link>https://softlayer.github.io/ruby/orderNetscaler/</link>
      <pubDate>Fri, 31 Mar 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/orderNetscaler/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

config = { 
    &#39;orderContainers&#39; =&amp;gt; [
        {&amp;quot;hardware&amp;quot; =&amp;gt; [{
            &amp;quot;primaryBackendNetworkComponent&amp;quot; =&amp;gt; {
                    # REPLACE THIS
                    &amp;quot;networkVlanId&amp;quot; =&amp;gt; 1211234
                },
                &amp;quot;primaryNetworkComponent&amp;quot; =&amp;gt; {
                    # REPLACE THIS
                    &amp;quot;networkVlanId&amp;quot; =&amp;gt; 1212456
                }
            }],
            # REPLACE THIS with your location
            &amp;quot;location&amp;quot; =&amp;gt; &amp;quot;DALLAS09&amp;quot;,
            &amp;quot;packageId&amp;quot; =&amp;gt; 192,
            &amp;quot;quantity&amp;quot; =&amp;gt; 1,
            # Price IDS for Netscaler and 2 IPs
            &amp;quot;prices&amp;quot; =&amp;gt; [
                {&amp;quot;id&amp;quot; =&amp;gt; 44964},
                {&amp;quot;id&amp;quot; =&amp;gt; 17238}
            ]
            }]
        }

order = client[&#39;Product_Order&#39;].verifyOrder(config)

pp order    
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Reloading a server with a custom partition scheme</title>
      <link>https://softlayer.github.io/ruby/reloadCustomPartition/</link>
      <pubDate>Fri, 31 Mar 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/reloadCustomPartition/</guid>
      <description>&lt;p&gt;The following code allows you to reload a Bare Metal server with a custom partitioning scheme. You simply need to change the serverId and the partitions to suit your needs. Note that one partition must be marked as the &amp;lsquo;grow&amp;rsquo; partition.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)
server_id = 1154505

config = { 

    &#39;upgradeHardDriveFirmware&#39; =&amp;gt; 0,
        &#39;upgradeBios&#39; =&amp;gt; 0,
        &#39;hardDrives&#39; =&amp;gt; [
            {
                &#39;complexType&#39; =&amp;gt; &amp;quot;SoftLayer_Hardware_Component_HardDrive&amp;quot;,
                &#39;partitions&#39; =&amp;gt; [
                    { &#39;name&#39; =&amp;gt; { &amp;quot;/&amp;quot; =&amp;gt; { &amp;quot;minimumSize&amp;quot; =&amp;gt; &amp;quot;100&amp;quot;} } },
                    { &#39;name&#39; =&amp;gt; { &amp;quot;/boot&amp;quot; =&amp;gt; { &amp;quot;minimumSize&amp;quot; =&amp;gt; &amp;quot;.25&amp;quot; } } },
                    { &#39;name&#39; =&amp;gt; { &amp;quot;/swap0&amp;quot; =&amp;gt; { &amp;quot;minimumSize&amp;quot; =&amp;gt; &amp;quot;32&amp;quot;} } },
                    { &#39;name&#39; =&amp;gt; { &amp;quot;/tmp&amp;quot; =&amp;gt; { &amp;quot;minimumSize&amp;quot; =&amp;gt; &amp;quot;100&amp;quot;} } },
                    { &#39;name&#39; =&amp;gt; { &amp;quot;/var&amp;quot; =&amp;gt; { &amp;quot;minimumSize&amp;quot; =&amp;gt; &amp;quot;100&amp;quot;} } },
                    { &#39;name&#39; =&amp;gt; { &amp;quot;/remove&amp;quot; =&amp;gt; { &amp;quot;minimumSize&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;, &amp;quot;grow&amp;quot; =&amp;gt; &amp;quot;1&amp;quot; } } } 
                ]
            }
        ]
     }

setclient = client[&#39;Hardware_Server&#39;]
reload = setclient.object_with_id(server_id).reloadOperatingSystem(&#39;FORCE&#39;, config)

pp reload

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: March 29, 2017</title>
      <link>https://softlayer.github.io/release_notes/20170329/</link>
      <pubDate>Wed, 29 Mar 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20170329/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Corrected an issue with customers being unable to claim an order quote for Performance or Endurance storage.&lt;/li&gt;
&lt;li&gt;Fixed an issue where subusers on an account were not able to order Netscaler VPX services even with the appropriate portal permissions.&lt;/li&gt;
&lt;li&gt;Exception message was unclear when a user without the &amp;lsquo;ticket add&amp;rsquo; and &amp;lsquo;ticket view&amp;rsquo; permissions tried to create an upgrade order. New change accurately indicates that the user must have these two permissions in order to create an upgrade order.&lt;/li&gt;
&lt;li&gt;Resolved an issue where customers were unable to set the customer portal timezone to Brazil.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;When creating a ticket the &lt;a href=&#34;http://sldn.softlayer.com/reference/datatypes/SoftLayer_Ticket&#34;&gt;SoftLayer_Ticket template object&lt;/a&gt; requires the assignedUserId property to be defined. This required the additional step of gathering the userId. Going forward the assignedUserId will default to the current user making the API call.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Made changes to the way Post Provisioning Scripts work. The system now drops a small payload onto the customer device to download and execute the requested script, logging all responses to the customer&amp;rsquo;s syslog.&lt;/li&gt;
&lt;li&gt;Resolved an issue that was causing two primary IPv6 subnets to be created when ordering Network Gateway services.&lt;/li&gt;
&lt;li&gt;Pushed code to allow customers based in Serbia, Taiwan, Azerbaijan, Armenia, or South Africa to input Vat ID.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Reloading a server with a custom partition scheme</title>
      <link>https://softlayer.github.io/python/reloadCustomPartition/</link>
      <pubDate>Wed, 29 Mar 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/reloadCustomPartition/</guid>
      <description>&lt;p&gt;The following code allows you to reload a Bare Metal server with a custom partitioning scheme. You simply need to change the serverId and the partitions to suit your needs. Note that one partition must be marked as the &amp;lsquo;grow&amp;rsquo; partition.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
from pprint import pprint as pp

class example():

    def __init__(self):
        self.client = SoftLayer.Client()

    def main(self):
        serverId = 1154505
        config = {
        &amp;quot;upgradeHardDriveFirmware&amp;quot;: &amp;quot;0&amp;quot;,
        &amp;quot;upgradeBios&amp;quot;: &amp;quot;0&amp;quot;,
        &amp;quot;hardDrives&amp;quot;: [
            {
                &amp;quot;complexType&amp;quot;: &amp;quot;SoftLayer_Hardware_Component_HardDrive&amp;quot;,
                &amp;quot;partitions&amp;quot;: [
                    { &amp;quot;name&amp;quot;: &amp;quot;/boot&amp;quot;, &amp;quot;minimumSize&amp;quot;: &amp;quot;.25&amp;quot;},
                    { &amp;quot;name&amp;quot;: &amp;quot;/swap0&amp;quot;, &amp;quot;minimumSize&amp;quot;: &amp;quot;20&amp;quot;},
                    { &amp;quot;name&amp;quot;: &amp;quot;/&amp;quot;, &amp;quot;minimumSize&amp;quot;: &amp;quot;200&amp;quot;},
                    { &amp;quot;name&amp;quot;: &amp;quot;/tmp&amp;quot;, &amp;quot;minimumSize&amp;quot;: &amp;quot;200&amp;quot;},
                    { &amp;quot;name&amp;quot;: &amp;quot;/var&amp;quot;, &amp;quot;minimumSize&amp;quot;: &amp;quot;200&amp;quot;},
                    { &amp;quot;name&amp;quot;: &amp;quot;/remove&amp;quot;, &amp;quot;minimumSize&amp;quot;: &amp;quot;1&amp;quot;, &amp;quot;grow&amp;quot;: &amp;quot;1&amp;quot;}
                ]
            }
        ]
     }

        output = self.client[&#39;Hardware_Server&#39;].reloadOperatingSystem(&#39;FORCE&#39;, config, id=serverId)

        pp(config)
        print &amp;quot;RESULT\n&amp;quot;
        pp(output)

if __name__ == &amp;quot;__main__&amp;quot;:
    main = example()
    main.main()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: March 20, 2017</title>
      <link>https://softlayer.github.io/release_notes/20170320/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20170320/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved an issue with the customer portal timing out with a large number of billing items.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Prevent server errors when using SoftLayer_Product_Package getItemsFromImageTemplate.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue provisioning Hourly Bare Metal servers that would require manual intervention to resolve.&lt;/li&gt;
&lt;li&gt;Fixes a problem that was preventing snapshots from being registered by the poller job.&lt;/li&gt;
&lt;li&gt;Allow hyphens in emails for IBMid&lt;/li&gt;
&lt;li&gt;Fixed an issue with offline migrations on windows virtual machines&lt;/li&gt;
&lt;li&gt;Update Hourly Bare Metal servers to check for mis-configurations before considering available&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Network Topology</title>
      <link>https://softlayer.github.io/python/networkTopology/</link>
      <pubDate>Fri, 17 Mar 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/networkTopology/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;quot;&amp;quot;&amp;quot;
@author Christopher Gallo
&amp;quot;&amp;quot;&amp;quot;
import SoftLayer
from pprint import pprint as pp

class example():

    def __init__(self):

        self.client = SoftLayer.Client()


    def main(self):

        mask = &amp;quot;&amp;quot;&amp;quot;
            mask[attachedNetworkGateway[publicVlan,privateVlan],hardware[fullyQualifiedDomainName],
            network,networkSpace,primaryRouter[hostname],primarySubnet,subnets[networkIdentifier],virtualGuests[fullyQualifiedDomainName]
            ]
        &amp;quot;&amp;quot;&amp;quot;
        orderedVlans = {}
        result = self.client[&#39;SoftLayer_Account&#39;].getNetworkVlans(mask=mask)

        &amp;quot;&amp;quot;&amp;quot;
        This bit builds a nicely structured object of the network topology
        &amp;quot;&amp;quot;&amp;quot;
        for vlan in result:
            vlanNumber = vlan[&#39;vlanNumber&#39;]
            router,dc  = vlan[&#39;primaryRouter&#39;][&#39;hostname&#39;].split(&amp;quot;.&amp;quot;)
            if dc not in orderedVlans:
                orderedVlans[dc] = {}
            if router not in orderedVlans[dc]:
                orderedVlans[dc][router] = {}


            toAppend = {
                &#39;hardware&#39;: vlan[&#39;hardware&#39;],
                &#39;virtualGuests&#39;: vlan[&#39;virtualGuests&#39;],
                &#39;subnets&#39;: vlan[&#39;subnets&#39;]

            }

            if &#39;attachedNetworkGateway&#39; in vlan:
                if vlan[&#39;networkSpace&#39;] == &#39;PUBLIC&#39;:
                    gatewayVlan = vlan[&#39;attachedNetworkGateway&#39;][&#39;publicVlan&#39;][&#39;vlanNumber&#39;]
                elif vlan[&#39;networkSpace&#39;] == &#39;PRIVATE&#39;:
                    gatewayVlan = vlan[&#39;attachedNetworkGateway&#39;][&#39;privateVlan&#39;][&#39;vlanNumber&#39;]
                if gatewayVlan not in orderedVlans[dc][router]:
                    orderedVlans[dc][router][gatewayVlan] = {}
                orderedVlans[dc][router][gatewayVlan][vlanNumber] = toAppend
                orderedVlans[dc][router][gatewayVlan][&#39;gateway&#39;] = True
            else:
                orderedVlans[dc][router][vlanNumber] = toAppend

        &amp;quot;&amp;quot;&amp;quot;
        This bit prints out everything nicely-ish.
        &amp;quot;&amp;quot;&amp;quot;
        for dc in orderedVlans:
            print(&amp;quot;DC: %s&amp;quot; % dc)
            for router in orderedVlans[dc]:
                print(&amp;quot;\tRouter: %s&amp;quot; % router)
                for vlan in orderedVlans[dc][router]:
                    if &#39;gateway&#39; in orderedVlans[dc][router][vlan]:
                        print(&amp;quot;\t\tGATEWAY VLAN: %s&amp;quot; % vlan )
                        for vlanInner in orderedVlans[dc][router][vlan]:

                            if isinstance(vlanInner, int):
                                print(&amp;quot;\t\t\tVLAN: %s&amp;quot; % vlanInner )
                                if len(orderedVlans[dc][router][vlan][vlanInner][&#39;hardware&#39;]):
                                    print(&amp;quot;\t\t\t  ==SERVERS==&amp;quot;)
                                    for hardware in orderedVlans[dc][router][vlan][vlanInner][&#39;hardware&#39;]:
                                        print(&amp;quot;\t\t\t\t%s&amp;quot; % hardware[&#39;fullyQualifiedDomainName&#39;])
                                if len(orderedVlans[dc][router][vlan][vlanInner][&#39;virtualGuests&#39;]):
                                    print(&amp;quot;\t\t\t  ==VIRTUAL SERVERS==&amp;quot;)
                                    for virtualGuest in orderedVlans[dc][router][vlan][vlanInner][&#39;virtualGuests&#39;]:
                                        print(&amp;quot;\t\t\t\t%s&amp;quot; % virtualGuest[&#39;fullyQualifiedDomainName&#39;])
                                if len(orderedVlans[dc][router][vlan][vlanInner][&#39;subnets&#39;]):
                                    print(&amp;quot;\t\t\t  ==SUBNETS==&amp;quot;)
                                    for subnet in orderedVlans[dc][router][vlan][vlanInner][&#39;subnets&#39;]:
                                        print(&amp;quot;\t\t\t\t%s&amp;quot; % subnet[&#39;networkIdentifier&#39;])
                    else:
                        print(&amp;quot;\t\tVLAN: %s&amp;quot; % vlan )

                    if len(orderedVlans[dc][router][vlan][&#39;hardware&#39;]):
                        print(&amp;quot;\t\t  ==SERVERS==&amp;quot;)
                        for hardware in orderedVlans[dc][router][vlan][&#39;hardware&#39;]:
                            print(&amp;quot;\t\t\t%s&amp;quot; % hardware[&#39;fullyQualifiedDomainName&#39;])
                    if len(orderedVlans[dc][router][vlan][&#39;virtualGuests&#39;]):
                        print(&amp;quot;\t\t  ==VIRTUAL SERVERS==&amp;quot;)
                        for vm in orderedVlans[dc][router][vlan][&#39;virtualGuests&#39;]:
                            print(&amp;quot;\t\t\t%s&amp;quot; % vm[&#39;fullyQualifiedDomainName&#39;])
                    if len(orderedVlans[dc][router][vlan][&#39;subnets&#39;]):
                        print(&amp;quot;\t\t  ==SUBNETS==&amp;quot;)
                        for subnet in orderedVlans[dc][router][vlan][&#39;subnets&#39;]:
                            print(&amp;quot;\t\t\t%s&amp;quot; % subnet[&#39;networkIdentifier&#39;])


if __name__ == &amp;quot;__main__&amp;quot;:
    main = example()
    main.main()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DC: sjc03
    Router: bcr02a
        VLAN: 904
          ==VIRTUAL SERVERS==
            jrh-jump.poc.engineering
          ==SUBNETS==
            10.168.140.0
    Router: bcr01a
        GATEWAY VLAN: 1436
            VLAN: 1440
              ==SERVERS==
                jd-test-5600-srv.secore.com
                jd-cos-testing-sjc03.secore.com
              ==SUBNETS==
                10.161.111.64
          ==SERVERS==
            jd-5600-test.secore.com
          ==SUBNETS==
            10.161.110.0
    Router: fcr02a
        VLAN: 857
          ==VIRTUAL SERVERS==
            jrh-jump.poc.engineering
          ==SUBNETS==
            169.44.183.224
    Router: fcr01a
        VLAN: 1296
          ==SERVERS==
            jd-test-5600-srv.secore.com
            jd-cos-testing-sjc03.secore.com
          ==SUBNETS==
            169.45.115.16
            2607:f0d0:2601:00cc:0000:0000:0000:0000
        VLAN: 1273
          ==SERVERS==
            jd-5600-test.secore.com
          ==SUBNETS==
            169.44.136.64
            2607:f0d0:2601:0065:0000:0000:0000:0000
            2607:f0d0:2601:00ac:0000:0000:0000:0000
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: March 8, 2017</title>
      <link>https://softlayer.github.io/release_notes/20170308/</link>
      <pubDate>Wed, 08 Mar 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20170308/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Corrected an issue with ordering Fixed Configuration Servers. When a customer selected an operating system before a datacenter on fixed configurations servers the portal would show errors about storage groups being needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Added the getBuckets and &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Hub_Cleversafe_Account/getCloudObjectStoragePolicy&#34;&gt;getCloudObjectStoragePolicy&lt;/a&gt; methods to the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Hub_Cleversafe_Account&#34;&gt;SoftLayer_Network_Storage_Hub_Cleversafe_Account&lt;/a&gt; service.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: March 02, 2017</title>
      <link>https://softlayer.github.io/release_notes/20170302/</link>
      <pubDate>Thu, 02 Mar 2017 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20170302/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved a bug when calling the methods &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi/failoverToReplicant&#34;&gt;failoverToReplicant&lt;/a&gt;, &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi/failbackFromReplicant&#34;&gt;failbackFromReplicant&lt;/a&gt;, or &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi/immediateFailoverToReplicant&#34;&gt;immediateFailoverToReplicant&lt;/a&gt; from the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi&#34;&gt;SoftLayer_Network_Storage_Iscsi&lt;/a&gt; class instead of the base &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage&#34;&gt;SoftLayer_Network_Storage&lt;/a&gt;, in which the method would return true, but the process would not be started.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Created an internal tool to unlink Bluemix and SoftLayer accounts. Customers can now open a ticket to request their Bluemix and SoftLayer accounts be unlinked.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>