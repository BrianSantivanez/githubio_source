<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>SoftLayer API on SoftLayer API </title>
    <link>https://softlayer.github.io/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Tue, 26 Feb 2019 00:00:00 UTC</updated>
    
    <item>
      <title>Release notes: February 26, 2019</title>
      <link>https://softlayer.github.io/release_notes/2019/20190226/</link>
      <pubDate>Tue, 26 Feb 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2019/20190226/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Adds option for new customers to select if they are ordering on behalf of a business or as an individual. Also adds a checkbox allowing customers to specify they do not have a VAT ID.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Adds validation for userStatusId on api request SoftLayer_User_Customer::createObject&lt;/li&gt;
&lt;li&gt;Improved performance of &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_User_Customer/removeAllVirtualAccessForThisUser/&#34;&gt;SoftLayer_User_Customer::removeAllVirtualAccessForThisUser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adds the Exception field tor the SLDN API documentation&lt;/li&gt;
&lt;li&gt;Added SLDNDocumentation tag to new iamAuthorizationFlag variable&lt;/li&gt;
&lt;li&gt;Adds &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Hardware_Server/createFirmwareReflashTransaction/&#34;&gt;SoftLayer_Hardware_Server::createFirmwareReflashTransaction&lt;/a&gt; and [SoftLayer_Hardware_Server::massFirmwareReflash](/reference/services/SoftLayer_Hardware_Server/massFirmwareReflash/ to hardware servers allowing customers to reflash the components to the firmware currently installed on the device.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Modified reclaim process to reset root/ADMIN IPMI passwords&lt;/li&gt;
&lt;li&gt;Allow creation of array slices in the RAID BIOS&lt;/li&gt;
&lt;li&gt;Fix secondary static IPv6 subnets ordered with servers not being correctly associated to billing.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: February 20, 2019</title>
      <link>https://softlayer.github.io/release_notes/2019/20190220/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2019/20190220/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Use cloud.ibm.com URLs when sending emails to, or creating ticket updates for, linked customers.&lt;/li&gt;
&lt;li&gt;Replace nonfunctional KnowledgeLayer links in emails and automated ticket updates with IBM Cloud docs links&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Improved performance of SoftLayer_Account::getVirtualGuests() when using objectFilters&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/findGcImagesByCurrentUser/&#34;&gt;findGCImagesByCurrentUser&lt;/a&gt; is currently returning all the SoftLayer_Virtual_Guest_Block_Device_Template_Groups associated with a user&amp;rsquo;s account.  This needs to be updated to return an array of only the applicable parent SVGBDTG&lt;/li&gt;
&lt;li&gt;Improve Server.activatePublicPort, Server.activatePrivatePort, Server.shutdownPublicPort, and Server.shutdownPrivatePort documentation when referring to how they are aliases of Server.set*NetworkInterfaceSpeed operations.&lt;/li&gt;
&lt;li&gt;Fixed a typo in the exception message for currentDate filter with &lt;a href=&#34;reference/services/SoftLayer_Event_Log/getAllObjects/&#34;&gt;SoftLayer_Event_Log::getAllObjects&lt;/a&gt; call&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Adds a wait after a Bluemix timeout before attempting recovery&lt;/li&gt;
&lt;li&gt;Add Preload Assign Network transaction step&lt;/li&gt;
&lt;li&gt;Fixed issue with billing cycle start date incorrectly calculated&lt;/li&gt;
&lt;li&gt;IBM unique ID should be used to get the user, instead of email&lt;/li&gt;
&lt;li&gt;Bug fix for empty Nessus scan reports&lt;/li&gt;
&lt;li&gt;support VRRP protocol in security groups&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;catalog&#34;&gt;Catalog&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Remove Package 837 from Availability in Sao Paulo&lt;/li&gt;
&lt;li&gt;2Gbps and 5Gbps speeds for Direct Link Exchange offering&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Working with Placement Groups</title>
      <link>https://softlayer.github.io/rest/placementGroups/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/placementGroups/</guid>
      <description>

&lt;h2 id=&#34;placement-groups-https-console-bluemix-net-docs-vsi-vsi-placegroup-html-placement-groups&#34;&gt;&lt;a href=&#34;https://console.bluemix.net/docs/vsi/vsi_placegroup.html#placement-groups&#34;&gt;Placement Groups&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;creation&#34;&gt;Creation&lt;/h3&gt;

&lt;p&gt;To create a group, we need to know a few pieces of information. With the slcli this can all be obtained with &lt;code&gt;slcli vs placementgroup create-options&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Router (Pod in a datacenter) the group should be located behind.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Virtual_PlacementGroup/getAvailableRouters.json&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Virtual_PlacementGroup/getAvailableRouters&#34;&gt;Virtual_PlacementGroup::getAvailableRouters()&lt;/a&gt; will print a list of all routers that support placement groups. You will need the router ID listed.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rule which the group should enforce&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34; &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Virtual_PlacementGroup_Rule/getAllObjects.json&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Virtual_PlacementGroup_Rule/getAllObjects/&#34;&gt;SoftLayer_Virtual_PlacementGroup_Rule::getAllObjects()&lt;/a&gt; will print a list of rules useable, keep track of the Id. At the moment there is only the &amp;lsquo;SPREAD&amp;rsquo; rule which ensures each VSI is on a different host.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Name that we want to give the group.
This is always the hardest part, sadly we don&amp;rsquo;t have an API to generate a name for you.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Next, create the instance.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;reference/services/SoftLayer_Virtual_PlacementGroup/createObject/&#34;&gt;SoftLayer_Virtual_PlacementGroup::createObject()&lt;/a&gt; takes as an argument a &lt;a href=&#34;reference/datatypes/SoftLayer_Virtual_PlacementGroup/&#34;&gt;SoftLayer_Virtual_PlacementGroup&lt;/a&gt; datatype. You only need to supply &lt;code&gt;backendRouterId&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;ruleId&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;slcli vs placementgroup create --name test1234 -b bcr01.wdc01 -r SPREAD&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;test1234&amp;#34;, &amp;#34;backendRouterId&amp;#34;: 16358, &amp;#34;ruleId&amp;#34;: 1}]}&amp;#39; &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Virtual_PlacementGroup/createObject.json&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;listing&#34;&gt;Listing&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;slcli vs placementgroup list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To list out all the placement groups, we use &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Account/getPlacementGroups/&#34;&gt;SoftLayer_Account/getPlacementGroups&lt;/a&gt;
with the mask &lt;code&gt;mask[id, name, createDate, rule, guestCount, backendRouter[id, hostname]]&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/getPlacementGroups.json?objectMask=mask%5Bid%2C+name%2C+createDate%2C+rule%2C+guestCount%2C+backendRouter%5Bid%2C+hostname%5D%5D&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;deleting&#34;&gt;Deleting&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;slcli -vvv  vs placementgroup delete test1234&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Deleting is pretty easy, first you will need the PlacementGroup id, then just call &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Virtual_PlacementGroup/deleteObject/&#34;&gt;SoftLayer_Virtual_PlacementGroup::deleteObject()&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET -H &amp;#34;Accept: */*&amp;#34;  &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Virtual_PlacementGroup/81435/deleteObject.json&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To delete a PlacementGroup, it is required all servers in that group be delete. You can use &lt;code&gt;slcli -vvv  vs placementgroup delete test1234 --purge&lt;/code&gt; for that, or simply delete each VSI beforehand.&lt;/p&gt;

&lt;h3 id=&#34;adding-vsis-to-a-group&#34;&gt;Adding VSIs to a group.&lt;/h3&gt;

&lt;p&gt;To create a VSI in a placement group, you need to supply the placementGroupId in your &lt;a href=&#34;https://softlayer.github.io/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest/&#34;&gt;SoftLayer_Container_Product_Order_Virtual_Guest&lt;/a&gt; container. This information is added at the same level hostname and domain are set.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;slcli vs create -H test12345 -D test.com -f  B1_1X2X25 -d mex01 -o DEBIAN_LATEST --placementgroup test12345&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X POST  -d &amp;#39;
{&amp;#34;parameters&amp;#34;: [{
    &amp;#34;imageTemplateId&amp;#34;: null,
    &amp;#34;location&amp;#34;: &amp;#34;449600&amp;#34;,
    &amp;#34;packageId&amp;#34;: 1035,
    &amp;#34;presetId&amp;#34;: 583,
    &amp;#34;prices&amp;#34;: [{
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 202563,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;Debian GNU/Linux 9.x Stretch/Stable - Minimal Install (64 bit) &amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 2202,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;25 GB (SAN)&amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 905,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;Reboot / Remote Console&amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 210301,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;100 Mbps Public &amp;amp; Private Network Uplinks&amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 1800,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;0 GB Bandwidth Allotment&amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 21,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;1 IP Address&amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 210349,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;Host Ping and TCP Service Monitoring&amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 57,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;Email and Ticket&amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 210353,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;Automated Reboot from Monitoring&amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 420,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account&amp;#34;
        }
    }, {
        &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;id&amp;#34;: 418,
        &amp;#34;recurringFee&amp;#34;: &amp;#34;0&amp;#34;,
        &amp;#34;item&amp;#34;: {
            &amp;#34;description&amp;#34;: &amp;#34;Nessus Vulnerability Assessment &amp;amp; Reporting&amp;#34;
        }
    }],
    &amp;#34;quantity&amp;#34;: 1,
    &amp;#34;sourceVirtualGuestId&amp;#34;: null,
    &amp;#34;sshKeys&amp;#34;: [],
    &amp;#34;useHourlyPricing&amp;#34;: true,
    &amp;#34;virtualGuests&amp;#34;: [{
        &amp;#34;domain&amp;#34;: &amp;#34;test.com&amp;#34;,
        &amp;#34;hostname&amp;#34;: &amp;#34;test12345&amp;#34;,
        &amp;#34;placementGroupId&amp;#34;: 12345
    }],
    &amp;#34;complexType&amp;#34;: &amp;#34;SoftLayer_Container_Product_Order_Virtual_Guest&amp;#34;
}]} &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Product_Order/placeOrder.json&amp;#39;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Bandwidth Usage Reports</title>
      <link>https://softlayer.github.io/python/bandwidthData/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/bandwidthData/</guid>
      <description>

&lt;h3 id=&#34;data-time-alignment&#34;&gt;Data Time Alignment&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;reference/services/SoftLayer_Metric_Tracking_Object/&#34;&gt;SoftLayer_Metric_TrackingObject&lt;/a&gt; class will auto-align your requested time to its nearest data collection boundary.&lt;/p&gt;

&lt;p&gt;For example, if you wanted bandwidth data from &lt;code&gt;2019-02-03T00:30:00&lt;/code&gt; to &lt;code&gt;2019-02-04T00:30:01&lt;/code&gt; with a 3600s rollup, you would get data back from &lt;code&gt;2019-02-03T01:00:00&lt;/code&gt; to &lt;code&gt;2019-02-04T00:00:00&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is especially problematic when requesting rollups for 12 and 24 hour periods. For these, the collection boundary starts at 00:00 UTC. So if you are in CST timezone for example, your request of data from &lt;code&gt;2019-02-03T00:00:00&lt;/code&gt; to &lt;code&gt;2019-02-04T00:00:00&lt;/code&gt; will get aligned to &lt;code&gt;2019-02-03T18:00:00-06:00&lt;/code&gt; and &lt;code&gt;2019-02-03T18:00:00-06:00&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So if you are interested in daily values of your bandwidth, make sure to understand you should send in your requests in UTC so everything aligns to what you requested. This script does this for you, which should hopefully help.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Softlayer Stores in octets (bytes), sizes printed are in Giga Bytes (octets / 1024^3)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Sum values are a running total for the time period requested.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; logging
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; calendar
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt;  click
 
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dateToEpoch&lt;/span&gt;(ctx, param, value):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;A handy function to take a &amp;#39;YYYY-MM-DD&amp;#39; date and return a datetime object
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
        datetime_object &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(value, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        datetime_object&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(tzinfo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timezone&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utc)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; datetime_object
    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ValueError&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;raise&lt;/span&gt; click&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BadParameter(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to parse date: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; value)
 
&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;example&lt;/span&gt;():
 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, start, end):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       :param int start: epoch time to start at. Should align to 00:00 UTC
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       :param int end: epoch time to end at. Should align to 00:00 UTC
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
        debugger &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DebugTransport(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transport)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transport &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; debugger
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; end
 
        &lt;span style=&#34;color:#75715e&#34;&gt;# logger = logging.getLogger()&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# logger.addHandler(logging.StreamHandler())&lt;/span&gt;
   
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;debug&lt;/span&gt;(self):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Useful for printing out the exact API calls that were used. If using the rest transport, will print cure-able commands.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; call &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_last_calls():
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;print_reproduceable(call))
 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(self):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Goes through the server and virtualGuest list of servers. Uses pagination to step through large server lists.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Getting reports from &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -&amp;gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;end))
        mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;mask[id,hostname,fullyQualifiedDomainName,metricTrackingObject[id]]&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        servers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;call(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;getHardware&amp;#39;&lt;/span&gt;, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask, iter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, limit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; server &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; servers:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; server[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fullyQualifiedDomainName&amp;#39;&lt;/span&gt;])
            data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getBWReport(server[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;metricTrackingObject&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;detailedReport(server, data)
 
        guests &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;call(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;getVirtualGuests&amp;#39;&lt;/span&gt;, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask, iter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, limit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; server &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; guests:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; server[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fullyQualifiedDomainName&amp;#39;&lt;/span&gt;])
            data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getBWReport(server[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;metricTrackingObject&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;detailedReport(server, data)
 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;detailedReport&lt;/span&gt;(self, server, data):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Prints out the collected data, does sime date formatting to make it look nice. 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        This bit only works in py3.7 because it supports the -06:00 TZ format (part of %z). If you are not using py3.7, you could just print out the date as is, which would be in your local timezone.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Start Date             , End Data               , In , Out, In Sum, Out Sum&amp;#34;&lt;/span&gt;)
        bw_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
        total_in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        total_out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; point &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data:
            start_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; point[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dateTime&amp;#39;&lt;/span&gt;]
            counter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convert(point[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counter&amp;#39;&lt;/span&gt;])
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; point[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;publicIn_net_octet&amp;#39;&lt;/span&gt;:
                bw_data[start_date] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;in&amp;#39;&lt;/span&gt;: counter}
            &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; point[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;publicOut_net_octet&amp;#39;&lt;/span&gt;:
                bw_data[start_date][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;out&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; counter
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; point &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; bw_data:
            &lt;span style=&#34;color:#75715e&#34;&gt;# make a datetime object out of the date SL gave us, convert it BACK to UTC&lt;/span&gt;
            start_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(point, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;T%H:%M:%S%z&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astimezone(datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timezone&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utc)
            &lt;span style=&#34;color:#75715e&#34;&gt;# since our rollup is 86400, our end date is + 86400 sceonds&lt;/span&gt;
            end_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start_date &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timedelta(seconds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;)
            total_in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; round(total_in &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; float(bw_data[point][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;in&amp;#39;&lt;/span&gt;]),&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
            total_out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; round(total_out &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; float(bw_data[point][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;out&amp;#39;&lt;/span&gt;]),&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (
                start_date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S %Z&amp;#34;&lt;/span&gt;),
                end_date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S %Z&amp;#34;&lt;/span&gt;),
                bw_data[point][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;in&amp;#39;&lt;/span&gt;],
                bw_data[point][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;out&amp;#39;&lt;/span&gt;],
                total_in,
                total_out)
            )
 
 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getBWReport&lt;/span&gt;(self, tracking_id):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        start and end here are getting converted to epoch time so we don&amp;#39;t have to worry about properly specifying a timezone. 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;getBWReport&amp;#34;&lt;/span&gt;)
        start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timegm(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timetuple())
        end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timegm(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;end&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timetuple())
        data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;call(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Metric_Tracking_Object&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;getBandwidthData&amp;#39;&lt;/span&gt;, start, end, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;public&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tracking_id)
        &lt;span style=&#34;color:#75715e&#34;&gt;# pp(data)&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; data
 
 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;convert&lt;/span&gt;(self, bytes):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;  round(int(bytes) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; ),&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
 
&lt;span style=&#34;color:#a6e22e&#34;&gt;@click.command&lt;/span&gt;()
&lt;span style=&#34;color:#a6e22e&#34;&gt;@click.option&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--start&amp;#39;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2019-01-01&amp;#39;&lt;/span&gt;, help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Start date, YYYY-MM-DD&amp;#39;&lt;/span&gt;, callback&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dateToEpoch)
&lt;span style=&#34;color:#a6e22e&#34;&gt;@click.option&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--end&amp;#39;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2019-02-01&amp;#39;&lt;/span&gt;, help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;End Date, YYYY-MM-DD&amp;#39;&lt;/span&gt;, callback&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dateToEpoch)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(start, end):
    main &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; example(start, end)
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;main()
    &lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this to print out the API calls made.&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#main.debug()&lt;/span&gt;
 
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    main()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;rest-calls-made&#34;&gt;REST Calls made&lt;/h3&gt;

&lt;p&gt;Get server list, with tracking object Ids&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X GET &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/getHardware.json?objectMask=mask%5Bid%2Chostname%2CfullyQualifiedDomainName%2CmetricTrackingObject%5Bid%5D%5D&amp;amp;resultLimit=0%2C2&amp;#39;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get bandwidth data&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -u $SL_USER:$SL_APIKEY -X POST  -d &amp;#39;{&amp;#34;parameters&amp;#34;: [1546300800, 1548979200, &amp;#34;public&amp;#34;, 86400]}&amp;#39; &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/26570093/getBandwidthData.json&amp;#39;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release notes: February 08, 2019</title>
      <link>https://softlayer.github.io/release_notes/2019/20190208/</link>
      <pubDate>Fri, 08 Feb 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2019/20190208/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;IAM User Management editor Role is now able to add VPN only user&lt;/li&gt;
&lt;li&gt;Show suspend usage rates as hourly fees in order email&lt;/li&gt;
&lt;li&gt;Replaces Bluemix URLs in email templates with IBM Cloud URLs&lt;/li&gt;
&lt;li&gt;Fixed html being sent as plain text in notification emails.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Update SLDN doc for Customer::createObject&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Restore ability to enable IPMI ports in select pods&lt;/li&gt;
&lt;li&gt;Fix bug that would&amp;rsquo;ve prevented duplicate volume orders with an IOPS to space ratio of 0.3 IOPS per GB.&lt;/li&gt;
&lt;li&gt;Fix bindVlan for LBaaS provisions&lt;/li&gt;
&lt;li&gt;Fixed an issue preventing users with only IAM User Management that are not able to add an ACTIVE user on a linked account to Bluemix&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;catalog&#34;&gt;Catalog&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;VMware vSAN ReadyNode is now GA (packageId = 1053)&lt;/li&gt;
&lt;li&gt;Create a catalog line item for Caveonix in pkg 907&lt;/li&gt;
&lt;li&gt;Added Micro VSI U1.4x8&lt;/li&gt;
&lt;li&gt;Add redundant power supply (50221 / 469) to the order form for the following packages (all 1U) - 837 (Skylake dual proc), 911 (Kabylake 1270), 551 (Broadwell dual proc), 253 (Haswell dual proc), 257 (Haswell 1270). 1091 Cascade dual proc)

&lt;ul&gt;
&lt;li&gt;Conflict the redundant power in the following DC&amp;rsquo;s that cannot handle it for the most part: AMS01, AMS03, DAL01, DAL05, DAL06, DAL07, DAL08, DAL09, FRA02, HKG02, HOU02, LON02, MEX01, MEL01, MIL01, MON01, PAR01, SEA01, SJC01, SNG01, SYD01, TOK02, TOR01, WDC01, WDC03&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: January 31, 2019</title>
      <link>https://softlayer.github.io/release_notes/2019/20190131/</link>
      <pubDate>Thu, 31 Jan 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2019/20190131/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Two translation keys are not shown correctly when an sub user with ES language places a Bare Metal Server order from Manage portal&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;SoftLayer_Account::getEvaultNetworkStorage will now properly allow objectFilters using billingItem ids. Previously any filters on this method using a billing item would return empty result.&lt;/li&gt;
&lt;li&gt;SoftLayer_Virtual_Guest::removeTag will return False if a tag could not be found to remove, previously this would return True&lt;/li&gt;
&lt;li&gt;Fixed a bug preventing users who have migrated to IBMid being only able to see tags of hardware that their user or sub users have created. Users with the HARDWARE_DETAILS permission should now be able to see all hardware tags.&lt;/li&gt;
&lt;li&gt;Skip validation when setting an autoscale group to suspended.&lt;/li&gt;
&lt;li&gt;Implemented SoftLayer_Virtual_PlacementGroup_Rule::getAllObjects and exposed to the SLDN and internal API&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Added the ability to order Windows VSIs from an image template with more than 1 CPU/1GB&lt;/li&gt;
&lt;li&gt;LBaaS - Patch for MZR subnet filtering&lt;/li&gt;
&lt;li&gt;When a customer deletes an auto-scale group member which causes an insufficient capacity error, it doesn&amp;rsquo;t incorrectly inform them that the cancellation could not be processed.&lt;/li&gt;
&lt;li&gt;Send the password expired notification to customer when the expired date is exactly 3 days or 7 days or 14 days.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: January 25, 2019</title>
      <link>https://softlayer.github.io/release_notes/2019/20190125/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2019/20190125/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix ordering of dedicated hosts with GPUs from the control portal.&lt;/li&gt;
&lt;li&gt;Replace SoftLayer home page URL in emails, and one automated ticket update, with IBM Cloud URL. Replace KnowledgeLayer URL in emails with IBM Cloud Docs URL.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Virtual_Guest/getCurrentBillingTotal/&#34;&gt;getCurrentBillingTotal&lt;/a&gt; will now include any usage based items&lt;/li&gt;
&lt;li&gt;Include the missig permission keyNames in change parent exception.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Removes the restriction on cloudinit RHEL to be BYOL.&lt;/li&gt;
&lt;li&gt;Automatically adds subscriptions to newly created activation keys.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: January 18, 2019</title>
      <link>https://softlayer.github.io/release_notes/2019/20190118/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2019/20190118/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Auto close invoice ready and payment due tickets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixes a bug that caused the brand/sub-brand creation to fail when IBMid feature is turned off.&lt;/li&gt;
&lt;li&gt;User_Customer::getAllowedVirtualGuestIds() should no longer be returning RESERVED_CAPACITY guests.&lt;/li&gt;
&lt;li&gt;Update the accountId on queries on the permission_log class.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;catalog&#34;&gt;Catalog&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;New Package - BI.S3.NW1500 (OS Options)&lt;/li&gt;
&lt;li&gt;New Package - BI.S3.NW1500 (Vmware)&lt;/li&gt;
&lt;li&gt;Remove Package 911 from Availability in Sao Paulo&lt;/li&gt;
&lt;li&gt;Remove 800GB SSD&lt;/li&gt;
&lt;li&gt;Added 7.68TB SATA SSD ( HARD_DRIVE_7_68TB_SSD_SED_1DWPD ) to the following package:

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;1U&lt;/em&gt;  273, 253, 551, 837, 200, 737, 146, 261, 255, 257, 259, 126, 143&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2U&lt;/em&gt;  265, 251, 553, 797, 737, 200, 839, 142, 148, 144, 50&lt;/li&gt;
&lt;li&gt;&lt;em&gt;4U&lt;/em&gt;  263, 248, 555, 267, 271, 234, 158, 56, 147, 833&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Add SYD05 to 1075 Package&lt;/li&gt;
&lt;li&gt;Add redundant power supply (50221 / 469) to the order form for the following packages (all 1U) - 837 (Skylake dual proc), 911 (Kabylake 1270), 551 (Broadwell dual proc), 253 (Haswell dual proc), 257 (Haswell 1270)

&lt;ul&gt;
&lt;li&gt;Except in AMS01, DAL01, DAL05, DAL06, DAL07, SEA01, SJC01, WDC01&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue impacting Nessus scanners.&lt;/li&gt;
&lt;li&gt;Fixed an issue with customer license keys being limited to a set number of hosts.&lt;/li&gt;
&lt;li&gt;Allow for encryption of both primary and secondary VPC volumes.&lt;/li&gt;
&lt;li&gt;Fixed issues in the initial Redhat per customer key release. Improves error messages and logging, while also fixing an error when deleting systems on newer satellites that was causing usage to not decrease and errors when trying to set max_hosts.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Working with placement groups</title>
      <link>https://softlayer.github.io/go/placement_group.go/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/go/placement_group.go/</guid>
      <description>&lt;p&gt;Create Placement Group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;encoding/json&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/services&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/session&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {

	&lt;span style=&#34;color:#75715e&#34;&gt;// Create a session
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;()
	
	&lt;span style=&#34;color:#75715e&#34;&gt;// Get SoftLayer_Virtual_PlacementGroup service.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetVirtualPlacementGroupService&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;)

	&lt;span style=&#34;color:#75715e&#34;&gt;// A Virtual_PlacementGroup template
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;templateObject&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;datatypes&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Virtual_PlacementGroup&lt;/span&gt;{

		&lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;:            &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;),
		&lt;span style=&#34;color:#a6e22e&#34;&gt;BackendRouterId&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Int&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12345&lt;/span&gt;),
		&lt;span style=&#34;color:#a6e22e&#34;&gt;RuleId&lt;/span&gt;:          &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Int&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
	}
	
	&lt;span style=&#34;color:#75715e&#34;&gt;// Get SoftLayer_Virtual_PlacementGroup service.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;CreateObject&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;templateObject&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MarshalIndent&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;     &amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(string(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;))
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete Placement Group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;encoding/json&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/services&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/session&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {


	&lt;span style=&#34;color:#75715e&#34;&gt;//Placement group&amp;#39;s associated unique ID.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;placementId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12345&lt;/span&gt;
	
    &lt;span style=&#34;color:#75715e&#34;&gt;// Create a session
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;()
	
    &lt;span style=&#34;color:#75715e&#34;&gt;// Get SoftLayer_Virtual_PlacementGroup service.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetVirtualPlacementGroupService&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;)

	&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Id&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;placementId&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;DeleteObject&lt;/span&gt;()
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MarshalIndent&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;     &amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(string(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;))
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get Guests from a Placement Group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;encoding/json&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/services&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/session&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {

    &lt;span style=&#34;color:#75715e&#34;&gt;//Placement group&amp;#39;s associated unique ID.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;placementId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12345&lt;/span&gt;
	
    &lt;span style=&#34;color:#75715e&#34;&gt;// Create a session
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;()

    &lt;span style=&#34;color:#75715e&#34;&gt;// Get SoftLayer_Virtual_PlacementGroup service.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetVirtualPlacementGroupService&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;)

	&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Id&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;placementId&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;GetGuests&lt;/span&gt;()
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MarshalIndent&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;     &amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(string(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;))
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get Placement Groups of the Account&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;encoding/json&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/services&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/session&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {

	&lt;span style=&#34;color:#75715e&#34;&gt;// Create a session
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;()
	
	&lt;span style=&#34;color:#75715e&#34;&gt;// Get SoftLayer_Account service.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;accountService&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetAccountService&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;)

	&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;accountService&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetPlacementGroups&lt;/span&gt;()
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MarshalIndent&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;     &amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(string(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;))
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Order a Virtual Guest into a specific Placement Group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;encoding/json&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/services&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/session&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {

    &lt;span style=&#34;color:#75715e&#34;&gt;// Create a session
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    	&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;()
    
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;quantity&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TORONTO&amp;#34;&lt;/span&gt;
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;packageId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;835&lt;/span&gt;
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;presetId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;215&lt;/span&gt;
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;hostname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;domain&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;placementId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12345&lt;/span&gt;
    
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;virtualGuests&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; []&lt;span style=&#34;color:#a6e22e&#34;&gt;datatypes&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Virtual_Guest&lt;/span&gt;{
    		{
    			&lt;span style=&#34;color:#a6e22e&#34;&gt;Hostname&lt;/span&gt;:         &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;hostname&lt;/span&gt;),
    			&lt;span style=&#34;color:#a6e22e&#34;&gt;Domain&lt;/span&gt;:           &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;domain&lt;/span&gt;),
    			&lt;span style=&#34;color:#a6e22e&#34;&gt;PlacementGroupId&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Int&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;placementId&lt;/span&gt;),
    		},
    	}
    
    	&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    	List of minimal required items for ordering VSI:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Computing Instance
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -RAM
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -First Disk
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Remote Management
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Uplink Port Speeds
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Public Bandwidth
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Primary IP Addresses
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Operating System
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Monitoring
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Notification
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Response
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -VPN Management - Private Network
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    		 -Vulnerability Assessments &amp;amp; Management
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    	Computing Instance, RAM, First Hard Drive are covered by the preset.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    	*/&lt;/span&gt;
    
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;orderItems&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; [] &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;{
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REBOOT_REMOTE_CONSOLE&amp;#34;&lt;/span&gt;,
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;100_MBPS_PUBLIC_PRIVATE_NETWORK_UPLINKS&amp;#34;&lt;/span&gt;,
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BANDWIDTH_20000_GB&amp;#34;&lt;/span&gt;,
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1_IP_ADDRESS&amp;#34;&lt;/span&gt;,
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OS_CENTOS_7_X_MINIMAL_64_BIT&amp;#34;&lt;/span&gt;,
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONITORING_HOST_PING_AND_TCP_SERVICE&amp;#34;&lt;/span&gt;,
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NOTIFICATION_EMAIL_AND_TICKET&amp;#34;&lt;/span&gt;,
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AUTOMATED_REBOOT_FROM_MONITORING&amp;#34;&lt;/span&gt;,
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UNLIMITED_SSL_VPN_USERS_1_PPTP_VPN_USER_PER_ACCOUNT&amp;#34;&lt;/span&gt;,
    		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NESSUS_VULNERABILITY_ASSESSMENT_REPORTING&amp;#34;&lt;/span&gt;,
    	}
    	&lt;span style=&#34;color:#75715e&#34;&gt;// Build a skeleton SoftLayer_Product_Item_Price objects.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    	&lt;span style=&#34;color:#a6e22e&#34;&gt;prices&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getItemPriceList&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;packageId&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;orderItems&lt;/span&gt;)
    
    	&lt;span style=&#34;color:#75715e&#34;&gt;// Build a container_Product_Order object.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    	&lt;span style=&#34;color:#a6e22e&#34;&gt;orderTemplate&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;datatypes&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Container_Product_Order&lt;/span&gt;{
    		&lt;span style=&#34;color:#a6e22e&#34;&gt;Quantity&lt;/span&gt;:      &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Int&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;quantity&lt;/span&gt;),
    		&lt;span style=&#34;color:#a6e22e&#34;&gt;Location&lt;/span&gt;:      &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;location&lt;/span&gt;),
    		&lt;span style=&#34;color:#a6e22e&#34;&gt;PackageId&lt;/span&gt;:     &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Int&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;packageId&lt;/span&gt;),
    		&lt;span style=&#34;color:#a6e22e&#34;&gt;PresetId&lt;/span&gt;:      &lt;span style=&#34;color:#a6e22e&#34;&gt;sl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Int&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;presetId&lt;/span&gt;),
    		&lt;span style=&#34;color:#a6e22e&#34;&gt;Prices&lt;/span&gt;:        &lt;span style=&#34;color:#a6e22e&#34;&gt;prices&lt;/span&gt;,
    		&lt;span style=&#34;color:#a6e22e&#34;&gt;VirtualGuests&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;virtualGuests&lt;/span&gt;,
    	}
    	&lt;span style=&#34;color:#75715e&#34;&gt;// Get SoftLayer_Product_Order service.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    	&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetProductOrderService&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;)
    
    	&lt;span style=&#34;color:#75715e&#34;&gt;// Use verifyOrder() method to check for errors. Replace this with placeOrder() when
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    	&lt;span style=&#34;color:#75715e&#34;&gt;// you are ready to order.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    	&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;VerifyOrder&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;orderTemplate&lt;/span&gt;)
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
    		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n Unable to place order:\n - %s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
    		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
    	}
    
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MarshalIndent&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    &amp;#34;&lt;/span&gt;)
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
    		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt;)
    		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
    	}
    
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(string(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;))
    
    }
    
    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    Converts a list of item keyNames to a list of item prices
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    given package associated with the prices and a list itemsKeyNames.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getItemPriceList&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Session&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;packageId&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;itemKeyNames&lt;/span&gt; [] &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) (&lt;span style=&#34;color:#a6e22e&#34;&gt;resp&lt;/span&gt; []&lt;span style=&#34;color:#a6e22e&#34;&gt;datatypes&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Product_Item_Price&lt;/span&gt;) {
    
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listPackageItems&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;packageId&lt;/span&gt;)
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prices&lt;/span&gt; []&lt;span style=&#34;color:#a6e22e&#34;&gt;datatypes&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Product_Item_Price&lt;/span&gt;
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;itemKeyName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;itemKeyNames&lt;/span&gt; {
    		&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt; {
    			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;KeyName&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;itemKeyName&lt;/span&gt; {
    				&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;itemPrice&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Prices&lt;/span&gt; {
    					&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;itemPrice&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;LocationGroupId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
    						&lt;span style=&#34;color:#a6e22e&#34;&gt;prices&lt;/span&gt; = append(&lt;span style=&#34;color:#a6e22e&#34;&gt;prices&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;itemPrice&lt;/span&gt;)
    						&lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
    					}
    				}
    
    			}
    		}
    	}
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prices&lt;/span&gt;
    }
    
    &lt;span style=&#34;color:#75715e&#34;&gt;//List the items for the given package.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listPackageItems&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Session&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;packageId&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#a6e22e&#34;&gt;resp&lt;/span&gt; []&lt;span style=&#34;color:#a6e22e&#34;&gt;datatypes&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Product_Item&lt;/span&gt;) {
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mask&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id, itemCategory, keyName, prices[id,categories]&amp;#34;&lt;/span&gt;
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetProductPackageService&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;)
    	&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Id&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;packageId&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;Mask&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;mask&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;GetItems&lt;/span&gt;()
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
    		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n Unable to get Items:\n - %s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
    		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
    	}
    
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;
    }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get the Placement Group from a Virtual Guest&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;encoding/json&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/services&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/softlayer/softlayer-go/session&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {

    &lt;span style=&#34;color:#75715e&#34;&gt;// Unique ID for a computing instance.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;guestId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12345678&lt;/span&gt;
	
	&lt;span style=&#34;color:#75715e&#34;&gt;// Create a session		
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;()

    &lt;span style=&#34;color:#75715e&#34;&gt;// Get SoftLayer_Virtual_Guest service.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetVirtualGuestService&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;)

	&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Id&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;guestId&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;GetPlacementGroup&lt;/span&gt;()
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MarshalIndent&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;receipt&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;     &amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonErr&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(string(&lt;span style=&#34;color:#a6e22e&#34;&gt;jsonFormat&lt;/span&gt;))
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Create Virtual Guest with tags</title>
      <link>https://softlayer.github.io/python/create_virtual_guest_with_tags/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/create_virtual_guest_with_tags/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;example&lt;/span&gt;():

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;guest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_instance&lt;/span&gt;(self, object_template, tags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            instance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;guest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;createObject(object_template)
            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; tags &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; None:
                self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;guest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setTags(tags, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;instance[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;guest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getObject(mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mask[tagReferences[id,tag]]&amp;#39;&lt;/span&gt;, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;instance[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
            pprint(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Exception occurred when creating the instance: &amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))


&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    &lt;span style=&#34;color:#75715e&#34;&gt;# skeleton of vsi object&lt;/span&gt;
    object_template &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datacenter&amp;#34;&lt;/span&gt;: {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dal05&amp;#34;&lt;/span&gt;},
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foobar&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;domain&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;startCpus&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxMemory&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hourlyBillingFlag&amp;#34;&lt;/span&gt;: True,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;localDiskFlag&amp;#34;&lt;/span&gt;: True,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;operatingSystemReferenceCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UBUNTU_LATEST&amp;#34;&lt;/span&gt;
    }

    &lt;span style=&#34;color:#75715e&#34;&gt;# tags that will be added to the vsi&lt;/span&gt;
    tags &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tag1, tag2&amp;#34;&lt;/span&gt;

    main &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; example()
    guest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_instance(object_template, tags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tags)

    pprint(guest)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release notes: December 19, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20181219/</link>
      <pubDate>Wed, 19 Dec 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20181219/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Change favicon for ordering page&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Remove hostPciDeviceId unassignment from VSI Reservation during Migration before GPU Upgrade. This resolves the issue where the VSI reservation hostPciDeviceId is null when trying to assign it again.&lt;/li&gt;
&lt;li&gt;Fixed an issue preventing where reloading a VSI from Redhat 7 to Redhat 6 when the boot mode is order specified causes the VM not to boot&lt;/li&gt;
&lt;li&gt;Blocked accounts using SAML authentication from linking with IBMid.&lt;/li&gt;
&lt;li&gt;LoadBalancer L7 Policy fix when action is edited.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;catalog&#34;&gt;Catalog&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Add 4110 processor to package 1051 Qualified Node&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: December 14, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20181214/</link>
      <pubDate>Fri, 14 Dec 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20181214/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;More style tweaks to the manage order forms.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix failed verifyOrder for dedicated GPU orders&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue preventing CCI_CANCEL Events from getting properly added to the Event_Log&lt;/li&gt;
&lt;li&gt;Enable MZR support by deploying load balancer to multiple datacenters if they are MZR enabled and VLAN spanning is enabled&lt;/li&gt;
&lt;li&gt;Fix issue where hourlyBillingFlag changed status after a guest was cancelled but before the guest was actually deleted.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;catalog&#34;&gt;Catalog&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Make Package 200 Presets 533, 535, 783, 785, 787, 789 available in the following sites (this is in addition to the sites they are already in)

&lt;ul&gt;
&lt;li&gt;DAL12, FRA04, FRA05, LON04, LON05, LON06, PAR01, MIL01, SYD04, SYD05, TOK04, TOK05, WDC04, WDC06, WDC07&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Remove Package 200 Presets 533, 535, 783, 785, 787, 789 from the following sites:

&lt;ul&gt;
&lt;li&gt;DAL01, DAL07, WDC01&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Adding additional configurations to package 801 (VSI containers)&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;IaaS Flavor&lt;/th&gt;
&lt;th&gt;CPU RAM 1st Disk&lt;/th&gt;
&lt;th&gt;2nd Disk&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;M1.8x64x25&lt;/td&gt;
&lt;td&gt;8 x 2.0 GHz or higher Cores&lt;/td&gt;
&lt;td&gt;64 GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;M1.16x128x25&lt;/td&gt;
&lt;td&gt;16 x 2.0 GHz or higher Cores&lt;/td&gt;
&lt;td&gt;128 GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;M1.30x240x25&lt;/td&gt;
&lt;td&gt;30 x 2.0 GHz or higher Cores&lt;/td&gt;
&lt;td&gt;240 GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;M1.48x384x25&lt;/td&gt;
&lt;td&gt;48 x 2.0 GHz or higher Cores&lt;/td&gt;
&lt;td&gt;384 GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;M1.56x448x25&lt;/td&gt;
&lt;td&gt;56 x 2.0 GHz or higher Cores&lt;/td&gt;
&lt;td&gt;448 GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;M1.64x512x25&lt;/td&gt;
&lt;td&gt;64 x 2.0 GHz or higher Cores&lt;/td&gt;
&lt;td&gt;512 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Working with user permissions</title>
      <link>https://softlayer.github.io/python/user_customer_permissions.py/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/user_customer_permissions.py/</guid>
      <description>&lt;p&gt;Create a User Permission Role&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

templateObject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name role&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test user permission role&amp;#34;&lt;/span&gt;
}

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:

    createRole &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Permission_Role&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;createObject(templateObject)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(createRole, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to create a user permission role faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a User Permission Group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

templateObject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name group&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test group&amp;#34;&lt;/span&gt;
}

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:

    createGroup &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Permission_Group&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;createObject(templateObject)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(createGroup, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to create a user permission group faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Retrieve the User Permission Actions e.g. TICKET_VIEW, UPDATE_PAYMENT_DETAILS, HARDWARE_VIEW, etc.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:

    userPermissionActions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Permission_Action&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getAllObjects()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(userPermissionActions, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to retrieve the user permission actions faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add Bulk Actions to the User Permission Group.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

userGroupId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11111&lt;/span&gt;

actions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
    {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,  &lt;span style=&#34;color:#75715e&#34;&gt;# TICKET_VIEW&lt;/span&gt;
    },
    {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,  &lt;span style=&#34;color:#75715e&#34;&gt;# TICKET_ADD&lt;/span&gt;
    }
]

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
    addBultActions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Permission_Group&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addBulkActions(actions, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;userGroupId)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(addBultActions, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to add bulk actions to the user permission group faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add Resouce Object (Virtual_Guest) to the User Permission Group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

groupId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11111&lt;/span&gt;

resourceObject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;complexType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoftLayer_Virtual_Guest&amp;#34;&lt;/span&gt;,
         &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;22222&amp;#34;&lt;/span&gt;
      }

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
    resourceObject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_User_Permission_Group&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addResourceObject(resourceObject, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;groupId)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(resourceObject, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to add resouce object to the user permission group faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add Resouce Object (Hardware_Server) to the User Permission Group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

groupId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11111&lt;/span&gt;

resourceObject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;complexType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoftLayer_Hardware_Server&amp;#34;&lt;/span&gt;,
         &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;22222&amp;#34;&lt;/span&gt;
      }

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
    resourceObject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_User_Permission_Group&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addResourceObject(resourceObject, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;groupId)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(resourceObject, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to add resource object to the user permission group faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Link Group to the User Permission Role.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

userRoleId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;22222&lt;/span&gt; 

group &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;11111&lt;/span&gt;
}

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
    linkGroup &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Permission_Role&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;linkGroup(group, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;userRoleId)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(linkGroup, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to link group to the user permission role faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add User to the User Permission Role.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

userRoleId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;22222&lt;/span&gt;

user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;11111&lt;/span&gt;
}

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
    addUser &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Permission_Role&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addUser(user, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;userRoleId)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(addUser, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to add user to the user permission role faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add Role to the User Customer.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

userId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11111&lt;/span&gt;

role &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;22222&lt;/span&gt;
}

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
    addRole &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addRole(role, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;userId)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(addRole, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))

&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
    pp(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to add role to the user customer faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release notes: December 7, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20181207/</link>
      <pubDate>Fri, 07 Dec 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20181207/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix SoftLayer IBMid invitation emails to have the correct portal URLs for accounts that are or will be linked&lt;/li&gt;
&lt;li&gt;The link cloud.ibm.com/devices should be cloud.ibm.com/resources&lt;/li&gt;
&lt;li&gt;Fixed a bug where a cookie is used to display the users preference in Ticket Status pane was not being created by default.&lt;/li&gt;
&lt;li&gt;Improve caching of customer SSH keys on the public portal to display recently added keys.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix Customer::parentCheck not to skip the check for a user without a childUser&lt;/li&gt;
&lt;li&gt;Updated pciDevices relationship to has_many for DedicatedHost.&lt;/li&gt;
&lt;li&gt;Prevent duplicate tag references during simultaneous REST calls&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Address problems with the nessus scanner getting stuck during scans.&lt;/li&gt;
&lt;li&gt;Set allowedPptpVpnQuantity to 0 as a default for new accounts&lt;/li&gt;
&lt;li&gt;Ensure server transfers respect boot mode selection.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: November 30, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20181130/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20181130/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix incorrect URL generation when reconfiguring certain shopping cart items, from checkout.&lt;/li&gt;
&lt;li&gt;Add billing agreements link in manage billing items page&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixes a bug retrieving a list of child users for one parent user through the API.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t allow creating a user in PENDING state on input to API, PENDING is a system state&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>