<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Mon, 22 Aug 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Attach and Detach a Block Device to a Virtual_Guest</title>
      <link>https://softlayer.github.io/php/attach_detach/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/attach_detach/</guid>
      <description>&lt;p&gt;Attaching a currently detached portable block device to a given guest. The disk image will need to be migrated to the host the guest is on, so make sure to check if that host has enough disk space (with checkHostDiskAvailability) before attaching. This is only required for guests with local storage guests. SAN based guests don&amp;rsquo;t need that step.&lt;/p&gt;

&lt;p&gt;Running this on a disk that is already attached will move the disk to the new guest.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

/* You can use the getenv() module to pull your exported Username
and API key to keep from having to store them in your files */

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);
$guest_id = 22983449;
$storage_id = 20309395;


try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Virtual_Guest&#39;, $guest_id, $apiUsername, $apiKey);
  $response = $client-&amp;gt;attachDiskImage($storage_id);

  print_r($response);

 } catch(Exception $e) {
     echo &#39;Cannot compute. Error is: &#39; . $e-&amp;gt;getMessage();
}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To detach the disk simply change &lt;code&gt;$client-&amp;gt;attachDiskImage($storage_id)&lt;/code&gt; to &lt;code&gt;$client-&amp;gt;detachDiskImage($storage_id)&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Find standard location pricing for a package</title>
      <link>https://softlayer.github.io/php/getStandardPricing/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/getStandardPricing/</guid>
      <description>&lt;p&gt;With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Product_Item_Price&#34;&gt;SoftLayer_Product_Item_Price&lt;/a&gt; objects via the API. The following example shows how to get the Standard priceItemId for a package regardless of the location.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);
$packageId = 194;


try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Package&#39;, $packageId, $apiUsername, $apiKey);
  $filter = new stdClass();
  $filter-&amp;gt;items = new stdClass();
  $filter-&amp;gt;items-&amp;gt;prices = new stdClass();
  $filter-&amp;gt;items-&amp;gt;prices-&amp;gt;locationGroupId = new stdClass();
  $filter-&amp;gt;items-&amp;gt;prices-&amp;gt;locationGroupId-&amp;gt;operation = &#39;is null&#39;;
  $client-&amp;gt;setObjectFilter($filter);

  $standardPricing = $client-&amp;gt;getItems();
  print_r($standardPricing);
}  catch (\Exception $e) {
    die(&#39;Cannot compute. Error is: &#39; . $e-&amp;gt;getMessage());
}
?&amp;gt;


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get IPMI info for Bare Metal Server</title>
      <link>https://softlayer.github.io/php/get_ipmi/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/get_ipmi/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);

$server_id = 882187;

try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Account&#39;, $server_id, $apiUsername, $apiKey);
  $objectMask = new \SoftLayer\Common\ObjectMask();
  $objectMask-&amp;gt;networkManagementIpAddress;
  $objectMask-&amp;gt;remoteManagementAccounts-&amp;gt;username;
  $objectMask-&amp;gt;remoteManagementAccounts-&amp;gt;password;
  $objectMask-&amp;gt;id;
  $objectMask-&amp;gt;fullyQualifiedDomainName;
  $client-&amp;gt;setObjectMask($objectMask);
  $response = $client-&amp;gt;getHardware($objectMask);

  print_r($response);

 } catch(Exception $e) {
     echo &#39;Cannot compute. Error is: &#39; . $e-&amp;gt;getMessage();
}

?&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: August 22, 2016</title>
      <link>https://softlayer.github.io/release_notes/20160822/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20160822/</guid>
      <description>

&lt;h4 id=&#34;portal:471582aafec30b94617a1309436ab245&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:471582aafec30b94617a1309436ab245&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend:471582aafec30b94617a1309436ab245&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Resolved a bug that was causing Resets of Dedicated Hardware Firewalls to fail if they were in a High Availablity Pair.&lt;/li&gt;
&lt;li&gt;Put code in place to ensure that cached disks from image templates are deleted when parent Virtual Disk Image is deleted.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Attach and Detach a Block Device to a Virtual_Guest</title>
      <link>https://softlayer.github.io/ruby/attach_detach/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/attach_detach/</guid>
      <description>&lt;p&gt;Attaching a currently detached portable block device to a given guest. The disk image will need to be migrated to the host the guest is on, so make sure to check if that host has enough disk space (with checkHostDiskAvailability) before attaching. This is only required for guests with local storage guests. SAN based guests don&amp;rsquo;t need that step.&lt;/p&gt;

&lt;p&gt;Running this on a disk that is already attached will move the disk to the new guest.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
client = SoftLayer::Client.new(:timeout =&amp;gt; 120)
disk_id = 87654321
guest_id = 1234567

attach = client[&#39;SoftLayer_Virtual_Guest&#39;]
item = attach.object_with_id(guest_id).attachDiskImage(disk_id)

pp item
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To detach the disk simply change &lt;code&gt;attachDiskImage(disk_id)&lt;/code&gt; to &lt;code&gt;detachDiskImage(disk_id)&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating a support ticket</title>
      <link>https://softlayer.github.io/ruby/create_ticket/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/create_ticket/</guid>
      <description>&lt;p&gt;Standard support tickets&amp;rsquo; titles must be selected from a pre-determined list of ticket subjects, defined in the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Ticket_Subject&#34;&gt;SoftLayer_Ticket_Subject&lt;/a&gt; service. The following example will output all of the Ticket Subjects:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

subjects = client[&#39;SoftLayer_Ticket_Subject&#39;]
getSubjects = subjects.getAllObjects()

pp getSubjects
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you have the Ticket Subject ID you can pass it to &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Ticket/createStandardTicket&#34;&gt;createStandardTicket&lt;/a&gt;. In the following example we are opening a ticket under the subject Hardware Firewall Question (ID 1121).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

ticketTemplate = {
	&#39;subjectId&#39; =&amp;gt; 1121,
	&#39;assignedUserId&#39; =&amp;gt; xxxxx,
}

content = &amp;quot;Content of the ticket goes here.&amp;quot;

ticket = client[&#39;SoftLayer_Ticket&#39;]
createTicket = ticket.createStandardTicket(ticketTemplate, content)

pp createTicket

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get IPMI info for BMS</title>
      <link>https://softlayer.github.io/ruby/get_ipmi/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/get_ipmi/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

object_mask = &#39;mask[networkManagementIpAddress,remoteManagementAccounts[username,password],id,fullyQualifiedDomainName]&#39;

item = client[&#39;SoftLayer_Account&#39;]
getIPMI = item.object_mask(object_mask).getHardware

pp getIPMI
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://softlayer.github.io/php/createBwPool/</link>
      <pubDate>Mon, 15 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/createBwPool/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

/* You can use the getenv() module to pull your exported Username
and API key to keep from having to store them in your files */

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);


$template = new stdClass();
$template-&amp;gt;accountId = xxxx;
$template-&amp;gt;bandwidthAllotmentTypeId  = 2;
$template-&amp;gt;locationGroupId = 1;
$template-&amp;gt;name  = &#39;newBWpoolPHP&#39;;

try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Network_Bandwidth_Version1_Allotment&#39;,null, $apiUsername, $apiKey);
  $response = $client-&amp;gt;createObject($template);

  print_r($response);

 } catch(Exception $e) {
     echo &#39;Cannot compute. Error is: &#39; . $e-&amp;gt;getMessage();
}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: August 15, 2016</title>
      <link>https://softlayer.github.io/release_notes/20160815/</link>
      <pubDate>Mon, 15 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/20160815/</guid>
      <description>

&lt;h4 id=&#34;portal:9a5cd737d87cc15d69786549a43d9022&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api:9a5cd737d87cc15d69786549a43d9022&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend:9a5cd737d87cc15d69786549a43d9022&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue with servers not being immediately pulled from a Bandwidth pool upon cancellation.&lt;/li&gt;
&lt;li&gt;Improvements have been made to prevent static subnets and global IPs from being routed to administratively reserved IP addresses.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://softlayer.github.io/ruby/createBwPool/</link>
      <pubDate>Mon, 15 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/createBwPool/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
client = SoftLayer::Client.new(:timeout =&amp;gt; 120)
object_id = nil

orderTemplate = {
   &#39;accountId&#39; =&amp;gt; xxxxx,
   &#39;bandwidthAllotmentTypeId&#39; =&amp;gt; 2,
   &#39;locationGroupId&#39; =&amp;gt; 1,
   &#39;name&#39; =&amp;gt; &#39;newRubyBwPool&#39;
}

orderPool = client[&#39;SoftLayer_Network_Bandwidth_Version1_Allotment&#39;]
item = orderPool.object_with_id(object_id).createObject(orderTemplate)

pp item
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://softlayer.github.io/php/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/createSnapshot/</guid>
      <description>&lt;p&gt;Trigger a manual snapshot creation of a Block storage volume.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

/* You can use the getenv() module to pull your exported Username
and API key to keep from having to store them in your files */

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);
$storageid = &#39;123456&#39;;

try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Network_Storage_Iscsi&#39;, $storageid, $apiUsername, $apiKey);
  $response = $client-&amp;gt;createSnapshot();

  print_r($response);

 } catch(Exception $e) {
     echo &#39;Unable to get Storage credentials: &#39; . $e-&amp;gt;getMessage();
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The process can take sometime to complete. You can check the snapshots associated with a storage volume by using the code below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);
$storageid = &#39;123456&#39;;

try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Network_Storage_Iscsi&#39;, $storageid, $apiUsername, $apiKey);
  $response = $client-&amp;gt;getSnapshotsForVolume();

  print_r($response);

 } catch(Exception $e) {
     echo &#39;Unable to get Storage credentials: &#39; . $e-&amp;gt;getMessage();
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://softlayer.github.io/python/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/createSnapshot/</guid>
      <description>&lt;p&gt;Trigger a manual snapshot creation of a Block storage volume.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
import json

iscsiStorageId = 8744521

client = SoftLayer.create_client_from_env()
networkStorageIscsiService = client[&#39;SoftLayer_Network_Storage_Iscsi&#39;]

try:
    iscsiStorage = networkStorageIscsiService.createSnapshot(id=iscsiStorageId)
    print(json.dumps(iscsiStorage, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))
except SoftLayer.SoftLayerAPIError as e:
    print(&amp;quot;Unable to retrieve the Network Storage Iscsi. faultCode=%s, faultString=%s&amp;quot;
        % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The process can take sometime to complete. You can check the snapshots associated with a storage volume by using the code below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
import json

iscsiStorageId = 8744521

client = SoftLayer.create_client_from_env()
networkStorageIscsiService = client[&#39;SoftLayer_Network_Storage_Iscsi&#39;]

try:
    iscsiStorage = networkStorageIscsiService.getSnapshotsForVolume(id=iscsiStorageId)
    print(json.dumps(iscsiStorage, sort_keys=True, indent=2, separators=(&#39;,&#39;, &#39;: &#39;)))
except SoftLayer.SoftLayerAPIError as e:
    print(&amp;quot;Unable to retrieve the Network Storage Iscsi. faultCode=%s, faultString=%s&amp;quot;
        % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://softlayer.github.io/rest/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/rest/createSnapshot/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: [&lt;code&gt;SoftLayer_Network_Storage_Iscsi::.createSnapshot()&lt;/code&gt;]&lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi/createSnapshot)&#34;&gt;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi/createSnapshot)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Network_Storage_Iscsi/createSnapshot&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -s --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Network_Storage_Iscsi/8744521/createSnapshot&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;accountId&amp;quot;: xxxxx,
    &amp;quot;capacityGb&amp;quot;: 20,
    &amp;quot;createDate&amp;quot;: &amp;quot;2016-08-11T13:45:39-06:00&amp;quot;,
    &amp;quot;guestId&amp;quot;: null,
    &amp;quot;hardwareId&amp;quot;: null,
    &amp;quot;hostId&amp;quot;: null,
    &amp;quot;id&amp;quot;: 13430037,
    &amp;quot;nasType&amp;quot;: &amp;quot;SNAPSHOT&amp;quot;,
    &amp;quot;properties&amp;quot;: [
        {
            &amp;quot;createDate&amp;quot;: &amp;quot;2016-08-11T13:45:39-06:00&amp;quot;,
            &amp;quot;modifyDate&amp;quot;: null,
            &amp;quot;type&amp;quot;: {
                &amp;quot;description&amp;quot;: &amp;quot;Determines whether the volume is currently mountable&amp;quot;,
                &amp;quot;keyname&amp;quot;: &amp;quot;MOUNTABLE&amp;quot;,
                &amp;quot;name&amp;quot;: &amp;quot;Mountable&amp;quot;
            },
            &amp;quot;value&amp;quot;: &amp;quot;0&amp;quot;,
            &amp;quot;volumeId&amp;quot;: 13430037
        },
        {
            &amp;quot;createDate&amp;quot;: &amp;quot;2016-08-11T13:45:39-06:00&amp;quot;,
            &amp;quot;modifyDate&amp;quot;: null,
            &amp;quot;type&amp;quot;: {
                &amp;quot;description&amp;quot;: &amp;quot;Volume name&amp;quot;,
                &amp;quot;keyname&amp;quot;: &amp;quot;VOLUME_NAME&amp;quot;,
                &amp;quot;name&amp;quot;: &amp;quot;Volume Name&amp;quot;
            },
            &amp;quot;value&amp;quot;: &amp;quot;manual.2016-08-11_1445&amp;quot;,
            &amp;quot;volumeId&amp;quot;: 13430037
        },
        {
            &amp;quot;createDate&amp;quot;: &amp;quot;2016-08-11T13:45:39-06:00&amp;quot;,
            &amp;quot;modifyDate&amp;quot;: null,
            &amp;quot;type&amp;quot;: {
                &amp;quot;description&amp;quot;: &amp;quot;The amount of space used by snapshots.&amp;quot;,
                &amp;quot;keyname&amp;quot;: &amp;quot;SNAPSHOT_SPACE_USED&amp;quot;,
                &amp;quot;name&amp;quot;: &amp;quot;Snapshot Used&amp;quot;
            },
            &amp;quot;value&amp;quot;: &amp;quot;88000&amp;quot;,
            &amp;quot;volumeId&amp;quot;: 13430037
        },
        {
            &amp;quot;createDate&amp;quot;: &amp;quot;2016-08-11T13:45:39-06:00&amp;quot;,
            &amp;quot;modifyDate&amp;quot;: null,
            &amp;quot;value&amp;quot;: &amp;quot;2016-08-11T14:45:39-05:00&amp;quot;,
            &amp;quot;volumeId&amp;quot;: 13430037
        }
    ],
    &amp;quot;serviceProviderId&amp;quot;: 1,
    &amp;quot;serviceResourceBackendIpAddress&amp;quot;: &amp;quot;nfshou0201b-fz.service.softlayer.com&amp;quot;,
    &amp;quot;serviceResourceName&amp;quot;: &amp;quot;PerfStor Aggr aggr_staashou0201_pc01&amp;quot;,
    &amp;quot;storageTypeId&amp;quot;: &amp;quot;16&amp;quot;,
    &amp;quot;upgradableFlag&amp;quot;: true,
    &amp;quot;username&amp;quot;: &amp;quot;SL01SEVCxxxxx_2&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can get the current snapshots by issuing the following command:&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -s --user &amp;quot;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;quot; &amp;quot;https://api.softlayer.com/rest/v3/SoftLayer_Network_Storage_Iscsi/1234567/getSnapshotsForVolume&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[
    {
        &amp;quot;accountId&amp;quot;: xxxxx,
        &amp;quot;capacityGb&amp;quot;: 20,
        &amp;quot;createDate&amp;quot;: &amp;quot;2016-08-11T13:09:41-06:00&amp;quot;,
        &amp;quot;guestId&amp;quot;: null,
        &amp;quot;hardwareId&amp;quot;: null,
        &amp;quot;hostId&amp;quot;: null,
        &amp;quot;id&amp;quot;: 13429199,
        &amp;quot;nasType&amp;quot;: &amp;quot;SNAPSHOT&amp;quot;,
        &amp;quot;propertyCount&amp;quot;: 0,
        &amp;quot;serviceProviderId&amp;quot;: 1,
        &amp;quot;serviceResourceBackendIpAddress&amp;quot;: &amp;quot;nfshou0201b-fz.service.softlayer.com&amp;quot;,
        &amp;quot;serviceResourceName&amp;quot;: &amp;quot;PerfStor Aggr aggr_staashou0201_pc01&amp;quot;,
        &amp;quot;storageTypeId&amp;quot;: &amp;quot;16&amp;quot;,
        &amp;quot;upgradableFlag&amp;quot;: true,
        &amp;quot;username&amp;quot;: &amp;quot;SL01SEVCxxxxx_2&amp;quot;
    },
    {
        &amp;quot;accountId&amp;quot;: xxxxx,
        &amp;quot;capacityGb&amp;quot;: 20,
        &amp;quot;createDate&amp;quot;: &amp;quot;2016-08-11T11:09:00-06:00&amp;quot;,
        &amp;quot;guestId&amp;quot;: null,
        &amp;quot;hardwareId&amp;quot;: null,
        &amp;quot;hostId&amp;quot;: null,
        &amp;quot;id&amp;quot;: 13427035,
        &amp;quot;nasType&amp;quot;: &amp;quot;SNAPSHOT&amp;quot;,
        &amp;quot;propertyCount&amp;quot;: 0,
        &amp;quot;serviceProviderId&amp;quot;: 1,
        &amp;quot;serviceResourceBackendIpAddress&amp;quot;: &amp;quot;nfshou0201b-fz.service.softlayer.com&amp;quot;,
        &amp;quot;serviceResourceName&amp;quot;: &amp;quot;PerfStor Aggr aggr_staashou0201_pc01&amp;quot;,
        &amp;quot;storageTypeId&amp;quot;: &amp;quot;16&amp;quot;,
        &amp;quot;upgradableFlag&amp;quot;: true,
        &amp;quot;username&amp;quot;: &amp;quot;SL01SEVCxxxxx_2&amp;quot;
    },
    {
        &amp;quot;accountId&amp;quot;: xxxxx,
        &amp;quot;capacityGb&amp;quot;: 20,
        &amp;quot;createDate&amp;quot;: &amp;quot;2016-08-10T11:09:10-06:00&amp;quot;,
        &amp;quot;guestId&amp;quot;: null,
        &amp;quot;hardwareId&amp;quot;: null,
        &amp;quot;hostId&amp;quot;: null,
        &amp;quot;id&amp;quot;: 13402009,
        &amp;quot;nasType&amp;quot;: &amp;quot;SNAPSHOT&amp;quot;,
        &amp;quot;propertyCount&amp;quot;: 0,
        &amp;quot;serviceProviderId&amp;quot;: 1,
        &amp;quot;serviceResourceBackendIpAddress&amp;quot;: &amp;quot;nfshou0201b-fz.service.softlayer.com&amp;quot;,
        &amp;quot;serviceResourceName&amp;quot;: &amp;quot;PerfStor Aggr aggr_staashou0201_pc01&amp;quot;,
        &amp;quot;storageTypeId&amp;quot;: &amp;quot;16&amp;quot;,
        &amp;quot;upgradableFlag&amp;quot;: true,
        &amp;quot;username&amp;quot;: &amp;quot;SL01SEVCxxxxx_2&amp;quot;
    }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://softlayer.github.io/ruby/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/ruby/createSnapshot/</guid>
      <description>&lt;p&gt;Trigger a manual snapshot creation of a Block storage volume.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
network_storage_id = 1234567
client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

createsnap = client[:Network_Storage_Iscsi].object_with_id(network_storage_id).createSnapshot
pp createsnap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The process can take sometime to complete. You can check the snapshots associated with a storage volume by using the code below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
network_storage_id = 1234567
client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

snapshots = client[:Network_Storage_Iscsi].object_with_id(network_storage_id).getSnapshotsForVolume
pp snapshots
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Get storage credentials for Block Storage</title>
      <link>https://softlayer.github.io/php/storage_credentials/</link>
      <pubDate>Wed, 10 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/php/storage_credentials/</guid>
      <description>&lt;p&gt;The following script allows you retrieve the username and password for Performance/Endurance Block storage. If you have not autorized hosts against the storage then you will get some basic information about the Block storage as a result.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

/* You can use the getenv() module to pull your exported Username
and API key to keep from having to store them in your files */ 

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);
$storageid = &#39;123456&#39;;

try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Network_Storage_Iscsi&#39;, $storageid, $apiUsername, $apiKey);
  $objectMask = new \SoftLayer\Common\ObjectMask();
  $objectMask-&amp;gt;allowedHardware-&amp;gt;allowedHost-&amp;gt;credential;
  $objectMask-&amp;gt;allowedVirtualGuests-&amp;gt;allowedHost-&amp;gt;credential;
  $client-&amp;gt;setObjectMask($objectMask);

  $response = $client-&amp;gt;getObject();

  print_r($response);

 } catch(Exception $e) {
     echo &#39;Unable to get Storage credentials: &#39; . $e-&amp;gt;getMessage();
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>