<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>SoftLayer API on SoftLayer API </title>
    <link>https://softlayer.github.io/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Thu, 18 Oct 2018 00:00:00 UTC</updated>
    
    <item>
      <title>Release notes: October 18, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20181018/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20181018/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;“Manage Reserved Capacity Groups” permissions is now visible from viewUser account page.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Include each price&amp;rsquo;s item attributes in the response from verifyOrder and placeOrder API calls&lt;/li&gt;
&lt;li&gt;Add EventLog Types for Security Question Answers&lt;/li&gt;
&lt;li&gt;Add Event Logs for Security Question and Answers&lt;/li&gt;
&lt;li&gt;Add Event Logs for External Binding Edit&lt;/li&gt;
&lt;li&gt;Fixed an issue where more VSIs than the maximum were able to be provisioned inside a placement group.&lt;/li&gt;
&lt;li&gt;API Authentication Edit EventLog metaData is now an array&lt;/li&gt;
&lt;li&gt;Fix SoftLayer_Virtual_ReservedCapacityGroup::occupiedInstances bug&lt;/li&gt;
&lt;li&gt;Added SoftLayer_Network:connectPrivateEndpointService()&lt;/li&gt;
&lt;li&gt;Added SoftLayer_Network:disconnectPrivateEndpointService()&lt;/li&gt;
&lt;li&gt;Added an order_by to the networkDevice key so that the A side of the router would show on querries rather than B side&lt;/li&gt;
&lt;li&gt;Add UEFI Supported attribute to Hardware_Component_Model.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Add &amp;ldquo;VIEW_CUSTOMER_SOFTWARE_PASSWORD&amp;rdquo; as a brand agent permission&lt;/li&gt;
&lt;li&gt;Removing All Device Access no longer requires the VPN_MANAGE permission&lt;/li&gt;
&lt;li&gt;Remove setting of os software data from physical license register when it is a reload with no new software. This prevents the OS from being updated on a reload.&lt;/li&gt;
&lt;li&gt;Autogenerated IBMID creation no longer puts spaces in usernames&lt;/li&gt;
&lt;li&gt;Direct Link: Create, Edit and Delete Optimization&lt;/li&gt;
&lt;li&gt;Changes the word &amp;ldquo;ticket&amp;rdquo; to &amp;ldquo;case&amp;rdquo; in all emails and automated ticket updates&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: October 4, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20181004/</link>
      <pubDate>Thu, 04 Oct 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20181004/</guid>
      <description>

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Prevents $0 reserved capacity instance prices from showing up as available upgrade prices.&lt;/li&gt;
&lt;li&gt;Remove the SoftLayer_Billing_Order_Note data type.&lt;/li&gt;
&lt;li&gt;Fix date filter for permission logs
&lt;code&gt;
https://api.softlayer.com/v3.1/sldn/rest/SoftLayer_Event_Log/getAllObjects.json?objectFilter={
&amp;quot;eventName&amp;quot;:{&amp;quot;operation&amp;quot;:&amp;quot;Permission/Resource change&amp;quot;}, 
&amp;quot;eventCreateDate&amp;quot;:{
    &amp;quot;operation&amp;quot;:&amp;quot;betweenDate&amp;quot;,
    &amp;quot;options&amp;quot;:[
        {&amp;quot;name&amp;quot;:&amp;quot;startDate&amp;quot;,&amp;quot;value&amp;quot;:[&amp;quot;10/02/2018&amp;quot;]},
        {&amp;quot;name&amp;quot;:&amp;quot;endDate&amp;quot;,&amp;quot;value&amp;quot;:[&amp;quot;10/03/2018&amp;quot;]}
    ]
}
}
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed bug with dedicated host evacuations.&lt;/li&gt;
&lt;li&gt;Improved speed for transferring images between locations&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: September 28, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180928/</link>
      <pubDate>Fri, 28 Sep 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180928/</guid>
      <description>

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix additional issues with the hourlyBillingFlag API property on SoftLayer_Hardware and SoftLayer_Virtual_Guest.&lt;/li&gt;
&lt;li&gt;add a permissionCascadeFlag to SoftLayer_User_Customer::removeBulkPortalPermissions and SoftLayer_User_Customer::removePortalPermission, which if set to true will remove the permissions for the user and children users. Refactor customer editObject.&lt;/li&gt;
&lt;li&gt;Allows customers to submit a placementGroupId on a virtual guest object when ordering a VSI.&lt;/li&gt;
&lt;li&gt;Expose SLDN on placementGroupId and the placementGroup key in SoftLayer_Virtual_Guest&lt;/li&gt;
&lt;li&gt;Add the view event log permission check to SoftLayer_Event_Log::getAllObjects&lt;/li&gt;
&lt;li&gt;Deliver new function to import VSI image from IBM Cloud Object Storage (IBM COS).&lt;/li&gt;
&lt;li&gt;SLDN expose redirect pool id in l7 policy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Add Event Logs for API Key Allowed IPs&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: September 20, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180920/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180920/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Remove SSH keys and provision scripts from the checkout page in www.softlayer.com&lt;/li&gt;
&lt;li&gt;Fix an issue preventing the ordering of Multi-VLAN Firewalls.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Prevent ticket generation for order placed through Direct Link API service and sort the vlan list before assigning the next vlan for a provider.&lt;/li&gt;
&lt;li&gt;Direct Link: Allow Deletion of connection only of Connection is deleted from Equinix side&lt;/li&gt;
&lt;li&gt;Deprecate the SoftLayer_Ticket_Survey class&lt;/li&gt;
&lt;li&gt;Added SoftLayer_Network:isConnectedToPrivateEndpointService() with a return of a bool.&lt;/li&gt;
&lt;li&gt;Provides a new order container that provides users with the ability to order reserved capacities.&lt;/li&gt;
&lt;li&gt;Added Reserved_Capacity features&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Enable http2 support for LBaaS front-end protocol&lt;/li&gt;
&lt;li&gt;Added support for custom IBMid usernames on Service and Solutions Provider enrollments.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: September 14, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180914/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180914/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Created GT_GC_CAPABLE Disk Image Attribute.&lt;/li&gt;
&lt;li&gt;Added image transfer region group type&lt;/li&gt;
&lt;li&gt;Added method getValidCountriesForRegion to return countries assigned to the region if it has pricing info set.&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Virtual_PlacementGroup&#34;&gt;SoftLayer_Virtual_PlacementGroup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Virtual_PlacementGroup_Rule&#34;&gt;SoftLayer_Virtual_PlacementGroup_Rule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix issues where hourlyBillingFlag properties were returning an invalid value.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Ability to provision encrypted images on Public VSIs&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>User Access Details</title>
      <link>https://softlayer.github.io/python/user_access_details/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/user_access_details/</guid>
      <description>&lt;p&gt;This script gets each user, and which dedicatedHosts, hardware, and virtual guests they have permissions to view.&lt;/p&gt;

&lt;p&gt;The hasFullAccessFlags are used to determine if a user has access to ALL hosts of that type or not. We are using that flag here to condense the output, but each user will still have the full list of hardware under their account if they have access to all.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;List of users that have access to a certain set of devices.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer

&lt;span style=&#34;color:#75715e&#34;&gt;# For nice debug output:&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; prettytable &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; PrettyTable


&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; click &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; formatting
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; SoftLayer.CLI &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; formatting


objectMask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;mask[id, username, 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    dedicatedHosts[id,name,datacenter],
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    virtualGuests[id,hostname,domain,datacenter],
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    hardware[id,hostname,domain,datacenter],
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    hasFullDedicatedHostAccessFlag,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    hasFullHardwareAccessFlag,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    hasFullVirtualGuestAccessFlag]&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_client_from_env()


&lt;span style=&#34;color:#75715e&#34;&gt;# Gets all users on the account, 10 at a time. Accounts with a lot of devices may need to turn limit down to 1&lt;/span&gt;
all_users &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;call(
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Account&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;getUsers&amp;#39;&lt;/span&gt;, mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; objectMask, iter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False, limit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, offset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;)

table &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PrettyTable([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ID&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NAME&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DATACENTER&amp;#39;&lt;/span&gt;])

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-------------------- List of users that have access to a certain set of devices ---------------&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Iterate through each user, getting what devices they each have access to and printing that.&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; user &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; all_users:
    userId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
    username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;THE USER: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  WITH ID: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; HAS ACCESS TO THE FOLLOWING DEVICES&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (username, userId))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hasFullDedicatedHostAccessFlag&amp;#39;&lt;/span&gt;, False):
        table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Full Access&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;])

    &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dedicatedHosts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; user:
        dedicatedHosts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dedicatedHosts&amp;#39;&lt;/span&gt;]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; dedicatedHost &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; dedicatedHosts:
            table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([
                dedicatedHost[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], 
                dedicatedHost[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;], 
                dedicatedHost[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;)
            ])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No Access&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;])
    table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clear_rows()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_string(title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DEDICATED HOST&amp;#34;&lt;/span&gt;))

    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hasFullVirtualGuestAccessFlag&amp;#39;&lt;/span&gt;, False):
        table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Full Access&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; user:
        virtualGuests &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt;]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; host &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; virtualGuests:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(host)
            table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([
                host[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], 
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (host[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;], host[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domain&amp;#39;&lt;/span&gt;]),
                host&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;, {})&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;)
            ])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No Access&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_string(title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;VIRTUAL GUEST&amp;#34;&lt;/span&gt;))
    table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clear_rows()

    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hasFullVirtualGuestAccessFlag&amp;#39;&lt;/span&gt;, False):
        table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Full Access&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hardware&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; user:
        hardware &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hardware&amp;#39;&lt;/span&gt;]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; host &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; hardware:
            table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([
                host[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], 
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (host[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;], host[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domain&amp;#39;&lt;/span&gt;]) , 
                host&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;, {})&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;)
            ])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_row([&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No Access&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_string(title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HARDWARE&amp;#34;&lt;/span&gt;))
    table&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clear_rows()

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Done&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release notes: September 7, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180907/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180907/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Update tax display for &amp;lsquo;new&amp;rsquo; customers and avoid showing stale information regarding the taxes for their order.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Added SoftLayer_Tag::deleteTag()&lt;/li&gt;
&lt;li&gt;Added SoftLayer_Virtual_Guest::removeTags() and SoftLayer_Hardware_Server::removeTags()&lt;/li&gt;
&lt;li&gt;Added SoftLayer_Virtual_Guest::sentTestReclaimScheduledAlert() to allow for testing of the transient webhook service&lt;/li&gt;
&lt;li&gt;Added SoftLayer_Network_Storage_MassDataMigration_Request::getDeviceModel()&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Zero dollar invoices will now use the closed_complete state&lt;/li&gt;
&lt;li&gt;Added cleanup logic for ipmi connectivity issues during reclaims.&lt;/li&gt;
&lt;li&gt;The Lenovo SR630 motherboard should be purchasable with a TPM module&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: August 31, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180831/</link>
      <pubDate>Fri, 31 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180831/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Performance improvements at order checkout.&lt;/li&gt;
&lt;li&gt;Correct the tab for the private network only dedicated host instance options in the order forms.&lt;/li&gt;
&lt;li&gt;Clarified the error message presented when a disabled account attempts to create a user.&lt;/li&gt;
&lt;li&gt;Support for dedicated GPU hosts&lt;/li&gt;
&lt;li&gt;Changed GPU column on order form for GPU flavor to show description instead of capacity.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;A resultLimit of 1 was returning empty array using v3.1 in the endpoint.&lt;/li&gt;
&lt;li&gt;Ensure the firewallType returns the appropriate value for SoftLayer_Network_Vlan_Firewall&lt;/li&gt;
&lt;li&gt;API to support rebuilding a vSRX HA cluster&lt;/li&gt;
&lt;li&gt;Implementing creating/updating Gateway Member Attribute records for gateway member(s).&lt;/li&gt;
&lt;li&gt;Fix the specification of a subnet price during VLAN ordering against package zero not being considered optional.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Refactored assign server transaction&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: August 24, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180824/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180824/</guid>
      <description>

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix bug that allows SL customer to change password via direct soap request without providing appropriate security question parameters.&lt;/li&gt;
&lt;li&gt;API orders from quote now properly validate the quote status&lt;/li&gt;
&lt;li&gt;Refactors and updates the &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_Storage_Backup_Evault/getWebCCAuthenticationDetails/&#34;&gt;getWebCcAuthenticationDetails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disabled auto registration of a subnet during subnet assignment.
SoftLayer_Network_Subnet_Registration::createObject will validate the detailReferences(SoftLayer_Network_Subnet_Registration_Details), and network properties to better detect and error on conflicts.
SoftLayer_Network_Subnet_Registration::createObjects was added to enable creation of multiple registrations for the provided detailReferences(SoftLayer_Network_Subnet_Registration_Details).
Updated documentation for both endpoints.&lt;/li&gt;
&lt;li&gt;add a SUSPENDED_BILLING attribute on SoftLayer_Virtual_Guest_Attribute_Type so that customers can identify a suspendable VSI&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Enable upgrades / downgrades for Dedicated Host Instances w/ GPUs&lt;/li&gt;
&lt;li&gt;Add new updated software description vendor product codes for Veeam via migration.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Exception Handling in the SoftLayer API</title>
      <link>https://softlayer.github.io/article/exception-handling-softlayer-api/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/article/exception-handling-softlayer-api/</guid>
      <description>

&lt;p&gt;Like any programming interface the SoftLayer API at times needs to return error messages to its users. The SoftLayer API brings these exceptions forward to the user so their application can handle the unexpected result. Exceptions are returned as SOAP, REST, or XML-RPC faults depending on the RPC method used to execute your API method call. Programming and scripting languages with SOAP and XML-RPC support usually have built-in methods for handling faults.&lt;/p&gt;

&lt;h2 id=&#34;exceptions-by-endpoint&#34;&gt;Exceptions by Endpoint&lt;/h2&gt;

&lt;h4 id=&#34;soap-style-exceptions&#34;&gt;SOAP Style Exceptions&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;xml&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;SOAP-ENV:Fault&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;faultcode&amp;gt;&lt;/span&gt;MY_FAULT_CODE&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/faultcode&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;faultstring&amp;gt;&lt;/span&gt;MY_EXCEPTION&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/faultstring&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/SOAP-ENV:Fault&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/xml&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;xml-rpc-style-exceptions&#34;&gt;XML-RPC Style Exceptions&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;xml&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;methodResponse&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;fault&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;struct&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;member&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;faultCode&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;int&amp;gt;&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/int&amp;gt;&lt;/span&gt;
                     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
                 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/member&amp;gt;&lt;/span&gt;
                 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;member&amp;gt;&lt;/span&gt;
                     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;faultString&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
                     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
                         &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;MY_EXCEPTION&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
                 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/member&amp;gt;&lt;/span&gt;
             &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/struct&amp;gt;&lt;/span&gt;
         &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/fault&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/methodResponse&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/xml&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;rest-style-exceptions&#34;&gt;REST Style Exceptions&lt;/h4&gt;

&lt;p&gt;Rest API calls can have the results returned as XML, or JSON, depending on how you end your api call.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/BlockDeviceTemplateGroups1.xml:&#34;&gt;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/BlockDeviceTemplateGroups1.xml:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;root&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;error&amp;gt;&lt;/span&gt;Function (&amp;amp;quot;BlockDeviceTemplateGroups1&amp;amp;quot;) is not a valid method for this service.&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/error&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;code&amp;gt;&lt;/span&gt;SoftLayer_Exception_Public&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/code&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/BlockDeviceTemplateGroups1.json:&#34;&gt;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/BlockDeviceTemplateGroups1.json:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&amp;lt;json&amp;gt;
{
    &amp;#34;code&amp;#34;: &amp;#34;SoftLayer_Exception_Public&amp;#34;,
    &amp;#34;error&amp;#34;: &amp;#34;Function (\&amp;#34;BlockDeviceTemplateGroups1\&amp;#34;) is not a valid method for this service.&amp;#34;
}
&amp;lt;/json&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Method calls are halted if exceptions are encountered during their execution.  The specialized exceptions that a method can throw are listed on that method&amp;rsquo;s manual page.&lt;/p&gt;

&lt;h2 id=&#34;common-exceptions&#34;&gt;Common Exceptions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;SoftLayer_Exception_Public
This is the base exception class, and most exceptions will fall into this code. Generally you will need to read the error code to understand what exactly went wrong.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;{&amp;quot;error&amp;quot;:&amp;quot;Access Denied. &amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_Public&amp;quot;}&lt;/code&gt;
Check your username and API key to make sure they are still valid.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{&amp;quot;error&amp;quot;:&amp;quot;Internal Error&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_Public&amp;quot;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Generally this indicates you are requesting too much data. Try limiting your objectMask to only the local and relational properties you need, or use a resultLimit.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SoftLayer_Exception_InvalidValue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;{&amp;quot;error&amp;quot;: The character @ must appear once and only once in an email address.&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_InvalidValue&amp;quot;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Check the methods manual page to make sure the data you are sending matches the type expected.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SoftLayer_Exception_ObjectNotFound&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;{&amp;quot;error&amp;quot;:&amp;quot;Unable to find object with id of &#39;1&#39;.&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_ObjectNotFound&amp;quot;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Either the ID you are looking for doesn&amp;rsquo;t exist, or you don&amp;rsquo;t have access to it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SoftLayer_Exception_WebService_BadRequest&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;{&amp;quot;error&amp;quot;:&amp;quot;Bad request&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;SoftLayer_Exception_WebService_BadRequest&amp;quot;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The API endpoint wasn&amp;rsquo;t able to figure out your request. Could be the result of trying to POST to a method that only accepts GET requests, or some other badly formed data.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SoftLayer_Exception_NotImplemented&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Generally not an error you should encounter, but can be seen when trying to do some actions on resources that have not fully provisioned. If you get this exception on a resource that is fully provisioned, opening a ticket is recommended.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Release notes: August 15, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180815/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180815/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Pre-select the first host in the Dedicated Hosts table when ordering a DH.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Correct validation when creating a quote&lt;/li&gt;
&lt;li&gt;Event logs for 2FA status change&lt;/li&gt;
&lt;li&gt;Adding the ability for customers to delete tags.&lt;/li&gt;
&lt;li&gt;Add check for SOAP request call to prevent commit in customer&amp;rsquo;s removeSecurityAnswers method.&lt;/li&gt;
&lt;li&gt;Added ability to filter Event_Logs based on username
&lt;code&gt;
https://api.softlayer.com/rest/v3.1/SoftLayer_Event_Log/getAllObjects.json?
resultLimit=0,100&amp;amp;
objectFilter={&amp;quot;eventName&amp;quot;:{&amp;quot;operation&amp;quot;:&amp;quot;Permission/Resource change&amp;quot;}, &amp;quot;label&amp;quot;:{&amp;quot;operation&amp;quot;:&amp;quot;sl205-mb-test02&amp;quot;}}
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fix bug to not allow editing of &amp;lsquo;name&amp;rsquo; and &amp;lsquo;category&amp;rsquo; in &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_Gateway/editObject/&#34;&gt;SoftLayer_Network_Gateway&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Removed FORUM_PASSWORD  from SoftLayer_User_Customer&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix issue where disk controller limits were incorrectly enforced on bare metal orders.&lt;/li&gt;
&lt;li&gt;Performance improvement when fetching tax calculations.&lt;/li&gt;
&lt;li&gt;Firewall names longer than 255 characters will be truncated to 255 characters.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Creating an Object Storage instance</title>
      <link>https://softlayer.github.io/article/create-object-storage/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/article/create-object-storage/</guid>
      <description>

&lt;h2 id=&#34;create-an-object-storage-instance&#34;&gt;Create an Object Storage Instance&lt;/h2&gt;

&lt;p&gt;This tutorial walks you through creating a IBM Cloud Object Storage instance.&lt;/p&gt;

&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create an object storage instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;services-used&#34;&gt;Services used&lt;/h2&gt;

&lt;p&gt;This tutorial uses the following technologies:
* &lt;a href=&#34;https://console.bluemix.net/docs/cli/index.html#overview&#34;&gt;ibmcloud&lt;/a&gt; IBM Cloud CLI&lt;/p&gt;

&lt;p&gt;This tutorial may incur costs. Use the &lt;a href=&#34;https://console.bluemix.net/pricing/&#34;&gt;Pricing Calculator&lt;/a&gt; to generate a cost estimate based on your projected usage.&lt;/p&gt;

&lt;h2 id=&#34;install-ibm-cloud-cli&#34;&gt;Install IBM Cloud CLI&lt;/h2&gt;

&lt;p&gt;To install the toolset, you can run the relevant command to start the installer. This installs the following recommended tools for {{site.data.keyword.Bluemix_notm}} development (if not already installed): Homebrew (Mac only), Git, Docker, Helm, kubectl, curl, {{site.data.keyword.Bluemix_notm}} CLI, {{site.data.keyword.dev_cli_notm}} plug-in, Cloud Functions plug-in, Container Registry plug-in, Container Service plug-in, and sdk-gen plug-in.&lt;/p&gt;

&lt;p&gt;Mac and Linux:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -sL https://ibm.biz/idt-installer | bash&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Windows 10:
    Note: Open Windows PowerShell by right-clicking the PowerShell icon and selecting &amp;ldquo;Run as Administrator&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;Set-ExecutionPolicy Unrestricted; iex(New-Object Net.WebClient).DownloadString(&amp;#39;http://ibm.biz/idt-win-installer&amp;#39;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify Installation&lt;/p&gt;

&lt;p&gt;To verify installation, run the help command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;ibmcloud dev help&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If installation was successful, the output should list usage instructions, the current version, and supported commands.&lt;/p&gt;

&lt;h2 id=&#34;authenticate&#34;&gt;Authenticate&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;ibmcloud login&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;create-cloud-object-storage-instance&#34;&gt;Create Cloud Object Storage instance&lt;/h2&gt;

&lt;p&gt;(&lt;a href=&#34;https://console.bluemix.net/docs/services/cloud-object-storage/basics/developers.html#for-developers&#34;&gt;https://console.bluemix.net/docs/services/cloud-object-storage/basics/developers.html#for-developers&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&amp;gt; ibmcloud resource service-instance-create &amp;lt;instance-name&amp;gt; cloud-object-storage &amp;lt;plan&amp;gt; global&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;check-for-the-newly-provisioned-service&#34;&gt;Check for the newly provisioned service&lt;/h2&gt;

&lt;p&gt;You should now see the new object storage instance.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;ibmcloud resource service-instances&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;create-a-bucket&#34;&gt;Create a bucket&lt;/h2&gt;

&lt;p&gt;Now that you have a service instance up and running, you can create a new bucket to store all future files to be uploaded to.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl -X PUT &amp;#34;https://s3-api.us-geo.objectstorage.softlayer.net/&amp;lt;bucketname&amp;gt;&amp;#34; -H &amp;#34;Authorization: Bearer &amp;lt;token&amp;gt;&amp;#34; -H &amp;#34;ibm-service-instance-id: &amp;lt;instance-id&amp;gt;&amp;#34;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;list-buckets&#34;&gt;List buckets&lt;/h2&gt;

&lt;p&gt;You should now see the newly added bucket listed using the command below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;curl &amp;#34;https://s3-api.us-geo.objectstorage.softlayer.net&amp;#34; -H &amp;#34;Authorization: Bearer &amp;lt;token&amp;gt;&amp;#34; -H &amp;#34;ibm-service-instance-id: &amp;lt;instance-id&amp;gt;&amp;#34;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;further-documentation-for-more-expanded-use-of-object-storage-commands&#34;&gt;Further documentation for more expanded use of object storage commands&lt;/h2&gt;

&lt;p&gt;[](&lt;a href=&#34;https://console.bluemix.net/docs/services/cloud-object-storage/cli/curl.html&#34;&gt;https://console.bluemix.net/docs/services/cloud-object-storage/cli/curl.html&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Add second disk on flavor vsi</title>
      <link>https://softlayer.github.io/python/vsi_flavor_add_second_disk/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/vsi_flavor_add_second_disk/</guid>
      <description>&lt;p&gt;The example retrieves the packageId and presetId whit which the device was ordered, change the presetId if you wants to add the second disk and upgrade the CPU, RAM, or First Disk.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;example&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self):        
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
    
    &lt;span style=&#34;color:#75715e&#34;&gt;# Retrieve the packageId and presetId with which the device was ordered&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# and set them in the orderData&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setPackageAndPreset&lt;/span&gt;(self, guestId):
        mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id,orderItem[package,presetId]]&amp;#34;&lt;/span&gt;

        item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getBillingItem(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;guestId, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mask)
        
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;packageId&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderItem&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;presetId&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orderItem&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;presetId&amp;#39;&lt;/span&gt;]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addSecondDisk&lt;/span&gt;(self, guestId, priceId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, note&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None, date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NOW&amp;#34;&lt;/span&gt;):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setPackageAndPreset(guestId)
        
        prices &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: priceId,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;: [{
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;categoryCode&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;guest_disk1&amp;#39;&lt;/span&gt;,    &lt;span style=&#34;color:#75715e&#34;&gt;#second disk&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complexType&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Product_Item_Category&amp;#39;&lt;/span&gt;
            }],
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complexType&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Product_Item_Price&amp;#39;&lt;/span&gt;
        }]

        &lt;span style=&#34;color:#75715e&#34;&gt;# Build a skeleton SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade object&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# containing the upgrade you wish to place.&lt;/span&gt;
        properties &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
            {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NOTE_GENERAL&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: note
            },   
            {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MAINTENANCE_WINDOW&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: date
            }
        ]

        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virtualGuests&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: guestId}]
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prices&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prices
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;properties&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; properties
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complexType&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Container_Product_Order_Virtual_Guest_Upgrade&amp;#39;&lt;/span&gt;
        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Use verifyOrder method to test that your upgrade is fine and
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            when you are ready you can call the placeOrder method.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
            result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Product_Order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verifyOrder(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;orderData)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(result, sort_keys&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, indent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, separators&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            If there was an error returned from the SoftLayer API then bomb out with the
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            error message.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unable to upgrade VSI faultCode=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, faultString=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultCode, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;faultString))

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:    
    &lt;span style=&#34;color:#75715e&#34;&gt;# ID of virtual guest you want to add a second disk&lt;/span&gt;
    guestID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;58670025&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# The price id of disk you want to add as second disk. To get prices&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# you can call the SoftLayer_Virtual_Guest::getUpgradeItemPrices method&lt;/span&gt;
    priceID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;204661&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;# 100 GB (LOCAL)&lt;/span&gt;

    note &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adding second disk&amp;#34;&lt;/span&gt;
    date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NOW&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# Start the script&lt;/span&gt;
    main &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; example()
    
    main&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addSecondDisk(guestID, priceId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;priceID, note&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;note, date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;date)    &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Manage Users</title>
      <link>https://softlayer.github.io/python/manageUsers/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/manageUsers/</guid>
      <description>

&lt;p&gt;This example is a set of scripts I&amp;rsquo;ve used for creating and disabling users. This will ONLY create SoftLayer users, and does not work for Bluemix/IbmCloud type accounts.&lt;/p&gt;

&lt;p&gt;Some of this functionality is also in the &lt;a href=&#34;https://softlayer-python.readthedocs.io/en/latest/cli/users.html&#34;&gt;SLCLI&lt;/a&gt; now.&lt;/p&gt;

&lt;h2 id=&#34;create-users&#34;&gt;Create Users&lt;/h2&gt;

&lt;p&gt;Creates a user, sets up proper permissions, sets up devices access restrictions, creates API keys and orders the user a server.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer.API
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_user&lt;/span&gt;(username, password):
    user_template &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;: username,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;firstName&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;API&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lastName&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Learner&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;email&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;someone@somewhere.com&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;companyName&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IBM&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address1&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;123 api road&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;city&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Houston&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;country&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;US&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;postalCode&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TX 77002&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;userStatusId&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1001&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;timezoneId&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;107&lt;/span&gt;
    }
    created_user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;createObject(
        user_template,
        password,
        password)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; created_user

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_permissions&lt;/span&gt;(_id):
    permissions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getPermissions(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_id)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; permissions

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;set_permissions&lt;/span&gt;(_id, permissions):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    To get permissions correct, I take the existing permissions of a user
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    that I already have, and set my new user&amp;#39;s permissions to be the same
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    with addBulkPortalPermission
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addBulkPortalPermission(
        permissions, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_id)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fix_permissions&lt;/span&gt;(user,permissions):
    &lt;span style=&#34;color:#75715e&#34;&gt;# I only want users to have access to this one host&lt;/span&gt;
    virtualGuestId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;22334455&lt;/span&gt;
    t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
    set_permissions(user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], permissions)
    client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;removeAllVirtualAccessForThisUser(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;t)
    client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;removeAllHardwareAccessForThisUser(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;t)
    client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addApiAuthenticationKey(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;t)
    client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addVirtualGuestAccess(virtualGuestId,id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;t)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;orderUserServer&lt;/span&gt;(user, apiKey):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Orders a server as the newly created user. 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    hostname &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-lab-server&amp;#34;&lt;/span&gt;
    guest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;startCpus&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;maxMemory&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localDiskFlag&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hostname
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;domain&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.lablayer.info&amp;#34;&lt;/span&gt;
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hourlyBillingFlag&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datacenter&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tok02&amp;#39;&lt;/span&gt;
    guest[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blockDeviceTemplateGroup&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;globalIdentifier&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6c64f59a-edeb-4ba4-b992-d04972597357&amp;#34;&lt;/span&gt;}
    userClient &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client(
        username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; user,
        api_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; apiKey )
    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; userClient[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;createObject(guest)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Added server id: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ( &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; )&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (result[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;],result[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fullyQualifiedDomainName&amp;#39;&lt;/span&gt;]) 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
   

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; argparse
    argsparse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ArgumentParser(description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Number of users&amp;#39;&lt;/span&gt;)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--num-users&amp;#39;&lt;/span&gt;, dest&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;num_users&amp;#39;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;int,
                           help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Number of users to provision.&amp;#39;&lt;/span&gt;)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--offset&amp;#39;&lt;/span&gt;, dest&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;offset&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;int,
                           default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Username offset&amp;#39;&lt;/span&gt;)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--prefix&amp;#39;&lt;/span&gt;,
                           help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Username prefix&amp;#39;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)
    args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse_args()

    &lt;span style=&#34;color:#75715e&#34;&gt;##### CHANGE THESE ##########&lt;/span&gt;
    template_user_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123456&lt;/span&gt;
    password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;APAsswordGoes!!!H3r3&amp;#39;&lt;/span&gt; 

    client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
    
    userPerms &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getPermissions(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;template_user_id)
   
    start_user_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;offset

    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;num_users):
        target_username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prefix,start_user_num)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            new_user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; create_user(target_username,password)
            fix_permissions(new_user,userPerms)
            client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addApiAuthenticationKey(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;new_user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exceptions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; error:
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            If the user already exists, an exception is thrown. 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Just reset their permissions and continue on.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
            oFilter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
            oFilter[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
            oFilter[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
            oFilter[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; target_username
            new_user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getUsers(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;oFilter)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
            fix_permissions(new_user,userPerms)

        newApiKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getApiAuthenticationKeys(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;new_user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (newApiKey[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;])
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;api_key =  &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (newApiKey[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;authenticationKey&amp;#39;&lt;/span&gt;])
        orderUserServer(newApiKey[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;],newApiKey[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;authenticationKey&amp;#39;&lt;/span&gt;])
        start_user_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start_user_num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;disable-users&#34;&gt;Disable Users&lt;/h2&gt;

&lt;p&gt;Disable user, changes their password, cancels their servers, and removes any sshKeys&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SoftLayer.API
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pprint &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pp

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_target_users&lt;/span&gt;(prefix):
    _filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*= &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (prefix)
            }
        }
    }
    _mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id,username]&amp;#34;&lt;/span&gt;
    _users &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getUsers(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_filter, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_mask)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; _users

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_target_keys&lt;/span&gt;(prefix):
    _filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sshKeys&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*= &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (prefix)
            }
        }
    }

    _mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mask[id,label]&amp;#34;&lt;/span&gt;
    _users &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Account&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getSshKeys(filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_filter, mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;_mask)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; _users

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print_result&lt;/span&gt;(result, thing):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; True:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: &amp;#34;&lt;/span&gt;
        pp(thing)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; argparse
    argsparse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ArgumentParser(description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Number of users&amp;#39;&lt;/span&gt;)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--prefix&amp;#39;&lt;/span&gt;,
                           help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Username prefix&amp;#39;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)
    argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--password&amp;#39;&lt;/span&gt;,
                           help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;New Password&amp;#39;&lt;/span&gt;, default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)
 
    args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argsparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse_args()

    client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()
  
    users &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_target_users(args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prefix)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; user &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; users:
        password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;password
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Password: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; password 
        &lt;span style=&#34;color:#75715e&#34;&gt;# status 1021 disables the user&lt;/span&gt;
        template &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;],
            &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;userStatusId&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1021&lt;/span&gt;
        }

        &lt;span style=&#34;color:#75715e&#34;&gt;# Cancel any servers the user created&lt;/span&gt;
        servers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getVirtualGuests(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; virt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; servers: 
            &lt;span style=&#34;color:#75715e&#34;&gt;# the &amp;#34;,&amp;#34; and the end of print removes the automatic newline&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Canceling host... &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; virt[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fullyQualifiedDomainName&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(virt[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;),
            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Virtual_Guest&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deleteObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;virt[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
                print_result(result,virt)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; SoftLayer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exceptions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SoftLayerAPIError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; error:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Exception, host might already be canceling...&amp;#34;&lt;/span&gt;)
                pp(error)

        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Changing password for...&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;),
        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User_Customer&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;updatePassword(password, id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;user[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
        print_result(result,user)
 
    sshkeys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_target_keys(args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prefix)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SSH Key Removal&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sshkeys:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deleting key... &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; key[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(key[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;),
        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SoftLayer_Security_Ssh_Key&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deleteObject(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;key[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])
        print_result(result,key)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Complete&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Release notes: August 8, 2018</title>
      <link>https://softlayer.github.io/release_notes/2018/20180808/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/release_notes/2018/20180808/</guid>
      <description>

&lt;h4 id=&#34;portal&#34;&gt;Portal&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fixed an issue in the Bluemix control portal rendering the wrong template when an order failed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fix incorrect totals calculation when using the getCurrentBillingTotal service methods on guests, hardware, and dedicated hosts.&lt;/li&gt;
&lt;li&gt;Exposing Device model through SLDN for a device that is assigned to a mass data migration request.&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&#34;https://softlayer.github.io/reference/services/SoftLayer_Network_Gateway/getCapacity&#34;&gt;SoftLayer_Network_Gateway::getCapacity()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added CUSTOMER_EXTERNAL_BINDING_ACTIVATE and CUSTOMER_EXTERNAL_BINDING_DEACTIVATE SoftLayer_Event_Log_Type&lt;/li&gt;
&lt;li&gt;Added validation around name field when creating brands through the API&lt;/li&gt;
&lt;li&gt;Added API/Class called SoftLayer_Network_Gateway_Member_Attribute&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backend&#34;&gt;Backend&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Restore ability to cancel global IP addresses&lt;/li&gt;
&lt;li&gt;Fixed an issue where users were unable to create federated user by SAML authentication if the &amp;ldquo;sn&amp;rdquo; and &amp;ldquo;givenName&amp;rdquo; are long&lt;/li&gt;
&lt;li&gt;Added more verbose metadata information on some eventlog entries&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>