<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on SoftLayer API</title>
    <link>https://softlayer.github.io/ruby/</link>
    <description>Recent content in Ruby on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DeviceOwners.rb</title>
      <link>https://softlayer.github.io/ruby/DeviceOwners.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/DeviceOwners.rb/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; user = &amp;#34;&amp;#34; api_key = &amp;#34;apikey_goes_here&amp;#34; billing = SoftLayer::Service.new(&amp;#34;SoftLayer_Account&amp;#34;,:username =&amp;gt; user,:api_key =&amp;gt; api_key) object_mask = &amp;#34;mask[fullyQualifiedDomainName,billingItem[categoryCode,description,createDate,orderItem[order[userRecord[username]]]]]&amp;#34; hardware_list = billing.object_mask(object_mask).getHardware virtual_guest_list = billing.object_mask(object_mask).getVirtualGuests def describe(item) domain_name = nil; category_code = nil; description = nil; create_date = nil; user_name = nil; begin domain_name = item[&amp;#34;fullyQualifiedDomainName&amp;#34;] category_code = item[&amp;#34;billingItem&amp;#34;][&amp;#34;categoryCode&amp;#34;] description = item[&amp;#34;billingItem&amp;#34;][&amp;#34;description&amp;#34;] create_date = item[&amp;#34;billingItem&amp;#34;][&amp;#34;createDate&amp;#34;] user_name = item[&amp;#34;billingItem&amp;#34;][&amp;#34;orderItem&amp;#34;][&amp;#34;order&amp;#34;][&amp;#34;userRecord&amp;#34;][&amp;#34;username&amp;#34;] rescue =&amp;gt; ex puts ex.message end return &amp;#34;&amp;#39;&amp;#34; + (domain_name ? domain_name : &amp;#34; no fullyQualifiedDomainName &amp;#34; ) + &amp;#34;&amp;#39;&amp;#34; + &amp;#34; category code: &amp;#34; + &amp;#34;&amp;#39;&amp;#34; + (category_code ?</description>
    </item>
    
    <item>
      <title>SuscribeUserUnplainedIncident.rb</title>
      <link>https://softlayer.github.io/ruby/SuscribeUserUnplainedIncident.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/SuscribeUserUnplainedIncident.rb/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; username = &amp;#39;&amp;#39; key = &amp;#39;apikey_goes_here&amp;#39; #The customer ID you whish add the suscription customerID = 205830 client = SoftLayer::Client.new( :username =&amp;gt; username,:api_key =&amp;gt; key) userClient = client.service_named(&amp;#39;SoftLayer_User_Customer&amp;#39;) result = userClient.object_with_id(customerID).addNotificationSubscriber(&amp;#34;UNPLANNED_INCIDENT&amp;#34;) # if the notification suscriber has been added we procede to create the suscriberDeliveryMethods if result deliveryMethodKeyNames = [ &amp;#34;EMAIL&amp;#34; ] result = userClient.object_with_id(customerID).createSubscriberDeliveryMethods(&amp;#34;UNPLANNED_INCIDENT&amp;#34;, deliveryMethodKeyNames) pp (result) end</description>
    </item>
    
    <item>
      <title>createTicketAttachedFile.rb</title>
      <link>https://softlayer.github.io/ruby/createTicketAttachedFile.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createTicketAttachedFile.rb/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; user = &amp;#34;&amp;#34; api_key = &amp;#34;apikey_goes_here&amp;#34; endpoint_url = &amp;#34;http://api.softlayer.com/v3/sldn/xmlrpc/&amp;#34; # Declare the API client to use the SoftLayer_Product_Package API service client = SoftLayer::Client.new(:username =&amp;gt; user,:api_key =&amp;gt; api_key, :endpoint_url =&amp;gt;endpoint_url ) ticketService = client.service_named(&amp;#34;SoftLayer_Ticket&amp;#34;) templateObject = { &amp;#39;assignedUserId&amp;#39; =&amp;gt; 104672, &amp;#39;notifyUserOnUpdateFlag&amp;#39; =&amp;gt; true, &amp;#39;subjectId&amp;#39; =&amp;gt; 1522, &amp;#39;title&amp;#39; =&amp;gt; &amp;#39;ticket example&amp;#39; } contents = &amp;#39;this the ticket contet&amp;#39; attachedFiles = [ { &amp;#39;data&amp;#39; =&amp;gt; &amp;#39;aHR0cHM6Ly88VXNlcm5hbWU+OjxBUGlLZXk+apikey_goes_hereapikey_goes_hereapikey_goes_hereapikey_goes_hereapikey_goes_hereCiAgICBdDQp9&amp;#39;, &amp;#39;filename&amp;#39; =&amp;gt; &amp;#34;test2.txt&amp;#34; } ] begin # creates the notification result = ticketService.</description>
    </item>
    
    <item>
      <title>createTicketAttachedFileEnconde.rb</title>
      <link>https://softlayer.github.io/ruby/createTicketAttachedFileEnconde.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createTicketAttachedFileEnconde.rb/</guid>
      <description>#!/usr/bin/env ruby require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; require &amp;#39;base64&amp;#39; # Your SoftLayer API key. # Generate one at https://manage.softlayer.com/Administrative/apiKeychain username = &amp;#39;&amp;#39; key = &amp;#39;apikey_goes_here&amp;#39; path = &amp;#34;C:\\Automatio competences.xlsx&amp;#34; path = &amp;#34;C:\\test.png&amp;#34; name = &amp;#34;framework.xlsx&amp;#34; name = &amp;#34;test.png&amp;#34; contents = &amp;#39;Test Ticket Please Close at your earliest convenience&amp;#39; file = File.open(path,&amp;#39;rb&amp;#39;) { |io| io.read } encode = Base64.encode64(file) attachedFiles = [ { &amp;#39;data&amp;#39; =&amp;gt; encode, #&amp;#39;data&amp;#39; =&amp;gt; File.open(&amp;#34;C:\\Automatio competences.xlsx&amp;#34;, &amp;#34;rb&amp;#34;).read, &amp;#39;filename&amp;#39; =&amp;gt; name } ] template = { &amp;#39;subjectId&amp;#39; =&amp;gt; 1522, &amp;#39;contents&amp;#39; =&amp;gt; contents, &amp;#39;assignedUserId&amp;#39; =&amp;gt; 205832, &amp;#39;title&amp;#39; =&amp;gt; &amp;#34;Test Ticket Please Close at your earliest convenience&amp;#34; } # Declare the API client client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>cutomerIssueBAMbrand.rb</title>
      <link>https://softlayer.github.io/ruby/cutomerIssueBAMbrand.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/cutomerIssueBAMbrand.rb/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; puts &amp;#34;INFO: connecting....&amp;#34; account_service = SoftLayer::Service.new(&amp;#34;SoftLayer_Account&amp;#34;, :username =&amp;gt; &amp;#34;&amp;#34;, :api_key =&amp;gt; &amp;#34;apikey_goes_here&amp;#34;) brand_service = SoftLayer::Service.new(&amp;#34;SoftLayer_Brand&amp;#34;, :username =&amp;gt; &amp;#34;&amp;#34;, :api_key =&amp;gt; &amp;#34;apikey_goes_here&amp;#34;) brands = account_service.getOwnedBrands() puts &amp;#34;INFO: printing brands....&amp;#34; pp (brands) puts &amp;#34;INFO: printing customers for the brands....&amp;#34; for brand in brands accounts = brand_service.object_with_id(brand[&amp;#39;id&amp;#39;]).getAllOwnedAccounts() pp (accounts) end</description>
    </item>
    
    <item>
      <title>filtersRuby.rb</title>
      <link>https://softlayer.github.io/ruby/filtersRuby.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/filtersRuby.rb/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. # Generate an API key at the SoftLayer Customer Portal: # https://manage.softlayer.com/Administrative/apiKeychain username = &amp;#39;&amp;#39; key = &amp;#39;apikey_goes_here&amp;#39; # The package ID you wish to see the prices list packageId = 0 # The categoryID you which to filter the returned list by SoftLayer_Product_Package::getItemPrices method categoryIDtofilter = 15 # Declare the API client client = SoftLayer::Client.new( :username =&amp;gt; username,:api_key =&amp;gt; key) productPackageService = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] # Declaring the object mask to get the item id, description and categoryId objectMask = &amp;#34;mask[id,item.</description>
    </item>
    
    <item>
      <title>get_brandwidth_usage.rb</title>
      <link>https://softlayer.github.io/ruby/get_brandwidth_usage.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_brandwidth_usage.rb/</guid>
      <description># # Retrieve a bandwidth usage for a list of servers. # # Retrieve a bandwidth usage for a list of servers. # It makes a single call to the Softlayer_Hardware_Server::getObject method # For more information see below. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getObject # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.&amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer username and API key. USERNAME = &amp;#39;&amp;#39; API_KEY = &amp;#39;apikey_goes_here&amp;#39; # The list of server that wish to see the bandwidth usage server_ids = [153_851, 166_391] client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_hardware_location.rb</title>
      <link>https://softlayer.github.io/ruby/get_hardware_location.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_hardware_location.rb/</guid>
      <description># # Get location for your Bare Metal Servers. # # The script retrieves the location for all your bare metal servers # in your account. For more information see below: # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware/getLocation # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.&amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer username and API key. USERNAME = &amp;#39;-&amp;#39; API_KEY = &amp;#39;apikey_goes_here&amp;#39; # Declaring the API client client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>monitor_get_available_configuration_values.rb</title>
      <link>https://softlayer.github.io/ruby/monitor_get_available_configuration_values.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/monitor_get_available_configuration_values.rb/</guid>
      <description># Get the available configuration for the monitor agent # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getAvailableConfigurationValues # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT_URL = &amp;#39;set me&amp;#39; # Declare the API client to use the SoftLayer_Product_Package API service client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY, endpoint_url: ENDPOINT_URL) # The monitor agent id you wish to get the actual configuration monitor_agent_id = 121_169_6 monitor_service = client.</description>
    </item>
    
    <item>
      <title>activate_private_port.rb</title>
      <link>https://softlayer.github.io/ruby/activate_private_port.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/activate_private_port.rb/</guid>
      <description># Active Private Port. # It activates the private network port. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/activatePrivatePort # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the server id. server_id = 11498369 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Create a new SoftLayer client softlayer_client = SoftLayer::Client.new(:username =&amp;gt; SL_API_USERNAME, :api_key =&amp;gt; SL_API_KEY) virtual_guest_service = softlayer_client[&amp;#39;Virtual_Guest&amp;#39;] begin # Call the activatePrivatePort method from SoftLayer_Virtual_Guest.</description>
    </item>
    
    <item>
      <title>activate_public_port.rb</title>
      <link>https://softlayer.github.io/ruby/activate_public_port.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/activate_public_port.rb/</guid>
      <description># Activate Public Port. # It activates the public network port. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/activatePublicPort # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the server id. server_id = 11498369 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Create a SoftLayer client softlayer_client = SoftLayer::Client.new(:username =&amp;gt; SL_API_USERNAME, :api_key =&amp;gt; SL_API_KEY) virtual_guest_service = softlayer_client[&amp;#39;Virtual_Guest&amp;#39;] begin # Call the activatePublicPort method from SoftLayer_Virtual_Guest.</description>
    </item>
    
    <item>
      <title>add_devices_to_pool.rb</title>
      <link>https://softlayer.github.io/ruby/add_devices_to_pool.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/add_devices_to_pool.rb/</guid>
      <description># Add servers and VSIs to a bandwidth pool. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/requestVdrContentUpdates # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; list_server_ips = [&amp;#39;173.192.220.104&amp;#39;, &amp;#39;173.192.220.110&amp;#39;] list_vsi_ips = [&amp;#39;184.173.20.162&amp;#39;] pool_id = 151136 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) hardware_service = softlayer_client.</description>
    </item>
    
    <item>
      <title>add_new_password_for_vsi.rb</title>
      <link>https://softlayer.github.io/ruby/add_new_password_for_vsi.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/add_new_password_for_vsi.rb/</guid>
      <description># Change user and password for a VSI. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Account # https://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_Password # https://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_Password/createObject # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsi_host_name = &amp;#39;test&amp;#39; new_pass = &amp;#39;new pass&amp;#39; new_username = &amp;#39;new pass&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) account_service = client.</description>
    </item>
    
    <item>
      <title>add_origin_mapping.rb</title>
      <link>https://softlayer.github.io/ruby/add_origin_mapping.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/add_origin_mapping.rb/</guid>
      <description># Create an origin mappings in a CDN. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/createOriginPullMapping # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdn_id = 303_93 template = { &amp;#39;mediaType&amp;#39; =&amp;gt; &amp;#39;HTTP&amp;#39;, &amp;#39;originUrl&amp;#39; =&amp;gt; &amp;#39;http://www.example.com&amp;#39;, &amp;#39;cname&amp;#39; =&amp;gt; &amp;#39;cdn.example.com&amp;#39; } # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) cdn_service = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] begin response = cdn_service.</description>
    </item>
    
    <item>
      <title>add_portal_permissions.rb</title>
      <link>https://softlayer.github.io/ruby/add_portal_permissions.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/add_portal_permissions.rb/</guid>
      <description># # Add user permission. # This script adds a single permission to an user. # Use the SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects method # to retrieve a list of all permissions available in the SoftLayer. # Important manual Pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addPortalPermission # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) # Set the user ID of the user you want to add permissions, yo can get them using # The method SoftLayer_Account::getUsers.</description>
    </item>
    
    <item>
      <title>associate_vlan.rb</title>
      <link>https://softlayer.github.io/ruby/associate_vlan.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/associate_vlan.rb/</guid>
      <description># # Associate vlans in a gateway device. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway_Vlan/createObjects # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Gateway_Vlan/ # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # Your SoftLayer API key and username. require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; gateway_id = 615_22 vlan_id_to_add = 108_432_5 # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) gateway_vlan_service = client.service_named(&amp;#39;SoftLayer_Network_Gateway_Vlan&amp;#39;) object = { &amp;#39;bypassFlag&amp;#39; =&amp;gt; false, &amp;#39;networkGatewayId&amp;#39; =&amp;gt; gateway_id, &amp;#39;networkVlanId&amp;#39; =&amp;gt; vlan_id_to_add } template = Array.</description>
    </item>
    
    <item>
      <title>attach_portal_storage.rb</title>
      <link>https://softlayer.github.io/ruby/attach_portal_storage.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/attach_portal_storage.rb/</guid>
      <description># Attach portal storage # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/attachDiskImage # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The portal storage ID which you wish to attach image_id = 496_250_6 # The virtual guest Id where you wish to attach the portal storage virtual_guest_id = 614_303_8 # Declaring the API client to use the SoftLayer_Virtual_Guest API service client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>bypass_vlans.rb</title>
      <link>https://softlayer.github.io/ruby/bypass_vlans.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/bypass_vlans.rb/</guid>
      <description># # Bypass the vlans in a gateway device. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/getInsideVlans # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/bypassVlans # http://sldn.softlayer.com/article/Object-Filters # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; gateway_id = 615_22 vlan_ids_to_remove = [108_432_5, 865_555] client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) gateway_service = client.service_named(&amp;#39;SoftLayer_Network_Gateway&amp;#39;) object_filter = SoftLayer::ObjectFilter.new object_filter.set_criteria_for_key_path(&amp;#39;insideVlans.networkVlanId&amp;#39;, &amp;#39;operation&amp;#39; =&amp;gt; &amp;#39;in&amp;#39;, &amp;#39;options&amp;#39; =&amp;gt; [{ &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;data&amp;#39;, &amp;#39;value&amp;#39; =&amp;gt; vlan_ids_to_remove }]) begin gateway_vlans = gateway_service.</description>
    </item>
    
    <item>
      <title>cancel_cdn.rb</title>
      <link>https://softlayer.github.io/ruby/cancel_cdn.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/cancel_cdn.rb/</guid>
      <description># Cancel CDN. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item_Cancellation_Request/createObject # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account/ # http://sldn.softlayer.com/article/Object-Filters # http://sldn.softlayer.com/article/Object-Masks # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The name of the CDN to cancel. cdn_account_name = &amp;#39;C308&amp;#39; immediate_cancellation = true client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) billing_service = client[&amp;#39;SoftLayer_Billing_Item_Cancellation_Request&amp;#39;] account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] # Set an object mask to get the billing item associated to the CDNN.</description>
    </item>
    
    <item>
      <title>cancel_server.rb</title>
      <link>https://softlayer.github.io/ruby/cancel_server.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/cancel_server.rb/</guid>
      <description># Cancel servers from a list of IPs # # This script looks for a server with a determinate IP address and delete it. # # It makes a single call to the cancelItem() method in the # SoftLayer_Billing_Item API service # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item_Hardware # http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelItem # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.&amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>cancel_vlan.rb</title>
      <link>https://softlayer.github.io/ruby/cancel_vlan.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/cancel_vlan.rb/</guid>
      <description># Cancel a VLAN # # The script will get the Billing_Item id of the VLAN service # then it will cancel the VLAN service # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getObject # http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item # http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelService # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The VLAN id you wish to cancel vlan_id = 582_562 # Declaring an object mask to get the billing item information object_mask = &amp;#39;mask[id,billingItem.</description>
    </item>
    
    <item>
      <title>change_private_port_speed.rb</title>
      <link>https://softlayer.github.io/ruby/change_private_port_speed.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/change_private_port_speed.rb/</guid>
      <description># Set Private Network Interface Speed. # It sets the private network interface speed to the new speed. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://www.rubydoc.info/github/softlayer/softlayer-api-ruby-client/master/SoftLayer/Server#change_port_speed-instance_method # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/setPrivateNetworkInterfaceSpeed # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the server id that you want to edit its port speed. server_id = 11498371 # Set the new speed, It is expressed Mbps and should be 0, 10, 100, or 1000 new_speed = 10 # Your SoftLayer API username.</description>
    </item>
    
    <item>
      <title>change_public_port_speed.rb</title>
      <link>https://softlayer.github.io/ruby/change_public_port_speed.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/change_public_port_speed.rb/</guid>
      <description># Set Public Network Interface Speed. # It sets the public network interface speed to the new speed. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://www.rubydoc.info/github/softlayer/softlayer-api-ruby-client/master/SoftLayer/Server#change_port_speed-instance_method # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/setPublicNetworkInterfaceSpeed # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the server id that you want to change the port speed. server_id = 11498371 # Set the new speed, It is expressed Mbps and should be 0, 10, 100, or 1000 new_speed = 10 # Your SoftLayer API username.</description>
    </item>
    
    <item>
      <title>change_values_monitor_agent.rb</title>
      <link>https://softlayer.github.io/ruby/change_values_monitor_agent.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/change_values_monitor_agent.rb/</guid>
      <description># Edit agent configuration values # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; agent_id = 121_169_6 configuration_values = [ { &amp;#39;agentId&amp;#39; =&amp;gt; 121_169_6, &amp;#39;id&amp;#39; =&amp;gt; 212_433_18, &amp;#39;value&amp;#39; =&amp;gt; 90 } ] client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) change_monitor = client.service_named(&amp;#39;SoftLayer_Monitoring_Agent&amp;#39;) begin result = change_monitor.</description>
    </item>
    
    <item>
      <title>create_account_and_api_key.rb</title>
      <link>https://softlayer.github.io/ruby/create_account_and_api_key.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_account_and_api_key.rb/</guid>
      <description># Creates new account and create API key for that account # # The script creates a new account using the createCustomerAccount() method, # then the script will create the API key for that account, in order to achieve # that goal it is necessary to make soap request because in oder to create # the API key we need to call the method addApiAuthenticationKey() using the # the credentials of the new account as we do not have that information we are # calling the method using impersonation.</description>
    </item>
    
    <item>
      <title>create_bare_metal.rb</title>
      <link>https://softlayer.github.io/ruby/create_bare_metal.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_bare_metal.rb/</guid>
      <description># Order a Bare Metal Server. # # Build a SoftLayer_Container_Product_Order object for a new # server order and pass it to the SoftLayer_Product_Order API service to order # it. In this care we&amp;#39;ll order a Xeon 3460 server with 2G RAM, 100mbit NICs, # 2000GB bandwidth, a 500G SATA drive, CentOS 5 32-bit, and default server # order options. See below for more details. # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>create_dns_zone.rb</title>
      <link>https://softlayer.github.io/ruby/create_dns_zone.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_dns_zone.rb/</guid>
      <description># Create a DNS Zone. # It creates a new domain (zone) on the SoftLayer name servers. # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/createObject # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) dns_domain_service = softlayer_client.service_named(&amp;#39;Dns_Domain&amp;#39;) # Creating a template to configure our new DNS Zone.</description>
    </item>
    
    <item>
      <title>create_flex_image_server.rb</title>
      <link>https://softlayer.github.io/ruby/create_flex_image_server.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_flex_image_server.rb/</guid>
      <description># Create an flex image from a Server # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Disk_Image_Capture_Template # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/captureImage # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server # # License &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) hardware_server_service = client.service_named(&amp;#39;SoftLayer_Hardware_Server&amp;#39;) # The virtual hardware ID of the machine you wish to create the image template hardware_server_id = 743_897_2 # Creating an SoftLayer_Container_Disk_Image_Capture_Template Skeleton # wich contains the information for our flex image capture_template = { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Container_Disk_Image_Capture_Template&amp;#39;, &amp;#39;description&amp;#39; =&amp;gt; &amp;#39;test&amp;#39;, &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;reloadFlexImage&amp;#39;, &amp;#39;summary&amp;#39; =&amp;gt; &amp;#39;test summary&amp;#39; } begin # Calling the captureImage method along with our captureTemplate to create the flexImage result = hardware_server_service.</description>
    </item>
    
    <item>
      <title>create_image_template_standard.rb</title>
      <link>https://softlayer.github.io/ruby/create_image_template_standard.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_image_template_standard.rb/</guid>
      <description># Create standard image template. # # The example creates a standard image template from a CCI # which contains 3 disk. for more information see below. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createArchiveTransaction # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>create_network_monitor.rb</title>
      <link>https://softlayer.github.io/ruby/create_network_monitor.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_network_monitor.rb/</guid>
      <description># Create network monitoring # # The script creates a monitoring network with Service ping # in a determinate IP address # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Monitor_Version1_Query_Host # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The ID of the server you wish to monitor server_id = 759_848_2 # Id of the query type which can be found with SoftLayer_Network_Monitor_Version1_Query_Host_Stratum/getAllQueryTypes.</description>
    </item>
    
    <item>
      <title>create_notification_suscribers.rb</title>
      <link>https://softlayer.github.io/ruby/create_notification_suscribers.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_notification_suscribers.rb/</guid>
      <description># # Create a notification subscription # # The script creates a notification for a determinate user in a determinate Virtual Guest # for more reference see these reference pages # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_Notification_Virtual_Guest/createObject # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_Notification_Virtual_Guests # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Build a SoftLayer_User_Customer_Notification_Virtual_Guest skeleton object # which contains the virtual guest id and user id of the notification new_notification = [ { &amp;#39;guestId&amp;#39; =&amp;gt; 7_698_972, &amp;#39;userId&amp;#39; =&amp;gt; 205_832 } ] # Declare the API client client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>create_object.rb</title>
      <link>https://softlayer.github.io/ruby/create_object.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_object.rb/</guid>
      <description># Create a virtual guest object. # # createObject() enables the creation of computing instances on an account. This # method is a simplified alternative to interacting with the ordering system directly. # In order to create a computing instance, a template object must be sent in with a few required values. # When this method returns an order will have been placed for a computing instance of the specified configuration.</description>
    </item>
    
    <item>
      <title>create_pool.rb</title>
      <link>https://softlayer.github.io/ruby/create_pool.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_pool.rb/</guid>
      <description># Create a bandwidth pool. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/createObject # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; template = { accountId: 207819, bandwidthAllotmentTypeId: 2, locationGroupId: 1, # The region for the pool. name: &amp;#39;test_pool_api&amp;#39; } SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) bandwidth_service = softlayer_client.service_named(&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;) begin result = bandwidth_service.createObject(template) ap result rescue StandardError =&amp;gt; e raise e end</description>
    </item>
    
    <item>
      <title>create_portal_user.rb</title>
      <link>https://softlayer.github.io/ruby/create_portal_user.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_portal_user.rb/</guid>
      <description># # Create Portal User. # This script will create a new portal user based in the values set into a SoftLayer_User_Customer # template object and then it will pass to SoftLayer_User_Customer::createObject method. # Check below references for more details. # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/createObject # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Set API user account credentials SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; # Set the password for the new user usr_password = &amp;#39;Password!</description>
    </item>
    
    <item>
      <title>create_record.rb</title>
      <link>https://softlayer.github.io/ruby/create_record.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_record.rb/</guid>
      <description># Create Resource Record. # This script creates a new domain resource record. # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/getResourceRecords # http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain_ResourceRecord/createObject # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) resource_record_service = softlayer_client.service_named(&amp;#39;Dns_Domain_ResourceRecord&amp;#39;) object_template = { domainId: &amp;#39;1801053&amp;#39;, data: &amp;#39;127.</description>
    </item>
    
    <item>
      <title>create_server_from_another.rb</title>
      <link>https://softlayer.github.io/ruby/create_server_from_another.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_server_from_another.rb/</guid>
      <description># Create a server from another. # # The script looks for a server with a determinate IP address ,then # gathers the order information from that server and build a new order # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Account # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # https://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ip_address_server_to_copy = &amp;#39;50.</description>
    </item>
    
    <item>
      <title>create_server_simplified.rb</title>
      <link>https://softlayer.github.io/ruby/create_server_simplified.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_server_simplified.rb/</guid>
      <description># Create Bare Metal server simplified way. # # The script creates a Bare Metal using the simplified way # it makes a single call to the SoftLayer_Hardware::createObject method. # For more information see below # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware/createObject/ # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware/getCreateObjectOptions/ # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware/generateOrderTemplate/ # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.&amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # To get the configuration options to create the server # call the SoftLayer_Hardware::getCreateObjectOptions method.</description>
    </item>
    
    <item>
      <title>create_standard_monitor.rb</title>
      <link>https://softlayer.github.io/ruby/create_standard_monitor.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_standard_monitor.rb/</guid>
      <description># Add standard monitor # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host/createObjects # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Monitor_Version1_Query_Host # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT_URL = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_Network_Monitor_Version1_Query_Host object # containing the order you wish to place. template_objects = [ { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Network_Monitor_Version1_Query_Host&amp;#39;, &amp;#39;arg1Value&amp;#39; =&amp;gt; &amp;#39;Domain&amp;#39;, # The parameter &amp;#39;guestId&amp;#39; =&amp;gt; 490_544_2, # The guest ID where you want add standard monitor &amp;#39;ipAddress&amp;#39; =&amp;gt; &amp;#39;10.</description>
    </item>
    
    <item>
      <title>create_user_notification_guest.rb</title>
      <link>https://softlayer.github.io/ruby/create_user_notification_guest.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_user_notification_guest.rb/</guid>
      <description># Add user notification to guest (standard notification) # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_Notification_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_Notification_Virtual_Guest/createObjects # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_Notification_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.&amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; template_objects = [ { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_User_Customer_Notification_Virtual_Guest&amp;#39;, &amp;#39;guestId&amp;#39; =&amp;gt; 490_544_2, &amp;#39;userId&amp;#39; =&amp;gt; 142_861 } ] # Declaring the API client to use the SoftLayer_Product_Package API service client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>create_virtual_server_quote.rb</title>
      <link>https://softlayer.github.io/ruby/create_virtual_server_quote.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_virtual_server_quote.rb/</guid>
      <description># # Create a quote. # This script creates a quote based in the information provided into the # SoftLayer_Container_Product_Order_Virtual_Guest object passing that object to # SoftLayer_Product_Order::placeQuote method. # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeQuote/ # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new( username: SL_API_USERNAME, api_key: SL_API_KEY) product_order = { &amp;#39;orderContainers&amp;#39; =&amp;gt; [ { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Container_Product_Order_Virtual_Guest&amp;#39;, &amp;#39;packageId&amp;#39; =&amp;gt; 46, &amp;#39;location&amp;#39; =&amp;gt; &amp;#39;HONGKONG02&amp;#39;, &amp;#39;quantity&amp;#39; =&amp;gt; 1, &amp;#39;virtualGuests&amp;#39; =&amp;gt; [ { &amp;#39;hostname&amp;#39; =&amp;gt; &amp;#39;test&amp;#39;, &amp;#39;domain&amp;#39; =&amp;gt; &amp;#39;test.</description>
    </item>
    
    <item>
      <title>create_vsi_family.rb</title>
      <link>https://softlayer.github.io/ruby/create_vsi_family.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_vsi_family.rb/</guid>
      <description># Create a Virtual Guest - Compute flavor. # # This example shows how to create a Virtual Guest device which is part of new VSI Families. # On this case we will create a Compute VSI with the following configuration: # 2 x 2.0 GHz Cores, 2 GB RAM, and primary disk of 25 GB (SAN). # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getActivePresets # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/generateOrderTemplate # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject # # License: http://sldn.</description>
    </item>
    
    <item>
      <title>create_vsi_timeout.rb</title>
      <link>https://softlayer.github.io/ruby/create_vsi_timeout.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_vsi_timeout.rb/</guid>
      <description># Create a VSI with a timeout to wait the transaction. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/generateOrderTemplate # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY, timeout: 500) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] product_order = client[&amp;#39;SoftLayer_Product_Order&amp;#39;] template = { &amp;#39;hostname&amp;#39; =&amp;gt; &amp;#39;host1&amp;#39;, &amp;#39;domain&amp;#39; =&amp;gt; &amp;#39;mydomain.com&amp;#39;, &amp;#39;datacenter&amp;#39; =&amp;gt; { &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;wdc01&amp;#39; }, &amp;#39;startCpus&amp;#39; =&amp;gt; 1, &amp;#39;maxMemory&amp;#39; =&amp;gt; 1, &amp;#39;localDiskFlag&amp;#39; =&amp;gt; false, &amp;#39;hourlyBillingFlag&amp;#39; =&amp;gt; true, &amp;#39;operatingSystemReferenceCode&amp;#39; =&amp;gt; &amp;#39;UBUNTU_LATEST&amp;#39;, &amp;#39;privateNetworkOnlyFlag&amp;#39; =&amp;gt; true, &amp;#39;primaryBackendNetworkComponent&amp;#39; =&amp;gt; { &amp;#39;networkVlan&amp;#39; =&amp;gt; { &amp;#39;id&amp;#39; =&amp;gt; 123_45 } }, &amp;#39;networkComponent&amp;#39; =&amp;gt; { &amp;#39;max_speed&amp;#39; =&amp;gt; 10 } } begin puts &amp;#39;Verifying: &amp;#39; + template order = virtual_guest_service.</description>
    </item>
    
    <item>
      <title>delete_image_template.rb</title>
      <link>https://softlayer.github.io/ruby/delete_image_template.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/delete_image_template.rb/</guid>
      <description># Delete an image template # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/deleteObject # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group # # License &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) block_device_template_group_service = client.service_named(&amp;#39;SoftLayer_Virtual_Guest_Block_Device_Template_Group&amp;#39;) # The image template which you wish to delete image_template_id = 171_272 begin result = block_device_template_group_service.object_with_id(image_template_id).deleteObject print result rescue =&amp;gt; error_reason puts &amp;#34;Unable to delete the image #{error_reason}&amp;#34; end</description>
    </item>
    
    <item>
      <title>delete_network_notification.rb</title>
      <link>https://softlayer.github.io/ruby/delete_network_notification.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/delete_network_notification.rb/</guid>
      <description># Delete network monitoring # # The script makes a single call to SoftLayer_Network_Monitor_Version1_Query_Host::deleteObject # method to delete the network monitoring for more information see below # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Monitor_Version1_Query_Host/deleteObject # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The id of the Newtwork monitor you wish to delete # To get the network monitors in the VSI use this code: # virtual_guest_service = client.</description>
    </item>
    
    <item>
      <title>delete_notification_subscribers.rb</title>
      <link>https://softlayer.github.io/ruby/delete_notification_subscribers.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/delete_notification_subscribers.rb/</guid>
      <description># Delete a notification subscription # # The script deletes a notification for a determinate user in a determinate Virtual Guest # for more reference see these reference pages # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_Notification_Virtual_Guest/deleteObjects # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_Notification_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Build a SoftLayer_User_Customer_Notification_Virtual_Guest skeleton object # which contains the id we wish to delete # To get the notifications for an particular Virtual Guest # call the getObject method + the mask &amp;#34;mask[monitoringUserNotification]&amp;#34; # e.</description>
    </item>
    
    <item>
      <title>delete_object.rb</title>
      <link>https://softlayer.github.io/ruby/delete_object.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/delete_object.rb/</guid>
      <description># Cancel a computing instance. # # This method will cancel a computing instance effective immediately. # For instances billed hourly, the charges will stop immediately after the method returns. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/deleteObject # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin deleted = virtual_guest_service.</description>
    </item>
    
    <item>
      <title>delete_origin_mapping.rb</title>
      <link>https://softlayer.github.io/ruby/delete_origin_mapping.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/delete_origin_mapping.rb/</guid>
      <description># Delete an origin mappings in a CDN. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/deleteOriginPullRule # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdn_id = 303_93 origin_id = &amp;#39;op907521&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) cdn_service = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] begin response = cdn_service.object_with_id(cdn_id).deleteOriginPullRule(origin_id) print response rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to delete the origin mappings.</description>
    </item>
    
    <item>
      <title>delete_quote.rb</title>
      <link>https://softlayer.github.io/ruby/delete_quote.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/delete_quote.rb/</guid>
      <description># # Delete quote. # This script deletes a presented quote in the SoftLayer Customer Portal&amp;#39;s # (https://control.softlayer.com/account/quotes) using a single # API call to SoftLayer_Billing_Order_Quote::deleteQuote method passing the ID of the quote to be deleted. # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order_Quote # http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order_Quote/deleteQuote # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # We can set the default client to be our client and that way # we can avoid supplying it later SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>delete_record.rb</title>
      <link>https://softlayer.github.io/ruby/delete_record.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/delete_record.rb/</guid>
      <description># Delete Resource Record. # This script deletes a domain&amp;#39;s resource record. # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain_ResourceRecord/deleteObject # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the id of item to delete record_id = 58935105 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Create a client to the API service softlayer_client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>delete_user.rb</title>
      <link>https://softlayer.github.io/ruby/delete_user.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/delete_user.rb/</guid>
      <description># # Delete user. # This scripts allows to delete a given user, it retrieves the SoftLayer_User_Customer object # by the SoftLayer_User_Customer::getObject method and changes the status of user to deleted. # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) # Set the user ID of the user you want to delete, yo can get it using # The SoftLayer_Account::getUsers method.</description>
    </item>
    
    <item>
      <title>detach_portal_storage.rb</title>
      <link>https://softlayer.github.io/ruby/detach_portal_storage.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/detach_portal_storage.rb/</guid>
      <description># Detach portal storage # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/detachDiskImage # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The portal storage ID which you wish to attach image_id = 482_714_4 # The virtual guest Id where you wish to attach the portal storage virtual_guest_id = 566_006_6 # Declaring the API client to use the SoftLayer_Virtual_Guest API service client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>determine_required_items.rb</title>
      <link>https://softlayer.github.io/ruby/determine_required_items.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/determine_required_items.rb/</guid>
      <description># Determine Required items # # Each Package is aware of a list of ItemCategories that make sense for that Package. # This list is called the Packages &amp;#34;Configuration&amp;#34;. Within the configuration, # the Package may identify certain categories that are required, meaning you must include # an ItemPrice from that category in any order you make against that Package # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getConfiguration # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # http://sldn.</description>
    </item>
    
    <item>
      <title>disassociate_vlan.rb</title>
      <link>https://softlayer.github.io/ruby/disassociate_vlan.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/disassociate_vlan.rb/</guid>
      <description># # Disassociate vlans in a gateway device. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway_Vlan/deleteObject # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/getInsideVlans # http://sldn.softlayer.com/article/Object-Filters # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; gateway_id = 615_22 vlan_id_to_remove = 105_426_5 client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) gateway_service = client.service_named(&amp;#39;SoftLayer_Network_Gateway&amp;#39;) gateway_vlan_service = client[&amp;#39;SoftLayer_Network_Gateway_Vlan&amp;#39;] object_filter = SoftLayer::ObjectFilter.new { |f| f.accept(&amp;#39;insideVlans..networkVlanId&amp;#39;).when_it is(vlan_id_to_remove) } begin gateway_vlan = gateway_service.</description>
    </item>
    
    <item>
      <title>dns_zone_details.rb</title>
      <link>https://softlayer.github.io/ruby/dns_zone_details.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/dns_zone_details.rb/</guid>
      <description># DNS Zone Details. # It retrieves the SoftLayer_Dns_Domain object whose ID number corresponds to # the ID number of the init parameter passed to the SoftLayer_Dns_Domain service. # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/getObject # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the domain id that you want to get details. dns_id = 1846857 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>dns_zone_list.rb</title>
      <link>https://softlayer.github.io/ruby/dns_zone_list.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/dns_zone_list.rb/</guid>
      <description># List Zones. # It retrieves the DNS domains associated with an account. # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getDomains # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) server = SoftLayer::Account.account_for_client(softlayer_client) begin # Display the DNS Zone list result = server.</description>
    </item>
    
    <item>
      <title>edit_details.rb</title>
      <link>https://softlayer.github.io/ruby/edit_details.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/edit_details.rb/</guid>
      <description># Edit details of a Virtual Guest. # This script edits a computing instance&amp;#39;s properties. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the server id that you wish to edit. server_id = 11498360 new_hostname_update = &amp;#39;vsi-test-edited.softlayer.com&amp;#39; notes = &amp;#39;edited from api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>edit_dns_zone.rb</title>
      <link>https://softlayer.github.io/ruby/edit_dns_zone.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/edit_dns_zone.rb/</guid>
      <description># Edit a DNS Zone. # This script edits an existing domain resource record. # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/getResourceRecords # http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain_ResourceRecord/editObject # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the domain id that you want to edit. dns_id = 1559414 responsible_person = &amp;#39;root.mcruzeditedd07.com&amp;#39; # TTL values: # 900 (15 Min) # 3600 (1 Hour) # 86400 (1 Day) # 604800 (1 Week) ttl = 900 # Your SoftLayer API username.</description>
    </item>
    
    <item>
      <title>edit_record.rb</title>
      <link>https://softlayer.github.io/ruby/edit_record.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/edit_record.rb/</guid>
      <description># Edit Resource Records. # This script edits an existing domain resource record. # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain_ResourceRecord/editObject # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set a Resource Record Id # To get Resource Record information: http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/getResourceRecords resource_id = 56876637 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>edit_server.rb</title>
      <link>https://softlayer.github.io/ruby/edit_server.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/edit_server.rb/</guid>
      <description># # Edit a server&amp;#39;s basic information # # Change the notes property for a single server record to the sentence &amp;#34;This # is my fastest server!&amp;#34; using the editObject() method in the # SoftLayer_Hardware_Server API service. See below for more details. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/editObject # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/ # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server/ # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.&amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>edit_user.rb</title>
      <link>https://softlayer.github.io/ruby/edit_user.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/edit_user.rb/</guid>
      <description># # Edit User. # Account master users and sub-users who have the User Manage permission in the SoftLayer customer portal # can update other user&amp;#39;s information. Use editObject() if you wish to edit a single user account. # Users who do not have the User Manage permission can only update their own information. # Important manual Pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/editObject # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.</description>
    </item>
    
    <item>
      <title>find_by_ip_address.rb</title>
      <link>https://softlayer.github.io/ruby/find_by_ip_address.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/find_by_ip_address.rb/</guid>
      <description># Retrieve a virtual guest object. # # Find CCI by only its primary public or private IP address. IP addresses within secondary subnets tied to the CCI # will not return the CCI. If no CCI is found, no errors are generated and no data is returned. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; ip_address = &amp;#39;184.</description>
    </item>
    
    <item>
      <title>gather_details_image_template.rb</title>
      <link>https://softlayer.github.io/ruby/gather_details_image_template.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/gather_details_image_template.rb/</guid>
      <description># Get more details about the images templates. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/getObject # # License &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) block_device_template_group_service = client.service_named(&amp;#39;SoftLayer_Virtual_Guest_Block_Device_Template_Group&amp;#39;) # The image template which you wish more details image_template_id = 171_272 # Declaring an object mask to get more information about the images templates object_mask = &amp;#39;mask[summary,note,status[name],storageRepository[datacenter],transaction[transactionGroup,transactionStatus],children[storageRepository[datacenter],blockDevices[diskImage[type]]]]&amp;#39; begin # Calling the getObject to get an instance of the image template result = block_device_template_group_service.</description>
    </item>
    
    <item>
      <title>generate_order_template.rb</title>
      <link>https://softlayer.github.io/ruby/generate_order_template.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/generate_order_template.rb/</guid>
      <description># Generates an order template. # # Obtain an order container that can be sent to verifyOrder or placeOrder. # This is primarily useful when there is a necessity to confirm the price which will be charged for an order. # See createObject for specifics on the requirements of the template object parameter. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/generateOrderTemplate # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.</description>
    </item>
    
    <item>
      <title>get_Primary_network_component.rb</title>
      <link>https://softlayer.github.io/ruby/get_Primary_network_component.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_Primary_network_component.rb/</guid>
      <description># Retrieve a guest&amp;#39;s primary public network component. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getPrimaryNetworkComponent # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Network_Component # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin virtual_guest_network_component = virtual_guest_service.object_with_id(virtual_guest_id) .getPrimaryNetworkComponent ap virtual_guest_network_component rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script...&amp;#39; $stdout.</description>
    </item>
    
    <item>
      <title>get_accounts_brands.rb</title>
      <link>https://softlayer.github.io/ruby/get_accounts_brands.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_accounts_brands.rb/</guid>
      <description># Get owned account # # The script retrieves all the owned accounts for an arbitrary brand, # the script makes a call to getOwnedBrands() method to retrieve # the brands where the account belongs, then it calls the getAllOwnedAccounts() # method to get the owned accounts for every brand. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getOwnedBrands # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getAllOwnedAccounts # http://sldn.softlayer.com/reference/services/SoftLayer_Brand # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Brand # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.</description>
    </item>
    
    <item>
      <title>get_active_transaction.rb</title>
      <link>https://softlayer.github.io/ruby/get_active_transaction.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_active_transaction.rb/</guid>
      <description># Retrieve a transaction that is still be performed on a cloud server. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getActiveTransaction # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Provisioning_Version1_Transaction # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin provisioning_version1_transaction = virtual_guest_service.object_with_id(virtual_guest_id) .getActiveTransaction ap provisioning_version1_transaction rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script.</description>
    </item>
    
    <item>
      <title>get_agents.rb</title>
      <link>https://softlayer.github.io/ruby/get_agents.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_agents.rb/</guid>
      <description># Example to get the agents that are running in the virtual machine. # Also we can get the agents using the getObject method and the following mask # mask[ # monitoringRobot.robotStatus, # monitoringAgents.statusName, # monitoringServiceEligibilityFlag, # datacenter # ] # then we can use the # SoftLayer_Monitoring_Agent:getObject # SoftLayer_Monitoring_Agent:getAvailableConfigurationValues # SoftLayer_Monitoring_Agent:getConfigurationValues # # important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMonitoringAgents # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.</description>
    </item>
    
    <item>
      <title>get_all_items_from_device_list.rb</title>
      <link>https://softlayer.github.io/ruby/get_all_items_from_device_list.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_all_items_from_device_list.rb/</guid>
      <description># Get all items from Device list. # # Important manual pages: # # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.service_named(&amp;#39;SoftLayer_Search&amp;#39;) # The items with the following Device types should be displayed # using the below filter: # Bare Metal Server, Virtual Server, Firewall, Gateway Member, Netscaler,KVM/IP filter_data = &amp;#39;_objectType:SoftLayer_Hardware,&amp;#39;\ &amp;#39;SoftLayer_Virtual_Guest,SoftLayer_Network_Vlan_Firewall,&amp;#39;\ &amp;#39;SoftLayer_Network_Application_Delivery_Controller &amp;#39; begin # Display all items same as Portal &amp;gt; Device List result = search_service.</description>
    </item>
    
    <item>
      <title>get_all_items_from_device_list_using_masks.rb</title>
      <link>https://softlayer.github.io/ruby/get_all_items_from_device_list_using_masks.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_all_items_from_device_list_using_masks.rb/</guid>
      <description># Get all items from Device list using an object mask # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.service_named(&amp;#39;SoftLayer_Search&amp;#39;) # Create an object mask to get more information than by default mask = &amp;#39;mask[resource(SoftLayer_Hardware)&amp;#39;\ &amp;#39;[ id, fullyQualifiedDomainName,datacenter],&amp;#39;\ &amp;#39;resource(SoftLayer_Virtual_Guest)&amp;#39;\ &amp;#39;[ id, fullyQualifiedDomainName,datacenter],&amp;#39;\ &amp;#39;resource(SoftLayer_Network_Application_Delivery_Controller)&amp;#39;\ &amp;#39;[ id, name,datacenter.</description>
    </item>
    
    <item>
      <title>get_available_block_device_positions.rb</title>
      <link>https://softlayer.github.io/ruby/get_available_block_device_positions.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_available_block_device_positions.rb/</guid>
      <description># Retrieve available block device positions. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getAvailableBlockDevicePositions # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin result = virtual_guest_service.object_with_id(virtual_guest_id) .getAvailableBlockDevicePositions ap result rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script...&amp;#39; $stdout.print(e.inspect) end</description>
    </item>
    
    <item>
      <title>get_available_network_storages.rb</title>
      <link>https://softlayer.github.io/ruby/get_available_network_storages.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_available_network_storages.rb/</guid>
      <description># Retrieve a list of Network Storage volumes. # # This method retrieves a list of SoftLayer_Network_Storage volumes that can be authorized # to this SoftLayer_Virtual_Guest. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getAvailableNetworkStorages # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Storage # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 # Either &amp;#39;ISCSI&amp;#39;, &amp;#39;NAS&amp;#39;, or &amp;#39;*&amp;#39; for both nas_type = &amp;#39;*&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_available_routers.rb</title>
      <link>https://softlayer.github.io/ruby/get_available_routers.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_available_routers.rb/</guid>
      <description># Get the available backend routers to order a dedicated host. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_DedicatedHost/getAvailableRouters # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_DedicatedHost # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Skeleton of the dedicated host to specify datacenter and configuration sizes template_dedicated_host = { :cpuCount =&amp;gt; 56, :diskCapacity =&amp;gt; 1200, :memoryCapacity =&amp;gt; 242, :datacenter =&amp;gt; { :id =&amp;gt; 814994 } } # Create a SoftLayer API client object client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_bandwidth_data.rb</title>
      <link>https://softlayer.github.io/ruby/get_bandwidth_data.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_bandwidth_data.rb/</guid>
      <description># Get bandwidth data in a CDN. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getBandwidthData # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdn_id = 303_93 start_date = &amp;#39;2014-10-10 00:00:00&amp;#39; end_date = &amp;#39;2015-10-10 05:00:00&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) cdn_service = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] begin response = cdn_service.object_with_id(cdn_id).getBandwidthData(start_date, end_date) print response rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to get the bandwidth data.</description>
    </item>
    
    <item>
      <title>get_bandwith_image_by_date.rb</title>
      <link>https://softlayer.github.io/ruby/get_bandwith_image_by_date.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_bandwith_image_by_date.rb/</guid>
      <description># Retrieve bandwith image by date. # # Use this method when needing a bandwidth image for a single guest. It will gather the correct input parameters # for the generic graphing utility based on the date ranges # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBandwidthImageByDate # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Bandwidth_GraphOutputs # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; require &amp;#39;date&amp;#39; # The virtual guest id of the virtual guest object that&amp;#39;s going to be retrieved to retrieve a bandwith image.</description>
    </item>
    
    <item>
      <title>get_bare_metal_billing_item.rb</title>
      <link>https://softlayer.github.io/ruby/get_bare_metal_billing_item.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_bare_metal_billing_item.rb/</guid>
      <description># Retrieve the billing items for the Bare Metals in the account. # # This script makes a single call to the getHardware() method in the # SoftLayer_Account API service and uses a object mask to get the # billing items and items for each Bare Metal server in the account. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.</description>
    </item>
    
    <item>
      <title>get_billing_info.rb</title>
      <link>https://softlayer.github.io/ruby/get_billing_info.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_billing_info.rb/</guid>
      <description># Retrieve the billing info for the Bare Metals in the account. # # This script makes a single call to the getHardware() method in the # SoftLayer_Account API service and uses a object mask to get the # billing info for each Bare Metal server in the account. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Info # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username.</description>
    </item>
    
    <item>
      <title>get_billing_item.rb</title>
      <link>https://softlayer.github.io/ruby/get_billing_item.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_billing_item.rb/</guid>
      <description># Retrieve the billing item for a CloudLayer Compute Instance. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBillingItem # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin billing_item_virtual_guest = virtual_guest_service.object_with_id(virtual_guest_id) .getBillingItem ap billing_item_virtual_guest rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script.</description>
    </item>
    
    <item>
      <title>get_block_devices.rb</title>
      <link>https://softlayer.github.io/ruby/get_block_devices.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_block_devices.rb/</guid>
      <description># Retrieve a computing instance&amp;#39;s block devices. Block devices link disk images to computing instances. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBlockDevices # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin virtual_guest_block_device = virtual_guest_service.object_with_id(virtual_guest_id) .getBlockDevices ap virtual_guest_block_device rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script.</description>
    </item>
    
    <item>
      <title>get_brandwidth_graph.rb</title>
      <link>https://softlayer.github.io/ruby/get_brandwidth_graph.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_brandwidth_graph.rb/</guid>
      <description># # Retrieve a bandwidth graph for a single server. # # Retrieve a bandwidth graph for a single server for an arbitrary start and # end date, specifying graph size and other graphing options. We can do this # with two calls to the SoftLayer API. # # Counter data such as bandwidth counters and CCI resource use are stored in # a server&amp;#39;s metric tracking object. Our first call retrieves that server&amp;#39;s # tracking object record.</description>
    </item>
    
    <item>
      <title>get_configuration_template_monitor.rb</title>
      <link>https://softlayer.github.io/ruby/get_configuration_template_monitor.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_configuration_template_monitor.rb/</guid>
      <description># Get the configuration of a particular monitor # # Important manual pages. # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getConfigurationTemplate # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(username: &amp;#39;set me&amp;#39;, api_key: &amp;#39;set me&amp;#39;) monitor_agent_id = 108_158_4 monitor_service = client.service_named(&amp;#39;SoftLayer_Monitoring_Agent&amp;#39;) object_mask = &amp;#39;mask[configurationSections[subSections[definitions]]]&amp;#39; begin # Getting the actual configuration for the monitor result = monitor_service.object_mask(object_mask).object_with_id(monitor_agent_id).getConfigurationTemplate puts result rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to get the configuration template of the agent: #{exception}&amp;#34; end</description>
    </item>
    
    <item>
      <title>get_configuration_values_agent.rb</title>
      <link>https://softlayer.github.io/ruby/get_configuration_values_agent.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_configuration_values_agent.rb/</guid>
      <description># Gets the actual monitor agent configuration # the values can be modified and change using the SoftLayer_Monitoring_Agent::applyConfigurationValues # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getConfigurationValues # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT_URL = &amp;#39;set me&amp;#39; # The monitor agent ID you which to get the actual configuration monitor_agent_id = 121_169_6 # Declaring the API client to use the SoftLayer_Product_Package API service client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_create_object_options.rb</title>
      <link>https://softlayer.github.io/ruby/get_create_object_options.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_create_object_options.rb/</guid>
      <description># Get the options to create VSIs. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # https://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest/getCreateObjectOptions # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer username and API key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin # Getting all the options available to create VSIs options = virtual_guest_service.</description>
    </item>
    
    <item>
      <title>get_credential_fortigate_firewall.rb</title>
      <link>https://softlayer.github.io/ruby/get_credential_fortigate_firewall.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_credential_fortigate_firewall.rb/</guid>
      <description># Gets the credentials for a FortiGate Firewall # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan_Firewall # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan_Firewall/getManagementCredentials # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; APIKEY = &amp;#39;set me&amp;#39; TIMEOUT = 120 # Declaring the API client to use the SoftLayer_Network_Vlan_Firewall API service client = SoftLayer::Client.new(username: USERNAME, api_key: APIKEY, timeout: TIMEOUT) network_vlan_firewall_service = client.</description>
    </item>
    
    <item>
      <title>get_dedicated_host_to_migrate.rb</title>
      <link>https://softlayer.github.io/ruby/get_dedicated_host_to_migrate.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_dedicated_host_to_migrate.rb/</guid>
      <description># Get valid dedicated host for migration. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getDedicatedHosts # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_DedicatedHost # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getDedicatedHost # http://sldn.softlayer.com/article/object-masks # http://sldn.softlayer.com/article/object-filters # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Id of virtual guest you want to migrate virtual_guest_id = 37117661 # Create a SoftLayer API client object client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_details.rb</title>
      <link>https://softlayer.github.io/ruby/get_details.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_details.rb/</guid>
      <description># Get Virtual Guest details. # It retrieves virtual guest information. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getObject # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; server_id = 10538555 # Creating the SoftLayer Client. softlayer_client = SoftLayer::Client.new(:username =&amp;gt; SL_API_USERNAME, :api_key =&amp;gt; SL_API_KEY) # Set the SoftLayer service to use.</description>
    </item>
    
    <item>
      <title>get_firewall_list.rb</title>
      <link>https://softlayer.github.io/ruby/get_firewall_list.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_firewall_list.rb/</guid>
      <description># Get Firewall list using SoftLayer_Search::advancedSearch # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.service_named(&amp;#39;SoftLayer_Search&amp;#39;) filter_data = &amp;#39;_objectType:SoftLayer_Network_Vlan_Firewall&amp;#39; begin # Display Firewall items same as Portal &amp;gt; Device List result = search_service.</description>
    </item>
    
    <item>
      <title>get_gateway_member_list.rb</title>
      <link>https://softlayer.github.io/ruby/get_gateway_member_list.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_gateway_member_list.rb/</guid>
      <description># Get Gateway Member list using SoftLayer_Search::advancedSearch # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.service_named(&amp;#39;SoftLayer_Search&amp;#39;) filter_data = &amp;#39;networkGatewayMemberFlag:1 _objectType:SoftLayer_Hardware&amp;#39; begin # Display Gateway Member items same as Portal &amp;gt; Device List result = search_service.</description>
    </item>
    
    <item>
      <title>get_graph_data.rb</title>
      <link>https://softlayer.github.io/ruby/get_graph_data.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_graph_data.rb/</guid>
      <description># Get the graph data from a monitoring agent # # The script gets the CPU usage in a determinate date range # for more reference see below. # # Important manual pages. # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent/getGraphData # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Creating an skeleton SoftLayer_Container_Metric_Data_Type object # which represent the metric data that we will get.</description>
    </item>
    
    <item>
      <title>get_hardware_list.rb</title>
      <link>https://softlayer.github.io/ruby/get_hardware_list.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_hardware_list.rb/</guid>
      <description># Get Hardware list using SoftLayer_Search::advancedSearch # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.service_named(&amp;#39;SoftLayer_Search&amp;#39;) filter_data = &amp;#39;networkGatewayMemberFlag:0 _objectType:SoftLayer_Hardware&amp;#39; begin # Display Hardware items same as Portal &amp;gt; Device List result = search_service.</description>
    </item>
    
    <item>
      <title>get_invoice.rb</title>
      <link>https://softlayer.github.io/ruby/get_invoice.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_invoice.rb/</guid>
      <description># Retrieve the invoice information. # # This script makes a single call to the getInvoices() method in the # SoftLayer_Account API service and uses a object mask to get more # information about the invoices. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getInvoices # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Invoice # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the object mask to get more information about the invoices.</description>
    </item>
    
    <item>
      <title>get_item_prices.rb</title>
      <link>https://softlayer.github.io/ruby/get_item_prices.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_item_prices.rb/</guid>
      <description># Get item prices # # This script will display the general information related # to a single SoftLayer product item price # # See below references for more details. # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new( username: SL_API_USERNAME, api_key: SL_API_KEY ) # Set the ID of the package to retrieve the information package_id = 46 # Text format for our prettified output header_format = &amp;#34;%s - %s:\n&amp;#34; item_format = &amp;#34; %s:\n&amp;#34; category_format = &amp;#34; %s -- %s\n&amp;#34; # Set the object mask to retrieve categories category_object_mask = &amp;#39;mask[categories]&amp;#39; # Get all itemPrices for this package prices = client[&amp;#39;SoftLayer_Product_Package&amp;#39;].</description>
    </item>
    
    <item>
      <title>get_items_filtered_by_private_ip.rb</title>
      <link>https://softlayer.github.io/ruby/get_items_filtered_by_private_ip.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_items_filtered_by_private_ip.rb/</guid>
      <description># Get items from &amp;#34;Portal&amp;gt;Device List&amp;#34; filtered by Private IP # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; private_ip = &amp;#39;10.102.52.131&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.</description>
    </item>
    
    <item>
      <title>get_items_filtered_by_public_ip.rb</title>
      <link>https://softlayer.github.io/ruby/get_items_filtered_by_public_ip.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_items_filtered_by_public_ip.rb/</guid>
      <description># Get items from &amp;#34;Portal&amp;gt;Device List&amp;#34; filtered by Public IP # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; public_ip = &amp;#39;119.81.141.164&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.</description>
    </item>
    
    <item>
      <title>get_items_from_device_list_by_location.rb</title>
      <link>https://softlayer.github.io/ruby/get_items_from_device_list_by_location.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_items_from_device_list_by_location.rb/</guid>
      <description># Get all items from Device according to an specific location # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; location = &amp;#39;Dallas 5&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.</description>
    </item>
    
    <item>
      <title>get_items_from_device_list_using_multiple_filters.rb</title>
      <link>https://softlayer.github.io/ruby/get_items_from_device_list_using_multiple_filters.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_items_from_device_list_using_multiple_filters.rb/</guid>
      <description># Get items from &amp;#34;Portal&amp;gt;Device List&amp;#34; filtered by multiple filters # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; # Setting some Filters: # Devicename: mydevice.softlayer.local # Location: Dallas 6 # Devicetype: Gateway Member # PrivateIp: 10.</description>
    </item>
    
    <item>
      <title>get_items_from_device_list_using_tags.rb</title>
      <link>https://softlayer.github.io/ruby/get_items_from_device_list_using_tags.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_items_from_device_list_using_tags.rb/</guid>
      <description># Get items from &amp;#34;Portal&amp;gt;Device List&amp;#34; according to tags as filter # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; tag = &amp;#39;mytag&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.</description>
    </item>
    
    <item>
      <title>get_kvmip_list.rb</title>
      <link>https://softlayer.github.io/ruby/get_kvmip_list.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_kvmip_list.rb/</guid>
      <description># Get KVM/IP list using SoftLayer_Search::advancedSearch # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.service_named(&amp;#39;SoftLayer_Search&amp;#39;) filter_data = &amp;#34;hardwareFunctionDescription:\&amp;#34;KVM\&amp;#34; || hardwareFunctionDescription:\&amp;#34;KVM\/IP\&amp;#34; _objectType:SoftLayer_Hardware &amp;#34; begin # Display KVM/List items same as Portal &amp;gt; Device List result = search_service.</description>
    </item>
    
    <item>
      <title>get_locations.rb</title>
      <link>https://softlayer.github.io/ruby/get_locations.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_locations.rb/</guid>
      <description># # Get package location # # This script will retrieve a collection of valid locations for this package. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getLocations # # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) # Set the ID of the package to retrieve the information package_id = 46 locations = client[&amp;#39;SoftLayer_Product_Package&amp;#39;].</description>
    </item>
    
    <item>
      <title>get_monitoring_agents.rb</title>
      <link>https://softlayer.github.io/ruby/get_monitoring_agents.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_monitoring_agents.rb/</guid>
      <description># Retrieves the SoftLayer_Monitoring_Agent objects for a virtual_guest. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getMonitoringAgents # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin monitoring_agent = virtual_guest_service.object_with_id(virtual_guest_id) .getMonitoringAgents ap monitoring_agent rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script...&amp;#39; $stdout.</description>
    </item>
    
    <item>
      <title>get_monitoring_template_groups.rb</title>
      <link>https://softlayer.github.io/ruby/get_monitoring_template_groups.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_monitoring_template_groups.rb/</guid>
      <description># Get the SoftLayer_Monitoring_Agent_Configuration_Template_Group # for use them in a Monitor package order # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent_Configuration_Template_Group # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package id for Monitoring package package_id = 0 # Declare the API client to use the SoftLayer_Monitoring_Agent_Configuration_Template_Group API service client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_netscaler_list.rb</title>
      <link>https://softlayer.github.io/ruby/get_netscaler_list.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_netscaler_list.rb/</guid>
      <description># Get Netscaler list using SoftLayer_Search::advancedSearch # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Search/advancedSearch # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Softlayer API public endpoint API_PUBLIC_ENDPOINT = &amp;#39;https://api.softlayer.com/xmlrpc/v3.1/&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: API_PUBLIC_ENDPOINT) search_service = softlayer_client.service_named(&amp;#39;SoftLayer_Search&amp;#39;) filter_data = &amp;#39;_objectType:SoftLayer_Network_Application_Delivery_Controller&amp;#39; begin # Display Netscaler items same as Portal &amp;gt; Device List result = search_service.</description>
    </item>
    
    <item>
      <title>get_object.rb</title>
      <link>https://softlayer.github.io/ruby/get_object.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_object.rb/</guid>
      <description># Retrieve a virtual guest object. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getObject # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin virtual_guest = virtual_guest_service.object_with_id(virtual_guest_id) .getObject ap virtual_guest rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script...&amp;#39; $stdout.print(e.inspect) end</description>
    </item>
    
    <item>
      <title>get_operating_system.rb</title>
      <link>https://softlayer.github.io/ruby/get_operating_system.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_operating_system.rb/</guid>
      <description># Retrieve the operating system of a virtual guest object. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getOperatingSystem # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Software_Component_OperatingSystem # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin software_component_operating_system = virtual_guest_service.object_with_id(virtual_guest_id) .getOperatingSystem ap software_component_operating_system rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script.</description>
    </item>
    
    <item>
      <title>get_order_template.rb</title>
      <link>https://softlayer.github.io/ruby/get_order_template.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_order_template.rb/</guid>
      <description># Retrieve an order container. # # Obtain an order container that is ready to be sent to the # SoftLayer_Product_Order#placeOrder|SoftLayer_Product_Order::placeOrder method. # This container will include all services that the selected computing instance has. # If desired you may remove prices which were returned. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getOrderTemplate # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 # either MONTHLY or HOURLY billing_type = &amp;#39;MONTHLY&amp;#39; # This is a list of prices that could replace options that are normally selected by matching # the items to the existing virtual server.</description>
    </item>
    
    <item>
      <title>get_ordered_file_storage.rb</title>
      <link>https://softlayer.github.io/ruby/get_ordered_file_storage.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_ordered_file_storage.rb/</guid>
      <description># Get the File Storage ordered. # # This script looks for the file storage we ordered # using the order id to perform the research. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNetworkStorage # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Storage # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The order id of our file storage order_id = 5_505_803 # Declaring the API client client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_pool_details_server.rb</title>
      <link>https://softlayer.github.io/ruby/get_pool_details_server.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_pool_details_server.rb/</guid>
      <description># Get the details for a bandwidth pool (list only the servers). # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; pool_id = 115045 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) account_service = softlayer_client.service_named(&amp;#39;SoftLayer_Account&amp;#39;) mask = &amp;#39;mask(SoftLayer_Hardware_Server)[projectedPublicBandwidthUsage, datacenter, outboundPublicBandwidthUsage, bandwidthAllocation, virtualRackId]&amp;#39; filter = SoftLayer::ObjectFilter.new filter.set_criteria_for_key_path(&amp;#39;hardware.virtualRackId&amp;#39;, operation: pool_id) begin details = [] servers = account_service.</description>
    </item>
    
    <item>
      <title>get_power_state.rb</title>
      <link>https://softlayer.github.io/ruby/get_power_state.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_power_state.rb/</guid>
      <description># Retrieve the current power state of a virtual guest. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getPowerState # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Power_State # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin virtual_guest_power_state = virtual_guest_service.object_with_id(virtual_guest_id) .getPowerState ap virtual_guest_power_state rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script.</description>
    </item>
    
    <item>
      <title>get_prices_location_group.rb</title>
      <link>https://softlayer.github.io/ruby/get_prices_location_group.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_prices_location_group.rb/</guid>
      <description># Get prices for File Storage # # The script retrieves the items and prices to order a File Storage # and uses filters to get the prices for an arbitrary location group # and an arbitrary item description. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems # http://sldn.softlayer.com/article/Object-Filters # http://sldn.softlayer.com/article/Object-Masks # http://sldn.softlayer.com/blog/cmporter/Location-based-Pricing-and-You # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>get_prices_pakage_monitoring.rb</title>
      <link>https://softlayer.github.io/ruby/get_prices_pakage_monitoring.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_prices_pakage_monitoring.rb/</guid>
      <description># Get the prices for order a Monitor package # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItems # https://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package Id for Monitoring package package_id = 0 client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) package_service = client.service_named(&amp;#39;SoftLayer_Product_Package&amp;#39;) # Add an object mask to retrieve our package&amp;#39;s related items such as its # prices, attributes, etc for more information see # https://sldn.</description>
    </item>
    
    <item>
      <title>get_quote_details.rb</title>
      <link>https://softlayer.github.io/ruby/get_quote_details.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_quote_details.rb/</guid>
      <description># # Retrieves an account&amp;#39;s quote information. # # This script retrieves the data presented in the SoftLayer Customer Portal&amp;#39;s # (https://control.softlayer.com/account/quotes) using an API call to SoftLayer_Account::getQuotes method. # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getQuotes # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # We can set the default client to be our client and that way # we can avoid supplying it later SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_records.rb</title>
      <link>https://softlayer.github.io/ruby/get_records.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_records.rb/</guid>
      <description># Get Resource Records. # This script retrieves the individual records contained within a domain record. # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/getResourceRecords # # license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the domain id to get the associated records # To get Domain information: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getDomains domain_id = 1801053 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>get_regions.rb</title>
      <link>https://softlayer.github.io/ruby/get_regions.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_regions.rb/</guid>
      <description># Get the valid regions to order a bandwidth pool. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group # http://sldn.softlayer.com/reference/services/SoftLayer_Location_Group/getAllObjects # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Location_Group # http://sldn.softlayer.com/article/Object-Filters # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) location_group_service = softlayer_client.service_named(&amp;#39;SoftLayer_Location_Group&amp;#39;) filter = SoftLayer::ObjectFilter.new filter.set_criteria_for_key_path(&amp;#39;locationGroupType.name&amp;#39;, operation: &amp;#39;VDR&amp;#39;) begin regions = location_group_service.object_filter(filter) .getAllObjects ap regions rescue StandardError =&amp;gt; e raise e end</description>
    </item>
    
    <item>
      <title>get_security_scan_request.rb</title>
      <link>https://softlayer.github.io/ruby/get_security_scan_request.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_security_scan_request.rb/</guid>
      <description># Retrieve a guest&amp;#39;s vulnerability scan requests. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getSecurityScanRequests # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Security_Scanner_Request # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin network_security_scanner_request = virtual_guest_service.object_with_id(virtual_guest_id) .getSecurityScanRequests ap network_security_scanner_request rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script...&amp;#39; $stdout.print(e.inspect) end</description>
    </item>
    
    <item>
      <title>get_server_cost.rb</title>
      <link>https://softlayer.github.io/ruby/get_server_cost.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_server_cost.rb/</guid>
      <description># Get the recurring cost of a single server or all servers on your account. # # Get a list of servers on a SoftLayer account along with their recurring # monthly costs. We can get that by calling getHardware() in the # SoftLayer_Account API service with an object mask to retrieve cost. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getCost # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.</description>
    </item>
    
    <item>
      <title>get_server_details.rb</title>
      <link>https://softlayer.github.io/ruby/get_server_details.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_server_details.rb/</guid>
      <description># Get server details # # Retrieve a list of hardware and print a report with server hostname, domain, # login info, network, CPU, and RAM details. # This script makes a single call to the getHardware() method in the # SoftLayer_Account API service # (http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware) # and uses an object mask to retrieve related information. It uses the # SoftLayer API Ruby client # &amp;lt;https://github.com/softlayer/softlayer-ruby&amp;gt; to handle API calls. # See below for more details.</description>
    </item>
    
    <item>
      <title>get_servers_in_a_region.rb</title>
      <link>https://softlayer.github.io/ruby/get_servers_in_a_region.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_servers_in_a_region.rb/</guid>
      <description># List the servers which belong to a region. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; region_id = 1 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) account_service = softlayer_client.service_named(&amp;#39;SoftLayer_Account&amp;#39;) filter = SoftLayer::ObjectFilter.new filter.set_criteria_for_key_path(&amp;#39;hardware.datacenter.groups.locationGroupTypeId&amp;#39;, operation: region_id) begin servers = account_service.object_filter(filter) .getHardware ap servers rescue StandardError =&amp;gt; e raise e end</description>
    </item>
    
    <item>
      <title>get_subnets.rb</title>
      <link>https://softlayer.github.io/ruby/get_subnets.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_subnets.rb/</guid>
      <description># Retrieve the subnets for a VLAN # # Retrieve all the subnets for a determinate VLAN # associated with a SoftLayer customer account # We do this with a call to the getSubnets() method in the # SoftLayer_Network_Vlan API service. See below for more details. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Subnet # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getSubnets # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username.</description>
    </item>
    
    <item>
      <title>get_tags.rb</title>
      <link>https://softlayer.github.io/ruby/get_tags.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_tags.rb/</guid>
      <description># Get all the tags in the account. # # The script gets all the tags in the account we make a simple # call the getTags() in the SoftLayer_Account API service # # Important manual pages # see http://sldn.softlayer.com/reference/services/SoftLayer_Account # see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getTags # # License &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key. USERNAME = &amp;#39;set me&amp;#39; APIKEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_template_group_monitoring.rb</title>
      <link>https://softlayer.github.io/ruby/get_template_group_monitoring.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_template_group_monitoring.rb/</guid>
      <description># Get the SoftLayer_Monitoring_Agent_Configuration_Template_Group # for use them in a Monitor package order # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Monitoring_Agent_Configuration_Template_Group # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The package id for Monitoring package package_id = 0 # Declare the API client to use the SoftLayer_Monitoring_Agent_Configuration_Template_Group API service client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>get_user_status.rb</title>
      <link>https://softlayer.github.io/ruby/get_user_status.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_user_status.rb/</guid>
      <description># # Get User status. # This script will list the status of sub-users similar to the view displayed at # https://control.softlayer.com/account/users # it calls to SoftLayer_User_Customer::getChildUsers # method to retrieve the user list. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) # Get current user begin current_user = client[&amp;#39;Account&amp;#39;].</description>
    </item>
    
    <item>
      <title>get_virtual_guest_billing_item.rb</title>
      <link>https://softlayer.github.io/ruby/get_virtual_guest_billing_item.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_virtual_guest_billing_item.rb/</guid>
      <description># Retrieve the billing items for the VSIs in the account. # # This script makes a single call to the getVirtualGuests() method in the # SoftLayer_Account API service and uses a object mask to get the # billing items and items for each VSIs in the account. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Item # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key.</description>
    </item>
    
    <item>
      <title>get_virtual_guests_of_dedicated_host.rb</title>
      <link>https://softlayer.github.io/ruby/get_virtual_guests_of_dedicated_host.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_virtual_guests_of_dedicated_host.rb/</guid>
      <description># List associated guest of dedicated host. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_DedicatedHost/getGuests # http://sldn.softlayer.com/reference/datatypes/SoftLayer_virtual_guest # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Id of dedicated host you want to get virtual guests dedicated_host_id = 9301 # Create a SoftLayer API client object client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) service = client[&amp;#39;SoftLayer_Virtual_DedicatedHost&amp;#39;] begin # getGuest() will get all the virtual guests of dedicated hosts.</description>
    </item>
    
    <item>
      <title>get_vlan.rb</title>
      <link>https://softlayer.github.io/ruby/get_vlan.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_vlan.rb/</guid>
      <description># Retrieve account VLAN and subnet information. # # Retrieve a list of all VLANs associated with a SoftLayer customer account # and print a simple report detailing these VLANs and the subnets assigned to # them. We do this with a call to the getNetworkVlans() method in the # SoftLayer_Account API service using an object mask to retrieve the VLANs&amp;#39; # associated subnets and primary router records. See below for more details.</description>
    </item>
    
    <item>
      <title>get_vlan_details.rb</title>
      <link>https://softlayer.github.io/ruby/get_vlan_details.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_vlan_details.rb/</guid>
      <description># Retrieves VLAN details such as primary router and subnet. # # Retrieves the primary router and subnet for a determinate VLAN # associated with a SoftLayer customer account # We do this with a call to the getObject() method in the # SoftLayer_Network_Vlan API service using an object mask to retrieve # associated subnets and primary router records. See below for more details. # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>get_vsi_looking_for_domain_and_host.rb</title>
      <link>https://softlayer.github.io/ruby/get_vsi_looking_for_domain_and_host.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_vsi_looking_for_domain_and_host.rb/</guid>
      <description># Get a VSI looking for Hostname and Domain # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Account # https://sldn.softlayer.com/reference/datatypes/SoftLayer_Account/getVirtualGuests # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The virtual machine data # Set this with the hostname of the machine you want hostname = &amp;#39;ProvisionApiTest&amp;#39; # Set this with the domain of the machine you want domain = &amp;#39;mydomain.</description>
    </item>
    
    <item>
      <title>get_vsis_in_a_region.rb</title>
      <link>https://softlayer.github.io/ruby/get_vsis_in_a_region.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_vsis_in_a_region.rb/</guid>
      <description># List the VSIs which belong to a region. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; region_id = 1 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) account_service = softlayer_client.service_named(&amp;#39;SoftLayer_Account&amp;#39;) filter = SoftLayer::ObjectFilter.new filter.set_criteria_for_key_path(&amp;#39;virtualGuests.datacenter.groups.locationGroupTypeId&amp;#39;, operation: region_id) begin vsis = account_service.object_filter(filter) .getVirtualGuests ap vsis rescue StandardError =&amp;gt; e raise e end</description>
    </item>
    
    <item>
      <title>is_pingable.rb</title>
      <link>https://softlayer.github.io/ruby/is_pingable.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/is_pingable.rb/</guid>
      <description># Issues a ping command and returns the success (true) or failure (false) of the ping command. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/isPingable # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin pingable = virtual_guest_service.object_with_id(virtual_guest_id) .isPingable ap pingable rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script.</description>
    </item>
    
    <item>
      <title>last_know_power_state.rb</title>
      <link>https://softlayer.github.io/ruby/last_know_power_state.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/last_know_power_state.rb/</guid>
      <description># Get the last know power state for a VSI. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getLastKnownPowerState # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY, timeout: 180) virtual_guest_service = client.service_named(&amp;#39;SoftLayer_Virtual_Guest&amp;#39;) virtual_guest_id = 614_303_8 begin result = virtual_guest_service.object_with_id(virtual_guest_id).getLastKnownPowerState pp result rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to get the last know power state: #{exception}&amp;#34; end</description>
    </item>
    
    <item>
      <title>list_agents.rb</title>
      <link>https://softlayer.github.io/ruby/list_agents.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_agents.rb/</guid>
      <description># List agents. # # The script retrieves all the agents in a brand account. # It displays the same result like in https://agent.softlayer.com/administration/user/list # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] object_mask = &amp;#39;mask[id, firstName, lastName, username, email, userStatus[name]]&amp;#39; begin result = account_service.</description>
    </item>
    
    <item>
      <title>list_bandwidth_pools.rb</title>
      <link>https://softlayer.github.io/ruby/list_bandwidth_pools.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_bandwidth_pools.rb/</guid>
      <description># List the bandwidth pools in the account. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getBandwidthAllotments # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Bandwidth_Version1_Allotment # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; pool_id = 115045 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) account_service = softlayer_client.service_named(&amp;#39;SoftLayer_Account&amp;#39;) mask = &amp;#39;mask[id, name, serviceProviderId, locationGroup[name], locationGroup,&amp;#39;\ &amp;#39; hardwareCount, privateNetworkOnlyHardwareCount, virtualGuestCount,&amp;#39;\ &amp;#39; bareMetalInstanceCount, applicationDeliveryControllerCount,&amp;#39;\ &amp;#39; totalBandwidthAllocated, outboundPublicBandwidthUsage,&amp;#39;\ &amp;#39; bandwidthAllotmentTypeId, projectedPublicBandwidthUsage]&amp;#39; filter = SoftLayer::ObjectFilter.</description>
    </item>
    
    <item>
      <title>list_dedicated_host.rb</title>
      <link>https://softlayer.github.io/ruby/list_dedicated_host.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_dedicated_host.rb/</guid>
      <description># List the dedicated hosts in the account. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getDedicatedHosts # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_DedicatedHost # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Create a SoftLayer API client object client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) service = client[&amp;#39;SoftLayer_Account&amp;#39;] begin # getDedicatedHosts() will get all the Virtual Dedicated Hosts in the account.</description>
    </item>
    
    <item>
      <title>list_event_logs.rb</title>
      <link>https://softlayer.github.io/ruby/list_event_logs.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_event_logs.rb/</guid>
      <description># List all event logs. # # This assumes the SoftLayer API Ruby client # &amp;lt;https://github.com/softlayer/softlayer-ruby&amp;gt; is installed. # # Important manual pages: # http://sldn.softlayer.com/article/ruby # http://sldn.softlayer.com/reference/services/SoftLayer_Event_Log # http://sldn.softlayer.com/reference/services/SoftLayer_Event_Log/getAllObjects # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Creating a SoftLayer API client object client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) event_log_service = client[&amp;#39;SoftLayer_Event_Log&amp;#39;] # Calling the getAllObjects method objects = event_log_service.</description>
    </item>
    
    <item>
      <title>list_images_templates.rb</title>
      <link>https://softlayer.github.io/ruby/list_images_templates.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_images_templates.rb/</guid>
      <description># List all the private image templates in the account # # The script calls the SoftLayer_Account::getPrivateBlockDeviceTemplateGroups method # to list the private templates in the account and uses an object mask # to display more related information of the images templates # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Account/ # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPrivateBlockDeviceTemplateGroups # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest_Block_Device_Template_Group # # License &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>list_instances.rb</title>
      <link>https://softlayer.github.io/ruby/list_instances.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_instances.rb/</guid>
      <description># List Virtual Guests. # It retrieves an account&amp;#39;s associated virtual guest objects. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; virtual_account = SoftLayer::Service.new(&amp;#39;SoftLayer_Account&amp;#39;, :username =&amp;gt; SL_API_USERNAME, :api_key =&amp;gt; SL_API_KEY) begin # Declare an object filter to retrieve valid virtual guests.</description>
    </item>
    
    <item>
      <title>list_invoices.rb</title>
      <link>https://softlayer.github.io/ruby/list_invoices.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_invoices.rb/</guid>
      <description># List invoices. # # The script retrieves all the invoices in a brand account. # It displays the same result like in https://agent.softlayer.com/administration/invoice/list # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getInvoices # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Invoice # http://sldn.softlayer.com/article/Object-Masks # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] object_mask = &amp;#39;mask[id, modifyDate, createDate, amount, payment, typeCode, statusCode, purchaseOrderNumber]&amp;#39; begin result = account_service.</description>
    </item>
    
    <item>
      <title>list_origin_mapping.rb</title>
      <link>https://softlayer.github.io/ruby/list_origin_mapping.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_origin_mapping.rb/</guid>
      <description># List all the origin pull mappings in the CDN. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getOriginPullMappingInformation # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdn_id = 303_93 # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) cdn_service = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] begin response = cdn_service.object_with_id(cdn_id).getOriginPullMappingInformation print response rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to list origin mappings.</description>
    </item>
    
    <item>
      <title>list_portal_storages.rb</title>
      <link>https://softlayer.github.io/ruby/list_portal_storages.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_portal_storages.rb/</guid>
      <description># List portal storages # # The script lists all portable storages, it makes a single call to the # SoftLayer_Account::getPortableStorageVolumes method. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPortableStorageVolumes # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client to use the SoftLayer_Account API service client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) account_service = client.</description>
    </item>
    
    <item>
      <title>list_roles.rb</title>
      <link>https://softlayer.github.io/ruby/list_roles.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_roles.rb/</guid>
      <description># List roles. # # The script retrieves all the roles in a brand account. # It displays the same result like in https://agent.softlayer.com/administration/role/list # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPermissionRoles # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Permission_Role # http://sldn.softlayer.com/article/Object-Masks # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] object_mask = &amp;#39;mask[userCount]&amp;#39; begin result = account_service.</description>
    </item>
    
    <item>
      <title>list_server.rb</title>
      <link>https://softlayer.github.io/ruby/list_server.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_server.rb/</guid>
      <description># List Bare Metal servers. # # The script lists all the bare metal server in your account, # it makes a single call to the SoftLayer_Account::getHardware method. # For more information please see below. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Account # https://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware # https://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware/getHardware # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Create a SoftLayer API client object client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>list_tags.rb</title>
      <link>https://softlayer.github.io/ruby/list_tags.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_tags.rb/</guid>
      <description># List the tags for a VSI # # The scripts list all the tags set in an arbitrary VSI, # it uses the SoftLayer_Virtual_Guest::getTagReferences method # to get the tags. For more information please see below # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getTagReferences # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer username and API key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The virtual guestId you wish to get the tags virtual_guest_id = 784_498_4 client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>list_tickets.rb</title>
      <link>https://softlayer.github.io/ruby/list_tickets.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_tickets.rb/</guid>
      <description># # List tickets. # # The script retrieves all the tickets in a brand account. # It displays the same result like in https://agent.softlayer.com/support/ticket/list # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event/getAllObjects # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Notification_Occurrence_Event # http://sldn.softlayer.com/article/Object-Filters # http://sldn.softlayer.com/article/Object-Masks # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; brandId = 4 client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>list_virtual_servers.rb</title>
      <link>https://softlayer.github.io/ruby/list_virtual_servers.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_virtual_servers.rb/</guid>
      <description># List all VSIs in your account. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Account # https://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Create a SoftLayer API client object client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] # We will retrieve the additional information for each VSI: # primaryIpAddress # primaryBackendIpAddress # datacenter # datacenterName # serviceProvider # hardwareFunctionDescription object_mask = &amp;#39;mask[primaryIpAddress,primaryBackendIpAddress,datacenter,datacenterName,serviceProvider,hardwareFunctionDescription]&amp;#39; account_service.</description>
    </item>
    
    <item>
      <title>migrate_vsi_to_another_dedicated_host.rb</title>
      <link>https://softlayer.github.io/ruby/migrate_vsi_to_another_dedicated_host.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/migrate_vsi_to_another_dedicated_host.rb/</guid>
      <description># Create a transaction to migrate an instance from one dedicated host to another dedicated host. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/migrateDedicatedHost # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsi_id_to_migrate = 37117661 dedicated_host_target = 10009 # Create a SoftLayer API client object client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin # Create the transaction to migrate the vsi to another dedicated host.</description>
    </item>
    
    <item>
      <title>order_dedicated_host.rb</title>
      <link>https://softlayer.github.io/ruby/order_dedicated_host.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_dedicated_host.rb/</guid>
      <description># Order Dedicated Hosts. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the location, packageId and quantity for the server you wish to order. # Take account that you can only order two dedicated host at same time.</description>
    </item>
    
    <item>
      <title>order_file_storage.rb</title>
      <link>https://softlayer.github.io/ruby/order_file_storage.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_file_storage.rb/</guid>
      <description># Order File Storage. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_PerformanceStorage_Nfs # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username. USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. API_KEY = &amp;#39;set me&amp;#39; quantity = 0 # The location where our File Storage will be provisioned. location = &amp;#39;AMSTERDAM&amp;#39; # The package to order file storage. package_id = 222 # The prices of the options we wish for our File Storage # it is required you set a storage and the IOPS.</description>
    </item>
    
    <item>
      <title>order_monitoring.rb</title>
      <link>https://softlayer.github.io/ruby/order_monitoring.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_monitoring.rb/</guid>
      <description># Order a Monitoring Package # # Build a SoftLayer_Container_Product_Order_Monitoring_Package object for a new # monitoring order and pass it to the SoftLayer_Product_Order API service to order it # In this care we&amp;#39;ll order a Basic (Hardware and OS) package with Basic Monitoring Package - Linux # configuration for more details see below # # Important manual pages: # https://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Monitoring_Package # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Monitoring_Agent_Configuration_Template_Group # # License: http://sldn.</description>
    </item>
    
    <item>
      <title>order_vsi_family.rb</title>
      <link>https://softlayer.github.io/ruby/order_vsi_family.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_vsi_family.rb/</guid>
      <description># Order a Virtual Guest - Compute flavor. # # This example shows how to order a Virtual Guest device which is part of new VSI Families. # On this case we will order Compute VSI with the following configuration: # 2 x 2.0 GHz Cores, 2 GB RAM, and primary disk of 25 GB (SAN). # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # http://sldn.</description>
    </item>
    
    <item>
      <title>order_vsi_on_dedicated_host.rb</title>
      <link>https://softlayer.github.io/ruby/order_vsi_on_dedicated_host.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_vsi_on_dedicated_host.rb/</guid>
      <description># Order Virtual Guest on Dedicated Host. # # This script shows how to order a vsi on an customer&amp;#39;s dedicated host. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Package/getItemPrices # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declare the hostId, packageId and quantity for the virtual guest you wish to order.</description>
    </item>
    
    <item>
      <title>order_vsi_simplified_form.rb</title>
      <link>https://softlayer.github.io/ruby/order_vsi_simplified_form.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_vsi_simplified_form.rb/</guid>
      <description># Order a virtual server in a dedicated host. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/generateOrderTemplate # http://developer.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getCreateObjectOptions # #License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Build the skeleton of SoftLayer_Container_Product_Order object # containing the order you wish to place. template_order = { :hostname =&amp;gt; &amp;#39;vsi-dedicated&amp;#39;, :domain =&amp;gt; &amp;#39;softlayer.</description>
    </item>
    
    <item>
      <title>order_vyatta.rb</title>
      <link>https://softlayer.github.io/ruby/order_vyatta.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_vyatta.rb/</guid>
      <description># Order a Network Gateway Appliance (Vyatta) # # The example orders a (Vyatta) high availability pair, it makes # a single call to the SoftLayer_Product_Order::placeOrder method # # Important manual pages # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server_Gateway_Appliance # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Create a SoftLayer API client object client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>place_order_cdn.rb</title>
      <link>https://softlayer.github.io/ruby/place_order_cdn.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/place_order_cdn.rb/</guid>
      <description># Order a new CDN account # # Build a SoftLayer_Container_Product_Order_Network_ContentDelivery_Account # object for a new CDN account order and pass it to the SoftLayer_Product_Order # API service to order it. In this script we&amp;#39;ll order a pay as you go bandwidth # and storage CDN account. See below for more details. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_ContentDelivery_Account # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_ContentDelivery_Account # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Order/placeOrder # # License: http://sldn.</description>
    </item>
    
    <item>
      <title>place_order_dedicated_firewall.rb</title>
      <link>https://softlayer.github.io/ruby/place_order_dedicated_firewall.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/place_order_dedicated_firewall.rb/</guid>
      <description># Order dedicated FireWalls # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_Container_Product_Order_Network_Protection_Firewall_Dedicated object # containing the order you wish to place. order_data = { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Container_Product_Order_Network_Protection_Firewall&amp;#39;, &amp;#39;virtualGuests&amp;#39; =&amp;gt; [ { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Virtual_Guest&amp;#39;, &amp;#39;id&amp;#39; =&amp;gt; 667_410_0 # The virtual Guest ID where you wish add a fireWall.</description>
    </item>
    
    <item>
      <title>place_order_evault.rb</title>
      <link>https://softlayer.github.io/ruby/place_order_evault.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/place_order_evault.rb/</guid>
      <description># Example to order an Evault. # # The script orders an Evault device, it makes a call to the # SoftLayer_Product_Order::placeOrder method. # For more information see below. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Backup_Evault_Vault # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. # Generate an API key at the SoftLayer Customer Portal: # https://manage.</description>
    </item>
    
    <item>
      <title>place_order_nas.rb</title>
      <link>https://softlayer.github.io/ruby/place_order_nas.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/place_order_nas.rb/</guid>
      <description># Order a NAS # # Build a SoftLayer_Container_Product_Order_Network_Storage_Nas # object for a new CDN account order and pass it to the SoftLayer_Product_Order # API service to order it. In this script we&amp;#39;ll order a NAS. See below for more details. # # Important manual pages: # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Storage_Nas # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Building a skeleton SoftLayer_Container_Product_Order_Network_Storage_Nas object # containing the order you wish to place.</description>
    </item>
    
    <item>
      <title>place_order_portable_storage.rb</title>
      <link>https://softlayer.github.io/ruby/place_order_portable_storage.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/place_order_portable_storage.rb/</guid>
      <description># Order a portal storage # # The script orders a portable storage, it makes a single call to the # SoftLayer_Product_Order::placeOrder method. # # Important manual pages # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Disk_Image # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Building an skeleton SoftLayer_Container_Product_Order_Virtual_Disk_Image to the order order_template = { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Container_Product_Order_Virtual_Disk_Image&amp;#39;, &amp;#39;location&amp;#39; =&amp;gt; &amp;#39;SANJOSE&amp;#39;, # The package for order portable storage &amp;#39;packageId&amp;#39; =&amp;gt; 198, &amp;#39;diskDescription&amp;#39; =&amp;gt; &amp;#39;test portable storage&amp;#39;, &amp;#39;prices&amp;#39; =&amp;gt; [ { # The prices for the portable storage # to see the list of prices available for the package # use the Softlayer_Product_Package::getItems method (http://sldn.</description>
    </item>
    
    <item>
      <title>place_order_vlan.rb</title>
      <link>https://softlayer.github.io/ruby/place_order_vlan.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/place_order_vlan.rb/</guid>
      <description># Example to create a new VLAN # the script uses the placeOrder method to order # a new VLAN with 32 static IP address # # Important manual page # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Build a skeleton SoftLayer_Container_Product_Order_Network_Vlan object # to model the order for the new VLAN order_data = { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#39;SoftLayer_Container_Product_Order_Network_Vlan&amp;#39;, &amp;#39;location&amp;#39; =&amp;gt; &amp;#39;AMSTERDAM&amp;#39;, &amp;#39;packageId&amp;#39; =&amp;gt; 0, # Build a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    
    <item>
      <title>place_quote_order.rb</title>
      <link>https://softlayer.github.io/ruby/place_quote_order.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/place_quote_order.rb/</guid>
      <description># # Order from account&amp;#39;s quote. # This script creates an order from a account&amp;#39;s quote presented # in the SoftLayer Customer Portal&amp;#39;s (https://control.softlayer.com/account/quotes) # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getQuotes # http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order_Quote/getRecalculatedOrderContainer # http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order_Quote/placeOrder # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Set API user name SL_API_USERNAME = &amp;#39;set me&amp;#39; # Set API key SL_API_KEY = &amp;#39;set me&amp;#39; # Create a client instance client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>power_off_guest.rb</title>
      <link>https://softlayer.github.io/ruby/power_off_guest.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/power_off_guest.rb/</guid>
      <description># Power off a VSI. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/powerOffSoft # https://sldn.softlayer.com/reference/services/SoftLayer_Account # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY, timeout: 180) # The VSI data hostname = &amp;#39;test&amp;#39; # Set this with the hostname of the machine you want domain = &amp;#39;softlayer.local&amp;#39; # Set this with the domain of the machine you want account_service = client.</description>
    </item>
    
    <item>
      <title>power_off_soft.rb</title>
      <link>https://softlayer.github.io/ruby/power_off_soft.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/power_off_soft.rb/</guid>
      <description># Power off a VSI. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/powerOffSoft # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY, timeout: 180) virtual_guest_service = client.service_named(&amp;#39;SoftLayer_Virtual_Guest&amp;#39;) virtual_guest_id = 614_303_8 begin result = virtual_guest_service.object_with_id(virtual_guest_id).powerOffSoft pp result rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to power off the VSI: #{exception}&amp;#34; end</description>
    </item>
    
    <item>
      <title>power_state.rb</title>
      <link>https://softlayer.github.io/ruby/power_state.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/power_state.rb/</guid>
      <description># Get the power state for a VSI. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getPowerState # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; timeout = 180 client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY, timeout: timeout) virtual_guest_service = client.service_named(&amp;#39;SoftLayer_Virtual_Guest&amp;#39;) virtual_guest_id = 614_303_8 begin result = virtual_guest_service.object_with_id(virtual_guest_id).getPowerState pp result rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to get the power state: #{exception}&amp;#34; end</description>
    </item>
    
    <item>
      <title>reboot.rb</title>
      <link>https://softlayer.github.io/ruby/reboot.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reboot.rb/</guid>
      <description># Reboot Virtual Guest. # Power cycle a virtual guest. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/rebootDefault # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the server id. server_id = 11498369 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Create a new SoftLayer client softlayer_client = SoftLayer::Client.new(:username =&amp;gt; SL_API_USERNAME, :api_key =&amp;gt; SL_API_KEY) virtual_guest_service = softlayer_client[&amp;#39;Virtual_Guest&amp;#39;] begin # Call the rebootDefault method from SoftLayer_Virtual_Guest.</description>
    </item>
    
    <item>
      <title>reload_current_operating_system_configuration.rb</title>
      <link>https://softlayer.github.io/ruby/reload_current_operating_system_configuration.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reload_current_operating_system_configuration.rb/</guid>
      <description># Create a transaction to perform an OS reload # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/reloadCurrentOperatingSystemConfiguration # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Provisioning_Version1_Transaction # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; virtual_guest_id = 6032256 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] begin provisioning_version1_transaction = virtual_guest_service.object_with_id(virtual_guest_id) .reloadCurrentOperatingSystemConfiguration ap provisioning_version1_transaction rescue StandardError =&amp;gt; e p &amp;#39;Error when executing the script.</description>
    </item>
    
    <item>
      <title>reload_current_os.rb</title>
      <link>https://softlayer.github.io/ruby/reload_current_os.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reload_current_os.rb/</guid>
      <description># Reload Current Operating System Configuration. # It performs an OS reload and creates a transaction to it. # * # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/reloadCurrentOperatingSystemConfiguration # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the server id. server_id = 11498369 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Create a new SoftLayer client softlayer_client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>reload_operating_system.rb</title>
      <link>https://softlayer.github.io/ruby/reload_operating_system.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reload_operating_system.rb/</guid>
      <description># Reloads current operating system configuration. # # This service has a confirmation protocol for proceeding with the reload. To proceed with the reload # without confirmation, simply pass in &amp;#39;FORCE&amp;#39; as the token parameter. To proceed with the reload with confirmation, # simply call the service with no parameter. A token string will be returned by this service. # The token will remain active for 10 minutes. Use this token as the parameter # to confirm that a reload is to be performed for the server.</description>
    </item>
    
    <item>
      <title>reload_os.rb</title>
      <link>https://softlayer.github.io/ruby/reload_os.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reload_os.rb/</guid>
      <description># Reload servers from a list of IPs # # This script looks for a server with a determinate IP address and reloads # the Operative System with another one. # It makes a single call to the reloadOperatingSystem() method in the # SoftLayer_Hardware_Server API service # # Important manual pages # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/reloadOperatingSystem # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>remove_devices_from_pool.rb</title>
      <link>https://softlayer.github.io/ruby/remove_devices_from_pool.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/remove_devices_from_pool.rb/</guid>
      <description># Remove servers and VSIs from a bandwidth pool. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/requestVdrContentUpdates # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; list_server_ips = [&amp;#39;184.172.45.210&amp;#39;, &amp;#39;108.168.251.167&amp;#39;] list_vsi_ips = [&amp;#39;169.54.234.102&amp;#39;] pool_id = 234419 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) hardware_service = softlayer_client.</description>
    </item>
    
    <item>
      <title>reset_portal_user_password.rb</title>
      <link>https://softlayer.github.io/ruby/reset_portal_user_password.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reset_portal_user_password.rb/</guid>
      <description># # Reset portal user password. # This script resets the password of a portal user by SoftLayer_User_Customer::updatePassword method # need to define the new password and pass it to updatePassword() method. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/updatePassword # @License: http://sldn.softlayer.com/article/License # @Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # # Your SoftLayer API username and key. # Generate an API key at the SoftLayer Customer Portal # SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; # Set the user id to reset the portal user password, use the # SoftLayer_Account::getUsers method to get a list of users available in the account.</description>
    </item>
    
    <item>
      <title>retrieve_metadata.rb</title>
      <link>https://softlayer.github.io/ruby/retrieve_metadata.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/retrieve_metadata.rb/</guid>
      <description># Retrieves the user data for the VSIs in the account. # # The script gets the user metadata for a VSI in the account we make a simple # call the getVirtualGuests() in the SoftLayer_Virtual_Guest API service # and we set an object mask to get the information about the user data. # # Important manual pages # see http://sldn.softlayer.com/reference/services/SoftLayer_Account # see http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests # # License &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc.</description>
    </item>
    
    <item>
      <title>route_vlans.rb</title>
      <link>https://softlayer.github.io/ruby/route_vlans.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/route_vlans.rb/</guid>
      <description># Route the vlans in a gateway device. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/getInsideVlans # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Gateway/unbypassVlans # http://sldn.softlayer.com/article/Object-Filters # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; gateway_id = 615_22 vlan_ids_to_route = [108_432_5, 865_555] client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) gateway_service = client.service_named(&amp;#39;SoftLayer_Network_Gateway&amp;#39;) object_filter = SoftLayer::ObjectFilter.new object_filter.set_criteria_for_key_path(&amp;#39;insideVlans.networkVlanId&amp;#39;, &amp;#39;operation&amp;#39; =&amp;gt; &amp;#39;in&amp;#39;, &amp;#39;options&amp;#39; =&amp;gt; [{ &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;data&amp;#39;, &amp;#39;value&amp;#39; =&amp;gt; vlan_ids_to_route }]) begin gateway_vlans = gateway_service.</description>
    </item>
    
    <item>
      <title>search_tag.rb</title>
      <link>https://softlayer.github.io/ruby/search_tag.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/search_tag.rb/</guid>
      <description># Search VSI by tag # # The script retrieves all the VSIs which contain an # arbitrary list of tags # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer username and API key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # list of tags to look for tags = %w(tag1 tag2) client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>set_metadata_service_order.rb</title>
      <link>https://softlayer.github.io/ruby/set_metadata_service_order.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/set_metadata_service_order.rb/</guid>
      <description># Create VSI with metadata. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(endpoint_url: ENDPOINT, username: USERNAME, api_key: API_KEY) server_order = SoftLayer::VirtualServerOrder.new(client) server_order.hostname = &amp;#39;server1&amp;#39; server_order.domain = &amp;#39;ruby-api-test.org&amp;#39; server_order.datacenter = &amp;#39;dal06&amp;#39; server_order.cores = 2 server_order.memory = 2 server_order.os_reference_code = &amp;#39;CENTOS_6_64&amp;#39; server_order.max_port_speed = SoftLayer::VirtualServerOrder.</description>
    </item>
    
    <item>
      <title>set_tags.rb</title>
      <link>https://softlayer.github.io/ruby/set_tags.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/set_tags.rb/</guid>
      <description># Set tags for a VSI # # The script sets the tags for an arbitrary VSI, # it makes a single call to the SoftLayer_Virtual_Guest::setTags method # For more information please see below. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/setTags # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer username and API key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The virtual guestId you wish to set the tags id_virtual_guest = 784_498_4 # The tags you wish to set in the VSI tags = &amp;#39;mytag1, mytag2 ,mytag3, mytag4&amp;#39; client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>set_user_data_vsi.rb</title>
      <link>https://softlayer.github.io/ruby/set_user_data_vsi.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/set_user_data_vsi.rb/</guid>
      <description># Create VSI with metadata. # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ENDPOINT = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(endpoint_url: ENDPOINT, username: USERNAME, api_key: API_KEY) virtual_guest_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] template = { &amp;#39;hostname&amp;#39; =&amp;gt; &amp;#39;host1&amp;#39;, &amp;#39;domain&amp;#39; =&amp;gt; &amp;#39;example.com&amp;#39;, &amp;#39;startCpus&amp;#39; =&amp;gt; 1, &amp;#39;maxMemory&amp;#39; =&amp;gt; 1024, &amp;#39;hourlyBillingFlag&amp;#39; =&amp;gt; true, &amp;#39;localDiskFlag&amp;#39; =&amp;gt; true, &amp;#39;operatingSystemReferenceCode&amp;#39; =&amp;gt; &amp;#39;CENTOS_6_64&amp;#39;, &amp;#39;userData&amp;#39; =&amp;gt; [ { &amp;#39;value&amp;#39; =&amp;gt; &amp;#39;someValue&amp;#39; } ], &amp;#39;datacenter&amp;#39; =&amp;gt; { &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;dal06&amp;#39; } } begin result = virtual_guest_service.</description>
    </item>
    
    <item>
      <title>set_user_metadata.rb</title>
      <link>https://softlayer.github.io/ruby/set_user_metadata.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/set_user_metadata.rb/</guid>
      <description># Set the user data for a VSI. # # The script sets the user metadata for a VSI we make a simple # call the setUserMetadata() in the SoftLayer_Virtual_Guest API service # # Important manual pages: # see http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # see http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/setUserMetadata # # License &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; APIKEY = &amp;#39;set me&amp;#39; # The user data you wish to set user_data = [&amp;#39;this is my user data&amp;#39;] # The id of the VSI where you want to set the user data virtual_guest_id = 737_050_2 # Declare the API client client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>share_image_template.rb</title>
      <link>https://softlayer.github.io/ruby/share_image_template.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/share_image_template.rb/</guid>
      <description># Share an image template to another Softlayer account # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/permitSharingAccess # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group # # License &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) block_device_template_group_service = client.service_named(&amp;#39;SoftLayer_Virtual_Guest_Block_Device_Template_Group&amp;#39;) # The image template which you wish to share # To get the list of images templates in your account call the Softlayer_Account::getPrivateBlockDeviceTemplateGroups method image_template_id = 315_894 # The account you wish to share the image template account_to_share = 207_819 begin # Calling the permitSharingAccess method to share the image template result = block_device_template_group_service.</description>
    </item>
    
    <item>
      <title>shutdown_port_disactive_port.rb</title>
      <link>https://softlayer.github.io/ruby/shutdown_port_disactive_port.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/shutdown_port_disactive_port.rb/</guid>
      <description># Sets the networks speed for a hardware devices # # This script makes a single call to the setPublicNetworkInterfaceSpeed() method # to change the speed to public network or call the setPrivateNetworkInterfaceSpeed method # to change the speed to private network. # # Important manual pages # http:&amp;#39;sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/setPublicNetworkInterfaceSpeed # http:&amp;#39;sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/setPrivateNetworkInterfaceSpeed # # License: http:&amp;#39;sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API username and key.</description>
    </item>
    
    <item>
      <title>shutdown_private_port.rb</title>
      <link>https://softlayer.github.io/ruby/shutdown_private_port.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/shutdown_private_port.rb/</guid>
      <description># Shutdown Public Port. # It shuts down the private network port. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/shutdownPrivatePort # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the server id. server_id = 11498369 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Create a new SoftLayer client softlayer_client = SoftLayer::Client.new(:username =&amp;gt; SL_API_USERNAME, :api_key =&amp;gt; SL_API_KEY) virtual_guest_service = softlayer_client[&amp;#39;Virtual_Guest&amp;#39;] begin # Call the shutdownPrivatePort method from SoftLayer_Virtual_Guest.</description>
    </item>
    
    <item>
      <title>shutdown_public_port.rb</title>
      <link>https://softlayer.github.io/ruby/shutdown_public_port.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/shutdown_public_port.rb/</guid>
      <description># Shutdown Public Port. # It shuts down the public network port. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/shutdownPublicPort # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; # Set the server id. server_id = 11498369 # Your SoftLayer API username. SL_API_USERNAME = &amp;#39;set me&amp;#39; # Your SoftLayer API key. SL_API_KEY = &amp;#39;set me&amp;#39; # Create a SoftLayer client softlayer_client = SoftLayer::Client.new(:username =&amp;gt; SL_API_USERNAME, :api_key =&amp;gt; SL_API_KEY) virtual_guest_service = softlayer_client[&amp;#39;Virtual_Guest&amp;#39;] begin # Call the shutdownPublicPort method from SoftLayer_Virtual_Guest.</description>
    </item>
    
    <item>
      <title>switch_port_stats.rb</title>
      <link>https://softlayer.github.io/ruby/switch_port_stats.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/switch_port_stats.rb/</guid>
      <description># Retrieve a list of switch port statistics for a server&amp;#39;s network interfaces. # # This script makes a single call to the getPortStatistics() method in the # SoftLayer_Network_Component API service # (http://sldn.softlayer.com/reference/services/SoftLayer_NetworkComponent/getPortStatistics) # for each of a server&amp;#39;s network components to query port statistics for that # interface from SoftLayer&amp;#39;s switches. Port statistics are modeled by the # SoftLayer__Container_Network_Port_Statistic data type # (http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_Port_Statistic). # See below for more details. # # Important manual pages: # http://sldn.</description>
    </item>
    
    <item>
      <title>unshare_image_template.rb</title>
      <link>https://softlayer.github.io/ruby/unshare_image_template.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/unshare_image_template.rb/</guid>
      <description># Example to stop sharing an image template # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group/denySharingAccess # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest_Block_Device_Template_Group # # License &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) block_device_template_group_service = client.service_named(&amp;#39;SoftLayer_Virtual_Guest_Block_Device_Template_Group&amp;#39;) # The image template which you wish to stop sharing # To get the list of images templates in your account call the Softlayer_Account::SoftLayer_Virtual_Guest_Block_Device_Template_Group method image_template_id = 315_894 # The account you wish to stop sharing the image template account_to_share = 207_819 begin result = block_device_template_group_service.</description>
    </item>
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/ruby/vsiSecGroups/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/vsiSecGroups/</guid>
      <description>To get a list of Security Groups you can attach to a Virtual Guest you can run the following code:
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getGroups = client[&amp;#39;Network_SecurityGroup&amp;#39;].getAllObjects pp getGroups Once you have the Security Group IDs you would like to use you can plug them in to the following example:
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) productOrder = { &amp;#39;hostname&amp;#39; =&amp;gt; &amp;#39;rubysectest&amp;#39;, &amp;#39;domain&amp;#39; =&amp;gt; &amp;#39;cde.</description>
    </item>
    
    <item>
      <title>Ordering Raid</title>
      <link>https://softlayer.github.io/ruby/orderingRaid/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderingRaid/</guid>
      <description>As a SoftLayer user, you have probably seen the beautiful RAID Configurator that greets you when you order a server on the SoftLayer website.
It allows you to do anything you like, from a straight RAID configuration involving all drives in a single disk array, to a much more intricate configuration with nearly any mix of disks and RAID types.
However beautiful and practical the interface, sometimes you want to script this process, and the SoftLayer mantra of &amp;ldquo;Anything you can do in the Web interface, you can do on the API&amp;rdquo; also rings true in this case.</description>
    </item>
    
    <item>
      <title>Add and remove rules in a Security group</title>
      <link>https://softlayer.github.io/ruby/addRemoveSecurityGroupRules/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/addRemoveSecurityGroupRules/</guid>
      <description>Adding Rules =begin @author Ryan Tiffany =end require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) secGroupId = 84301 # Create an object template to create the item. objectTemplate = { &amp;#39;direction&amp;#39; =&amp;gt; &amp;#39;ingress&amp;#39;, &amp;#39;protocol&amp;#39; =&amp;gt; &amp;#39;tcp&amp;#39;, &amp;#39;portRangeMin&amp;#39; =&amp;gt; 22, &amp;#39;portRangeMax&amp;#39; =&amp;gt; 22, &amp;#39;ethertype&amp;#39; =&amp;gt; &amp;#39;IPv4&amp;#39;, &amp;#39;remoteIp&amp;#39; =&amp;gt; &amp;#39;0.0.0.0/0&amp;#39; } newRules = client[&amp;#39;SoftLayer_Network_SecurityGroup&amp;#39;].object_with_id(secGroupId).addRules([objectTemplate]) pp newRules Removing rules =begin @author Ryan Tiffany =end require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) secGroupId = 45101 # Create an object template to create the item.</description>
    </item>
    
    <item>
      <title>Create a Security group</title>
      <link>https://softlayer.github.io/ruby/createSecurityGroup/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createSecurityGroup/</guid>
      <description>=begin @author Ryan Tiffany =end require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) objectTemplate = { &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;rubyExampleCreation&amp;#39;, &amp;#39;description&amp;#39; =&amp;gt; &amp;#39;Sec Group created via ruby&amp;#39; } createGroup = client[&amp;#39;SoftLayer_Network_SecurityGroup&amp;#39;].createObjects([objectTemplate]) pp createGroup</description>
    </item>
    
    <item>
      <title>Get Dedicated Host Allocation</title>
      <link>https://softlayer.github.io/ruby/getDedicatedHostAllocation/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getDedicatedHostAllocation/</guid>
      <description>The first thing you need to get is a list of the Dedicated Hosts on your account. To list the Dedicated Hosts on your account you can use the following code:
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Connect to SoftLayer client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getDediHosts = client[&amp;#39;SoftLayer_Account&amp;#39;].getDedicatedHosts pp getDediHosts Once you have the Dedicated Host ID you can use the following code to retrieve the resource allocations on the host.</description>
    </item>
    
    <item>
      <title>Get Dedicated Host Guests</title>
      <link>https://softlayer.github.io/ruby/getDedicatedHostGuests/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getDedicatedHostGuests/</guid>
      <description>The first thing you need to get is a list of the Dedicated Hosts on your account. To list the Dedicated Hosts on your account you can use the following code:
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Connect to SoftLayer client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getDediHosts = client[&amp;#39;SoftLayer_Account&amp;#39;].getDedicatedHosts pp getDediHosts Once you have the Dedicated Host ID you can use the following code to retrieve the Virtual Guests on the host.</description>
    </item>
    
    <item>
      <title>Get Security Group Details</title>
      <link>https://softlayer.github.io/ruby/getSecurityGroupDetails/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getSecurityGroupDetails/</guid>
      <description>=begin @author Ryan Tiffany =end require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) secGroupId = 70501 getAll = client[&amp;#39;SoftLayer_Network_SecurityGroup&amp;#39;].object_with_id(secGroupId).getAllObjects pp getAll</description>
    </item>
    
    <item>
      <title>Migrate a VSI between dedicated hosts</title>
      <link>https://softlayer.github.io/ruby/migrateDedicatedInstance/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/migrateDedicatedInstance/</guid>
      <description>The first thing you need to get is a list of the Dedicated Hosts on your account. To list the Dedicated Hosts on your account you can use the following code:
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Connect to SoftLayer client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getDediHosts = client[&amp;#39;SoftLayer_Account&amp;#39;].getDedicatedHosts pp getDediHosts Once you have the Dedicated Host ID you can use the following code to migrate the Virtual Guest to another host. This script will kick of an immediate migration of the Virtual Guest.</description>
    </item>
    
    <item>
      <title>Get Virtual Console Virtual Guest</title>
      <link>https://softlayer.github.io/ruby/getKvmDetails/</link>
      <pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getKvmDetails/</guid>
      <description>=begin @author Ryan Tiffany =end require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) virtual_server_id = 31678643 mask = &amp;#39;mask[consoleIpAddressRecord[ipAddress[ipAddress],port],operatingSystem[passwords]]&amp;#39; getDetails = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].object_mask(mask).object_with_id(virtual_server_id).getObject pp getDetails</description>
    </item>
    
    <item>
      <title>Show storage on all Virtual Guests</title>
      <link>https://softlayer.github.io/ruby/listVsiBlockDeviceSizes/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/listVsiBlockDeviceSizes/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Create a SoftLayer API client object client = SoftLayer::Client.new() account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] # We will retrieve the additional information for each VSI: mask = &amp;#39;mask[id,hostname,blockDevices[id,mountType,diskImage[capacity]]]&amp;#39; begin # getVirtualGuests() will get all the VSIs that an account has. result = account_service.object_mask(mask).getVirtualGuests pp result rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to get the VSIs: #{exception}&amp;#34; end</description>
    </item>
    
    <item>
      <title>Get Notifications</title>
      <link>https://softlayer.github.io/ruby/getNotifications/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getNotifications/</guid>
      <description>Retrieves all notifications that were created on January 1, 2016.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) theDate = &amp;#39;01/01/2017 01:00:00&amp;#39; theFilter = { &amp;#39;startDate&amp;#39;=&amp;gt; { &amp;#39;operation&amp;#39;=&amp;gt; &amp;#39;greaterThanDate&amp;#39;, &amp;#39;options&amp;#39;=&amp;gt; [ {&amp;#39;name&amp;#39;=&amp;gt; &amp;#39;date&amp;#39;, &amp;#39;value&amp;#39; =&amp;gt; [theDate]} ] } } getresults = client[&amp;#39;SoftLayer_Notification_Occurrence_Event&amp;#39;].getAllObjects(filter=theFilter) pp getresults</description>
    </item>
    
    <item>
      <title>Reload with SSH keys</title>
      <link>https://softlayer.github.io/ruby/reloadWithSshhardware/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reloadWithSshhardware/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) imageId = 1234567 sshKey1 = 876543 sshKey2 = 456789 serverId = 1154265 config = { &amp;#39;imageTemplateId&amp;#39;=&amp;gt; imageId, &amp;#39;sshKeyIds&amp;#39; =&amp;gt; [sshKey1, sshKey2] } setclient = client[&amp;#39;Hardware_Server&amp;#39;] reload = setclient.object_with_id(serverId).reloadOperatingSystem(&amp;#39;FORCE&amp;#39;, config) pp reload	</description>
    </item>
    
    <item>
      <title>Order a Netscaler</title>
      <link>https://softlayer.github.io/ruby/orderNetscaler/</link>
      <pubDate>Fri, 31 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderNetscaler/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) config = { &amp;#39;orderContainers&amp;#39; =&amp;gt; [ {&amp;#34;hardware&amp;#34; =&amp;gt; [{ &amp;#34;primaryBackendNetworkComponent&amp;#34; =&amp;gt; { # REPLACE THIS &amp;#34;networkVlanId&amp;#34; =&amp;gt; 1211234 }, &amp;#34;primaryNetworkComponent&amp;#34; =&amp;gt; { # REPLACE THIS &amp;#34;networkVlanId&amp;#34; =&amp;gt; 1212456 } }], # REPLACE THIS with your location &amp;#34;location&amp;#34; =&amp;gt; &amp;#34;DALLAS09&amp;#34;, &amp;#34;packageId&amp;#34; =&amp;gt; 192, &amp;#34;quantity&amp;#34; =&amp;gt; 1, # Price IDS for Netscaler and 2 IPs &amp;#34;prices&amp;#34; =&amp;gt; [ {&amp;#34;id&amp;#34; =&amp;gt; 44964}, {&amp;#34;id&amp;#34; =&amp;gt; 17238} ] }] } order = client[&amp;#39;Product_Order&amp;#39;].</description>
    </item>
    
    <item>
      <title>Reloading a server with a custom partition scheme</title>
      <link>https://softlayer.github.io/ruby/reloadCustomPartition/</link>
      <pubDate>Fri, 31 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reloadCustomPartition/</guid>
      <description>The following code allows you to reload a Bare Metal server with a custom partitioning scheme. You simply need to change the serverId and the partitions to suit your needs. Note that one partition must be marked as the &amp;lsquo;grow&amp;rsquo; partition.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) server_id = 1154505 config = { &amp;#39;upgradeHardDriveFirmware&amp;#39; =&amp;gt; 0, &amp;#39;upgradeBios&amp;#39; =&amp;gt; 0, &amp;#39;hardDrives&amp;#39; =&amp;gt; [ { &amp;#39;complexType&amp;#39; =&amp;gt; &amp;#34;SoftLayer_Hardware_Component_HardDrive&amp;#34;, &amp;#39;partitions&amp;#39; =&amp;gt; [ { &amp;#39;name&amp;#39; =&amp;gt; { &amp;#34;/&amp;#34; =&amp;gt; { &amp;#34;minimumSize&amp;#34; =&amp;gt; &amp;#34;100&amp;#34;} } }, { &amp;#39;name&amp;#39; =&amp;gt; { &amp;#34;/boot&amp;#34; =&amp;gt; { &amp;#34;minimumSize&amp;#34; =&amp;gt; &amp;#34;.</description>
    </item>
    
    <item>
      <title>Get verbose details about a Bare Metal Server</title>
      <link>https://softlayer.github.io/ruby/getVerboseBmDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getVerboseBmDetails/</guid>
      <description>This script will get the Packages, Categories, and items associated with a Bare Metal Server.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) hardware_id = 26961063 object_mask = &amp;#39;mask[id,fullyQualifiedDomainName,billingItem[id,item[id,description],category[name,id],children[id,item[id,description],category[name,id]]]]&amp;#39; getDetails = client[&amp;#39;SoftLayer_Hardware&amp;#39;].object_mask(object_mask).object_with_id(hardware_id).getObject pp getDetails</description>
    </item>
    
    <item>
      <title>Get verbose details about a Virtual Guest</title>
      <link>https://softlayer.github.io/ruby/getVerboseVsiDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getVerboseVsiDetails/</guid>
      <description>This script will get the Packages, Categories, and items associated with a Virtual Guest.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) virtual_server_id = 26961063 object_mask = &amp;#39;mask[id,fullyQualifiedDomainName,billingItem[id,item[id,description],category[name,id],children[id,item[id,description],category[name,id]]]]&amp;#39; getDetails = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].object_mask(object_mask).object_with_id(virtual_server_id).getObject pp getDetails</description>
    </item>
    
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://softlayer.github.io/ruby/migrateVsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/migrateVsi/</guid>
      <description>You can use the following ruby example to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; softlayer_client = SoftLayer::Client.new(:timeout =&amp;gt; 120) client = softlayer_client.service_named(&amp;#39;Product_Order&amp;#39;) # The package for Virtual Guests packageId = 46 # The price item id for a 25GB Local Primary Drive.</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>https://softlayer.github.io/ruby/createVSI/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createVSI/</guid>
      <description>When you are ready to place the order change verifyOrder(productOrder) to placeOrder(productOrder).
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) productOrder = { &amp;#39;virtualGuests&amp;#39; =&amp;gt; [{ &amp;#39;hostname&amp;#39; =&amp;gt; &amp;#39;testRuby&amp;#39;, &amp;#39;domain&amp;#39; =&amp;gt; &amp;#39;example.com&amp;#39;, &amp;#39;primaryBackendNetworkComponent&amp;#39; =&amp;gt; { &amp;#39;networkVlan&amp;#39; =&amp;gt; { &amp;#39;id&amp;#39; =&amp;gt; 1286783 } } }], &amp;#39;location&amp;#39; =&amp;gt; 1441195, &amp;#39;packageId&amp;#39; =&amp;gt; 46, &amp;#39;operatingSystemReferenceCode&amp;#39; =&amp;gt; &amp;#39;CENTOS_6_64&amp;#39;, &amp;#39;useHourlyPricing&amp;#39; =&amp;gt; false, &amp;#39;prices&amp;#39; =&amp;gt; [ {&amp;#39;id&amp;#39; =&amp;gt; 1640 }, # 1 x 2.0 GHz Core {&amp;#39;id&amp;#39; =&amp;gt; 1644 }, # 1 GB RAM {&amp;#39;id&amp;#39; =&amp;gt; 13945 }, # CENTOS_6_64 {&amp;#39;id&amp;#39; =&amp;gt; 1639 }, # 100 GB (SAN) First Disk {&amp;#39;id&amp;#39; =&amp;gt; 2277 }, # 100 GB (SAN) Second Disk {&amp;#39;id&amp;#39; =&amp;gt; 50367 }, # 250 GB Bandwidth {&amp;#39;id&amp;#39; =&amp;gt; 274 }, # 1 Gbps Public &amp;amp; Private Network Uplinks {&amp;#39;id&amp;#39; =&amp;gt; 21 }, # 1 IP Address {&amp;#39;id&amp;#39; =&amp;gt; 420 }, # Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account {&amp;#39;id&amp;#39; =&amp;gt; 56 }, # Host Ping and TCP Service Monitoring {&amp;#39;id&amp;#39; =&amp;gt; 57 }, # Email and Ticket {&amp;#39;id&amp;#39; =&amp;gt; 418 }, # NESSUS_VULNERABILITY_ASSESSMENT_REPORTING {&amp;#39;id&amp;#39; =&amp;gt; 905 }, # REBOOT_REMOTE_CONSOLE {&amp;#39;id&amp;#39; =&amp;gt; 58 } # AUTOMATED_NOTIFICATION ] } order = client[&amp;#39;Product_Order&amp;#39;].</description>
    </item>
    
    <item>
      <title>Find Location specific pricing for a package</title>
      <link>https://softlayer.github.io/ruby/getLocationPricing/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getLocationPricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. In the following example we will query for the Dallas 10 data center for SoftLayer Virtual Guests.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>Find standard location pricing for a package</title>
      <link>https://softlayer.github.io/ruby/getStandardPricing/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getStandardPricing/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) object_filter = SoftLayer::ObjectFilter.new do |object_filter| object_filter.accept(&amp;#39;items.prices.locationGroupId&amp;#39;).when_it is_null end location = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] result = location.object_with_id(46).object_filter(object_filter).getItems pp result</description>
    </item>
    
    <item>
      <title>Create a snapshot schedule</title>
      <link>https://softlayer.github.io/ruby/enableSnapshots/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/enableSnapshots/</guid>
      <description>This method is not valid for Legacy iSCSI Storage Volumes. You need to have already purchased snapshot space for the script to work properly.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) storageId = 11657445 # Define parameters for snapshot scheduleType = &amp;#39;WEEKLY&amp;#39; retentionCount = &amp;#39;20&amp;#39; minute = &amp;#39;1&amp;#39; hour = &amp;#39;13&amp;#39; dayOfWeek = &amp;#39;SUNDAY&amp;#39; snap = client[&amp;#39;SoftLayer_Network_Storage&amp;#39;] enable = snap.</description>
    </item>
    
    <item>
      <title>Adding/Removing Servers in a Bandwidth Pool</title>
      <link>https://softlayer.github.io/ruby/adjustpool/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/adjustpool/</guid>
      <description>The following script allows you to add and remove servers in an existing bandwidth pool. The script requires empty arrays when not specifying a Bare Metal or Virtual Guest Id.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) pool_id = 123456 hardwareToAdd = [] hardwareToRemove = [] cloudsToAdd = [ {&amp;#39;id&amp;#39; =&amp;gt; 23123143 } ] cloudsToRemove = [] addRemove = client[&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;] item = addRemove.</description>
    </item>
    
    <item>
      <title>Attach and Detach a Block Device to a Virtual_Guest</title>
      <link>https://softlayer.github.io/ruby/attach_detach/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/attach_detach/</guid>
      <description>Attaching a currently detached portable block device to a given guest. The disk image will need to be migrated to the host the guest is on, so make sure to check if that host has enough disk space (with checkHostDiskAvailability) before attaching. This is only required for guests with local storage guests. SAN based guests don&amp;rsquo;t need that step.
Running this on a disk that is already attached will move the disk to the new guest.</description>
    </item>
    
    <item>
      <title>Creating a support ticket</title>
      <link>https://softlayer.github.io/ruby/create_ticket/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_ticket/</guid>
      <description>Standard support tickets&amp;rsquo; titles must be selected from a pre-determined list of ticket subjects, defined in the SoftLayer_Ticket_Subject service. The following example will output all of the Ticket Subjects:
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) subjects = client[&amp;#39;SoftLayer_Ticket_Subject&amp;#39;] getSubjects = subjects.getAllObjects() pp getSubjects Once you have the Ticket Subject ID you can pass it to createStandardTicket. In the following example we are opening a ticket under the subject Hardware Firewall Question (ID 1121).</description>
    </item>
    
    <item>
      <title>Get IPMI info for BMS</title>
      <link>https://softlayer.github.io/ruby/get_ipmi/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_ipmi/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) object_mask = &amp;#39;mask[networkManagementIpAddress,remoteManagementAccounts[username,password],id,fullyQualifiedDomainName]&amp;#39; item = client[&amp;#39;SoftLayer_Account&amp;#39;] getIPMI = item.object_mask(object_mask).getHardware pp getIPMI</description>
    </item>
    
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://softlayer.github.io/ruby/createBwPool/</link>
      <pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createBwPool/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) object_id = nil orderTemplate = { &amp;#39;accountId&amp;#39; =&amp;gt; xxxxx, &amp;#39;bandwidthAllotmentTypeId&amp;#39; =&amp;gt; 2, &amp;#39;locationGroupId&amp;#39; =&amp;gt; 1, &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;newRubyBwPool&amp;#39; } orderPool = client[&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;] item = orderPool.object_with_id(object_id).createObject(orderTemplate) pp item</description>
    </item>
    
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://softlayer.github.io/ruby/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createSnapshot/</guid>
      <description>Trigger a manual snapshot creation of a Block storage volume.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 network_storage_id = 1234567 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) createsnap = client[:Network_Storage_Iscsi].object_with_id(network_storage_id).createSnapshot pp createsnap The process can take sometime to complete. You can check the snapshots associated with a storage volume by using the code below:
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default.</description>
    </item>
    
    <item>
      <title>Get storage credentials for Block Storage</title>
      <link>https://softlayer.github.io/ruby/storage_creds/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/storage_creds/</guid>
      <description>The following script allows you retrieve the username and password for Performance/Endurance Block storage if you have authorized hosts against the storage.
require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 network_storage_id = 1234567 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) account_service = client[&amp;#39;SoftLayer_Network_Storage_Iscsi&amp;#39;] object_mask = &amp;#39;mask[allowedHardware[allowedHost[credential]],allowedVirtualGuests[allowedHost[credential]]]&amp;#39; item = account_service.object_mask(object_mask).object_with_id(network_storage_id).getObject pp item</description>
    </item>
    
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://softlayer.github.io/ruby/orderLB/</link>
      <pubDate>Wed, 18 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderLB/</guid>
      <description>require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; location = &amp;#39;DALLAS06&amp;#39; # The id of the SoftLayer_Product_Package you wish to order. # In this case it is a Local Load Balancer. packageId = 194 # Build a skeleton SoftLayer_Product_Item_Price objects. These objects contain # much more than ids, but SoftLayer&amp;#39;s ordering system only needs the price&amp;#39;s id # to know what you want to order. # Every item in SoftLayer&amp;#39;s product catalog is assigned an id.</description>
    </item>
    
    <item>
      <title>Calculating month-to-date cost of a Virtual_Guest</title>
      <link>https://softlayer.github.io/ruby/monthtodate/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/monthtodate/</guid>
      <description> require &amp;#39;softlayer_api&amp;#39; # Requires softlayer_api &amp;gt;= 3.2 require &amp;#39;pp&amp;#39; # used to display results # Create a client client = SoftLayer::Client.new # add your server id, can be found with the following script: https://softlayer.github.io/ruby/list_instances/ virtual_server_id = 12345678 item = client[:Virtual_Guest].object_mask(&amp;#34;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;#34;).object_with_id(virtual_server_id).getObject puts &amp;#34;Billing Item for Virtual Server:&amp;#34; pp item[&amp;#39;billingItem&amp;#39;] Example Output Billing Item for Virtual Server: {&amp;#34;createDate&amp;#34;=&amp;gt;&amp;#34;2016-01-29T12:23:43-06:00&amp;#34;, &amp;#34;currentHourlyCharge&amp;#34;=&amp;gt;&amp;#34;.023&amp;#34;, &amp;#34;hourlyRecurringFee&amp;#34;=&amp;gt;&amp;#34;.023&amp;#34;, &amp;#34;hoursUsed&amp;#34;=&amp;gt;&amp;#34;1&amp;#34;}</description>
    </item>
    
    <item>
      <title>Cancel an item or service</title>
      <link>https://softlayer.github.io/ruby/cancelservice/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/cancelservice/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; # Requires softlayer_api &amp;gt;= 3.2 require &amp;#39;pp&amp;#39; # used to display results # Create a client client = SoftLayer::Client.new # add your servers&amp;#39; id, can be found with the following script: https://softlayer.github.io/ruby/list_instances/ id_of_virtual_server_to_cancel = FILL_IN_YOUR_SERVERS_ID begin # Substitute :Virtual_Guest for :Hardware_Server if you want to cancel a bare metal server item = client[:Virtual_Guest].object_mask(&amp;#34;mask[billingItem[id]]&amp;#34;).object_with_id(id_of_virtual_server_to_cancel).getObject rescue XMLRPC::FaultException # error will be triggered if item doesn&amp;#39;t exist item = false end # # # Then invoke [cancelService](http://sldn.</description>
    </item>
    
    <item>
      <title>Determining your next bill</title>
      <link>https://softlayer.github.io/ruby/nextinvoice/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/nextinvoice/</guid>
      <description># SoftLayer library will look to see if these global variables are set when making a connection # more information here: https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L58 require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new total_amount = client[&amp;#39;Account&amp;#39;].getNextInvoiceTotalAmount puts &amp;#34;Next invoice total amount: #{total_amount}&amp;#34; Example Output Next invoice total amount: 250.</description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>https://softlayer.github.io/ruby/billingfromproduct/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/billingfromproduct/</guid>
      <description>In the following example we are looking for the Billing Item of an Endurance Storage volume with an ID of 1234567.
# add your network storage id, it can be found by doing this call: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNasNetworkStorage network_storage_id = 1234567 # item = client[:Network_Storage].object_mask(&amp;#34;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;#34;).object_with_id(network_storage_id).getObject pp item[&amp;#39;billingItem&amp;#39;]</description>
    </item>
    
    <item>
      <title>Place quote order</title>
      <link>https://softlayer.github.io/ruby/order_quote/</link>
      <pubDate>Sat, 28 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_quote/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new QUOTE_ID = 1234 quote = client[&amp;#39;Billing_Order_Quote&amp;#39;].object_with_id(QUOTE_ID) order = quote.getRecalculatedOrderContainer[&amp;#39;orderContainers&amp;#39;][0] order[&amp;#39;quantity&amp;#39;] = 1 order[&amp;#39;virtualGuests&amp;#39;] = [{ &amp;#39;hostname&amp;#39; =&amp;gt; &amp;#39;quotetest&amp;#39;, &amp;#39;domain&amp;#39; =&amp;gt; &amp;#39;example.com&amp;#39; }] order.delete(&amp;#39;hardware&amp;#39;) pp client[&amp;#39;Product_Order&amp;#39;].</description>
    </item>
    
    <item>
      <title>Password Auth</title>
      <link>https://softlayer.github.io/ruby/token_auth/</link>
      <pubDate>Sun, 15 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/token_auth/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; # Requires softlayer_api &amp;gt;= 3.2 # Create a client client = SoftLayer::Client.with_password( username: &amp;#39;change me&amp;#39;, password: &amp;#39;change me&amp;#39;) # Test our client puts client[&amp;#39;Account&amp;#39;].object_mask(&amp;#39;mask[id, apiAuthenticationKeys]&amp;#39;). getCurrentUser</description>
    </item>
    
    <item>
      <title>Find active VMs of specified creator</title>
      <link>https://softlayer.github.io/ruby/find_my_vms/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/find_my_vms/</guid>
      <description># Code example of how to list virtual instances from a SoftLayer account. # You can call the script from the command and provide the username you # want to filter on. The script expects that you have the SoftLayer gem # installed and have it configured with the credentials you&amp;#39;d like # to use with SoftLayer. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44. # # You can run the script with the username you&amp;#39;d like to check under # the account you have configured: # find_my_active_vms userid # # The output of the script is in a csv format with commas as the # column separator.</description>
    </item>
    
    <item>
      <title>List Packages</title>
      <link>https://softlayer.github.io/ruby/list_packages/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_packages/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Helper function to fetch through all results from SoftLayer api # using small page sizes and sleeping before every new page fetch. def fetch_all(service, method) records = []; offset = 0; limit = 10 loop do results = service.result_limit(offset, limit).send(method) records += results break if results.size &amp;lt; limit offset += limit sleep 3 end records end # Credentials to the SoftLayer API are grabbed from the config file by default.</description>
    </item>
    
    <item>
      <title>Determining SoftLayer Device Owners</title>
      <link>https://softlayer.github.io/ruby/determining_device_owners/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/determining_device_owners/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;vine&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new billing = client[&amp;#39;Account&amp;#39;] object_mask = &amp;#39;mask[fullyQualifiedDomainName,billingItem[categoryCode,description,createDate,orderItem[order[userRecord[username]]]]]&amp;#39; hardware_list = billing.object_mask(object_mask).getHardware virtual_guest_list = billing.object_mask(object_mask).getVirtualGuests def describe(item) domain_name = item.access(&amp;#39;fullyQualifiedDomainName&amp;#39;) || &amp;#39;no fullyQualifiedDomainName&amp;#39; category_code = item.access(&amp;#39;billingItem.categoryCode&amp;#39;) || &amp;#39;no categoryCode&amp;#39; description = item.access(&amp;#39;billingItem.description&amp;#39;) || &amp;#39;no description&amp;#39; create_date = item.access(&amp;#39;billingItem.createDate&amp;#39;) || &amp;#39;no createDate&amp;#39; user_name = item.access(&amp;#39;billingItem.orderItem.order.userRecord.username&amp;#39;) || &amp;#39;no username&amp;#39; return &amp;#34;&amp;#39;#{domain_name}&amp;#39;, category code: &amp;#39;#{category_code}&amp;#39;, &amp;#34;\ &amp;#34;description: &amp;#39;#{description}&amp;#39;, was created by: &amp;#39;#{user_name}&amp;#39; &amp;#34;\ &amp;#34;on &amp;#39;#{create_date}&amp;#39;&amp;#34; end for item in hardware_list do puts &amp;#34;Hardware &amp;#34; + describe(item) end for item in virtual_guest_list do puts &amp;#34;Virtual Guest &amp;#34; + describe(item) end</description>
    </item>
    
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>https://softlayer.github.io/ruby/create_server_from_template/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_server_from_template/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; IMAGE_ID = &amp;#39;foobar&amp;#39; # change me. Image template global ID. # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new order_template = { hostname: &amp;#39;test&amp;#39;, domain: &amp;#39;example.com&amp;#39;, datacenter: &amp;#39;hou02&amp;#39;, cores: 2, # 2 x 2.0 GHz Cores memory: 4, # 4GB RAM private_network_only: false, dedicated_host_only: false, #os_reference_code: &amp;#39;CENTOS_6_64&amp;#39;, # CentOS 6.latest minimal (64 bit) image_template: SoftLayer::ImageTemplate.template_with_global_id(IMAGE_ID), use_local_disk: false, # Use a SAN disk hourly: true # Charge me for hourly use, rather than monthly.</description>
    </item>
    
    <item>
      <title>List Instances</title>
      <link>https://softlayer.github.io/ruby/list_instances/</link>
      <pubDate>Tue, 06 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_instances/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new pp SoftLayer::VirtualServer.</description>
    </item>
    
    <item>
      <title>Set user permissions</title>
      <link>https://softlayer.github.io/ruby/set_permission/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/set_permission/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new user_service = client[&amp;#39;User_Customer&amp;#39;] # List the user permissions USER_ID = 172536 # Change me. User id of user to inspect. pp user_service.object_with_id(USER_ID).getPermissions # add permission new_permission = { keyName: &amp;#39;TICKET_ADD&amp;#39; } result = user_service.object_with_id(USER_ID).addPortalPermission(new_permission) unless result puts &amp;#39;Failed to add permission&amp;#39; exit 1 end # list user permissions again pp user_service.</description>
    </item>
    
    <item>
      <title>Server Locate</title>
      <link>https://softlayer.github.io/ruby/server_locate/</link>
      <pubDate>Tue, 30 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/server_locate/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; # gem install softlayer_api require &amp;#39;table_print&amp;#39; # gem install table_print # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new servers = SoftLayer::VirtualServer.find_servers(object_mask: &amp;#39;mask[location.pathString]&amp;#39;) location_info = servers.map do |server| datacenter, server_room, rack, slot = server[&amp;#39;location&amp;#39;][&amp;#39;pathString&amp;#39;].split(&amp;#39;.&amp;#39;) { server: server.fullyQualifiedDomainName, data_center: datacenter, server_room: server_room, rack: rack, slot: slot } end tp location_info</description>
    </item>
    
    <item>
      <title>Create child SoftLayer Account</title>
      <link>https://softlayer.github.io/ruby/create_account/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_account/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new account_service = client[&amp;#39;Account&amp;#39;] brand_service = client[&amp;#39;Brand&amp;#39;] brand = account_service.getBrand cust_account = { brandId: brand[&amp;#39;id&amp;#39;].to_i, # change me allowedPptpVpnQuantity: 1, claimedTaxExemptTxFlag: false, companyName: &amp;#39;&amp;#39;, # change me isReseller: 0, lateFeeProtectionFlag: true, firstName: &amp;#39;&amp;#39;, # change me lastName: &amp;#39;&amp;#39;, # change me email: &amp;#39;&amp;#39;, # change me officePhone: &amp;#39;&amp;#39;, # change me address1: &amp;#39;&amp;#39;, # change me city: &amp;#39;&amp;#39;, # change me state: &amp;#39;&amp;#39;, # change me postalCode: &amp;#39;&amp;#39;, # change me country: &amp;#39;&amp;#39; # change me } puts &amp;#39;&amp;#39; pp cust_account puts &amp;#39;&amp;#39; begin result = brand_service.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://softlayer.github.io/ruby/externalBindingUsers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/externalBindingUsers/</guid>
      <description>title: &amp;ldquo;Show user accounts with and without two-factor enabled&amp;rdquo; description: &amp;ldquo;Get a list of users with two-factor authentication enabled/disabled. &amp;ldquo; date: &amp;ldquo;2017-08-09&amp;rdquo; classes: - &amp;ldquo;SoftLayer_Account&amp;rdquo; tags: - &amp;ldquo;objectFilter&amp;rdquo;
- &amp;ldquo;objectMask&amp;rdquo; To get a list of users with Two-Factor authentication enabled.
=begin @author Ryan Tiffany =end require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Connect to SoftLayer client = SoftLayer::Client.new(:timeout =&amp;gt; 120) mask = &amp;#39;mask[id,username,firstName,lastName,externalBindingCount,externalBindings]&amp;#39; theFilter = { &amp;#39;users&amp;#39; =&amp;gt; { &amp;#39;externalBindings&amp;#39; =&amp;gt; { &amp;#39;active&amp;#39; =&amp;gt; { &amp;#39;operation&amp;#39; =&amp;gt; &amp;#39;1&amp;#39; }}} } getUsers = client[&amp;#39;SoftLayer_Account&amp;#39;].</description>
    </item>
    
  </channel>
</rss>