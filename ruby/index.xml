<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on SoftLayer API</title>
    <link>https://softlayer.github.io/ruby/</link>
    <description>Recent content in Ruby on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://softlayer.github.io/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create a new virtual server and attach Security Groups</title>
      <link>https://softlayer.github.io/ruby/vsiSecGroups/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/vsiSecGroups/</guid>
      <description>To get a list of Security Groups you can attach to a Virtual Guest you can run the following code:
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getGroups = client[&#39;Network_SecurityGroup&#39;].getAllObjects pp getGroups  Once you have the Security Group IDs you would like to use you can plug them in to the following example:
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) productOrder = { &#39;hostname&#39; =&amp;gt; &#39;rubysectest&#39;, &#39;domain&#39; =&amp;gt; &#39;cde.</description>
    </item>
    
    <item>
      <title>Ordering Raid</title>
      <link>https://softlayer.github.io/ruby/orderingRaid/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderingRaid/</guid>
      <description>As a SoftLayer user, you have probably seen the beautiful RAID Configurator that greets you when you order a server on the SoftLayer website.
It allows you to do anything you like, from a straight RAID configuration involving all drives in a single disk array, to a much more intricate configuration with nearly any mix of disks and RAID types.
However beautiful and practical the interface, sometimes you want to script this process, and the SoftLayer mantra of &amp;ldquo;Anything you can do in the Web interface, you can do on the API&amp;rdquo; also rings true in this case.</description>
    </item>
    
    <item>
      <title>Add and remove rules in a Security group</title>
      <link>https://softlayer.github.io/ruby/addRemoveSecurityGroupRules/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/addRemoveSecurityGroupRules/</guid>
      <description>Adding Rules =begin @author Ryan Tiffany =end require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) secGroupId = 84301 # Create an object template to create the item. objectTemplate = { &#39;direction&#39; =&amp;gt; &#39;ingress&#39;, &#39;protocol&#39; =&amp;gt; &#39;tcp&#39;, &#39;portRangeMin&#39; =&amp;gt; 22, &#39;portRangeMax&#39; =&amp;gt; 22, &#39;ethertype&#39; =&amp;gt; &#39;IPv4&#39;, &#39;remoteIp&#39; =&amp;gt; &#39;0.0.0.0/0&#39; } newRules = client[&#39;SoftLayer_Network_SecurityGroup&#39;].object_with_id(secGroupId).addRules([objectTemplate]) pp newRules  Removing rules =begin @author Ryan Tiffany =end require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>Create a Security group</title>
      <link>https://softlayer.github.io/ruby/createSecurityGroup/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createSecurityGroup/</guid>
      <description>=begin @author Ryan Tiffany =end require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) objectTemplate = { &#39;name&#39; =&amp;gt; &#39;rubyExampleCreation&#39;, &#39;description&#39; =&amp;gt; &#39;Sec Group created via ruby&#39; } createGroup = client[&#39;SoftLayer_Network_SecurityGroup&#39;].createObjects([objectTemplate]) pp createGroup  </description>
    </item>
    
    <item>
      <title>Get Dedicated Host Allocation</title>
      <link>https://softlayer.github.io/ruby/getDedicatedHostAllocation/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getDedicatedHostAllocation/</guid>
      <description>The first thing you need to get is a list of the Dedicated Hosts on your account. To list the Dedicated Hosts on your account you can use the following code:
require &#39;softlayer_api&#39; require &#39;pp&#39; # Connect to SoftLayer client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getDediHosts = client[&#39;SoftLayer_Account&#39;].getDedicatedHosts pp getDediHosts  Once you have the Dedicated Host ID you can use the following code to retrieve the resource allocations on the host.</description>
    </item>
    
    <item>
      <title>Get Dedicated Host Guests</title>
      <link>https://softlayer.github.io/ruby/getDedicatedHostGuests/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getDedicatedHostGuests/</guid>
      <description>The first thing you need to get is a list of the Dedicated Hosts on your account. To list the Dedicated Hosts on your account you can use the following code:
require &#39;softlayer_api&#39; require &#39;pp&#39; # Connect to SoftLayer client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getDediHosts = client[&#39;SoftLayer_Account&#39;].getDedicatedHosts pp getDediHosts  Once you have the Dedicated Host ID you can use the following code to retrieve the Virtual Guests on the host.</description>
    </item>
    
    <item>
      <title>Get Security Group Details</title>
      <link>https://softlayer.github.io/ruby/getSecurityGroupDetails/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getSecurityGroupDetails/</guid>
      <description>=begin @author Ryan Tiffany =end require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) secGroupId = 70501 getAll = client[&#39;SoftLayer_Network_SecurityGroup&#39;].object_with_id(secGroupId).getAllObjects pp getAll  </description>
    </item>
    
    <item>
      <title>Migrate a VSI between dedicated hosts</title>
      <link>https://softlayer.github.io/ruby/migrateDedicatedInstance/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/migrateDedicatedInstance/</guid>
      <description>The first thing you need to get is a list of the Dedicated Hosts on your account. To list the Dedicated Hosts on your account you can use the following code:
require &#39;softlayer_api&#39; require &#39;pp&#39; # Connect to SoftLayer client = SoftLayer::Client.new(:timeout =&amp;gt; 120) getDediHosts = client[&#39;SoftLayer_Account&#39;].getDedicatedHosts pp getDediHosts  Once you have the Dedicated Host ID you can use the following code to migrate the Virtual Guest to another host.</description>
    </item>
    
    <item>
      <title>Get Virtual Console Virtual Guest</title>
      <link>https://softlayer.github.io/ruby/getKvmDetails/</link>
      <pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getKvmDetails/</guid>
      <description>=begin @author Ryan Tiffany =end require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) virtual_server_id = 31678643 mask = &#39;mask[consoleIpAddressRecord[ipAddress[ipAddress],port],operatingSystem[passwords]]&#39; getDetails = client[&#39;SoftLayer_Virtual_Guest&#39;].object_mask(mask).object_with_id(virtual_server_id).getObject pp getDetails  </description>
    </item>
    
    <item>
      <title>Show storage on all Virtual Guests</title>
      <link>https://softlayer.github.io/ruby/listVsiBlockDeviceSizes/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/listVsiBlockDeviceSizes/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; # Create a SoftLayer API client object client = SoftLayer::Client.new() account_service = client[&#39;SoftLayer_Account&#39;] # We will retrieve the additional information for each VSI: mask = &#39;mask[id,hostname,blockDevices[id,mountType,diskImage[capacity]]]&#39; begin # getVirtualGuests() will get all the VSIs that an account has. result = account_service.object_mask(mask).getVirtualGuests pp result rescue StandardError =&amp;gt; exception puts &amp;quot;Unable to get the VSIs: #{exception}&amp;quot; end  </description>
    </item>
    
    <item>
      <title>Get Notifications</title>
      <link>https://softlayer.github.io/ruby/getNotifications/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getNotifications/</guid>
      <description>Retrieves all notifications that were created on January 1, 2016.
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) theDate = &#39;01/01/2017 01:00:00&#39; theFilter = { &#39;startDate&#39;=&amp;gt; { &#39;operation&#39;=&amp;gt; &#39;greaterThanDate&#39;, &#39;options&#39;=&amp;gt; [ {&#39;name&#39;=&amp;gt; &#39;date&#39;, &#39;value&#39; =&amp;gt; [theDate]} ] } } getresults = client[&#39;SoftLayer_Notification_Occurrence_Event&#39;].getAllObjects(filter=theFilter) pp getresults  </description>
    </item>
    
    <item>
      <title>Reload with SSH keys</title>
      <link>https://softlayer.github.io/ruby/reloadWithSshhardware/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reloadWithSshhardware/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) imageId = 1234567 sshKey1 = 876543 sshKey2 = 456789 serverId = 1154265 config = { &#39;imageTemplateId&#39;=&amp;gt; imageId, &#39;sshKeyIds&#39; =&amp;gt; [sshKey1, sshKey2] } setclient = client[&#39;Hardware_Server&#39;] reload = setclient.object_with_id(serverId).reloadOperatingSystem(&#39;FORCE&#39;, config) pp reload	 </description>
    </item>
    
    <item>
      <title>Order a Netscaler</title>
      <link>https://softlayer.github.io/ruby/orderNetscaler/</link>
      <pubDate>Fri, 31 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderNetscaler/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) config = { &#39;orderContainers&#39; =&amp;gt; [ {&amp;quot;hardware&amp;quot; =&amp;gt; [{ &amp;quot;primaryBackendNetworkComponent&amp;quot; =&amp;gt; { # REPLACE THIS &amp;quot;networkVlanId&amp;quot; =&amp;gt; 1211234 }, &amp;quot;primaryNetworkComponent&amp;quot; =&amp;gt; { # REPLACE THIS &amp;quot;networkVlanId&amp;quot; =&amp;gt; 1212456 } }], # REPLACE THIS with your location &amp;quot;location&amp;quot; =&amp;gt; &amp;quot;DALLAS09&amp;quot;, &amp;quot;packageId&amp;quot; =&amp;gt; 192, &amp;quot;quantity&amp;quot; =&amp;gt; 1, # Price IDS for Netscaler and 2 IPs &amp;quot;prices&amp;quot; =&amp;gt; [ {&amp;quot;id&amp;quot; =&amp;gt; 44964}, {&amp;quot;id&amp;quot; =&amp;gt; 17238} ] }] } order = client[&#39;Product_Order&#39;].</description>
    </item>
    
    <item>
      <title>Reloading a server with a custom partition scheme</title>
      <link>https://softlayer.github.io/ruby/reloadCustomPartition/</link>
      <pubDate>Fri, 31 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/reloadCustomPartition/</guid>
      <description>The following code allows you to reload a Bare Metal server with a custom partitioning scheme. You simply need to change the serverId and the partitions to suit your needs. Note that one partition must be marked as the &amp;lsquo;grow&amp;rsquo; partition.
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) server_id = 1154505 config = { &#39;upgradeHardDriveFirmware&#39; =&amp;gt; 0, &#39;upgradeBios&#39; =&amp;gt; 0, &#39;hardDrives&#39; =&amp;gt; [ { &#39;complexType&#39; =&amp;gt; &amp;quot;SoftLayer_Hardware_Component_HardDrive&amp;quot;, &#39;partitions&#39; =&amp;gt; [ { &#39;name&#39; =&amp;gt; { &amp;quot;/&amp;quot; =&amp;gt; { &amp;quot;minimumSize&amp;quot; =&amp;gt; &amp;quot;100&amp;quot;} } }, { &#39;name&#39; =&amp;gt; { &amp;quot;/boot&amp;quot; =&amp;gt; { &amp;quot;minimumSize&amp;quot; =&amp;gt; &amp;quot;.</description>
    </item>
    
    <item>
      <title>Get verbose details about a Bare Metal Server</title>
      <link>https://softlayer.github.io/ruby/getVerboseBmDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getVerboseBmDetails/</guid>
      <description>This script will get the Packages, Categories, and items associated with a Bare Metal Server.
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) hardware_id = 26961063 object_mask = &#39;mask[id,fullyQualifiedDomainName,billingItem[id,item[id,description],category[name,id],children[id,item[id,description],category[name,id]]]]&#39; getDetails = client[&#39;SoftLayer_Hardware&#39;].object_mask(object_mask).object_with_id(hardware_id).getObject pp getDetails  </description>
    </item>
    
    <item>
      <title>Get verbose details about a Virtual Guest</title>
      <link>https://softlayer.github.io/ruby/getVerboseVsiDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getVerboseVsiDetails/</guid>
      <description>This script will get the Packages, Categories, and items associated with a Virtual Guest.
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) virtual_server_id = 26961063 object_mask = &#39;mask[id,fullyQualifiedDomainName,billingItem[id,item[id,description],category[name,id],children[id,item[id,description],category[name,id]]]]&#39; getDetails = client[&#39;SoftLayer_Virtual_Guest&#39;].object_mask(object_mask).object_with_id(virtual_server_id).getObject pp getDetails  </description>
    </item>
    
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://softlayer.github.io/ruby/migrateVsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/migrateVsi/</guid>
      <description>You can use the following ruby example to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.
require &#39;softlayer_api&#39; require &#39;pp&#39; softlayer_client = SoftLayer::Client.new(:timeout =&amp;gt; 120) client = softlayer_client.service_named(&#39;Product_Order&#39;) # The package for Virtual Guests packageId = 46 # The price item id for a 25GB Local Primary Drive.</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>https://softlayer.github.io/ruby/createVSI/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createVSI/</guid>
      <description>When you are ready to place the order change verifyOrder(productOrder) to placeOrder(productOrder).
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) productOrder = { &#39;virtualGuests&#39; =&amp;gt; [{ &#39;hostname&#39; =&amp;gt; &#39;testRuby&#39;, &#39;domain&#39; =&amp;gt; &#39;example.com&#39;, &#39;primaryBackendNetworkComponent&#39; =&amp;gt; { &#39;networkVlan&#39; =&amp;gt; { &#39;id&#39; =&amp;gt; 1286783 } } }], &#39;location&#39; =&amp;gt; 1441195, &#39;packageId&#39; =&amp;gt; 46, &#39;operatingSystemReferenceCode&#39; =&amp;gt; &#39;CENTOS_6_64&#39;, &#39;useHourlyPricing&#39; =&amp;gt; false, &#39;prices&#39; =&amp;gt; [ {&#39;id&#39; =&amp;gt; 1640 }, # 1 x 2.0 GHz Core {&#39;id&#39; =&amp;gt; 1644 }, # 1 GB RAM {&#39;id&#39; =&amp;gt; 13945 }, # CENTOS_6_64 {&#39;id&#39; =&amp;gt; 1639 }, # 100 GB (SAN) First Disk {&#39;id&#39; =&amp;gt; 2277 }, # 100 GB (SAN) Second Disk {&#39;id&#39; =&amp;gt; 50367 }, # 250 GB Bandwidth {&#39;id&#39; =&amp;gt; 274 }, # 1 Gbps Public &amp;amp; Private Network Uplinks {&#39;id&#39; =&amp;gt; 21 }, # 1 IP Address {&#39;id&#39; =&amp;gt; 420 }, # Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account {&#39;id&#39; =&amp;gt; 56 }, # Host Ping and TCP Service Monitoring {&#39;id&#39; =&amp;gt; 57 }, # Email and Ticket {&#39;id&#39; =&amp;gt; 418 }, # NESSUS_VULNERABILITY_ASSESSMENT_REPORTING {&#39;id&#39; =&amp;gt; 905 }, # REBOOT_REMOTE_CONSOLE {&#39;id&#39; =&amp;gt; 58 } # AUTOMATED_NOTIFICATION ] } order = client[&#39;Product_Order&#39;].</description>
    </item>
    
    <item>
      <title>Find Location specific pricing for a package</title>
      <link>https://softlayer.github.io/ruby/getLocationPricing/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getLocationPricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. In the following example we will query for the Dallas 10 data center for SoftLayer Virtual Guests.
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.</description>
    </item>
    
    <item>
      <title>Find standard location pricing for a package</title>
      <link>https://softlayer.github.io/ruby/getStandardPricing/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/getStandardPricing/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) object_filter = SoftLayer::ObjectFilter.new do |object_filter| object_filter.accept(&#39;items.prices.locationGroupId&#39;).when_it is_null end location = client[&#39;SoftLayer_Product_Package&#39;] result = location.object_with_id(46).object_filter(object_filter).getItems pp result  </description>
    </item>
    
    <item>
      <title>Create a snapshot schedule</title>
      <link>https://softlayer.github.io/ruby/enableSnapshots/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/enableSnapshots/</guid>
      <description>This method is not valid for Legacy iSCSI Storage Volumes. You need to have already purchased snapshot space for the script to work properly.
require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) storageId = 11657445 # Define parameters for snapshot scheduleType = &#39;WEEKLY&#39; retentionCount = &#39;20&#39; minute = &#39;1&#39; hour = &#39;13&#39; dayOfWeek = &#39;SUNDAY&#39; snap = client[&#39;SoftLayer_Network_Storage&#39;] enable = snap.</description>
    </item>
    
    <item>
      <title>Adding/Removing Servers in a Bandwidth Pool</title>
      <link>https://softlayer.github.io/ruby/adjustpool/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/adjustpool/</guid>
      <description>The following script allows you to add and remove servers in an existing bandwidth pool. The script requires empty arrays when not specifying a Bare Metal or Virtual Guest Id.
require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) pool_id = 123456 hardwareToAdd = [] hardwareToRemove = [] cloudsToAdd = [ {&#39;id&#39; =&amp;gt; 23123143 } ] cloudsToRemove = [] addRemove = client[&#39;SoftLayer_Network_Bandwidth_Version1_Allotment&#39;] item = addRemove.</description>
    </item>
    
    <item>
      <title>Attach and Detach a Block Device to a Virtual_Guest</title>
      <link>https://softlayer.github.io/ruby/attach_detach/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/attach_detach/</guid>
      <description>Attaching a currently detached portable block device to a given guest. The disk image will need to be migrated to the host the guest is on, so make sure to check if that host has enough disk space (with checkHostDiskAvailability) before attaching. This is only required for guests with local storage guests. SAN based guests don&amp;rsquo;t need that step.
Running this on a disk that is already attached will move the disk to the new guest.</description>
    </item>
    
    <item>
      <title>Creating a support ticket</title>
      <link>https://softlayer.github.io/ruby/create_ticket/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_ticket/</guid>
      <description>Standard support tickets&amp;rsquo; titles must be selected from a pre-determined list of ticket subjects, defined in the SoftLayer_Ticket_Subject service. The following example will output all of the Ticket Subjects:
require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) subjects = client[&#39;SoftLayer_Ticket_Subject&#39;] getSubjects = subjects.getAllObjects() pp getSubjects  Once you have the Ticket Subject ID you can pass it to createStandardTicket. In the following example we are opening a ticket under the subject Hardware Firewall Question (ID 1121).</description>
    </item>
    
    <item>
      <title>Get IPMI info for BMS</title>
      <link>https://softlayer.github.io/ruby/get_ipmi/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/get_ipmi/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) object_mask = &#39;mask[networkManagementIpAddress,remoteManagementAccounts[username,password],id,fullyQualifiedDomainName]&#39; item = client[&#39;SoftLayer_Account&#39;] getIPMI = item.object_mask(object_mask).getHardware pp getIPMI  </description>
    </item>
    
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://softlayer.github.io/ruby/createBwPool/</link>
      <pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createBwPool/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) object_id = nil orderTemplate = { &#39;accountId&#39; =&amp;gt; xxxxx, &#39;bandwidthAllotmentTypeId&#39; =&amp;gt; 2, &#39;locationGroupId&#39; =&amp;gt; 1, &#39;name&#39; =&amp;gt; &#39;newRubyBwPool&#39; } orderPool = client[&#39;SoftLayer_Network_Bandwidth_Version1_Allotment&#39;] item = orderPool.object_with_id(object_id).createObject(orderTemplate) pp item  </description>
    </item>
    
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://softlayer.github.io/ruby/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/createSnapshot/</guid>
      <description>Trigger a manual snapshot creation of a Block storage volume.
require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 network_storage_id = 1234567 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) createsnap = client[:Network_Storage_Iscsi].object_with_id(network_storage_id).createSnapshot pp createsnap  The process can take sometime to complete. You can check the snapshots associated with a storage volume by using the code below:
require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the API are read from a configuration file by default.</description>
    </item>
    
    <item>
      <title>Get storage credentials for Block Storage</title>
      <link>https://softlayer.github.io/ruby/storage_creds/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/storage_creds/</guid>
      <description>The following script allows you retrieve the username and password for Performance/Endurance Block storage if you have authorized hosts against the storage.
require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 network_storage_id = 1234567 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) account_service = client[&#39;SoftLayer_Network_Storage_Iscsi&#39;] object_mask = &#39;mask[allowedHardware[allowedHost[credential]],allowedVirtualGuests[allowedHost[credential]]]&#39; item = account_service.object_mask(object_mask).object_with_id(network_storage_id).getObject pp item  </description>
    </item>
    
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://softlayer.github.io/ruby/orderLB/</link>
      <pubDate>Wed, 18 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/orderLB/</guid>
      <description>require &#39;rubygems&#39; require &#39;softlayer_api&#39; location = &#39;DALLAS06&#39; # The id of the SoftLayer_Product_Package you wish to order. # In this case it is a Local Load Balancer. packageId = 194 # Build a skeleton SoftLayer_Product_Item_Price objects. These objects contain # much more than ids, but SoftLayer&#39;s ordering system only needs the price&#39;s id # to know what you want to order. # Every item in SoftLayer&#39;s product catalog is assigned an id.</description>
    </item>
    
    <item>
      <title>Calculating month-to-date cost of a Virtual_Guest</title>
      <link>https://softlayer.github.io/ruby/monthtodate/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/monthtodate/</guid>
      <description> require &#39;softlayer_api&#39; # Requires softlayer_api &amp;gt;= 3.2 require &#39;pp&#39; # used to display results # Create a client client = SoftLayer::Client.new # add your server id, can be found with the following script: https://softlayer.github.io/ruby/list_instances/ virtual_server_id = 12345678 item = client[:Virtual_Guest].object_mask(&amp;quot;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;quot;).object_with_id(virtual_server_id).getObject puts &amp;quot;Billing Item for Virtual Server:&amp;quot; pp item[&#39;billingItem&#39;]  Example Output Billing Item for Virtual Server: {&amp;quot;createDate&amp;quot;=&amp;gt;&amp;quot;2016-01-29T12:23:43-06:00&amp;quot;, &amp;quot;currentHourlyCharge&amp;quot;=&amp;gt;&amp;quot;.023&amp;quot;, &amp;quot;hourlyRecurringFee&amp;quot;=&amp;gt;&amp;quot;.023&amp;quot;, &amp;quot;hoursUsed&amp;quot;=&amp;gt;&amp;quot;1&amp;quot;}  </description>
    </item>
    
    <item>
      <title>Cancel an item or service</title>
      <link>https://softlayer.github.io/ruby/cancelservice/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/cancelservice/</guid>
      <description>require &#39;softlayer_api&#39; # Requires softlayer_api &amp;gt;= 3.2 require &#39;pp&#39; # used to display results # Create a client client = SoftLayer::Client.new # add your servers&#39; id, can be found with the following script: https://softlayer.github.io/ruby/list_instances/ id_of_virtual_server_to_cancel = FILL_IN_YOUR_SERVERS_ID begin # Substitute :Virtual_Guest for :Hardware_Server if you want to cancel a bare metal server item = client[:Virtual_Guest].object_mask(&amp;quot;mask[billingItem[id]]&amp;quot;).object_with_id(id_of_virtual_server_to_cancel).getObject rescue XMLRPC::FaultException # error will be triggered if item doesn&#39;t exist item = false end # # # Then invoke [cancelService](http://sldn.</description>
    </item>
    
    <item>
      <title>Determining your next bill</title>
      <link>https://softlayer.github.io/ruby/nextinvoice/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/nextinvoice/</guid>
      <description> # SoftLayer library will look to see if these global variables are set when making a connection # more information here: https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L58 require &#39;softlayer_api&#39; require &#39;pp&#39; client = SoftLayer::Client.new total_amount = client[&#39;Account&#39;].getNextInvoiceTotalAmount puts &amp;quot;Next invoice total amount: #{total_amount}&amp;quot;  Example Output Next invoice total amount: 250.26  </description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>https://softlayer.github.io/ruby/billingfromproduct/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/billingfromproduct/</guid>
      <description>In the following example we are looking for the Billing Item of an Endurance Storage volume with an ID of 1234567.
# add your network storage id, it can be found by doing this call: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNasNetworkStorage network_storage_id = 1234567 # item = client[:Network_Storage].object_mask(&amp;quot;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;quot;).object_with_id(network_storage_id).getObject pp item[&#39;billingItem&#39;]  </description>
    </item>
    
    <item>
      <title>Place quote order</title>
      <link>https://softlayer.github.io/ruby/order_quote/</link>
      <pubDate>Sat, 28 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/order_quote/</guid>
      <description>require &#39;softlayer_api&#39; # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new QUOTE_ID = 1234 quote = client[&#39;Billing_Order_Quote&#39;].object_with_id(QUOTE_ID) order = quote.getRecalculatedOrderContainer[&#39;orderContainers&#39;][0] order[&#39;quantity&#39;] = 1 order[&#39;virtualGuests&#39;] = [{ &#39;hostname&#39; =&amp;gt; &#39;quotetest&#39;, &#39;domain&#39; =&amp;gt; &#39;example.com&#39; }] order.delete(&#39;hardware&#39;) pp client[&#39;Product_Order&#39;].placeOrder(order)  </description>
    </item>
    
    <item>
      <title>Password Auth</title>
      <link>https://softlayer.github.io/ruby/token_auth/</link>
      <pubDate>Sun, 15 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/token_auth/</guid>
      <description>require &#39;softlayer_api&#39; # Requires softlayer_api &amp;gt;= 3.2 # Create a client client = SoftLayer::Client.with_password( username: &#39;change me&#39;, password: &#39;change me&#39;) # Test our client puts client[&#39;Account&#39;].object_mask(&#39;mask[id, apiAuthenticationKeys]&#39;). getCurrentUser  </description>
    </item>
    
    <item>
      <title>Find active VMs of specified creator</title>
      <link>https://softlayer.github.io/ruby/find_my_vms/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/find_my_vms/</guid>
      <description># Code example of how to list virtual instances from a SoftLayer account. # You can call the script from the command and provide the username you # want to filter on. The script expects that you have the SoftLayer gem # installed and have it configured with the credentials you&#39;d like # to use with SoftLayer. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44. # # You can run the script with the username you&#39;d like to check under # the account you have configured: # find_my_active_vms userid # # The output of the script is in a csv format with commas as the # column separator.</description>
    </item>
    
    <item>
      <title>List Packages</title>
      <link>https://softlayer.github.io/ruby/list_packages/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_packages/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; # Helper function to fetch through all results from SoftLayer api # using small page sizes and sleeping before every new page fetch. def fetch_all(service, method) records = []; offset = 0; limit = 10 loop do results = service.result_limit(offset, limit).send(method) records += results break if results.size &amp;lt; limit offset += limit sleep 3 end records end # Credentials to the SoftLayer API are grabbed from the config file by default.</description>
    </item>
    
    <item>
      <title>Determining SoftLayer Device Owners</title>
      <link>https://softlayer.github.io/ruby/determining_device_owners/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/determining_device_owners/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;vine&#39; require &#39;pp&#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new billing = client[&#39;Account&#39;] object_mask = &#39;mask[fullyQualifiedDomainName,billingItem[categoryCode,description,createDate,orderItem[order[userRecord[username]]]]]&#39; hardware_list = billing.object_mask(object_mask).getHardware virtual_guest_list = billing.object_mask(object_mask).getVirtualGuests def describe(item) domain_name = item.access(&#39;fullyQualifiedDomainName&#39;) || &#39;no fullyQualifiedDomainName&#39; category_code = item.access(&#39;billingItem.categoryCode&#39;) || &#39;no categoryCode&#39; description = item.access(&#39;billingItem.description&#39;) || &#39;no description&#39; create_date = item.access(&#39;billingItem.createDate&#39;) || &#39;no createDate&#39; user_name = item.access(&#39;billingItem.orderItem.order.userRecord.username&#39;) || &#39;no username&#39; return &amp;quot;&#39;#{domain_name}&#39;, category code: &#39;#{category_code}&#39;, &amp;quot;\ &amp;quot;description: &#39;#{description}&#39;, was created by: &#39;#{user_name}&#39; &amp;quot;\ &amp;quot;on &#39;#{create_date}&#39;&amp;quot; end for item in hardware_list do puts &amp;quot;Hardware &amp;quot; + describe(item) end for item in virtual_guest_list do puts &amp;quot;Virtual Guest &amp;quot; + describe(item) end  </description>
    </item>
    
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>https://softlayer.github.io/ruby/create_server_from_template/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_server_from_template/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; IMAGE_ID = &#39;foobar&#39; # change me. Image template global ID. # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new order_template = { hostname: &#39;test&#39;, domain: &#39;example.com&#39;, datacenter: &#39;hou02&#39;, cores: 2, # 2 x 2.0 GHz Cores memory: 4, # 4GB RAM private_network_only: false, dedicated_host_only: false, #os_reference_code: &#39;CENTOS_6_64&#39;, # CentOS 6.latest minimal (64 bit) image_template: SoftLayer::ImageTemplate.template_with_global_id(IMAGE_ID), use_local_disk: false, # Use a SAN disk hourly: true # Charge me for hourly use, rather than monthly.</description>
    </item>
    
    <item>
      <title>List Instances</title>
      <link>https://softlayer.github.io/ruby/list_instances/</link>
      <pubDate>Tue, 06 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/list_instances/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new pp SoftLayer::VirtualServer.find_servers  </description>
    </item>
    
    <item>
      <title>Set user permissions</title>
      <link>https://softlayer.github.io/ruby/set_permission/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/set_permission/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new user_service = client[&#39;User_Customer&#39;] # List the user permissions USER_ID = 172536 # Change me. User id of user to inspect. pp user_service.object_with_id(USER_ID).getPermissions # add permission new_permission = { keyName: &#39;TICKET_ADD&#39; } result = user_service.object_with_id(USER_ID).addPortalPermission(new_permission) unless result puts &#39;Failed to add permission&#39; exit 1 end # list user permissions again pp user_service.</description>
    </item>
    
    <item>
      <title>Server Locate</title>
      <link>https://softlayer.github.io/ruby/server_locate/</link>
      <pubDate>Tue, 30 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/server_locate/</guid>
      <description>require &#39;softlayer_api&#39; # gem install softlayer_api require &#39;table_print&#39; # gem install table_print # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new servers = SoftLayer::VirtualServer.find_servers(object_mask: &#39;mask[location.pathString]&#39;) location_info = servers.map do |server| datacenter, server_room, rack, slot = server[&#39;location&#39;][&#39;pathString&#39;].split(&#39;.&#39;) { server: server.fullyQualifiedDomainName, data_center: datacenter, server_room: server_room, rack: rack, slot: slot } end tp location_info  </description>
    </item>
    
    <item>
      <title>Create child SoftLayer Account</title>
      <link>https://softlayer.github.io/ruby/create_account/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/create_account/</guid>
      <description>require &#39;softlayer_api&#39; require &#39;pp&#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new account_service = client[&#39;Account&#39;] brand_service = client[&#39;Brand&#39;] brand = account_service.getBrand cust_account = { brandId: brand[&#39;id&#39;].to_i, # change me allowedPptpVpnQuantity: 1, claimedTaxExemptTxFlag: false, companyName: &#39;&#39;, # change me isReseller: 0, lateFeeProtectionFlag: true, firstName: &#39;&#39;, # change me lastName: &#39;&#39;, # change me email: &#39;&#39;, # change me officePhone: &#39;&#39;, # change me address1: &#39;&#39;, # change me city: &#39;&#39;, # change me state: &#39;&#39;, # change me postalCode: &#39;&#39;, # change me country: &#39;&#39; # change me } puts &#39;&#39; pp cust_account puts &#39;&#39; begin result = brand_service.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://softlayer.github.io/ruby/externalBindingUsers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://softlayer.github.io/ruby/externalBindingUsers/</guid>
      <description>title: &amp;ldquo;Show user accounts with and without two-factor enabled&amp;rdquo; description: &amp;ldquo;Get a list of users with two-factor authentication enabled/disabled. &amp;ldquo; date: &amp;ldquo;2017-08-09&amp;rdquo; classes: - &amp;ldquo;SoftLayer_Account&amp;rdquo; tags: - &amp;ldquo;objectFilter&amp;rdquo;
- &amp;ldquo;objectMask&amp;rdquo; To get a list of users with Two-Factor authentication enabled.
=begin @author Ryan Tiffany =end require &#39;softlayer_api&#39; require &#39;pp&#39; # Connect to SoftLayer client = SoftLayer::Client.new(:timeout =&amp;gt; 120) mask = &#39;mask[id,username,firstName,lastName,externalBindingCount,externalBindings]&#39; theFilter = { &#39;users&#39; =&amp;gt; { &#39;externalBindings&#39; =&amp;gt; { &#39;active&#39; =&amp;gt; { &#39;operation&#39; =&amp;gt; &#39;1&#39; }}} } getUsers = client[&#39;SoftLayer_Account&#39;].</description>
    </item>
    
  </channel>
</rss>